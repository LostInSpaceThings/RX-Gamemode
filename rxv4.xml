<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="file:///C|/Users/jdawg/OneDrive/Documents/server folder/qawno/xml/pawndoc.xsl" type="text/xsl"?>
<doc source="C:\Users\jdawg\OneDrive\Documents\server folder\gamemodes\rxv4.pwn">
	<assembly>
		<name>rxv4.pwn</name>
	</assembly>

	<!-- general -->
	<general>
		<library name="open.mp" summary="open.mp includes entry point.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="args" summary="Script arguments support functions.">  <license>  (c) Copyright 2005, ITB CompuPhase  This file is provided as is (no warranties).  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="console" summary="Console output.">  <license>  (c) Copyright 1998-2011, ITB CompuPhase  This file is provided as is (no warranties).  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_core" summary="open.mp core functions and defines.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_variable" summary="open.mp player functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_actor" summary="open.mp actor functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_checkpoint" summary="open.mp checkpoint functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_class" summary="open.mp class functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_database" summary="open.mp SQLite functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_dialog" summary="open.mp dialog functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_gangzone" summary="open.mp text draw functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_http" summary="open.mp legacy HTTP include.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p /><p/> <p/><p/> <library name="omp_menu" summary="open.mp menu functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_network" summary="open.mp core functions and defines.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_object" summary="open.mp object functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_pickup" summary="open.mp pickup functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_textdraw" summary="open.mp text draw functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_variable" summary="open.mp global data functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_vehicle" summary="open.mp vehicle functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_textlabel" summary="open.mp 3D text label functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="amx_assembly addressof_light" summary="AMX Assembly Library: `addressof` function address  lookup, with fewer dependencies.">  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library  name="y_pawndoc"  version="0.2"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Fix pawndoc comments."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_globaltags"  version="0.1"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Declare GLOBAL_TAG_TYPES to define many tag types for function calls."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_prehook"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="State-based ALS hooking with better control of orderings."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_stripnumbers"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  Removes tag overrides which are actually numbers.  This allows for:  <code>  uvar g_a[MAX_PLAYERS][E_SOME_ENUM]; <br />  uvar g_b[MAX_PLAYERS][42];  </code>  Without stripping you would end with code doing "42:0" or getting a tag  mismatch on "E_SOME_ENUM", both of which are problems.  </remarks>  </library> <p/> <library  name="y_shortvar"  version="0.2"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Declares a few variables with very short names, used all over YSI."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_pp"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="More complex processing in the pre-processor."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_als"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Provides a number of macros for making ALS (Advanced Library System) callback hooking simpler."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_scriptinit"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="OnScriptInit, OnCodeInit, and equivalent exit functions."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This file provides <c>OnScriptInit</c> and <c>OnScriptExit</c> which are  called at the start and end of the current script, regardless of what the  type of the script is.  It also provides <c>IS_FILTERSCRIPT</c> as a  (partial) replacement for <c>FILTERSCRIPT</c> which detects what the mode is  at runtime for a more reliable system (but it is a run-time variable, not a  compile-time constant).  </remarks>  </library> <p/> <library  name="y_scriptdata"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Utility functions for information about how and when the script was built."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This file provides <c>OnScriptInit</c> and <c>OnScriptExit</c> which are  called at the start and end of the current script, regardless of what the  type of the script is.  It also provides <c>IS_FILTERSCRIPT</c> as a  (partial) replacement for <c>FILTERSCRIPT</c> which detects what the mode is  at runtime for a more reliable system (but it is a run-time variable, not a  compile-time constant).  </remarks>  </library> <p/> <library  name="y_serverdata"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Utility functions for information about plugin and server options."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This file provides <c>OnScriptInit</c> and <c>OnScriptExit</c> which are  called at the start and end of the current script, regardless of what the  type of the script is.  It also provides <c>IS_FILTERSCRIPT</c> as a  (partial) replacement for <c>FILTERSCRIPT</c> which detects what the mode is  at runtime for a more reliable system (but it is a run-time variable, not a  compile-time constant).  </remarks>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <transition keep="true" target="_script_init_fix_state : true"/>  <transition keep="true" target="_ALS : _ALS_go"/> <p/> <library  name="y_version"  version="0.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Checks online to see if there is a newer version of YSI available."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_debug"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Debugging features, optionally compile-time disabled."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  <p>Ensures debug levels are set and defines debug functions.</p>  <p>General debug levels:</p>  <ul>  <li>-1 - Run-time selected debug level.</li>  <li>0 - No debug information.</li>  <li>1 - Callbacks and timers.</li>  <li>2 - Remote functions.</li>  <li>3 - Stock functions.</li>  <li>4 - Static functions.</li>  <li>5 - Utility functions.</li>  <li>6 - Code.</li>  <li>7 - Loops.</li>  </ul>  <p>If you use <c>Debug_Print0</c> you get an optional debug print  controlled by the global state <c>ysi_debug</c> - which is either on or  off.</p>  </remarks>  </library> <p/> <p/><p/> <library  name="y_cell"  version="0.2"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Provides a few functions for manipulating the bits in single cells.  Note that this is distinct  from the y_bit library."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_amx"  version="1.0"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Allows a script access to information about itself, such as function names."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This can be used for a range of things, including automatic callback  hooking and testing.  </remarks>  </library> <p/> <p/><p/> <p/><p/> <library  name="y_shortfunc"  version="0.2"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Defines new names for native functions."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_utils - misc"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_utils - maths"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - varargs"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - arrays"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - colour"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - conversions"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - encodings"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - strings"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - files"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - ip"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <library  name="y_utils - names"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - random"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library>y_utils - random</library>  <param name="output">The optional string to write to.</param>  <param name="cased">Allow both upper- and lower-case letters.</param>  <param name="grouped">Groups of characters have equal probability.</param>  <param name="len">The size of the string.</param>  <returns>  A random character.  </returns>  <remarks>  Can be used to return a character or a string.  Use the return value with  no parameters for a single character, or pass a destination array for a  string.  <p />  Selects letters from <c>A</c> to <c>Z</c>, or also <c>a</c> to <c>z</c> if  <c>cased</c> is <c>true</c>.  </remarks> <p/> <library>y_utils - random</library>  <param name="output">The optional string to write to.</param>  <param name="cased">Allow both upper- and lower-case letters.</param>  <param name="grouped">Groups of characters have equal probability.</param>  <param name="len">The size of the string.</param>  <returns>  A random character.  </returns>  <remarks>  Can be used to return a character or a string.  Use the return value with  no parameters for a single character, or pass a destination array for a  string.  <p />  Selects letters from <c>a</c> to <c>z</c>, <c>A</c> to <c>Z</c>, or  numbers; with every character having equal likelihood.  Unless  <c>grouped</c> is true, in which case numbers are just as likely to appear  as upper- or lower-case letters.  </remarks> <p/> <library  name="y_utils - similarity"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_utils - textwrap"  version="0.1.3"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  summary="Misc functions used throughout."  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library  name="y_iterate"  version="0.4"  license="(c) 2022 YSI contibutors, licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  <p>  Provides efficient looping through sparse data sets, such as connected  players.  Significantly improved from the original version to be a generic  loop system, rather then purely a player loop system.  When used for  players this has constant time O(n) for number of connected players (n),  unlike standard player loops which are O(MAX_PLAYERS), regardless of the  actual number of connected players.  Even when n is MAX_PLAYERS this is  still faster.  </p>  <p>  For extensive documentation on writing and using iterators, see  <a href="http://forum.sa-mp.com/showthread.php?t=481877">this topic</a>  </p>  </remarks>  <section>  Examples  </section>  <subsection>Basic Iterators</subsection>  <p>  Basic iterators are simply collections of numbers - little more than an array.  A number is either in the array, or not in the array, <em>y_iterate</em> loops  through only the <em>in</em> numbers.</p>  <p><em>Players</em><br /><br />  This code will loop through every player connected to the server.  <code>  foreach (new i : Player)																				<br />  {																				<br /><indent />  printf("player %d is connected", i);																				<br />  }  </code>  </p>  <p><em>Vehicles</em><br /><br />  This code will loop through all the created vehicles on the server (including  those made in other running scripts).  <code>  foreach (new vid : Vehicle)																				<br />  {																				<br /><indent />  printf("vehicleid %d has been created", vid);																				<br />  }  </code>  </p>  <p><em>Create An Iterator</em><br /><br />  To create your own iterator, first declare it, then add things to it, then loop  over it:  <code>  new																				<br /><indent />  Iterator:MyIter&lt;100&gt;; // First declare it (this has room for 100 items numbered 0-99).									 											<br />  // Then add things to it.																				<br />  Iter_Add(MyIter, 0);  // Fine.																				<br />  Iter_Add(MyIter, 55); // Fine.																				<br />  Iter_Add(MyIter, 100); // Will fail.																				<br />  // Then loop over it.																				<br />  foreach (new i : MyIter)																				<br />  {																				<br /><indent />  printf("%d", i); // Will print "0" then "55".																				<br />  }  </code>  </p>  </library> <p/> <library>y_iterate</library>  <param name="expr"><code>var : Iterator</code></param>  <remarks>  </remarks> <p/> The workings of these macros are very extensively documented at:  <a href="http://forum.sa-mp.com/showpost.php?p=2823668" /> <p/> <library>y_iterate</library>  <remarks>  An iterator with an associated array of information.  </remarks> <p/> <library  name="sscanf"  summary="Extracts structured information from strings."  license="Copyright (c) 2022 Alex &quot;Y_Less&quot; Cole.  Licensed under MPL 1.1"  >  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  <remarks>  This is the <em>sscanf</em> plugin, which provides the <c>sscanf</c>  function to extract basic structured data from strings.  This is slightly  different to regular expressions, but both have their place.  A regular  expression gives you total control over the exact structure of data down  to the character level; however, extracting structured data like numbers  using it is tricky.  Conversely this gives slightly higher-level  <em>specifiers</em> which can easily extract data types, at the expense  of fine-grained control.  To convert a string in to two numbers would  look like:  <code>  new num1, num2;                                                          <br />  sscanf("45 100", "ii", num1, num2);  </code>  <c>ii</c> is the specifier string, which here means "integer integer";  stating that the input string should be two whole numbers in a row (which  is - <c>"45 100"</c>).  <c>num1</c> and <c>num2</c> are the destination  variables to store the found numbers in (after conversion from strings).  You can check if the conversion failed by looking for a non-naught return  value:  <code>  new num1, num2;                                                          <br />  if (sscanf("hello 100", "ii", num1, num2))                               <br />  {                                                                        <br /><indent />  printf("The input was not two numbers.");                            <br />  }  </code>  This will fail because <c>"hello"</c> is not a whole number (or indeed  any type of number at all).  For more information on using the function  refer to the tutorials or the reference documentation in  <a href="https://github.com/Y-Less/sscanf/blob/master/README.md">the  attached readme</a>.  </remarks>  </library> <p/> <p/><p/> MySQL plugin R41-4 
	</general>

	<members>

		<!-- enumerations -->
		<member name="T:ALS" value="69">
			<tagname value="ALS"/>
			<member name="C:ALS_OnScriptInit" value="0">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnScriptExit" value="1">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnGameModeInit" value="2">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnGameModeExit" value="3">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnFilterScriptInit" value="4">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnFilterScriptExit" value="5">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerConnect" value="6">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerDisconnect" value="7">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSpawn" value="8">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerDeath" value="9">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleSpawn" value="10">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleDeath" value="11">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerText" value="12">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerCommandText" value="13">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerRequestClass" value="14">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterVehicle" value="15">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerExitVehicle" value="16">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerStateChange" value="17">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterCheckpoint" value="18">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveCheckpoint" value="19">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterRaceCheckpoint" value="20">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveRaceCheckpoint" value="21">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnRconCommand" value="22">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerRequestSpawn" value="23">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnObjectMoved" value="24">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerObjectMoved" value="25">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerPickUpPickup" value="26">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleMod" value="27">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnEnterExitModShop" value="28">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehiclePaintjob" value="29">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleRespray" value="30">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleDamageStatusUpdate" value="31">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSelectedMenuRow" value="32">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerExitedMenu" value="33">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerInteriorChange" value="34">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerKeyStateChange" value="35">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnRconLoginAttempt" value="36">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerUpdate" value="37">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerStreamIn" value="38">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerStreamOut" value="39">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleStreamIn" value="40">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleStreamOut" value="41">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnDialogResponse" value="42">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickPlayer" value="43">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLogin" value="44">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLogout" value="45">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerTakeDamage" value="46">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerGiveDamage" value="47">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickMap" value="48">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerCommandReceived" value="49">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerCommandPerformed" value="50">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnUnoccupiedVehicleUpdate" value="51">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickTextDraw" value="52">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerClickPlayerTextDraw" value="53">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEditObject" value="54">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEditAttachedObject" value="55">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerWeaponShot" value="56">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnIncomingConnection" value="57">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnTrailerUpdate" value="58">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnVehicleSirenStateChange" value="59">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerGiveDamageActor" value="60">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnActorStreamIn" value="61">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnActorStreamOut" value="62">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerEnterArea" value="63">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerLeaveArea" value="64">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerFinishRace" value="65">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerExitRace" value="66">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnRaceEnd" value="67">
				<tagname value="Bit"/>
			</member>
			<member name="C:ALS_OnPlayerSelectObject" value="68">
				<tagname value="Bit"/>
			</member>
			<referrer name="_@ALS"/>
			<library>y_als</library> 
		</member>
		<member name="T:ATeles" value="24">
			<tagname value="ATeles"/>
			<member name="C:tName" value="0">
				<size value="20"/>
			</member>
			<member name="C:teleX" value="20">
				<tagname value="Float"/>
			</member>
			<member name="C:teleY" value="21">
				<tagname value="Float"/>
			</member>
			<member name="C:teleZ" value="22">
				<tagname value="Float"/>
			</member>
			<member name="C:teleAng" value="23">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:E_AMX_TABLE" value="5">
			<tagname value="E_AMX_TABLE"/>
			<member name="C:AMX_TABLE_PUBLICS" value="0">
			</member>
			<member name="C:AMX_TABLE_NATIVES" value="1">
			</member>
			<member name="C:AMX_TABLE_LIBRARIES" value="2">
			</member>
			<member name="C:AMX_TABLE_PUBVARS" value="3">
			</member>
			<member name="C:AMX_TABLE_TAGS" value="4">
			</member>
			<referrer name="_@E_AMX_TABLE"/>
			<library>y_amx</library> 
		</member>
		<member name="T:E_ITER_YIELD" value="11">
			<tagname value="E_ITER_YIELD"/>
			<member name="C:E_ITER_YIELD_STACK_START" value="0">
			</member>
			<member name="C:E_ITER_YIELD_STACK_END" value="1">
			</member>
			<member name="C:E_ITER_YIELD_STACK_SIZE" value="2">
			</member>
			<member name="C:E_ITER_YIELD_HEAP_START" value="3">
			</member>
			<member name="C:E_ITER_YIELD_HEAP_END" value="4">
			</member>
			<member name="C:E_ITER_YIELD_HEAP_SIZE" value="5">
			</member>
			<member name="C:E_ITER_YIELD_FIRST" value="6">
			</member>
			<member name="C:E_ITER_YIELD_FRM" value="7">
			</member>
			<member name="C:E_ITER_YIELD_CIP" value="8">
			</member>
			<member name="C:E_ITER_YIELD_FRAME" value="9">
			</member>
			<member name="C:E_ITER_YIELD_RETURN" value="10">
			</member>
		</member>
		<member name="T:E_SCRIPTINIT_STATE" value="32">
			<tagname value="E_SCRIPTINIT_STATE"/>
			<member name="C:E_SCRIPTINIT_STATE_NONE" value="0">
			</member>
			<member name="C:E_SCRIPTINIT_STATE_JITING" value="1">
			</member>
			<member name="C:E_SCRIPTINIT_STATE_JITED" value="2">
			</member>
			<member name="C:E_SCRIPTINIT_STATE_CRASHDETECT_" value="4">
			</member>
			<member name="C:E_SCRIPTINIT_STATE_RELOAD" value="8">
			</member>
			<member name="C:E_SCRIPTINIT_STATE_DUMPED" value="16">
			</member>
			<referrer name="_@E_SCRIPTINIT_STATE"/>
			<library>y_scriptinit</library>  <remarks>  Where in initialisation the script currently is.  Handles multiple ways of  starting the script, including cache loads and JIT.  </remarks> 
		</member>
		<member name="T:E_YSI_DIR" value="2">
			<tagname value="E_YSI_DIR"/>
			<member name="C:E_YSI_DIR_FIXES" value="0">
			</member>
			<member name="C:E_YSI_DIR_TEMP" value="1">
			</member>
			<referrer name="_@E_YSI_DIR"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<library>y_core</library> 
		</member>
		<member name="T:HOenum" value="12">
			<tagname value="HOenum"/>
			<member name="C:modelID" value="0">
			</member>
			<member name="C:slots" value="1">
			</member>
			<member name="C:bone" value="2">
			</member>
			<member name="C:oX" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:oY" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:oZ" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:rX" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:rY" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:rZ" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:sX" value="9">
				<tagname value="Float"/>
			</member>
			<member name="C:sY" value="10">
				<tagname value="Float"/>
			</member>
			<member name="C:sZ" value="11">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:HOenum2" value="56">
			<tagname value="HOenum2"/>
			<member name="C:ID" value="0">
			</member>
			<member name="C:hName" value="1">
				<size value="22"/>
			</member>
			<member name="C:SavedBy" value="23">
				<size value="22"/>
			</member>
			<member name="C:Allowed" value="45">
				<tagname value="bool"/>
			</member>
			<member name="C:eXist" value="46">
				<tagname value="bool"/>
				<size value="10"/>
			</member>
		</member>
		<member name="T:MovingObjectData" value="9">
			<tagname value="MovingObjectData"/>
			<member name="C:idUsed" value="0">
				<tagname value="bool"/>
			</member>
			<member name="C:MovingToX" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:MovingToY" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:MovingToZ" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:ReturnPosX" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:ReturnPosY" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:ReturnPosZ" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:e_MovingObject_Actual" value="7">
			</member>
			<member name="C:e_MovingObject_Speed" value="8">
			</member>
		</member>
		<member name="T:Posss" value="3">
			<tagname value="Float"/>
			<member name="C:sXX" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:sYY" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:sZZ" value="2">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:__BULLET_HIT_TYPE" value="5">
			<tagname value="t_BULLET_HIT_TYPE"/>
			<member name="C:BULLET_HIT_TYPE_NONE" value="0">
			</member>
			<member name="C:BULLET_HIT_TYPE_PLAYER" value="1">
			</member>
			<member name="C:BULLET_HIT_TYPE_VEHICLE" value="2">
			</member>
			<member name="C:BULLET_HIT_TYPE_OBJECT" value="3">
			</member>
			<member name="C:BULLET_HIT_TYPE_PLAYER_OBJECT" value="4">
			</member>
			<referrer name="_@BULLET_HIT_TYPE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__CAM_MODE" value="57">
			<tagname value="t_CAM_MODE"/>
			<member name="C:CAM_MODE_DISCONNECTED" value="-1">
			</member>
			<member name="C:CAM_MODE_NONE" value="0">
			</member>
			<member name="C:CAM_MODE_BEHINDCAR" value="3">
			</member>
			<member name="C:CAM_MODE_FOLLOWPED" value="4">
			</member>
			<member name="C:CAM_MODE_SNIPER" value="7">
			</member>
			<member name="C:CAM_MODE_ROCKETLAUNCHER" value="8">
			</member>
			<member name="C:CAM_MODE_FIXED" value="15">
			</member>
			<member name="C:CAM_MODE_1STPERSON" value="16">
			</member>
			<member name="C:CAM_MODE_CAM_ON_A_STRING" value="18">
			</member>
			<member name="C:CAM_MODE_BEHINDBOAT" value="22">
			</member>
			<member name="C:CAM_MODE_CAMERA" value="46">
			</member>
			<member name="C:CAM_MODE_ROCKETLAUNCHER_HS" value="51">
			</member>
			<member name="C:CAM_MODE_AIMWEAPON" value="53">
			</member>
			<member name="C:CAM_MODE_AIMWEAPON_FROMCAR" value="55">
			</member>
			<member name="C:CAM_MODE_DW_HELI_CHASE" value="56">
			</member>
			<referrer name="_@CAM_MODE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__CARMODTYPE" value="16">
			<tagname value="t_CARMODTYPE"/>
			<member name="C:CARMODTYPE_NONE" value="-1">
			</member>
			<member name="C:CARMODTYPE_SPOILER" value="0">
			</member>
			<member name="C:CARMODTYPE_HOOD" value="1">
			</member>
			<member name="C:CARMODTYPE_ROOF" value="2">
			</member>
			<member name="C:CARMODTYPE_SIDESKIRT" value="3">
			</member>
			<member name="C:CARMODTYPE_LAMPS" value="4">
			</member>
			<member name="C:CARMODTYPE_NITRO" value="5">
			</member>
			<member name="C:CARMODTYPE_EXHAUST" value="6">
			</member>
			<member name="C:CARMODTYPE_WHEELS" value="7">
			</member>
			<member name="C:CARMODTYPE_STEREO" value="8">
			</member>
			<member name="C:CARMODTYPE_HYDRAULICS" value="9">
			</member>
			<member name="C:CARMODTYPE_FRONT_BUMPER" value="10">
			</member>
			<member name="C:CARMODTYPE_REAR_BUMPER" value="11">
			</member>
			<member name="C:CARMODTYPE_VENT_RIGHT" value="12">
			</member>
			<member name="C:CARMODTYPE_VENT_LEFT" value="13">
			</member>
			<member name="C:CARMODTYPE_FRONT_BULLBAR" value="14">
			</member>
			<member name="C:CARMODTYPE_REAR_BULLBAR" value="15">
			</member>
			<referrer name="_@CARMODTYPE"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__CLICK_SOURCE" value="1">
			<tagname value="t_CLICK_SOURCE"/>
			<member name="C:CLICK_SOURCE_SCOREBOARD" value="0">
			</member>
			<referrer name="_@CLICK_SOURCE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__CONNSTAT" value="9">
			<tagname value="t_CONNECTION_STATUS"/>
			<member name="C:CONNECTION_STATUS_NO_ACTION" value="0">
			</member>
			<member name="C:CONNECTION_STATUS_DISCONNECT_ASAP" value="1">
			</member>
			<member name="C:CONNECTION_STATUS_DISCONNECT_ASAP_SILENTLY" value="2">
			</member>
			<member name="C:CONNECTION_STATUS_DISCONNECT_ON_NO_ACK" value="3">
			</member>
			<member name="C:CONNECTION_STATUS_REQUESTED_CONNECTION" value="4">
			</member>
			<member name="C:CONNECTION_STATUS_HANDLING_CONNECTION_REQUEST" value="5">
			</member>
			<member name="C:CONNECTION_STATUS_UNVERIFIED_SENDER" value="6">
			</member>
			<member name="C:CONNECTION_STATUS_SET_ENCRYPTION_ON_MULTIPLE_16_BYTE_PACKET" value="7">
			</member>
			<member name="C:CONNECTION_STATUS_CONNECTED" value="8">
			</member>
			<member name="C:CONNSTAT_NO_ACTION" value="0">
			</member>
			<member name="C:CONNSTAT_DISCONNECT_ASAP" value="1">
			</member>
			<member name="C:CONNSTAT_DISCONNECT_ASAP_SILNT" value="2">
			</member>
			<member name="C:CONNSTAT_DISCONNECT_ON_NO_ACK" value="3">
			</member>
			<member name="C:CONNSTAT_REQUESTED_CONNECTION" value="4">
			</member>
			<member name="C:CONNSTAT_HANDLING_CONN_REQ" value="5">
			</member>
			<member name="C:CONNSTAT_UNVERIFIED_SENDER" value="6">
			</member>
			<member name="C:CONNSTAT_SET_ENCRYPTION" value="7">
			</member>
			<member name="C:CONNSTAT_CONNECTED" value="8">
			</member>
			<referrer name="_@CONNECTION_STATUS"/>
			<library>omp_network</library>  <summary>Connection statuses</summary> 
		</member>
		<member name="T:__CP_TYPE" value="9">
			<tagname value="t_CP_TYPE"/>
			<member name="C:CP_TYPE_GROUND_NORMAL" value="0">
			</member>
			<member name="C:CP_TYPE_GROUND_FINISH" value="1">
			</member>
			<member name="C:CP_TYPE_GROUND_EMPTY" value="2">
			</member>
			<member name="C:CP_TYPE_AIR_NORMAL" value="3">
			</member>
			<member name="C:CP_TYPE_AIR_FINISH" value="4">
			</member>
			<member name="C:CP_TYPE_AIR_ROTATING" value="5">
			</member>
			<member name="C:CP_TYPE_AIR_STROBING" value="6">
			</member>
			<member name="C:CP_TYPE_AIR_SWINGING" value="7">
			</member>
			<member name="C:CP_TYPE_AIR_BOBBING" value="8">
			</member>
			<referrer name="_@CP_TYPE"/>
			<library>omp_checkpoint</library> 
		</member>
		<member name="T:__DIALOG_STYLE" value="6">
			<tagname value="t_DIALOG_STYLE"/>
			<member name="C:DIALOG_STYLE_MSGBOX" value="0">
			</member>
			<member name="C:DIALOG_STYLE_INPUT" value="1">
			</member>
			<member name="C:DIALOG_STYLE_LIST" value="2">
			</member>
			<member name="C:DIALOG_STYLE_PASSWORD" value="3">
			</member>
			<member name="C:DIALOG_STYLE_TABLIST" value="4">
			</member>
			<member name="C:DIALOG_STYLE_TABLIST_HEADERS" value="5">
			</member>
			<referrer name="_@DIALOG_STYLE"/>
			<library>omp_dialog</library>  <summary>Player GUI dialog</summary> 
		</member>
		<member name="T:__DOWNLOAD_REQUEST" value="3">
			<tagname value="t_DOWNLOAD_REQUEST"/>
			<member name="C:DOWNLOAD_REQUEST_EMPTY" value="0">
			</member>
			<member name="C:DOWNLOAD_REQUEST_MODEL_FILE" value="1">
			</member>
			<member name="C:DOWNLOAD_REQUEST_TEXTURE_FILE" value="2">
			</member>
			<referrer name="_@DOWNLOAD_REQUEST"/>
			<library>omp_network</library>  <summary>Artwork/NetModels</summary> 
		</member>
		<member name="T:__EDIT_RESPONSE" value="3">
			<tagname value="t_EDIT_RESPONSE"/>
			<member name="C:EDIT_RESPONSE_CANCEL" value="0">
			</member>
			<member name="C:EDIT_RESPONSE_FINAL" value="1">
			</member>
			<member name="C:EDIT_RESPONSE_UPDATE" value="2">
			</member>
			<referrer name="_@EDIT_RESPONSE"/>
			<library>omp_object</library> 
		</member>
		<member name="T:__E_COMPILER_ENUM" value="4">
			<tagname value="__E_COMPILER_ENUM"/>
			<member name="C:__E_COMPILER_ENUM_ENTRY" value="0">
				<size value="3"/>
			</member>
			<member name="C:__E_COMPILER_ENUM_AFTER" value="3">
			</member>
			<referrer name="_@__E_COMPILER_ENUM"/>
			<library>y_compilerdata</library>  <remarks>  One version of the compiler changed the definition of <c>sizeof</c> on enum  elements to return their apparent "array" size, not their true size of  <c>1</c>.  The change was to match people's misunderstanding of the syntax,  rather than the correct interpretation of what enums are.  This is an enum  with a multi-cell increment within it used to detect which enum sizeof  method is in use.  </remarks> 
		</member>
		<member name="T:__FIGHT_STYLE" value="17">
			<tagname value="t_FIGHT_STYLE"/>
			<member name="C:FIGHT_STYLE_NORMAL" value="4">
			</member>
			<member name="C:FIGHT_STYLE_BOXING" value="5">
			</member>
			<member name="C:FIGHT_STYLE_KUNGFU" value="6">
			</member>
			<member name="C:FIGHT_STYLE_KNEEHEAD" value="7">
			</member>
			<member name="C:FIGHT_STYLE_GRABKICK" value="15">
			</member>
			<member name="C:FIGHT_STYLE_ELBOW" value="16">
			</member>
			<referrer name="_@FIGHT_STYLE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__FORCE_SYNC" value="3">
			<tagname value="t_FORCE_SYNC"/>
			<member name="C:SYNC_NONE" value="0">
			</member>
			<member name="C:SYNC_ALL" value="1">
			</member>
			<member name="C:SYNC_OTHER" value="2">
			</member>
			<referrer name="_@FORCE_SYNC"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__HTTP_ERROR" value="7">
			<tagname value="t_HTTP_ERROR"/>
			<member name="C:HTTP_ERROR_BAD_HOST" value="1">
			</member>
			<member name="C:HTTP_ERROR_NO_SOCKET" value="2">
			</member>
			<member name="C:HTTP_ERROR_CANT_CONNECT" value="3">
			</member>
			<member name="C:HTTP_ERROR_CANT_WRITE" value="4">
			</member>
			<member name="C:HTTP_ERROR_CONTENT_TOO_BIG" value="5">
			</member>
			<member name="C:HTTP_ERROR_MALFORMED_RESPONSE" value="6">
			</member>
			<referrer name="_@HTTP_ERROR"/>
			<library>omp_http</library>  <summary>HTTP error response codes</summary>  <remarks>  These codes compliment ordinary HTTP response codes returned in 'responseCode'  (10x) (20x OK) (30x Moved) (40x Unauthorised) (50x Server Error)  </remarks> 
		</member>
		<member name="T:__HTTP_METHOD" value="4">
			<tagname value="t_HTTP_METHOD"/>
			<member name="C:HTTP_GET" value="1">
			</member>
			<member name="C:HTTP_POST" value="2">
			</member>
			<member name="C:HTTP_HEAD" value="3">
			</member>
			<referrer name="_@HTTP_METHOD"/>
			<library>omp_http</library>  <summary>HTTP request types</summary> 
		</member>
		<member name="T:__KEY" value="256">
			<tagname value="t_KEY"/>
			<member name="C:KEY_ACTION" value="1">
			</member>
			<member name="C:KEY_CROUCH" value="2">
			</member>
			<member name="C:KEY_FIRE" value="4">
			</member>
			<member name="C:KEY_SPRINT" value="8">
			</member>
			<member name="C:KEY_SECONDARY_ATTACK" value="16">
			</member>
			<member name="C:KEY_JUMP" value="32">
			</member>
			<member name="C:KEY_LOOK_RIGHT" value="64">
			</member>
			<member name="C:KEY_HANDBRAKE" value="128">
			</member>
			<member name="C:KEY_LOOK_LEFT" value="256">
			</member>
			<member name="C:KEY_SUBMISSION" value="512">
			</member>
			<member name="C:KEY_LOOK_BEHIND" value="512">
			</member>
			<member name="C:KEY_WALK" value="1024">
			</member>
			<member name="C:KEY_ANALOG_UP" value="2048">
			</member>
			<member name="C:KEY_ANALOG_DOWN" value="4096">
			</member>
			<member name="C:KEY_ANALOG_LEFT" value="8192">
			</member>
			<member name="C:KEY_ANALOG_RIGHT" value="16384">
			</member>
			<member name="C:KEY_YES" value="65536">
			</member>
			<member name="C:KEY_NO" value="131072">
			</member>
			<member name="C:KEY_CTRL_BACK" value="262144">
			</member>
			<member name="C:KEY_UP" value="-128">
			</member>
			<member name="C:KEY_DOWN" value="128">
			</member>
			<member name="C:KEY_LEFT" value="-128">
			</member>
			<member name="C:KEY_RIGHT" value="128">
			</member>
			<referrer name="_@KEY"/>
			<library>omp_player</library>  <summary>Keys</summary> 
		</member>
		<member name="T:__MAPICON" value="4">
			<tagname value="t_MAPICON"/>
			<member name="C:MAPICON_LOCAL" value="0">
			</member>
			<member name="C:MAPICON_GLOBAL" value="1">
			</member>
			<member name="C:MAPICON_LOCAL_CHECKPOINT" value="2">
			</member>
			<member name="C:MAPICON_GLOBAL_CHECKPOINT" value="3">
			</member>
			<referrer name="_@MAPICON"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__OBJECT_MATERIAL_SIZE" value="150">
			<tagname value="t_OBJECT_MATERIAL_SIZE"/>
			<member name="C:OBJECT_MATERIAL_SIZE_32x32" value="10">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_64x32" value="20">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_64x64" value="30">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_128x32" value="40">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_128x64" value="50">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_128x128" value="60">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x32" value="70">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x64" value="80">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x128" value="90">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x256" value="100">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x64" value="110">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x128" value="120">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x256" value="130">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x512" value="140">
				<size value="10"/>
			</member>
			<referrer name="_@OBJECT_MATERIAL_SIZE"/>
			<library>omp_object</library> 
		</member>
		<member name="T:__OBJECT_MATERIAL_TEXT_ALIGN" value="3">
			<tagname value="t_OBJECT_MATERIAL_TEXT_ALIGN"/>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_CENTRE" value="1">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_CENTER" value="1">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_RIGHT" value="2">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_LEFT" value="0">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_CENT" value="1">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_RIGT" value="2">
			</member>
			<referrer name="_@OBJECT_MATERIAL_TEXT_ALIGN"/>
			<library>omp_object</library> 
		</member>
		<member name="T:__PLAYER_MARKERS_MODE" value="3">
			<tagname value="t_PLAYER_MARKERS_MODE"/>
			<member name="C:PLAYER_MARKERS_MODE_UNKNOWN" value="-1">
			</member>
			<member name="C:PLAYER_MARKERS_MODE_OFF" value="0">
			</member>
			<member name="C:PLAYER_MARKERS_MODE_GLOBAL" value="1">
			</member>
			<member name="C:PLAYER_MARKERS_MODE_STREAMED" value="2">
			</member>
			<referrer name="_@PLAYER_MARKERS_MODE"/>
			<library>omp_core</library>  <summary>Marker modes used by <c>ShowPlayerMarkers()</c></summary> 
		</member>
		<member name="T:__PLAYER_RECORDING_TYPE" value="3">
			<tagname value="t_PLAYER_RECORDING_TYPE"/>
			<member name="C:PLAYER_RECORDING_TYPE_NONE" value="0">
			</member>
			<member name="C:PLAYER_RECORDING_TYPE_DRIVER" value="1">
			</member>
			<member name="C:PLAYER_RECORDING_TYPE_ONFOOT" value="2">
			</member>
			<referrer name="_@PLAYER_RECORDING_TYPE"/>
			<library>omp_player</library>  <summary>Recording for NPC playback</summary> 
		</member>
		<member name="T:__PLAYER_STATE" value="10">
			<tagname value="t_PLAYER_STATE"/>
			<member name="C:PLAYER_STATE_NONE" value="0">
			</member>
			<member name="C:PLAYER_STATE_ONFOOT" value="1">
			</member>
			<member name="C:PLAYER_STATE_DRIVER" value="2">
			</member>
			<member name="C:PLAYER_STATE_PASSENGER" value="3">
			</member>
			<member name="C:PLAYER_STATE_WASTED" value="7">
			</member>
			<member name="C:PLAYER_STATE_SPAWNED" value="8">
			</member>
			<member name="C:PLAYER_STATE_SPECTATING" value="9">
			</member>
			<referrer name="_@PLAYER_STATE"/>
			<library>omp_player</library>  <summary>States</summary> 
		</member>
		<member name="T:__PRAGMA_WARNING" value="4">
			<tagname value="__PRAGMA_WARNING"/>
			<member name="C:__PRAGMA_WARNING_enable" value="0">
			</member>
			<member name="C:__PRAGMA_WARNING_disable" value="1">
			</member>
			<member name="C:__PRAGMA_WARNING_push" value="2">
			</member>
			<member name="C:__PRAGMA_WARNING_pop" value="3">
			</member>
			<referrer name="_@__PRAGMA_WARNING"/>
			<library>y_compilerdata</library>  <remarks>  The various sub-types of <c>__pragma("warning")</c> - <c>push</c>,  <c>pop</c>, <c>disable</c>, and <c>enable</c>.  </remarks> 
		</member>
		<member name="T:__SELECT_OBJECT" value="3">
			<tagname value="t_SELECT_OBJECT"/>
			<member name="C:SELECT_OBJECT_GLOBAL_OBJECT" value="1">
			</member>
			<member name="C:SELECT_OBJECT_PLAYER_OBJECT" value="2">
			</member>
			<referrer name="_@SELECT_OBJECT"/>
			<library>omp_object</library> 
		</member>
		<member name="T:__SPECIAL_ACTION" value="69">
			<tagname value="t_SPECIAL_ACTION"/>
			<member name="C:SPECIAL_ACTION_NONE" value="0">
			</member>
			<member name="C:SPECIAL_ACTION_DUCK" value="1">
			</member>
			<member name="C:SPECIAL_ACTION_USEJETPACK" value="2">
			</member>
			<member name="C:SPECIAL_ACTION_ENTER_VEHICLE" value="3">
			</member>
			<member name="C:SPECIAL_ACTION_EXIT_VEHICLE" value="4">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE1" value="5">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE2" value="6">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE3" value="7">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE4" value="8">
			</member>
			<member name="C:SPECIAL_ACTION_HANDSUP" value="10">
			</member>
			<member name="C:SPECIAL_ACTION_USECELLPHONE" value="11">
			</member>
			<member name="C:SPECIAL_ACTION_SITTING" value="12">
			</member>
			<member name="C:SPECIAL_ACTION_STOPUSECELLPHONE" value="13">
			</member>
			<member name="C:SPECIAL_ACTION_DRINK_BEER" value="20">
			</member>
			<member name="C:SPECIAL_ACTION_SMOKE_CIGGY" value="21">
			</member>
			<member name="C:SPECIAL_ACTION_DRINK_WINE" value="22">
			</member>
			<member name="C:SPECIAL_ACTION_DRINK_SPRUNK" value="23">
			</member>
			<member name="C:SPECIAL_ACTION_CUFFED" value="24">
			</member>
			<member name="C:SPECIAL_ACTION_CARRY" value="25">
			</member>
			<member name="C:SPECIAL_ACTION_PISSING" value="68">
			</member>
			<referrer name="_@SPECIAL_ACTION"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__SPECTATE_MODE" value="4">
			<tagname value="t_SPECTATE_MODE"/>
			<member name="C:SPECTATE_MODE_NORMAL" value="1">
			</member>
			<member name="C:SPECTATE_MODE_FIXED" value="2">
			</member>
			<member name="C:SPECTATE_MODE_SIDE" value="3">
			</member>
			<referrer name="_@SPECTATE_MODE"/>
			<library>omp_player</library>  <summary>Spectating</summary> 
		</member>
		<member name="T:__SQLITE_OPEN" value="33554433">
			<tagname value="SQLITE_OPEN"/>
			<member name="C:SQLITE_OPEN_READONLY" value="1">
			</member>
			<member name="C:SQLITE_OPEN_READWRITE" value="2">
			</member>
			<member name="C:SQLITE_OPEN_CREATE" value="4">
			</member>
			<member name="C:SQLITE_OPEN_DELETEONCLOSE" value="8">
			</member>
			<member name="C:SQLITE_OPEN_EXCLUSIVE" value="16">
			</member>
			<member name="C:SQLITE_OPEN_AUTOPROXY" value="32">
			</member>
			<member name="C:SQLITE_OPEN_URI" value="64">
			</member>
			<member name="C:SQLITE_OPEN_MEMORY" value="128">
			</member>
			<member name="C:SQLITE_OPEN_MAIN_DB" value="256">
			</member>
			<member name="C:SQLITE_OPEN_TEMP_DB" value="512">
			</member>
			<member name="C:SQLITE_OPEN_TRANSIENT_DB" value="1024">
			</member>
			<member name="C:SQLITE_OPEN_MAIN_JOURNAL" value="2048">
			</member>
			<member name="C:SQLITE_OPEN_TEMP_JOURNAL" value="4096">
			</member>
			<member name="C:SQLITE_OPEN_SUBJOURNAL" value="8192">
			</member>
			<member name="C:SQLITE_OPEN_SUPER_JOURNAL" value="16384">
			</member>
			<member name="C:SQLITE_OPEN_NOMUTEX" value="32768">
			</member>
			<member name="C:SQLITE_OPEN_FULLMUTEX" value="65536">
			</member>
			<member name="C:SQLITE_OPEN_SHAREDCACHE" value="131072">
			</member>
			<member name="C:SQLITE_OPEN_PRIVATECACHE" value="262144">
			</member>
			<member name="C:SQLITE_OPEN_WAL" value="524288">
			</member>
			<member name="C:SQLITE_OPEN_NOFOLLOW" value="16777216">
			</member>
			<member name="C:SQLITE_OPEN_EXRESCODE" value="33554432">
			</member>
			<referrer name="_@SQLITE_OPEN"/>
			<library>omp_database</library> 
		</member>
		<member name="T:__TEXT_DRAW_ALIGN" value="4">
			<tagname value="t_TEXT_DRAW_ALIGN"/>
			<member name="C:TEXT_DRAW_ALIGN_LEFT" value="1">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_CENTRE" value="2">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_CENTER" value="2">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_RIGHT" value="3">
			</member>
			<referrer name="_@TEXT_DRAW_ALIGN"/>
			<library>omp_textdraw</library>  <summary>Text draw alignment</summary> 
		</member>
		<member name="T:__TEXT_DRAW_FONT" value="6">
			<tagname value="t_TEXT_DRAW_FONT"/>
			<member name="C:TEXT_DRAW_FONT_0" value="0">
			</member>
			<member name="C:TEXT_DRAW_FONT_1" value="1">
			</member>
			<member name="C:TEXT_DRAW_FONT_2" value="2">
			</member>
			<member name="C:TEXT_DRAW_FONT_3" value="3">
			</member>
			<member name="C:TEXT_DRAW_FONT_SPRITE_DRAW" value="4">
			</member>
			<member name="C:TEXT_DRAW_FONT_MODEL_PREVIEW" value="5">
			</member>
			<referrer name="_@TEXT_DRAW_FONT"/>
			<library>omp_textdraw</library>  <summary>Text draw font</summary> 
		</member>
		<member name="T:__VARTYPE" value="4">
			<tagname value="t_VARTYPE"/>
			<member name="C:VARTYPE_NONE" value="0">
			</member>
			<member name="C:VARTYPE_INT" value="1">
			</member>
			<member name="C:VARTYPE_STRING" value="2">
			</member>
			<member name="C:VARTYPE_FLOAT" value="3">
			</member>
			<member name="C:SERVER_VARTYPE_NONE" value="0">
			</member>
			<member name="C:SERVER_VARTYPE_INT" value="1">
			</member>
			<member name="C:SERVER_VARTYPE_STRING" value="2">
			</member>
			<member name="C:SERVER_VARTYPE_FLOAT" value="3">
			</member>
			<member name="C:PLAYER_VARTYPE_NONE" value="0">
			</member>
			<member name="C:PLAYER_VARTYPE_INT" value="1">
			</member>
			<member name="C:PLAYER_VARTYPE_STRING" value="2">
			</member>
			<member name="C:PLAYER_VARTYPE_FLOAT" value="3">
			</member>
			<referrer name="_@VARTYPE"/>
			<library>omp_variable</library>  <summary>PVar enumeration</summary> 
		</member>
		<member name="T:__VEHICLE_DOOR_STATUS" value="134217728">
			<tagname value="t_VEHICLE_DOOR_STATUS"/>
			<member name="C:VEHICLE_DOOR_STATUS_NONE" value="0">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BONNET_OPEN" value="1">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BONNET_DAMAGED" value="2">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BONNET_MISSING" value="4">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_HOOD_OPEN" value="1">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_HOOD_DAMAGED" value="2">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_HOOD_MISSING" value="4">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BOOT_OPEN" value="256">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BOOT_DAMAGED" value="512">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BOOT_MISSING" value="1024">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_TRUNK_OPEN" value="256">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_TRUNK_DAMAGED" value="512">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_TRUNK_MISSING" value="1024">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_LEFT_OPEN" value="65536">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_LEFT_DAMAGED" value="131072">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_LEFT_MISSING" value="262144">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_DRIVER_OPEN" value="65536">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_DRIVER_DAMAGED" value="131072">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_DRIVER_MISSING" value="262144">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_RIGHT_OPEN" value="16777216">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_RIGHT_DAMAGED" value="33554432">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_RIGHT_MISSING" value="67108864">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_PASSENGER_OPEN" value="16777216">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_PASSENGER_DAMAGED" value="33554432">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_PASSENGER_MISSING" value="67108864">
			</member>
			<member name="C:CARDOOR_NONE" value="0">
			</member>
			<member name="C:CARDOOR_BONNET_OPEN" value="1">
			</member>
			<member name="C:CARDOOR_BONNET_DAMAGED" value="2">
			</member>
			<member name="C:CARDOOR_BONNET_MISSING" value="4">
			</member>
			<member name="C:CARDOOR_HOOD_OPEN" value="1">
			</member>
			<member name="C:CARDOOR_HOOD_DAMAGED" value="2">
			</member>
			<member name="C:CARDOOR_HOOD_MISSING" value="4">
			</member>
			<member name="C:CARDOOR_BOOT_OPEN" value="256">
			</member>
			<member name="C:CARDOOR_BOOT_DAMAGED" value="512">
			</member>
			<member name="C:CARDOOR_BOOT_MISSING" value="1024">
			</member>
			<member name="C:CARDOOR_TRUNK_OPEN" value="256">
			</member>
			<member name="C:CARDOOR_TRUNK_DAMAGED" value="512">
			</member>
			<member name="C:CARDOOR_TRUNK_MISSING" value="1024">
			</member>
			<member name="C:CARDOOR_FRONT_LEFT_OPEN" value="65536">
			</member>
			<member name="C:CARDOOR_FRONT_LEFT_DAMAGED" value="131072">
			</member>
			<member name="C:CARDOOR_FRONT_LEFT_MISSING" value="262144">
			</member>
			<member name="C:CARDOOR_DRIVER_OPEN" value="65536">
			</member>
			<member name="C:CARDOOR_DRIVER_DAMAGED" value="131072">
			</member>
			<member name="C:CARDOOR_DRIVER_MISSING" value="262144">
			</member>
			<member name="C:CARDOOR_FRONT_RIGHT_OPEN" value="16777216">
			</member>
			<member name="C:CARDOOR_FRONT_RIGHT_DAMAGED" value="33554432">
			</member>
			<member name="C:CARDOOR_FRONT_RIGHT_MISSING" value="67108864">
			</member>
			<member name="C:CARDOOR_PASSENGER_OPEN" value="16777216">
			</member>
			<member name="C:CARDOOR_PASSENGER_DAMAGED" value="33554432">
			</member>
			<member name="C:CARDOOR_PASSENGER_MISSING" value="67108864">
			</member>
			<referrer name="_@VEHICLE_DOOR_STATUS"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__VEHICLE_LIGHT_STATUS" value="1025">
			<tagname value="t_VEHICLE_LIGHT_STATUS"/>
			<member name="C:VEHICLE_LIGHT_STATUS_NONE" value="0">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_FRONT_LEFT_BROKEN" value="1">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_FRONT_RIGHT_BROKEN" value="4">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_DRIVER_BROKEN" value="1">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_PASSENGER_BROKEN" value="4">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_REAR_BROKEN" value="1024">
			</member>
			<member name="C:CARLIGHT_FRONT_LEFT_BROKEN" value="1">
			</member>
			<member name="C:CARLIGHT_FRONT_RIGHT_BROKEN" value="4">
			</member>
			<member name="C:CARLIGHT_DRIVER_BROKEN" value="1">
			</member>
			<member name="C:CARLIGHT_PASSENGER_BROKEN" value="4">
			</member>
			<member name="C:CARLIGHT_REAR_BROKEN" value="1024">
			</member>
			<referrer name="_@VEHICLE_LIGHT_STATUS"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__VEHICLE_MODEL_INFO" value="10">
			<tagname value="t_VEHICLE_MODEL_INFO"/>
			<member name="C:VEHICLE_MODEL_INFO_SIZE" value="1">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONT_SEAT" value="2">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REAR_SEAT" value="3">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_PETROL_CAP" value="4">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELS_FRONT" value="5">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELS_REAR" value="6">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELS_MID" value="7">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONT_BUMPER_Z" value="8">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REAR_BUMPER_Z" value="9">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONTSEAT" value="2">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REARSEAT" value="3">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_PETROLCAP" value="4">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELSFRONT" value="5">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELSREAR" value="6">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELSMID" value="7">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONT_BUMPER" value="8">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REAR_BUMPER" value="9">
			</member>
			<referrer name="_@VEHICLE_MODEL_INFO"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__VEHICLE_PANEL_STATUS" value="1">
			<tagname value="t_VEHICLE_PANEL_STATUS"/>
			<member name="C:VEHICLE_PANEL_STATUS_NONE" value="0">
			</member>
			<referrer name="_@VEHICLE_PANEL_STATUS"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__VEHICLE_TYRE_STATUS" value="2">
			<tagname value="t_VEHICLE_TYRE_STATUS"/>
			<member name="C:VEHICLE_TYRE_STATUS_NONE" value="0">
			</member>
			<member name="C:VEHICLE_TYRE_STATUS_FRONT_LEFT_POPPED" value="8">
			</member>
			<member name="C:VEHICLE_TYRE_STATUS_FRONT_RIGHT_POPPED" value="2">
			</member>
			<member name="C:VEHICLE_TYRE_STATUS_REAR_LEFT_POPPED" value="4">
			</member>
			<member name="C:VEHICLE_TYRE_STATUS_REAR_RIGHT_POPPED" value="1">
			</member>
			<member name="C:VEHICLE_TIRE_STATUS_FRONT_LEFT_POPPED" value="8">
			</member>
			<member name="C:VEHICLE_TIRE_STATUS_FRONT_RIGHT_POPPED" value="2">
			</member>
			<member name="C:VEHICLE_TIRE_STATUS_REAR_LEFT_POPPED" value="4">
			</member>
			<member name="C:VEHICLE_TIRE_STATUS_REAR_RIGHT_POPPED" value="1">
			</member>
			<member name="C:CARTYRE_FRONT_LEFT_POPPED" value="8">
			</member>
			<member name="C:CARTYRE_FRONT_RIGHT_POPPED" value="2">
			</member>
			<member name="C:CARTYRE_REAR_LEFT_POPPED" value="4">
			</member>
			<member name="C:CARTYRE_REAR_RIGHT_POPPED" value="1">
			</member>
			<member name="C:CARTIRE_FRONT_LEFT_POPPED" value="8">
			</member>
			<member name="C:CARTIRE_FRONT_RIGHT_POPPED" value="2">
			</member>
			<member name="C:CARTIRE_REAR_LEFT_POPPED" value="4">
			</member>
			<member name="C:CARTIRE_REAR_RIGHT_POPPED" value="1">
			</member>
			<referrer name="_@VEHICLE_TYRE_STATUS"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__WEAPON" value="55">
			<tagname value="t_WEAPON"/>
			<member name="C:WEAPON_UNKNOWN" value="-1">
			</member>
			<member name="C:WEAPON_FIST" value="0">
			</member>
			<member name="C:WEAPON_BRASSKNUCKLE" value="1">
			</member>
			<member name="C:WEAPON_GOLFCLUB" value="2">
			</member>
			<member name="C:WEAPON_NITESTICK" value="3">
			</member>
			<member name="C:WEAPON_NIGHTSTICK" value="3">
			</member>
			<member name="C:WEAPON_KNIFE" value="4">
			</member>
			<member name="C:WEAPON_BAT" value="5">
			</member>
			<member name="C:WEAPON_SHOVEL" value="6">
			</member>
			<member name="C:WEAPON_POOLSTICK" value="7">
			</member>
			<member name="C:WEAPON_KATANA" value="8">
			</member>
			<member name="C:WEAPON_CHAINSAW" value="9">
			</member>
			<member name="C:WEAPON_DILDO" value="10">
			</member>
			<member name="C:WEAPON_DILDO2" value="11">
			</member>
			<member name="C:WEAPON_VIBRATOR" value="12">
			</member>
			<member name="C:WEAPON_VIBRATOR2" value="13">
			</member>
			<member name="C:WEAPON_FLOWER" value="14">
			</member>
			<member name="C:WEAPON_CANE" value="15">
			</member>
			<member name="C:WEAPON_GRENADE" value="16">
			</member>
			<member name="C:WEAPON_TEARGAS" value="17">
			</member>
			<member name="C:WEAPON_MOLTOV" value="18">
			</member>
			<member name="C:WEAPON_MOLOTOV" value="18">
			</member>
			<member name="C:WEAPON_COLT45" value="22">
			</member>
			<member name="C:WEAPON_SILENCED" value="23">
			</member>
			<member name="C:WEAPON_DEAGLE" value="24">
			</member>
			<member name="C:WEAPON_SHOTGUN" value="25">
			</member>
			<member name="C:WEAPON_SAWEDOFF" value="26">
			</member>
			<member name="C:WEAPON_SHOTGSPA" value="27">
			</member>
			<member name="C:WEAPON_UZI" value="28">
			</member>
			<member name="C:WEAPON_MP5" value="29">
			</member>
			<member name="C:WEAPON_AK47" value="30">
			</member>
			<member name="C:WEAPON_M4" value="31">
			</member>
			<member name="C:WEAPON_TEC9" value="32">
			</member>
			<member name="C:WEAPON_RIFLE" value="33">
			</member>
			<member name="C:WEAPON_SNIPER" value="34">
			</member>
			<member name="C:WEAPON_ROCKETLAUNCHER" value="35">
			</member>
			<member name="C:WEAPON_HEATSEEKER" value="36">
			</member>
			<member name="C:WEAPON_FLAMETHROWER" value="37">
			</member>
			<member name="C:WEAPON_MINIGUN" value="38">
			</member>
			<member name="C:WEAPON_SATCHEL" value="39">
			</member>
			<member name="C:WEAPON_BOMB" value="40">
			</member>
			<member name="C:WEAPON_SPRAYCAN" value="41">
			</member>
			<member name="C:WEAPON_FIREEXTINGUISHER" value="42">
			</member>
			<member name="C:WEAPON_CAMERA" value="43">
			</member>
			<member name="C:WEAPON_NIGHT_VISION_GOGGLES" value="44">
			</member>
			<member name="C:WEAPON_THERMAL_GOGGLES" value="45">
			</member>
			<member name="C:WEAPON_PARACHUTE" value="46">
			</member>
			<member name="C:WEAPON_VEHICLE" value="49">
			</member>
			<member name="C:WEAPON_DROWN" value="53">
			</member>
			<member name="C:WEAPON_COLLISION" value="54">
			</member>
			<member name="C:WEAPON_SPLAT" value="54">
			</member>
			<referrer name="_@WEAPON"/>
			<library>open.mp</library>  <summary>Weapons</summary> 
		</member>
		<member name="T:__WEAPONSKILL" value="11">
			<tagname value="t_WEAPONSKILL"/>
			<member name="C:WEAPONSKILL_PISTOL" value="0">
			</member>
			<member name="C:WEAPONSKILL_PISTOL_SILENCED" value="1">
			</member>
			<member name="C:WEAPONSKILL_DESERT_EAGLE" value="2">
			</member>
			<member name="C:WEAPONSKILL_SHOTGUN" value="3">
			</member>
			<member name="C:WEAPONSKILL_SAWNOFF_SHOTGUN" value="4">
			</member>
			<member name="C:WEAPONSKILL_SPAS12_SHOTGUN" value="5">
			</member>
			<member name="C:WEAPONSKILL_MICRO_UZI" value="6">
			</member>
			<member name="C:WEAPONSKILL_MP5" value="7">
			</member>
			<member name="C:WEAPONSKILL_AK47" value="8">
			</member>
			<member name="C:WEAPONSKILL_M4" value="9">
			</member>
			<member name="C:WEAPONSKILL_SNIPERRIFLE" value="10">
			</member>
			<referrer name="_@WEAPONSKILL"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__WEAPONSTATE" value="4">
			<tagname value="t_WEAPONSTATE"/>
			<member name="C:WEAPONSTATE_UNKNOWN" value="-1">
			</member>
			<member name="C:WEAPONSTATE_NO_BULLETS" value="0">
			</member>
			<member name="C:WEAPONSTATE_LAST_BULLET" value="1">
			</member>
			<member name="C:WEAPONSTATE_MORE_BULLETS" value="2">
			</member>
			<member name="C:WEAPONSTATE_RELOADING" value="3">
			</member>
			<referrer name="_@WEAPONSTATE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__WEAPON_SLOT" value="13">
			<tagname value="t_WEAPON_SLOT"/>
			<member name="C:WEAPON_SLOT_UNKNOWN" value="-1">
			</member>
			<member name="C:WEAPON_SLOT_UNARMED" value="0">
			</member>
			<member name="C:WEAPON_SLOT_MELEE" value="1">
			</member>
			<member name="C:WEAPON_SLOT_PISTOL" value="2">
			</member>
			<member name="C:WEAPON_SLOT_SHOTGUN" value="3">
			</member>
			<member name="C:WEAPON_SLOT_MACHINE_GUN" value="4">
			</member>
			<member name="C:WEAPON_SLOT_ASSAULT_RIFLE" value="5">
			</member>
			<member name="C:WEAPON_SLOT_LONG_RIFLE" value="6">
			</member>
			<member name="C:WEAPON_SLOT_ARTILLERY" value="7">
			</member>
			<member name="C:WEAPON_SLOT_EXPLOSIVES" value="8">
			</member>
			<member name="C:WEAPON_SLOT_EQUIPMENT" value="9">
			</member>
			<member name="C:WEAPON_SLOT_GIFT" value="10">
			</member>
			<member name="C:WEAPON_SLOT_GADGET" value="11">
			</member>
			<member name="C:WEAPON_SLOT_DETONATOR" value="12">
			</member>
			<referrer name="_@WEAPON_SLOT"/>
			<library>open.mp</library>  <summary>Weapon Slots</summary> 
		</member>
		<member name="T:eInfo" value="83">
			<tagname value="eInfo"/>
			<member name="C:tip" value="0">
				<size value="80"/>
			</member>
			<member name="C:Epos" value="80">
				<tagname value="Float"/>
				<size value="3"/>
			</member>
		</member>
		<member name="T:e_JoinLog" value="2">
			<tagname value="e_JoinLog"/>
			<member name="C:e_iIP" value="0">
			</member>
			<member name="C:e_iTimeStamp" value="1">
			</member>
		</member>
		<member name="T:e_ObjectList" value="51">
			<tagname value="e_ObjectList"/>
			<member name="C:oID" value="0">
			</member>
			<member name="C:oName" value="1">
				<size value="50"/>
			</member>
		</member>
		<member name="T:exit_order" value="2">
			<tagname value="exit_order"/>
			<member name="C:exit_mode" value="0">
			</member>
			<member name="C:exit_script" value="1">
			</member>
			<referrer name="_@exit_order"/>
			<library>y_scriptinit</library>  <remarks>  When to call an <c>@exit()</c> function.  </remarks> 
		</member>
		<member name="T:init_order" value="4">
			<tagname value="init_order"/>
			<member name="C:init_code" value="0">
			</member>
			<member name="C:init_script" value="1">
			</member>
			<member name="C:init_mode" value="2">
			</member>
			<member name="C:init_main" value="3">
			</member>
			<referrer name="_@init_order"/>
			<library>y_scriptinit</library>  <remarks>  When to call an <c>@init()</c> function.  </remarks> 
		</member>
		<member name="T:players_data" value="136">
			<tagname value="players_data"/>
			<member name="C:Rank" value="0">
			</member>
			<member name="C:Expierience" value="1">
			</member>
			<member name="C:ReportsTD" value="2">
				<tagname value="bool"/>
			</member>
			<member name="C:DeliveryTotal" value="3">
			</member>
			<member name="C:DeliveryID" value="4">
			</member>
			<member name="C:Delivery" value="5">
				<tagname value="bool"/>
			</member>
			<member name="C:DeliveryCP" value="6">
			</member>
			<member name="C:mgVariable" value="7">
			</member>
			<member name="C:MyRank" value="8">
			</member>
			<member name="C:AmBuilding" value="9">
				<tagname value="bool"/>
			</member>
			<member name="C:AmRacing" value="10">
				<tagname value="bool"/>
			</member>
			<member name="C:SPoints" value="11">
			</member>
			<member name="C:Earnings" value="12">
			</member>
			<member name="C:explosionsr" value="13">
			</member>
			<member name="C:canrocket" value="14">
				<tagname value="bool"/>
			</member>
			<member name="C:canhealme" value="15">
				<tagname value="bool"/>
			</member>
			<member name="C:inhouse" value="16">
			</member>
			<member name="C:lvl" value="17">
			</member>
			<member name="C:fs" value="18">
			</member>
			<member name="C:acceptpms" value="19">
				<tagname value="bool"/>
			</member>
			<member name="C:SpawnProtect" value="20">
				<tagname value="bool"/>
			</member>
			<member name="C:xmas" value="21">
				<tagname value="bool"/>
			</member>
			<member name="C:sessiontime" value="22">
			</member>
			<member name="C:mytime" value="23">
			</member>
			<member name="C:myramp" value="24">
			</member>
			<member name="C:gInvited" value="25">
			</member>
			<member name="C:reporteda" value="26">
			</member>
			<member name="C:ctfflags" value="27">
			</member>
			<member name="C:MutedBy" value="28">
			</member>
			<member name="C:Wash" value="29">
			</member>
			<member name="C:Collisions" value="30">
				<tagname value="bool"/>
			</member>
			<member name="C:userID" value="31">
			</member>
			<member name="C:Class" value="32">
			</member>
			<member name="C:AdminLvl" value="33">
			</member>
			<member name="C:LevelBy" value="34">
			</member>
			<member name="C:Minigame" value="35">
			</member>
			<member name="C:LastCar" value="36">
			</member>
			<member name="C:Money" value="37">
			</member>
			<member name="C:PlayTime" value="38">
			</member>
			<member name="C:Deaths" value="39">
			</member>
			<member name="C:Logged" value="40">
				<tagname value="bool"/>
			</member>
			<member name="C:Registered" value="41">
				<tagname value="bool"/>
			</member>
			<member name="C:Banned" value="42">
				<tagname value="bool"/>
			</member>
			<member name="C:IP" value="43">
				<size value="16"/>
			</member>
			<member name="C:Skin" value="59">
			</member>
			<member name="C:Color" value="60">
			</member>
			<member name="C:God" value="61">
				<tagname value="bool"/>
			</member>
			<member name="C:Muted" value="62">
				<tagname value="bool"/>
			</member>
			<member name="C:Spawned" value="63">
				<tagname value="bool"/>
			</member>
			<member name="C:VIP" value="64">
			</member>
			<member name="C:RacesWon" value="65">
			</member>
			<member name="C:RacesJoined" value="66">
			</member>
			<member name="C:MyLabel" value="67">
				<tagname value="Text3D"/>
			</member>
			<member name="C:TDMJoined" value="68">
				<tagname value="bool"/>
			</member>
			<member name="C:KSpree" value="69">
			</member>
			<member name="C:AC_MoneyAlerts" value="70">
			</member>
			<member name="C:AC_ArmourAlerts" value="71">
			</member>
			<member name="C:AC_HealthAlerts" value="72">
			</member>
			<member name="C:AC_JackAlerts" value="73">
			</member>
			<member name="C:crashwarns" value="74">
			</member>
			<member name="C:PMs" value="75">
				<tagname value="bool"/>
			</member>
			<member name="C:autofix" value="76">
				<tagname value="bool"/>
			</member>
			<member name="C:Spam" value="77">
			</member>
			<member name="C:Token" value="78">
			</member>
			<member name="C:AdminMsgs" value="79">
				<tagname value="bool"/>
			</member>
			<member name="C:MyCar" value="80">
			</member>
			<member name="C:Editing" value="81">
			</member>
			<member name="C:IPLookups" value="82">
				<tagname value="bool"/>
			</member>
			<member name="C:AutoGM" value="83">
				<tagname value="bool"/>
			</member>
			<member name="C:MuteTimer" value="84">
			</member>
			<member name="C:JailTimer" value="85">
			</member>
			<member name="C:banked" value="86">
			</member>
			<member name="C:lastpm" value="87">
			</member>
			<member name="C:score" value="88">
			</member>
			<member name="C:hydra" value="89">
				<tagname value="bool"/>
			</member>
			<member name="C:rhino" value="90">
				<tagname value="bool"/>
			</member>
			<member name="C:bounty" value="91">
			</member>
			<member name="C:hidden" value="92">
				<tagname value="bool"/>
			</member>
			<member name="C:favwpn" value="93">
			</member>
			<member name="C:allowmg" value="94">
				<tagname value="bool"/>
			</member>
			<member name="C:afob" value="95">
				<tagname value="bool"/>
			</member>
			<member name="C:AdminChat" value="96">
			</member>
			<member name="C:dueling" value="97">
			</member>
			<member name="C:duelloc" value="98">
			</member>
			<member name="C:invited" value="99">
				<tagname value="bool"/>
			</member>
			<member name="C:explosions" value="100">
			</member>
			<member name="C:readpms" value="101">
				<tagname value="bool"/>
			</member>
			<member name="C:readteles" value="102">
				<tagname value="bool"/>
			</member>
			<member name="C:rockets" value="103">
				<tagname value="bool"/>
			</member>
			<member name="C:oranges" value="104">
			</member>
			<member name="C:apples" value="105">
			</member>
			<member name="C:groupName" value="106">
				<size value="21"/>
			</member>
			<member name="C:Kills" value="127">
			</member>
			<member name="C:Lotto" value="128">
			</member>
			<member name="C:DeathCount" value="129">
			</member>
			<member name="C:LastDeathTime" value="130">
			</member>
			<member name="C:vehDuel" value="131">
				<tagname value="bool"/>
			</member>
			<member name="C:VehDueler" value="132">
			</member>
			<member name="C:VehRequest" value="133">
			</member>
			<member name="C:fake_kill_warns" value="134">
			</member>
			<member name="C:ctf_wins" value="135">
			</member>
		</member>
		<member name="T:propinfo" value="98">
			<tagname value="propinfo"/>
			<member name="C:propText" value="0">
				<tagname value="Text3D"/>
			</member>
			<member name="C:PropName" value="1">
				<size value="64"/>
			</member>
			<member name="C:PropX" value="65">
				<tagname value="Float"/>
			</member>
			<member name="C:PropY" value="66">
				<tagname value="Float"/>
			</member>
			<member name="C:PropZ" value="67">
				<tagname value="Float"/>
			</member>
			<member name="C:PropIsBought" value="68">
			</member>
			<member name="C:PropUnbuyableTime" value="69">
			</member>
			<member name="C:PropOwner" value="70">
				<size value="24"/>
			</member>
			<member name="C:PropValue" value="94">
			</member>
			<member name="C:PropEarning" value="95">
			</member>
			<member name="C:PickupNr" value="96">
			</member>
			<member name="C:Buyable" value="97">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:server_data" value="13">
			<tagname value="server_data"/>
			<member name="C:TotalReports" value="0">
			</member>
			<member name="C:Uptime" value="1">
			</member>
			<member name="C:Team1Kills" value="2">
			</member>
			<member name="C:Team2Kills" value="3">
			</member>
			<member name="C:box" value="4">
			</member>
			<member name="C:boxtype" value="5">
			</member>
			<member name="C:ptp_president" value="6">
			</member>
			<member name="C:firstl" value="7">
				<tagname value="bool"/>
			</member>
			<member name="C:fakekillsac" value="8">
				<tagname value="bool"/>
			</member>
			<member name="C:banonevade" value="9">
				<tagname value="bool"/>
			</member>
			<member name="C:realtimedmg" value="10">
				<tagname value="bool"/>
			</member>
			<member name="C:precord" value="11">
			</member>
			<member name="C:bikeGameCP" value="12">
			</member>
		</member>
		<member name="T:wInfo" value="4">
			<tagname value="wInfo"/>
			<member name="C:Model" value="0">
			</member>
			<member name="C:Ammo" value="1">
			</member>
			<member name="C:Pickupid" value="2">
			</member>
			<member name="C:Ocuppied" value="3">
				<tagname value="bool"/>
			</member>
		</member>

		<!-- constants -->
		<member name="C:DCMD_TOTAL_CMD_SIZE" value="256">
			<referrer name="DCC_OnMessageCreate"/>
		</member>
		<member name="C:EOS" value="0">
			<referrer name="mS_strtok"/>
			<referrer name="strtok"/>
			<referrer name="stringContainsIP"/>
		</member>
		<member name="C:E_STREAMER_ATTACHED_VEHICLE" value="3">
			<referrer name="cmd_dmao"/>
		</member>
		<member name="C:E_STREAMER_EXTRA_ID" value="15">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_eo"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_nso"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dammi"/>
			<referrer name="cmd_damp"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_aotv"/>
			<referrer name="GetTotalCreatedObjects"/>
			<referrer name="GetVIPTotalCreatedObjects"/>
			<referrer name="DestroyDerbyObjects"/>
			<referrer name="cmd_gmlo"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_do"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="CreateAdminObject"/>
		</member>
		<member name="C:E_STREAMER_MODEL_ID" value="25">
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_gmlo"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_do"/>
		</member>
		<member name="C:FUNCTION_LENGTH" value="64">
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_DumpHeader"/>
			<library>y_compilerdata</library>  <remarks>  The maximum array required to store a symbol name.  i.e.  <c>__snamemax + 1</c>.  </remarks> 
		</member>
		<member name="C:SSCANF_VERSION" value="135944">
			<library>sscanf</library>  <remarks>  The sscanf version in BCD as a proper constant.  Example:  <code>  2.10.3  <br />  => 02 10 03 <br />  => 0x021003  </code>  </remarks> 
		</member>
		<member name="C:VEHICLE_PARAMS_ON" value="1">
			<tagname value="bool"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="cmd_alarm"/>
			<referrer name="cmd_boot"/>
			<referrer name="cmd_bonnet"/>
			<referrer name="cmd_engine"/>
			<referrer name="cmd_doors"/>
			<referrer name="cmd_lights"/>
			<referrer name="cmd_lock"/>
			<referrer name="cmd_unlock"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="C:YSI_g_c20s" value="-538976289">
			<referrer name="Cell_HasSpaceByte"/>
			<library>y_cell</library> 
		</member>
		<member name="C:YSI_g_c80s" value="-2139062144">
			<referrer name="Cell_HasZeroByte"/>
			<referrer name="Cell_HasSpaceByte"/>
			<library>y_cell</library> 
		</member>
		<member name="C:YSI_g_cFEs" value="-16843009">
			<referrer name="Cell_HasZeroByte"/>
			<referrer name="Cell_HasSpaceByte"/>
			<library>y_cell</library> 
		</member>
		<member name="C:__11_cells" value="44">
			<referrer name="Iter_YieldEnter"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  </remarks> 
		</member>
		<member name="C:__1_cell" value="4">
			<referrer name="AMX_ReadArray"/>
			<referrer name="AMX_WriteArray"/>
			<referrer name="K@"/>
			<referrer name="va_strlen"/>
			<referrer name="PrintArg"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  </remarks> 
		</member>
		<member name="C:__2_cells" value="8">
			<referrer name="K@"/>
			<referrer name="va_strlen"/>
			<referrer name="va_return"/>
			<referrer name="PrintArg"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  </remarks> 
		</member>
		<member name="C:__3_cells" value="12">
			<referrer name="K@"/>
			<referrer name="va_strlen"/>
			<referrer name="va_getstring"/>
			<referrer name="ReturnStringArg"/>
			<referrer name="PrintArg"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  </remarks> 
		</member>
		<member name="C:__4_cells" value="16">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="va_getstring"/>
			<referrer name="ReturnStringArg"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  </remarks> 
		</member>
		<member name="C:__5_cells" value="20">
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  </remarks> 
		</member>
		<member name="C:__6_cells" value="24">
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  </remarks> 
		</member>
		<member name="C:__7_cells" value="28">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  </remarks> 
		</member>
		<member name="C:__9_cells" value="36">
			<referrer name="ScriptInit_CodeInitFuncs_"/>
			<referrer name="ScriptInit_MainInitFuncs_"/>
			<referrer name="ScriptInit_PreInitFuncs_"/>
			<referrer name="ScriptInit_PostInitFuncs_"/>
			<referrer name="ScriptInit_PreExitFuncs_"/>
			<referrer name="ScriptInit_PostExitFuncs_"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  </remarks> 
		</member>
		<member name="C:__COMPILER_CODEPAGE_TEST_2" value="255">
			<library>y_compilerdata</library>  <remarks>  If the script is determined not to be using DBCS, we still need to  determine the single byte codepage in use.  The best character to use for  this is <c>'\255'</c>, which is a different unicode character in a large  number of codepages.  If the resulting value is unique to one codepage, we  know it is that codepage.  If it isn't then further differentiation is  required.  </remarks> 
		</member>
		<member name="C:__COMPILER_CODEPAGE_TEST_7" value="128">
			<library>y_compilerdata</library>  <remarks>  This differentiates between codepages that don't translate <c>'\255'</c> to  anything (i.e. it remains the same).  </remarks> 
		</member>
		<member name="C:__COMPILER_DETERMINE_SEMICOLON" value="1">
			<library>y_compilerdata</library>  <remarks>  This is a variable with the value <c>1</c>, and there is a macro of the  same name with the value <c>0</c>.  The macro also looks for a semi-colon  to match; however, if semi-colons are optional an end of line will also  match a semi-colon in a macro.  We then use this name in a test that does  NOT end with a semi-colon.  If <c>-;-</c> is active the macro will take  precedence and produce <c>0</c>.  If <c>-;+</c> is active the macro will  not match, and so the variable will be used instead.  Thus in this way we  can detect the flag.  </remarks> 
		</member>
		<member name="C:__Pawn" value="778">
			<referrer name="Server_GetCompilerVersion"/>
			<referrer name="Script_GetCompilerVersion"/>
			<referrer name="Script_GetCompilerString"/>
			<referrer name="YVers_PrintHeader"/>
		</member>
		<member name="C:__PawnBuild" value="11">
			<referrer name="Server_GetCompilerVersion"/>
			<referrer name="Script_GetCompilerVersion"/>
			<referrer name="Script_GetCompilerString"/>
		</member>
		<member name="C:__args_offset" value="8">
			<referrer name="AMX_GetGlobalAddress"/>
			<referrer name="AMX_GetRelativeAddress"/>
			<referrer name="K@"/>
			<referrer name="F@"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the parameter count.  </remarks> 
		</member>
		<member name="C:__cell_bytes" value="4">
			<library>y_emit</library>  <remarks>  The number of bytes in one cell.  Usually 4.  </remarks> 
		</member>
		<member name="C:__cell_shift" value="2">
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Debug_IsStringLike"/>
			<referrer name="va_strlen"/>
			<referrer name="va_getstring"/>
			<referrer name="PrintArg"/>
			<referrer name="Base64Encode"/>
			<referrer name="Base64Decode"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="DoLevenshteinDistance"/>
			<referrer name="DoLevenshteinDistancePackA"/>
			<referrer name="DoLevenshteinDistancePackB"/>
			<referrer name="DoLevenshteinDistancePackAB"/>
			<referrer name="Iter_Random_Impl"/>
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_RandomFree_Multi"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<library>y_emit</library>  <remarks>  The number of places you must shift a byte count by to get a cell count,  i.e. <c>log2(cellbytes)</c>.  We could use division by <c>cellbytes</c> for  this conversion, but a shift is faster, hence why this value must exist.  </remarks> 
		</member>
		<member name="C:__cip" value="6">
			<referrer name="@_yT"/>
			<referrer name="Server_GetJITVersion"/>
			<referrer name="AMX_GetGlobal"/>
			<referrer name="ScriptInit_CodeInitFuncs_"/>
			<referrer name="ScriptInit_MainInitFuncs_"/>
			<referrer name="ScriptInit_PreInitFuncs_"/>
			<referrer name="ScriptInit_PostInitFuncs_"/>
			<referrer name="ScriptInit_PreExitFuncs_"/>
			<referrer name="ScriptInit_PostExitFuncs_"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  The <c>CIP</c> register number for use in <c>LCTRL</c> and <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:__cod" value="0">
			<referrer name="Server_IsLinuxHost"/>
			<referrer name="Server_IsWindowsHost"/>
			<library>y_emit</library>  <remarks>  The <c>COD</c> register number for use in <c>LCTRL</c> and <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:__crash_flag" value="255">
			<referrer name="Server_GetLongCallDefault"/>
			<referrer name="Server_UpgradeCrashDetect"/>
			<referrer name="Server_DisableLongCall"/>
			<referrer name="Server_EnableLongCall"/>
			<referrer name="Server_ResetLongCallTime"/>
			<referrer name="Server_RestartLongCall"/>
			<referrer name="Server_IsLongCallEnabled"/>
			<referrer name="Server_DisableDetectAddr0"/>
			<referrer name="Server_EnableDetectAddr0"/>
			<referrer name="Server_IsDetectAddr0Enabled"/>
			<referrer name="Server_HasDetectAddr0"/>
			<referrer name="Server_CrashDetectExists"/>
			<library>y_emit</library>  <remarks>  The crashdetect flags register value for use in <c>LCTRL</c> and  <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:__crash_time" value="254">
			<referrer name="Server_GetLongCallDefault"/>
			<referrer name="Server_SetLongCallTime"/>
			<referrer name="Server_GetLongCallTime"/>
			<library>y_emit</library>  <remarks>  The crashdetect time register value for use in <c>LCTRL</c> and  <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:__dat" value="1">
			<referrer name="Server_IsLinuxHost"/>
			<referrer name="Server_IsWindowsHost"/>
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetGlobal"/>
			<library>y_emit</library>  <remarks>  The <c>DAT</c> register number for use in <c>LCTRL</c> and <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:__debug" value="2">
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="OnJITCompile"/>
			<referrer name="YVers_StartCheck"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<library>y_compilerdata</library>  <remarks>  The debug level, but with a more consistent name for compiler-defined  constants.  </remarks> 
		</member>
		<member name="C:__defsize_cells" value="8">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetNativeEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetNativeEntrySuffix"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="AMX_GetNativeNamePrefix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<referrer name="AMX_GetEntryFromNativeIndex"/>
			<referrer name="AMX_GetEntryFromPublicIndex"/>
			<referrer name="AMX_GetNativeIndexFromEntry"/>
			<referrer name="AMX_GetPublicIndexFromEntry"/>
			<library>y_emit</library>  <remarks>  The size of a table entry in the AMX header.  This is not always a exact  multiple of the cell size, i.e. NOT <c>2 * __cell_bytes</c>.  The internal  pointer is always 32 bits, while the external pointer is whatever native  size is needed.  </remarks> 
		</member>
		<member name="C:__flg" value="9">
			<referrer name="AMX_NativeNamePointers"/>
			<library>y_emit</library>  <remarks>  The open.mp VM flags register value for use in <c>LCTRL</c> and  <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:__frame_offset" value="0">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="va_getstring"/>
			<referrer name="PrintArg"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the current frame pointer to the previous  frame pointer.  As it happens, this is directly pointed to.  </remarks> 
		</member>
		<member name="C:__frm" value="5">
			<referrer name="SetTimerExAddr"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  The <c>FRM</c> register number for use in <c>LCTRL</c> and <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:__hea" value="2">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="F@"/>
			<referrer name="DoLevenshteinDistance"/>
			<referrer name="DoLevenshteinDistancePackA"/>
			<referrer name="DoLevenshteinDistancePackB"/>
			<referrer name="DoLevenshteinDistancePackAB"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  The <c>HEA</c> register number for use in <c>LCTRL</c> and <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:__jit_jump" value="8">
			<referrer name="Server_GetJITVersion"/>
			<referrer name="ScriptInit_CodeInitFuncs_"/>
			<referrer name="ScriptInit_MainInitFuncs_"/>
			<referrer name="ScriptInit_PreInitFuncs_"/>
			<referrer name="ScriptInit_PostInitFuncs_"/>
			<referrer name="ScriptInit_PreExitFuncs_"/>
			<referrer name="ScriptInit_PostExitFuncs_"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  The JIT plugin address translation register value for use in <c>LCTRL</c>  and <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:__line" value="51763">
			<referrer name="cmd_version"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="cmd_getdist"/>
			<referrer name="cmd_rmbuilding"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_spinvehicle"/>
			<referrer name="cmd_spinvehiclex"/>
			<referrer name="cmd_spinvehicley"/>
			<referrer name="cmd_spinvehiclez"/>
			<referrer name="cmd_mjh"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="cmd_mjv"/>
			<referrer name="LoadKeys"/>
			<referrer name="DCMD_stats"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_rho"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_lho"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_cbone"/>
			<referrer name="cmd_eho"/>
			<referrer name="cmd_dho"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_ttp"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_sendoranges"/>
			<referrer name="cmd_sendapples"/>
			<referrer name="cmd_sendtokens"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_getid"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_deposit"/>
			<referrer name="cmd_withdraw"/>
			<referrer name="cmd_setmyradio"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_cc"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_eject"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_pj"/>
			<referrer name="cmd_dactor"/>
			<referrer name="cmd_actorkill"/>
			<referrer name="cmd_actorstrip"/>
			<referrer name="cmd_addactor"/>
			<referrer name="cmd_skin"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ask"/>
			<referrer name="cmd_answer"/>
			<referrer name="cmd_frr"/>
			<referrer name="cmd_dpt"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_cam"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_adddrift"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_expo"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_eo"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_gom"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_aotv"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_do"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_playaudioplayer"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_spooflost"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_myweather"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_fakekill"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_fakeban"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_mytime"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_takevip"/>
			<referrer name="cmd_takepro"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_setep"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<referrer name="cmd_bankrupt"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="cmd_setplayeroranges"/>
			<referrer name="cmd_setplayerapples"/>
			<referrer name="cmd_setplayerraceswon"/>
			<referrer name="cmd_setplayerplaytime"/>
			<referrer name="cmd_setplayerracesjoined"/>
			<referrer name="cmd_setplayerkills"/>
			<referrer name="cmd_setplayerworld"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_asay"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givejp"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_gotocoords"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_mytoken"/>
			<referrer name="cmd_settoken"/>
			<referrer name="cmd_buytokens"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_loadrace"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="cmd_rweather"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_cpsize"/>
			<referrer name="cmd_saverace"/>
			<referrer name="cmd_deleterace"/>
			<referrer name="cmd_undeleterace"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="ConvertProperties"/>
		</member>
		<member name="C:__local0_offset" value="-4">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="Base64Encode"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the first local  parameter.  As the stack grows down this is negative.  </remarks> 
		</member>
		<member name="C:__local1_offset" value="-8">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="Base64Encode"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the second local  parameter.  As the stack grows down this is negative.  </remarks> 
		</member>
		<member name="C:__local2_offset" value="-12">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the third local  parameter.  As the stack grows down this is negative.  </remarks> 
		</member>
		<member name="C:__m1_cell" value="-4">
			<referrer name="@_yT"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  Represents -1 cells.  </remarks> 
		</member>
		<member name="C:__m1_cells" value="-4">
			<referrer name="Base64Decode"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  Represents -1 cells.  </remarks> 
		</member>
		<member name="C:__m3_cells" value="-12">
			<referrer name="AMX_GetGlobal"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  Represents -3 cells.  </remarks> 
		</member>
		<member name="C:__m7_cells" value="-28">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<library>y_emit</library>  <remarks>  Just a number of cells, converted to bytes, to make various bits of maths  more clear.  Some of these values overlap with parameter offsets and the  like, but these are separate to differentiate the different use-cases.  Represents -7 cells.  </remarks> 
		</member>
		<member name="C:__minus1" value="-1">
			<referrer name="Iter_YieldLoop"/>
			<library>y_emit</library>  <remarks>  Literally just <c>-1</c>, but as a constant so that it can be used with  <c>#emit</c>.  Using <c>#emit CONST.pri -1</c> is a syntax error, because  who knows why...  You can use <c>#emit CONST.pri 0xFFFFFFFF</c>, i.e.  encode <c>-1</c> as a twos-complement hex value (why do hex numbers work  when negative numbers don't), but this is not very readable, and can't be  improved with <c>#define</c> as macros don't work with <c>#emit</c> either  (again, why does <c>const</c> work when <c>#define</c>, and even <c>#if</c>  doesn't).  We could do this for all negative numbers, but this is by far  the most useful one that isn't a multiple of the cell size.  </remarks> 
		</member>
		<member name="C:__namemax" value="63">
			<summary>  The maximum length of symbol names, excluding any NULLs.  </summary> 
		</member>
		<member name="C:__optimisation" value="0">
			<library>y_compilerdata</library>  <remarks>  The current optimisation level, spelt correctly.  </remarks> 
		</member>
		<member name="C:__optimization" value="0">
		</member>
		<member name="C:__param0_offset" value="12">
			<referrer name="AMX_GetGlobalAddress"/>
			<referrer name="AMX_GetRelativeAddress"/>
			<referrer name="K@"/>
			<referrer name="ReturnStringArg"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the first parameter.  This is directly after the previous frame pointer, the return address,  and the parameter count.  </remarks> 
		</member>
		<member name="C:__param1_offset" value="16">
			<referrer name="AMX_Deref"/>
			<referrer name="ReturnStringArg"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the second parameter.  </remarks> 
		</member>
		<member name="C:__param3_offset" value="24">
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the fourth parameter.  </remarks> 
		</member>
		<member name="C:__param4_offset" value="28">
			<referrer name="Iter_Random_Impl"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<referrer name="Iter_RandomFree_Multi"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the fifth parameter.  </remarks> 
		</member>
		<member name="C:__param5_offset" value="32">
			<referrer name="Debug_PrintQ_IMPL"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the sixth parameter.  </remarks> 
		</member>
		<member name="C:__param6_offset" value="36">
			<referrer name="Iter_RandomAdd_InternalD"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the seventh parameter.  </remarks> 
		</member>
		<member name="C:__return_offset" value="4">
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  The offset in the stack from the frame pointer to the return address.  </remarks> 
		</member>
		<member name="C:__stk" value="4">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_emit</library>  <remarks>  The <c>STK</c> register number for use in <c>LCTRL</c> and <c>SCTRL</c>.  </remarks> 
		</member>
		<member name="C:cellbits" value="32">
			<referrer name="AMX_HeaderTableSwap"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetNativeEntrySuffix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<referrer name="AMX_ReadLength"/>
			<referrer name="AMX_ReadUnpackedString"/>
			<referrer name="BernsteinHash"/>
			<referrer name="bernstein"/>
			<referrer name="Iter_Func@Fib"/>
		</member>
		<member name="C:cellbytes" value="4">
			<referrer name="O@A_"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Debug_IsStringLike"/>
			<referrer name="AMX_HeaderTableSwap"/>
			<referrer name="AMX_HeaderTablePartition"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_TraceMemory"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetNativeEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetNativeEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNativeNamePrefix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<referrer name="AMX_GetLengthFromEntry"/>
			<referrer name="AMX_ReadLength"/>
			<referrer name="AMX_GetStringFromEntry"/>
			<referrer name="AMX_ReadPackedString"/>
			<referrer name="AMX_ReadUnpackedString"/>
			<referrer name="AMX_WriteString"/>
			<referrer name="AMX_GetTagByValue"/>
			<referrer name="AMX_GetFirstString"/>
			<referrer name="AMX_GetFirstNativeString"/>
			<referrer name="ReturnStringArg"/>
			<referrer name="MemSet"/>
			<referrer name="memset"/>
			<referrer name="RawMemSet"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="Iter_Random_Impl"/>
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_RandomFree_Multi"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<referrer name="Iter_Init_Internal"/>
			<p/>
		</member>
		<member name="C:cellmax" value="2147483647">
			<referrer name="operator!(Float:)"/>
			<referrer name="Cell_Abs"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="Range"/>
			<referrer name="rawMemcpy"/>
			<referrer name="GetNearestColourLinear"/>
			<referrer name="Iter_Debug_InternalC"/>
			<referrer name="Iter_Debug_InternalD"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="RandomMessages"/>
			<referrer name="RmInvis"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="DCMD_players"/>
			<referrer name="cmd_report"/>
			<referrer name="CTFTimeout"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_armorall"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="SendMessageToAdmins_PM"/>
			<referrer name="SendMessageToMinigame"/>
			<referrer name="SendMessageToAdmins_Tele"/>
			<referrer name="SendMessageToAdmins"/>
			<referrer name="PlaySoundForAdmins"/>
			<referrer name="SendMessageToAdminsExPlayer"/>
			<referrer name="SendMessageToAdminsEx"/>
			<referrer name="SendMessageToAdminsEx_Lookup"/>
			<referrer name="SendTeleMessageToAdmins"/>
			<referrer name="GetAdminCount"/>
			<referrer name="GetVIPCount"/>
			<referrer name="PlaySoundForAll"/>
			<referrer name="Chat_SendMessageToAdmins"/>
			<referrer name="IsSeatTaken"/>
			<referrer name="GetPlayerID"/>
			<referrer name="SendClientMessageToAllEx"/>
			<referrer name="AutoNewsChange"/>
		</member>
		<member name="C:cellmin" value="-2147483648">
			<referrer name="operator-(Float:)"/>
			<referrer name="Range"/>
			<referrer name="IsNumeric"/>
			<referrer name="IsHex"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="EndOfLine"/>
			<referrer name="SkipWhitespace"/>
			<referrer name="Trim"/>
			<referrer name="CensorPlayerIP"/>
			<referrer name="IsRPName"/>
			<referrer name="IterativeColouredSkipSUnpacked"/>
			<referrer name="IterativeColouredSkipWUnpacked"/>
			<referrer name="IterativeColouredSkipSPacked"/>
			<referrer name="IterativeColouredSkipWPacked"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<referrer name="Iter_Random_Impl"/>
			<referrer name="Iter_RandomFree_Multi"/>
			<referrer name="Iter_RandomFree_Single"/>
			<referrer name="Iter_Alloc_InternalC"/>
			<referrer name="Iter_Alloc_InternalD"/>
			<referrer name="Iter_Free_Internal"/>
			<referrer name="Iter_FreeMulti_Internal"/>
			<referrer name="Iter_Add_InternalC"/>
			<referrer name="Iter_Add_InternalD"/>
			<referrer name="Iter_Index_Internal"/>
			<referrer name="Iter_Remove_InternalC"/>
			<referrer name="Iter_Remove_InternalD"/>
			<referrer name="Iter_SafeRemove_1"/>
			<referrer name="Iter_SafeRemove_2"/>
			<referrer name="Iter_GetMulti_Internal"/>
			<referrer name="Iter_Func@Range"/>
			<referrer name="Iter_Func@Random"/>
			<referrer name="SSCANF_GetSimilarString"/>
			<referrer name="SSCANF_GetSimilarValue"/>
			<referrer name="SSCANF_GetClosestString"/>
			<referrer name="SSCANF_GetClosestValue"/>
		</member>
		<member name="C:charbits" value="8">
		</member>
		<member name="C:charmax" value="254">
		</member>
		<member name="C:debug" value="2">
		</member>
		<member name="C:e_VEHICLE_FLAGS_Ambulance" value="262144">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Armed" value="536870912">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Bike" value="65536">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Boat" value="16384">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Airplane" value="1">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Bike" value="3">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Boat" value="12">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Convertible" value="4">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Helicopter" value="2">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Industrial" value="5">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Lowrider" value="6">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_OffRoad" value="7">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Public" value="8">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_RC" value="15">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Saloon" value="9">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Sport" value="10">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Station" value="11">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Trailer" value="13">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_CAT_Unique" value="14">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Car" value="16">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Coastguard" value="2097152">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_FBI" value="512">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Fire" value="128">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Flowerpot" value="134217728">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Helicopter" value="8192">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_LS" value="8388608">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_LV" value="33554432">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Manual" value="131072">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Military" value="2048">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_NONE" value="0">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_OnWater" value="1048576">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Plane" value="32768">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Police" value="256">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_SF" value="16777216">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_SWAT" value="1024">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Tank" value="67108864">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Taxi" value="524288">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Train" value="4194304">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Transport" value="268435456">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Truck" value="32">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Van" value="64">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:e_VEHICLE_FLAGS_Weaponised" value="4096">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="C:false" value="0">
			<tagname value="bool"/>
			<referrer name="O@A_"/>
			<referrer name="IsCrashDetectPresent"/>
			<referrer name="YSI_IsLocalVarPackedString__"/>
			<referrer name="Server_IsLinuxCompiler"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_HasLongCallControl"/>
			<referrer name="OnJITCompile"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="Server_UpgradeCrashDetect"/>
			<referrer name="Server_IsLongCallEnabled"/>
			<referrer name="Server_IsDetectAddr0Enabled"/>
			<referrer name="Server_HasDetectAddr0"/>
			<referrer name="Server_CrashDetectExists"/>
			<referrer name="YVers_Callback"/>
			<referrer name="Debug_GetState"/>
			<referrer name="Debug_IsStringLike"/>
			<referrer name="Cell_HasZeroByte"/>
			<referrer name="Cell_HasSpaceByte"/>
			<referrer name="IsPCPlayer"/>
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="EndOfLine"/>
			<referrer name="ChrFind"/>
			<referrer name="fautocleanup"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<referrer name="DottedToIntIP"/>
			<referrer name="CensorIntIP"/>
			<referrer name="CensorDottedIP"/>
			<referrer name="CensorPlayerIP"/>
			<referrer name="GetPlayerRPName"/>
			<referrer name="GetPlayerRPComponents"/>
			<referrer name="IsRPName"/>
			<referrer name="IterativeColouredSkipWUnpacked"/>
			<referrer name="IterativeColouredSkipWPacked"/>
			<referrer name="IterativeTextSplitter"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="Iter_Func@VehiclePassenger"/>
			<referrer name="Iter_Func@VehicleDriver"/>
			<referrer name="mS_CreateCurrentPageTextDraw"/>
			<referrer name="mS_CreatePlayerHeaderTextDraw"/>
			<referrer name="LoadModelSelectionMenu"/>
			<referrer name="DCC_OnMessageCreate"/>
			<referrer name="formatex"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="DisableSpawnProtection"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="StopSpec"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_trt"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="FreeWeaponDrop"/>
			<referrer name="RemoveWeaponDropped"/>
			<referrer name="LooseWeapons"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="countdownr"/>
			<referrer name="countdown"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_michelles"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="VehExpire"/>
			<referrer name="GetPlayerClosestPlayer"/>
			<referrer name="cmd_trytofixctf"/>
			<referrer name="cmd_skydive"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_lcp"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_megajump"/>
			<referrer name="cmd_disableallmegajump"/>
			<referrer name="cmd_dmj"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="DerbyTimer"/>
			<referrer name="UnmutePlayer_Timer"/>
			<referrer name="IsBoat"/>
			<referrer name="IsPlane"/>
			<referrer name="IsInCar"/>
			<referrer name="IsVIP"/>
			<referrer name="IsVIPLevel2"/>
			<referrer name="Login"/>
			<referrer name="IsValidDBWeapon"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="IsNameConnected"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_rho"/>
			<referrer name="cmd_raho"/>
			<referrer name="cmd_lho"/>
			<referrer name="cmd_skateboard"/>
			<referrer name="cmd_shark"/>
			<referrer name="cmd_broom"/>
			<referrer name="cmd_ballhead"/>
			<referrer name="cmd_witchhat"/>
			<referrer name="cmd_pumpkin"/>
			<referrer name="cmd_xmashat"/>
			<referrer name="cmd_penis"/>
			<referrer name="cmd_helmet"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_setpropbuyable"/>
			<referrer name="cmd_setpropunbuyable"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_playduel"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="Duel_EndWait"/>
			<referrer name="Duel_End"/>
			<referrer name="Duel_CreatePlayerArena"/>
			<referrer name="Duel_DestroyPlayerArena"/>
			<referrer name="cmd_afob"/>
			<referrer name="cmd_healme"/>
			<referrer name="cmd_rneon"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_alarm"/>
			<referrer name="cmd_boot"/>
			<referrer name="cmd_bonnet"/>
			<referrer name="cmd_engine"/>
			<referrer name="cmd_doors"/>
			<referrer name="cmd_lights"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_actorstrip"/>
			<referrer name="cmd_admins"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_denypms"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_savestats"/>
			<referrer name="cmd_saveallstats"/>
			<referrer name="cmd_libertycity"/>
			<referrer name="cmd_cage"/>
			<referrer name="cmd_unlock"/>
			<referrer name="cmd_club"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_strip"/>
			<referrer name="cmd_strip1"/>
			<referrer name="cmd_strip2"/>
			<referrer name="cmd_strip3"/>
			<referrer name="cmd_strip4"/>
			<referrer name="cmd_strip5"/>
			<referrer name="cmd_smoke"/>
			<referrer name="cmd_onfire"/>
			<referrer name="cmd_cpr"/>
			<referrer name="cmd_fu"/>
			<referrer name="cmd_sit"/>
			<referrer name="cmd_puke"/>
			<referrer name="cmd_kissing"/>
			<referrer name="cmd_wank"/>
			<referrer name="cmd_lean"/>
			<referrer name="cmd_injured"/>
			<referrer name="cmd_evc"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_af"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_smenu"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_me"/>
			<referrer name="DeleteMovingData"/>
			<referrer name="Assigned_GiveFreeMovingID"/>
			<referrer name="cmd_showme"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_togglefakekillsban"/>
			<referrer name="cmd_davr"/>
			<referrer name="cmd_togglevehiclerockets"/>
			<referrer name="cmd_changeevadeaction"/>
			<referrer name="cmd_toggleadminmessages"/>
			<referrer name="cmd_readpms"/>
			<referrer name="cmd_readteles"/>
			<referrer name="cmd_toggleiplookups"/>
			<referrer name="cmd_toggleautogodmode"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_leavetdm"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_changetdm"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_countdown"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_disablehydraall"/>
			<referrer name="cmd_disablerhinoall"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="cmd_rweather"/>
			<referrer name="cmd_deathrace"/>
			<referrer name="cmd_racerotation"/>
			<referrer name="cmd_racenos"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="TT_Announcement"/>
			<referrer name="TT_StartRaceCD"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
			<referrer name="SaveRace"/>
			<referrer name="ClearRace"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="IsAdmin"/>
			<referrer name="IsPlayerAdminLevel"/>
			<referrer name="GetAdminCount"/>
			<referrer name="fcreate"/>
			<referrer name="IsValidSkin"/>
			<referrer name="IsPlayerInInvalidNosVehicle"/>
			<referrer name="IsNumeric2"/>
			<referrer name="RaceVehicle"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="Token_Weapons"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="nofun"/>
			<referrer name="cmd_rtpall"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="cmd_cmtp"/>
			<referrer name="cmd_tps"/>
			<referrer name="HO_load"/>
			<referrer name="HO_Addons"/>
			<referrer name="HO_Addons2"/>
			<referrer name="HO_Addons3"/>
			<referrer name="Kick2"/>
			<referrer name="BanEx2"/>
			<referrer name="EasterEggPickup"/>
			<referrer name="SendInfoText"/>
			<referrer name="CountDownDriftTimer"/>
			<referrer name="DriftSave"/>
			<referrer name="Drift"/>
			<referrer name="AngleUpdate"/>
			<referrer name="CheckPlayerState"/>
			<referrer name="_B@Action"/>
			<referrer name="ResetVariables"/>
			<referrer name="StartRace"/>
			<referrer name="AddProperty"/>
			<referrer name="LoadProperties"/>
			<referrer name="BInt_PBuyable"/>
			<referrer name="IsPlayerInDeliveryVehicle"/>
		</member>
		<member name="C:true" value="1">
			<tagname value="bool"/>
			<referrer name="Server_IsWindowsCompiler"/>
			<referrer name="Server_FinishIntroPart"/>
			<referrer name="Server_FinishIntroMessage"/>
			<referrer name="Server_HasLongCallControl"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="OnJITCompile"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="Debug_GetState"/>
			<referrer name="Debug_Enable"/>
			<referrer name="Debug_Disable"/>
			<referrer name="AMX_NativeNamePointers"/>
			<referrer name="IsAndroidPlayer"/>
			<referrer name="OnAndroidTimer"/>
			<referrer name="BoolStr"/>
			<referrer name="fautocleanup"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="DottedToIntIP"/>
			<referrer name="CensorIntIP"/>
			<referrer name="GetPlayerRPName"/>
			<referrer name="IsRPName"/>
			<referrer name="IterativeColouredSkipWUnpacked"/>
			<referrer name="IterativeColouredSkipWPacked"/>
			<referrer name="IterativeTextSplitter"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_Func@VehiclePassenger"/>
			<referrer name="Iter_Func@VehicleDriver"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<referrer name="LoadModelSelectionMenu"/>
			<referrer name="DCC_OnMessageCreate"/>
			<referrer name="InitializeFormatSpecifiers"/>
			<referrer name="formatex"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="RandomGame"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="cmd_trt"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="ForbidWeaponDrop"/>
			<referrer name="LooseWeapons"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_delivery"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_search"/>
			<referrer name="cmd_rafinha"/>
			<referrer name="cmd_ic"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_lcp"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_megajump"/>
			<referrer name="cmd_enableallmegajump"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="OnPlayerFloodControl"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="GetWeaponIDFromName"/>
			<referrer name="IsBoat"/>
			<referrer name="IsPlane"/>
			<referrer name="IsInCar"/>
			<referrer name="IsVIP"/>
			<referrer name="IsVIPLevel2"/>
			<referrer name="Login"/>
			<referrer name="Save"/>
			<referrer name="IntBool"/>
			<referrer name="GotoPosition"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="IsValidDBWeapon"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="IsNameConnected"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_skateboard"/>
			<referrer name="cmd_shark"/>
			<referrer name="cmd_broom"/>
			<referrer name="cmd_ballhead"/>
			<referrer name="cmd_witchhat"/>
			<referrer name="cmd_pumpkin"/>
			<referrer name="cmd_xmashat"/>
			<referrer name="cmd_penis"/>
			<referrer name="cmd_helmet"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_xmasgift"/>
			<referrer name="cmd_amanda"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_getid"/>
			<referrer name="cmd_playduel"/>
			<referrer name="DuelStart"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dm"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="Duel_CreatePlayerArena"/>
			<referrer name="Duel_DestroyPlayerArena"/>
			<referrer name="GetWeaponModelIDFromName"/>
			<referrer name="ReturnPlayerID"/>
			<referrer name="cmd_afob"/>
			<referrer name="cmd_rneon"/>
			<referrer name="cmd_tune"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_alarm"/>
			<referrer name="cmd_boot"/>
			<referrer name="cmd_bonnet"/>
			<referrer name="cmd_engine"/>
			<referrer name="cmd_doors"/>
			<referrer name="cmd_lights"/>
			<referrer name="cmd_ssb"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_actorstrip"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_acceptpms"/>
			<referrer name="EnablePMs"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_pier69"/>
			<referrer name="cmd_m1"/>
			<referrer name="cmd_m2"/>
			<referrer name="cmd_m3"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_runwayls"/>
			<referrer name="cmd_runwaylv"/>
			<referrer name="cmd_runwaysf"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_lsajump"/>
			<referrer name="cmd_lock"/>
			<referrer name="cmd_beach"/>
			<referrer name="cmd_tf"/>
			<referrer name="cmd_lowrider"/>
			<referrer name="cmd_waa"/>
			<referrer name="cmd_sws"/>
			<referrer name="cmd_twister"/>
			<referrer name="cmd_loopstunt"/>
			<referrer name="cmd_jump"/>
			<referrer name="cmd_quarry"/>
			<referrer name="cmd_parkour4"/>
			<referrer name="cmd_parkour5"/>
			<referrer name="cmd_parkour6"/>
			<referrer name="cmd_parkour7"/>
			<referrer name="cmd_parajump1"/>
			<referrer name="cmd_parajump2"/>
			<referrer name="cmd_parajump4"/>
			<referrer name="cmd_parajump5"/>
			<referrer name="cmd_dmzone1"/>
			<referrer name="cmd_dmzone2"/>
			<referrer name="cmd_dmzone3"/>
			<referrer name="cmd_dmzone4"/>
			<referrer name="cmd_dmzone5"/>
			<referrer name="cmd_dmzone6"/>
			<referrer name="cmd_dmzone7"/>
			<referrer name="cmd_dmzone8"/>
			<referrer name="cmd_dmzone9"/>
			<referrer name="cmd_dmzone10"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ph"/>
			<referrer name="cmd_wb"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_sex"/>
			<referrer name="cmd_bayside"/>
			<referrer name="cmd_docks"/>
			<referrer name="cmd_methlab"/>
			<referrer name="cmd_snakefarm"/>
			<referrer name="cmd_motel"/>
			<referrer name="cmd_gasstation"/>
			<referrer name="cmd_jays"/>
			<referrer name="cmd_gantdiner"/>
			<referrer name="cmd_8track"/>
			<referrer name="cmd_lshospital"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_cityhall"/>
			<referrer name="cmd_area69"/>
			<referrer name="cmd_waterfall"/>
			<referrer name="cmd_grove"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_pirateship"/>
			<referrer name="cmd_underbase"/>
			<referrer name="cmd_sfadrop"/>
			<referrer name="cmd_alexm"/>
			<referrer name="cmd_bikestunt"/>
			<referrer name="cmd_playaz"/>
			<referrer name="cmd_francy"/>
			<referrer name="cmd_mansion"/>
			<referrer name="cmd_cj101"/>
			<referrer name="cmd_venera"/>
			<referrer name="cmd_vida"/>
			<referrer name="cmd_deathangel"/>
			<referrer name="cmd_boeing747"/>
			<referrer name="cmd_meghan"/>
			<referrer name="cmd_saloun2"/>
			<referrer name="cmd_saloun3"/>
			<referrer name="cmd_braylon"/>
			<referrer name="cmd_gibbs"/>
			<referrer name="cmd_bikepark"/>
			<referrer name="cmd_hq"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_panzehir"/>
			<referrer name="cmd_assa"/>
			<referrer name="cmd_john"/>
			<referrer name="cmd_reham"/>
			<referrer name="cmd_woa"/>
			<referrer name="cmd_police"/>
			<referrer name="cmd_kjj"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_east"/>
			<referrer name="cmd_cvondz"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_datower"/>
			<referrer name="cmd_peckers"/>
			<referrer name="cmd_city"/>
			<referrer name="cmd_ft"/>
			<referrer name="cmd_city2"/>
			<referrer name="cmd_city3"/>
			<referrer name="cmd_city4"/>
			<referrer name="cmd_city5"/>
			<referrer name="cmd_nrgstunt2"/>
			<referrer name="cmd_driftcity"/>
			<referrer name="cmd_drift1"/>
			<referrer name="cmd_drift2"/>
			<referrer name="cmd_drift3"/>
			<referrer name="cmd_drift4"/>
			<referrer name="cmd_drift5"/>
			<referrer name="cmd_drift6"/>
			<referrer name="cmd_windy"/>
			<referrer name="cmd_probe"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_disco"/>
			<referrer name="cmd_factory"/>
			<referrer name="cmd_sumo1"/>
			<referrer name="cmd_vrock"/>
			<referrer name="cmd_vrock2"/>
			<referrer name="cmd_bedroom"/>
			<referrer name="cmd_janitor"/>
			<referrer name="cmd_woozie"/>
			<referrer name="cmd_restaurant"/>
			<referrer name="cmd_sweets"/>
			<referrer name="cmd_dam"/>
			<referrer name="cmd_donuts"/>
			<referrer name="cmd_railroad"/>
			<referrer name="cmd_rcbox"/>
			<referrer name="cmd_crackhouse"/>
			<referrer name="cmd_meathouse"/>
			<referrer name="cmd_prison"/>
			<referrer name="cmd_angelpine"/>
			<referrer name="cmd_graveyard"/>
			<referrer name="cmd_teepee"/>
			<referrer name="cmd_mcasino"/>
			<referrer name="cmd_clowns"/>
			<referrer name="cmd_price"/>
			<referrer name="cmd_boathouse"/>
			<referrer name="cmd_longjump"/>
			<referrer name="cmd_kingring"/>
			<referrer name="cmd_barn"/>
			<referrer name="cmd_lvpolice"/>
			<referrer name="cmd_mall"/>
			<referrer name="cmd_cludia"/>
			<referrer name="cmd_hoshi"/>
			<referrer name="cmd_school"/>
			<referrer name="cmd_beach2"/>
			<referrer name="cmd_reefy"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_launcher"/>
			<referrer name="cmd_ask"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_planes"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_strip"/>
			<referrer name="cmd_strip1"/>
			<referrer name="cmd_strip2"/>
			<referrer name="cmd_strip3"/>
			<referrer name="cmd_strip4"/>
			<referrer name="cmd_strip5"/>
			<referrer name="cmd_smoke"/>
			<referrer name="cmd_onfire"/>
			<referrer name="cmd_cpr"/>
			<referrer name="cmd_fu"/>
			<referrer name="cmd_sit"/>
			<referrer name="cmd_kissing"/>
			<referrer name="cmd_wank"/>
			<referrer name="cmd_drunk"/>
			<referrer name="cmd_lean"/>
			<referrer name="cmd_skate"/>
			<referrer name="cmd_injured"/>
			<referrer name="cmd_evc"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_af"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_hideme"/>
			<referrer name="cmd_togglefakekillsban"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_eavr"/>
			<referrer name="cmd_togglevehiclerockets"/>
			<referrer name="cmd_changeevadeaction"/>
			<referrer name="cmd_toggleadminmessages"/>
			<referrer name="cmd_readpms"/>
			<referrer name="cmd_readteles"/>
			<referrer name="cmd_toggleiplookups"/>
			<referrer name="cmd_toggleautogodmode"/>
			<referrer name="cmd_adminsettings"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_airdrop"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_enablehydraall"/>
			<referrer name="cmd_enablerhinoall"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="Unwash"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_loadrace"/>
			<referrer name="cmd_race"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_buildrace"/>
			<referrer name="cmd_cp"/>
			<referrer name="cmd_dcp"/>
			<referrer name="cmd_clearrace"/>
			<referrer name="cmd_racerotation"/>
			<referrer name="cmd_racenos"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="TT_StartRace"/>
			<referrer name="TT_Exit"/>
			<referrer name="CreateTextTT"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="GetVehicleModelIDFromName"/>
			<referrer name="IsAdmin"/>
			<referrer name="IsPlayerAdminLevel"/>
			<referrer name="SendMessageToAdmins_PM"/>
			<referrer name="SendMessageToAdmins_Tele"/>
			<referrer name="SendMessageToAdmins"/>
			<referrer name="SendMessageToAdminsEx_Lookup"/>
			<referrer name="SendTeleMessageToAdmins"/>
			<referrer name="fcreate"/>
			<referrer name="IsValidSkin"/>
			<referrer name="IsPlayerInInvalidNosVehicle"/>
			<referrer name="IsNumeric2"/>
			<referrer name="GetPlayerID"/>
			<referrer name="RaceVehicle"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="Token_Weapons"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="nofun"/>
			<referrer name="AddNeon"/>
			<referrer name="cmd_rtpall"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="cmd_tps"/>
			<referrer name="HO_load"/>
			<referrer name="HO_save"/>
			<referrer name="HO_Addons"/>
			<referrer name="HO_Addons2"/>
			<referrer name="HO_Addons3"/>
			<referrer name="AutoAssign"/>
			<referrer name="EasterEggPickup"/>
			<referrer name="LoadTextDraws"/>
			<referrer name="CheckPlayerState"/>
			<referrer name="_B@Action"/>
			<referrer name="GetNPCNameByID"/>
			<referrer name="ResetVariables"/>
			<referrer name="IsPlayerLoggedIn"/>
			<referrer name="StuntTele"/>
			<referrer name="StartRace"/>
			<referrer name="AddProperty"/>
			<referrer name="LoadProperties"/>
			<referrer name="IsPlayerInDeliveryVehicle"/>
		</member>
		<member name="C:ucharmax" value="16777215">
			<referrer name="YSI_IsLocalVarPackedString__"/>
		</member>
		<member name="C:undefined" value="-1">
			<tagname value="bool"/>
			<summary>  An invalid value (<c>-1</c>) as a boolean for some natives (most notably  the vehicle param ones) that can skip `true`/`false` parameters.  </summary> 
		</member>
		<member name="C:y_utils_abs_shift" value="31">
			<referrer name="Cell_Abs"/>
			<referrer name="Abs"/>
		</member>

		<!-- variables -->
		<member name="F:@_">
			<attribute name="public"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<library>y_core</library>  <remarks>  The ID of this script.  <c>-1</c> initially in case there is no master  system.  So we respond to everything.  </remarks> 
		</member>
		<member name="F:AMX_BASE_ADDRESS">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetNativeEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetNativeEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNativeNamePrefix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<referrer name="AMX_GetLengthFromEntry"/>
			<referrer name="AMX_GetStringFromEntry"/>
			<referrer name="AMX_GetTagByValue"/>
			<referrer name="AMX_GetFirstString"/>
			<referrer name="AMX_GetFirstNativeString"/>
			<referrer name="AMX_GetTagStringSpace"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_AMX_VERSION">
			<referrer name="ScriptInit_OnCodeInit"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_CIP">
			<referrer name="ScriptInit_OnCodeInit"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_COD">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetGlobal"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_GetTagStringSpace"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_DAT">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_TraceMemory"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_DEFSIZE">
			<referrer name="ScriptInit_OnCodeInit"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_FILE_VERSION">
			<referrer name="ScriptInit_OnCodeInit"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_FLAGS">
			<referrer name="ScriptInit_OnCodeInit"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_HEA">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_TraceMemory"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_LIBRARIES">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_MAGIC">
			<referrer name="ScriptInit_OnCodeInit"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_NAMETABLE">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="AMX_GetFirstNativeString"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_NATIVES">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="AMX_GetEntryFromNativeIndex"/>
			<referrer name="AMX_GetNativeIndexFromEntry"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_PUBLICS">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="AMX_GetEntryFromPublicIndex"/>
			<referrer name="AMX_GetPublicIndexFromEntry"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_PUBVARS">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_SIZE">
			<referrer name="ScriptInit_OnCodeInit"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_STP">
			<referrer name="ScriptInit_OnCodeInit"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_HEADER_TAGS">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_REAL_ADDRESS">
			<referrer name="ScriptInit_OnCodeInit"/>
			<library>y_amx</library> 
		</member>
		<member name="F:AMX_REAL_DATA">
			<referrer name="ScriptInit_OnCodeInit"/>
			<referrer name="AMX_GetGlobalAddress"/>
			<library>y_amx</library> 
		</member>
		<member name="F:ActiveCTF">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_trytofixctf"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
		</member>
		<member name="F:ActiveDerby">
			<tagname value="bool"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="DerbyTimer"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loadderby"/>
		</member>
		<member name="F:AllowedVehicle">
			<tagname value="bool"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="nofun"/>
			<referrer name="ResetVariables"/>
		</member>
		<member name="F:AnnText">
			<tagname value="PlayerText"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="SendInfoText"/>
			<referrer name="DestroyAnnText"/>
		</member>
		<member name="F:AnnTextShown">
			<referrer name="SendInfoText"/>
			<referrer name="DestroyAnnText"/>
		</member>
		<member name="F:B@Status">
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="LoadKeys"/>
			<referrer name="SaveKeys"/>
			<referrer name="_B@Fetch"/>
			<referrer name="_B@EchoS"/>
			<referrer name="_B@ResetKey"/>
		</member>
		<member name="F:B@Value">
			<tagname value="Float"/>
			<referrer name="_B@ResetValue"/>
			<referrer name="_B@Action"/>
		</member>
		<member name="F:BCPs">
			<tagname value="Float"/>
			<referrer name="BuildInitial"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
			<referrer name="SaveRace"/>
		</member>
		<member name="F:BCPsize">
			<tagname value="Float"/>
			<referrer name="BuildInitial"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
			<referrer name="SaveRace"/>
		</member>
		<member name="F:BCurrentCP">
			<referrer name="BuildInitial"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
		</member>
		<member name="F:BInterior">
			<referrer name="AddCP"/>
			<referrer name="SaveRace"/>
		</member>
		<member name="F:BName">
			<referrer name="cmd_saverace"/>
			<referrer name="BuildInitial"/>
			<referrer name="SaveRace"/>
		</member>
		<member name="F:BTotalCPs">
			<referrer name="BuildInitial"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
			<referrer name="SaveRace"/>
		</member>
		<member name="F:BVehicleID">
			<referrer name="cmd_rvehicle"/>
			<referrer name="BuildInitial"/>
			<referrer name="SaveRace"/>
		</member>
		<member name="F:BikeStuntCPS">
			<tagname value="Float"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:CELLMIN_ON_MATCHES">
			<library>sscanf</library>  <remarks>  The <c>CELLMIN_ON_MATCHES</c> option as a constant string so you can get  compile-time spell checking on the name.  Whatever the value of  <c>MATCH_NAME_PARTIAL</c>, the first found player will always be returned,  so if you do a search for <c>_</c> on an RP server, you could get almost  anyone.  To detect this case, if more than one player will match the  specified string then <em>sscanf</em> will return an ID of <c>cellmin</c>  instead.  This can be combined with <c>U</c> for a lot more power:  <code>  sscanf(params, "?&lt;CELLMIN_ON_MATCHES=1&gt;U(-1)", id);                <br />  if (id == -1)                                                            <br />  {                                                                        <br /><indent />  // No player was entered.                                            <br />  }                                                                        <br />  else if (id == cellmin)                                                  <br />  {                                                                        <br /><indent />  // Multiple matches found                                            <br />  }                                                                        <br />  else if (id == INVALID_PLAYER_ID)                                        <br />  {                                                                        <br /><indent />  // Entered player is not connected.                                  <br />  }                                                                        <br />  else                                                                     <br />  {                                                                        <br /><indent />  // Found just one player.                                            <br />  }  </code>  </remarks> 
		</member>
		<member name="F:CPs">
			<tagname value="Float"/>
			<referrer name="cmd_lcp"/>
			<referrer name="cmd_join"/>
			<referrer name="LoadRace"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:CPsize">
			<tagname value="Float"/>
			<referrer name="cmd_join"/>
			<referrer name="LoadRace"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:CTFFlags">
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
		</member>
		<member name="F:CTFI">
			<tagname value="bool"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
		</member>
		<member name="F:CTFIcons">
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
		</member>
		<member name="F:CTFInterior">
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="cmd_startctf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
		</member>
		<member name="F:CTFLoaded">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
		</member>
		<member name="F:CTFMembers">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
		</member>
		<member name="F:CTFSpawn">
			<tagname value="Float"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
		</member>
		<member name="F:CTFTimer">
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="cmd_startctf"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
		</member>
		<member name="F:CTFToken">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
		</member>
		<member name="F:CTF_Flags">
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
		</member>
		<member name="F:CanTP">
			<tagname value="bool"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_rtpall"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="cmd_cmtp"/>
		</member>
		<member name="F:CountDown">
			<referrer name="countdownr"/>
			<referrer name="countdown"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_countdown"/>
		</member>
		<member name="F:CuntDeliveries">
			<tagname value="Float"/>
			<referrer name="cmd_delivery"/>
		</member>
		<member name="F:DCAdmin">
			<tagname value="DCC_Channel"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_ban"/>
		</member>
		<member name="F:DCGen">
			<tagname value="DCC_Channel"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerFloodControl"/>
			<referrer name="DCMD_stats"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_cb"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_race"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:DCLookups">
			<tagname value="DCC_Channel"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="IPInfoDB_Connect"/>
		</member>
		<member name="F:DCReports">
			<tagname value="DCC_Channel"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="cmd_report"/>
		</member>
		<member name="F:DMw">
			<referrer name="cmd_dm"/>
		</member>
		<member name="F:DeathWords">
			<referrer name="Duel_End"/>
		</member>
		<member name="F:DerbyInterior">
			<referrer name="OnDialogResponse"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_loadderby"/>
		</member>
		<member name="F:DerbyLoaded">
			<tagname value="bool"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="DerbyTimer"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loadderby"/>
		</member>
		<member name="F:DerbyPickups">
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="DerbyTimer"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_loadderby"/>
		</member>
		<member name="F:DerbyPlayers">
			<referrer name="OnDialogResponse"/>
			<referrer name="DerbyTimer"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loadderby"/>
		</member>
		<member name="F:DerbySpawns">
			<tagname value="Float"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="DerbyTimer"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_loadderby"/>
		</member>
		<member name="F:DerbyTime">
			<referrer name="DerbyTimer"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_loadderby"/>
		</member>
		<member name="F:DerbyVehicle">
			<referrer name="OnDialogResponse"/>
			<referrer name="DerbyTimer"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loadderby"/>
		</member>
		<member name="F:DerbyZ">
			<tagname value="Float"/>
			<referrer name="DerbyTimer"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_loadderby"/>
		</member>
		<member name="F:Difft">
			<tagname value="Text"/>
			<referrer name="TT_StartRace"/>
			<referrer name="RaceTime22"/>
			<referrer name="TT_Exit"/>
			<referrer name="CreateTextTT"/>
			<referrer name="DeleteTextTT"/>
		</member>
		<member name="F:DriftBonus">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="CountDownDriftTimer"/>
			<referrer name="DriftSave"/>
			<referrer name="DriftExit"/>
			<referrer name="Drift"/>
			<referrer name="CheckPlayerState"/>
		</member>
		<member name="F:DriftID">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_planes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="DriftSave"/>
		</member>
		<member name="F:DriftMode">
			<tagname value="bool"/>
			<referrer name="CheckPlayerState"/>
		</member>
		<member name="F:DriftName">
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_drift"/>
			<referrer name="DriftSave"/>
		</member>
		<member name="F:DriftPointsNow">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="CountDownDriftTimer"/>
			<referrer name="DriftSave"/>
			<referrer name="DriftExit"/>
			<referrer name="Drift"/>
			<referrer name="CheckPlayerState"/>
		</member>
		<member name="F:DriftPos">
			<tagname value="Float"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_drift"/>
		</member>
		<member name="F:DriftRecord">
			<referrer name="OnDialogResponse"/>
			<referrer name="CountDownDriftTimer"/>
		</member>
		<member name="F:DriftRecordName">
			<referrer name="OnDialogResponse"/>
			<referrer name="CountDownDriftTimer"/>
		</member>
		<member name="F:DriftTimer">
			<referrer name="CheckPlayerState"/>
		</member>
		<member name="F:DriftVehicle">
			<referrer name="OnDialogResponse"/>
			<referrer name="DriftSave"/>
		</member>
		<member name="F:DuelArenaCreated">
			<tagname value="bool"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="Duel_CreatePlayerArena"/>
			<referrer name="Duel_DestroyPlayerArena"/>
		</member>
		<member name="F:DuelBillboards">
			<referrer name="Duel_CreatePlayerArena"/>
		</member>
		<member name="F:DuelDisable">
			<tagname value="bool"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_duel"/>
		</member>
		<member name="F:DuelDynamicObj">
			<tagname value="Float"/>
			<referrer name="Duel_CreatePlayerArena"/>
		</member>
		<member name="F:DuelIgnored">
			<tagname value="bool"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_duel"/>
		</member>
		<member name="F:DuelInvitation">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_duel"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="Duel_EndWait"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
		</member>
		<member name="F:DuelObj">
			<tagname value="Float"/>
			<referrer name="Duel_CreatePlayerArena"/>
		</member>
		<member name="F:DuelPlayerSign">
			<referrer name="Duel_RandomizeSigns"/>
			<referrer name="Duel_CreatePlayerArena"/>
		</member>
		<member name="F:DuelPos">
			<tagname value="Float"/>
			<referrer name="Duel_SetPlayerPos"/>
		</member>
		<member name="F:DuelSpectating">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
		</member>
		<member name="F:DuelStarting">
			<tagname value="bool"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_duel"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="Duel_End"/>
		</member>
		<member name="F:DuelTicks">
			<referrer name="Duel_Initiate"/>
			<referrer name="GetDuelTick"/>
		</member>
		<member name="F:DuelTimer">
			<referrer name="cmd_duel"/>
		</member>
		<member name="F:DuelWaiting">
			<tagname value="bool"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_duel"/>
			<referrer name="Duel_EndWait"/>
		</member>
		<member name="F:DuelWeapon">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_duel"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="Duel_End"/>
		</member>
		<member name="F:DuelWorld">
			<referrer name="cmd_duel"/>
			<referrer name="Duel_End"/>
		</member>
		<member name="F:DynamicVehicle">
			<referrer name="zcmd_OnGameModeInit"/>
		</member>
		<member name="F:EachPos">
			<tagname value="Float"/>
			<referrer name="LooseWeapons"/>
		</member>
		<member name="F:EasterEgg">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="cmd_easteregghint"/>
		</member>
		<member name="F:EasterPickup">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="EasterEggPickup"/>
		</member>
		<member name="F:Epx">
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="cmd_eho"/>
		</member>
		<member name="F:F@o">
			<library>y_iterate</library> 
		</member>
		<member name="F:FALSE">
			<tagname value="bool"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="OnActorStreamOut"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="cmd_detonate"/>
			<library>y_shortvar</library>  <remarks>  <c>false</c>, but usable in tests without a constant expression warning.  </remarks> 
		</member>
		<member name="F:FPS_bool">
			<tagname value="bool"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<referrer name="ResetVariables"/>
		</member>
		<member name="F:ForbiddenWeaponsDrop">
			<tagname value="bool"/>
			<referrer name="ForbidWeaponDrop"/>
			<referrer name="FreeWeaponDrop"/>
			<referrer name="LooseWeapons"/>
		</member>
		<member name="F:GameTimer">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_adminsettings"/>
		</member>
		<member name="F:GameTimerEx">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:HO">
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_myho"/>
			<referrer name="cmd_skateboard"/>
			<referrer name="cmd_shark"/>
			<referrer name="cmd_broom"/>
			<referrer name="cmd_ballhead"/>
			<referrer name="cmd_witchhat"/>
			<referrer name="cmd_pumpkin"/>
			<referrer name="cmd_xmashat"/>
			<referrer name="cmd_penis"/>
			<referrer name="cmd_helmet"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_cbone"/>
			<referrer name="HO_load"/>
			<referrer name="HO_save"/>
			<referrer name="_ResetHO_coOrdination"/>
			<referrer name="HO_Addons"/>
			<referrer name="HO_Addons2"/>
			<referrer name="HO_Addons3"/>
		</member>
		<member name="F:HO2">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_rho"/>
			<referrer name="cmd_raho"/>
			<referrer name="cmd_myho"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_lho"/>
			<referrer name="cmd_skateboard"/>
			<referrer name="cmd_shark"/>
			<referrer name="cmd_broom"/>
			<referrer name="cmd_ballhead"/>
			<referrer name="cmd_witchhat"/>
			<referrer name="cmd_pumpkin"/>
			<referrer name="cmd_xmashat"/>
			<referrer name="cmd_penis"/>
			<referrer name="cmd_helmet"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_cbone"/>
			<referrer name="cmd_eho"/>
			<referrer name="HO_load"/>
			<referrer name="HO_save"/>
			<referrer name="HO_Addons"/>
			<referrer name="HO_Addons2"/>
			<referrer name="HO_Addons3"/>
		</member>
		<member name="F:HealthInit">
			<tagname value="Float"/>
			<referrer name="CheckPlayerState"/>
		</member>
		<member name="F:HideAnnTextTimer">
			<referrer name="SendInfoText"/>
		</member>
		<member name="F:I@">
			<referrer name="SetTimerExAddr"/>
			<referrer name="Files_DoCopy"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<referrer name="Iter_YieldReturn"/>
			<library>y_shortvar</library>  <remarks>  A "nul" target - send things there if they need ignoring or if a  parameter needs ignoring.  Not guaranteed to keep its value for any  length of time.  If you set it, don't expect it to remain the same!  </remarks> 
		</member>
		<member name="F:IsDueling">
			<tagname value="bool"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_duel"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="Duel_EndWait"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
		</member>
		<member name="F:Iter_Single@Actor">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_ActorDo"/>
		</member>
		<member name="F:Iter_Single@Bot">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@Character">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@LocalActor">
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
		</member>
		<member name="F:Iter_Single@LocalVehicle">
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
		</member>
		<member name="F:Iter_Single@Player">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@PlayersFromVehicles">
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStateChange"/>
		</member>
		<member name="F:Iter_Single@RconAdmin">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@StreamedActor">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="OnActorStreamOut"/>
		</member>
		<member name="F:Iter_Single@StreamedBot">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iter_Single@StreamedCharacter">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iter_Single@StreamedPlayer">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iter_Single@StreamedVehicle">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
		</member>
		<member name="F:Iter_Single@Vehicle">
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_VehicleDo"/>
		</member>
		<member name="F:Iterator@Actor">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_ActorDo"/>
		</member>
		<member name="F:Iterator@Bot">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iterator@Character">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iterator@Fib">
			<tagname value="F@z"/>
			<library>y_iterate</library>  <param name="iterstate">Internal state of the iterator.</param>  <param name="cur">The current iterator step.</param>  <remarks>  Returns every number in the Fibonacci sequence that can be stored in a  PAWN cell.  <code>    foreach (new i : Fib())         <br />  {                               <br /><indent />  // 0, 1, 1, 2, 3, 5, etc... <br />  }  </code>    </remarks> 
		</member>
		<member name="F:Iterator@Filter">
			<tagname value="F@z"/>
			<library>y_iterate</library>  <param name="cur">The current iterator step.</param>  <param name="val">The number to search the array for.</param>  <param name="arr">Teh array to search through.</param>  <param name="size">The size of the array.</param>  <remarks>  Loop over all the indexes of this array which contain the given value.  <code>  new array[] = { ... };             <br />  foreach (new i : Filter(5, array)) <br />  {                                  <br />  }  </code>  </remarks> 
		</member>
		<member name="F:Iterator@LocalActor">
			<tagname value="_no_itertag"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
		</member>
		<member name="F:Iterator@LocalVehicle">
			<tagname value="_no_itertag"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
		</member>
		<member name="F:Iterator@N">
			<tagname value="F@z"/>
			<library>y_iterate</library>  <param name="cur">The current iterator step.</param>  <param name="n">The target number.</param>  <remarks>  Loop until the given target is reached.  <code>    foreach (new i : N(6))  <br />  {                       <br /><indent />  // 0, 1, 2, 3, 4, 5 <br />  }  </code>    This is equivalent to:  <code>  for (new i = 0; i != 6; ++i) <br />  {                            <br />  }  </code>  </remarks> 
		</member>
		<member name="F:Iterator@NonNull">
			<tagname value="F@z"/>
			<library>y_iterate</library>  <param name="cur">The current iterator step.</param>  <param name="arr">Teh array to search through.</param>  <param name="size">The size of the array.</param>  <remarks>  Loop over all the indexes of this array that are not zero.  <code>  new array[] = { ... };           <br />  foreach (new i : NonNull(array)) <br />  {                                <br />  }  </code>  </remarks> 
		</member>
		<member name="F:Iterator@Null">
			<tagname value="F@z"/>
			<library>y_iterate</library>  <param name="cur">The current iterator step.</param>  <param name="arr">Teh array to search through.</param>  <param name="size">The size of the array.</param>  <remarks>  Loop over all the indexes of this array that are zero.  <code>  new array[] = { ... };        <br />  foreach (new i : Null(array)) <br />  {                             <br />  }  </code>  </remarks> 
		</member>
		<member name="F:Iterator@Player">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="RandomMessages"/>
			<referrer name="RmInvis"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="DCMD_players"/>
			<referrer name="cmd_report"/>
			<referrer name="CTFTimeout"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_armorall"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="GoGoRace"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="SendMessageToAdmins_PM"/>
			<referrer name="SendMessageToMinigame"/>
			<referrer name="SendMessageToAdmins_Tele"/>
			<referrer name="SendMessageToAdmins"/>
			<referrer name="PlaySoundForAdmins"/>
			<referrer name="SendMessageToAdminsExPlayer"/>
			<referrer name="SendMessageToAdminsEx"/>
			<referrer name="SendMessageToAdminsEx_Lookup"/>
			<referrer name="SendTeleMessageToAdmins"/>
			<referrer name="GetAdminCount"/>
			<referrer name="GetVIPCount"/>
			<referrer name="PlaySoundForAll"/>
			<referrer name="Chat_SendMessageToAdmins"/>
			<referrer name="IsSeatTaken"/>
			<referrer name="GetPlayerID"/>
			<referrer name="SendClientMessageToAllEx"/>
			<referrer name="AutoNewsChange"/>
		</member>
		<member name="F:Iterator@PlayersFromVehicles">
			<tagname value="_no_itertag"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
		</member>
		<member name="F:Iterator@Powers">
			<tagname value="F@z"/>
			<library>y_iterate</library>  <param name="iterstate">Internal state of the iterator.</param>  <param name="cur">The current iterator step.</param>  <param name="base">The number to get the powers of.</param>  <remarks>  Returns all the powers of the given number that can be stored in a PAWN  cell.  <code>    foreach (new i : Powers(3))       <br />  {                                 <br /><indent />  // 3^0, 3^1, 3^2, 3^3, etc... <br />  }  </code>    </remarks> 
		</member>
		<member name="F:Iterator@Random">
			<tagname value="F@z"/>
			<library>y_iterate</library>  <param name="iterstate">Internal state of the iterator.</param>  <param name="cur">The current iterator step.</param>  <param name="count">How many random numbers to generate.</param>  <param name="min">Lowest possible number (inclusive).</param>  <param name="max">Highest possible number (exclusive).</param>  <remarks>  Return a given count of random numbers:  <code>  foreach (new i : Random(5)) <br />  {                           <br /><indent />  // 5 random numbers.    <br />  }  </code>  <code>  foreach (new i : Random(12, 10))                              <br />  {                                                             <br /><indent />  // 12 random numbers between 0 and 10 (0 to 9 inclusive). <br />  }  </code>  <code>  foreach (new i : Random(100, -10, 10))                             <br />  {                                                                  <br /><indent />  // 100 random numbers between -10 and 10 (-10 to 9 inclusive). <br />  }  </code>  If only <c>min</c> is given, not <c>max</c>, it is used as the max instead  and the minimum is <c>0</c>.  </remarks> 
		</member>
		<member name="F:Iterator@Range">
			<tagname value="F@z"/>
			<library>y_iterate</library>  <param name="cur">The current iterator step.</param>  <param name="min">The start value.</param>  <param name="max">The end value.</param>  <param name="step">How many values to increase by each time.</param>  <remarks>  Pretty much used to replicate a normal loop with <c>foreach</c>.  This:  <code>  for (new i = 10; i != 100; i += 2) <br />  {                                  <br />  }  </code>  Becomes:  <code>  foreach (new i : Range(10, 100, 2)) <br />  {                                   <br />  }  </code>  The increment value is optional, and defaults to <c>1</c>.  If you want a  <c>step</c> of <c>1</c> and a <c>min</c> of <c>0</c>, consider using  <c>N(max)</c> instead, which is specifically optimised for that scenario.  </remarks> 
		</member>
		<member name="F:Iterator@RconAdmin">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iterator@StreamedActor">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="OnActorStreamOut"/>
		</member>
		<member name="F:Iterator@StreamedBot">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iterator@StreamedCharacter">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
		</member>
		<member name="F:Iterator@StreamedPlayer">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			Create the internal iterators. 
		</member>
		<member name="F:Iterator@StreamedVehicle">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
		</member>
		<member name="F:Iterator@Until">
			<tagname value="F@z"/>
			<library>y_iterate</library>  <param name="cur">The current iterator step.</param>  <param name="val">The number to search the array for.</param>  <param name="arr">Teh array to search through.</param>  <param name="size">The size of the array.</param>  <remarks>  Loop over all the indexes of this array until one equals the given value.  <code>  new array[] = { ... };            <br />  foreach (new i : Until(5, array)) <br />  {                                 <br />  }  </code>  </remarks> 
		</member>
		<member name="F:Iterator@Vehicle">
			<tagname value="_no_itertag"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="RandomMessages"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="Race_Rotation"/>
		</member>
		<member name="F:Iterator@VehicleDriver">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@VehicleOccupant">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@VehiclePassenger">
			<tagname value="F@z"/>
		</member>
		<member name="F:J@">
			<library>y_shortvar</library>  <remarks>  A "nul" target - send things there if they need ignoring or if a  parameter needs ignoring.  Not guaranteed to keep its value for any  length of time.  If you set it, don't expect it to remain the same!  </remarks> 
		</member>
		<member name="F:LVDeliveries">
			<tagname value="Float"/>
			<referrer name="cmd_delivery"/>
		</member>
		<member name="F:MATCH_NAME_FIRST">
			<library>sscanf</library>  <remarks>  The <c>MATCH_NAME_FIRST</c> option as a constant string so you can get compile-  time spell checking on the name.  Specify whether <c>u</c> etc keep searching  for better matching player names after finding one:  <code>  SSCANF_Option(MATCH_NAME_FIRST, 0); // Enable scanning for the best name match not the first (default).  <br />  SSCANF_Option(MATCH_NAME_FIRST, 1); // Enable scanning for the first name match not the best (old behaviour).  </code>  </remarks> 
		</member>
		<member name="F:MATCH_NAME_PARTIAL">
			<library>sscanf</library>  <remarks>  The <c>MATCH_NAME_PARTIAL</c> option as a constant string so you can get  compile-time spell checking on the name.  Currently sscanf will search for  players by name, and will <em>always</em> search for player whose name  <em>starts</em> with the specified string.  If someone types <c>Y_Less</c>,  sscanf will not find say <c>[CLAN]Y_Less</c> because there name doesn't start  with the specified text.  This option, when set to <c>1</c>, will search  <em>anywhere</em> in the player's name for the given string.  </remarks> 
		</member>
		<member name="F:MATCH_NAME_SIMILARITY">
			<library>sscanf</library>  <remarks>  The <c>MATCH_NAME_SIMILARITY</c> option as a constant string so you can get  compile-time spell checking on the name.  Specify whether <c>u</c> etc should  use the ngrams-based similarity algorithm when searching for players matching  a given name.  I.e. enable or disable fuzzy name matching.  It will return  the best match found, but depending on the threshold that may still be very  different to what was typed.  <code>  SSCANF_Option(MATCH_NAME_SIMILARITY, 0.0); // Will find all names, regardless of input. <br />  SSCANF_Option(MATCH_NAME_SIMILARITY, 1.0); // Will find exact matches only. <br />  SSCANF_Option(MATCH_NAME_SIMILARITY, 0.5); // Will find names somewhat similar to the input. <br />  SSCANF_Option(MATCH_NAME_SIMILARITY, -1.0); // Disable fuzzy name matching.  </code>  </remarks> 
		</member>
		<member name="F:MJ_Value">
			<tagname value="Float"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_dfmj"/>
			<referrer name="cmd_megajump"/>
			<referrer name="cmd_mjh"/>
			<referrer name="cmd_mjv"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="ResetVariables"/>
		</member>
		<member name="F:Moving">
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="PGodTimer"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="DeleteMovingData"/>
			<referrer name="Assigned_GiveFreeMovingID"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_dano"/>
		</member>
		<member name="F:MyCurrentCP">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_lcp"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="ResetVariables"/>
		</member>
		<member name="F:MyEggs">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="LoadEasterEggs"/>
			<referrer name="EasterEggPickup"/>
			<referrer name="CountPlayerEggs"/>
		</member>
		<member name="F:MyLastTT">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:NULL">
			<library>y_shortvar</library>  <remarks>  The null string with <c>\1</c> as the first character.  This isn't a true  null string, that is the string of length 0, but this string is often used  instead due to a bug with passing empty strings to and from the VM.  Every  <c>IsNull</c> check ever has been designed to detect this version.  </remarks> 
		</member>
		<member name="F:NickName">
			<referrer name="MP_OPC"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dm"/>
			<referrer name="Duel_End"/>
			<referrer name="ReturnPlayerID"/>
		</member>
		<member name="F:O@V_">
			<referrer name="O@A_"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="OnPlayerConnect"/>
			<library>amx_assembly addressof_light</library>
		</member>
		<member name="F:OLD_DEFAULT_CUSTOM">
			<library>sscanf</library>  <remarks>  The <c>OLD_DEFAULT_CUSTOM</c> option as a constant string so you can get  compile-time spell checking on the name.  This is the same as  <c>OLD_DEFAULT_KUSTOM</c>, but with an alternate spelling.  </remarks> 
		</member>
		<member name="F:OLD_DEFAULT_KUSTOM">
			<library>sscanf</library>  <remarks>  The <c>OLD_DEFAULT_KUSTOM</c> option as a constant string so you can get  compile-time spell checking on the name.  As with <c>U</c>, <c>K</c> used to  require a valid identifier as the default and would parse it using the  specified callback, so this would <em>not</em> work:  <code>  K&lt;vehicle&gt;(Veyron)  </code>  Because that is not a valid vehicle name in GTA.  The new version now just  takes a number and returns that regardless:  <code>  K&lt;vehicle&gt;(999)  </code>  This setting reverts to the old behaviour.  </remarks> 
		</member>
		<member name="F:OLD_DEFAULT_NAME">
			<library>sscanf</library>  <remarks>  The <c>OLD_DEFAULT_NAME</c> option as a constant string so you can get  compile-time spell checking on the name.  The behaviour of <c>U</c>, <c>Q</c>  and <c>R</c> have been changed to take any number as a default, instead of a  connected player.  Setting <c>OLD_DEFAULT_NAME</c> to <c>1</c> will revert to  the old version.  </remarks> 
		</member>
		<member name="F:ObjDialogIDs">
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_myobjsets"/>
		</member>
		<member name="F:ObjectList">
			<referrer name="IsValidModel"/>
			<referrer name="GetModelArray"/>
			<referrer name="cmd_search"/>
		</member>
		<member name="F:OnRaceCD">
			<tagname value="bool"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="RaceCountDown"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:PMG_Pickups">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:PlayerDriftCancellation">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="DriftSave"/>
			<referrer name="DriftExit"/>
			<referrer name="Drift"/>
		</member>
		<member name="F:PlayerProps">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="RandomMessages"/>
			<referrer name="cmd_myprops"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_sellmyprops"/>
		</member>
		<member name="F:Players">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="DisableSpawnProtection"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="cmd_trt"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_delivery"/>
			<referrer name="cmd_michelles"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="VehExpire"/>
			<referrer name="GetUserIDName"/>
			<referrer name="cmd_rafinha"/>
			<referrer name="cmd_skydive"/>
			<referrer name="cmd_ic"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_lcp"/>
			<referrer name="cmd_dfmj"/>
			<referrer name="cmd_megajump"/>
			<referrer name="cmd_enableallmegajump"/>
			<referrer name="cmd_disableallmegajump"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="ResetSpam"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="Unjailplayer_Timer"/>
			<referrer name="UnmutePlayer_Timer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="OnPlayerFloodControl"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="GetPlayerMostRacesWon"/>
			<referrer name="GetPlayerMostCash"/>
			<referrer name="GetPlayerMostCTF"/>
			<referrer name="GetPlayerMostScore"/>
			<referrer name="IsVIP"/>
			<referrer name="IsVIPLevel2"/>
			<referrer name="Login"/>
			<referrer name="Save"/>
			<referrer name="GotoPosition"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="cmd_minigames"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_prophelp"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_sellmyprops"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_xmasgift"/>
			<referrer name="cmd_sendoranges"/>
			<referrer name="cmd_sendapples"/>
			<referrer name="cmd_sendtokens"/>
			<referrer name="cmd_ammo"/>
			<referrer name="cmd_ammo2"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_groupmanage"/>
			<referrer name="cmd_playduel"/>
			<referrer name="cmd_afob"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_spinslots"/>
			<referrer name="cmd_deposit"/>
			<referrer name="cmd_balance"/>
			<referrer name="cmd_withdraw"/>
			<referrer name="cmd_healme"/>
			<referrer name="cmd_tune"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_eject"/>
			<referrer name="cmd_para"/>
			<referrer name="cmd_knife"/>
			<referrer name="cmd_golfclub"/>
			<referrer name="cmd_brass"/>
			<referrer name="cmd_bat"/>
			<referrer name="cmd_nightstick"/>
			<referrer name="cmd_vibrator"/>
			<referrer name="cmd_vibrator2"/>
			<referrer name="cmd_dildo2"/>
			<referrer name="cmd_dildo"/>
			<referrer name="cmd_chainsaw"/>
			<referrer name="cmd_shovel"/>
			<referrer name="cmd_cane"/>
			<referrer name="cmd_flowers"/>
			<referrer name="cmd_camera"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_ssb"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_alpha"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_euros"/>
			<referrer name="cmd_limo"/>
			<referrer name="cmd_adromada"/>
			<referrer name="cmd_at400"/>
			<referrer name="cmd_beagle"/>
			<referrer name="cmd_dodo"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_admins"/>
			<referrer name="cmd_bountylist"/>
			<referrer name="cmd_vips"/>
			<referrer name="cmd_pros"/>
			<referrer name="cmd_skin"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_acceptpms"/>
			<referrer name="cmd_denypms"/>
			<referrer name="EnablePMs"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_fix"/>
			<referrer name="cmd_nocolor"/>
			<referrer name="cmd_red"/>
			<referrer name="cmd_lime"/>
			<referrer name="cmd_blue"/>
			<referrer name="cmd_grey"/>
			<referrer name="cmd_white"/>
			<referrer name="cmd_green"/>
			<referrer name="cmd_yellow"/>
			<referrer name="cmd_darkyellow"/>
			<referrer name="cmd_brightyellow"/>
			<referrer name="cmd_brightblue"/>
			<referrer name="cmd_purple"/>
			<referrer name="cmd_aqua"/>
			<referrer name="cmd_orange"/>
			<referrer name="cmd_strongorange"/>
			<referrer name="cmd_lightblue"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_savestats"/>
			<referrer name="cmd_saveallstats"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_pier69"/>
			<referrer name="cmd_libertycity"/>
			<referrer name="cmd_cage"/>
			<referrer name="cmd_m1"/>
			<referrer name="cmd_m2"/>
			<referrer name="cmd_m3"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_runwayls"/>
			<referrer name="cmd_runwaylv"/>
			<referrer name="cmd_runwaysf"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_lsajump"/>
			<referrer name="cmd_beach"/>
			<referrer name="cmd_tf"/>
			<referrer name="cmd_lowrider"/>
			<referrer name="cmd_waa"/>
			<referrer name="cmd_club"/>
			<referrer name="cmd_sws"/>
			<referrer name="cmd_twister"/>
			<referrer name="cmd_loopstunt"/>
			<referrer name="cmd_jump"/>
			<referrer name="cmd_quarry"/>
			<referrer name="cmd_parkour4"/>
			<referrer name="cmd_parkour5"/>
			<referrer name="cmd_parkour6"/>
			<referrer name="cmd_parkour7"/>
			<referrer name="cmd_parajump1"/>
			<referrer name="cmd_parajump2"/>
			<referrer name="cmd_parajump3"/>
			<referrer name="cmd_parajump4"/>
			<referrer name="cmd_parajump5"/>
			<referrer name="cmd_dmzone1"/>
			<referrer name="cmd_dmzone2"/>
			<referrer name="cmd_dmzone3"/>
			<referrer name="cmd_dmzone4"/>
			<referrer name="cmd_dmzone5"/>
			<referrer name="cmd_dmzone6"/>
			<referrer name="cmd_dmzone7"/>
			<referrer name="cmd_dmzone8"/>
			<referrer name="cmd_dmzone9"/>
			<referrer name="cmd_dmzone10"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ph"/>
			<referrer name="cmd_wb"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_sex"/>
			<referrer name="cmd_bayside"/>
			<referrer name="cmd_docks"/>
			<referrer name="cmd_methlab"/>
			<referrer name="cmd_snakefarm"/>
			<referrer name="cmd_motel"/>
			<referrer name="cmd_gasstation"/>
			<referrer name="cmd_jays"/>
			<referrer name="cmd_gantdiner"/>
			<referrer name="cmd_8track"/>
			<referrer name="cmd_lshospital"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_cityhall"/>
			<referrer name="cmd_area69"/>
			<referrer name="cmd_waterfall"/>
			<referrer name="cmd_grove"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_pirateship"/>
			<referrer name="cmd_underbase"/>
			<referrer name="cmd_sfadrop"/>
			<referrer name="cmd_alexm"/>
			<referrer name="cmd_bikestunt"/>
			<referrer name="cmd_playaz"/>
			<referrer name="cmd_francy"/>
			<referrer name="cmd_mansion"/>
			<referrer name="cmd_cj101"/>
			<referrer name="cmd_venera"/>
			<referrer name="cmd_vida"/>
			<referrer name="cmd_deathangel"/>
			<referrer name="cmd_boeing747"/>
			<referrer name="cmd_meghan"/>
			<referrer name="cmd_saloun2"/>
			<referrer name="cmd_saloun3"/>
			<referrer name="cmd_braylon"/>
			<referrer name="cmd_gibbs"/>
			<referrer name="cmd_bikepark"/>
			<referrer name="cmd_hq"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_panzehir"/>
			<referrer name="cmd_assa"/>
			<referrer name="cmd_john"/>
			<referrer name="cmd_reham"/>
			<referrer name="cmd_woa"/>
			<referrer name="cmd_kjj"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_east"/>
			<referrer name="cmd_cvondz"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_datower"/>
			<referrer name="cmd_peckers"/>
			<referrer name="cmd_city"/>
			<referrer name="cmd_ft"/>
			<referrer name="cmd_city2"/>
			<referrer name="cmd_city3"/>
			<referrer name="cmd_city4"/>
			<referrer name="cmd_city5"/>
			<referrer name="cmd_nrgstunt2"/>
			<referrer name="cmd_driftcity"/>
			<referrer name="cmd_drift1"/>
			<referrer name="cmd_drift2"/>
			<referrer name="cmd_drift3"/>
			<referrer name="cmd_drift4"/>
			<referrer name="cmd_drift5"/>
			<referrer name="cmd_drift6"/>
			<referrer name="cmd_windy"/>
			<referrer name="cmd_probe"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_disco"/>
			<referrer name="cmd_factory"/>
			<referrer name="cmd_vrock"/>
			<referrer name="cmd_vrock2"/>
			<referrer name="cmd_bedroom"/>
			<referrer name="cmd_janitor"/>
			<referrer name="cmd_woozie"/>
			<referrer name="cmd_restaurant"/>
			<referrer name="cmd_sweets"/>
			<referrer name="cmd_dam"/>
			<referrer name="cmd_donuts"/>
			<referrer name="cmd_railroad"/>
			<referrer name="cmd_rcbox"/>
			<referrer name="cmd_crackhouse"/>
			<referrer name="cmd_meathouse"/>
			<referrer name="cmd_prison"/>
			<referrer name="cmd_angelpine"/>
			<referrer name="cmd_graveyard"/>
			<referrer name="cmd_teepee"/>
			<referrer name="cmd_mcasino"/>
			<referrer name="cmd_clowns"/>
			<referrer name="cmd_price"/>
			<referrer name="cmd_boathouse"/>
			<referrer name="cmd_longjump"/>
			<referrer name="cmd_kingring"/>
			<referrer name="cmd_barn"/>
			<referrer name="cmd_lvpolice"/>
			<referrer name="cmd_mall"/>
			<referrer name="cmd_cludia"/>
			<referrer name="cmd_hoshi"/>
			<referrer name="cmd_school"/>
			<referrer name="cmd_beach2"/>
			<referrer name="cmd_reefy"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_launcher"/>
			<referrer name="cmd_teles"/>
			<referrer name="cmd_teles2"/>
			<referrer name="cmd_ask"/>
			<referrer name="cmd_viphelp"/>
			<referrer name="cmd_rules"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_planes"/>
			<referrer name="cmd_boats"/>
			<referrer name="cmd_helis"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_pink"/>
			<referrer name="cmd_vipcolor"/>
			<referrer name="cmd_admincolor"/>
			<referrer name="cmd_brown"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_stunts"/>
			<referrer name="cmd_racehelp"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_night"/>
			<referrer name="cmd_day"/>
			<referrer name="cmd_fs"/>
			<referrer name="cmd_normalfs"/>
			<referrer name="cmd_kneehead"/>
			<referrer name="cmd_kungfu"/>
			<referrer name="cmd_boxing"/>
			<referrer name="cmd_grabkick"/>
			<referrer name="cmd_elbow"/>
			<referrer name="cmd_rank"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_ks"/>
			<referrer name="cmd_evc"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_tram"/>
			<referrer name="cmd_kart"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_af"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_smenu"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_me"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_dramp"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_eo"/>
			<referrer name="OnPlayerEditDynamicObject"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_nso"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_gom"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_daso"/>
			<referrer name="cmd_aotv"/>
			<referrer name="GetTotalCreatedObjects"/>
			<referrer name="GetVIPTotalCreatedObjects"/>
			<referrer name="cmd_gmlo"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_do"/>
			<referrer name="cmd_hideme"/>
			<referrer name="cmd_showme"/>
			<referrer name="cmd_fencegate"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_eavr"/>
			<referrer name="cmd_davr"/>
			<referrer name="cmd_togglevehiclerockets"/>
			<referrer name="cmd_toggleadminmessages"/>
			<referrer name="cmd_readpms"/>
			<referrer name="cmd_readteles"/>
			<referrer name="cmd_toggleiplookups"/>
			<referrer name="cmd_toggleautogodmode"/>
			<referrer name="cmd_adminsettings"/>
			<referrer name="cmd_mytime"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_leavetdm"/>
			<referrer name="cmd_airdrop"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_changetdm"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_takevip"/>
			<referrer name="cmd_takepro"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_countdown"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_setep"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_enablehydraall"/>
			<referrer name="cmd_disablehydraall"/>
			<referrer name="cmd_enablerhinoall"/>
			<referrer name="cmd_disablerhinoall"/>
			<referrer name="cmd_setplayeroranges"/>
			<referrer name="cmd_setplayerapples"/>
			<referrer name="cmd_setplayerraceswon"/>
			<referrer name="cmd_setplayerplaytime"/>
			<referrer name="cmd_setplayerracesjoined"/>
			<referrer name="cmd_setplayerkills"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_asay"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="Unwash"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_jp"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_token"/>
			<referrer name="cmd_mytoken"/>
			<referrer name="cmd_buytokens"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_buildrace"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="cmd_rweather"/>
			<referrer name="cmd_deathrace"/>
			<referrer name="cmd_cp"/>
			<referrer name="cmd_dcp"/>
			<referrer name="cmd_clearrace"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
			<referrer name="SaveRace"/>
			<referrer name="ClearRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="MoneyGet"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="IsAdmin"/>
			<referrer name="IsPlayerAdminLevel"/>
			<referrer name="SendMessageToAdmins_PM"/>
			<referrer name="SendMessageToMinigame"/>
			<referrer name="SendMessageToAdmins_Tele"/>
			<referrer name="SendMessageToAdmins"/>
			<referrer name="PlaySoundForAdmins"/>
			<referrer name="SendMessageToAdminsExPlayer"/>
			<referrer name="SendMessageToAdminsEx"/>
			<referrer name="SendMessageToAdminsEx_Lookup"/>
			<referrer name="SendTeleMessageToAdmins"/>
			<referrer name="GetAdminCount"/>
			<referrer name="Chat_SendMessageToAdmins"/>
			<referrer name="GetMyColor"/>
			<referrer name="SetMyColor"/>
			<referrer name="SetPlayerCash"/>
			<referrer name="GivePlayerCash"/>
			<referrer name="GetPlayerCash"/>
			<referrer name="TakePlayerCash"/>
			<referrer name="ResetPlayerCash"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="CheckRankForLevelUp"/>
			<referrer name="Token_Weapons"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="SetToken"/>
			<referrer name="GiveToken"/>
			<referrer name="cmd_gamestats"/>
			<referrer name="cmd_tp"/>
			<referrer name="AutoAssign"/>
			<referrer name="AutoNewsChange"/>
			<referrer name="DriftSave"/>
			<referrer name="_B@Action"/>
			<referrer name="ResetVariables"/>
			<referrer name="GetPlayerMinigame"/>
			<referrer name="SetPlayerMinigame"/>
			<referrer name="SetPlayerToken"/>
			<referrer name="GetPlayerToken"/>
			<referrer name="IsUserAdmin"/>
			<referrer name="CheckAdminLevel"/>
			<referrer name="GetPlayerAdminLevel"/>
			<referrer name="IsPlayerLoggedIn"/>
			<referrer name="MinigameCounter"/>
			<referrer name="StuntTele"/>
			<referrer name="CreateAdminObject"/>
		</member>
		<member name="F:Positiont">
			<tagname value="Text"/>
			<referrer name="TT_StartRace"/>
			<referrer name="RaceTime22"/>
			<referrer name="TT_Exit"/>
			<referrer name="CreateTextTT"/>
			<referrer name="DeleteTextTT"/>
		</member>
		<member name="F:PropInfo">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="RandomMessages"/>
			<referrer name="cmd_ttp"/>
			<referrer name="cmd_myprops"/>
			<referrer name="cmd_setpropbuyable"/>
			<referrer name="cmd_setpropunbuyable"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_sellmyprops"/>
			<referrer name="GetDistanceToProperty"/>
			<referrer name="BoughtProperties"/>
			<referrer name="AddProperty"/>
			<referrer name="ConvertProperties"/>
			<referrer name="LoadProperties"/>
			<referrer name="BInt_PBuyable"/>
			<referrer name="SaveProperties"/>
		</member>
		<member name="F:PropertiesAmount">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_myprops"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_sellmyprops"/>
			<referrer name="BoughtProperties"/>
			<referrer name="AddProperty"/>
			<referrer name="ConvertProperties"/>
			<referrer name="LoadProperties"/>
			<referrer name="SaveProperties"/>
			<referrer name="CountProperties"/>
			<referrer name="IsPlayerNearProperty"/>
		</member>
		<member name="F:Q@">
			<referrer name="SetTimerExAddr"/>
			<referrer name="K@"/>
			<referrer name="G@"/>
			<library>y_shortvar</library>  <remarks>  A temporary string variable, mainly for interim results.  </remarks> 
		</member>
		<member name="F:RCreator">
			<referrer name="cmd_racers"/>
			<referrer name="LoadRace"/>
			<referrer name="Race_Rotation"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:RXDM">
			<tagname value="Text"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_report"/>
			<referrer name="HideReport"/>
			<referrer name="AutoNewsChange"/>
			<referrer name="UpdateMOTD_Text"/>
		</member>
		<member name="F:R_Interior">
			<referrer name="cmd_join"/>
			<referrer name="LoadRace"/>
			<referrer name="Race_Rotation"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:R_Name">
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:R_Weather">
			<referrer name="cmd_join"/>
			<referrer name="LoadRace"/>
		</member>
		<member name="F:RaceActive">
			<tagname value="bool"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_lcp"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_race"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="_B@Action"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:RaceCheckpoint">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRace"/>
			<referrer name="RaceTime22"/>
			<referrer name="TT_Exit"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:RaceNOS">
			<tagname value="bool"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_racenos"/>
			<referrer name="_B@Action"/>
		</member>
		<member name="F:RaceRotation">
			<tagname value="bool"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_adminsettings"/>
			<referrer name="cmd_loadrace"/>
			<referrer name="cmd_racerotation"/>
			<referrer name="Race_Rotation"/>
		</member>
		<member name="F:RaceStart">
			<tagname value="bool"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="RaceCountDown"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:RaceTick">
			<referrer name="GoGoRace"/>
			<referrer name="GetRaceTick"/>
		</member>
		<member name="F:RaceTime">
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_endrace"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:RandomMSG">
			<referrer name="RandomMessages"/>
		</member>
		<member name="F:ReconnectIP">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_reconnect"/>
		</member>
		<member name="F:Reconnecting">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_reconnect"/>
		</member>
		<member name="F:RecordName">
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="Race_Rotation"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:RecordTime">
			<tagname value="Float"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="Race_Rotation"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:RecordVehicle">
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="Race_Rotation"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:Reports">
			<tagname value="Text"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_trt"/>
			<referrer name="Login"/>
			<referrer name="cmd_report"/>
		</member>
		<member name="F:ReportsString">
			<referrer name="cmd_report"/>
		</member>
		<member name="F:SQL">
			<tagname value="MySQL"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_mysqlq"/>
			<referrer name="GetUserIDName"/>
			<referrer name="OnPlayerText"/>
			<referrer name="AddPlayerBan"/>
			<referrer name="AddProxy"/>
			<referrer name="Login"/>
			<referrer name="LoadKeys"/>
			<referrer name="SaveKeys"/>
			<referrer name="SaveSettings"/>
			<referrer name="Save"/>
			<referrer name="DCMD_stats"/>
			<referrer name="cmd_setpropbuyable"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_groupmanage"/>
			<referrer name="InsertDuelResult"/>
			<referrer name="cmd_setmyradio"/>
			<referrer name="cmd_myradio"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_dpt"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_moveproxies"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_serverstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unbanlast"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_deleterace"/>
			<referrer name="cmd_undeleterace"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_tt"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="GetTT_ID"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="TT_AddTimeToDB"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Announcement"/>
			<referrer name="SaveRace"/>
			<referrer name="GetRaceID"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="HO_load"/>
			<referrer name="HO_save"/>
			<referrer name="HO_exist"/>
			<referrer name="HO_delete"/>
			<referrer name="LoadEasterEggs"/>
			<referrer name="Easter_Egg_Update"/>
			<referrer name="GetUserID"/>
			<referrer name="AddDrift"/>
			<referrer name="DriftSave"/>
			<referrer name="StartRace"/>
			<referrer name="AddProperty"/>
			<referrer name="LoadProperties"/>
			<referrer name="SaveProperties"/>
			<referrer name="CountProperties"/>
		</member>
		<member name="F:SSCANF_ALPHA">
			<library>sscanf</library>  <remarks>  The <c>SSCANF_ALPHA</c> option as a constant string so you can get compile-  time spell checking on the name.  Specify the default alpha value for colours  (<c>m</c>) which don't manually specify an alpha channel.  The alpha values  are specified as a <em>decimal</em> number, <em>not</em> a <em>hex</em>  number, so setting an alpha of <c>0x80</c> would be:  <code>  SSCANF_Option(SSCANF_ALPHA, 128);  </code>  </remarks> 
		</member>
		<member name="F:SSCANF_ARGB">
			<library>sscanf</library>  <remarks>  The <c>SSCANF_ARGB</c> option as a constant string so you can get compile-  time spell checking on the name.  Specify whether the returned colour is  <c>ARGB</c> or <c>RGBA</c>:  <code>  SSCANF_Option(SSCANF_ARGB, 1); // Set 3- and 6-digit colour outputs to `AARRGGBB`. <br />  SSCANF_Option(SSCANF_ARGB, 0); // Set 3- and 6-digit colour outputs to `RRGGBBAA` (default).  </code>  </remarks> 
		</member>
		<member name="F:SSCANF_COLOUR_FORMS">
			<library>sscanf</library>  <remarks>  The <c>SSCANF_COLOUR_FORMS</c> option as a constant string so you can get  compile-time spell checking on the name.  There are multiple valid colour  input formats, which you can enable or disable here.  The parameter is a  bit map (flags) for all the following values:  <ul>  <li><c>1</c> - <c>#RGB</c></li>  <li><c>2</c> - <c>#RRGGBB</c></li>  <li><c>4</c> - <c>0xRRGGBB</c></li>  <li><c>8</c> - <c>RRGGBB</c></li>  <li><c>16</c> - <c>{RRGGBB}</c></li>  <li><c>32</c> - <c>0xRRGGBBAA</c></li>  <li><c>64</c> - <c>RRGGBBAA</c></li>  </ul>  So to ONLY accept SA:MP `SendClientMessage` colours use:  <code>  SSCANF_Option(SSCANF_COLOUR_FORMS, 16);  </code>  To only accept 8-digit values use:  <code>  SSCANF_Option(SSCANF_COLOUR_FORMS, 96);  </code>  Default values (those specified between <c>()</c>s for <c>M</c>) ignore this  setting - they can always use any form.  </remarks> 
		</member>
		<member name="F:SSCANF_EXT_">
			<library>sscanf</library>  <remarks>  The fallback for the filename in <c>extract</c> on the old compiler, which  doesn't have the inbuilt <c>__file</c> macro.  This is the "feature" enabled  by <c>SSCANF_NO_NICE_FEATURES</c>.  Appends <c>"unknown file"</c> in the  plugin when line number <c>&lt; 0</c>.  </remarks> 
		</member>
		<member name="F:SSCANF_FOM_">
			<library>sscanf</library>  <remarks>  The fallback for the filename in <c>unformat</c> on the old compiler, which  doesn't have the inbuilt <c>__file</c> macro.  This is the "feature" enabled  by <c>SSCANF_NO_NICE_FEATURES</c>.  Appends <c>"unknown file"</c> in the  plugin when line number <c>&lt; 0</c>.  </remarks> 
		</member>
		<member name="F:SSCANF_NPC">
			<library>sscanf</library>  <remarks>  Was sscanf built for an NPC mode or a normal mode?  </remarks> 
		</member>
		<member name="F:SSCANF_QUIET">
			<library>sscanf</library>  <remarks>  The <c>SSCANF_QUIET</c> option as a constant string so you can get compile-  time spell checking on the name.  Don't print any errors to the console.  <em>Really</em> not recommended unless you <em>know</em> your code is stable  and in production.  </remarks> 
		</member>
		<member name="F:SSCANF_UNK_">
			<library>sscanf</library>  <remarks>  The fallback for the filename in <c>sscanf</c> on the old compiler, which  doesn't have the inbuilt <c>__file</c> macro.  This is the "feature" enabled  by <c>SSCANF_NO_NICE_FEATURES</c>.  Appends <c>"unknown file"</c> in the  plugin when line number <c>&lt; 0</c>.  </remarks> 
		</member>
		<member name="F:SSCANF_VERSION_BCD">
			<referrer name="SSCANF_Version"/>
			<library>sscanf</library>  <remarks>  The sscanf version in BCD.  Example:  <code>  2.10.3  <br />  => 02 10 03 <br />  => 0x021003  </code>  </remarks> 
		</member>
		<member name="F:SSCANF_VERSION_BUILD">
			<library>sscanf</library>  <remarks>  The sscanf build number.  </remarks> 
		</member>
		<member name="F:SSCANF_VERSION_MAJOR">
			<library>sscanf</library>  <remarks>  The sscanf major version number.  </remarks> 
		</member>
		<member name="F:SSCANF_VERSION_MINOR">
			<library>sscanf</library>  <remarks>  The sscanf minor version number.  </remarks> 
		</member>
		<member name="F:SSCANF_VERSION_STRING">
			<library>sscanf</library>  <remarks>  The sscanf version as a string.  E.g. <c>"2.8.1"</c>.  </remarks> 
		</member>
		<member name="F:SSCANF_gInit">
			<referrer name="SSCANF_RunInit"/>
			<referrer name="OnScriptInit"/>
			<referrer name="OnScriptInit@C"/>
			<referrer name="OnScriptInit@E"/>
			<referrer name="Iter_OnPlayerConnect"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<library>sscanf</library>  <remarks>  Has sscanf been initialised at least once already in this script?  Avoids the  need to define <c>FILTERSCRIPT</c> by including <c>OnFilterScriptInit</c>  and <c>OnGameModeInit</c> (plus <c>OnNPCModeInit</c>) and seeing which one  gets called first.  </remarks> 
		</member>
		<member name="F:SVLoaded">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_smenu"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
		</member>
		<member name="F:SVPlayers">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
		</member>
		<member name="F:SVStarted">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
		</member>
		<member name="F:SavedPos">
			<tagname value="Float"/>
			<referrer name="Drift"/>
		</member>
		<member name="F:Security">
			<referrer name="cmd_fencegate"/>
		</member>
		<member name="F:Server">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="SaveSettings"/>
			<referrer name="DCMD_uptime"/>
			<referrer name="cmd_uptime"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_cancelgiftbox"/>
			<referrer name="cmd_delgiftbox"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="cmd_togglefakekillsban"/>
			<referrer name="cmd_changeevadeaction"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
		</member>
		<member name="F:SpeedBoostDisabled">
			<tagname value="bool"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_ssb"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="DriftSave"/>
			<referrer name="_B@Action"/>
			<referrer name="ResetVariables"/>
			<referrer name="GetPlayerKB"/>
			<referrer name="SetPlayerKB"/>
		</member>
		<member name="F:SpeedBoostMultiplier">
			<tagname value="Float"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_ssb"/>
			<referrer name="cmd_launcher"/>
		</member>
		<member name="F:Streamer_IncludeFileVersion">
			<attribute name="public"/>
		</member>
		<member name="F:TDDrift">
			<tagname value="Text"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="CountDownDriftTimer"/>
			<referrer name="DriftSave"/>
			<referrer name="DestroyTextDraws"/>
			<referrer name="LoadTextDraws"/>
		</member>
		<member name="F:TDrif">
			<tagname value="bool"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_planes"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="CountDownDriftTimer"/>
			<referrer name="DriftSave"/>
			<referrer name="Drift"/>
			<referrer name="AngleUpdate"/>
			<referrer name="CheckPlayerState"/>
		</member>
		<member name="F:TDriftPointsNow">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="CountDownDriftTimer"/>
			<referrer name="DriftSave"/>
			<referrer name="DriftExit"/>
		</member>
		<member name="F:TPsystem">
			<tagname value="bool"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="cmd_rtpall"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="cmd_tps"/>
		</member>
		<member name="F:TRUE">
			<tagname value="bool"/>
			<library>y_shortvar</library>  <remarks>  <c>true</c>, but usable in tests without a constant expression warning.  </remarks> 
		</member>
		<member name="F:TT_CPSize">
			<tagname value="Float"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRace"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:TT_Checkpoints">
			<tagname value="Float"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="TT_LoadCheckpoints"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRaceCD"/>
			<referrer name="TT_StartRace"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:TT_ID">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_tt"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Announcement"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRaceCD"/>
			<referrer name="TTTimeTDUpdate"/>
			<referrer name="TT_Exit"/>
			<referrer name="DeleteTextTT"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:TTcar">
			<referrer name="SpawnVehicle"/>
			<referrer name="TT_ChecknTeleport"/>
		</member>
		<member name="F:TeleportSystem">
			<referrer name="ReturnTeleportID"/>
			<referrer name="CreateNewTeleport"/>
		</member>
		<member name="F:Time18t">
			<tagname value="Text"/>
			<referrer name="TT_StartRace"/>
			<referrer name="RaceTime22"/>
			<referrer name="TTTimeTDUpdate"/>
			<referrer name="TT_Exit"/>
			<referrer name="CreateTextTT"/>
			<referrer name="DeleteTextTT"/>
		</member>
		<member name="F:TimeLeft">
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="CountDownDriftTimer"/>
			<referrer name="DriftSave"/>
		</member>
		<member name="F:TimerA">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="DriftSave"/>
		</member>
		<member name="F:TimerC">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="DriftSave"/>
		</member>
		<member name="F:TimerIDs">
			<referrer name="LooseWeapons"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
		</member>
		<member name="F:TokenUltimate">
			<tagname value="bool"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="nofun"/>
			<referrer name="ResetVariables"/>
		</member>
		<member name="F:TokenUsing">
			<tagname value="bool"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Token_Weapons"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="ResetVariables"/>
		</member>
		<member name="F:TotalCP">
			<referrer name="cmd_racers"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="Race_Timing"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:TotalRacers">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:TotalRacersCur">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="GoGoRace"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:UltimateTimer">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="nofun"/>
		</member>
		<member name="F:VehicleID">
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_join"/>
			<referrer name="LoadRace"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:VehicleNames">
			<referrer name="TT_Announcement"/>
		</member>
		<member name="F:WeaponData">
			<tagname value="Text"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="TD_GetPlayerWeaponData"/>
		</member>
		<member name="F:WeaponNames">
			<referrer name="cmd_duel"/>
			<referrer name="Duel_End"/>
			<referrer name="GetWeaponModelIDFromName"/>
		</member>
		<member name="F:WeaponsDropped">
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="RemoveWeaponDropped"/>
			<referrer name="LooseWeapons"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
		</member>
		<member name="F:YSIM_VERMAX">
			<library>y_core</library>  <remarks>  The property name used for some short code.  </remarks> 
		</member>
		<member name="F:YSIM_VERRET">
			<library>y_core</library>  <remarks>  The property name used for some short code.  </remarks> 
		</member>
		<member name="F:YSI_EMPTY">
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="YVers_Callback"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="T@"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<library>y_interning</library>  <remarks>  The string <c></c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_FILTERSCRIPT">
			<tagname value="bool"/>
			<referrer name="Server_IsFilterscript"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnPlayerConnect"/>
			<library>y_serverdata</library>  <remarks>  <c>true</c> if the current script is running as a filterscript.  </remarks> 
		</member>
		<member name="F:YSI_GAMEMODE">
			<tagname value="bool"/>
			<referrer name="Server_IsGameMode"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnGameModeExit"/>
			<referrer name="ScriptInit_OnYSIInit"/>
			<library>y_serverdata</library>  <remarks>  <c>true</c> if the current script is running as a gamemode.  </remarks> 
		</member>
		<member name="F:YSI_SPACE">
			<referrer name="ScriptInit_Dump"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroMessage"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<library>y_interning</library>  <remarks>  The string <c> </c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_TEMP_FILE_NAME">
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="fautocleanup"/>
			<library>y_core</library> 
		</member>
		<member name="F:YSI_cellbytes__">
			<library>y_compilerdata</library>  <remarks>  The number of bytes in a cell.  There is the number of bits as a constant  built-in, but not the number of bytes.  </remarks> 
		</member>
		<member name="F:YSI_g">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It starts a massive  comment block in the pawndoc XML output that hides all YSI internal  variables - that is, those that start with <c>YSI_g</c>.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  <!-- 
		</member>
		<member name="F:YSI_gAMXAddress_">
			<library>y_compilerdata</library>  <remarks>  Global variable used for <c>LREF</c> and <c>SREF</c> in the inline versions  of <c>AMX_Read</c> and <c>AMX_Write</c>.  </remarks> 
		</member>
		<member name="F:YSI_gDebugLevel">
			<referrer name="Debug_Level"/>
			<library>y_debug</library> 
		</member>
		<member name="F:YSI_gIteratorDepth">
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_gPlayerIP">
			<referrer name="Android_OnPlayerConnect"/>
			<referrer name="Android_OnPlayerDisconnect"/>
			<referrer name="CensorPlayerIP"/>
			<p/>
		</member>
		<member name="F:YSI_gUnsafeHugeString">
			<referrer name="Files_CopyRange"/>
			<library>y_shortvar</library>  <remarks>  A massive string.  That's it.  Just for internal formatting when the  length isn't known in advance and we need to just go massively OTT to  ensure that all user code works.  It is split in to individual arrays  for using per-language, but the whole lot can be used as an even bigger  concatenated string with <c>YSI_UNSAFE_HUGE_STRING</c>, of length  <c>YSI_UNSAFE_HUGE_LENGTH</c>.  </remarks> 
		</member>
		<member name="F:YSI_gVehicleFlags">
			<tagname value="e_VEHICLE_FLAGS"/>
		</member>
		<member name="F:YSI_gVehicleNames">
		</member>
		<member name="F:YSI_gVehicleSeats">
			<referrer name="Iter_Func@VehicleOccupant"/>
		</member>
		<member name="F:YSI_gVehicleTopSpeed">
		</member>
		<member name="F:YSI_g_sCallData">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="F@"/>
			<library>y_shortfunc</library> 
		</member>
		<member name="F:YSI_g_sIsAndroid">
			<tagname value="bool"/>
			<referrer name="IsPCPlayer"/>
			<referrer name="IsAndroidPlayer"/>
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="OnAndroidTimer"/>
			<referrer name="OnPlayerDisconnect"/>
		</member>
		<member name="F:YSI_g_sIteratorStack">
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_g_sPropCaller">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<library>y_shortfunc</library> 
		</member>
		<member name="F:YSI_g_sPropReturn">
			<referrer name="D@"/>
			<referrer name="L@"/>
			<referrer name="X@"/>
			<library>y_shortfunc</library> 
		</member>
		<member name="F:YSI_g_sPropVarArg">
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="L@"/>
			<referrer name="T@"/>
			<library>y_shortfunc</library> 
		</member>
		<member name="F:YSI_g_sPtr">
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_g_sScriptInitState">
			<tagname value="E_SCRIPTINIT_STATE"/>
			<referrer name="Server_JITExists"/>
			<referrer name="Server_JITComplete"/>
			<referrer name="Script_JITComplete"/>
			<referrer name="Server_CacheLoaded"/>
			<referrer name="Script_CacheLoaded"/>
			<referrer name="Server_CacheSaved"/>
			<referrer name="Script_CacheSaved"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="OnJITCompile"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<library>y_scriptinit</library>  <remarks>  How the script was set up - JIT, cache, or other.  </remarks> 
		</member>
		<member name="F:YSI_g_sStack">
			<referrer name="AMX_OnCodeInit"/>
		</member>
		<member name="F:YSI_g_sStackPtr">
			<referrer name="AMX_OnCodeInit"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_g_sTimers">
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerConnect"/>
		</member>
		<member name="F:YSI_g_sYSIM_STRING">
			<referrer name="K@"/>
			<library>y_shortfunc</library> 
		</member>
		<member name="F:YSI_g_sYSI_MAX_STRING">
			<referrer name="K@"/>
			<library>y_shortfunc</library> 
		</member>
		<member name="F:YSI_g_scDeBruijn1">
			<referrer name="Cell_GetLowestBit"/>
			<referrer name="Cell_GetLowestBlank"/>
			<library>y_cell</library> 
		</member>
		<member name="F:YSI_g_scDeBruijn2">
			<referrer name="Cell_GetLowestBitEx"/>
			<referrer name="Cell_GetLowestBlankEx"/>
			<library>y_cell</library> 
		</member>
		<member name="F:YSI_gcF">
			<library>y_interning</library>  <remarks>  The string <c>f</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcI">
			<referrer name="SetTimerAddr"/>
			<referrer name="OnPlayerConnect"/>
			<library>y_interning</library>  <remarks>  The string <c>i</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcII">
			<referrer name="OnAndroidTimer"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<library>y_interning</library>  <remarks>  The string <c>ii</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcIII">
			<library>y_interning</library>  <remarks>  The string <c>iii</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcIIII">
			<library>y_interning</library>  <remarks>  The string <c>iiii</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcIIIIIIIIIIIIIIIII">
			<library>y_interning</library>  <remarks>  The string <c>iiiiiiiiiiiiiiiii</c> defined just once for repeated use.  Yes, believe it or not this ridiculous string is used in YSI!  </remarks> 
		</member>
		<member name="F:YSI_gcISI">
			<library>y_interning</library>  <remarks>  The string <c>isi</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcISII">
			<library>y_interning</library>  <remarks>  The string <c>isii</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcISIII">
			<library>y_interning</library>  <remarks>  The string <c>isiii</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcS">
			<library>y_interning</library>  <remarks>  The string <c>s</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcSI">
			<library>y_interning</library>  <remarks>  The string <c>si</c> defined just once for repeated use.  </remarks> 
		</member>
		<member name="F:YSI_gcUnsafeStartupContract__">
			<library>y_core</library>  <remarks>  This variable denotes that someone has signed the contract promising not to  complain when things go wrong in YSI if they disable all the checks.  You  need to know what you're doing in pawn in order to use YSI in this way, and  thus also to sign the contract.  To date no-one has ever figured out how to  do this, despite the fact that it is written right here in the code.  </remarks> 
		</member>
		<member name="F:YSI_gsBuggedFOpen">
			<tagname value="bool"/>
			<referrer name="YSI_FOpen__"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<remarks>  Do we need to fix fopen?  </remarks> 
		</member>
		<member name="F:YSI_gsDefaultDirs">
			<referrer name="GetYSIScriptfilesDir"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<library>y_utils - files</library> 
		</member>
		<member name="F:YSI_gsFirstHeader">
			<tagname value="bool"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroMessage"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gsIter_ActorDo">
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<library>y_iterate</library> 
		</member>
		<member name="F:YSI_gsIter_VehicleDo">
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<library>y_iterate</library> 
		</member>
		<member name="F:YSI_gsNewPart">
			<tagname value="bool"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroPart"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gsObnoxiousHeader">
			<tagname value="bool"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gsPurgeTimer">
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="OnGameModeInit"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gsStartDMY">
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="Server_GetStartDateTime"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gsStartHMS">
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="Server_GetStartDateTime"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gsStartTime">
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="Server_GetStartTime"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gsc38">
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscDone">
			<referrer name="ScriptInit_Dump"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscFailed">
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscHeader">
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroPart"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscInitMsgA">
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscInitMsgB">
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscInitMsgC">
			<referrer name="ScriptInit_Dump"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscInitMsgD">
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscLinux">
			<referrer name="YVers_PrintHeader"/>
			<library>y_scriptdata</library> 
		</member>
		<member name="F:YSI_gscOnClientCheckResponse">
			<referrer name="Server_LoadRconFix"/>
			<library>y_rconfix</library> 
		</member>
		<member name="F:YSI_gscPostInitFile">
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscPreInitFile">
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscRconFixFS">
			<referrer name="Server_LoadRconFix"/>
			<library>y_rconfix</library> 
		</member>
		<member name="F:YSI_gscSpacer">
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroPart"/>
			<library>y_scriptinit</library> 
		</member>
		<member name="F:YSI_gscTimerStub">
			<referrer name="SetTimerAddr"/>
			<referrer name="SetTimerExAddr"/>
			<library>y_samp_natives</library>  <remarks>  The name of the public wrapper function to call.  </remarks> 
		</member>
		<member name="F:YSI_gscWindows">
			<referrer name="Script_GetCompilerString"/>
			<referrer name="YVers_PrintHeader"/>
			<library>y_scriptdata</library> 
		</member>
		<member name="F:YSI_gzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It ends a massive  comment block in the pawndoc XML output that hides all YSI internal  variables - that is, those that start with <c>YSI_g</c>.  </remarks>  --> 
		</member>
		<member name="F:_0">
			<summary>  The first parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_0</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_0zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You  still see one variable (<c>_0</c>), but that one has a legitimate use  that can be documented and is fine to be seen.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_1">
			<summary>  The second parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_1</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_1zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_1</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_2">
			<summary>  The third parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_2</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_2zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_2</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_3">
			<summary>  The fourth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_3</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_3zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_3</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_4">
			<summary>  The fifth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_4</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_4zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_4</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_5">
			<summary>  The sixth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_5</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_5zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_5</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_6">
			<summary>  The seventh parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_6</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_6zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_6</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_7">
			<summary>  The eighth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_7</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_7zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_7</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_8">
			<summary>  The ninth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_8</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_8zzzzzzzzzzzzzzzzzzzzzzzzzzzzz">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You still see one variable (<c>_8</c>), but that one has a legitimate  use that can be documented and is fine to be seen.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:_9">
			<summary>  The tenth parameter in a <emph>y_functional</emph> lambda function.  This is implicitly declared.  </summary>  <!--  <remarks>  Hide future declarations with <c>_9</c> prefix.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks> 
		</member>
		<member name="F:_@tmp">
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:__ARR">
			<library>amx_assembly addressof_light</library>
		</member>
		<member name="F:__COMPILER_CODEPAGE_TEST_0">
			<library>y_compilerdata</library>  <remarks>  A string that is only two cells long is a DBCS character set is used, or is  more otherwise.  We then use <c>sizeof</c> to determine which.  Note that  one of those two cells is the null terminator, so the two characters  compile to a single character.  </remarks> 
		</member>
		<member name="F:__COMPILER_PACKED_TEST">
			<library>y_compilerdata</library>  <remarks>  Determines if strings are packed by default or not.  Simply a string with a  single character in, whose size is tested straight after.  If packing is  on, then the string will only be one cell big.  If it isn't, two.  </remarks> 
		</member>
		<member name="F:__OPEN_MP_VERSION">
			<attribute name="public"/>
			<referrer name="Server_LoadRconFix"/>
			<referrer name="Server_UnloadRconFix"/>
			<remarks>  If running on SA:MP this will remain <c>0</c>, open.mp will set it.  open.mp versions look like:  <code>  01.04.02.0544  </code>  Thus they are encoded here as:  <code>  (major << 28) | (minor << 21) | (patch << 14) | (prerel)  </code>  </remarks> 
		</member>
		<member name="F:__REF">
			<library>amx_assembly addressof_light</library>
		</member>
		<member name="F:__R_Name">
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Announcement"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:__RaceTick">
			<referrer name="TT_StartRace"/>
			<referrer name="TTGetRaceTick"/>
		</member>
		<member name="F:__SAMP_INCLUDES_VERSION">
			<attribute name="public"/>
			<referrer name="Script_GetIncludesString"/>
			<remarks>  Version examples:  <ul>  <li><c>0.3.DL R1       - 03D010</c></li>  <li>                               </li>  <li><c>0.3.7 R3        - 037030</c></li>  <li><c>0.3.7 R2-2      - 037022</c></li>  <li><c>0.3.7 R1-2      - 037012</c></li>  <li><c>0.3.7           - 037000</c></li>  <li>                               </li>  <li><c>0.3z R4         - 030700</c></li>  <li><c>0.3z R3         - 030700</c></li>  <li><c>0.3z R2-1       - 030700</c></li>  <li><c>0.3z R1-2       - 030700</c></li>  <li><c>0.3z            - 030700</c></li>  <li><c>0.3x R2 patch 1 - 030621</c></li>  <li><c>0.3x R2         - 030620</c></li>  <li><c>0.3x R1-2       - 030612</c></li>  <li><c>0.3x            - 030600</c></li>  <li><c>0.3e            - 030500</c></li>  <li><c>0.3d            - 030400</c></li>  <li><c>0.3c            - 030300</c></li>  <li><c>0.3b            - 030200</c></li>  <li><c>0.3a            - 030100</c></li>  <li>                               </li>  <li><c>0.2X            - 02A000</c></li>  <li><c>0.2.2 R3        - 022300</c></li>  </ul>  Rough rules:  <p />  Uses (roughtly) BCD.  Special versions are denoted outside 0-9.  <code>  0.1.2c R4-5  | | ||  | |  0 1 23  4 5  =  0x012345  </code>  (assuming c is the third revision)  <p />  0.2X becomes 02A000 because it is basically 0.2.3, but not, while higher than  0.2.2 so can't be 020400 (for example).  Also, its a capital letter, so doesn't  use the revision method.  <p />  P.S.  Making a consistent scheme for SA:MP versions is REALLY hard.  <p />  open.mp releases can use `A` as the first digit.  </remarks> 
		</member>
		<member name="F:__TAGOF__T_OBJECT_MATERIAL_TEXT">
			<tagname value="T_OBJECT_MATERIAL_TEXT_ALIGN"/>
		</member>
		<member name="F:__TAGOF__T_PLAYER_RECORDING">
			<tagname value="T_PLAYER_RECORDING_TYPE"/>
		</member>
		<member name="F:__Timer">
			<referrer name="RaceTime22"/>
			<referrer name="TTTimeTDUpdate"/>
			<referrer name="TT_Exit"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:__TotalCP">
			<referrer name="SetUP_TT"/>
			<referrer name="RaceTime22"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:__VehicleID">
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Initization"/>
			<referrer name="TT_Announcement"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRace"/>
		</member>
		<member name="F:__YSI_gsCompilerEnum">
			<library>y_compilerdata</library>  <remarks>  Declares a variable with the enum sizeof determination enum, so that the  size of one of its elements can be taken later.  </remarks> 
		</member>
		<member name="F:__date">
			<referrer name="YVers_PrintHeader"/>
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
			<referrer name="cmd_version"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="cmd_getdist"/>
			<referrer name="cmd_rmbuilding"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_spinvehicle"/>
			<referrer name="cmd_spinvehiclex"/>
			<referrer name="cmd_spinvehicley"/>
			<referrer name="cmd_spinvehiclez"/>
			<referrer name="cmd_mjh"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="cmd_mjv"/>
			<referrer name="LoadKeys"/>
			<referrer name="DCMD_stats"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_rho"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_lho"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_cbone"/>
			<referrer name="cmd_eho"/>
			<referrer name="cmd_dho"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_ttp"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_sendoranges"/>
			<referrer name="cmd_sendapples"/>
			<referrer name="cmd_sendtokens"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_getid"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_deposit"/>
			<referrer name="cmd_withdraw"/>
			<referrer name="cmd_setmyradio"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_cc"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_eject"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_pj"/>
			<referrer name="cmd_dactor"/>
			<referrer name="cmd_actorkill"/>
			<referrer name="cmd_actorstrip"/>
			<referrer name="cmd_addactor"/>
			<referrer name="cmd_skin"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ask"/>
			<referrer name="cmd_answer"/>
			<referrer name="cmd_frr"/>
			<referrer name="cmd_dpt"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_cam"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_adddrift"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_expo"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_eo"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_gom"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_aotv"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_do"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_playaudioplayer"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_spooflost"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_myweather"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_fakekill"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_fakeban"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_mytime"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_takevip"/>
			<referrer name="cmd_takepro"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_setep"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<referrer name="cmd_bankrupt"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="cmd_setplayeroranges"/>
			<referrer name="cmd_setplayerapples"/>
			<referrer name="cmd_setplayerraceswon"/>
			<referrer name="cmd_setplayerplaytime"/>
			<referrer name="cmd_setplayerracesjoined"/>
			<referrer name="cmd_setplayerkills"/>
			<referrer name="cmd_setplayerworld"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_asay"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givejp"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_gotocoords"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_mytoken"/>
			<referrer name="cmd_settoken"/>
			<referrer name="cmd_buytokens"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_loadrace"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="cmd_rweather"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_cpsize"/>
			<referrer name="cmd_saverace"/>
			<referrer name="cmd_deleterace"/>
			<referrer name="cmd_undeleterace"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="ConvertProperties"/>
		</member>
		<member name="F:__gOnce">
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<p/>
		</member>
		<member name="F:__loading">
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_tt"/>
		</member>
		<member name="F:__optimisation__">
			<library>y_compilerdata</library>  <remarks>  The current optimisation level, but we don't know it.  </remarks> 
		</member>
		<member name="F:__time">
			<referrer name="YVers_PrintHeader"/>
		</member>
		<member name="F:_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzy">
			<hidden />  <remarks>  This variable only exists to hide other variables.  It end a massive  comment block in the pawndoc XML output that hides all internal  variables - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal variables appear in the  generated documentation always.  This is the best way to hide them.  You  still see some internal variables (<c>_0</c> - <c>_9</c>), but those  have a legitimate reason to be documented externally.  <p/>  This is <c>_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzy</c> and ends the internal  variables block.  This is the last possible name before the first  character is no longer <c>_</c>, except for one, when the functions are  sorted lexicographically (alphabetically).  There's also  <c>_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz</c> that ends the functions block;  they could have the same name if they were not declared in the same  scope, but they might not always be separately defined.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="F:aVehicleNames">
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="GetVehicleModelIDFromName"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
		</member>
		<member name="F:aWeaponNames">
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_vstats"/>
		</member>
		<member name="F:ammo">
			<referrer name="TD_GetPlayerWeaponData"/>
		</member>
		<member name="F:bikelist">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="cmd_bikes"/>
		</member>
		<member name="F:bombrace">
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_deathrace"/>
			<referrer name="SaveRace"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:building">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
		</member>
		<member name="F:cNeon">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="cmd_rneon"/>
			<referrer name="AddNeon"/>
			<referrer name="ResetVariables"/>
		</member>
		<member name="F:cpHelpMsg">
			<tagname value="Float"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="PosCloseToSpawn"/>
		</member>
		<member name="F:cpV">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
		</member>
		<member name="F:dVehicles">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="IsPlayerInDeliveryVehicle"/>
		</member>
		<member name="F:dm">
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_dmq"/>
			<referrer name="dmq"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
		</member>
		<member name="F:dmlock">
			<tagname value="bool"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dm"/>
		</member>
		<member name="F:dveh">
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:eDriftTimer">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="DriftSave"/>
		</member>
		<member name="F:eTimer">
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_endrace"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:fFPS">
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
		</member>
		<member name="F:firststatic">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="DestroyVehicleEx"/>
		</member>
		<member name="F:gBackgroundTextDrawId">
			<tagname value="PlayerText"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
		</member>
		<member name="F:gCancelButtonTextDrawId">
			<tagname value="PlayerText"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:gCurrentPageTextDrawId">
			<tagname value="PlayerText"/>
			<referrer name="mS_UpdatePageTextDraw"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
		</member>
		<member name="F:gCustomList">
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="ShowModelSelectionMenuEx"/>
		</member>
		<member name="F:gHeaderTextDrawId">
			<tagname value="PlayerText"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
		</member>
		<member name="F:gItemAmount">
			<referrer name="LoadModelSelectionMenu"/>
		</member>
		<member name="F:gItemAt">
			<referrer name="SSCANF_OnPlayerConnect"/>
		</member>
		<member name="F:gItemList">
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="LoadModelSelectionMenu"/>
		</member>
		<member name="F:gListAmount">
			<referrer name="LoadModelSelectionMenu"/>
		</member>
		<member name="F:gLists">
			<referrer name="mS_GetAmountOfListItems"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="LoadModelSelectionMenu"/>
		</member>
		<member name="F:gNextButtonTextDrawId">
			<tagname value="PlayerText"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:gPlayerSpawned">
			<tagname value="bool"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
		</member>
		<member name="F:gPrevButtonTextDrawId">
			<tagname value="PlayerText"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:gRotZoom">
			<tagname value="Float"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="LoadModelSelectionMenu"/>
		</member>
		<member name="F:gRotZoomAmount">
			<referrer name="LoadModelSelectionMenu"/>
		</member>
		<member name="F:gSelectionItems">
			<tagname value="PlayerText"/>
			<referrer name="mS_DestroyPlayerMPs"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:gSelectionItemsTag">
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
		</member>
		<member name="F:gSpectateID">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="StopSpec"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="PGodTimer"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_specpolice"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_tp"/>
			<referrer name="ResetVariables"/>
			<referrer name="IsAdminInSpec"/>
		</member>
		<member name="F:gSpectateType">
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="StopSpec"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_ban"/>
		</member>
		<member name="F:g_ConnectionDate">
			<referrer name="MP_OPC"/>
		</member>
		<member name="F:g_DCMDMessageID">
			<tagname value="DCC_Message"/>
			<referrer name="DCMD_GetCommandMessageId"/>
			<referrer name="DCC_OnMessageCreate"/>
		</member>
		<member name="F:g_DialogPage">
			<referrer name="MP_OPC"/>
		</member>
		<member name="F:g_Target">
			<referrer name="MP_OPC"/>
		</member>
		<member name="F:g_eaJoinLog">
			<referrer name="MP_OPC"/>
		</member>
		<member name="F:g_pIP">
			<referrer name="MP_OPC"/>
		</member>
		<member name="F:gamePickups">
			<referrer name="StartSurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
		</member>
		<member name="F:gs_CustomFormatFunctions">
			<referrer name="InitializeFormatSpecifiers"/>
			<referrer name="formatex"/>
		</member>
		<member name="F:gs_bIsInitialized">
			<tagname value="bool"/>
			<referrer name="InitializeFormatSpecifiers"/>
			<referrer name="formatex"/>
		</member>
		<member name="F:helislist">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="cmd_helis"/>
		</member>
		<member name="F:isNeonON">
			<tagname value="bool"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="cmd_rneon"/>
			<referrer name="AddNeon"/>
			<referrer name="ResetVariables"/>
		</member>
		<member name="F:isRecordEmpty">
			<tagname value="bool"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="Race_Rotation"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:iterstart@Fib">
		</member>
		<member name="F:iterstart@Filter">
		</member>
		<member name="F:iterstart@N">
		</member>
		<member name="F:iterstart@NonNull">
		</member>
		<member name="F:iterstart@Null">
		</member>
		<member name="F:iterstart@Powers">
		</member>
		<member name="F:iterstart@Random">
		</member>
		<member name="F:iterstart@Range">
		</member>
		<member name="F:iterstart@Until">
		</member>
		<member name="F:iterstart@VehicleDriver">
		</member>
		<member name="F:iterstart@VehicleOccupant">
		</member>
		<member name="F:iterstart@VehiclePassenger">
		</member>
		<member name="F:kLibPos">
			<tagname value="Float"/>
			<referrer name="PGodTimer"/>
		</member>
		<member name="F:laststatic">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="RandomMessages"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_tt"/>
			<referrer name="DestroyVehicleEx"/>
		</member>
		<member name="F:lastwin">
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_endrace"/>
			<referrer name="LoadRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:megajump">
			<tagname value="bool"/>
			<referrer name="cmd_megajump"/>
			<referrer name="cmd_enableallmegajump"/>
			<referrer name="cmd_disableallmegajump"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="ResetVariables"/>
		</member>
		<member name="F:neons">
			<referrer name="cmd_rneon"/>
			<referrer name="AddNeon"/>
			<referrer name="RemoveNeon"/>
		</member>
		<member name="F:oPos">
			<tagname value="Float"/>
			<referrer name="PGodTimer"/>
		</member>
		<member name="F:pDuelObj">
			<referrer name="Duel_CreatePlayerArena"/>
			<referrer name="Duel_DestroyPlayerArena"/>
		</member>
		<member name="F:pRaceLabel">
			<tagname value="Text3D"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:planelist">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="cmd_planes"/>
		</member>
		<member name="F:position">
			<referrer name="GoGoRace"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:ppos">
			<tagname value="Float"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="AngleUpdate"/>
		</member>
		<member name="F:rID">
			<referrer name="LoadRace"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="StartRace"/>
		</member>
		<member name="F:rTimer">
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_endrace"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:raceRotTimer">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_adminsettings"/>
		</member>
		<member name="F:raceRotTimerEx">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:racelabel">
			<tagname value="Text3D"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:racenotify">
			<tagname value="Text"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_endrace"/>
			<referrer name="RaceCountDown"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:size_l">
		</member>
		<member name="F:skinlist">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="cmd_skin"/>
		</member>
		<member name="F:spawnZones">
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
		</member>
		<member name="F:src_l">
		</member>
		<member name="F:tCash">
			<referrer name="RandomGame"/>
			<referrer name="OnPlayerText"/>
		</member>
		<member name="F:tScore">
			<referrer name="RandomGame"/>
			<referrer name="OnPlayerText"/>
		</member>
		<member name="F:tmpc">
			<referrer name="CPUConnectTime"/>
		</member>
		<member name="F:tmpw">
			<referrer name="cmd_rweather"/>
			<referrer name="SaveRace"/>
		</member>
		<member name="F:ttCD">
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_tt"/>
			<referrer name="TT_Announcement"/>
			<referrer name="TT_StartRaceCD"/>
		</member>
		<member name="F:ttoken">
			<referrer name="RandomGame"/>
			<referrer name="OnPlayerText"/>
		</member>
		<member name="F:tttimer">
			<referrer name="TT_Announcement"/>
			<referrer name="TT_StartRace"/>
			<referrer name="TT_Exit"/>
		</member>
		<member name="F:tword">
			<referrer name="RandomGame"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_react"/>
		</member>
		<member name="F:typing">
			<tagname value="bool"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="RandomGame"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_react"/>
		</member>
		<member name="F:using_deprecated_itertag_syntax">
			<tagname value="bool"/>
			<library>y_iterate</library> 
		</member>
		<member name="F:vFPS">
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
		</member>
		<member name="F:weapons">
			<referrer name="OnPlayerSpawn"/>
			<referrer name="TD_GetPlayerWeaponData"/>
		</member>
		<member name="F:wpa">
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
		</member>
		<member name="F:wps">
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
		</member>
		<member name="F:xstring">
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="RandomGame"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_version"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="cmd_getdist"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="CPUConnectTime"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_maprecord"/>
			<referrer name="cmd_mysqlq"/>
			<referrer name="cmd_restore"/>
			<referrer name="GetUserIDName"/>
			<referrer name="cmd_np"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_megajump"/>
			<referrer name="cmd_enableallmegajump"/>
			<referrer name="cmd_disableallmegajump"/>
			<referrer name="cmd_mjh"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="cmd_mjv"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerText"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="Unjailplayer_Timer"/>
			<referrer name="UnmutePlayer_Timer"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerFloodControl"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="AddPlayerBan"/>
			<referrer name="AddProxy"/>
			<referrer name="Login"/>
			<referrer name="LoadKeys"/>
			<referrer name="SaveKeys"/>
			<referrer name="SaveSettings"/>
			<referrer name="Save"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="IPInfoDB_Connect"/>
			<referrer name="DCMD_stats"/>
			<referrer name="DCMD_uptime"/>
			<referrer name="cmd_uptime"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_myeastereggs"/>
			<referrer name="cmd_sendoranges"/>
			<referrer name="cmd_sendapples"/>
			<referrer name="cmd_sendtokens"/>
			<referrer name="cmd_ammo"/>
			<referrer name="cmd_kb"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_groupmanage"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dm"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_balance"/>
			<referrer name="cmd_cloak"/>
			<referrer name="cmd_uncloak"/>
			<referrer name="cmd_healme"/>
			<referrer name="cmd_altitude"/>
			<referrer name="cmd_mypos"/>
			<referrer name="cmd_radio"/>
			<referrer name="cmd_setmyradio"/>
			<referrer name="cmd_myradio"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_detonate"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_camera"/>
			<referrer name="cmd_care"/>
			<referrer name="cmd_poop"/>
			<referrer name="cmd_cheese"/>
			<referrer name="cmd_omfg"/>
			<referrer name="cmd_scratch"/>
			<referrer name="cmd_fart"/>
			<referrer name="cmd_allbugged"/>
			<referrer name="cmd_cry"/>
			<referrer name="cmd_burp"/>
			<referrer name="cmd_wtf"/>
			<referrer name="cmd_noway"/>
			<referrer name="cmd_party"/>
			<referrer name="cmd_lol"/>
			<referrer name="cmd_ohyea"/>
			<referrer name="cmd_ohno"/>
			<referrer name="cmd_lovinit"/>
			<referrer name="cmd_cornholio"/>
			<referrer name="cmd_really"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_cb"/>
			<referrer name="cmd_npcs"/>
			<referrer name="cmd_dactor"/>
			<referrer name="cmd_addactor"/>
			<referrer name="cmd_rconadmins"/>
			<referrer name="cmd_admins"/>
			<referrer name="cmd_bountylist"/>
			<referrer name="cmd_afklist"/>
			<referrer name="cmd_vips"/>
			<referrer name="cmd_pros"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_acceptpms"/>
			<referrer name="cmd_denypms"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_beach"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_area69"/>
			<referrer name="cmd_grove"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_panzehir"/>
			<referrer name="cmd_police"/>
			<referrer name="cmd_kjj"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_city"/>
			<referrer name="cmd_city2"/>
			<referrer name="cmd_city3"/>
			<referrer name="cmd_city4"/>
			<referrer name="cmd_city5"/>
			<referrer name="cmd_disco"/>
			<referrer name="cmd_factory"/>
			<referrer name="cmd_sweets"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_ask"/>
			<referrer name="cmd_answer"/>
			<referrer name="cmd_avip"/>
			<referrer name="cmd_rules"/>
			<referrer name="cmd_frr"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_vipcmds"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_rank"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_af"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_me"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_nso"/>
			<referrer name="cmd_objhelp"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_gom"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_gmlo"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_playaudio"/>
			<referrer name="cmd_stopaudioall"/>
			<referrer name="cmd_streamerstats"/>
			<referrer name="cmd_playaudioplayer"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_panztalk"/>
			<referrer name="cmd_amandatalk"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_spooflost"/>
			<referrer name="cmd_moveproxies"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_dbers"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_myweather"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_fakeban"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_eavr"/>
			<referrer name="cmd_davr"/>
			<referrer name="cmd_togglevehiclerockets"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_takevip"/>
			<referrer name="cmd_takepro"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_fav"/>
			<referrer name="cmd_discord"/>
			<referrer name="cmd_fav2"/>
			<referrer name="cmd_irc"/>
			<referrer name="cmd_readrules"/>
			<referrer name="cmd_nospam"/>
			<referrer name="cmd_ts"/>
			<referrer name="cmd_dontask"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_countdown"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_totalcars"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_setep"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_enablehydraall"/>
			<referrer name="cmd_disablehydraall"/>
			<referrer name="cmd_enablerhinoall"/>
			<referrer name="cmd_disablerhinoall"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<referrer name="cmd_bankrupt"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="cmd_setplayeroranges"/>
			<referrer name="cmd_setplayerapples"/>
			<referrer name="cmd_setplayerraceswon"/>
			<referrer name="cmd_setplayerplaytime"/>
			<referrer name="cmd_setplayerracesjoined"/>
			<referrer name="cmd_setplayerkills"/>
			<referrer name="cmd_setplayerworld"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_asay"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_healall"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_hsrpg"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_jp"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_ann"/>
			<referrer name="cmd_tann"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_ann2"/>
			<referrer name="cmd_ann3"/>
			<referrer name="cmd_ann4"/>
			<referrer name="cmd_gotocoords"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_settoken"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_deleterace"/>
			<referrer name="cmd_undeleterace"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
			<referrer name="SaveRace"/>
			<referrer name="GetRaceID"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="Race_Timing"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="cmd_gamestats"/>
			<referrer name="cmd_rtpall"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="LoadEasterEggs"/>
			<referrer name="EasterEggPickup"/>
			<referrer name="Easter_Egg_Update"/>
			<referrer name="GetUserID"/>
			<referrer name="AddDrift"/>
			<referrer name="SaveProperties"/>
		</member>
		<member name="F:xx_cd">
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:y_core_OPEN_MP_VERSION">
			<remarks>  If running on SA:MP this will remain <c>0</c>, open.mp will set it.  open.mp versions look like:  <code>  01.04.02.0544  </code>  Thus they are encoded here as:  <code>  (major << 28) | (minor << 21) | (patch << 14) | (prerel)  </code>  </remarks> 
		</member>
		<member name="F:zcmd_g_HasOPCE">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerCommandText"/>
		</member>
		<member name="F:zcmd_g_HasOPCS">
			<tagname value="bool"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerCommandText"/>
		</member>

		<!-- functions -->
		<member name="M:operator!(Float:)" syntax="operator!(Float:)(oper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="cellmax"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(_no_itertag:,_:)" syntax="operator*(_no_itertag:,_:)(a, b)">
			<stacksize value="1"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="OnActorStreamOut"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="OnPlayerStateChange"/>
			<param name="a">
				<paraminfo>_no_itertag </paraminfo>
			</param>
			<param name="b">
			</param>
			<library>y_iterate</library>  <remarks>  Suppress warnings when <c>_:</c> is used (correctly) instead of  <c>_no_itertag:</c>.  This function is never called, it only exists to  check tags in <c>Iter_Add</c> et. al, while guarded by <c>FALSE ?</c>.  </remarks> 
		</member>
		<member name="M:operator%(_:,Float:)" syntax="operator%(_:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(Float:,_:)" syntax="operator%(Float:,_:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator%(Float:,Float:)" syntax="operator%(Float:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Float:,_:)" syntax="operator!=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadderby"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator!=(Float:,Float:)" syntax="operator!=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(_:,Float:)" syntax="operator-(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="MegaJump"/>
			<referrer name="RotatePointVehicleRotation"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,_:)" syntax="operator-(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="cmd_selfiecam"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_nuke2"/>
			<referrer name="cmd_nuke"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_goto"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator+(Float:,_:)" syntax="operator+(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_parajump3"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_do"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_nuke2"/>
			<referrer name="cmd_nuke"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_join"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="cmd_tp"/>
			<referrer name="_B@Action"/>
			<referrer name="StuntTele"/>
			<referrer name="CreateAdminObject"/>
			<dependency name="float"/>
			<dependency name="floatadd"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator/(_:,Float:)" syntax="operator/(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,_:)" syntax="operator/(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator*(Float:,_:)" syntax="operator*(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="Drift"/>
			<referrer name="RotatePointVehicleRotation"/>
			<dependency name="float"/>
			<dependency name="floatmul"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator++(Float:)" syntax="operator++(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:)" syntax="operator-(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="GetXYInFrontOfPlayer"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="MatrixTransformVector"/>
			<referrer name="CreateSentence"/>
			<dependency name="cellmin"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator--(Float:)" syntax="operator--(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,Float:)" syntax="operator-(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator--(Float:)"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="RandomPointsInCircleSampled"/>
			<referrer name="RandomPointInCircleSampled"/>
			<referrer name="BiGramSimilarity"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="GetDistance"/>
			<referrer name="DistanceToPoint"/>
			<referrer name="GetPlayerClosestStreamedObject"/>
			<referrer name="GetPlayerClosestPlayer"/>
			<referrer name="IsPointInRangeOfPoint"/>
			<referrer name="AngleToPoint"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="RotatePointVehicleRotation"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(Float:,Float:)" syntax="operator+(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator++(Float:)"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEMultiply"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="RandomPointsInCircleSampled"/>
			<referrer name="RandomPointsInCircleCentred"/>
			<referrer name="RandomPointsInCircleDistributed"/>
			<referrer name="RandomPointInCircleSampled"/>
			<referrer name="RandomPointInCircleCentred"/>
			<referrer name="RandomPointInCircleDistributed"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="GetDistance"/>
			<referrer name="DistanceToPoint"/>
			<referrer name="GetPlayerClosestStreamedObject"/>
			<referrer name="GetPlayerClosestPlayer"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_sell"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_ramp"/>
			<referrer name="IsPointInRangeOfPoint"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_god"/>
			<referrer name="AngleToPoint"/>
			<referrer name="GetXYInFrontOfPlayer"/>
			<referrer name="MegaJump"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="GetPlayerSpeed"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="_B@Action"/>
			<referrer name="MatrixTransformVector"/>
			<referrer name="RotatePointVehicleRotation"/>
			<referrer name="PosCloseToSpawn"/>
			<referrer name="GetDistanceToProperty"/>
			<referrer name="CreateSentence"/>
			<referrer name="LoadProperties"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,Float:)" syntax="operator/(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="RandomFloatMax"/>
			<referrer name="AngleToPoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(Float:,Float:)" syntax="operator*(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEMultiply"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="RandomFloatMax"/>
			<referrer name="RandomPointsInCircleCentred"/>
			<referrer name="RandomPointsInCircleDistributed"/>
			<referrer name="RandomPointInCircleCentred"/>
			<referrer name="RandomPointInCircleDistributed"/>
			<referrer name="BiGramSimilarity"/>
			<referrer name="Vehicle_Speed"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="GetDistance"/>
			<referrer name="DistanceToPoint"/>
			<referrer name="GetPlayerClosestStreamedObject"/>
			<referrer name="GetPlayerClosestPlayer"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_launcher"/>
			<referrer name="IsPointInRangeOfPoint"/>
			<referrer name="ReturnTime"/>
			<referrer name="GetXYInFrontOfPlayer"/>
			<referrer name="MegaJump"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="GetPlayerSpeed"/>
			<referrer name="Drift"/>
			<referrer name="_B@Action"/>
			<referrer name="MatrixTransformVector"/>
			<referrer name="RotatePointVehicleRotation"/>
			<referrer name="CreateSentence"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Float:operator=(_:)" syntax="Float:operator=(_:)(oper)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="InterpolateColorLinear"/>
			<referrer name="InterpolateColor"/>
			<referrer name="InterpolateColour"/>
			<referrer name="BiGramSimilarity"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="DisableSpawnProtection"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="cmd_getdist"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="countdownr"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_delivery"/>
			<referrer name="cmd_michelles"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="Login"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_skateboard"/>
			<referrer name="cmd_shark"/>
			<referrer name="cmd_witchhat"/>
			<referrer name="cmd_xmashat"/>
			<referrer name="cmd_penis"/>
			<referrer name="cmd_helmet"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_sell"/>
			<referrer name="DuelStart"/>
			<referrer name="ResetPlayerArmor"/>
			<referrer name="ResetPlayerHealth"/>
			<referrer name="cmd_healme"/>
			<referrer name="cmd_givecash"/>
			<referrer name="Detonate"/>
			<referrer name="cmd_cc"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_para"/>
			<referrer name="cmd_brass"/>
			<referrer name="cmd_vibrator"/>
			<referrer name="cmd_vibrator2"/>
			<referrer name="cmd_dildo2"/>
			<referrer name="cmd_dildo"/>
			<referrer name="cmd_chainsaw"/>
			<referrer name="cmd_shovel"/>
			<referrer name="cmd_cane"/>
			<referrer name="cmd_flowers"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_hy"/>
			<referrer name="cmd_cb"/>
			<referrer name="cmd_actorkill"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_fix"/>
			<referrer name="cmd_ft"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_stunts"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<referrer name="cmd_af"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_expo"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="DeleteMovingData"/>
			<referrer name="cmd_goodies"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_changetdm"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_nuke2"/>
			<referrer name="cmd_nuke"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_healall"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="PlaySoundForAll2"/>
			<referrer name="CreateTextTT"/>
			<referrer name="BuildInitial"/>
			<referrer name="AddCP"/>
			<referrer name="LoadRace"/>
			<referrer name="GoGoRace"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="PlaySoundForAdmins"/>
			<referrer name="PlaySoundForAll"/>
			<referrer name="RaceVehicle"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="AddNeon"/>
			<referrer name="ReturnPlayerArmour"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<referrer name="_B@ResetValue"/>
			<referrer name="_B@Action"/>
			<referrer name="RotatePointVehicleRotation"/>
			<referrer name="PosCloseToSpawn"/>
			<referrer name="GetDistanceToProperty"/>
			<referrer name="CreateSentence"/>
			<referrer name="BuildObjects"/>
			<referrer name="LoadProperties"/>
			<param name="oper">
			</param>
		</member>
		<member name="M:operator==(Float:,Float:)" syntax="operator==(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="LoadModelSelectionMenu"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="AngleToPoint"/>
			<referrer name="IsVehicleSpawned"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="StuntTele"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,_:)" syntax="operator==(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="AngleToPoint"/>
			<referrer name="StuntTele"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(Float:,Float:)" syntax="operator&gt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="PGodTimer"/>
			<referrer name="cmd_ssb"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="AngleToPoint"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;(Float:,_:)" syntax="operator&gt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="AngleToPoint"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(_:,Float:)" syntax="operator&gt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,Float:)" syntax="operator&gt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="SSCANF_GetSimilarString"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="PGodTimer"/>
			<referrer name="AngleToPoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,_:)" syntax="operator&gt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;=(_:,Float:)" syntax="operator&gt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="OnPlayerSpawn"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,Float:)" syntax="operator&lt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="RandomPointsInCircleSampled"/>
			<referrer name="RandomPointInCircleSampled"/>
			<referrer name="GetPlayerClosestStreamedObject"/>
			<referrer name="GetPlayerClosestPlayer"/>
			<referrer name="PGodTimer"/>
			<referrer name="cmd_ssb"/>
			<referrer name="IsPointInRangeOfPoint"/>
			<referrer name="AngleToPoint"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<referrer name="CheckPlayerState"/>
			<referrer name="_B@Action"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,_:)" syntax="operator&lt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_launcher"/>
			<referrer name="AngleToPoint"/>
			<referrer name="_B@Action"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;(_:,Float:)" syntax="operator&lt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,Float:)" syntax="operator&lt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="AngleToPoint"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,_:)" syntax="operator&lt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="DerbyTimer"/>
			<referrer name="PosCloseToSpawn"/>
			<referrer name="IsPlayerNearProperty"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;=(_:,Float:)" syntax="operator&lt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="cmd_dano"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Float:operator=(__CompilerDefault:)" syntax="Float:operator=(__CompilerDefault:)(a)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:File:operator=(__CompilerDefault:)" syntax="File:operator=(__CompilerDefault:)(a)">
			<tagname value="File"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:_:operator=(__CompilerDefault:)" syntax="_:operator=(__CompilerDefault:)(a)">
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:bool:operator=(__CompilerDefault:)" syntax="bool:operator=(__CompilerDefault:)(a)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:filemode:operator=(__CompilerDefault:)" syntax="filemode:operator=(__CompilerDefault:)(a)">
			<tagname value="filemode"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:seek_whence:operator=(__CompilerDefault:)" syntax="seek_whence:operator=(__CompilerDefault:)(a)">
			<tagname value="seek_whence"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:floatround_method:operator=(__CompilerDefault:)" syntax="floatround_method:operator=(__CompilerDefault:)(a)">
			<tagname value="floatround_method"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:anglemode:operator=(__CompilerDefault:)" syntax="anglemode:operator=(__CompilerDefault:)(a)">
			<tagname value="anglemode"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DB:operator=(__CompilerDefault:)" syntax="DB:operator=(__CompilerDefault:)(a)">
			<tagname value="DB"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DBResult:operator=(__CompilerDefault:)" syntax="DBResult:operator=(__CompilerDefault:)(a)">
			<tagname value="DBResult"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Text:operator=(__CompilerDefault:)" syntax="Text:operator=(__CompilerDefault:)(a)">
			<tagname value="Text"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PlayerText:operator=(__CompilerDefault:)" syntax="PlayerText:operator=(__CompilerDefault:)(a)">
			<tagname value="PlayerText"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Menu:operator=(__CompilerDefault:)" syntax="Menu:operator=(__CompilerDefault:)(a)">
			<tagname value="Menu"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Text3D:operator=(__CompilerDefault:)" syntax="Text3D:operator=(__CompilerDefault:)(a)">
			<tagname value="Text3D"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PlayerText3D:operator=(__CompilerDefault:)" syntax="PlayerText3D:operator=(__CompilerDefault:)(a)">
			<tagname value="PlayerText3D"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_CP_TYPE:operator=(__CompilerDefault:)" syntax="T_CP_TYPE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_CP_TYPE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_WEAPON:operator=(__CompilerDefault:)" syntax="T_WEAPON:operator=(__CompilerDefault:)(a)">
			<tagname value="T_WEAPON"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_WEAPON_SLOT:operator=(__CompilerDefault:)" syntax="T_WEAPON_SLOT:operator=(__CompilerDefault:)(a)">
			<tagname value="T_WEAPON_SLOT"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_PLAYER_MARKERS_MODE:operator=(__CompilerDefault:)" syntax="T_PLAYER_MARKERS_MODE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_PLAYER_MARKERS_MODE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_DIALOG_STYLE:operator=(__CompilerDefault:)" syntax="T_DIALOG_STYLE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_DIALOG_STYLE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_HTTP_METHOD:operator=(__CompilerDefault:)" syntax="T_HTTP_METHOD:operator=(__CompilerDefault:)(a)">
			<tagname value="T_HTTP_METHOD"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_HTTP_ERROR:operator=(__CompilerDefault:)" syntax="T_HTTP_ERROR:operator=(__CompilerDefault:)(a)">
			<tagname value="T_HTTP_ERROR"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_CONNECTION_STATUS:operator=(__CompilerDefault:)" syntax="T_CONNECTION_STATUS:operator=(__CompilerDefault:)(a)">
			<tagname value="T_CONNECTION_STATUS"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_DOWNLOAD_REQUEST:operator=(__CompilerDefault:)" syntax="T_DOWNLOAD_REQUEST:operator=(__CompilerDefault:)(a)">
			<tagname value="T_DOWNLOAD_REQUEST"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_SELECT_OBJECT:operator=(__CompilerDefault:)" syntax="T_SELECT_OBJECT:operator=(__CompilerDefault:)(a)">
			<tagname value="T_SELECT_OBJECT"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_OBJECT_MATERIAL_SIZE:operator=(__CompilerDefault:)" syntax="T_OBJECT_MATERIAL_SIZE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_OBJECT_MATERIAL_SIZE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_EDIT_RESPONSE:operator=(__CompilerDefault:)" syntax="T_EDIT_RESPONSE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_EDIT_RESPONSE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_PLAYER_STATE:operator=(__CompilerDefault:)" syntax="T_PLAYER_STATE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_PLAYER_STATE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_SPECIAL_ACTION:operator=(__CompilerDefault:)" syntax="T_SPECIAL_ACTION:operator=(__CompilerDefault:)(a)">
			<tagname value="T_SPECIAL_ACTION"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_FIGHT_STYLE:operator=(__CompilerDefault:)" syntax="T_FIGHT_STYLE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_FIGHT_STYLE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_WEAPONSKILL:operator=(__CompilerDefault:)" syntax="T_WEAPONSKILL:operator=(__CompilerDefault:)(a)">
			<tagname value="T_WEAPONSKILL"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_WEAPONSTATE:operator=(__CompilerDefault:)" syntax="T_WEAPONSTATE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_WEAPONSTATE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_KEY:operator=(__CompilerDefault:)" syntax="T_KEY:operator=(__CompilerDefault:)(a)">
			<tagname value="T_KEY"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_CAM_MOVE:operator=(__CompilerDefault:)" syntax="T_CAM_MOVE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_CAM_MOVE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_CAM_MODE:operator=(__CompilerDefault:)" syntax="T_CAM_MODE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_CAM_MODE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_MAPICON:operator=(__CompilerDefault:)" syntax="T_MAPICON:operator=(__CompilerDefault:)(a)">
			<tagname value="T_MAPICON"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_SPECTATE_MODE:operator=(__CompilerDefault:)" syntax="T_SPECTATE_MODE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_SPECTATE_MODE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_FORCE_SYNC:operator=(__CompilerDefault:)" syntax="T_FORCE_SYNC:operator=(__CompilerDefault:)(a)">
			<tagname value="T_FORCE_SYNC"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_CLICK_SOURCE:operator=(__CompilerDefault:)" syntax="T_CLICK_SOURCE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_CLICK_SOURCE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_BULLET_HIT_TYPE:operator=(__CompilerDefault:)" syntax="T_BULLET_HIT_TYPE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_BULLET_HIT_TYPE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_TEXT_DRAW_FONT:operator=(__CompilerDefault:)" syntax="T_TEXT_DRAW_FONT:operator=(__CompilerDefault:)(a)">
			<tagname value="T_TEXT_DRAW_FONT"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_TEXT_DRAW_ALIGN:operator=(__CompilerDefault:)" syntax="T_TEXT_DRAW_ALIGN:operator=(__CompilerDefault:)(a)">
			<tagname value="T_TEXT_DRAW_ALIGN"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_VARTYPE:operator=(__CompilerDefault:)" syntax="T_VARTYPE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_VARTYPE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_CARMODTYPE:operator=(__CompilerDefault:)" syntax="T_CARMODTYPE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_CARMODTYPE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_VEHICLE_MODEL_INFO:operator=(__CompilerDefault:)" syntax="T_VEHICLE_MODEL_INFO:operator=(__CompilerDefault:)(a)">
			<tagname value="T_VEHICLE_MODEL_INFO"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_VEHICLE_PANEL_STATUS:operator=(__CompilerDefault:)" syntax="T_VEHICLE_PANEL_STATUS:operator=(__CompilerDefault:)(a)">
			<tagname value="T_VEHICLE_PANEL_STATUS"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_VEHICLE_DOOR_STATUS:operator=(__CompilerDefault:)" syntax="T_VEHICLE_DOOR_STATUS:operator=(__CompilerDefault:)(a)">
			<tagname value="T_VEHICLE_DOOR_STATUS"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_VEHICLE_LIGHT_STATUS:operator=(__CompilerDefault:)" syntax="T_VEHICLE_LIGHT_STATUS:operator=(__CompilerDefault:)(a)">
			<tagname value="T_VEHICLE_LIGHT_STATUS"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_VEHICLE_TYRE_STATUS:operator=(__CompilerDefault:)" syntax="T_VEHICLE_TYRE_STATUS:operator=(__CompilerDefault:)(a)">
			<tagname value="T_VEHICLE_TYRE_STATUS"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_OBJECT_MATERIAL_TEXT_ALIGN:operator=(__CompilerDefault:)" syntax="T_OBJECT_MATERIAL_TEXT_ALIGN:operator=(__CompilerDefault:)(a)">
			<tagname value="T_OBJECT_MATERIAL_TEXT_ALIGN"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_PLAYER_RECORDING_TYPE:operator=(__CompilerDefault:)" syntax="T_PLAYER_RECORDING_TYPE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_PLAYER_RECORDING_TYPE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Language:operator=(__CompilerDefault:)" syntax="Language:operator=(__CompilerDefault:)(a)">
			<tagname value="Language"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Bit:operator=(__CompilerDefault:)" syntax="Bit:operator=(__CompilerDefault:)(a)">
			<tagname value="Bit"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Bitmap:operator=(__CompilerDefault:)" syntax="Bitmap:operator=(__CompilerDefault:)(a)">
			<tagname value="Bitmap"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Style:operator=(__CompilerDefault:)" syntax="Style:operator=(__CompilerDefault:)(a)">
			<tagname value="Style"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:XML:operator=(__CompilerDefault:)" syntax="XML:operator=(__CompilerDefault:)(a)">
			<tagname value="XML"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:XMLEntry:operator=(__CompilerDefault:)" syntax="XMLEntry:operator=(__CompilerDefault:)(a)">
			<tagname value="XMLEntry"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Bintree:operator=(__CompilerDefault:)" syntax="Bintree:operator=(__CompilerDefault:)(a)">
			<tagname value="Bintree"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Group:operator=(__CompilerDefault:)" syntax="Group:operator=(__CompilerDefault:)(a)">
			<tagname value="Group"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Timer:operator=(__CompilerDefault:)" syntax="Timer:operator=(__CompilerDefault:)(a)">
			<tagname value="Timer"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:INI:operator=(__CompilerDefault:)" syntax="INI:operator=(__CompilerDefault:)(a)">
			<tagname value="INI"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:String@Const:operator=(__CompilerDefault:)" syntax="String@Const:operator=(__CompilerDefault:)(a)">
			<tagname value="String@Const"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:String:operator=(__CompilerDefault:)" syntax="String:operator=(__CompilerDefault:)(a)">
			<tagname value="String"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:error_level:operator=(__CompilerDefault:)" syntax="error_level:operator=(__CompilerDefault:)(a)">
			<tagname value="error_level"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:locale_category:operator=(__CompilerDefault:)" syntax="locale_category:operator=(__CompilerDefault:)(a)">
			<tagname value="locale_category"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:filter_type:operator=(__CompilerDefault:)" syntax="filter_type:operator=(__CompilerDefault:)(a)">
			<tagname value="filter_type"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:handler_flags:operator=(__CompilerDefault:)" syntax="handler_flags:operator=(__CompilerDefault:)(a)">
			<tagname value="handler_flags"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Variant:operator=(__CompilerDefault:)" syntax="Variant:operator=(__CompilerDefault:)(a)">
			<tagname value="Variant"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Variant@Const:operator=(__CompilerDefault:)" syntax="Variant@Const:operator=(__CompilerDefault:)(a)">
			<tagname value="Variant@Const"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Iter:operator=(__CompilerDefault:)" syntax="Iter:operator=(__CompilerDefault:)(a)">
			<tagname value="Iter"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Handle:operator=(__CompilerDefault:)" syntax="Handle:operator=(__CompilerDefault:)(a)">
			<tagname value="Handle"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:tag_uid:operator=(__CompilerDefault:)" syntax="tag_uid:operator=(__CompilerDefault:)(a)">
			<tagname value="tag_uid"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Task:operator=(__CompilerDefault:)" syntax="Task:operator=(__CompilerDefault:)(a)">
			<tagname value="Task"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:LinkedList:operator=(__CompilerDefault:)" syntax="LinkedList:operator=(__CompilerDefault:)(a)">
			<tagname value="LinkedList"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:List:operator=(__CompilerDefault:)" syntax="List:operator=(__CompilerDefault:)(a)">
			<tagname value="List"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Map:operator=(__CompilerDefault:)" syntax="Map:operator=(__CompilerDefault:)(a)">
			<tagname value="Map"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:tag_op:operator=(__CompilerDefault:)" syntax="tag_op:operator=(__CompilerDefault:)(a)">
			<tagname value="tag_op"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:fork_level:operator=(__CompilerDefault:)" syntax="fork_level:operator=(__CompilerDefault:)(a)">
			<tagname value="fork_level"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Amx:operator=(__CompilerDefault:)" syntax="Amx:operator=(__CompilerDefault:)(a)">
			<tagname value="Amx"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Var:operator=(__CompilerDefault:)" syntax="Var:operator=(__CompilerDefault:)(a)">
			<tagname value="Var"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:amx_err:operator=(__CompilerDefault:)" syntax="amx_err:operator=(__CompilerDefault:)(a)">
			<tagname value="amx_err"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:str_create_mode:operator=(__CompilerDefault:)" syntax="str_create_mode:operator=(__CompilerDefault:)(a)">
			<tagname value="str_create_mode"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AmxString:operator=(__CompilerDefault:)" syntax="AmxString:operator=(__CompilerDefault:)(a)">
			<tagname value="AmxString"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:ConstAmxString:operator=(__CompilerDefault:)" syntax="ConstAmxString:operator=(__CompilerDefault:)(a)">
			<tagname value="ConstAmxString"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AmxStringBuffer:operator=(__CompilerDefault:)" syntax="AmxStringBuffer:operator=(__CompilerDefault:)(a)">
			<tagname value="AmxStringBuffer"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AmxVariant:operator=(__CompilerDefault:)" syntax="AmxVariant:operator=(__CompilerDefault:)(a)">
			<tagname value="AmxVariant"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:ConstAmxVariant:operator=(__CompilerDefault:)" syntax="ConstAmxVariant:operator=(__CompilerDefault:)(a)">
			<tagname value="ConstAmxVariant"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AmxVariantBuffer:operator=(__CompilerDefault:)" syntax="AmxVariantBuffer:operator=(__CompilerDefault:)(a)">
			<tagname value="AmxVariantBuffer"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Guard:operator=(__CompilerDefault:)" syntax="Guard:operator=(__CompilerDefault:)(a)">
			<tagname value="Guard"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:CallbackHandler:operator=(__CompilerDefault:)" syntax="CallbackHandler:operator=(__CompilerDefault:)(a)">
			<tagname value="CallbackHandler"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:NativeHook:operator=(__CompilerDefault:)" syntax="NativeHook:operator=(__CompilerDefault:)(a)">
			<tagname value="NativeHook"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Pool:operator=(__CompilerDefault:)" syntax="Pool:operator=(__CompilerDefault:)(a)">
			<tagname value="Pool"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Expression:operator=(__CompilerDefault:)" syntax="Expression:operator=(__CompilerDefault:)(a)">
			<tagname value="Expression"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Symbol:operator=(__CompilerDefault:)" syntax="Symbol:operator=(__CompilerDefault:)(a)">
			<tagname value="Symbol"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicObject:operator=(__CompilerDefault:)" syntax="DynamicObject:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicObject"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicPickup:operator=(__CompilerDefault:)" syntax="DynamicPickup:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicPickup"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicCP:operator=(__CompilerDefault:)" syntax="DynamicCP:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicCP"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicRaceCP:operator=(__CompilerDefault:)" syntax="DynamicRaceCP:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicRaceCP"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicMapIcon:operator=(__CompilerDefault:)" syntax="DynamicMapIcon:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicMapIcon"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicText3D:operator=(__CompilerDefault:)" syntax="DynamicText3D:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicText3D"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicArea:operator=(__CompilerDefault:)" syntax="DynamicArea:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicArea"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DynamicActor:operator=(__CompilerDefault:)" syntax="DynamicActor:operator=(__CompilerDefault:)(a)">
			<tagname value="DynamicActor"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:T_STREAMER_TYPE:operator=(__CompilerDefault:)" syntax="T_STREAMER_TYPE:operator=(__CompilerDefault:)(a)">
			<tagname value="T_STREAMER_TYPE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_REGEX_GRAMMAR:operator=(__CompilerDefault:)" syntax="E_REGEX_GRAMMAR:operator=(__CompilerDefault:)(a)">
			<tagname value="E_REGEX_GRAMMAR"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_REGEX_FLAG:operator=(__CompilerDefault:)" syntax="E_REGEX_FLAG:operator=(__CompilerDefault:)(a)">
			<tagname value="E_REGEX_FLAG"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_MATCH_FLAG:operator=(__CompilerDefault:)" syntax="E_MATCH_FLAG:operator=(__CompilerDefault:)(a)">
			<tagname value="E_MATCH_FLAG"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Regex:operator=(__CompilerDefault:)" syntax="Regex:operator=(__CompilerDefault:)(a)">
			<tagname value="Regex"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:regex:operator=(__CompilerDefault:)" syntax="regex:operator=(__CompilerDefault:)(a)">
			<tagname value="regex"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:RegexMatch:operator=(__CompilerDefault:)" syntax="RegexMatch:operator=(__CompilerDefault:)(a)">
			<tagname value="RegexMatch"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:match_results:operator=(__CompilerDefault:)" syntax="match_results:operator=(__CompilerDefault:)(a)">
			<tagname value="match_results"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PR_HandlerType:operator=(__CompilerDefault:)" syntax="PR_HandlerType:operator=(__CompilerDefault:)(a)">
			<tagname value="PR_HandlerType"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PR_ValueType:operator=(__CompilerDefault:)" syntax="PR_ValueType:operator=(__CompilerDefault:)(a)">
			<tagname value="PR_ValueType"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PR_PacketPriority:operator=(__CompilerDefault:)" syntax="PR_PacketPriority:operator=(__CompilerDefault:)(a)">
			<tagname value="PR_PacketPriority"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:PR_PacketReliability:operator=(__CompilerDefault:)" syntax="PR_PacketReliability:operator=(__CompilerDefault:)(a)">
			<tagname value="PR_PacketReliability"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:BitStream:operator=(__CompilerDefault:)" syntax="BitStream:operator=(__CompilerDefault:)(a)">
			<tagname value="BitStream"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Opcode:operator=(__CompilerDefault:)" syntax="Opcode:operator=(__CompilerDefault:)(a)">
			<tagname value="Opcode"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:AsmError:operator=(__CompilerDefault:)" syntax="AsmError:operator=(__CompilerDefault:)(a)">
			<tagname value="AsmError"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:DisasmResult:operator=(__CompilerDefault:)" syntax="DisasmResult:operator=(__CompilerDefault:)(a)">
			<tagname value="DisasmResult"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_SORT_ORDER:operator=(__CompilerDefault:)" syntax="E_SORT_ORDER:operator=(__CompilerDefault:)(a)">
			<tagname value="E_SORT_ORDER"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Request:operator=(__CompilerDefault:)" syntax="Request:operator=(__CompilerDefault:)(a)">
			<tagname value="Request"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:RequestsClient:operator=(__CompilerDefault:)" syntax="RequestsClient:operator=(__CompilerDefault:)(a)">
			<tagname value="RequestsClient"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_HTTP_METHOD:operator=(__CompilerDefault:)" syntax="E_HTTP_METHOD:operator=(__CompilerDefault:)(a)">
			<tagname value="E_HTTP_METHOD"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:E_HTTP_STATUS:operator=(__CompilerDefault:)" syntax="E_HTTP_STATUS:operator=(__CompilerDefault:)(a)">
			<tagname value="E_HTTP_STATUS"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:JSON_NODE:operator=(__CompilerDefault:)" syntax="JSON_NODE:operator=(__CompilerDefault:)(a)">
			<tagname value="JSON_NODE"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Headers:operator=(__CompilerDefault:)" syntax="Headers:operator=(__CompilerDefault:)(a)">
			<tagname value="Headers"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:Node:operator=(__CompilerDefault:)" syntax="Node:operator=(__CompilerDefault:)(a)">
			<tagname value="Node"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>__CompilerDefault </paraminfo>
			</param>
		</member>
		<member name="M:@CO_Debug" syntax="@CO_Debug()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_Iter"/>
			<dependency name="@CO_YVers"/>
			<p/>
		</member>
		<member name="M:@CO_Iter" syntax="@CO_Iter()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_SSCANF"/>
			<dependency name="@CO_Debug"/>
		</member>
		<member name="M:@CO_SSCANF" syntax="@CO_SSCANF()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="@CO_Iter"/>
		</member>
		<member name="M:@CO_ScriptInit" syntax="@CO_ScriptInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="@CO_YVers"/>
		</member>
		<member name="M:@CO_YVers" syntax="@CO_YVers()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_Debug"/>
			<dependency name="@CO_ScriptInit"/>
		</member>
		<member name="M:@_yT" syntax="@_yT(addr)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="__cip"/>
			<dependency name="__m1_cell"/>
			<param name="addr">
			</param>
			<library>y_samp_natives</library>  <remarks>  This is a tiny stub function to call other public functions via an address  instead of via a name.  This allows the compiler to skip functions that  aren't used at all.  It does require amx-assembly though.  The prefix  <c>@_yT</c> is used to denote timers in <em>y_timers</em>, so we may as  well reuse it here for the ultimate timer.  I might even rewrite  <em>y_timers</em> to use this timer.  </remarks> 
		</member>
		<member name="M:AMX_CompareHeaderStrings" syntax="AMX_CompareHeaderStrings(s1, s2)">
			<stacksize value="7"/>
			<referrer name="AMX_HeaderTablePartition"/>
			<dependency name="AMX_Read"/>
			<param name="s1">
			</param>
			<param name="s2">
			</param>
			<library>y_amx</library>  <summary>  Compares a string stored in the name table starting at "s1" (packed) with  another string in the name table starting at "s2" (packed).  </summary>  <remarks>  Shamelessly ripped from amx_assembly (but I wrote the original, so...)  </remarks> 
		</member>
		<member name="M:AMX_Deref" syntax="AMX_Deref(addr)">
			<stacksize value="3"/>
			<dependency name="AMX_Deref"/>
			<dependency name="__param1_offset"/>
			<param name="addr">
				A DAT pointer.
			</param>
			<library>y_amx</library>    <returns>  An array whose data is at <c>addr</c>.  Converts a pointer to a pawn usable  array.  </returns> 
		</member>
		<member name="M:AMX_DoNothing" syntax="AMX_DoNothing()">
			<stacksize value="1"/>
			<referrer name="AMX_GetGlobal"/>
			<library>y_amx</library>  <remarks>  A dummy function used to get the address of.  </remarks> 
		</member>
		<member name="M:AMX_DumpHeader" syntax="AMX_DumpHeader()">
			<stacksize value="73"/>
			<dependency name="AMX_GetName"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="FUNCTION_LENGTH"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="strunpack"/>
			<library>y_amx</library>  <remarks>  Print all the names of all the public functions from the AMX header.  There  is now a more complete version of this function in amx_assembly called  <c>PrintAmxHeader</c>.  </remarks> 
		</member>
		<member name="M:AMX_GetBaseCount" syntax="AMX_GetBaseCount(table, &amp;base, &amp;count)">
			<stacksize value="1"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetNativeEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetNativeEntrySuffix"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="AMX_GetNativeNamePrefix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<referrer name="AMX_GetCount"/>
			<referrer name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_TABLE_LIBRARIES"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<dependency name="AMX_TABLE_TAGS"/>
			<dependency name="__defsize_cells"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				The table in the header (publics, tags, etc).
			</param>
			<param name="base">
				<paraminfo> &amp; </paraminfo>
				Return for the start pointer.
			</param>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Return for the count.
			</param>
			<library>y_amx</library>        <remarks>  Get information about one of the tables in the AMX header.  These are  lists of address/name pairs.  The address is one cell long, and points to  where in code/data/vm the corresponding symbol is located.  The name is  <c>defsize - cellbytes</c> long, which may not be exactly one cell (all of  y_amx assumes that this value is known at compile-time, but amx_assembly  more correctly reads it from the header), and points to the start of the  name as a C string in the AMX header's nametable.  This function just gets  where in memory (relative to DAT) the table starts, and how many items  there are in the table.  </remarks> 
		</member>
		<member name="M:AMX_GetCount" syntax="AMX_GetCount(table)">
			<stacksize value="6"/>
			<referrer name="AMX_GetPubvarCount"/>
			<dependency name="AMX_GetBaseCount"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which table to get the size of.
			</param>
			<library>y_amx</library>    <returns>  The number of entries in this table.  </returns> 
		</member>
		<member name="M:AMX_GetEntry" syntax="AMX_GetEntry(table, idx, &amp;buffer, pattern[], exact)">
			<stacksize value="76"/>
			<referrer name="AMX_GetPubvarEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetPointer"/>
			<referrer name="AMX_GetValue"/>
			<referrer name="AMX_GetTagByValue"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadPackedString"/>
			<dependency name="Cell_ReverseBytes"/>
			<dependency name="FUNCTION_LENGTH"/>
			<dependency name="__defsize_cells"/>
			<dependency name="cellbits"/>
			<dependency name="cellbytes"/>
			<dependency name="cellmax"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which sorted table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The return value, with a pointer to a table entry.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				An optional name to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				When true find the pattern exactly, otherwise just include it.
			</param>
			<library>y_amx</library>            <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find one matching the given  name pattern, or just the next one when no pattern is given.  Loop over all  public functions with:  <p/>  <code>  new idx = 0, buffer;                            <br />  while ((idx = AMX_GetPublicEntry(idx, buffer))) <br />  {                                               <br />  }  </code>  <p/>  The <em>entry</em> is a pointer in to the table itself, i.e. address/name  pair relative to <c>DAT</c>.  You should not use this function directly,  but one of the macro wrappers defined for sorted tables:  <p/>  <c>AMX_GetPublicEntry</c>  <c>AMX_GetPubVarEntry</c>  <c>AMX_GetLibraryEntry</c>  <c>AMX_GetTagEntry</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetEntryFromNativeIndex" syntax="AMX_GetEntryFromNativeIndex(index)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="__defsize_cells"/>
			<param name="index">
				The position in the native functions table.
			</param>
			<library>y_amx</library>    <returns>  A pointer to this table entry.  </returns> 
		</member>
		<member name="M:AMX_GetEntryFromPublicIndex" syntax="AMX_GetEntryFromPublicIndex(index)">
			<stacksize value="1"/>
			<referrer name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="__defsize_cells"/>
			<param name="index">
				The position in the public functions table.
			</param>
			<library>y_amx</library>    <returns>  A pointer to this table entry.  </returns> 
		</member>
		<member name="M:AMX_GetEntryPointer" syntax="AMX_GetEntryPointer(tableEntry)">
			<stacksize value="1"/>
			<param name="tableEntry">
				The table entry in the AMX header to use.
			</param>
			<library>y_amx</library>    <returns>  The data pointer in this table (the first cell in the struct).  </returns> 
		</member>
		<member name="M:AMX_GetEntryPrefix" syntax="AMX_GetEntryPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="11"/>
			<referrer name="AMX_GetPubvarEntryPrefix"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetPointerPrefix"/>
			<referrer name="AMX_GetValuePrefix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_Read"/>
			<dependency name="Cell_ReverseBytes"/>
			<dependency name="__defsize_cells"/>
			<dependency name="cellbytes"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which sorted table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The return value, with a pointer to a table entry.
			</param>
			<param name="pattern">
				A prefix to look for.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find one whose name starts  with the given prefix.  Prefixes are four bytes built from the first four  characters in a name.  Prefixes are used extensively for looping over  special function types as they require no string decoding and so can be  compared very quickly.  The <c>_A</c> macro can be used to convert four  characters in to the special format used by <c>pattern</c> (which is really  just the C string as a 32-bit number).  <p/>  <em>y_hooks</em> uses this function to find all of its special hook  functions, which start with the magic four character sequence  <c>"@yH_"</c> (both a prefix for this function, and a public function  declaration as it starts with <c>@</c>), like so:  <p/>  <code>  new idx = 0, buffer;                                                      <br />  while ((idx = AMX_GetPublicEntryPrefix(idx, buffer, _A&lt;@yH_&gt;)))     <br />  {                                                                         <br />  }  </code>  <p/>  The <em>entry</em> is a pointer in to the table itself, i.e. address/name  pair relative to <c>DAT</c>.  You should not use this function directly,  but one of the macro wrappers defined for sorted tables:  <p/>  <c>AMX_GetPublicEntryPrefix</c>  <c>AMX_GetPubVarEntryPrefix</c>  <c>AMX_GetLibraryEntryPrefix</c>  <c>AMX_GetTagEntryPrefix</c>  <p/>  <p/>  Prefixes are widely used in YSI as the names are sorted and so can be  binary searched, the entries point to the start of the names, and once a  prefix is passed there can be no more later (thanks to sorting).  Thus  binary prefix searches are extremely efficient.  </remarks> 
		</member>
		<member name="M:AMX_GetEntrySuffix" syntax="AMX_GetEntrySuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="10"/>
			<referrer name="AMX_GetPubvarEntrySuffix"/>
			<referrer name="AMX_GetPointerSuffix"/>
			<referrer name="AMX_GetValueSuffix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadLength"/>
			<dependency name="__defsize_cells"/>
			<dependency name="cellbits"/>
			<dependency name="cellbytes"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The return value, with a pointer to a table entry.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through any table to look for names ending with the given four  byte suffix.  These suffixes are defined in the same way as the prefixes  used by <c>AMX_GetPublicEntryPrefix</c> et. al, but the scanning is much  harder because the full names must all be read.  Unlike prefix scanning,  suffix scanning is very inefficient.  Returns the table entry.  You should  not use this function directly, but one of the macro wrappers defined for  sorted tables:  <p/>  <c>AMX_GetPublicEntrySuffix</c>  <c>AMX_GetPubVarEntrySuffix</c>  <c>AMX_GetLibraryEntrySuffix</c>  <c>AMX_GetTagEntrySuffix</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetFirstNativeString" syntax="AMX_GetFirstNativeString()">
			<stacksize value="8"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetNativeEntryPrefix"/>
			<referrer name="AMX_GetNativeEntrySuffix"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="AMX_GetNativeNamePrefix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<referrer name="AMX_GetPublicStringSpace"/>
			<referrer name="AMX_GetNativeStringSpace"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_GetEntryFromPublicIndex"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_ReadLength"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="cellbytes"/>
			<library>y_amx</library>  <returns>  The address in the nametable of the first string name referenced by this  table.  Same as <c>AMX_GetFirstString</c>, but specialised for natives as  their pointers may be clobbered in some VM versions.  </returns> 
		</member>
		<member name="M:AMX_GetFirstString" syntax="AMX_GetFirstString(table)">
			<stacksize value="1"/>
			<referrer name="AMX_GetPublicStringSpace"/>
			<referrer name="AMX_GetNativeStringSpace"/>
			<referrer name="AMX_GetLibraryStringSpace"/>
			<referrer name="AMX_GetPubVarStringSpace"/>
			<referrer name="AMX_GetTagStringSpace"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="cellbytes"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which header table to report on.
			</param>
			<library>y_amx</library>    <returns>  The address in the nametable of the first string name referenced by this  table.  Should be called via the table-specific wrappers:  <p/>  <c>AMX_GetFirstPublicString</c>  <c>AMX_GetFirstLibraryString</c>  <c>AMX_GetFirstPubVarString</c>  <c>AMX_GetFirstTagString</c>  </returns> 
		</member>
		<member name="M:AMX_GetGlobal" syntax="AMX_GetGlobal()">
			<stacksize value="4"/>
			<referrer name="ScriptInit_OnCodeInit"/>
			<dependency name="AMX_DoNothing"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="__cip"/>
			<dependency name="__dat"/>
			<dependency name="__m3_cells"/>
			<library>y_amx</library>  <returns>  The address of the AMX in the server.  </returns> 
		</member>
		<member name="M:AMX_GetGlobalAddress" syntax="AMX_GetGlobalAddress(...)">
			<stacksize value="2"/>
			<dependency name="AMX_REAL_DATA"/>
			<dependency name="__args_offset"/>
			<dependency name="__param0_offset"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
			<library>y_amx</library>  <returns>  The passed address, in the server not the AMX.  </returns> 
		</member>
		<member name="M:AMX_GetLengthFromEntry" syntax="AMX_GetLengthFromEntry(tableEntry)">
			<stacksize value="4"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_ReadLength"/>
			<dependency name="cellbytes"/>
			<param name="tableEntry">
				The AMX header table entry to use.
			</param>
			<library>y_amx</library>    <returns>  The length of the name of this entry.  </returns> 
		</member>
		<member name="M:AMX_GetLibraryStringSpace" syntax="AMX_GetLibraryStringSpace()">
			<stacksize value="4"/>
			<dependency name="AMX_GetFirstString"/>
			<dependency name="AMX_TABLE_LIBRARIES"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<library>y_amx</library>  <returns>  The number of bytes used by all library names in the nametable.  </returns> 
		</member>
		<member name="M:AMX_GetName" syntax="AMX_GetName(table, idx, buffer[], pattern[], exact)">
			<stacksize value="9"/>
			<referrer name="AMX_GetPubvarName"/>
			<referrer name="AMX_DumpHeader"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadPackedString"/>
			<dependency name="cellbytes"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which sorted table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> [64] </paraminfo>
				The name return value, as a packed sring.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>            <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find one whose name contains  the given pattern, or all of them when there is no pattern.  Loop over all  the defined player callbacks like so:  <p/>  <code>  new idx = 0, buffer[FUNCTION_LENGTH];                             <br />  while ((idx = AMX_GetPublicName(idx, buffer, "OnPlayer", false))) <br />  {                                                                 <br />  }  </code>  <p/>  You should not use this function directly, but one of the macro wrappers  defined for sorted tables:  <p/>  <c>AMX_GetPublicName</c>  <c>AMX_GetPubVarName</c>  <c>AMX_GetLibraryName</c>  <c>AMX_GetTagName</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetNamePrefix" syntax="AMX_GetNamePrefix(table, idx, buffer[], pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetPubvarNamePrefix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadPackedString"/>
			<dependency name="cellbytes"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which sorted table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> [64] </paraminfo>
				The name return value, as a packed string.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find the next entry matching  the given prefix, and returns the full name of the entry.  You should not  use this function directly, but one of the macro wrappers defined for  sorted tables:  <p/>  <c>AMX_GetPublicNamePrefix</c>  <c>AMX_GetPubVarNamePrefix</c>  <c>AMX_GetLibraryNamePrefix</c>  <c>AMX_GetTagNamePrefix</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetNameSuffix" syntax="AMX_GetNameSuffix()">
			<stacksize value="1"/>
			<referrer name="AMX_GetPubvarNameSuffix"/>
		</member>
		<member name="M:AMX_GetNativeEntry" syntax="AMX_GetNativeEntry(idx, &amp;buffer, pattern[], exact)">
			<stacksize value="75"/>
			<referrer name="AMX_GetNativePointer"/>
			<referrer name="AMX_GetNativeValue"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_NativeNamePointers"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadLength"/>
			<dependency name="AMX_ReadPackedString"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="FUNCTION_LENGTH"/>
			<dependency name="__defsize_cells"/>
			<dependency name="cellbytes"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The return value, with a pointer to a table entry.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				An optional name to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				When true find the pattern exactly, otherwise just include it.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the native table to find one matching the given name  pattern, or just the next one when no pattern is given.  Loop over all  natives with:  <p/>  <code>  new idx = 0, buffer;                            <br />  while ((idx = AMX_GetNativeEntry(idx, buffer))) <br />  {                                               <br />  }  </code>  <p/>  The <em>entry</em> is a pointer in to the table itself, i.e. address/name  pair relative to <c>DAT</c>.  </remarks> 
		</member>
		<member name="M:AMX_GetNativeEntryPrefix" syntax="AMX_GetNativeEntryPrefix(idx, &amp;buffer, pattern)">
			<stacksize value="11"/>
			<referrer name="AMX_GetNativePointerPrefix"/>
			<referrer name="AMX_GetNativeValuePrefix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_NativeNamePointers"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadLength"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="__defsize_cells"/>
			<dependency name="cellbytes"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The return value, with a pointer to a table entry.
			</param>
			<param name="pattern">
				A prefix to look for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given unsorted table to find one whose name starts  with the given prefix.  Prefixes are four bytes built from the first four  characters in a name.  Prefixes are used extensively for looping over  special function types as they require no string decoding and so can be  compared very quickly.  The <c>_A</c> macro can be used to convert four  characters in to the special format used by <c>pattern</c> (which is really  just the C string as a 32-bit number).  <p/>  All the special <c>Func:</c> tags which encode parameter types could be  looped over like so:  <p/>  <code>  new idx = 0, buffer;                                         <br />  while ((idx = AMX_GetTagEntryPrefix(idx, buffer, _A&lt;F@_@&gt;))) <br />  {                                                            <br />  }  </code>  <p/>  The <em>entry</em> is a pointer in to the table itself, i.e. address/name  pair relative to <c>DAT</c>.  </remarks> 
		</member>
		<member name="M:AMX_GetNativeEntrySuffix" syntax="AMX_GetNativeEntrySuffix(idx, &amp;buffer, pattern)">
			<stacksize value="11"/>
			<referrer name="AMX_GetNativePointerSuffix"/>
			<referrer name="AMX_GetNativeValueSuffix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_NativeNamePointers"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadLength"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="__defsize_cells"/>
			<dependency name="cellbits"/>
			<dependency name="cellbytes"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The return value, with a pointer to a table entry.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>  <param name="table">Which table to scan through.</param>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through any table to look for names ending with the given four  byte suffix.  These suffixes are defined in the same way as the prefixes  used by <c>AMX_GetPublicEntryPrefix</c> et. al, but the scanning is much  harder because the full names must all be read.  Unlike prefix scanning,  suffix scanning is very inefficient.  Returns the table entry.  </remarks> 
		</member>
		<member name="M:AMX_GetNativeIndexFromEntry" syntax="AMX_GetNativeIndexFromEntry(tableEntry)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="__defsize_cells"/>
			<param name="tableEntry">
				The AMX header native function entry to use.
			</param>
			<library>y_amx</library>    <returns>  The index (i.e the position in the table) of this native function entry.  </returns> 
		</member>
		<member name="M:AMX_GetNativeName" syntax="AMX_GetNativeName(idx, buffer[], pattern[], exact)">
			<stacksize value="11"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_NativeNamePointers"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadLength"/>
			<dependency name="AMX_ReadPackedString"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="__defsize_cells"/>
			<dependency name="cellbytes"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> [64] </paraminfo>
				The name return value, as a packed sring.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given unsorted table to find one whose name contains  the given pattern, or all of them when there is no pattern.  Loop over all  the defined player callbacks like so:  <p/>  <code>  new idx = 0, buffer[FUNCTION_LENGTH];                             <br />  while ((idx = AMX_GetPublicName(idx, buffer, "OnPlayer", false))) <br />  {                                                                 <br />  }  </code>  </remarks> 
		</member>
		<member name="M:AMX_GetNativeNamePrefix" syntax="AMX_GetNativeNamePrefix(idx, buffer[], pattern)">
			<stacksize value="11"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_NativeNamePointers"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadLength"/>
			<dependency name="AMX_ReadPackedString"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="__defsize_cells"/>
			<dependency name="cellbytes"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> [64] </paraminfo>
				The name return value, as a packed string.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given unsorted table to find the next entry matching  the given prefix, and returns the full name of the entry.  </remarks> 
		</member>
		<member name="M:AMX_GetNativeNameSuffix" syntax="AMX_GetNativeNameSuffix(idx, buffer[], pattern)">
			<stacksize value="11"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_NativeNamePointers"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadLength"/>
			<dependency name="AMX_ReadPackedString"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="__defsize_cells"/>
			<dependency name="cellbits"/>
			<dependency name="cellbytes"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> [64] </paraminfo>
				The name return value, as a packed sring.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>  <param name="table">Which table to scan through.</param>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through any table to look for names ending with the given four  byte suffix.  These suffixes are defined in the same way as the prefixes  used by <c>AMX_GetPublicEntryPrefix</c> et. al, but the scanning is much  harder because the full names must all be read.  Unlike prefix scanning,  suffix scanning is very inefficient.  Returns the full name.  You should  not use this function directly, but one of the macro wrappers defined for  sorted tables:  <p/>  <c>AMX_GetPublicNameSuffix</c>  <c>AMX_GetPubVarNameSuffix</c>  <c>AMX_GetLibraryNameSuffix</c>  <c>AMX_GetTagNameSuffix</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetNativePointer" syntax="AMX_GetNativePointer(idx, &amp;buffer, pattern[], exact)">
			<stacksize value="8"/>
			<dependency name="AMX_GetNativeEntry"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The pointer return value.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given unsorted table to find one whose name includes  or exactly matches the given pattern.  The return value is the pointer from  in the entry, not the entry itself, nor the data the pointer references  (e.g. a funcion).  </remarks> 
		</member>
		<member name="M:AMX_GetNativePointerPrefix" syntax="AMX_GetNativePointerPrefix(idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_GetNativeEntryPrefix"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The pointer return value.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given unsorted table to find the next entry matching  the given prefix, and returns a pointer to the data.  </remarks> 
		</member>
		<member name="M:AMX_GetNativePointerSuffix" syntax="AMX_GetNativePointerSuffix(idx, &amp;buffer, pattern)">
			<stacksize value="7"/>
			<dependency name="AMX_GetNativeEntrySuffix"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data pointer return value.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through any table to look for names ending with the given four  byte suffix.  These suffixes are defined in the same way as the prefixes  used by <c>AMX_GetPublicEntryPrefix</c> et. al, but the scanning is much  harder because the full names must all be read.  Unlike prefix scanning,  suffix scanning is very inefficient.  Returns the data pointer.  </remarks> 
		</member>
		<member name="M:AMX_GetNativeStringSpace" syntax="AMX_GetNativeStringSpace()">
			<stacksize value="4"/>
			<dependency name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_GetFirstString"/>
			<dependency name="AMX_TABLE_LIBRARIES"/>
			<library>y_amx</library>  <returns>  The number of bytes used by all native function names in the nametable.  </returns> 
		</member>
		<member name="M:AMX_GetNativeValue" syntax="AMX_GetNativeValue(idx, &amp;buffer, pattern[], exact)">
			<stacksize value="7"/>
			<dependency name="AMX_GetNativeEntry"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given unsorted table to find one whose name includes  or exactly matches the given pattern.  The return value is the data pointed  to by the entry.  </remarks> 
		</member>
		<member name="M:AMX_GetNativeValuePrefix" syntax="AMX_GetNativeValuePrefix(idx, &amp;buffer, pattern)">
			<stacksize value="6"/>
			<dependency name="AMX_GetNativeEntryPrefix"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>  <param name="table">Which unsorted table to scan through.</param>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given unsorted table to find the next entry matching  the given prefix, and returns the data pointed to by that entry.  </remarks> 
		</member>
		<member name="M:AMX_GetNativeValueSuffix" syntax="AMX_GetNativeValueSuffix(idx, &amp;buffer, pattern)">
			<stacksize value="6"/>
			<dependency name="AMX_GetNativeEntrySuffix"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>  <param name="table">Which table to scan through.</param>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through any table to look for names ending with the given four  byte suffix.  These suffixes are defined in the same way as the prefixes  used by <c>AMX_GetPublicEntryPrefix</c> et. al, but the scanning is much  harder because the full names must all be read.  Unlike prefix scanning,  suffix scanning is very inefficient.  Returns data from the data pointer.  </remarks> 
		</member>
		<member name="M:AMX_GetPointer" syntax="AMX_GetPointer(table, idx, &amp;buffer, pattern[], exact)">
			<stacksize value="9"/>
			<referrer name="AMX_GetPubvarPointer"/>
			<dependency name="AMX_GetEntry"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which sorted table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The pointer return value.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>            <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find one whose name includes  or exactly matches the given pattern.  The return value is the pointer from  in the entry, not the entry itself, nor the data the pointer references  (e.g. a funcion).  You should not use this function directly, but one of  the macro wrappers defined for sorted tables:  <p/>  <c>AMX_GetPublicPointer</c>  <c>AMX_GetPubVarPointer</c>  <c>AMX_GetLibraryPointer</c>  <c>AMX_GetTagPointer</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetPointerBinary" syntax="AMX_GetPointerBinary()">
			<stacksize value="1"/>
			<referrer name="AMX_GetPubVarValue"/>
		</member>
		<member name="M:AMX_GetPointerPrefix" syntax="AMX_GetPointerPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetPubvarPointerPrefix"/>
			<referrer name="ScriptInit_CodeInitFuncs_"/>
			<referrer name="ScriptInit_MainInitFuncs_"/>
			<referrer name="ScriptInit_PreInitFuncs_"/>
			<referrer name="ScriptInit_PostInitFuncs_"/>
			<referrer name="ScriptInit_PreExitFuncs_"/>
			<referrer name="ScriptInit_PostExitFuncs_"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which sorted table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The pointer return value.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find the next entry matching  the given prefix, and returns a pointer to the data.  You should not use  this function directly, but one of the macro wrappers defined for sorted  tables:  <p/>  <c>AMX_GetPublicPointerPrefix</c>  <c>AMX_GetPubVarPointerPrefix</c>  <c>AMX_GetLibraryPointerPrefix</c>  <c>AMX_GetTagPointerPrefix</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetPointerPrefixBinary" syntax="AMX_GetPointerPrefixBinary()">
			<stacksize value="1"/>
			<referrer name="AMX_GetPubVarValuePrefix"/>
		</member>
		<member name="M:AMX_GetPointerSuffix" syntax="AMX_GetPointerSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetPubvarPointerSuffix"/>
			<referrer name="AMX_GetPubVarValueSuffix"/>
			<dependency name="AMX_GetEntrySuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data pointer return value.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through any table to look for names ending with the given four  byte suffix.  These suffixes are defined in the same way as the prefixes  used by <c>AMX_GetPublicEntryPrefix</c> et. al, but the scanning is much  harder because the full names must all be read.  Unlike prefix scanning,  suffix scanning is very inefficient.  Returns the data pointer.  You should  not use this function directly, but one of the macro wrappers defined for  sorted tables:  <p/>  <c>AMX_GetPublicPointerSuffix</c>  <c>AMX_GetPubVarPointerSuffix</c>  <c>AMX_GetLibraryPointerSuffix</c>  <c>AMX_GetTagPointerSuffix</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetPubVarStringSpace" syntax="AMX_GetPubVarStringSpace()">
			<stacksize value="4"/>
			<dependency name="AMX_GetFirstString"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<dependency name="AMX_TABLE_TAGS"/>
			<library>y_amx</library>  <returns>  The number of bytes used by all public variable names in the nametable.  </returns> 
		</member>
		<member name="M:AMX_GetPubVarValue" syntax="AMX_GetPubVarValue(idx, &amp;buffer, pattern[], exact)">
			<stacksize value="9"/>
			<referrer name="AMX_GetPubvarValue"/>
			<dependency name="AMX_GetPointerBinary"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find one whose name includes  or exactly matches the given pattern.  The return value is the data pointed  to by the entry.  </remarks> 
		</member>
		<member name="M:AMX_GetPubVarValuePrefix" syntax="AMX_GetPubVarValuePrefix(idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetPubvarValuePrefix"/>
			<dependency name="AMX_GetPointerPrefixBinary"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find the next entry matching  the given prefix, and returns the data pointed to by that entry.  </remarks> 
		</member>
		<member name="M:AMX_GetPubVarValueSuffix" syntax="AMX_GetPubVarValueSuffix(idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetPubvarValueSuffix"/>
			<dependency name="AMX_GetPointerSuffix"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>  <param name="table">Which table to scan through.</param>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through any table to look for names ending with the given four  byte suffix.  These suffixes are defined in the same way as the prefixes  used by <c>AMX_GetPublicEntryPrefix</c> et. al, but the scanning is much  harder because the full names must all be read.  Unlike prefix scanning,  suffix scanning is very inefficient.  Returns data from the data pointer.  </remarks> 
		</member>
		<member name="M:AMX_GetPublicIndexFromEntry" syntax="AMX_GetPublicIndexFromEntry(tableEntry)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="__defsize_cells"/>
			<param name="tableEntry">
				The AMX header public function entry to use.
			</param>
			<library>y_amx</library>    <returns>  The index (i.e the position in the table) of this public function entry.  </returns>  <remarks>  The value returned corresponds to the return value of <c>funcidx</c>.  </remarks> 
		</member>
		<member name="M:AMX_GetPublicStringSpace" syntax="AMX_GetPublicStringSpace()">
			<stacksize value="4"/>
			<dependency name="AMX_GetFirstNativeString"/>
			<dependency name="AMX_GetFirstString"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<library>y_amx</library>  <returns>  The number of bytes used by all public function names in the nametable.  </returns> 
		</member>
		<member name="M:AMX_GetPubvarCount" syntax="AMX_GetPubvarCount()">
			<stacksize value="4"/>
			<dependency name="AMX_GetCount"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<library>y_amx</library>  <returns>  The number of entries in this table.  </returns> 
		</member>
		<member name="M:AMX_GetPubvarEntry" syntax="AMX_GetPubvarEntry(idx, &amp;buffer, pattern[], exact)">
			<stacksize value="8"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The return value, with a pointer to a table entry.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				An optional name to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				When true find the pattern exactly, otherwise just include it.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the public variables table to find one matching the  given name pattern, or just the next one when no pattern is given.  Loop  over all public variables with:  <p/>  <code>  new idx = 0, buffer;                            <br />  while ((idx = AMX_GetPubvarEntry(idx, buffer))) <br />  {                                               <br />  }  </code>  <p/>  The <em>entry</em> is a pointer in to the table itself, i.e. address/name  pair relative to <c>DAT</c>.  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarEntryPrefix" syntax="AMX_GetPubvarEntryPrefix(idx, &amp;buffer, pattern)">
			<stacksize value="7"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The return value, with a pointer to a table entry.
			</param>
			<param name="pattern">
				A prefix to look for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the public variables table to find one whose name starts  with the given prefix.  Prefixes are four bytes built from the first four  characters in a name.  Prefixes are used extensively for looping over  special function types as they require no string decoding and so can be  compared very quickly.  The <c>_A</c> macro can be used to convert four  characters in to the special format used by <c>pattern</c> (which is really  just the C string as a 32-bit number).  <p/>  To loop over all public variables that start with <c>"var_"</c>:  <p/>  <code>  new idx = 0, buffer;                                                      <br />  while ((idx = AMX_GetPubvarEntryPrefix(idx, buffer, _A&lt;var_&gt;)))     <br />  {                                                                         <br />  }  </code>  <p/>  The <em>entry</em> is a pointer in to the table itself, i.e. address/name  pair relative to <c>DAT</c>.  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarEntrySuffix" syntax="AMX_GetPubvarEntrySuffix(idx, &amp;buffer, pattern)">
			<stacksize value="7"/>
			<dependency name="AMX_GetEntrySuffix"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The return value, with a pointer to a table entry.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <em>AMX_GetEntrySuffix</em>.  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarName" syntax="AMX_GetPubvarName(idx, buffer[], pattern[], exact)">
			<stacksize value="8"/>
			<dependency name="AMX_GetName"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> [64] </paraminfo>
				The name return value, as a packed sring.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <em>AMX_GetName</em>.  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarNamePrefix" syntax="AMX_GetPubvarNamePrefix(idx, buffer[], pattern)">
			<stacksize value="7"/>
			<dependency name="AMX_GetNamePrefix"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> [64] </paraminfo>
				The name return value, as a packed string.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>  <param name="table">Which sorted table to scan through.</param>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <c>AMX_GetNamePrefix</c>  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarNameSuffix" syntax="AMX_GetPubvarNameSuffix(idx, buffer[], pattern)">
			<stacksize value="7"/>
			<dependency name="AMX_GetNameSuffix"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> [64] </paraminfo>
				The name return value, as a packed sring.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <em>AMX_GetNameSuffix</em>.  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarPointer" syntax="AMX_GetPubvarPointer(idx, &amp;buffer, pattern[], exact)">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointer"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The pointer return value.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>  <param name="table">Which unsorted table to scan through.</param>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <c>AMX_GetPointer</c>.  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarPointerPrefix" syntax="AMX_GetPubvarPointerPrefix(idx, &amp;buffer, pattern)">
			<stacksize value="7"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The pointer return value.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>  <param name="table">Which unsorted table to scan through.</param>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <c>AMX_GetPointerPrefix</c>  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarPointerSuffix" syntax="AMX_GetPubvarPointerSuffix(idx, &amp;buffer, pattern)">
			<stacksize value="7"/>
			<dependency name="AMX_GetPointerSuffix"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data pointer return value.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <em>AMX_GetPointerSuffix</em>.  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarValue" syntax="AMX_GetPubvarValue(idx, &amp;buffer, pattern[], exact)">
			<stacksize value="7"/>
			<dependency name="AMX_GetPubVarValue"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>  <param name="table">Which sorted table to scan through.</param>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <c>AMX_GetValue</c>.  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarValuePrefix" syntax="AMX_GetPubvarValuePrefix(idx, &amp;buffer, pattern)">
			<stacksize value="6"/>
			<dependency name="AMX_GetPubVarValuePrefix"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <c>AMX_GetValuePrefix</c>.  </remarks> 
		</member>
		<member name="M:AMX_GetPubvarValueSuffix" syntax="AMX_GetPubvarValueSuffix(idx, &amp;buffer, pattern)">
			<stacksize value="6"/>
			<dependency name="AMX_GetPubVarValueSuffix"/>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>        <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  See <em>AMX_GetPubVarValueSuffix</em>.  </remarks> 
		</member>
		<member name="M:AMX_GetRelativeAddress" syntax="AMX_GetRelativeAddress(...)">
			<stacksize value="2"/>
			<dependency name="__args_offset"/>
			<dependency name="__param0_offset"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
			<library>y_amx</library>  <returns>  The passed address in the AMX.  </returns> 
		</member>
		<member name="M:AMX_GetStringFromEntry" syntax="AMX_GetStringFromEntry(tableEntry, str[], size)">
			<stacksize value="6"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadPackedString"/>
			<dependency name="cellbytes"/>
			<param name="tableEntry">
				The header entry that has a name pointer.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The destination array.
			</param>
			<param name="size">
				The size of the destination array.
			</param>
			<library>y_amx</library>        <returns>  </returns>  <remarks>  Copies a C string in AMX memory out to a packed string.  The pointer does  not point straight to the string, but instead points to a header  <em>entry</em>, i.e. part of a table with a data pointer and a name  pointer.  This thus abstracts the weirdness of the size of the name  pointer, which may not be a whole cell.  There is no unpacked equivalent.  </remarks> 
		</member>
		<member name="M:AMX_GetTagByValue" syntax="AMX_GetTagByValue(tag, name[], len)">
			<stacksize value="11"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadPackedString"/>
			<dependency name="AMX_TABLE_TAGS"/>
			<dependency name="cellbytes"/>
			<dependency name="strunpack"/>
			<param name="tag">
				The tag value to look up (e.g. from <c>tagof</c>).
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The destination for the name.
			</param>
			<param name="len">
				The destination size.
			</param>
			<library>y_amx</library>        <remarks>  Get the original string (code) name of a tag from its ID.  </remarks> 
		</member>
		<member name="M:AMX_GetTagStringSpace" syntax="AMX_GetTagStringSpace()">
			<stacksize value="4"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetFirstString"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_TABLE_TAGS"/>
			<library>y_amx</library>  <returns>  The number of bytes used by all tag names in the nametable.  </returns> 
		</member>
		<member name="M:AMX_GetValue" syntax="AMX_GetValue(table, idx, &amp;buffer, pattern[], exact)">
			<stacksize value="8"/>
			<dependency name="AMX_GetEntry"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which sorted table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				A prefix to look for.
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
				True to match the pattern exactly, false for contains.
			</param>
			<library>y_amx</library>            <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find one whose name includes  or exactly matches the given pattern.  The return value is the data pointed  to by the entry.  You should not use this function directly, but one of the  macro wrappers defined for sorted tables:  <p/>  <c>AMX_GetPublicValue</c>  <c>AMX_GetLibraryValue</c>  <c>AMX_GetTagValue</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetValuePrefix" syntax="AMX_GetValuePrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="7"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which sorted table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				A prefix to scan for.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through the given sorted table to find the next entry matching  the given prefix, and returns the data pointed to by that entry.  You  should not use this function directly, but one of the macro wrappers  defined for sorted tables:  <p/>  <c>AMX_GetPublicValuePrefix</c>  <c>AMX_GetLibraryValuePrefix</c>  <c>AMX_GetTagValuePrefix</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_GetValueSuffix" syntax="AMX_GetValueSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="7"/>
			<dependency name="AMX_GetEntrySuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
				Which table to scan through.
			</param>
			<param name="idx">
				When iterating, the offset to start at.
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
				The data return value.
			</param>
			<param name="pattern">
				A suffix to look for.
			</param>
			<library>y_amx</library>          <returns>  The next index (<c>idx</c>) to continue scanning from, or <c>0</c>.  </returns>  <remarks>  This scans through any table to look for names ending with the given four  byte suffix.  These suffixes are defined in the same way as the prefixes  used by <c>AMX_GetPublicEntryPrefix</c> et. al, but the scanning is much  harder because the full names must all be read.  Unlike prefix scanning,  suffix scanning is very inefficient.  Returns data from the data pointer.  You should not use this function directly, but one of the macro wrappers  defined for sorted tables:  <p/>  <c>AMX_GetPublicValueSuffix</c>  <c>AMX_GetLibraryValueSuffix</c>  <c>AMX_GetTagValueSuffix</c>  <p/>  </remarks> 
		</member>
		<member name="M:AMX_HeaderTablePartition" syntax="AMX_HeaderTablePartition(low, high, dat, defsize)">
			<stacksize value="7"/>
			<referrer name="AMX_HeaderTableQuickSort"/>
			<dependency name="AMX_CompareHeaderStrings"/>
			<dependency name="AMX_HeaderTableSwap"/>
			<dependency name="AMX_Read"/>
			<dependency name="cellbytes"/>
			<param name="low">
			</param>
			<param name="high">
			</param>
			<param name="dat">
			</param>
			<param name="defsize">
			</param>
			<library>y_amx</library>  <summary>  The partition operation for a quicksort.  </summary>  <remarks>  Shamelessly ripped from amx_assembly (but I wrote the original, so...)  </remarks> 
		</member>
		<member name="M:AMX_HeaderTableQuickSort" syntax="AMX_HeaderTableQuickSort(low, high, dat, defsize)">
			<stacksize value="8"/>
			<referrer name="AMX_HeaderTableQuickSort"/>
			<referrer name="ScriptInit_OnCodeInit"/>
			<dependency name="AMX_HeaderTablePartition"/>
			<param name="low">
			</param>
			<param name="high">
			</param>
			<param name="dat">
			</param>
			<param name="defsize">
			</param>
			<library>y_amx</library>  <summary>  Sort a list of names in the AMX header.  </summary>  <remarks>  Shamelessly ripped from amx_assembly (but I wrote the original, so...)  </remarks> 
		</member>
		<member name="M:AMX_HeaderTableSwap" syntax="AMX_HeaderTableSwap(addr0, addr1)">
			<stacksize value="7"/>
			<referrer name="AMX_HeaderTablePartition"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="cellbits"/>
			<dependency name="cellbytes"/>
			<param name="addr0">
			</param>
			<param name="addr1">
			</param>
			<library>y_amx</library>  <summary>  Swap two pointers in the header.  Pointers are always 32-bit, regardless of  cell size, so this may require some bit manipulation.  </summary>  <remarks>  Shamelessly ripped from amx_assembly (but I wrote the original, so...)  </remarks> 
		</member>
		<member name="M:AMX_NativeNamePointers" syntax="AMX_NativeNamePointers()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetNativeEntryPrefix"/>
			<referrer name="AMX_GetNativeEntrySuffix"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="AMX_GetNativeNamePrefix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<dependency name="__flg"/>
			<dependency name="true"/>
			<library>y_amx</library>  <returns>  Check that we can use direct offsets to native names.  </returns> <p/> <library>y_amx</library>  <returns>  Check that we can use direct offsets to native names.  </returns> 
		</member>
		<member name="M:AMX_OnCodeInit" syntax="AMX_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_g_sStack"/>
			<dependency name="YSI_g_sStackPtr"/>
			<remarks>  </remarks> 
		</member>
		<member name="M:AMX_Read" syntax="AMX_Read(addr)">
			<stacksize value="1"/>
			<referrer name="Debug_IsStringLike"/>
			<referrer name="AMX_HeaderTableSwap"/>
			<referrer name="AMX_HeaderTablePartition"/>
			<referrer name="AMX_CompareHeaderStrings"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_TraceMemory"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetNativeEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetNativeEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNativeNamePrefix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<referrer name="AMX_GetStringFromEntry"/>
			<referrer name="AMX_WritePackedString"/>
			<referrer name="AMX_WriteUnpackedString"/>
			<referrer name="AMX_GetTagByValue"/>
			<param name="addr">
				Where to read the data from (relative to DAT).
			</param>
			<library>y_amx</library>    <returns>  The data at this address.  </returns>  <remarks>  Read some data from any arbitrary location in the AMX, bypassing the  DAT-only restriction.    </remarks> 
		</member>
		<member name="M:AMX_ReadArray" syntax="AMX_ReadArray(addr, dest[], len)">
			<stacksize value="1"/>
			<dependency name="__1_cell"/>
			<param name="addr">
				Data source address.
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Where to copy the data to.
			</param>
			<param name="len">
				Amount of data to copy.
			</param>
			<library>y_amx</library>        <remarks>  Read data out of a memory location, which may be outside the bounds of DAT.  </remarks> 
		</member>
		<member name="M:AMX_ReadLength" syntax="AMX_ReadLength(addr)">
			<stacksize value="6"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetNativeEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetNativeEntrySuffix"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="AMX_GetNativeNamePrefix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<referrer name="AMX_GetLengthFromEntry"/>
			<referrer name="AMX_GetFirstNativeString"/>
			<dependency name="Cell_HasZeroByte"/>
			<dependency name="cellbits"/>
			<dependency name="cellbytes"/>
			<param name="addr">
				Pointer to a C string.
			</param>
			<library>y_amx</library>    <returns>  The length of the string.  </returns>  <remarks>  Operates on C strings, as found in the header, not pawn packed strings,  which have their bytes reversed in a cell.  </remarks> 
		</member>
		<member name="M:AMX_ReadPackedString" syntax="AMX_ReadPackedString(addr, str[], len)">
			<stacksize value="6"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNativeNamePrefix"/>
			<referrer name="AMX_GetNativeNameSuffix"/>
			<referrer name="AMX_GetStringFromEntry"/>
			<referrer name="AMX_ReadString"/>
			<referrer name="AMX_GetTagByValue"/>
			<dependency name="Cell_HasZeroByte"/>
			<dependency name="cellbytes"/>
			<dependency name="swapchars"/>
			<param name="addr">
				Where in DAT to read the string from.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The destination array.
			</param>
			<param name="len">
				The size of the destination array.
			</param>
			<library>y_amx</library>        <returns>  </returns>  <remarks>  Copies a C string in AMX memory out to a packed string.  Mainly used to  read function names from the header, as they are not in pawn order.  Uses a  clever trick to detect <c>NULL</c> in four bytes at once.  </remarks> 
		</member>
		<member name="M:AMX_ReadString" syntax="AMX_ReadString(addr, str[], len)">
			<stacksize value="6"/>
			<dependency name="AMX_ReadPackedString"/>
			<param name="addr">
				Where in DAT to read the string from.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The destination array.
			</param>
			<param name="len">
				The size of the destination array.
			</param>
			<library>y_amx</library>        <returns>  </returns>  <remarks>  Copies a C string in AMX memory out to a packed string.  Mainly used to  read function names from the header, as they are not in pawn order.  Uses a  clever trick to detect <c>NULL</c> in four bytes at once.  Deprecated name.  </remarks> 
		</member>
		<member name="M:AMX_ReadUnpackedString" syntax="AMX_ReadUnpackedString(addr, str[], len)">
			<stacksize value="3"/>
			<dependency name="cellbits"/>
			<dependency name="cellbytes"/>
			<param name="addr">
				Where in DAT to read the string from.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The destination array.
			</param>
			<param name="len">
				The size of the destination array.
			</param>
			<library>y_amx</library>        <returns>  </returns>  <remarks>  Copies a C string in AMX memory out to an unpacked string.  Mainly used to  read function names from the header, as they are not in pawn order.  </remarks> 
		</member>
		<member name="M:AMX_Ref" syntax="AMX_Ref(&amp;addr)">
			<stacksize value="1"/>
			<param name="addr">
				<paraminfo> &amp; </paraminfo>
				A variable that you want to get the address of.
			</param>
			<library>y_amx</library>    <returns>  The address of the given parameter.  </returns>  <remarks>  This is the old function version in case the compiler being used doesn't  have inline assembly.  </remarks> 
		</member>
		<member name="M:AMX_TraceCode" syntax="AMX_TraceCode(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="6"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_Read"/>
			<dependency name="cellbytes"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				The pattern to scan for in code.
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
				The return for the address.
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
				The return for the parameter.
			</param>
			<param name="size">
				The size of the pattern.
			</param>
			<library>y_amx</library>          <remarks>  An extremely poor-mans version of codescan.  Just takes a pure array of  opcodes and searches for it in memory.  No data wildcards, no stack  tracing, no opcode value lookup, etc.  Returns the next cell after the end  of a found pattern as if it were an opcode parameter.  </remarks> 
		</member>
		<member name="M:AMX_TraceMemory" syntax="AMX_TraceMemory(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="6"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_HEA"/>
			<dependency name="AMX_Read"/>
			<dependency name="cellbytes"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
				The pattern to scan for in data.
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
				The return for the address.
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
				The return for the parameter.
			</param>
			<param name="size">
				The size of the pattern.
			</param>
			<library>y_amx</library>          <remarks>  Search for the given pattern in the data segment.  Return the address of  the match and the data immediately following the match.  </remarks> 
		</member>
		<member name="M:AMX_Write" syntax="AMX_Write(addr, value)">
			<stacksize value="1"/>
			<referrer name="AMX_HeaderTableSwap"/>
			<referrer name="AMX_WritePackedString"/>
			<referrer name="AMX_WriteUnpackedString"/>
			<param name="addr">
				Where to write the data (relative to DAT).
			</param>
			<param name="value">
				What to write.
			</param>
			<library>y_amx</library>      <remarks>  Writes some data to any arbitrary location in the AMX, bypassing the  DAT-only restriction.  This is the old function version in case the  compiler being used doesn't have inline assembly.  </remarks> 
		</member>
		<member name="M:AMX_WriteArray" syntax="AMX_WriteArray(addr, src[], len)">
			<stacksize value="1"/>
			<dependency name="__1_cell"/>
			<param name="addr">
				Where to copy the data to.
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
				Data source.
			</param>
			<param name="len">
				Amount of data to copy.
			</param>
			<library>y_amx</library>        <remarks>  Write data to a memory location, which may be outside the bounds of DAT.  </remarks> 
		</member>
		<member name="M:AMX_WritePackedString" syntax="AMX_WritePackedString(addr, str[])">
			<stacksize value="8"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<param name="addr">
				Where in DAT to write the string to.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The packed string to write.
			</param>
			<library>y_amx</library>      <returns>  </returns>  <remarks>  Copies a packed string in to AMX memory, as a C string.  Mainly used to  write function names in to the header, as they are not in pawn order.  </remarks> 
		</member>
		<member name="M:AMX_WriteString" syntax="AMX_WriteString(addr, str[], len)">
			<stacksize value="5"/>
			<dependency name="cellbytes"/>
			<dependency name="swapchars"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_WriteUnpackedString" syntax="AMX_WriteUnpackedString(addr, str[])">
			<stacksize value="8"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<param name="addr">
				Where in DAT to write the string to.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The unpacked string to write.
			</param>
			<library>y_amx</library>      <returns>  </returns>  <remarks>  Copies an unpacked string in to AMX memory, as a C string.  Mainly used to  write function names in to the header, as they are not in pawn order.  </remarks> 
		</member>
		<member name="M:Abs" syntax="Abs(number)">
			<stacksize value="1"/>
			<dependency name="y_utils_abs_shift"/>
			<param name="number">
				The number to get the absolute value of.
			</param>
			<library>y_utils - maths</library>  <summary>  Abs(number);  </summary>    <returns>  The absolute value of a number.  </returns>  <remarks>  Get the absolute value of a number.  </remarks> 
		</member>
		<member name="M:AddCP" syntax="AddCP(playerid)">
			<stacksize value="15"/>
			<referrer name="cmd_cp"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="BCPs"/>
			<dependency name="BCPs"/>
			<dependency name="BCPsize"/>
			<dependency name="BCPsize"/>
			<dependency name="BCurrentCP"/>
			<dependency name="BInterior"/>
			<dependency name="BTotalCPs"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerRaceCheckpoint"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AddDrift" syntax="AddDrift(pname[], dname[], x, y, z, ang)">
			<stacksize value="12"/>
			<referrer name="cmd_adddrift"/>
			<dependency name="SQL"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="pname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="dname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ang">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AddLineToFile" syntax="AddLineToFile(file[], str[])">
			<stacksize value="136"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="fclose"/>
			<dependency name="fcreate"/>
			<dependency name="fexist"/>
			<dependency name="formatex"/>
			<dependency name="fwrite"/>
			<dependency name="io_append"/>
			<param name="file">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AddNeon" syntax="AddNeon(playerid, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AttachObjectToVehicle"/>
			<dependency name="CreateObject"/>
			<dependency name="DestroyObject"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="cNeon"/>
			<dependency name="isNeonON"/>
			<dependency name="neons"/>
			<dependency name="neons"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:AddPlayerBan" syntax="AddPlayerBan(playerid, reason[], adminname[])">
			<stacksize value="26"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="PGodTimer"/>
			<referrer name="OnPlayerFloodControl"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="Login"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="cmd_ban"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="SQL"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="adminname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AddPlayerClass" syntax="AddPlayerClass(skin, spawnX, spawnY, spawnZ, angle, weapon1, ammo1, weapon2, ammo2, weapon3, ammo3)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="skin">
				The <a href="https://open.mp/docs/scripting/resources/skins">skin</a> which the player  will  spawn with
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate of the spawnpoint of this class
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate of the spawnpoint of this class
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate of the spawnpoint of this class
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The direction in which the player should face after spawning
			</param>
			<param name="weapon1">
				<paraminfo>t_WEAPON </paraminfo>
				The first spawn-<a href="https://open.mp/docs/scripting/resources/weaponids">weapon</a>  for  the player
			</param>
			<param name="ammo1">
				The amount of ammunition for the primary spawn weapon
			</param>
			<param name="weapon2">
				<paraminfo>t_WEAPON </paraminfo>
				The second spawn-<a href="https://open.mp/docs/scripting/resources/weaponids">weapon</a>  for  the player
			</param>
			<param name="ammo2">
				The amount of ammunition for the second spawn weapon
			</param>
			<param name="weapon3">
				<paraminfo>t_WEAPON </paraminfo>
				The third spawn-<a href="https://open.mp/docs/scripting/resources/weaponids">weapon</a>  for  the player
			</param>
			<param name="ammo3">
				The amount of ammunition for the third spawn weapon
			</param>
			<library>omp_class</library>  <summary>Adds a class to class selection.  Classes are used so players may spawn with a skin of their  choice.</summary>                        <returns>  <ul>  <li>The <b>ID of the class</b> which was just added.</li>  <li><b><c>319</c></b> if the class limit (<b><c>320</c></b>) was reached.  The highest possible  class ID is <b><c>319</c></b>.</li>  </ul>  </returns>  <remarks>  The maximum class ID is <b><c>319</c></b> (starting from <b><c>0</c></b>, so a total of <b><c>320</c></b>  classes).  When this limit is reached, any more classes that are added will replace ID <b><c>319</c></b>.  </remarks>  <seealso name="AddPlayerClassEx" />  <seealso name="SetSpawnInfo" />  <seealso name="SetPlayerSkin" /> 
		</member>
		<member name="M:AddProperty" syntax="AddProperty(name[], Value, Earn, x, y, z)">
			<stacksize value="618"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_addprop"/>
			<referrer name="ConvertProperties"/>
			<dependency name="Buyable"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="PickupNr"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropName"/>
			<dependency name="PropOwner"/>
			<dependency name="PropUnbuyableTime"/>
			<dependency name="PropValue"/>
			<dependency name="PropX"/>
			<dependency name="PropY"/>
			<dependency name="PropZ"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="SQL"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="Value">
			</param>
			<param name="Earn">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AddProxy" syntax="AddProxy(ip[], name[])">
			<stacksize value="10"/>
			<dependency name="SQL"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AddStaticVehicle" syntax="AddStaticVehicle(modelid, spawnX, spawnY, spawnZ, angle, colour1, colour2)">
			<attribute name="native"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<param name="modelid">
				The <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">Model ID</a> for the  vehicle
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate of the spawnpoint of this vehicle
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate of the spawnpoint of this vehicle
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate of the spawnpoint of this vehicle
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				Direction of vehicle - angle
			</param>
			<param name="colour1">
				The primary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>. <b><c>-1</c></b>  for random (random colour chosen by client)
			</param>
			<param name="colour2">
				The secondary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>.  <b><c>-1</c></b> for random (random colour chosen by client)
			</param>
			<library>omp_vehicle</library>  <summary>Adds a 'static' vehicle (models are pre-loaded for players) to the gamemode.</summary>                <returns>  <ul>  <li>The vehicle ID of the vehicle created (between <b><c>1</c></b> and <b><c>MAX_VEHICLES</c></b>).</li>  <li><b><c>INVALID_VEHICLE_ID</c></b> (<b><c>65535</c></b>) if vehicle was not created (vehicle  limit reached or invalid vehicle model ID passed).</li>  </ul>  </returns>  <remarks>Can only be used when the server first starts (under <a href="#OnGameModeInit">OnGameModeInit</a>).</remarks>  <seealso name="AddStaticVehicleEx" />  <seealso name="CreateVehicle" />  <seealso name="DestroyVehicle" /> 
		</member>
		<member name="M:AddStaticVehicleEx" syntax="AddStaticVehicleEx(modelid, spawnX, spawnY, spawnZ, angle, colour1, colour2, respawnDelay, addSiren)">
			<attribute name="native"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<param name="modelid">
				The <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">Model ID</a> for the  vehicle
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate of the spawnpoint of this vehicle
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate of the spawnpoint of this vehicle
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate of the spawnpoint of this vehicle
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				Direction of vehicle - angle
			</param>
			<param name="colour1">
				The primary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>. <b><c>-1</c></b>  for random (random colour chosen by client)
			</param>
			<param name="colour2">
				The secondary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>.  <b><c>-1</c></b> for random (random colour chosen by client)
			</param>
			<param name="respawnDelay">
				The delay until the car is respawned without a driver, in seconds
			</param>
			<param name="addSiren">
				<paraminfo>bool </paraminfo>
				<b>Added in 0.3.7; will not work in earlier versions.</b> Enables the vehicle  to have a siren, providing the vehicle has a horn (optional=<b><c>0</c></b>)
			</param>
			<library>omp_vehicle</library>  <summary>Adds a 'static' vehicle (models are pre-loaded for players)to the gamemode.  Differs from  <a href="#AddStaticVehicle">AddStaticVehicle</a> in only one way: allows a respawn time to be set  for when the vehicle is left unoccupied by the driver.</summary>                    <returns>  <ul>  <li>The vehicle ID of the vehicle created (between <b><c>1</c></b> and <b><c>MAX_VEHICLES</c></b>).</li>  <li><b><c>INVALID_VEHICLE_ID</c></b> (<b><c>65535</c></b>) if vehicle was not created (vehicle  limit reached or invalid vehicle model ID passed).</li>  </ul>  </returns>  <remarks>Can only be used when the server first starts (under <a href="#OnGameModeInit">OnGameModeInit</a>).</remarks>  <seealso name="AddStaticVehicle" />  <seealso name="CreateVehicle" />  <seealso name="DestroyVehicle" /> 
		</member>
		<member name="M:AddToLogFile" syntax="AddToLogFile(file[], str[])">
			<stacksize value="143"/>
			<dependency name="CreateLog"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="formatex"/>
			<dependency name="fwrite"/>
			<dependency name="io_append"/>
			<param name="file">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AddVehicleComponent" syntax="AddVehicleComponent(vehicleid, component)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_nos"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_offroad"/>
			<referrer name="cmd_xroof"/>
			<referrer name="cmd_mega"/>
			<referrer name="cmd_virtualwheels"/>
			<referrer name="cmd_dollar"/>
			<referrer name="cmd_shadow"/>
			<referrer name="cmd_atomic"/>
			<referrer name="cmd_twist"/>
			<referrer name="cmd_cutter"/>
			<referrer name="cmd_rims"/>
			<referrer name="cmd_classic"/>
			<referrer name="cmd_switchwheels"/>
			<referrer name="cmd_import"/>
			<referrer name="cmd_trance"/>
			<referrer name="cmd_hy"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="_B@Action"/>
			<param name="vehicleid">
				The ID of the vehicle to add the component to.  Not to be confused with <a  href="http://wiki.sa-mp.com/wiki/Confuse_modelid">modelid</a>
			</param>
			<param name="component">
				The <a href="http://wiki.sa-mp.com/wiki/Car_Component_ID">ID of the component</a>  to add to the vehicle
			</param>
			<library>omp_vehicle</library>  <summary>Adds a 'component' (often referred to as a 'mod' (modification)) to a vehicle.  Valid components  can be found <a href="http://wiki.sa-mp.com/wiki/Car_Component_ID">here</a>.</summary>      <returns>  <ul>  <li><b><c>0</c></b> - The component was not added because the vehicle does not exist.</li>  <li><b><c>1</c></b> - The component was successfully added to the vehicle.</li>  </ul>  </returns>  <remarks>Using an invalid <a href="http://wiki.sa-mp.com/wiki/Car_Component_ID">component ID</a>  crashes the player's game.  There are no internal checks for this.</remarks>  <seealso name="RemoveVehicleComponent" />  <seealso name="GetVehicleComponentInSlot" />  <seealso name="GetVehicleComponentType" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" /> 
		</member>
		<member name="M:Android_OnAndroidTimer" syntax="Android_OnAndroidTimer(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Utils_ChaosMod"/>
			<param name="playerid">
				Player to mess up.
			</param>
			<library>y_utils - misc</library>  <param name="old">Unused.</param>    <remarks>  Timer for applying random effects.  </remarks> 
		</member>
		<member name="M:Android_OnPlayerConnect" syntax="Android_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="IPToInt"/>
			<dependency name="ScriptInit_OnPlayerConnect"/>
			<dependency name="YSI_gPlayerIP"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Android_OnPlayerDisconnect" syntax="Android_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="ScriptInit_OnPlayerDisconnect"/>
			<dependency name="YSI_gPlayerIP"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Android_OnYSIInit" syntax="Android_OnYSIInit()">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsActorStreamedIn"/>
			<dependency name="IsPlayerAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsPlayerStreamedIn"/>
			<dependency name="IsValidActor"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Init_Internal"/>
			<dependency name="Iter_OnYSIInit"/>
			<dependency name="Iter_Single@Actor"/>
			<dependency name="Iter_Single@Bot"/>
			<dependency name="Iter_Single@Character"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iter_Single@RconAdmin"/>
			<dependency name="Iter_Single@StreamedActor"/>
			<dependency name="Iter_Single@StreamedBot"/>
			<dependency name="Iter_Single@StreamedCharacter"/>
			<dependency name="Iter_Single@StreamedPlayer"/>
			<dependency name="Iter_Single@StreamedVehicle"/>
			<dependency name="Iter_Single@Vehicle"/>
			<dependency name="Iterator@Actor"/>
			<dependency name="Iterator@Bot"/>
			<dependency name="Iterator@Character"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Iterator@RconAdmin"/>
			<dependency name="Iterator@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<dependency name="Iterator@Vehicle"/>
			<library>y_iterate</library>  <remarks>  Sets up all existing iterators.  Does nothing for "XXLocal" ones, since they  are by definition empty when a script starts.  </remarks> 
		</member>
		<member name="M:AngleToPoint" syntax="AngleToPoint(x2, y2, X, Y)">
			<tagname value="Float"/>
			<stacksize value="7"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRaceCD"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="atan"/>
			<dependency name="floatabs"/>
			<dependency name="floatadd"/>
			<dependency name="floatsub"/>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AngleUpdate" syntax="AngleUpdate(g)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="TDrif"/>
			<dependency name="false"/>
			<dependency name="ppos"/>
			<dependency name="ppos"/>
			<param name="g">
			</param>
		</member>
		<member name="M:Anticheat_Update" syntax="Anticheat_Update()">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="AC_MoneyAlerts"/>
			<dependency name="AddPlayerBan"/>
			<dependency name="AutoNewsChange"/>
			<dependency name="BanEx2"/>
			<dependency name="Banned"/>
			<dependency name="DCAdmin"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerMoney"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleVirtualWorld"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Iterator@Vehicle"/>
			<dependency name="Logged"/>
			<dependency name="Minigame"/>
			<dependency name="Money"/>
			<dependency name="PLAYER_STATE_SPECTATING"/>
			<dependency name="PlaySoundForAdmins"/>
			<dependency name="PlayTime"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Registered"/>
			<dependency name="Save"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="Server"/>
			<dependency name="Spawned"/>
			<dependency name="Uptime"/>
			<dependency name="allowmg"/>
			<dependency name="cellmax"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:ApplyActorAnimation" syntax="ApplyActorAnimation(actorid, animationLibrary[], animationName[], delta, loop, lockX, lockY, freeze, time)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_actorstrip"/>
			<param name="actorid">
				The ID of the actor to apply the animation to
			</param>
			<param name="animationLibrary">
				<paraminfo> [] </paraminfo>
				The animation library from which to apply an animation
			</param>
			<param name="animationName">
				<paraminfo> [] </paraminfo>
				The name of the animation to apply, within the specified library
			</param>
			<param name="delta">
				<paraminfo>Float </paraminfo>
				The speed to play the animation (use <b><c>4.1</c></b>)
			</param>
			<param name="loop">
				<paraminfo>bool </paraminfo>
				If set to <b><c>1</c></b>, the animation will loop.  If set to <b><c>0</c></b>,  the animation will play once
			</param>
			<param name="lockX">
				<paraminfo>bool </paraminfo>
				If set to <b><c>0</c></b>, the actor is returned to their old x coordinate once  the animation is complete (for animations that move the actor such as walking). <b><c>1</c></b> will  not return them to their old position
			</param>
			<param name="lockY">
				<paraminfo>bool </paraminfo>
				Same as above but for the y axis.  Should be kept the same as the previous parameter
			</param>
			<param name="freeze">
				<paraminfo>bool </paraminfo>
				Setting this to <b><c>1</c></b> will freeze an actor at the end of the animation.  <b><c>0</c></b> will not
			</param>
			<param name="time">
				Timer in milliseconds.  For a never-ending loop it should be <b><c>0</c></b>
			</param>
			<library>omp_actor</library>  <summary>Apply an animation to an actor.</summary>                    <seealso name="ClearActorAnimations" />  <remarks>You must preload the animation library for the player the actor will be applying the animation  for, and not for the actor.  Otherwise, the animation won't be applied to the actor until the function  is executed again.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The actor specified does not exist.  </returns> 
		</member>
		<member name="M:ApplyAnimation" syntax="ApplyAnimation(playerid, animationLibrary[], animationName[], delta, loop, lockX, lockY, freeze, time, forceSync)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_strip"/>
			<referrer name="cmd_strip1"/>
			<referrer name="cmd_strip2"/>
			<referrer name="cmd_strip3"/>
			<referrer name="cmd_strip4"/>
			<referrer name="cmd_strip5"/>
			<referrer name="cmd_smoke"/>
			<referrer name="cmd_onfire"/>
			<referrer name="cmd_cpr"/>
			<referrer name="cmd_fu"/>
			<referrer name="cmd_sit"/>
			<referrer name="cmd_puke"/>
			<referrer name="cmd_kissing"/>
			<referrer name="cmd_wank"/>
			<referrer name="cmd_drunk"/>
			<referrer name="cmd_lean"/>
			<referrer name="cmd_skate"/>
			<referrer name="cmd_injured"/>
			<referrer name="EasterEggPickup"/>
			<param name="playerid">
				The ID of the player to apply the animation to
			</param>
			<param name="animationLibrary">
				<paraminfo> [] </paraminfo>
				The animation library from which to apply an animation
			</param>
			<param name="animationName">
				<paraminfo> [] </paraminfo>
				The name of the animation to apply, within the specified library
			</param>
			<param name="delta">
				<paraminfo>Float </paraminfo>
				The speed to play the animation (use 4.1)
			</param>
			<param name="loop">
				<paraminfo>bool </paraminfo>
				If set to <b><c>1</c></b>, the animation will loop.  If set to <b><c>0</c></b>,  the animation will play once
			</param>
			<param name="lockX">
				<paraminfo>bool </paraminfo>
				If set to <b><c>0</c></b>, the player is returned to their old x coordinate once  the animation is complete (for animations that move the player such as walking). <b><c>1</c></b>  will not return them to their old position
			</param>
			<param name="lockY">
				<paraminfo>bool </paraminfo>
				Same as above but for the y axis.  Should be kept the same as the previous parameter
			</param>
			<param name="freeze">
				<paraminfo>bool </paraminfo>
				Setting this to <b><c>1</c></b> will freeze the player at the end of the animation.  <b><c>0</c></b> will not
			</param>
			<param name="time">
				Timer in milliseconds.  For a never-ending loop it should be <b><c>0</c></b>
			</param>
			<param name="forceSync">
				<paraminfo>t_FORCE_SYNC </paraminfo>
				Set to <b><c>1</c></b> to make server sync the animation with all other players  in streaming radius. <b><c>2</c></b> works same as <b><c>1</c></b>, but will ONLY apply the animation  to streamed-in players, but NOT the actual player being animated (useful for npc animations and persistent  animations when players are being streamed) (optional=<b><c>0</c></b>)
			</param>
			<library>omp_player</library>  <summary>Apply an animation to a player.</summary>                      <seealso name="ClearAnimations" />  <seealso name="SetPlayerSpecialAction" />  <remarks>The <paramref name="forceSync" /> optional parameter, which defaults to <b><c>0</c></b>,  in most cases is not needed since players sync animations themselves.  The <paramref name="forceSync"  /> parameter can force all players who can see <paramref name="playerid" /> to play the animation  regardless of whether the player is performing that animation.  This is useful in circumstances where  the player can't sync the animation themselves.  For example, they may be paused.</remarks>  <remarks>An invalid animation library will crash the player's game.</remarks>  <returns>This function always returns <b><c>1</c></b>, even if the player specified does not exist,  or any of the parameters are invalid (e.g.  invalid library).</returns> 
		</member>
		<member name="M:Assigned_GiveFreeMovingID" syntax="Assigned_GiveFreeMovingID()">
			<stacksize value="2"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smoam"/>
			<dependency name="Moving"/>
			<dependency name="false"/>
			<dependency name="idUsed"/>
		</member>
		<member name="M:AttachCameraToObject" syntax="AttachCameraToObject(playerid, objectid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<param name="playerid">
				The ID of the player which will have your camera attached on object
			</param>
			<param name="objectid">
				The object ID which you want to attach the player camera
			</param>
			<library>omp_player</library>  <summary>You can use this function to attach the player camera to objects.</summary>      <seealso name="AttachCameraToPlayerObject" />  <remarks>You need to create the object first, before attempting to attach a player camera for that.</remarks> 
		</member>
		<member name="M:AttachCameraToPlayerObject" syntax="AttachCameraToPlayerObject(playerid, objectid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<param name="playerid">
				The ID of the player which will have their camera attached to a player-object
			</param>
			<param name="objectid">
				The ID of the player-object to which the player's camera will be attached
			</param>
			<library>omp_player</library>  <summary>Attaches a player's camera to a player-object.  The player is able to move their camera  while it is attached to an object.  Can be used with MovePlayerObject and AttachPlayerObjectToVehicle.</summary>      <seealso name="AttachCameraToObject" />  <seealso name="SetPlayerCameraPos" />  <seealso name="SetPlayerCameraLookAt" />  <remarks>The player-object must be created before attempting to attach the player's camera to it.</remarks> 
		</member>
		<member name="M:AttachDynamicObjectToVehicle" syntax="AttachDynamicObjectToVehicle(objectid, vehicleid, offsetx, offsety, offsetz, rx, ry, rz)">
			<attribute name="native"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_aotv"/>
			<param name="objectid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="offsetx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="offsety">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="offsetz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AttachObjectToPlayer" syntax="AttachObjectToPlayer(objectid, parentid, offsetX, offsetY, offsetZ, rotationX, rotationY, rotationZ)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<param name="objectid">
				The ID of the object to attach to the player
			</param>
			<param name="parentid">
			</param>
			<param name="offsetX">
				<paraminfo>Float </paraminfo>
				The distance between the player and the object in the x direction
			</param>
			<param name="offsetY">
				<paraminfo>Float </paraminfo>
				The distance between the player and the object in the y direction
			</param>
			<param name="offsetZ">
				<paraminfo>Float </paraminfo>
				The distance between the player and the object in the z direction
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The x rotation between the object and the player
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The y rotation between the object and the player
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The z rotation between the object and the player
			</param>
			<library>omp_object</library>  <summary>Attach an object to a player.</summary>    <param name="playerid">The ID of the player to attach the object to</param>              <seealso name="AttachObjectToVehicle" />  <seealso name="AttachObjectToObject" />  <seealso name="AttachPlayerObjectToPlayer" />  <seealso name="SetPlayerAttachedObject" />  <seealso name="CreateObject" />  <returns>This function always returns <b><c>0</c></b>.</returns> 
		</member>
		<member name="M:AttachObjectToVehicle" syntax="AttachObjectToVehicle(objectid, parentid, offsetX, offsetY, offsetZ, rotationX, rotationY, rotationZ)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="AddNeon"/>
			<param name="objectid">
				The ID of the object to attach to the vehicle.  Note that this is an object  ID, not a model ID.  The object must be CreateObject created first
			</param>
			<param name="parentid">
			</param>
			<param name="offsetX">
				<paraminfo>Float </paraminfo>
				The x axis offset from the vehicle to attach the object to
			</param>
			<param name="offsetY">
				<paraminfo>Float </paraminfo>
				The y axis offset from the vehicle to attach the object to
			</param>
			<param name="offsetZ">
				<paraminfo>Float </paraminfo>
				The z axis offset from the vehicle to attach the object to
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The x rotation offset for the object
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The y rotation offset for the object
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The z rotation offset for the object
			</param>
			<library>omp_object</library>  <summary>Attach an object to a vehicle.</summary>    <param name="vehicleid">The ID of the vehicle to attach the object to</param>              <seealso name="AttachObjectToPlayer" />  <seealso name="AttachObjectToObject" />  <seealso name="AttachPlayerObjectToVehicle" />  <seealso name="CreateObject" />  <remarks>The object must be created first.</remarks>  <remarks>When the vehicle is destroyed or respawned, the attached objects won't be destroyed with  it; they will remain stationary at the position the vehicle disappeared and be reattached to the  next vehicle to claim the vehicle ID that the objects were attached to.</remarks> 
		</member>
		<member name="M:AttachPlayerObjectToVehicle" syntax="AttachPlayerObjectToVehicle(playerid, objectid, parentid, offsetX, offsetY, offsetZ, rotationX, rotationY, rotationZ)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<param name="playerid">
				The ID of the player the object was created for
			</param>
			<param name="objectid">
				The ID of the object to attach to the vehicle
			</param>
			<param name="parentid">
			</param>
			<param name="offsetX">
				<paraminfo>Float </paraminfo>
				The x position offset for attachment
			</param>
			<param name="offsetY">
				<paraminfo>Float </paraminfo>
				The y position offset for attachment
			</param>
			<param name="offsetZ">
				<paraminfo>Float </paraminfo>
				The z position offset for attachment
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The x rotation offset for attachment
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The y rotation offset for attachment
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The z rotation offset for attachment
			</param>
			<library>omp_object</library>  <summary>Attach a player object to a vehicle.</summary>      <param name="vehicleid">The ID of the vehicle to attach the object to</param>              <seealso name="CreatePlayerObject" />  <seealso name="AttachPlayerObjectToPlayer" />  <seealso name="AttachObjectToVehicle" />  <remarks>You need to create the object before attempting to attach it to a vehicle.</remarks> 
		</member>
		<member name="M:AutoAssign" syntax="AutoAssign()">
			<stacksize value="6"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="TDMJoined"/>
			<dependency name="true"/>
		</member>
		<member name="M:AutoNewsChange" syntax="AutoNewsChange(a)">
			<stacksize value="138"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="Anticheat_Update"/>
			<dependency name="Deaths"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Money"/>
			<dependency name="PlayTime"/>
			<dependency name="Players"/>
			<dependency name="RXDM"/>
			<dependency name="RacesWon"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="Token"/>
			<dependency name="cellmax"/>
			<dependency name="formatex"/>
			<dependency name="score"/>
			<param name="a">
			</param>
		</member>
		<member name="M:BCD" syntax="BCD(number)">
			<stacksize value="1"/>
			<param name="number">
			</param>
			<library>sscanf</library>  <remarks>  Converts a version string to  <a href="https://en.wikipedia.org/wiki/Binary-coded_decimal">BCD</a>.  For example:  <code>  BCD(5.6.17);  </code>  Returns:  <code>  0x050617  </code>  Each section (between dots) is assigned a single byte and the last section is  always in the lowest byte.  This implies a maximum of four sections and two  digits per section.  </remarks> 
		</member>
		<member name="M:BInt_PBuyable" syntax="BInt_PBuyable(id)">
			<stacksize value="1"/>
			<dependency name="Buyable"/>
			<dependency name="PropInfo"/>
			<dependency name="false"/>
			<param name="id">
			</param>
		</member>
		<member name="M:BanEx" syntax="BanEx(playerid, reason[])">
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerFloodControl"/>
			<referrer name="DelayBanEx"/>
			<param name="playerid">
				The ID of the player to ban
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
				The reason for the ban
			</param>
			<library>omp_network</library>  <summary>Ban a player with a reason.</summary>      <seealso name="Ban" />  <seealso name="Kick" />  <remarks>Any action taken directly before Ban() (such as sending a message  with SendClientMessage) will not reach the player.  A timer must be used to delay the ban.</remarks> 
		</member>
		<member name="M:BanEx2" syntax="BanEx2(playerid, reason[])">
			<stacksize value="8"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="PGodTimer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="cmd_ban"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Base64Decode" syntax="Base64Decode(dest[], src[], len, offset)">
			<stacksize value="4"/>
			<dependency name="__cell_shift"/>
			<dependency name="__m1_cells"/>
			<dependency name="min"/>
			<dependency name="strlen"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="offset">
			</param>
			<library>y_utils - encodings</library>  <summary>  Base64Decode  </summary>  <remarks>  Decodes data using proper base64.  </remarks> 
		</member>
		<member name="M:Base64Encode" syntax="Base64Encode(dest[], src[], num, len, offset)">
			<stacksize value="5"/>
			<dependency name="__MACRO__ceildiv"/>
			<dependency name="__cell_shift"/>
			<dependency name="__local0_offset"/>
			<dependency name="__local1_offset"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="num">
			</param>
			<param name="len">
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:BeginObjectSelecting" syntax="BeginObjectSelecting(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_dsom"/>
			<param name="playerid">
				The ID of the player that should be able to select the object
			</param>
			<library>omp_object</library>  <summary>Display the cursor and allow the player to select an object. <a href="#OnPlayerSelectObject">OnPlayerSelectObject</a>  is called when the player selects an object.</summary>    <seealso name="EditObject" />  <seealso name="EditPlayerObject" />  <seealso name="EditAttachedObject" />  <seealso name="CancelEdit" />  <seealso name="OnPlayerSelectObject" /> 
		</member>
		<member name="M:BernsteinHash" syntax="BernsteinHash(str[])">
			<stacksize value="7"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellbits"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_utils - encodings</library>  <param name="string">the string to hash.</param>  <returns>  The bernstein hash of the input string  </returns>  <remarks>  This is a 32bit hash system so is not very secure, however we're only using  this as a string enumerator to uniquely identify strings easilly and allow  for a binary search of strings based on the hash of their name.  <em>crc32</em>, then <em>jenkins</em> were originally used however this is  far faster, if a little collision prone, but we're checking the strings  manually anyway.  This doesn't matter as it would be done regardless of  hash method, so this doesn't need to be accounted for.  Speed is all that  matters with at least least a bit of non collision (the number of strings  we're dealing with, this should have none-to-few collisions).  <p/>  I modified it slightly from the original code pasted by aru, to code closer  to <a href="http://www.burtleburtle.net/bob/hash/doobs.html">the code</a>  and to work with PAWN (and shaved 0.2us off the time for one call :D).  <p/>  Uber reduced version (just for fun):  <code>  b(s[]){new h=-1,i,j;while((j=s[i++]))h=h*33+j;return h;}  </code>  <p/>  Update: Contrary to what I said above this is also used to identify colour  strings for the updated text system involving file based styling and this  is not checked for collisions as it's unimportant.  But this doesn't affect  the function at all, I just mentioned it here for "interest".  </remarks> 
		</member>
		<member name="M:BiGramSimilarity" syntax="BiGramSimilarity(string1[], string2[])">
			<tagname value="Float"/>
			<stacksize value="1306"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="floatdiv"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
				The first string to compare.
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_utils - similarity</library>  <summary>  BiGramSimilarity(const string1[], const string2[]);  </summary>    <param name="string1">The second string to compare.</param>  <returns>  The normalised similarity between the strings (<c>0.0 - 1.0</c>).  </returns>  <remarks>  Compares the pairs of letters and numbers in each string with each other to  find a measure of how much of one ordered string is in the other.  Useful  for seeing if two strings are similar to humans.  This is nothing like the  more common <em>Levenshtein Distance</em>, which pretty much compares  strings at an ASCII character level, so two very different strings can be  apparently more similar than two others.  A good example of this, which was the motivation for writing this function,  was in <em>sscanf</em>.  When checking to see what vehicle a player wrote,  the input <c>NRG</c> would return <c>TUG</c> as the closest match.  Why?  Because they're both three letters and share the last <c>G</c>, so  mechanically they are only two transformations apart; whereas <c>NRG-400</c>  needs four transforms to get to from the input.  So this code looks at how  much of each string is in the other string.  Very little of <c>TUG</c> is in  <c>NRG</c> and vice-versa, while all of <c>NRG</c> is in <c>NRG-400</c> and  a lot of the reverse is true.  This entirely ignores case, spaces, and punctuation in the comparisons.  </remarks> 
		</member>
		<member name="M:BinStr" syntax="BinStr(str[])">
			<stacksize value="4"/>
			<referrer name="binstr"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_utils - conversions</library>  <param name="string">String to try convert to a boolean.</param>  <returns>  bool: passed boolean.  </returns>  <remarks>  This takes a value in 0110101 (boolean) format and returns it as a  regular value.  </remarks> 
		</member>
		<member name="M:BoolStr" syntax="BoolStr(str[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="boolstr"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_utils - conversions</library>  <param name="string">String to try convert to a boolean.</param>  <returns>  bool: passed boolean.  </returns>  <remarks>  This can take a number of ways of representing booleans - 0, false and  nothing there.  Anything not one of those things (false is not case  sensitive) is assumed true.  </remarks> 
		</member>
		<member name="M:BoughtProperties" syntax="BoughtProperties()">
			<stacksize value="3"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropertiesAmount"/>
		</member>
		<member name="M:BuildInitial" syntax="BuildInitial(playerid)">
			<stacksize value="2"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_buildrace"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="BCPs"/>
			<dependency name="BCPs"/>
			<dependency name="BCPsize"/>
			<dependency name="BCPsize"/>
			<dependency name="BCurrentCP"/>
			<dependency name="BName"/>
			<dependency name="BName"/>
			<dependency name="BTotalCPs"/>
			<dependency name="BVehicleID"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:BuildObjects" syntax="BuildObjects()">
			<attribute name="public"/>
			<stacksize value="17"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="cmd_restore"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="CreateObject"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="SetDynamicObjectMaterialText"/>
			<dependency name="printfex"/>
		</member>
		<member name="M:CIEMultiply" syntax="CIEMultiply(r, g, b, &amp;x, &amp;y, &amp;z)">
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="r">
				<paraminfo>Float </paraminfo>
				The red colour component.
			</param>
			<param name="g">
				<paraminfo>Float </paraminfo>
				The green colour component.
			</param>
			<param name="b">
				<paraminfo>Float </paraminfo>
				The blue colour component.
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				The x return value.
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				The y return value.
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				The z return value.
			</param>
			<library>y_utils - colour</library>              <remarks>  Performs one step of the sRGB to CIE colour space conversion process.  See:  https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation_(sRGB_to_CIE_XYZ)  </remarks> 
		</member>
		<member name="M:CIEToSRGB" syntax="CIEToSRGB(a, x, y, z)">
			<stacksize value="10"/>
			<referrer name="InterpolateColourSRGB"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<param name="a">
				The alpha to add on.
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x return value.
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y return value.
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z return value.
			</param>
			<library>y_utils - colour</library>  <summary>  SRGBToCIE(colour, &amp;Float:x, &amp;Float:y, &amp;Float:z);  </summary>          <remarks>  Converts a colour from CIE XYZ colour space to sRGB colour space.  See:  https://en.wikipedia.org/wiki/SRGB#The_forward_transformation_(CIE_XYZ_to_sRGB)  </remarks> 
		</member>
		<member name="M:CONST_PAWNDOC" syntax="CONST_PAWNDOC(symbol[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  Creates fake constants that Pawndoc comments can be attached to in the first  compilation phase, before the real macros are created.  Macros can't have  documentation comments, but why not?  They need documenting...  <p/>  Used internally as <c>YSI_CONST_PAWNDOC</c>.  <p/>  This creates a static stock of the same name to attach the documentation to,  before actually defining the macro.  <p/>  <code>  #if defined MACRO_NAME                                                   <br /><indent />  // `#define MACRO_NAME` exists previously, don't document it here.   <br /><indent />  _FIXES_HIDE_PAWNDOC(SIMILAR_NAME);                                   <br />  #else                                                                    <br /><indent />  // Doesn't exist.  Document it and define it.                        <br /><indent />  _FIXES_CONST_PAWNDOC(MACRO_NAME);                                    <br /><indent />  #define MACRO_NAME(%0) (%0)                                          <br />  #endif  </code>  <br />  </remarks> 
		</member>
		<member name="M:CPUConnectTime" syntax="CPUConnectTime(index, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="formatex"/>
			<dependency name="strdel"/>
			<dependency name="strlen"/>
			<dependency name="tmpc"/>
			<dependency name="xstring"/>
			<param name="index">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CTFTimeout" syntax="CTFTimeout()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ActiveCTF"/>
			<dependency name="CTFI"/>
			<dependency name="CTFIcons"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="CTFToken"/>
			<dependency name="CTF_Flags"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="cellmax"/>
			<dependency name="ctfflags"/>
			<dependency name="false"/>
			<dependency name="true"/>
		</member>
		<member name="M:CallLocalFunction" syntax="CallLocalFunction(functionName[], specifiers[], ...)">
			<attribute name="native"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="DCC_OnMessageCreate"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="functionName">
				<paraminfo> [] </paraminfo>
				Public function's name
			</param>
			<param name="specifiers">
				<paraminfo> [] </paraminfo>
				Tag/format of each variable
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
				'Indefinite' number of arguments of any tag
			</param>
			<library>omp_core</library>  <summary>Calls a public function from the script in which it is used.</summary>        <seealso name="CallRemoteFunction" />  <returns>The value that the <b>only</b> public function returned.</returns>  <remarks>CallLocalFunction crashes the server if it's passing an empty string.</remarks>  <remarks>  Specifier string placeholders:<br />  <ul>  <li><b><c>c</c></b> - a single character</li>  <li><b><c>d</c></b> - an integer (whole) number</li>  <li><b><c>i</c></b> - an integer (whole) number</li>  <li><b><c>x</c></b> - a number in hexadecimal notation</li>  <li><b><c>f</c></b> - a floating point number</li>  <li><b><c>s</c></b> - a string</li>  </ul>  </remarks> 
		</member>
		<member name="M:CallRemoteFunction" syntax="CallRemoteFunction(functionName[], specifiers[], ...)">
			<attribute name="native"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="OnAndroidTimer"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_Exit"/>
			<referrer name="DeleteTextTT"/>
			<param name="functionName">
				<paraminfo> [] </paraminfo>
				Public function's name
			</param>
			<param name="specifiers">
				<paraminfo> [] </paraminfo>
				Tag/format of each variable
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
				'Indefinite' number of arguments of any tag
			</param>
			<library>omp_core</library>  <summary>Calls a public function in any script that is loaded.</summary>        <seealso name="CallLocalFunction" />  <returns>The value that the last public function returned.</returns>  <remarks>CallRemoteFunction crashes the server if it's passing an empty string.</remarks>  <remarks>  Specifier string placeholders:<br />  <ul>  <li><b><c>c</c></b> - a single character</li>  <li><b><c>d</c></b> - an integer (whole) number</li>  <li><b><c>i</c></b> - an integer (whole) number</li>  <li><b><c>x</c></b> - a number in hexadecimal notation</li>  <li><b><c>f</c></b> - a floating point number</li>  <li><b><c>s</c></b> - a string</li>  </ul>  </remarks> 
		</member>
		<member name="M:CancelSelectTextDraw" syntax="CancelSelectTextDraw(playerid)">
			<attribute name="native"/>
			<referrer name="HideModelSelectionMenu"/>
			<param name="playerid">
				The ID of the player that should be the textdraw selection disabled
			</param>
			<library>omp_textdraw</library>  <summary>Cancel textdraw selection with the mouse.</summary>    <seealso name="SelectTextDraw" />  <seealso name="TextDrawSetSelectable" />  <seealso name="OnPlayerClickTextDraw" />  <remarks>This function calls <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a> with <b><c>INVALID_TEXT_DRAW</c></b>  (<b><c>65535</c></b>).  Using this function inside <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a>  without catching this case will cause clients to go into an infinite loop.</remarks> 
		</member>
		<member name="M:Cell_Abs" syntax="Cell_Abs(number, tag)">
			<stacksize value="1"/>
			<dependency name="cellmax"/>
			<dependency name="y_utils_abs_shift"/>
			<param name="number">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the absolute value of.
			</param>
			<param name="tag">
				The tag of the number, in case its <c>Float</c>.
			</param>
			<library>y_cell</library>  <summary>  Cell_Abs(GLOBAL_TAG_TYPES:x, m)  </summary>      <returns>  The absolute value of a number.  </returns>  <remarks>  Get the absolute value of a number.  Floats just remove MSB.  For ints,  multiply the whole number by the MSB shifted OR 1 (1 or -1).  </remarks> 
		</member>
		<member name="M:Cell_CompressRight" syntax="Cell_CompressRight(x, m)">
			<stacksize value="12"/>
			<dependency name="Cell_CompressRightPrecomputed"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<param name="x">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to compress.
			</param>
			<param name="m">
				The mask for which bits to compress.
			</param>
			<library>y_cell</library>  <summary>  Cell_CompressRight(GLOBAL_TAG_TYPES:x, m);  </summary>      <returns>  Selected bits from "x", shifted to be LSBs.  </returns>  <remarks>  Doesn't require precomputation.  </remarks> 
		</member>
		<member name="M:Cell_CompressRightPrecomputed" syntax="Cell_CompressRightPrecomputed(x, m, masks[])">
			<stacksize value="2"/>
			<referrer name="Cell_CompressRight"/>
			<param name="x">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to compress.
			</param>
			<param name="m">
				The mask for which bits to compress.
			</param>
			<param name="masks">
				<paraminfo> [5] </paraminfo>
				Precomputed constants for the compression.
			</param>
			<library>y_cell</library>  <summary>  Cell_CompressRightPrecomputed(GLOBAL_TAG_TYPES:x, m, masks[5]);  </summary>        <returns>  Selected bits from "x", shifted to be LSBs.  </returns>  <remarks>  Very briefly, do "x &amp; m", to select certain bits, then shift those bits  by various amounts so that they are consecutive:  x = 0b110011  m = 0b011010  x &amp; m = 0b010010  From here, because the mask was three bits we know we want just those three  bits in the LSBs, so the answer becomes:  0b000101  Just read this question, it has a diagram:  <a href="http://stackoverflow.com/questions/28282869/shift-masked-bits-to-the-lsb" />  </remarks> 
		</member>
		<member name="M:Cell_CountBits" syntax="Cell_CountBits(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the number of 1s in.
			</param>
			<library>y_cell</library>  <summary>  Cell_CountBits(number);  </summary>    <returns>  The number of 1s (set bits) in the input.  </returns>  <remarks>  1)  Example: 0  Returns: 0  2)  Example: 1  Returns: 1  3)  Example: 0x01010101  Returns: 4  I rewrote this in assembly just to see if I could pretty much.  I also  rewrote the lookup version in assembly.  In theory it should be faster, but  the marshalling of data was a little awkward.  </remarks> 
		</member>
		<member name="M:Cell_CountBlanks" syntax="Cell_CountBlanks(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the number of 0s in.
			</param>
			<library>y_cell</library>  <summary>  Cell_CountBlanks(number);  </summary>    <returns>  The number of 0s (unset bits) in the input.  </returns>  <remarks>  Like Cell_CountBits, but for 0s not 1s.  </remarks> 
		</member>
		<member name="M:Cell_ExpandLeft" syntax="Cell_ExpandLeft(x, m)">
			<stacksize value="12"/>
			<dependency name="Cell_ExpandLeftPrecomputed"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<param name="x">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to expand.
			</param>
			<param name="m">
				The mask for which bits to expand to.
			</param>
			<library>y_cell</library>  <summary>  Cell_ExpandLeft(GLOBAL_TAG_TYPES:x, m)  </summary>      <returns>  LSBs from "x", shifted to selected bit positions.  </returns>  <remarks>  Doesn't require precomputation.  </remarks> 
		</member>
		<member name="M:Cell_ExpandLeftPrecomputed" syntax="Cell_ExpandLeftPrecomputed(x, m, masks[])">
			<stacksize value="2"/>
			<referrer name="Cell_ExpandLeft"/>
			<param name="x">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to expand.
			</param>
			<param name="m">
				The mask for which bits to expand to.
			</param>
			<param name="masks">
				<paraminfo> [5] </paraminfo>
				Precomputed constants for the expansion.
			</param>
			<library>y_cell</library>  <summary>  Cell_ExpandLeftPrecomputed(GLOBAL_TAG_TYPES:x, m, masks[5])  </summary>        <returns>  LSBs from "x", shifted to selected bit positions.  </returns>  <remarks>  The reverse of "Cell_CompressRightPrecomputed".  Doesn't return exactly the  original number before a compression, just the original number ANDed with  the mask "m".  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBit" syntax="Cell_GetLowestBit(data)">
			<stacksize value="1"/>
			<dependency name="YSI_g_scDeBruijn1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest set bit of.
			</param>
			<library>y_cell</library>  <summary>  Cell_GetLowestBit(number);  </summary>    <returns>  The integer position of the lowest set bit.  </returns>  <remarks>  1)  Example: 0b00000000000000000000000000000001  Returns: 0  2)  Example: 0b00000000000000000000000000001000  Returns: 3  3)  Example: 0b00010001100011000011100010001000  Returns: 3  NOTE: This function returns "0" for both numbers with the "1" bit set AND  the number "0", which has NO bits set.  Check that the number is valid  before passing it to this function.  See: <a href="http://supertech.csail.mit.edu/papers/debruijn.pdf" />  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBitEx" syntax="Cell_GetLowestBitEx(data)">
			<stacksize value="1"/>
			<dependency name="YSI_g_scDeBruijn2"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest set bit of PLUS ONE.
			</param>
			<library>y_cell</library>  <summary>  Cell_GetLowestBitEx(number);  </summary>    <returns>  The integer position of the lowest set bit PLUS ONE.  </returns>  <remarks>  This function is identical to "Cell_GetLowestBit", but gives different  results for 0 and non-zero numbers.  The examples below all have a result  one higher than the "Cell_GetLowestBit" function.  1)  Example: 0b00000000000000000000000000000001  Returns: 1  2)  Example: 0b00000000000000000000000000001000  Returns: 4  3)  Example: 0b00010001100011000011100010001000  Returns: 4  4)  Example: 0  Returns: 0  See: <a href="http://supertech.csail.mit.edu/papers/debruijn.pdf" />  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBlank" syntax="Cell_GetLowestBlank(data)">
			<stacksize value="1"/>
			<dependency name="YSI_g_scDeBruijn1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest unset bit of.
			</param>
			<library>y_cell</library>  <summary>  Cell_GetLowestBlank(number);  </summary>    <returns>  The integer position of the lowest unset bit.  </returns>  <remarks>  Like Cell_GetLowestBit, but for 0s not 1s.  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBlankEx" syntax="Cell_GetLowestBlankEx(data)">
			<stacksize value="1"/>
			<dependency name="YSI_g_scDeBruijn2"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest unset bit of PLUS ONE.
			</param>
			<library>y_cell</library>  <summary>  Cell_GetLowestBlankEx(number);  </summary>    <returns>  The integer position of the lowest unset bit PLUS ONE.  </returns>  <remarks>  Like Cell_GetLowestBitEx, but for 0s not 1s.  </remarks> 
		</member>
		<member name="M:Cell_GetLowestComponent" syntax="Cell_GetLowestComponent(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest 1 in.
			</param>
			<library>y_cell</library>  <summary>  Cell_GetLowestComponent(number);  </summary>    <returns>  The lowest set bit.  </returns>  <remarks>  Similar to Cell_GetLowestBit, but returns the bit, not the position of the  bit.  1)  Example: 0b00000000000000000000000000000001  Returns: 0b00000000000000000000000000000001  2)  Example: 0b00000000000000000000000000001000  Returns: 0b00000000000000000000000000001000  3)  Example: 0b00010001100011000011100010001000  Returns: 0b00000000000000000000000000001000  4)  Example: 0b00000000000000000000000000000000  Returns: 0b00000000000000000000000000000000  </remarks> 
		</member>
		<member name="M:Cell_GetLowestEmpty" syntax="Cell_GetLowestEmpty(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest 0 in.
			</param>
			<library>y_cell</library>  <summary>  Cell_GetLowestEmpty(number);  </summary>    <returns>  The lowest unset bit.  </returns>  <remarks>  Like Cell_GetLowestComponent, but for 0s not 1s.  </remarks> 
		</member>
		<member name="M:Cell_HasSpaceByte" syntax="Cell_HasSpaceByte(data)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="YSI_g_c20s"/>
			<dependency name="YSI_g_c80s"/>
			<dependency name="YSI_g_cFEs"/>
			<dependency name="false"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest space in.
			</param>
			<library>y_cell</library>  <summary>  Cell_HasSpaceByte(number);  </summary>    <returns>  The lowest space byte.  </returns>  <remarks>  Check if any of the 4 bytes are a space:  https://jameshfisher.com/2017/01/24/bitwise-check-for-zero-byte/  </remarks> 
		</member>
		<member name="M:Cell_HasZeroByte" syntax="Cell_HasZeroByte(data)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="AMX_ReadLength"/>
			<referrer name="AMX_ReadPackedString"/>
			<dependency name="YSI_g_c80s"/>
			<dependency name="YSI_g_cFEs"/>
			<dependency name="false"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to get the lowest 0 in.
			</param>
			<library>y_cell</library>  <summary>  Cell_HasZeroByte(number);  </summary>    <returns>  The lowest null byte.  </returns>  <remarks>  Check if any of the 4 bytes are zero:  https://jameshfisher.com/2017/01/24/bitwise-check-for-zero-byte/  </remarks> 
		</member>
		<member name="M:Cell_PrecomputeMaskPermutation" syntax="Cell_PrecomputeMaskPermutation(m)">
			<stacksize value="10"/>
			<referrer name="Cell_CompressRight"/>
			<referrer name="Cell_ExpandLeft"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<param name="m">
				The mask.
			</param>
			<library>y_cell</library>  <summary>  Cell_PrecomputeMaskPermutation(m)  </summary>    <returns>  Five precomputed constants to help expand or contract this mask.  </returns>  <remarks>  The full maths for generalised expansion and contraction is quite complex;  however, much of the inner loop relies only on the mask and not on the  value being manipulated.  Given this we can do a lot of work in advance,  say outside a loop, to avoid repeated calculations.  </remarks> 
		</member>
		<member name="M:Cell_ReverseBits" syntax="Cell_ReverseBits(data)">
			<stacksize value="1"/>
			<dependency name="swapchars"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to manipulate.
			</param>
			<library>y_cell</library>  <summary>  Cell_ReverseBits(number);  </summary>    <returns>  All the bits in the input reversed.  </returns>  <remarks>  1)  Example: 0b11110000000000000000000000000000  Becomes: 0b00000000000000000000000000001111  2)  Example: 0b10110011100011110000111110000010  Becomes: 0b01000001111100001111000111001101  3)  Example: 0b01010101010101010101010101010101  Becomes: 0b10101010101010101010101010101010  </remarks> 
		</member>
		<member name="M:Cell_ReverseBytes" syntax="Cell_ReverseBytes(data)">
			<attribute name="native"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to manipulate.
			</param>
			<library>y_cell</library>  <summary>  Cell_ReverseBytes(number);  </summary>    <returns>  All the bytes in the input reversed.  </returns>  <remarks>  1)  Example: 0x12345678  Becomes: 0x78563412  2)  Example: 0x01020304  Becomes: 0x04030201  3)  Example: 0xFF00FF00  Becomes: 0x00FF00FF  </remarks> 
		</member>
		<member name="M:Cell_ReverseNibbles" syntax="Cell_ReverseNibbles(data)">
			<stacksize value="1"/>
			<dependency name="swapchars"/>
			<param name="data">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
				The number to manipulate.
			</param>
			<library>y_cell</library>  <summary>  Cell_ReverseNibbles(number);  </summary>    <returns>  All the nibbles (4-bit chunks) in the input reversed.  </returns>  <remarks>  1)  Example: 0x12345678  Becomes: 0x87654321  2)  Example: 0x010F0703  Becomes: 0x3070F010  3)  Example: 0xF0F0F0F0  Becomes: 0x0F0F0F0F  </remarks> 
		</member>
		<member name="M:CensorDottedIP" syntax="CensorDottedIP(dest[], ip[], parts, len)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<dependency name="CensorIntIP"/>
			<dependency name="DottedToIntIP"/>
			<dependency name="false"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Destination string.
			</param>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				Input IP address in dotted notation.
			</param>
			<param name="parts">
				How many parts of the IP to keep.
			</param>
			<param name="len">
				Maximum length of the destination.
			</param>
			<library>y_utils - ip</library>          <returns>  <c>true</c> if the censoring worked, <c>false</c> if the input wasn't a  valid IP, or <c>parts</c> was invalid.  </returns>  <remarks>  Replaces some parts of an IP with stars (<c>*</c>) to hide the full thing.  There are four components in a dotted IP, so the number of stars returned is  <c>4 - parts</c>.  For example <c>CensorIP(dest, "192.168.0.1", 3);</c> will  return <c>"192.168.0.*"</c>.  </remarks> 
		</member>
		<member name="M:CensorIntIP" syntax="CensorIntIP(dest[], ip, parts, len)">
			<tagname value="bool"/>
			<stacksize value="13"/>
			<referrer name="CensorDottedIP"/>
			<referrer name="CensorPlayerIP"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Destination string.
			</param>
			<param name="ip">
				The IP to censor, as a 32-bit int.
			</param>
			<param name="parts">
				How many parts of the IP to keep.
			</param>
			<param name="len">
				Maximum length of the destination.
			</param>
			<library>y_utils - ip</library>          <returns>  <c>false</c> if <c>parts</c> was invalid, otherwise <c>true</c>.  </returns>  <remarks>  Replaces some parts of an IP with stars (<c>*</c>) to hide the full thing.  There are four components in a dotted IP, so the number of stars returned is  <c>4 - parts</c>.  For example <c>CensorIntIP(dest, 0xC0A80001, 3);</c> may  return <c>"192.168.0.*"</c>.  </remarks> 
		</member>
		<member name="M:CensorPlayerIP" syntax="CensorPlayerIP(dest[], playerid, parts, len)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="CensorIntIP"/>
			<dependency name="YSI_gPlayerIP"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Destination string.
			</param>
			<param name="playerid">
				The player whose IP will be used.
			</param>
			<param name="parts">
				How many parts of the IP to keep.
			</param>
			<param name="len">
				Maximum length of the destination.
			</param>
			<library>y_utils - ip</library>          <returns>  <c>true</c> if the censoring worked, <c>false</c> if the input wasn't a  valid IP.  </returns>  <remarks>  Replaces some parts of an IP with stars (<c>*</c>) to hide the full thing.  There are four components in a dotted IP, so the number of stars returned is  <c>4 - parts</c>.  For example <c>CensorPlayerIP(dest, playerid, 3);</c> may  return <c>"192.168.0.*"</c>.  </remarks> 
		</member>
		<member name="M:ChangeCPSize" syntax="ChangeCPSize(playerid, size)">
			<stacksize value="11"/>
			<referrer name="cmd_cpsize"/>
			<dependency name="AmBuilding"/>
			<dependency name="BCPs"/>
			<dependency name="BCPs"/>
			<dependency name="BCPsize"/>
			<dependency name="BCPsize"/>
			<dependency name="BCurrentCP"/>
			<dependency name="BTotalCPs"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerRaceCheckpoint"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ChangeVehicleColours" syntax="ChangeVehicleColours(vehicleid, colour1, colour2)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_cc"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="_B@Action"/>
			<param name="vehicleid">
				The ID of the vehicle to change the colours of
			</param>
			<param name="colour1">
				The new vehicle's primary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour  ID</a>
			</param>
			<param name="colour2">
				The new vehicle's secondary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour  ID</a>
			</param>
			<library>omp_vehicle</library>  <summary>Change a vehicle's primary and secondary colours.</summary>        <seealso name="ChangeVehiclePaintjob" />  <seealso name="OnVehicleRespray" />  <remarks>Some vehicles have only a primary colour and some can not have the colour changed at all.  A few (cement, squallo) have 4 colours, of which 2 can not currently be changed.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  The vehicle's colour was successfully changed.<br  />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:ChangeVehiclePaintjob" syntax="ChangeVehiclePaintjob(vehicleid, paintjob)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_pj1"/>
			<referrer name="cmd_pj2"/>
			<referrer name="cmd_pj3"/>
			<referrer name="cmd_pj"/>
			<param name="vehicleid">
				The ID of the vehicle to change the paintjob of
			</param>
			<param name="paintjob">
				The ID of the Paintjob to apply.  Use <b><c>3</c></b> to remove a paintjob
			</param>
			<library>omp_vehicle</library>  <summary>Change a vehicle's paintjob (for plain colours see <a href="#ChangeVehicleColor">ChangeVehicleColor</a>).</summary>      <seealso name="ChangeVehicleColours" />  <seealso name="OnVehiclePaintjob" />  <remarks>  <b>Known Bugs:</b><br />  This function calls <a href="#OnVehicleRespray">OnVehicleRespray</a>.<br />  Vehicles change their colour to white anymore when a paintjob is removed.  </remarks>  <returns>This function always returns <b><c>1</c></b> (success), even if the vehicle passed is not  created.</returns> 
		</member>
		<member name="M:Chat_SendMessageToAdmins" syntax="Chat_SendMessageToAdmins(color, level, string[])">
			<stacksize value="6"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerText"/>
			<referrer name="PGodTimer"/>
			<referrer name="cmd_sendoranges"/>
			<referrer name="cmd_sendapples"/>
			<referrer name="cmd_sendtokens"/>
			<referrer name="cmd_ammo"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_cloak"/>
			<referrer name="cmd_uncloak"/>
			<referrer name="cmd_healme"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_detonate"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_me"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_givepro"/>
			<referrer name="Token_Weapons"/>
			<referrer name="Token_Vehicle"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<param name="color">
			</param>
			<param name="level">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CheckAdminLevel" syntax="CheckAdminLevel(playerid, level)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="AdminLvl"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
			<param name="level">
			</param>
		</member>
		<member name="M:CheckPlayerState" syntax="CheckPlayerState(i)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftMode"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="DriftTimer"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVType"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="HealthInit"/>
			<dependency name="KillTimer"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TDrif"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="i">
			</param>
		</member>
		<member name="M:CheckRankForLevelUp" syntax="CheckRankForLevelUp(playerid)">
			<stacksize value="6"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<dependency name="Expierience"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Rank"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Check_IfMadeRecord" syntax="Check_IfMadeRecord(playerid, RaceID, racetime)">
			<attribute name="public"/>
			<stacksize value="336"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="R_Name"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="RaceID">
			</param>
			<param name="racetime">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ChrFind" syntax="ChrFind(needle, haystack[], start)">
			<stacksize value="8"/>
			<referrer name="chrfind"/>
			<referrer name="chrfindp"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<param name="needle">
				The character to find.
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
				The string to find it in.
			</param>
			<param name="start">
				The offset to start from.
			</param>
			<library>y_utils - strings</library>        <returns>  Fail - -1, Success - pos  </returns> 
		</member>
		<member name="M:ClearAnimations" syntax="ClearAnimations(playerid, forceSync)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_ca"/>
			<referrer name="cmd_sa"/>
			<param name="playerid">
				The ID of the player to clear the animations of
			</param>
			<param name="forceSync">
				<paraminfo>t_FORCE_SYNC </paraminfo>
				Set to <b><c>1</c></b> to force playerid to sync the animation with other  players in streaming radius (optional=<b><c>0</c></b>)
			</param>
			<library>omp_player</library>  <summary>Clears all animations for the given player (it also cancels all current tasks such as jetpacking,parachuting,entering  vehicles, driving (removes player out of vehicle), swimming, etc.. ).</summary>      <seealso name="ApplyAnimation" />  <remarks>ClearAnimations doesn't do anything when the animation ends if we pass 1 for the freeze  parameter in <a href="#ApplyAnimation">ApplyAnimation</a>.</remarks>  <remarks>Unlike some other ways to remove player from a vehicle, this will also reset the vehicle's  velocity to zero, instantly stopping the car.  Player will appear on top of the vehicle with the  same location as he was in his car seat.</remarks>  <returns>This function always returns <b><c>1</c></b>, even when the player specified is not connected.</returns> 
		</member>
		<member name="M:ClearRace" syntax="ClearRace(playerid)">
			<stacksize value="5"/>
			<referrer name="cmd_clearrace"/>
			<referrer name="SaveRace"/>
			<dependency name="AmBuilding"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ConvertProperties" syntax="ConvertProperties()">
			<stacksize value="240"/>
			<dependency name="AddProperty"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropName"/>
			<dependency name="PropOwner"/>
			<dependency name="PropUnbuyableTime"/>
			<dependency name="PropValue"/>
			<dependency name="PropX"/>
			<dependency name="PropY"/>
			<dependency name="PropZ"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="SSCANF__"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="fexist"/>
			<dependency name="fread"/>
			<dependency name="io_read"/>
			<dependency name="printfex"/>
		</member>
		<member name="M:CountDownDriftTimer" syntax="CountDownDriftTimer(playerid)">
			<attribute name="public"/>
			<stacksize value="312"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="DriftRecord"/>
			<dependency name="DriftRecordName"/>
			<dependency name="DriftRecordName"/>
			<dependency name="DriftSave"/>
			<dependency name="TDDrift"/>
			<dependency name="TDrif"/>
			<dependency name="TDriftPointsNow"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TimeLeft"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CountDynamic3DTextLabels" syntax="CountDynamic3DTextLabels()">
			<attribute name="native"/>
			<referrer name="cmd_streamerstats"/>
		</member>
		<member name="M:CountDynamicCPs" syntax="CountDynamicCPs()">
			<attribute name="native"/>
			<referrer name="cmd_streamerstats"/>
		</member>
		<member name="M:CountDynamicMapIcons" syntax="CountDynamicMapIcons()">
			<attribute name="native"/>
			<referrer name="cmd_dammi"/>
			<referrer name="cmd_streamerstats"/>
		</member>
		<member name="M:CountDynamicObjects" syntax="CountDynamicObjects()">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="GetPlayerClosestStreamedObject"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_daso"/>
			<referrer name="GetTotalCreatedObjects"/>
			<referrer name="GetVIPTotalCreatedObjects"/>
			<referrer name="DestroyDerbyObjects"/>
			<referrer name="cmd_gmlo"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_streamerstats"/>
			<referrer name="DB_StreamObjects"/>
		</member>
		<member name="M:CountDynamicPickups" syntax="CountDynamicPickups()">
			<attribute name="native"/>
			<referrer name="cmd_damp"/>
		</member>
		<member name="M:CountFileLines" syntax="CountFileLines(filename[])">
			<stacksize value="208"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="fclose"/>
			<dependency name="fread"/>
			<dependency name="io_read"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CountPlayerEggs" syntax="CountPlayerEggs(playerid)">
			<stacksize value="3"/>
			<referrer name="cmd_myeastereggs"/>
			<referrer name="EasterEggPickup"/>
			<dependency name="MyEggs"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CountProperties" syntax="CountProperties()">
			<stacksize value="5"/>
			<referrer name="SaveProperties"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="SQL"/>
			<dependency name="cache_num_rows"/>
			<dependency name="mysql_query"/>
		</member>
		<member name="M:CountRaces" syntax="CountRaces()">
			<stacksize value="108"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="fclose"/>
			<dependency name="fread"/>
			<dependency name="io_read"/>
		</member>
		<member name="M:CrashPlayer" syntax="CrashPlayer(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="cmd_crash"/>
			<dependency name="GameTextForPlayer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CreateActor" syntax="CreateActor(skin, x, y, z, angle)">
			<attribute name="native"/>
			<referrer name="Iter_CreateActor"/>
			<param name="skin">
				The model ID (skin ID) the actor should have
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to create the actor at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to create the actor at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to create the actor at
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The facing angle (rotation) for the actor to have
			</param>
			<library>omp_actor</library>  <summary>Create a static 'actor' in the world.  These 'actors' are like NPCs, however they have limited  functionality.  They do not take up server player slots.</summary>            <seealso name="DestroyActor" />  <seealso name="SetActorPos" />  <seealso name="GetActorPos" />  <seealso name="SetActorFacingAngle" />  <seealso name="GetActorFacingAngle" />  <seealso name="SetActorVirtualWorld" />  <seealso name="GetActorVirtualWorld" />  <seealso name="ApplyActorAnimation" />  <seealso name="ClearActorAnimations" />  <seealso name="GetPlayerCameraTargetActor" />  <seealso name="IsActorStreamedIn" />  <seealso name="SetActorHealth" />  <seealso name="GetActorHealth" />  <seealso name="SetActorInvulnerable" />  <seealso name="IsActorInvulnerable" />  <seealso name="IsValidActor" />  <seealso name="GetActorPoolSize" />  <seealso name="GetPlayerTargetActor" />  <seealso name="OnActorStreamIn" />  <seealso name="OnActorStreamOut" />  <seealso name="OnPlayerGiveDamageActor" />  <remarks>  Actors are completely separate from NPCs.  They do NOT use player IDs/slots on the server and CANNOT  be handled like NPCs.<br />  Actors are limited to <b><c>1000</c></b> (<b><c>MAX_ACTORS</c></b>).<br />  Actors can be pushed by vehicles, use a timer to put them back at their positions.<br />  </remarks>  <returns>  The created Actor ID (start at <b><c>0</c></b>).<br />  <b><c>INVALID_ACTOR_ID</c></b> (<b><c>65535</c></b>) If the actor limit (<b><c>1000</c></b>) is  reached.  </returns> 
		</member>
		<member name="M:CreateAdminObject" syntax="CreateAdminObject(playerid, modelid, x, y, z, rx, ry, rz)">
			<attribute name="public"/>
			<stacksize value="17"/>
			<referrer name="CreateSentence"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CreateDynamic3DTextLabel" syntax="CreateDynamic3DTextLabel(text[], color, x, y, z, drawdistance, attachedplayer, attachedvehicle, testlos, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<tagname value="Text3D"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="Login"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="GoGoRace"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="LoadProperties"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="attachedplayer">
			</param>
			<param name="attachedvehicle">
			</param>
			<param name="testlos">
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicActor" syntax="CreateDynamicActor(modelid, x, y, z, r, invulnerable, health, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="cmd_addactor"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="r">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="invulnerable">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicCP" syntax="CreateDynamicCP(x, y, z, size, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="cmd_delivery"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicMapIcon" syntax="CreateDynamicMapIcon(x, y, z, type, color, worldid, interiorid, playerid, streamdistance, style, areaid, priority)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="AddProperty"/>
			<referrer name="LoadProperties"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="type">
			</param>
			<param name="color">
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="style">
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicObject" syntax="CreateDynamicObject(modelid, x, y, z, rx, ry, rz, worldid, interiorid, playerid, streamdistance, drawdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_do"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="CreateAdminObject"/>
			<referrer name="BuildObjects"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicPickup" syntax="CreateDynamicPickup(modelid, type, x, y, z, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="LooseWeapons"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="AddProperty"/>
			<referrer name="LoadProperties"/>
			<param name="modelid">
			</param>
			<param name="type">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicRectangle" syntax="CreateDynamicRectangle(minx, miny, maxx, maxy, worldid, interiorid, playerid, priority)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateExplosion" syntax="CreateExplosion(x, y, z, type, radius)">
			<attribute name="native"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="Detonate"/>
			<referrer name="cmd_expo"/>
			<referrer name="cmd_nuke2"/>
			<referrer name="cmd_nuke"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate of the explosion
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate of the explosion
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate of the explosion
			</param>
			<param name="type">
				The type of explosion
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The explosion radius
			</param>
			<library>omp_core</library>  <summary>Create an explosion at the specified coordinates.</summary>            <seealso name="CreateExplosionForPlayer" />  <remarks>There is a limit as to how many explosions can be seen at once by a player.  This is roughly  10.</remarks>  <returns>This function always returns <b><c>1</c></b>, even when the explosion type and/or radius  values are invalid.</returns> 
		</member>
		<member name="M:CreateLog" syntax="CreateLog(file[])">
			<stacksize value="82"/>
			<referrer name="AddToLogFile"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="formatex"/>
			<dependency name="fwrite"/>
			<dependency name="io_append"/>
			<param name="file">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CreateNewTeleport" syntax="CreateNewTeleport(tName2[], TpX, TpY, TpZ, TpAng)">
			<stacksize value="8"/>
			<referrer name="cmd_newteleport"/>
			<dependency name="ReturnTeleportID"/>
			<dependency name="TeleportSystem"/>
			<dependency name="TeleportSystem"/>
			<dependency name="formatex"/>
			<dependency name="tName"/>
			<dependency name="teleAng"/>
			<dependency name="teleX"/>
			<dependency name="teleY"/>
			<dependency name="teleZ"/>
			<param name="tName2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="TpX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="TpY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="TpZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="TpAng">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CreateObject" syntax="CreateObject(modelid, x, y, z, rotationX, rotationY, rotationZ, drawDistance)">
			<attribute name="native"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<referrer name="AddNeon"/>
			<referrer name="BuildObjects"/>
			<param name="modelid">
				The model to create
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to create the object at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to create the object at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to create the object at
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The x rotation of the object
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The y rotation of the object
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The z rotation of the object
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
				The distance that San Andreas renders objects at. <b><c>0.0</c></b> will  cause objects to render at their default distances. <b>Usable since 0.3b, limited to <c>300</c> prior  to 0.3x</b> (optional=<b><c>0.0</c></b>)
			</param>
			<library>omp_object</library>  <summary>Creates an object at specified coordinates in the game world.</summary>                  <seealso name="DestroyObject" />  <seealso name="IsValidObject" />  <seealso name="CreatePlayerObject" />  <seealso name="MoveObject" />  <seealso name="SetObjectPos" />  <seealso name="SetObjectRot" />  <seealso name="GetObjectPos" />  <seealso name="GetObjectRot" />  <seealso name="AttachObjectToPlayer" />  <seealso name="SetObjectMaterialText" />  <seealso name="SetObjectMaterial" />  <remarks>  Objects that emit light (lampposts, police lights, bollard lights, neons etc.) that have a greater  rotation than <b><c>16.26</c></b> degrees (or <b><c>-16.26</c></b>) on either the x or y axis will  stop shining.  This effect also applies to light objects attached to other objects, players and vehicles.  If a light object is attached to a car and the car is rotated over <b><c>16.26</c></b> degrees  (like in a rollover), the object will also stop emitting light.  This is a GTA:SA issue and is not  caused by a bug in open.mp.  </remarks>  <remarks>In case the light is attached to another object, one fix for this is to set <b>SyncRotation</b>  to false in <a href="#AttachObjectToObject">AttachObjectToObject</a>.  This will ensure the light  stays at <b><c>0</c></b> rotation.  This would only really work for objects that consist ONLY of  light, so wouldn't work for the police light for example. </remarks>  <remarks>There is a limit of <a href="https://open.mp/docs/scripting/resources/limits"><b><c>1000</c></b>  objects  (<b><c>MAX_OBJECTS</c></b>)</a>.  To circumvent this limit, you can use a  <a href="https://github.com/samp-incognito/samp-streamer-plugin/tree/open.mp">streamer</a></remarks>  <returns>The ID of the object that was created, or <b><c>INVALID_OBJECT_ID</c></b> if the object  limit (<b><c>MAX_OBJECTS</c></b>) was reached.</returns> 
		</member>
		<member name="M:CreatePlayerObject" syntax="CreatePlayerObject(playerid, modelid, x, y, z, rotationX, rotationY, rotationZ, drawDistance)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="Duel_CreatePlayerArena"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<param name="playerid">
				The ID of the player to create the object for
			</param>
			<param name="modelid">
				The model to create
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to create the object at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to create the object at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to create the object at
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The x rotation of the object
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The y rotation of the object
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The z rotation of the object
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
				The distance from which objects will appear to players. <b><c>0.0</c></b>  will cause an object to render at its default distance.  Leaving this parameter out will cause objects  to be rendered at their default distance.
			</param>
			<library>omp_object</library>  <summary>Creates an object which will be visible to only one player.</summary>                    <seealso name="CreateObject" />  <seealso name="IsValidPlayerObject" />  <seealso name="DestroyPlayerObject" />  <seealso name="MovePlayerObject" />  <seealso name="StopPlayerObject" />  <seealso name="SetPlayerObjectPos" />  <seealso name="SetPlayerObjectRot" />  <seealso name="GetPlayerObjectPos" />  <seealso name="GetPlayerObjectRot" />  <seealso name="AttachPlayerObjectToPlayer" />  <seealso name="AttachObjectToPlayer" />  <returns>The ID of the object that was created, or <b><c>INVALID_OBJECT_ID</c></b> if the object  limit (<b><c>MAX_OBJECTS</c></b>) was reached.</returns> 
		</member>
		<member name="M:CreatePlayerTextDraw" syntax="CreatePlayerTextDraw(playerid, x, y, format[], ...)">
			<tagname value="PlayerText"/>
			<attribute name="native"/>
			<referrer name="mS_CreateCurrentPageTextDraw"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerHeaderTextDraw"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player to create the textdraw for
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x-Coordinate
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y-Coordinate
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The text in the textdraw.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_textdraw</library>  <summary>Creates a textdraw for a single player.  This can be used as a way around the <a href="#TextDrawCreate">global</a>  text-draw limit.</summary>          <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>  If you choose values for y that are less than 1, the first text row will be invisible and only  the shadow is visible.<br />  If part of the text is off-screen, the colour of the text will not show, only the shadow (if enabled)  will. <br />  </remarks>  <remarks>  Maximum length of textdraw is <b><c>800</c></b> characters.<br />  If you use colour codes (such as <b><c>~R~ ~G~</c></b>) beyond 255th character the legacy (SA:MP) client  will  crash trying to display the textdraw. <br />  </remarks>  <remarks>Keyboard key mapping codes (such as <b><c>~k~~VEHICLE_ENTER_EXIT~</c></b> Doesn't work beyond  255th character. </remarks>  <remarks>  The x, y coordinate is the top left coordinate for the text draw area based on a <b><c>640x480</c></b>  "canvas" (irrespective of screen resolution).  If you plan on using <a href="#PlayerTextDrawAlignment">PlayerTextDrawAlignment</a>  with alignment <b><c>3</c></b> (right), the x, y coordinate is the top right coordinate for the text  draw.<br />  This function merely CREATES the textdraw, you must use <a href="#PlayerTextDrawShow">PlayerTextDrawShow</a>  to show it to a player.<br />  It is recommended to use WHOLE numbers instead of decimal positions when creating player textdraws  to ensure resolution friendly design. <br />  </remarks>  <remarks>Player-textdraws are automatically destroyed when a player disconnects.</remarks>  <returns>The ID of the created textdraw.</returns> 
		</member>
		<member name="M:CreateSentence" syntax="CreateSentence(playerid, text[], x, y, z, rZa)">
			<stacksize value="13"/>
			<referrer name="cmd_objletters"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateAdminObject"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rZa">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CreateTextTT" syntax="CreateTextTT(playerid)">
			<stacksize value="5"/>
			<referrer name="MP_OPC"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Difft"/>
			<dependency name="Positiont"/>
			<dependency name="TEXT_DRAW_FONT_1"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="TextDrawFont"/>
			<dependency name="TextDrawSetOutline"/>
			<dependency name="TextDrawSetProportional"/>
			<dependency name="TextDrawSetShadow"/>
			<dependency name="Time18t"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CreateVehicle" syntax="CreateVehicle(modelid, spawnX, spawnY, spawnZ, angle, colour1, colour2, respawnDelay, addSiren)">
			<attribute name="native"/>
			<referrer name="Iter_CreateVehicle"/>
			<param name="modelid">
				The <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">model</a> for the vehicle
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate for the vehicle
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate for the vehicle
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate for the vehicle
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The facing angle for the vehicle
			</param>
			<param name="colour1">
				The primary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>
			</param>
			<param name="colour2">
				The secondary <a href="http://wiki.sa-mp.com/wiki/Color_ID">colour ID</a>
			</param>
			<param name="respawnDelay">
				The delay until the car is respawned without a driver in <b>seconds</b>.  Using <b><c>-1</c></b> will prevent the vehicle from respawning
			</param>
			<param name="addSiren">
				<paraminfo>bool </paraminfo>
				<b>Added in 0.3.7; will not work in earlier versions</b>.  Enables the vehicle  to have a siren, providing the vehicle has a horn (optional=<b><c>false</c></b>)
			</param>
			<library>omp_vehicle</library>  <summary>Creates a vehicle in the world.  Can be used in place of <a href="#AddStaticVehicleEx">AddStaticVehicleEx</a>  at any time in the script.</summary>                    <seealso name="DestroyVehicle" />  <seealso name="AddStaticVehicle" />  <seealso name="AddStaticVehicleEx" />  <seealso name="GetVehicleParamsSirenState" />  <seealso name="OnVehicleSpawn" />  <seealso name="OnVehicleSirenStateChange" />  <remarks>Trains can only be added with AddStaticVehicle and AddStaticVehicleEx.</remarks>  <returns>  The vehicle ID of the vehicle created (<b><c>1</c></b> to <b><c>MAX_VEHICLES</c></b>).<br />  <b><c>INVALID_VEHICLE_ID (65535)</c></b> if vehicle was not created (vehicle limit reached or invalid  vehicle model ID passed).  </returns> 
		</member>
		<member name="M:D@" syntax="D@(function[], fmat[], ...)">
			<stacksize value="9"/>
			<dependency name="@_"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="YSI_g_sCallData"/>
			<dependency name="YSI_g_sPropCaller"/>
			<dependency name="YSI_g_sPropReturn"/>
			<dependency name="YSI_g_sPropVarArg"/>
			<dependency name="__4_cells"/>
			<dependency name="__7_cells"/>
			<dependency name="__frame_offset"/>
			<dependency name="__frm"/>
			<dependency name="__hea"/>
			<dependency name="__local0_offset"/>
			<dependency name="__local1_offset"/>
			<dependency name="__local2_offset"/>
			<dependency name="__m7_cells"/>
			<dependency name="__stk"/>
			<dependency name="getproperty"/>
			<dependency name="setarg"/>
			<dependency name="setproperty"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_shortfunc</library>  <returns>  A string, the result of a named function call.  </returns>  <remarks>  <c>CallRemoteFunction</c> wrapper that handles references and string  returns.  Once the call is complete it loops through the specifier string to  look for any <c>v</c>s and gets their return values from specially named  properties (<c>"V" + idx</c> in group 8).  Can also call in the current  script instead of a remote script.  Also uses properties to enable returning  remote strings.  </remarks> 
		</member>
		<member name="M:DB_StreamObjects" syntax="DB_StreamObjects(setname[])">
			<stacksize value="1139"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="SQL"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="print"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="setname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCC_ClearBotActivity" syntax="DCC_ClearBotActivity()">
			<stacksize value="3"/>
			<dependency name="DCC_SetBotActivity"/>
		</member>
		<member name="M:DCC_ClearBotNickname" syntax="DCC_ClearBotNickname(guild)">
			<stacksize value="4"/>
			<dependency name="DCC_SetBotNickname"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
		</member>
		<member name="M:DCC_FindChannelById" syntax="DCC_FindChannelById(channel_id[])">
			<tagname value="DCC_Channel"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="channel_id">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCC_GetMessageAuthor" syntax="DCC_GetMessageAuthor(message, &amp;author)">
			<attribute name="native"/>
			<referrer name="DCC_OnMessageCreate"/>
			<param name="message">
				<paraminfo>DCC_Message </paraminfo>
			</param>
			<param name="author">
				<paraminfo>DCC_User &amp; </paraminfo>
			</param>
		</member>
		<member name="M:DCC_GetMessageChannel" syntax="DCC_GetMessageChannel(message, &amp;channel)">
			<attribute name="native"/>
			<referrer name="DCC_OnMessageCreate"/>
			<param name="message">
				<paraminfo>DCC_Message </paraminfo>
			</param>
			<param name="channel">
				<paraminfo>DCC_Channel &amp; </paraminfo>
			</param>
		</member>
		<member name="M:DCC_GetMessageContent" syntax="DCC_GetMessageContent(message, dest[], max_size)">
			<attribute name="native"/>
			<referrer name="DCC_OnMessageCreate"/>
			<param name="message">
				<paraminfo>DCC_Message </paraminfo>
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_size">
			</param>
		</member>
		<member name="M:DCC_IsUserBot" syntax="DCC_IsUserBot(user, &amp;is_bot)">
			<attribute name="native"/>
			<referrer name="DCC_OnMessageCreate"/>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
			<param name="is_bot">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnChannelCreate" syntax="DCC_OnChannelCreate(channel)">
			<stacksize value="1"/>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnChannelDelete" syntax="DCC_OnChannelDelete(channel)">
			<stacksize value="1"/>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnChannelUpdate" syntax="DCC_OnChannelUpdate(channel)">
			<stacksize value="1"/>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildCreate" syntax="DCC_OnGuildCreate(guild)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildDelete" syntax="DCC_OnGuildDelete(guild)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildMemberAdd" syntax="DCC_OnGuildMemberAdd(guild, user)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildMemberRemove" syntax="DCC_OnGuildMemberRemove(guild, user)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildMemberUpdate" syntax="DCC_OnGuildMemberUpdate(guild, user)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildMemberVoiceUpdate" syntax="DCC_OnGuildMemberVoiceUpdate(guild, user, channel)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildRoleCreate" syntax="DCC_OnGuildRoleCreate(guild, role)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="role">
				<paraminfo>DCC_Role </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildRoleDelete" syntax="DCC_OnGuildRoleDelete(guild, role)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="role">
				<paraminfo>DCC_Role </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildRoleUpdate" syntax="DCC_OnGuildRoleUpdate(guild, role)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="role">
				<paraminfo>DCC_Role </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildUpdate" syntax="DCC_OnGuildUpdate(guild)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnMessageCreate" syntax="DCC_OnMessageCreate(message)">
			<attribute name="public"/>
			<stacksize value="269"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="DCC_GetMessageAuthor"/>
			<dependency name="DCC_GetMessageChannel"/>
			<dependency name="DCC_GetMessageContent"/>
			<dependency name="DCC_IsUserBot"/>
			<dependency name="DCMD_TOTAL_CMD_SIZE"/>
			<dependency name="false"/>
			<dependency name="g_DCMDMessageID"/>
			<dependency name="true"/>
			<param name="message">
				<paraminfo>DCC_Message </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnMessageDelete" syntax="DCC_OnMessageDelete(message)">
			<stacksize value="1"/>
			<param name="message">
				<paraminfo>DCC_Message </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnMessageReaction" syntax="DCC_OnMessageReaction(message, reaction_user, emoji, reaction_type)">
			<stacksize value="1"/>
			<param name="message">
				<paraminfo>DCC_Message </paraminfo>
			</param>
			<param name="reaction_user">
				<paraminfo>DCC_User </paraminfo>
			</param>
			<param name="emoji">
				<paraminfo>DCC_Emoji </paraminfo>
			</param>
			<param name="reaction_type">
				<paraminfo>DCC_MessageReactionType </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnUserUpdate" syntax="DCC_OnUserUpdate(user)">
			<stacksize value="1"/>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
		</member>
		<member name="M:DCC_SendChannelMessage" syntax="DCC_SendChannelMessage(channel, message[], callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerFloodControl"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="IPInfoDB_Connect"/>
			<referrer name="DCMD_players"/>
			<referrer name="DCMD_stats"/>
			<referrer name="DCMD_uptime"/>
			<referrer name="DCMD_tp"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_cb"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_race"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:DCC_SetBotActivity" syntax="DCC_SetBotActivity(name[])">
			<attribute name="native"/>
			<referrer name="DCC_ClearBotActivity"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCC_SetBotNickname" syntax="DCC_SetBotNickname(guild, nickname[])">
			<attribute name="native"/>
			<referrer name="DCC_ClearBotNickname"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="nickname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCMD_GetCommandMessageId" syntax="DCMD_GetCommandMessageId()">
			<tagname value="DCC_Message"/>
			<stacksize value="1"/>
			<dependency name="g_DCMDMessageID"/>
		</member>
		<member name="M:DCMD_players" syntax="DCMD_players(user, channel, params[])">
			<attribute name="public"/>
			<stacksize value="138"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="Iterator@Player"/>
			<dependency name="cellmax"/>
			<dependency name="formatex"/>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCMD_stats" syntax="DCMD_stats(user, channel, params[])">
			<attribute name="public"/>
			<stacksize value="158"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCMD_tp" syntax="DCMD_tp(user, channel, params[])">
			<attribute name="public"/>
			<stacksize value="120"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="GetPlayerCountExNPC"/>
			<dependency name="formatex"/>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCMD_uptime" syntax="DCMD_uptime(user, channel, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="Server"/>
			<dependency name="Uptime"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DONT_USE_SCM" syntax="DONT_USE_SCM(a, b, c[])">
			<stacksize value="1"/>
			<param name="a">
			</param>
			<param name="b">
			</param>
			<param name="c">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_code</library>  <remarks>  I tried so many ways to fully break `SCM` for all cases:  <ul>  <li><c>#define</c> to give a redefinition warning.</li>  <li>Using a function to stop <c>#undef</c>.</li>  <li>Mixing compiler passes to make it both function and macro together.</li>  </ul>  Couldn't get it to work in all cases.  There's always a way around it.  </remarks> 
		</member>
		<member name="M:Debug_Code1" syntax="Debug_Code1(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			<library>y_debug</library>    <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code1{if (bla == 2) { bla++; YSI_PrintF__("%d", bla); }}  </code>  Or:  <code>  C:1{if (bla == 2) { bla++; YSI_PrintF__("%d", bla); }}  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 1</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code2" syntax="Debug_Code2(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			<library>y_debug</library>    <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code2(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:2(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 2</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code3" syntax="Debug_Code3(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			<library>y_debug</library>    <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code3(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:3(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 3</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code4" syntax="Debug_Code4(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			<library>y_debug</library>    <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code4(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:4(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 4</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code5" syntax="Debug_Code5(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			<library>y_debug</library>    <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code5(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:5(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 5</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code6" syntax="Debug_Code6(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			<library>y_debug</library>    <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code6(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:6(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 6</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code7" syntax="Debug_Code7(code)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="code">
				Code to run.
			</param>
			<library>y_debug</library>    <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code7(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  Or:  <code>  C:7(if (bla == 2) { bla++; YSI_PrintF__("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 7</c>.  </remarks> 
		</member>
		<member name="M:Debug_Disable" syntax="Debug_Disable()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="true"/>
			<library>y_debug</library>  <remarks>  Turn off level 0 prints.  </remarks>  <transition target="off"/>

		</member>
		<member name="M:Debug_Enable" syntax="Debug_Enable()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<dependency name="true"/>
			<library>y_debug</library>  <remarks>  Turn on level 0 prints.  </remarks>  <transition target="on"/>

		</member>
		<member name="M:Debug_GetState" syntax="Debug_GetState()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<automaton name="ysi_debug"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<library>y_debug</library>  <transition keep="true" target="ysi_debug : on" source="ysi_debug : "/>  <remarks>  Get the current debug state.  </remarks> <p/> <library>y_debug</library>  <transition keep="true" target="ysi_debug : on" source="ysi_debug : "/>  <remarks>  Get the current debug state.  </remarks> 
		</member>
		<member name="M:Debug_IsStringLike" syntax="Debug_IsStringLike(addr, len)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<dependency name="AMX_Read"/>
			<dependency name="__cell_shift"/>
			<dependency name="cellbytes"/>
			<dependency name="false"/>
			<param name="addr">
				A pointer to a thing that might be a string.
			</param>
			<param name="len">
				The maximum length of the supposed string.
			</param>
			<library>y_debug</library>      <returns>  Prints a string passed as a vararg to the calling function.  </returns> 
		</member>
		<member name="M:Debug_Kill_" syntax="Debug_Kill_()">
			<stacksize value="1"/>
			<library>y_debug</library>  <remarks>  Stop the server running.  </remarks> 
		</member>
		<member name="M:Debug_Level" syntax="Debug_Level(level)">
			<stacksize value="1"/>
			<dependency name="YSI_gDebugLevel"/>
			<param name="level">
				The new debug level to enable prints on.
			</param>
			<library>y_debug</library>    <remarks>  Set the debug level when the code is compiled with <c>_DEBUG=-1</c>, which  means full run-time selection.  Returns the level, or sets it when a  parameter is given.  </remarks> 
		</member>
		<member name="M:Debug_Print0" syntax="Debug_Print0(str[], ...)">
			<stacksize value="1"/>
			<automaton name="ysi_debug"/>
			<referrer name="OnJITCompile"/>
			<referrer name="Server_LoadRconFix"/>
			<referrer name="InterpolateColorLinear"/>
			<referrer name="InterpolateColorGamma"/>
			<referrer name="InterpolateColorSRGB"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="Iter_YieldEnter"/>
			<dependency name="printf"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The format specifier string.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_debug</library>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print0("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print0("variables: %d, %d", i, j);  </code>  <c>_DEBUG</c> level 0 prints are ALWAYS compiled, but are runtime switched  using the automata <c>ysi_debug</c>.  When then state is <c>ysi_debug :  on</c>, the prints are executed.  When then state is  <c>ysi_debug : off</c>, they aren't.  </remarks> <p/> <library>y_debug</library>  <param name="str">The format specifier string.</param>  <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print0("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print0("variables: %d, %d", i, j);  </code>  <c>_DEBUG</c> level 0 prints are ALWAYS compiled, but are runtime switched  using the automata <c>ysi_debug</c>.  When then state is <c>ysi_debug :  on</c>, the prints are executed.  When then state is  <c>ysi_debug : off</c>, they aren't.  </remarks> 
		</member>
		<member name="M:Debug_Print1" syntax="Debug_Print1(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The format specifier string.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_debug</library>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print1("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print1("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 1</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print2" syntax="Debug_Print2(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The format specifier string.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_debug</library>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print2("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print2("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 2</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print3" syntax="Debug_Print3(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The format specifier string.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_debug</library>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print3("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print3("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 3</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print4" syntax="Debug_Print4(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The format specifier string.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_debug</library>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print4("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print4("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 4</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print5" syntax="Debug_Print5(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The format specifier string.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_debug</library>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print5("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print5("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 5</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print6" syntax="Debug_Print6(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The format specifier string.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_debug</library>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print6("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print6("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 6</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print7" syntax="Debug_Print7(str[], ...)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The format specifier string.
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_debug</library>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print7("variables: %d, %d", i, j);  </code>  Or:  <code>  Debug_Print7("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 7</c>.  </remarks> 
		</member>
		<member name="M:Debug_PrintArray" syntax="Debug_PrintArray(arr[], size)">
			<stacksize value="108"/>
			<dependency name="Debug_PrintArray"/>
			<dependency name="YSI_Format__"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>y_debug</library>  <remarks>  Does some strange mangling of <c>YSI_FILTERSCRIPT</c> because at one point  I found a compiler bug where the first automata in the script could  conflict with the first variable in the script.  I don't know what  triggered it, and it has never shown up since I messed about with this file  to try mangle some things.  Never the less, if it ever happens again this  code might detect it.  Actually, that's less likely now, since that  variable is now very unlikely to be the first in the script ever.  </remarks> 
		</member>
		<member name="M:Debug_PrintQ_IMPL" syntax="Debug_PrintQ_IMPL(tag, size, expr[], file[], line, ...)">
			<stacksize value="150"/>
			<dependency name="AMX_GetTagByValue"/>
			<dependency name="Debug_IsStringLike"/>
			<dependency name="Debug_PrintQ_PRINT"/>
			<dependency name="YSI_PrintF__"/>
			<dependency name="__param5_offset"/>
			<dependency name="fclose"/>
			<dependency name="format"/>
			<dependency name="ftemporary"/>
			<dependency name="fwrite"/>
			<dependency name="getarg"/>
			<param name="tag">
				<paraminfo>Debug_PrintQ_TAG </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Debug_PrintQ_SIZEOF </paraminfo>
			</param>
			<param name="expr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="file">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="line">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_debug</library>  <remarks>  Try and print a wide range of variables, with their source expression.  Examples:  new arr[] = {33, 33, 33};  new Float:farr[] = {11.0, 11.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0};  new MyCustomTag:mctarr[] = { MyCustomTag:6, MyCustomTag:7 };  new str[] = "hello";  new var1 = 2;  new Float:f = 5.5;  Debug_Q(str);  Debug_Q(var1);  Debug_Q(f);  Debug_Q(arr);  Debug_Q(farr, 7);  Debug_Q(mctarr);  If an array length cannot be determined you can pass it as a second arg.  All tags are supported, the output from the above is:  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:16  str[6] = "hello"  (full data dumped to: _fgdjkeGjAz.tmp)  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:17  var1 = 2  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:18  Float:f = 5.500  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:19  arr[3] = { 33, 33, 33 }  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:20  Float:farr[7] = { 11.000, 11.000, 11.000, 12.000, 13.000, ... }  (full data dumped to: _HOf6OQgcC8.tmp)  [Q] C:\Users\Alex\Documents\SA-MP\gamemodes\IsMaybeAString.pwn:21  MyCustomTag:mctarr[2] = { 6, 7 }  Note: Temporary files are automatically deleted after a month.  </remarks> 
		</member>
		<member name="M:Debug_PrintQ_PRINT" syntax="Debug_PrintQ_PRINT(str[], expr[], &amp;size, addr)">
			<attribute name="native"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="expr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Debug_PrintQ_SIZEOF &amp; </paraminfo>
			</param>
			<param name="addr">
			</param>
		</member>
		<member name="M:DelayBanEx" syntax="DelayBanEx(playerid, reason[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="BanEx"/>
			<param name="playerid">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DeleteCP" syntax="DeleteCP(playerid)">
			<stacksize value="11"/>
			<referrer name="cmd_dcp"/>
			<dependency name="AmBuilding"/>
			<dependency name="BCPs"/>
			<dependency name="BCPs"/>
			<dependency name="BCPsize"/>
			<dependency name="BCPsize"/>
			<dependency name="BCurrentCP"/>
			<dependency name="BTotalCPs"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerRaceCheckpoint"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DeleteMovingData" syntax="DeleteMovingData(movingID)">
			<stacksize value="1"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_dano"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Moving"/>
			<dependency name="Moving"/>
			<dependency name="MovingToX"/>
			<dependency name="MovingToY"/>
			<dependency name="MovingToZ"/>
			<dependency name="ReturnPosX"/>
			<dependency name="ReturnPosY"/>
			<dependency name="ReturnPosZ"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="false"/>
			<dependency name="idUsed"/>
			<param name="movingID">
			</param>
		</member>
		<member name="M:DeletePVar" syntax="DeletePVar(playerid, pvar[])">
			<attribute name="native"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<param name="playerid">
				The ID of the player whose player variable to delete
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable to delete
			</param>
			<library>omp_variable</library>  <summary>Deletes a previously set player variable.</summary>      <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <remarks>Once a variable is deleted, attempts to retrieve the value will return <b><c>0</c></b> (for  integers and floats and <b><c>NULL</c></b> for strings).</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  Either the player specified isn't connected or  there is no variable set with the given name.  </returns> 
		</member>
		<member name="M:DeleteTextTT" syntax="DeleteTextTT(playerid)">
			<stacksize value="7"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Difft"/>
			<dependency name="Positiont"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="TT_ID"/>
			<dependency name="TextDrawDestroy"/>
			<dependency name="Time18t"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DerbyTimer" syntax="DerbyTimer()">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,_:)"/>
			<dependency name="ActiveDerby"/>
			<dependency name="DerbyLoaded"/>
			<dependency name="DerbyPickups"/>
			<dependency name="DerbyPlayers"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbyTime"/>
			<dependency name="DerbyVehicle"/>
			<dependency name="DerbyZ"/>
			<dependency name="DestroyDerbyObjects"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="GetVehicleVirtualWorld"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendMessageToMinigame"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:DestroyActor" syntax="DestroyActor(actorid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Iter_DestroyActor"/>
			<param name="actorid">
				The ID of the actor to destroy.  Returned by <a href="#CreateActor">CreateActor</a>
			</param>
			<library>omp_actor</library>  <summary>Destroy an actor which was created with <a href="#CreateActor">CreateActor</a>.</summary>    <seealso name="CreateActor" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The actor with the ID specified does not exist.  </returns> 
		</member>
		<member name="M:DestroyAllDynamicObjects" syntax="DestroyAllDynamicObjects()">
			<attribute name="native"/>
			<referrer name="cmd_daso"/>
		</member>
		<member name="M:DestroyAnnText" syntax="DestroyAnnText(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="AnnText"/>
			<dependency name="AnnTextShown"/>
			<dependency name="PlayerTextDrawHide"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DestroyDerbyObjects" syntax="DestroyDerbyObjects()">
			<stacksize value="7"/>
			<referrer name="DerbyTimer"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="Streamer_GetIntData"/>
		</member>
		<member name="M:DestroyDynamic3DTextLabel" syntax="DestroyDynamic3DTextLabel(id)">
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="Login"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="id">
				<paraminfo>Text3D </paraminfo>
			</param>
		</member>
		<member name="M:DestroyDynamicActor" syntax="DestroyDynamicActor(actorid)">
			<attribute name="native"/>
			<referrer name="cmd_dactor"/>
			<param name="actorid">
			</param>
		</member>
		<member name="M:DestroyDynamicCP" syntax="DestroyDynamicCP(checkpointid)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:DestroyDynamicMapIcon" syntax="DestroyDynamicMapIcon(iconid)">
			<attribute name="native"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dammi"/>
			<param name="iconid">
			</param>
		</member>
		<member name="M:DestroyDynamicObject" syntax="DestroyDynamicObject(objectid)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_dramp"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_dsor"/>
			<referrer name="OnPlayerSelectDynamicObject"/>
			<referrer name="DestroyDerbyObjects"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_dmao"/>
			<referrer name="Unwash"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:DestroyDynamicPickup" syntax="DestroyDynamicPickup(pickupid)">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="RemoveWeaponDropped"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_damp"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_cancelgiftbox"/>
			<referrer name="cmd_delgiftbox"/>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:DestroyObject" syntax="DestroyObject(objectid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_rneon"/>
			<referrer name="cmd_fps"/>
			<referrer name="AddNeon"/>
			<referrer name="RemoveNeon"/>
			<param name="objectid">
				The ID of the object to destroy.  Returned by <a href="#CreateObject">CreateObject</a>
			</param>
			<library>omp_object</library>  <summary>Destroys (removes) an object that was created using <a href="#CreateObject">CreateObject</a>.</summary>    <seealso name="CreateObject" />  <seealso name="IsValidObject" />  <seealso name="DestroyPlayerObject" /> 
		</member>
		<member name="M:DestroyPlayerObject" syntax="DestroyPlayerObject(playerid, objectid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="Duel_DestroyPlayerArena"/>
			<param name="playerid">
				The ID of the player whose player-object to destroy
			</param>
			<param name="objectid">
				The ID of the player-object to destroy.  Returned by <a href="#CreatePlayerObject">CreatePlayerObject</a>
			</param>
			<library>omp_object</library>  <summary>Destroy a player-object created using <a href="#CreatePlayerObject">CreatePlayerObject</a>.</summary>      <seealso name="CreatePlayerObject" />  <seealso name="IsValidPlayerObject" />  <seealso name="DestroyObject" /> 
		</member>
		<member name="M:DestroyTextDraws" syntax="DestroyTextDraws(i)">
			<stacksize value="3"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<dependency name="TDDrift"/>
			<dependency name="TextDrawDestroy"/>
			<param name="i">
			</param>
		</member>
		<member name="M:DestroyVehicle" syntax="DestroyVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Iter_DestroyVehicle"/>
			<param name="vehicleid">
				The ID of the vehicle to destroy
			</param>
			<library>omp_vehicle</library>  <summary>Destroy a vehicle.  It will disappear instantly.</summary>    <seealso name="CreateVehicle" />  <seealso name="RemovePlayerFromVehicle" />  <seealso name="SetVehicleToRespawn" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:DestroyVehicleEx" syntax="DestroyVehicleEx(vehicleid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_tt"/>
			<referrer name="Race_Rotation"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="nofun"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="SetVehicleToRespawn"/>
			<dependency name="firststatic"/>
			<dependency name="laststatic"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Detonate" syntax="Detonate(playerid, v)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateExplosion"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="v">
			</param>
		</member>
		<member name="M:DisablePlayerRaceCheckpoint" syntax="DisablePlayerRaceCheckpoint(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="TT_Exit"/>
			<referrer name="DeleteCP"/>
			<referrer name="ClearRace"/>
			<referrer name="RaceCountDown"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="playerid">
				The player to disable the current checkpoint for
			</param>
			<library>omp_checkpoint</library>  <summary>Disable any initialized race checkpoints for a specific player, since you can only have  one at any given time.</summary>    <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" /> 
		</member>
		<member name="M:DisableRemoteVehicleCollisions" syntax="DisableRemoteVehicleCollisions(playerid, disable)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_evc"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_join"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="playerid">
				The ID of the player for whom you want to disable collisions
			</param>
			<param name="disable">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to disable collisions, <b><c>0</c></b> to enable collisions
			</param>
			<library>omp_player</library>  <summary>Disables collisions between occupied vehicles for a player.</summary>      <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:DisableSpawnProtection" syntax="DisableSpawnProtection(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SetPlayerChatBubble"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SpawnProtect"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DisasmWrite" syntax="DisasmWrite(filename[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="ScriptInit_Dump"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DistanceToPoint" syntax="DistanceToPoint(X1, Y1, Z1, X2, Y2, Z2)">
			<tagname value="Float"/>
			<stacksize value="3"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="floatsqroot"/>
			<param name="X1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="X2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:DoLevenshteinDistance" syntax="DoLevenshteinDistance(a[], lenA, b[], lenB, matrix[])">
			<stacksize value="9"/>
			<referrer name="LevenshteinDistance"/>
			<dependency name="__cell_shift"/>
			<dependency name="__hea"/>
			<dependency name="min"/>
			<param name="a">
				<paraminfo> [] </paraminfo>
				First string to compare.
			</param>
			<param name="lenA">
				Length of the first string.
			</param>
			<param name="b">
				<paraminfo> [] </paraminfo>
				Second string to compare.
			</param>
			<param name="lenB">
				Length of the second string.
			</param>
			<param name="matrix">
				<paraminfo> [] </paraminfo>
				Storage for the calculations.
			</param>
			<library>y_utils - similarity</library>            <returns>  The levenshtein difference (0 if the same).  </returns>  <remarks>  This function is the internal implementation of a Levenshtein distance when  neither string is packed.  The <c>matrix</c> parameter is rewritten at the  start of the function to a larger block of memory, but is still passed in so  that the rest of the generated code is correct in terms of lookups.  </remarks> 
		</member>
		<member name="M:DoLevenshteinDistancePackA" syntax="DoLevenshteinDistancePackA(a[], lenA, b[], lenB, matrix[])">
			<stacksize value="9"/>
			<referrer name="LevenshteinDistance"/>
			<dependency name="__cell_shift"/>
			<dependency name="__hea"/>
			<dependency name="min"/>
			<param name="a">
				<paraminfo> [] </paraminfo>
				First string to compare.
			</param>
			<param name="lenA">
				Length of the first string.
			</param>
			<param name="b">
				<paraminfo> [] </paraminfo>
				Second string to compare.
			</param>
			<param name="lenB">
				Length of the second string.
			</param>
			<param name="matrix">
				<paraminfo> [] </paraminfo>
				Storage for the calculations.
			</param>
			<library>y_utils - similarity</library>            <returns>  The levenshtein difference (0 if the same).  </returns>  <remarks>  This function is the internal implementation of a Levenshtein distance when  the shorter string is packed.  The <c>matrix</c> parameter is rewritten at  the start of the function to a larger block of memory, but is still passed  in so that the rest of the generated code is correct in terms of lookups.  </remarks> 
		</member>
		<member name="M:DoLevenshteinDistancePackAB" syntax="DoLevenshteinDistancePackAB(a[], lenA, b[], lenB, matrix[])">
			<stacksize value="9"/>
			<referrer name="LevenshteinDistance"/>
			<dependency name="__cell_shift"/>
			<dependency name="__hea"/>
			<dependency name="min"/>
			<param name="a">
				<paraminfo> [] </paraminfo>
				First string to compare.
			</param>
			<param name="lenA">
				Length of the first string.
			</param>
			<param name="b">
				<paraminfo> [] </paraminfo>
				Second string to compare.
			</param>
			<param name="lenB">
				Length of the second string.
			</param>
			<param name="matrix">
				<paraminfo> [] </paraminfo>
				Storage for the calculations.
			</param>
			<library>y_utils - similarity</library>            <returns>  The levenshtein difference (0 if the same).  </returns>  <remarks>  This function is the internal implementation of a Levenshtein distance when  both strings are packed.  The <c>matrix</c> parameter is rewritten at the  start of the function to a larger block of memory, but is still passed in so  that the rest of the generated code is correct in terms of lookups.  </remarks> 
		</member>
		<member name="M:DoLevenshteinDistancePackB" syntax="DoLevenshteinDistancePackB(a[], lenA, b[], lenB, matrix[])">
			<stacksize value="9"/>
			<referrer name="LevenshteinDistance"/>
			<dependency name="__cell_shift"/>
			<dependency name="__hea"/>
			<dependency name="min"/>
			<param name="a">
				<paraminfo> [] </paraminfo>
				First string to compare.
			</param>
			<param name="lenA">
				Length of the first string.
			</param>
			<param name="b">
				<paraminfo> [] </paraminfo>
				Second string to compare.
			</param>
			<param name="lenB">
				Length of the second string.
			</param>
			<param name="matrix">
				<paraminfo> [] </paraminfo>
				Storage for the calculations.
			</param>
			<library>y_utils - similarity</library>            <returns>  The levenshtein difference (0 if the same).  </returns>  <remarks>  This function is the internal implementation of a Levenshtein distance when  th elongest stringis  packed.  The <c>matrix</c> parameter is rewritten at  the start of the function to a larger block of memory, but is still passed  in so that the rest of the generated code is correct in terms of lookups.  </remarks> 
		</member>
		<member name="M:DoesPlayerHasWeapon" syntax="DoesPlayerHasWeapon(playerid, weaponid)">
			<stacksize value="9"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<dependency name="GetPlayerWeaponData"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:DottedToIntIP" syntax="DottedToIntIP(ip[], &amp;out)">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="CensorDottedIP"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				Dot notation IP to convert to an integer.
			</param>
			<param name="out">
				<paraminfo> &amp; </paraminfo>
				Destination.
			</param>
			<library>y_utils - ip</library>      <returns>  <c>true</c> if the conversion worked, <c>false</c> if the input didn't start  with a valid IP.  </returns>  <remarks>  Converts an IP from a string, such as <c>192.168.0.1</c>, converted to a  32-bit integer, such as <c>0xC0A80001</c>.  Does far more checks on the  input than the older <c>IPToInt</c>, but that function isn't deprecated for  use in situations where the input format is know, such as directly after a  call to <c>GetPlayerIp</c>.  </remarks> 
		</member>
		<member name="M:Drift" syntax="Drift(g)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerTheoreticAngle"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVType"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayerDriftCancellation"/>
			<dependency name="ReturnPlayerAngle"/>
			<dependency name="SavedPos"/>
			<dependency name="SavedPos"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TDrif"/>
			<dependency name="false"/>
			<dependency name="floatabs"/>
			<dependency name="floatadd"/>
			<dependency name="floatmul"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<dependency name="floatsub"/>
			<dependency name="floatval"/>
			<dependency name="sXX"/>
			<dependency name="sYY"/>
			<dependency name="sZZ"/>
			<param name="g">
			</param>
		</member>
		<member name="M:DriftExit" syntax="DriftExit(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="PlayerDriftCancellation"/>
			<dependency name="TDriftPointsNow"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DriftSave" syntax="DriftSave(playerid)">
			<stacksize value="138"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CountDownDriftTimer"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftID"/>
			<dependency name="DriftName"/>
			<dependency name="DriftName"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="DriftVehicle"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerDriftCancellation"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="TDDrift"/>
			<dependency name="TDrif"/>
			<dependency name="TDriftPointsNow"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TimeLeft"/>
			<dependency name="TimerA"/>
			<dependency name="TimerC"/>
			<dependency name="eDriftTimer"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DuelStart" syntax="DuelStart(playerid, player)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="player">
			</param>
		</member>
		<member name="M:Duel_CreatePlayerArena" syntax="Duel_CreatePlayerArena(playerid, num)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="CreatePlayerObject"/>
			<dependency name="DuelArenaCreated"/>
			<dependency name="DuelBillboards"/>
			<dependency name="DuelDynamicObj"/>
			<dependency name="DuelDynamicObj"/>
			<dependency name="DuelObj"/>
			<dependency name="DuelObj"/>
			<dependency name="DuelPlayerSign"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="pDuelObj"/>
			<dependency name="pDuelObj"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="num">
			</param>
		</member>
		<member name="M:Duel_DestroyPlayerArena" syntax="Duel_DestroyPlayerArena(playerid)">
			<stacksize value="5"/>
			<referrer name="Duel_End"/>
			<dependency name="DestroyPlayerObject"/>
			<dependency name="DuelArenaCreated"/>
			<dependency name="false"/>
			<dependency name="pDuelObj"/>
			<dependency name="pDuelObj"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Duel_End" syntax="Duel_End(winner, loser, reason)">
			<attribute name="public"/>
			<stacksize value="55"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="DeathWords"/>
			<dependency name="DeathWords"/>
			<dependency name="DuelInvitation"/>
			<dependency name="DuelStarting"/>
			<dependency name="DuelWeapon"/>
			<dependency name="DuelWeapon"/>
			<dependency name="DuelWorld"/>
			<dependency name="Duel_DestroyPlayerArena"/>
			<dependency name="GetDuelTick"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetUserID"/>
			<dependency name="InsertDuelResult"/>
			<dependency name="IsDueling"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="NickName"/>
			<dependency name="NickName"/>
			<dependency name="ResetPlayerArmor"/>
			<dependency name="ResetPlayerHealth"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<dependency name="gettime"/>
			<dependency name="random"/>
			<dependency name="xstring"/>
			<param name="winner">
			</param>
			<param name="loser">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Duel_EndWait" syntax="Duel_EndWait(player1, player2)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="DuelInvitation"/>
			<dependency name="DuelWaiting"/>
			<dependency name="IsDueling"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<param name="player1">
			</param>
			<param name="player2">
			</param>
		</member>
		<member name="M:Duel_Initiate" syntax="Duel_Initiate(player1, player2, time)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="cmd_duel"/>
			<dependency name="DuelInvitation"/>
			<dependency name="DuelStarting"/>
			<dependency name="DuelTicks"/>
			<dependency name="DuelWeapon"/>
			<dependency name="DuelWeapon"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetTickCount"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsDueling"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ShowPlayerNameTagForPlayer"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="tickcount"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="player1">
			</param>
			<param name="player2">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:Duel_RandomizeSigns" syntax="Duel_RandomizeSigns(playerid)">
			<stacksize value="4"/>
			<referrer name="cmd_duel"/>
			<dependency name="DuelPlayerSign"/>
			<dependency name="DuelPlayerSign"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Duel_SetPlayerPos" syntax="Duel_SetPlayerPos(spot, playerid)">
			<stacksize value="6"/>
			<referrer name="cmd_duel"/>
			<dependency name="DuelPos"/>
			<dependency name="DuelPos"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerPos"/>
			<param name="spot">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DumpAMX_Write" syntax="DumpAMX_Write(filename[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ENUM_PAWNDOC" syntax="ENUM_PAWNDOC(symbol[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  There's a bug with the pawndoc for enums.  They loose the documentation, or  get some other documentation unless they're immediately followed by another  declaration, most notably a function.  This uses the same  <c>PAWNDOC&lt;&gt;</c> trick as <c>FUNC_PAWNDOC</c> to use the <c>enum</c>  name as a symbol, this time passing it to a function that should always  exist.  This ensures the docs are attached to the correct symbol and the  additional function is well documented.  </remarks> 
		</member>
		<member name="M:EasterEggPickup" syntax="EasterEggPickup(playerid, pickupid)">
			<stacksize value="13"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="CountPlayerEggs"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="EasterPickup"/>
			<dependency name="Easter_Egg_Update"/>
			<dependency name="GetUserID"/>
			<dependency name="MyEggs"/>
			<dependency name="MyEggs"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Reward_Send"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendInfoText"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:Easter_Egg_Update" syntax="Easter_Egg_Update(playerid, slot)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<referrer name="EasterEggPickup"/>
			<dependency name="GetUserID"/>
			<dependency name="SQL"/>
			<dependency name="SendInfoText"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:EditAttachedObject" syntax="EditAttachedObject(playerid, index)">
			<attribute name="native"/>
			<referrer name="cmd_eho"/>
			<param name="playerid">
				The ID of the player to enter in to edition mode
			</param>
			<param name="index">
				The index (slot) of the attached object to edit
			</param>
			<library>omp_object</library>  <summary>Enter edition mode for an attached object.</summary>      <seealso name="SetPlayerAttachedObject" />  <seealso name="RemovePlayerAttachedObject" />  <seealso name="IsPlayerAttachedObjectSlotUsed" />  <seealso name="EditObject" />  <seealso name="EditPlayerObject" />  <seealso name="SelectObject" />  <seealso name="CancelEdit" />  <seealso name="OnPlayerEditAttachedObject" />  <remarks>You can move the camera while editing by pressing and holding the <b>spacebar</b> (or <b>W</b>  in vehicle) and moving your mouse.</remarks>  <remarks>  There are 7 clickable buttons in edition mode.<br />  The three single icons that have x/y/z on them can be dragged to edit position/rotation/scale.<br  />  The four buttons in a row are to select the edition mode and save edition: [Move] [Rotate] [Scale]  [Save].<br />  Clicking save will call <a href="#OnPlayerEditAttachedObject">OnPlayerEditAttachedObject</a>.  </remarks>  <remarks>Players will be able to scale objects up to a very large or negative value size.  Limits  should be put in place using <a href="#OnPlayerEditAttachedObject">OnPlayerEditAttachedObject</a>  to abort the edit.</remarks>  <returns><b><c>1</c></b> on success and <b><c>0</c></b> on failure.</returns> 
		</member>
		<member name="M:EditDynamicObject" syntax="EditDynamicObject(playerid, objectid)">
			<attribute name="native"/>
			<referrer name="cmd_eo"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:EnablePMs" syntax="EnablePMs(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="PMs"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:EnableStuntBonusForAll" syntax="EnableStuntBonusForAll(enable)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="enable">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable stunt bonuses or <b><c>0</c></b> to disable them
			</param>
			<library>omp_core</library>  <summary>Enables or disables stunt bonuses for all players.  If enabled, players will receive monetary  rewards when performing a stunt in a vehicle (e.g.  a wheelie).</summary>    <seealso name="EnableStuntBonusForPlayer" /> 
		</member>
		<member name="M:EnableStuntBonusForPlayer" syntax="EnableStuntBonusForPlayer(playerid, enable)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_esbfp"/>
			<param name="playerid">
				The ID of the player to toggle stunt bonuses for
			</param>
			<param name="enable">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable stunt bonuses and <b><c>0</c></b> to disable them
			</param>
			<library>omp_player</library>  <summary>Toggle stunt bonuses for a player.  Enabled by default.</summary>      <seealso name="EnableStuntBonusForAll" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player is not connected.  </returns> 
		</member>
		<member name="M:EndOfLine" syntax="EndOfLine(line[], pos)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="endofline"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="strlen"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
				String to check.
			</param>
			<param name="pos">
				Postion to start from.
			</param>
			<library>y_utils - strings</library>      <remarks>  Checks if the current point in a line is the end of non-whitespace data.  </remarks> 
		</member>
		<member name="M:F@" syntax="F@(calltype, master, heapptr)">
			<stacksize value="1"/>
			<dependency name="YSI_g_sCallData"/>
			<dependency name="__args_offset"/>
			<dependency name="__hea"/>
			<param name="calltype">
			</param>
			<param name="master">
			</param>
			<param name="heapptr">
			</param>
			<library>y_shortfunc</library>  <remarks>  A precursor to <c>D@</c> and <c>E@</c> that does some stack and heap  manipulation before they are called.  </remarks> 
		</member>
		<member name="M:F@C" syntax="F@C(output[], ___unused, color)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="format"/>
			<param name="output">
				<paraminfo> [512] </paraminfo>
			</param>
			<param name="___unused">
				<paraminfo>FMAT@2 </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:F@P" syntax="F@P(output[], ___unused, playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="format"/>
			<dependency name="strcat"/>
			<param name="output">
				<paraminfo> [512] </paraminfo>
			</param>
			<param name="___unused">
				<paraminfo>FMAT@2 </paraminfo>
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:F@W" syntax="F@W(output[], ___unused, weapon)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="strcat"/>
			<param name="output">
				<paraminfo> [512] </paraminfo>
			</param>
			<param name="___unused">
				<paraminfo>FMAT@2 </paraminfo>
			</param>
			<param name="weapon">
			</param>
		</member>
		<member name="M:F@X" syntax="F@X(output[], ___unused, value)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="format"/>
			<param name="output">
				<paraminfo> [512] </paraminfo>
			</param>
			<param name="___unused">
				<paraminfo>FMAT@2 </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:F@p" syntax="F@p(output[], ___unused, playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="strcat"/>
			<param name="output">
				<paraminfo> [512] </paraminfo>
			</param>
			<param name="___unused">
				<paraminfo>FMAT@2 </paraminfo>
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:F@v" syntax="F@v(output[], ___unused, modelid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="strcat"/>
			<param name="output">
				<paraminfo> [512] </paraminfo>
			</param>
			<param name="___unused">
				<paraminfo>FMAT@2 </paraminfo>
			</param>
			<param name="modelid">
			</param>
		</member>
		<member name="M:F@w" syntax="F@w(output[], ___unused, weapon)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="strcat"/>
			<param name="output">
				<paraminfo> [512] </paraminfo>
			</param>
			<param name="___unused">
				<paraminfo>FMAT@2 </paraminfo>
			</param>
			<param name="weapon">
			</param>
		</member>
		<member name="M:FIXES_OnClientCheckResponse" syntax="FIXES_OnClientCheckResponse(playerid, actionid, memaddr, retndata)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<automaton name="OnClientCheckResponse"/>
			<referrer name="OnClientCheckResponse"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="KillTimer"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="YSI_g_sTimers"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="actionid">
			</param>
			<param name="memaddr">
			</param>
			<param name="retndata">
			</param>
			<library>y_rconfix</library>  <remarks>  Call the hooked version of <c>OnClientCheckResponse</c>, regardless of how  this version is called.  So either natively or using the fix here.  But  use states to only call the fix version in the gamemode, not in  filterscripts, since it works there already.  </remarks> 
		</member>
		<member name="M:FUNC_PAWNDOC" syntax="FUNC_PAWNDOC(symbol[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  Creates fake functions that Pawndoc comments can be attached to in the first  compilation phase, before the real macros are created.  Macros can't have  documentation comments, but why not?  They need documenting...  <p/>  Used internally as <c>YSI_FUNC_PAWNDOC</c>.  <p/>  This creates a native of the same name, then calls it from a special function  (called <c>PAWNDOC</c>) with a state set to the name of this function, to  avoid declaring multiple functions in the XML while ensuring that this fake  function is in the XML.  Natives aren't in the output unless they are called,  but we don't have to call them correctly because the container function is  never called.  You do need a fallback version of `PAWNDOC` to catch all other  state variations declared elsewhere in your script.  <p/>  <code>  #if defined MACRO_NAME                                                   <br /><indent />  // `#define MACRO_NAME` exists previously, don't document it here.   <br /><indent />  _FIXES_HIDE_PAWNDOC(SIMILAR_NAME);                                   <br />  #else                                                                    <br /><indent />  // Doesn't exist.  Document it and define it.                        <br /><indent />  _FIXES_FUNC_PAWNDOC(MACRO_NAME(parameters));                         <br /><indent />  #define MACRO_NAME(%0) (%0)                                          <br />  #endif  </code>  <br />  </remarks> 
		</member>
		<member name="M:Files_Copy" syntax="Files_Copy(src[], dst[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="Files_CopyRange"/>
			<dependency name="I@"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="flength"/>
			<dependency name="io_read"/>
			<param name="src">
				<paraminfo> [] </paraminfo>
				The name of the input file.
			</param>
			<param name="dst">
				<paraminfo> [] </paraminfo>
				The name of the output file.
			</param>
			<library>y_utils - files</library>      <remarks>  Copies a file from <c>src</c> to <c>dst</c>.  </remarks> 
		</member>
		<member name="M:Files_CopyRange" syntax="Files_CopyRange(i, end, dst[])">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="Files_DoCopy"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="YSI_gUnsafeHugeString"/>
			<dependency name="_YSI_FGetChar__"/>
			<dependency name="__cell_shift"/>
			<dependency name="cellbytes"/>
			<dependency name="false"/>
			<dependency name="fblockread"/>
			<dependency name="fblockwrite"/>
			<dependency name="fclose"/>
			<dependency name="fputchar"/>
			<dependency name="io_write"/>
			<dependency name="min"/>
			<param name="i">
				<paraminfo>File </paraminfo>
				Handle to the file to copy.
			</param>
			<param name="end">
				How much of the file to copy.
			</param>
			<param name="dst">
				<paraminfo> [] </paraminfo>
				The name of the output file.
			</param>
			<library>y_utils - files</library>        <remarks>  Copy part of a file from the current read pointer, for <c>end</c> bytes.  </remarks> 
		</member>
		<member name="M:Files_DoCopy" syntax="Files_DoCopy(i, dst[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="Files_CopyRange"/>
			<dependency name="I@"/>
			<dependency name="fclose"/>
			<dependency name="flength"/>
			<dependency name="fseek"/>
			<dependency name="seek_start"/>
			<param name="i">
				<paraminfo>File </paraminfo>
				Handle to the file to copy.
			</param>
			<param name="dst">
				<paraminfo> [] </paraminfo>
				The name of the output file.
			</param>
			<library>y_utils - files</library>      <remarks>  Fast file copy routine.  Surprisingly widely used in YSI, in places where  temp files were used and <c>fseek</c>ed to the start.  Closes the file.  </remarks> 
		</member>
		<member name="M:Files_Move" syntax="Files_Move(src[], dst[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="Files_CopyRange"/>
			<dependency name="I@"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="flength"/>
			<dependency name="fremove"/>
			<dependency name="io_read"/>
			<param name="src">
				<paraminfo> [] </paraminfo>
				The name of the input file.
			</param>
			<param name="dst">
				<paraminfo> [] </paraminfo>
				The name of the output file.
			</param>
			<library>y_utils - files</library>      <remarks>  Moves a file from <c>src</c> to <c>dst</c>.  </remarks> 
		</member>
		<member name="M:FindSeat" syntax="FindSeat(vehicleid)">
			<stacksize value="6"/>
			<dependency name="IsSeatTaken"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:FloatAbs" syntax="FloatAbs(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<library>y_utils - maths</library>  <summary>  Float:FloatAbs(Float:number);  </summary>  <param name="number">The number to get the absolute value of.</param>  <returns>  The absolute value of a number.  </returns>  <remarks>  Get the absolute value of a number.  Easy in IEEE754, just remove the MSB.  </remarks> 
		</member>
		<member name="M:ForbidWeaponDrop" syntax="ForbidWeaponDrop(weaponid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="ForbiddenWeaponsDrop"/>
			<dependency name="true"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:ForceClassSelection" syntax="ForceClassSelection(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_changetdm"/>
			<param name="playerid">
				The player to send back to class selection
			</param>
			<library>omp_class</library>  <summary>Forces a player to go back to class selection.</summary>    <seealso name="AddPlayerClass" />  <seealso name="SetPlayerSkin" />  <seealso name="GetPlayerSkin" />  <seealso name="OnPlayerRequestClass" />  <remarks>The player will not return to class selection until they re-spawn.  This can be achieved  with <a href="#TogglePlayerSpectating">TogglePlayerSpectating</a>, as seen in the below example.</remarks> 
		</member>
		<member name="M:FreeWeaponDrop" syntax="FreeWeaponDrop(weaponid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="ForbiddenWeaponsDrop"/>
			<dependency name="false"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:G@" syntax="G@(...)">
			<stacksize value="1"/>
			<dependency name="G@"/>
			<dependency name="Q@"/>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_shortfunc</library>  <remarks>  Just a dead-end for spare parameters.  Implementation of  <c>__pragma("unused", x);</c>, which disables the warning for a unused  variable, by using it!  Returns a string, in case that's useful in macros.  </remarks> 
		</member>
		<member name="M:GPCI" syntax="GPCI(playerid, serial[], len)">
			<attribute name="native"/>
			<referrer name="Save"/>
			<referrer name="IPInfoDB_Connect"/>
			<param name="playerid">
				The player to get the unique ID of
			</param>
			<param name="serial">
				<paraminfo> [] </paraminfo>
				Where to save the unique ID
			</param>
			<param name="len">
				The size of "serial" (the serial)
			</param>
			<library>omp_network</library>  <summary>Get a players unique ID.</summary>       
		</member>
		<member name="M:GameTextForAll" syntax="GameTextForAll(format[], time, style, ...)">
			<attribute name="native"/>
			<referrer name="countdown"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_nospawnkill"/>
			<referrer name="cmd_ann"/>
			<referrer name="cmd_ann2"/>
			<referrer name="cmd_ann3"/>
			<referrer name="cmd_ann4"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The text to be displayed or formatted
			</param>
			<param name="time">
				The duration of the text being shown in milliseconds
			</param>
			<param name="style">
				The style of text to be displayed
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_core</library>  <summary>Shows 'game text' (on-screen text) for a certain length of time for all players.</summary>        <seealso name="GameTextForPlayer" />  <seealso name="TextDrawShowForAll" />  <returns>This function always returns <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:GameTextForPlayer" syntax="GameTextForPlayer(playerid, format[], time, style, ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="countdownr"/>
			<referrer name="RmInvis"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_delivery"/>
			<referrer name="cmd_michelles"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_nos"/>
			<referrer name="cmd_rafinha"/>
			<referrer name="cmd_skydive"/>
			<referrer name="cmd_ic"/>
			<referrer name="cmd_lcp"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerText"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="cmd_playduel"/>
			<referrer name="DuelStart"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="cmd_hideradar"/>
			<referrer name="cmd_showradar"/>
			<referrer name="cmd_healme"/>
			<referrer name="cmd_rneon"/>
			<referrer name="cmd_setmyradio"/>
			<referrer name="cmd_myradio"/>
			<referrer name="cmd_cc"/>
			<referrer name="cmd_boot"/>
			<referrer name="cmd_bonnet"/>
			<referrer name="cmd_engine"/>
			<referrer name="cmd_knife"/>
			<referrer name="cmd_golfclub"/>
			<referrer name="cmd_bat"/>
			<referrer name="cmd_nightstick"/>
			<referrer name="cmd_vibrator"/>
			<referrer name="cmd_vibrator2"/>
			<referrer name="cmd_dildo2"/>
			<referrer name="cmd_dildo"/>
			<referrer name="cmd_chainsaw"/>
			<referrer name="cmd_shovel"/>
			<referrer name="cmd_cane"/>
			<referrer name="cmd_flowers"/>
			<referrer name="cmd_camera"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_fix"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_pier69"/>
			<referrer name="cmd_libertycity"/>
			<referrer name="cmd_cage"/>
			<referrer name="cmd_m1"/>
			<referrer name="cmd_m2"/>
			<referrer name="cmd_m3"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_runwayls"/>
			<referrer name="cmd_runwaylv"/>
			<referrer name="cmd_runwaysf"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_lsajump"/>
			<referrer name="cmd_beach"/>
			<referrer name="cmd_club"/>
			<referrer name="cmd_sws"/>
			<referrer name="cmd_twister"/>
			<referrer name="cmd_loopstunt"/>
			<referrer name="cmd_jump"/>
			<referrer name="cmd_quarry"/>
			<referrer name="cmd_parkour4"/>
			<referrer name="cmd_parkour5"/>
			<referrer name="cmd_parkour6"/>
			<referrer name="cmd_parkour7"/>
			<referrer name="cmd_parajump1"/>
			<referrer name="cmd_parajump2"/>
			<referrer name="cmd_parajump3"/>
			<referrer name="cmd_parajump4"/>
			<referrer name="cmd_parajump5"/>
			<referrer name="cmd_dmzone1"/>
			<referrer name="cmd_dmzone2"/>
			<referrer name="cmd_dmzone3"/>
			<referrer name="cmd_dmzone4"/>
			<referrer name="cmd_dmzone5"/>
			<referrer name="cmd_dmzone6"/>
			<referrer name="cmd_dmzone7"/>
			<referrer name="cmd_dmzone8"/>
			<referrer name="cmd_dmzone9"/>
			<referrer name="cmd_dmzone10"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_ph"/>
			<referrer name="cmd_wb"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_sex"/>
			<referrer name="cmd_bayside"/>
			<referrer name="cmd_docks"/>
			<referrer name="cmd_methlab"/>
			<referrer name="cmd_snakefarm"/>
			<referrer name="cmd_motel"/>
			<referrer name="cmd_gasstation"/>
			<referrer name="cmd_jays"/>
			<referrer name="cmd_gantdiner"/>
			<referrer name="cmd_8track"/>
			<referrer name="cmd_lshospital"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_cityhall"/>
			<referrer name="cmd_area69"/>
			<referrer name="cmd_waterfall"/>
			<referrer name="cmd_grove"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_pirateship"/>
			<referrer name="cmd_underbase"/>
			<referrer name="cmd_sfadrop"/>
			<referrer name="cmd_alexm"/>
			<referrer name="cmd_bikestunt"/>
			<referrer name="cmd_playaz"/>
			<referrer name="cmd_francy"/>
			<referrer name="cmd_mansion"/>
			<referrer name="cmd_cj101"/>
			<referrer name="cmd_venera"/>
			<referrer name="cmd_vida"/>
			<referrer name="cmd_deathangel"/>
			<referrer name="cmd_boeing747"/>
			<referrer name="cmd_meghan"/>
			<referrer name="cmd_saloun2"/>
			<referrer name="cmd_saloun3"/>
			<referrer name="cmd_braylon"/>
			<referrer name="cmd_gibbs"/>
			<referrer name="cmd_bikepark"/>
			<referrer name="cmd_hq"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_panzehir"/>
			<referrer name="cmd_assa"/>
			<referrer name="cmd_john"/>
			<referrer name="cmd_reham"/>
			<referrer name="cmd_woa"/>
			<referrer name="cmd_kjj"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_cvondz"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_nrgstunt2"/>
			<referrer name="cmd_driftcity"/>
			<referrer name="cmd_drift1"/>
			<referrer name="cmd_drift2"/>
			<referrer name="cmd_drift3"/>
			<referrer name="cmd_drift4"/>
			<referrer name="cmd_drift5"/>
			<referrer name="cmd_drift6"/>
			<referrer name="cmd_windy"/>
			<referrer name="cmd_probe"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_disco"/>
			<referrer name="cmd_factory"/>
			<referrer name="cmd_vrock"/>
			<referrer name="cmd_vrock2"/>
			<referrer name="cmd_bedroom"/>
			<referrer name="cmd_janitor"/>
			<referrer name="cmd_woozie"/>
			<referrer name="cmd_restaurant"/>
			<referrer name="cmd_sweets"/>
			<referrer name="cmd_dam"/>
			<referrer name="cmd_donuts"/>
			<referrer name="cmd_railroad"/>
			<referrer name="cmd_rcbox"/>
			<referrer name="cmd_crackhouse"/>
			<referrer name="cmd_meathouse"/>
			<referrer name="cmd_prison"/>
			<referrer name="cmd_angelpine"/>
			<referrer name="cmd_graveyard"/>
			<referrer name="cmd_teepee"/>
			<referrer name="cmd_clowns"/>
			<referrer name="cmd_price"/>
			<referrer name="cmd_boathouse"/>
			<referrer name="cmd_longjump"/>
			<referrer name="cmd_kingring"/>
			<referrer name="cmd_barn"/>
			<referrer name="cmd_lvpolice"/>
			<referrer name="cmd_mall"/>
			<referrer name="cmd_cludia"/>
			<referrer name="cmd_hoshi"/>
			<referrer name="cmd_school"/>
			<referrer name="cmd_beach2"/>
			<referrer name="cmd_reefy"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_launcher"/>
			<referrer name="cmd_normalfs"/>
			<referrer name="cmd_kneehead"/>
			<referrer name="cmd_kungfu"/>
			<referrer name="cmd_boxing"/>
			<referrer name="cmd_grabkick"/>
			<referrer name="cmd_elbow"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_dramp"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_leavetdm"/>
			<referrer name="cmd_airdrop"/>
			<referrer name="cmd_changetdm"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_hsrpg"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRaceCD"/>
			<referrer name="TT_StartRace"/>
			<referrer name="RaceCountDown"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="MoneyGet"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="RaceVehicle"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="CheckRankForLevelUp"/>
			<referrer name="Token_Weapons"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="Reward_Send"/>
			<referrer name="CheckPlayerState"/>
			<referrer name="cmd_rcity"/>
			<referrer name="StuntTele"/>
			<referrer name="CrashPlayer"/>
			<param name="playerid">
				The ID of the player to show the gametext for
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The text to be displayed.  May be formatted.
			</param>
			<param name="time">
				The duration of the text being shown in milliseconds
			</param>
			<param name="style">
				The style of text to be displayed
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_player</library>  <summary>Shows 'game text' (on-screen text) for a certain length of time for a specific player.</summary>          <seealso name="GameTextForAll" />  <seealso name="TextDrawShowForPlayer" />  <returns>  <b><c>1</c></b>: The function executed successfully.  <b><c>0</c></b>: The function failed to execute.  This means either the string is null or the player  is not connected.  </returns> 
		</member>
		<member name="M:GangZoneCreate" syntax="GangZoneCreate(minX, minY, maxX, maxY)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="minX">
				<paraminfo>Float </paraminfo>
				The x coordinate for the west side of the gangzone
			</param>
			<param name="minY">
				<paraminfo>Float </paraminfo>
				The y coordinate for the south side of the gangzone
			</param>
			<param name="maxX">
				<paraminfo>Float </paraminfo>
				The x coordinate for the east side of the gangzone
			</param>
			<param name="maxY">
				<paraminfo>Float </paraminfo>
				The y coordinate for the north side of the gangzone
			</param>
			<library>omp_gangzone</library>  <summary>Create a gangzone (coloured radar area).</summary>          <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" />  <remarks>  There is a limit of <b><c>1024</c></b> gangzones.<br />  Putting the parameters in the wrong order results in glitchy behavior.  </remarks>  <remarks>This function merely CREATES the gangzone, you must use <a href="#GangZoneShowForPlayer">GangZoneShowForPlayer</a>  or <a href="#GangZoneShowForAll">GangZoneShowForAll</a> to show it.</remarks>  <returns>The ID of the created zone, returns <b><c>-1</c></b> if not created.</returns> 
		</member>
		<member name="M:GangZoneShowForPlayer" syntax="GangZoneShowForPlayer(playerid, zoneid, colour)">
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player you would like to show the gangzone for.
			</param>
			<param name="zoneid">
				The ID of the gang zone to show for the player.  Returned by <a href="#GangZoneCreate">GangZoneCreate</a>
			</param>
			<param name="colour">
				The colour to show the gang zone, as an integer or hex in <b>RGBA</b> colour  format.  Alpha transparency supported
			</param>
			<library>omp_gangzone</library>  <summary>Show a gangzone for a player.  Must be created with <a href="#GangZoneCreate">GangZoneCreate</a>  first.</summary>        <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForPlayer" />  <seealso name="GangZoneStopFlashForAll" />  <returns><b><c>1</c></b> if the gangzone was shown, otherwise <b><c>0</c></b> (non-existant).</returns> 
		</member>
		<member name="M:GangZoneStopFlashForPlayer" syntax="GangZoneStopFlashForPlayer(playerid, zoneid)">
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="playerid">
				The ID of the player to stop the gangzone flashing for
			</param>
			<param name="zoneid">
				The ID of the gangzonezone to stop flashing
			</param>
			<library>omp_gangzone</library>  <summary>Stops a gangzone flashing for a player.</summary>      <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="GangZoneShowForPlayer" />  <seealso name="GangZoneShowForAll" />  <seealso name="GangZoneHideForPlayer" />  <seealso name="GangZoneHideForAll" />  <seealso name="GangZoneFlashForPlayer" />  <seealso name="GangZoneFlashForAll" />  <seealso name="GangZoneStopFlashForAll" /> 
		</member>
		<member name="M:GetAdminCount" syntax="GetAdminCount()">
			<stacksize value="6"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="hidden"/>
		</member>
		<member name="M:GetConsoleVarAsString" syntax="GetConsoleVarAsString(cvar[], buffer[], len)">
			<attribute name="native"/>
			<referrer name="YVers_PrintHeader"/>
			<param name="cvar">
				<paraminfo> [] </paraminfo>
				The name of the string variable to get the value of
			</param>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
				An array into which to store the value, passed by reference
			</param>
			<param name="len">
				The length of the string that should be stored
			</param>
			<library>omp_core</library>  <summary>Get the string value of a console variable.</summary>        <seealso name="GetConsoleVarAsInt" />  <seealso name="GetConsoleVarAsBool" />  <seealso name="GetConsoleVarAsFloat" />  <remarks>Type <b><c>varlist</c></b> in the server console to display a list of available console  variables and their types.</remarks>  <remarks>When filterscripts or plugins are specified as the cvar, this function only returns the  name of the first specified filterscript or plugin.</remarks>  <remarks>Using this function with anything other than a <b>string</b> (integer, boolean or float)  will cause your server to crash.  Using it with a nonexistent console variable will also cause your  server to crash.</remarks>  <returns>The length of the returned string. <b><c>0</c></b> if the specified console variable is  not a string or doesn't exist.</returns> 
		</member>
		<member name="M:GetDistance" syntax="GetDistance(x1, y1, z1, x2, y2, z2)">
			<stacksize value="4"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_getdist"/>
			<referrer name="cmd_dano"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="floatround"/>
			<dependency name="floatsqroot"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetDistanceToProperty" syntax="GetDistanceToProperty(playerid, Property)">
			<tagname value="Float"/>
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="IsPlayerNearProperty"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="PropInfo"/>
			<dependency name="PropX"/>
			<dependency name="PropY"/>
			<dependency name="PropZ"/>
			<dependency name="floatabs"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<dependency name="floatsub"/>
			<param name="playerid">
			</param>
			<param name="Property">
			</param>
		</member>
		<member name="M:GetDuelTick" syntax="GetDuelTick(playerid)">
			<stacksize value="4"/>
			<referrer name="Duel_End"/>
			<dependency name="DuelTicks"/>
			<dependency name="GetTickCount"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetDynamicObjectMaterial" syntax="GetDynamicObjectMaterial(objectid, materialindex, &amp;modelid, txdname[], texturename[], &amp;materialcolor, maxtxdname, maxtexturename)">
			<attribute name="native"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_gom"/>
			<referrer name="cmd_do"/>
			<param name="objectid">
			</param>
			<param name="materialindex">
			</param>
			<param name="modelid">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="txdname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="texturename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialcolor">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="maxtxdname">
			</param>
			<param name="maxtexturename">
			</param>
		</member>
		<member name="M:GetDynamicObjectPos" syntax="GetDynamicObjectPos(objectid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="GetPlayerClosestStreamedObject"/>
			<referrer name="PGodTimer"/>
			<referrer name="cmd_expo"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_do"/>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetDynamicObjectRot" syntax="GetDynamicObjectRot(objectid, &amp;rx, &amp;ry, &amp;rz)">
			<attribute name="native"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_do"/>
			<param name="objectid">
			</param>
			<param name="rx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetIP" syntax="GetIP(playerid)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="playerid">
				Player to get IP of.
			</param>
			<library>y_utils - ip</library>    <returns>  IP as a 32bit int.  </returns> 
		</member>
		<member name="M:GetMaxPlayers" syntax="GetMaxPlayers()">
			<attribute name="native"/>
			<referrer name="SSCANF_RunInit"/>
			<referrer name="F@p"/>
			<referrer name="F@P"/>
			<referrer name="RandomMessages"/>
			<referrer name="GetPlayerMostRacesWon"/>
			<referrer name="GetPlayerMostCash"/>
			<referrer name="GetPlayerMostCTF"/>
			<referrer name="GetPlayerMostScore"/>
			<library>omp_core</library>  <summary>Returns the maximum number of players that can join the server, as set by the server variable  'maxplayers' in server.cfg.</summary>  <seealso name="GetPlayerPoolSize" />  <seealso name="IsPlayerConnected" />  <remarks>This function can not be used in place of <b><c>MAX_PLAYERS</c></b>.  It can not be used  at compile time (e.g.  for array sizes). <b><c>MAX_PLAYERS</c></b> should always be re-defined to  what the 'maxplayers' var will be, or higher.</remarks>  <returns>The maximum number of players that can join the server.</returns> 
		</member>
		<member name="M:GetModelArray" syntax="GetModelArray(modelid)">
			<stacksize value="2"/>
			<dependency name="ObjectList"/>
			<dependency name="oID"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:GetMyColor" syntax="GetMyColor(playerid)">
			<stacksize value="1"/>
			<referrer name="GoGoRace"/>
			<referrer name="Race_Timing"/>
			<dependency name="Color"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetNPCNameByID" syntax="GetNPCNameByID(name[])">
			<stacksize value="29"/>
			<referrer name="cmd_amanda"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_panztalk"/>
			<referrer name="cmd_amandatalk"/>
			<referrer name="cmd_washplayer"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetNearestColourGamma" syntax="GetNearestColourGamma(colour, options[], count)">
			<stacksize value="13"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo> [] </paraminfo>
				The list of valid RGB(A) colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<library>y_utils - colour</library>  <summary>  GetNearestColourGamma(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses gamma  colour space for slightly more accuracy.  </remarks> 
		</member>
		<member name="M:GetNearestColourGammaCached" syntax="GetNearestColourGammaCached(colour, options[][], count)">
			<stacksize value="10"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo>Float [][3] </paraminfo>
				The list of valid gamma colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<library>y_utils - colour</library>  <summary>  GetNearestColourGammaCached(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses gamma  colour space for slightly more accuracy.  Options are in gamma format.  </remarks> 
		</member>
		<member name="M:GetNearestColourLinear" syntax="GetNearestColourLinear(colour, options[], count)">
			<stacksize value="10"/>
			<dependency name="cellmax"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo> [] </paraminfo>
				The list of valid RGB(A) colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<library>y_utils - colour</library>  <summary>  GetNearestColourLinear(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses RGB colour  space for the distance function, which is not very accurate.  </remarks> 
		</member>
		<member name="M:GetNearestColourSRGB" syntax="GetNearestColourSRGB(colour, options[], count)">
			<stacksize value="16"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="SRGBToCIE"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo> [] </paraminfo>
				The list of valid RGB(A) colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<library>y_utils - colour</library>  <summary>  GetNearestColourGamma(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses SRGB  colour space for the most accuracy.  </remarks> 
		</member>
		<member name="M:GetNearestColourSRGBCached" syntax="GetNearestColourSRGBCached(colour, options[][], count)">
			<stacksize value="16"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="SRGBToCIE"/>
			<param name="colour">
				The RGB(A) colour to restrict.
			</param>
			<param name="options">
				<paraminfo>Float [][3] </paraminfo>
				The list of valid SRGB colour options.
			</param>
			<param name="count">
				The size of the options array.
			</param>
			<library>y_utils - colour</library>  <summary>  GetNearestColourSRGBCached(colour, const options[], count = sizeof (options));  </summary>        <returns>  The INDEX of the nearst colour.  Or <c>-1</c> for errors.  </returns>  <remarks>  Find the closest colour to the given colour from the array.  Uses SRGB  colour space for the most accuracy.  Options are in SRGB format.  </remarks> 
		</member>
		<member name="M:GetNumberOfPlayersOnThisIP" syntax="GetNumberOfPlayersOnThisIP(test_ip[])">
			<stacksize value="41"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="strcmp"/>
			<param name="test_ip">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPName" syntax="GetPName(playerid)">
			<stacksize value="26"/>
			<referrer name="cmd_topplayers"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_togglevehiclerockets"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<dependency name="GetPName"/>
			<dependency name="GetPlayerName"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPVarFloat" syntax="GetPVarFloat(playerid, pvar[])">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<param name="playerid">
				The ID of the player whose player variable you want to get
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable
			</param>
			<library>omp_variable</library>  <summary>Gets a player variable as a float.</summary>      <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="DeletePVar" />  <returns>The float from the specified player variable.</returns> 
		</member>
		<member name="M:GetPVarInt" syntax="GetPVarInt(playerid, pvar[])">
			<attribute name="native"/>
			<referrer name="mS_GetAmountOfListItemsEx"/>
			<referrer name="mS_GetPlayerCurrentListID"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="mS_UpdatePageTextDraw"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_afklist"/>
			<referrer name="cmd_pm"/>
			<param name="playerid">
				The ID of the player whose player variable to get
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable (case-insensitive).  Assigned in SetPVarInt
			</param>
			<library>omp_variable</library>  <summary>Gets an integer player variable's value.</summary>      <seealso name="SetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <returns>The integer value of the specified player variable.  It will still return <b><c>0</c></b>  if the variable is not set, or the player does not exist.</returns> 
		</member>
		<member name="M:GetPVarString" syntax="GetPVarString(playerid, pvar[], output[], len)">
			<attribute name="native"/>
			<referrer name="Login"/>
			<referrer name="Save"/>
			<param name="playerid">
				The ID of the player whose player variable to get
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable, set by <a href="#SetPVarString">SetPVarString</a>
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
				The array in which to store the string value in, passed by reference
			</param>
			<param name="len">
				The maximum length of the returned string
			</param>
			<library>omp_variable</library>  <summary>Gets a player variable as a string.</summary>          <seealso name="SetPVarString" />  <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <remarks>If length of string is zero (value not set), output text will not be updated or set to anything  and will remain with old data, neccesying that you clear the variable to blank value if <a href="#GetPVarString">GetPVarString</a>  returns <b><c>0</c></b> if that behavior is undesired </remarks>  <returns>The length of the string.</returns> 
		</member>
		<member name="M:GetPlayerAdminLevel" syntax="GetPlayerAdminLevel(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="AdminLvl"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerAmmo" syntax="GetPlayerAmmo(playerid)">
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="PGodTimer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_dbers"/>
			<referrer name="cmd_vstats"/>
			<param name="playerid">
				The ID of the player whose ammo to get
			</param>
			<library>omp_player</library>  <summary>Gets the amount of ammo in a player's current weapon.</summary>    <seealso name="SetPlayerAmmo" />  <seealso name="GetPlayerWeaponData" />  <remarks>The ammo can hold 16-bit values, therefore values over <b><c>32767</c></b> will return erroneous  values.</remarks>  <returns>The amount of ammo in the player's current weapon.</returns> 
		</member>
		<member name="M:GetPlayerArmour" syntax="GetPlayerArmour(playerid, &amp;armour)">
			<attribute name="native"/>
			<referrer name="PGodTimer"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_spec"/>
			<referrer name="ReturnPlayerArmour"/>
			<param name="playerid">
				The ID of the player that you want to get the armour of
			</param>
			<param name="armour">
				<paraminfo>Float &amp; </paraminfo>
				The float to to store the armour in, passed by reference
			</param>
			<library>omp_player</library>  <summary>This function stores the armour of a player into a variable.</summary>      <seealso name="SetPlayerArmour" />  <seealso name="GetPlayerHealth" />  <seealso name="GetVehicleHealth" />  <remarks>Even though the armour can be set to near infinite values on the server side, the individual  clients will only report values up to <b><c>255</c></b>.  Anything higher will wrap around; <b><c>256</c></b>  becomes <b><c>0</c></b>, <b><c>257</c></b> becomes <b><c>1</c></b>, etc. </remarks>  <remarks>Armour is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b>  </remarks>  <remarks>The function's name is armour, not armor (Americanized).</remarks>  <returns>  <b><c>1</c></b> - success.<br />  <b><c>0</c></b> - failure (i.e.  player not connected).<br />  </returns> 
		</member>
		<member name="M:GetPlayerCameraMode" syntax="GetPlayerCameraMode(playerid)">
			<tagname value="t_CAM_MODE"/>
			<attribute name="native"/>
			<referrer name="PGodTimer"/>
			<param name="playerid">
				The ID of the player whose camera mode to retrieve
			</param>
			<library>omp_player</library>  <summary>Returns the current GTA camera mode for the requested player.  The camera modes are useful  in determining whether a player is aiming, doing a passenger driveby etc.</summary>    <seealso name="GetPlayerCameraPos" />  <seealso name="GetPlayerCameraFrontVector" />  <seealso name="SetPlayerCameraPos" />  <seealso name="SetPlayerCameraLookAt" />  <seealso name="SetCameraBehindPlayer" />  <returns>The camera mode as an integer (or <b><c>-1</c></b> if player is not connected).</returns> 
		</member>
		<member name="M:GetPlayerCameraPos" syntax="GetPlayerCameraPos(playerid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PGodTimer"/>
			<param name="playerid">
				The ID of the player to get the camera position of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable to store the x coordinate in, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable to store the y coordinate in, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable to store the z coordinate in, passed by reference
			</param>
			<library>omp_player</library>  <summary>Get the position of the player's camera.</summary>          <seealso name="SetPlayerCameraPos" />  <seealso name="GetPlayerCameraZoom" />  <seealso name="GetPlayerCameraAspectRatio" />  <seealso name="GetPlayerCameraMode" />  <seealso name="GetPlayerCameraFrontVector" />  <remarks>Player's camera positions are only updated once a second, <b>unless aiming</b>.</remarks>  <remarks>It is recommended to set a 1 second timer if you wish to take action that relies on a player's  camera position.</remarks> 
		</member>
		<member name="M:GetPlayerCash" syntax="GetPlayerCash(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_deposit"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_buytokens"/>
			<dependency name="Money"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerClosestPlayer" syntax="GetPlayerClosestPlayer(playerid, NPC)">
			<stacksize value="16"/>
			<referrer name="cmd_np"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="false"/>
			<dependency name="floatsqroot"/>
			<param name="playerid">
			</param>
			<param name="NPC">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerClosestStreamedObject" syntax="GetPlayerClosestStreamedObject(playeride)">
			<stacksize value="16"/>
			<referrer name="cmd_nso"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="floatsqroot"/>
			<param name="playeride">
			</param>
		</member>
		<member name="M:GetPlayerColor" syntax="GetPlayerColor(playerid)">
			<attribute name="native"/>
			<referrer name="F@P"/>
			<referrer name="RmInvis"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerText"/>
			<referrer name="Login"/>
			<referrer name="cmd_hideradar"/>
			<referrer name="cmd_showradar"/>
			<referrer name="cmd_cloak"/>
			<referrer name="cmd_uncloak"/>
			<referrer name="cmd_me"/>
			<referrer name="cmd_fakeme"/>
			<param name="playerid">
				The ID of the player to get the colour of
			</param>
			<library>omp_player</library>  <summary>Gets the colour of the player's name and radar marker.  Only works after <a href="#SetPlayerColor">SetPlayerColor</a>.</summary>    <seealso name="SetPlayerColor" />  <seealso name="ChangeVehicleColor" />  <remarks>GetPlayerColor will return <b><c>0</c></b> unless <a href="#SetPlayerColor">SetPlayerColor</a>  has been used first.</remarks>  <returns>The player's colour. <b><c>0</c></b> if no colour set or player not connected.</returns> 
		</member>
		<member name="M:GetPlayerCount" syntax="GetPlayerCount()">
			<stacksize value="5"/>
			<referrer name="MP_OPC"/>
			<referrer name="Race_Rotation"/>
			<dependency name="IsPlayerConnected"/>
		</member>
		<member name="M:GetPlayerCountExNPC" syntax="GetPlayerCountExNPC()">
			<stacksize value="5"/>
			<referrer name="MP_OPC"/>
			<referrer name="DCMD_tp"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
		</member>
		<member name="M:GetPlayerFacingAngle" syntax="GetPlayerFacingAngle(playerid, &amp;ang)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_mypos"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_alpha"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_euros"/>
			<referrer name="cmd_limo"/>
			<referrer name="cmd_adromada"/>
			<referrer name="cmd_at400"/>
			<referrer name="cmd_beagle"/>
			<referrer name="cmd_dodo"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_addactor"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_tram"/>
			<referrer name="cmd_kart"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_adddrift"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="AddCP"/>
			<referrer name="GetXYInFrontOfPlayer"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="MegaJump"/>
			<referrer name="cmd_tp"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="ReturnPlayerAngle"/>
			<referrer name="StuntTele"/>
			<param name="playerid">
				The player you want to get the angle of
			</param>
			<param name="ang">
				<paraminfo>Float &amp; </paraminfo>
				The Float to store the angle in, passed by reference
			</param>
			<library>omp_player</library>  <summary>Gets the angle a player is facing.</summary>      <seealso name="GetVehicleZAngle" />  <seealso name="SetPlayerFacingAngle" />  <remarks>Angles are reversed in GTA:SA; 90 degrees would be East in the real world, but in GTA:SA  90 degrees is in fact West.  North and South are still 0/360 and 180.  To convert this, simply do  <b>360 - angle</b>.</remarks>  <remarks>Angles returned when inside a vehicle is rarely correct.  To get the correct facing angle  while inside a vehicle, use <a href="#GetVehicleZAngle">GetVehicleZAngle</a>.</remarks> 
		</member>
		<member name="M:GetPlayerHealth" syntax="GetPlayerHealth(playerid, &amp;health)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerText"/>
			<referrer name="PGodTimer"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_spec"/>
			<referrer name="ReturnPlayerHealth"/>
			<param name="playerid">
				The ID of the player
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
				Float to store health, passed by reference
			</param>
			<library>omp_player</library>  <summary>The function GetPlayerHealth allows you to retrieve the health of a player.  Useful for  cheat detection, among other things.</summary>      <seealso name="SetPlayerHealth" />  <seealso name="GetVehicleHealth" />  <seealso name="GetPlayerArmour" />  <remarks>  Even though the health can be set to near infinite values on the server side, the individual clients  will only report values up to <b><c>255</c></b>.  Anything higher will wrap around; <b><c>256</c></b>  becomes <b><c>0</c></b>, <b><c>257</c></b> becomes <b><c>1</c></b>, etc.<br />  Health is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b>  </remarks>  <returns>  <b><c>1</c></b> - success.<br />  <b><c>0</c></b> - failure (i.e.  player not connected).<br />  </returns> 
		</member>
		<member name="M:GetPlayerID" syntax="GetPlayerID(Name[])">
			<stacksize value="31"/>
			<referrer name="cmd_myprops"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_sellmyprops"/>
			<dependency name="GetPlayerName"/>
			<dependency name="Iterator@Player"/>
			<dependency name="cellmax"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="Name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerInterior" syntax="GetPlayerInterior(playerid)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_mypos"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_adromada"/>
			<referrer name="cmd_at400"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="AddCP"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="cmd_tp"/>
			<param name="playerid">
				The player to get the interior ID of
			</param>
			<library>omp_player</library>  <summary>Retrieves the player's current interior.  A list of currently known interiors with their  positions can be found on <a href="http://wiki.sa-mp.com/wiki/Interiorids">this</a> page.</summary>    <seealso name="SetPlayerInterior" />  <seealso name="GetPlayerVirtualWorld" />  <remarks>Always returns <b><c>0</c></b> for NPCs.</remarks>  <returns>The interior ID the player is currently in.</returns> 
		</member>
		<member name="M:GetPlayerIp" syntax="GetPlayerIp(playerid, ip[], len)">
			<attribute name="native"/>
			<referrer name="Android_OnPlayerConnect"/>
			<referrer name="MP_OPC"/>
			<referrer name="AddPlayerBan"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="IPInfoDB_Connect"/>
			<referrer name="cmd_whatsmyip"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<referrer name="GetNumberOfPlayersOnThisIP"/>
			<param name="playerid">
				The ID of the player to get the IP address of
			</param>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				An array into which to store the player's IP address, passed by reference
			</param>
			<param name="len">
				The maximum length of the IP address (recommended 16)
			</param>
			<library>omp_network</library>  <summary>Get the specified player's IP address and store it in a string.</summary>        <seealso name="NetStats_GetIpPort" />  <seealso name="GetPlayerName" />  <seealso name="GetPlayerPing" />  <seealso name="GetPlayerVersion" />  <seealso name="OnIncomingConnection" />  <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <remarks>This function does not work when used in <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  because the player is already disconnected.  It will return an invalid IP (<b><c>255.255.255.255</c></b>).  Save players' IPs under <a href="#OnPlayerConnect">OnPlayerConnect</a> if they need to be used under  <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>. </remarks>  <returns><b><c>1</c></b> on success and <b><c>0</c></b> on failure.</returns> 
		</member>
		<member name="M:GetPlayerKB" syntax="GetPlayerKB(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="SpeedBoostDisabled"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerKeys" syntax="GetPlayerKeys(playerid, &amp;keys, &amp;updown, &amp;leftright)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_dbers"/>
			<param name="playerid">
				The ID of the player to get the keys of
			</param>
			<param name="keys">
				<paraminfo>t_KEY &amp; </paraminfo>
				Bitmask containing the player's key states. <a href="http://wiki.sa-mp.com/wiki/Keys">List  of keys</a>
			</param>
			<param name="updown">
				<paraminfo>t_KEY &amp; </paraminfo>
				Up/down state
			</param>
			<param name="leftright">
				<paraminfo>t_KEY &amp; </paraminfo>
				Left/right state
			</param>
			<library>omp_player</library>  <summary>Check which keys a player is pressing.</summary>          <seealso name="OnPlayerKeyStateChange" />  <remarks>Only the FUNCTION of keys can be detected; not actual keys.  For example, it is not possible  to detect if a player presses <b>SPACE</b>, but you can detect if they press <b>SPRINT</b> (which  can be mapped (assigned/binded) to ANY key (but is space by default)). </remarks>  <remarks>As of update <b>0.3.7</b>, the keys "A" and "D" are not recognized when in a vehicle.  However,  keys "W" and "S" can be detected with the "keys" parameter. </remarks>  <returns>The keys are stored in the specified variables.</returns> 
		</member>
		<member name="M:GetPlayerLastSyncedTrailerID" syntax="GetPlayerLastSyncedTrailerID(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:GetPlayerLastSyncedVehicleID" syntax="GetPlayerLastSyncedVehicleID(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:GetPlayerMinigame" syntax="GetPlayerMinigame(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_tt"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerMoney" syntax="GetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_vstats"/>
			<param name="playerid">
				The ID of the player to get the money of
			</param>
			<library>omp_player</library>  <summary>Retrieves the amount of money a player has.</summary>    <seealso name="GivePlayerMoney" />  <seealso name="ResetPlayerMoney" />  <returns>The amount of money the player has.</returns> 
		</member>
		<member name="M:GetPlayerMostCTF" syntax="GetPlayerMostCTF()">
			<stacksize value="7"/>
			<referrer name="cmd_topplayers"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="ctf_wins"/>
		</member>
		<member name="M:GetPlayerMostCash" syntax="GetPlayerMostCash()">
			<stacksize value="7"/>
			<referrer name="cmd_topplayers"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Money"/>
			<dependency name="Players"/>
		</member>
		<member name="M:GetPlayerMostRacesWon" syntax="GetPlayerMostRacesWon()">
			<stacksize value="7"/>
			<referrer name="cmd_topplayers"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="RacesWon"/>
		</member>
		<member name="M:GetPlayerMostScore" syntax="GetPlayerMostScore()">
			<stacksize value="7"/>
			<referrer name="cmd_topplayers"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="score"/>
		</member>
		<member name="M:GetPlayerName" syntax="GetPlayerName(playerid, name[], len)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ReturnPlayerName"/>
			<referrer name="GetPlayerRPName"/>
			<referrer name="GetPlayerRPComponents"/>
			<referrer name="HasRPName"/>
			<referrer name="SSCANF_RunInit"/>
			<referrer name="Iter_OnPlayerConnect"/>
			<referrer name="F@p"/>
			<referrer name="F@P"/>
			<referrer name="ReturnName"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="GetUserIDName"/>
			<referrer name="IsNameConnected"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_getid"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_adddrift"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givejp"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_buytokens"/>
			<referrer name="cmd_gat"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="TT_AddTimeToDB"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="GetPlayerID"/>
			<referrer name="HO_save"/>
			<referrer name="GetPName"/>
			<referrer name="GetNPCNameByID"/>
			<param name="playerid">
				The ID of the player to get the name of
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				An array into which to store the name, passed by reference
			</param>
			<param name="len">
				The length of the string that should be stored.  Recommended to be <b><c>MAX_PLAYER_NAME</c></b>
			</param>
			<library>omp_player</library>  <summary>Get a player's name.</summary>        <seealso name="SetPlayerName" />  <seealso name="GetPlayerIp" />  <seealso name="GetPlayerPing" />  <seealso name="GetPlayerScore" />  <seealso name="GetPlayerVersion" />  <remarks>A player's name can be up to 24 characters long (as of <b>0.3d R2</b>) by using <a href="#SetPlayerName">SetPlayerName</a>.  This is defined as <b><c>24</c></b> by default.  However, the client can  only join with a nickname between 3 and 20 characters, otherwise the connection will be rejected  and the player has to quit to choose a valid name.</remarks>  <returns>The length of the player's name. <b><c>0</c></b> if player specified doesn't exist.</returns> 
		</member>
		<member name="M:GetPlayerPing" syntax="GetPlayerPing(playerid)">
			<attribute name="native"/>
			<referrer name="cmd_vstats"/>
			<param name="playerid">
				The ID of the player to get the ping of
			</param>
			<library>omp_network</library>  <summary>Get the ping of a player.  The ping measures the amount of time it takes for the server  to 'ping' the client and for the client to send the message back.</summary>    <seealso name="GetPlayerIp" />  <seealso name="GetPlayerName" />  <seealso name="GetPlayerVersion" />  <remarks>Player's ping may be <b><c>65535</c></b> for a while after a player connects</remarks>  <returns>The current ping of the player (expressed in milliseconds).</returns> 
		</member>
		<member name="M:GetPlayerPos" syntax="GetPlayerPos(playerid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_getdist"/>
			<referrer name="LooseWeapons"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rmbuilding"/>
			<referrer name="GetPlayerClosestStreamedObject"/>
			<referrer name="GetPlayerClosestPlayer"/>
			<referrer name="cmd_rv"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_selfiecam"/>
			<referrer name="cmd_amanda"/>
			<referrer name="cmd_altitude"/>
			<referrer name="cmd_mypos"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_alpha"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_euros"/>
			<referrer name="cmd_limo"/>
			<referrer name="cmd_adromada"/>
			<referrer name="cmd_at400"/>
			<referrer name="cmd_beagle"/>
			<referrer name="cmd_dodo"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_addactor"/>
			<referrer name="cmd_parajump3"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_tram"/>
			<referrer name="cmd_kart"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_adddrift"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_nuke2"/>
			<referrer name="cmd_nuke"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="AddCP"/>
			<referrer name="GetXYInFrontOfPlayer"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="RaceSound"/>
			<referrer name="cmd_tp"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<referrer name="AngleUpdate"/>
			<referrer name="GetDistanceToProperty"/>
			<referrer name="GetPlayerZ"/>
			<param name="playerid">
				The ID of the player to get the position of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the x coordinate in, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the y coordinate in, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the z coordinate in, passed by reference
			</param>
			<library>omp_player</library>  <summary>Get the position of a player, represented by x, y and z coordinates.</summary>          <seealso name="SetPlayerPos" />  <seealso name="GetVehiclePos" />  <seealso name="IsPlayerInRangeOfPoint" />  <seealso name="GetPlayerDistanceFromPoint" />  <remarks>This function is known to return unreliable values when used in <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  and <a href="#OnPlayerRequestClass">OnPlayerRequestClass</a>.  This is because the player is not  spawned.</remarks>  <returns><b><c>true</c></b> on success, <b><c>false</c></b> on failure (i.e.  player not connected).</returns> 
		</member>
		<member name="M:GetPlayerRPComponents" syntax="GetPlayerRPComponents(playerid, names[][], components, len)">
			<stacksize value="35"/>
			<dependency name="GetPlayerName"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<param name="playerid">
				Player whose name you want to get.
			</param>
			<param name="names">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="components">
			</param>
			<param name="len">
			</param>
			<library>y_utils - names</library>  <summary>  GetPlayerRPComponents  </summary>    <remarks>  Get a player's name, split in to parts by <c>_</c>.  </remarks>  <returns>  The number of parts extracted from the name.  </returns> 
		</member>
		<member name="M:GetPlayerRPName" syntax="GetPlayerRPName(playerid, name[], len)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="ReturnPlayerRPName"/>
			<dependency name="GetPlayerName"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="playerid">
				Player whose name you want to get.
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The destination array to save the name in.
			</param>
			<param name="len">
				The length of the destination.
			</param>
			<library>y_utils - names</library>  <summary>  GetPlayerRPName  </summary>        <remarks>  Get a player's name, with <c>_</c> replaced by <c> </c>.  </remarks> 
		</member>
		<member name="M:GetPlayerScore" syntax="GetPlayerScore(playerid)">
			<attribute name="native"/>
			<referrer name="cmd_vstats"/>
			<param name="playerid">
				The player to get the score of
			</param>
			<library>omp_player</library>  <summary>This function returns a player's score as it was set using <a href="#SetPlayerScore">SetPlayerScore</a>.</summary>    <seealso name="SetPlayerScore" />  <seealso name="GetPlayerPing" />  <returns>The player's score.</returns> 
		</member>
		<member name="M:GetPlayerSkin" syntax="GetPlayerSkin(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<param name="playerid">
				The player you want to get the skin from
			</param>
			<library>omp_player</library>  <summary>Returns the class of the players skin.</summary>    <seealso name="SetPlayerSkin" />  <remarks>Returns the new skin after <a href="#SetSpawnInfo">SetSpawnInfo</a> is called but before  the player actually respawns to get the new skin. </remarks>  <remarks>Returns the old skin if the player was spawned through <a href="#SpawnPlayer">SpawnPlayer</a>  function. </remarks>  <returns>The skin ID (<b><c>0</c></b> if invalid).</returns> 
		</member>
		<member name="M:GetPlayerSpeed" syntax="GetPlayerSpeed(playerid)">
			<stacksize value="10"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVelocity"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="floatabs"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<dependency name="floatsqroot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerState" syntax="GetPlayerState(playerid)">
			<tagname value="t_PLAYER_STATE"/>
			<attribute name="native"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_nos"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_spinvehicley"/>
			<referrer name="cmd_spinvehiclez"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_detonate"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_dbers"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="CheckPlayerState"/>
			<param name="playerid">
				The ID of the player to get the current state of
			</param>
			<library>omp_player</library>  <summary>Get a player's current state.</summary>    <seealso name="GetPlayerSpecialAction" />  <seealso name="SetPlayerSpecialAction" />  <seealso name="OnPlayerStateChange" />  <remarks>  <b>States:</b><br />  <ul>  <li><b><c>PLAYER_STATE_NONE</c></b> - empty (while initializing)</li>  <li><b><c>PLAYER_STATE_ONFOOT</c></b> - player is on foot</li>  <li><b><c>PLAYER_STATE_DRIVER</c></b> - player is the driver of a vehicle</li>  <li><b><c>PLAYER_STATE_PASSENGER</c></b> - player is passenger of a vehicle</li>  <li><b><c>PLAYER_STATE_WASTED</c></b> - player is dead or on class selection</li>  <li><b><c>PLAYER_STATE_SPAWNED</c></b> - player is spawned</li>  <li><b><c>PLAYER_STATE_SPECTATING</c></b> - player is spectating</li>  <li><b><c>PLAYER_STATE_EXIT_VEHICLE</c></b> - player exits a vehicle</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_DRIVER</c></b> - player enters a vehicle as driver</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_PASSENGER</c></b> - player enters a vehicle as passenger  </li>  </ul>  </remarks>  <returns>The player's current state as an integer.</returns> 
		</member>
		<member name="M:GetPlayerTeam" syntax="GetPlayerTeam(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_airdrop"/>
			<referrer name="AutoAssign"/>
			<param name="playerid">
				The ID of the player to get the team of
			</param>
			<library>omp_player</library>  <summary>Get the ID of the team the player is on.</summary>    <seealso name="SetPlayerTeam" />  <seealso name="SetTeamCount" />  <returns>  <b><c>0-254</c></b>: The player's team. (<b><c>0</c></b> is a valid team).<br />  <b><c>255</c></b>: Defined as <b><c>NO_TEAM</c></b>.  The player is not on any team.<br />  <b><c>-1</c></b>: The function failed to execute.  Player is not connected.  </returns> 
		</member>
		<member name="M:GetPlayerTheoreticAngle" syntax="GetPlayerTheoreticAngle(i)">
			<tagname value="Float"/>
			<stacksize value="15"/>
			<referrer name="Drift"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="acos"/>
			<dependency name="asin"/>
			<dependency name="floatabs"/>
			<dependency name="floatadd"/>
			<dependency name="floatmul"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<dependency name="floatsub"/>
			<dependency name="ppos"/>
			<dependency name="ppos"/>
			<param name="i">
			</param>
		</member>
		<member name="M:GetPlayerToken" syntax="GetPlayerToken(playerid, value)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Token"/>
			<param name="playerid">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:GetPlayerVehicleID" syntax="GetPlayerVehicleID(playerid)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_delivery"/>
			<referrer name="cmd_nos"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_spinvehicle"/>
			<referrer name="cmd_spinvehiclex"/>
			<referrer name="cmd_spinvehicley"/>
			<referrer name="cmd_spinvehiclez"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="IsInCar"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_offroad"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_detonate"/>
			<referrer name="cmd_cc"/>
			<referrer name="cmd_eject"/>
			<referrer name="cmd_alarm"/>
			<referrer name="cmd_boot"/>
			<referrer name="cmd_bonnet"/>
			<referrer name="cmd_engine"/>
			<referrer name="cmd_doors"/>
			<referrer name="cmd_lights"/>
			<referrer name="cmd_xroof"/>
			<referrer name="cmd_mega"/>
			<referrer name="cmd_virtualwheels"/>
			<referrer name="cmd_dollar"/>
			<referrer name="cmd_shadow"/>
			<referrer name="cmd_atomic"/>
			<referrer name="cmd_twist"/>
			<referrer name="cmd_cutter"/>
			<referrer name="cmd_rims"/>
			<referrer name="cmd_classic"/>
			<referrer name="cmd_switchwheels"/>
			<referrer name="cmd_import"/>
			<referrer name="cmd_trance"/>
			<referrer name="cmd_hy"/>
			<referrer name="cmd_pj1"/>
			<referrer name="cmd_pj2"/>
			<referrer name="cmd_pj3"/>
			<referrer name="cmd_pj"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_fix"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_lock"/>
			<referrer name="cmd_unlock"/>
			<referrer name="cmd_launcher"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<referrer name="cmd_af"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_aotv"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_join"/>
			<referrer name="TT_AddTimeToDB"/>
			<referrer name="TT_StartRaceCD"/>
			<referrer name="TT_Exit"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="GetXYInFrontOfPlayer"/>
			<referrer name="IsSeatTaken"/>
			<referrer name="IsPlayerInInvalidNosVehicle"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="nofun"/>
			<referrer name="AddNeon"/>
			<referrer name="cmd_tp"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="GetPlayerSpeed"/>
			<referrer name="GetPlayerVehicleModel"/>
			<referrer name="DriftSave"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="ReturnPlayerAngle"/>
			<referrer name="Drift"/>
			<referrer name="AngleUpdate"/>
			<referrer name="CheckPlayerState"/>
			<referrer name="_B@Action"/>
			<referrer name="StuntTele"/>
			<param name="playerid">
				The ID of the player in the vehicle that you want to get the ID of
			</param>
			<library>omp_player</library>  <summary>This function gets the ID of the vehicle the player is currently in.  Note: <b>NOT</b> the  model ID of the vehicle.  See <a href="#GetVehicleModel">GetVehicleModel</a> for that.</summary>    <seealso name="IsPlayerInVehicle" />  <seealso name="IsPlayerInAnyVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <seealso name="GetVehicleModel" />  <returns>ID of the vehicle or <b><c>0</c></b> if not in a vehicle.</returns> 
		</member>
		<member name="M:GetPlayerVehicleModel" syntax="GetPlayerVehicleModel(playerid)">
			<stacksize value="3"/>
			<referrer name="OnPlayerDeath"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerVehicleSeat" syntax="GetPlayerVehicleSeat(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="IsSeatTaken"/>
			<param name="playerid">
				The ID of the player you want to get the seat of
			</param>
			<library>omp_player</library>  <summary>Find out which seat a player is in.</summary>    <seealso name="GetPlayerVehicleid" />  <seealso name="PutPlayerInVehicle" />  <remarks>Sometimes the result can be <b><c>128</c></b> which is an invalid seat ID.  Circumstances  of this are not yet known, but it is best to discard information when returned seat number is <b><c>128</c></b>.</remarks>  <returns>The ID of the seat the player is in. <b><c>-1</c></b> is not in vehicle, <b><c>0</c></b>  is the driver, <b><c>1</c></b> is the front passenger, and <b><c>2</c></b> &amp; <b><c>3</c></b>  are the rear passengers.</returns> 
		</member>
		<member name="M:GetPlayerVelocity" syntax="GetPlayerVelocity(playerid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="MegaJump"/>
			<referrer name="GetPlayerSpeed"/>
			<param name="playerid">
				The player to get the speed from
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the velocity on the x axis, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the velocity on the y axis, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the velocity on the z axis, passed by reference
			</param>
			<library>omp_player</library>  <summary>Get the velocity (speed) of a player on the x, y and z axes.</summary>          <seealso name="SetPlayerVelocity" />  <seealso name="SetVehicleVelocity" />  <seealso name="GetVehicleVelocity" /> 
		</member>
		<member name="M:GetPlayerVersion" syntax="GetPlayerVersion(playerid, version[], len)">
			<attribute name="native"/>
			<referrer name="cmd_version"/>
			<param name="playerid">
				The ID of the player to get the client version of
			</param>
			<param name="version">
				<paraminfo> [] </paraminfo>
				The string to store the player's version in, passed by reference
			</param>
			<param name="len">
				The maximum length of the version
			</param>
			<library>omp_network</library>  <summary>Returns the client version, as reported by the player.</summary>        <seealso name="GetPlayerName" />  <seealso name="GetPlayerPing" />  <seealso name="GetPlayerIp" />  <remarks>The string the version gets stored in will be empty if playerid is an NPC.</remarks>  <returns><b><c>1</c></b> on success and <b><c>0</c></b> on failure (if player specified doesn't exist).</returns> 
		</member>
		<member name="M:GetPlayerVirtualWorld" syntax="GetPlayerVirtualWorld(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="DriftSave"/>
			<referrer name="CreateAdminObject"/>
			<param name="playerid">
				The ID of the player to get the virtual world of
			</param>
			<library>omp_player</library>  <summary>Retrieves the current virtual world the player is in.</summary>    <seealso name="SetPlayerVirtualWorld" />  <seealso name="GetVehicleVirtualWorld" />  <seealso name="GetPlayerInterior" />  <returns>The ID of the virtual world the player is currently in.</returns> 
		</member>
		<member name="M:GetPlayerWeapon" syntax="GetPlayerWeapon(playerid)">
			<tagname value="t_WEAPON"/>
			<attribute name="native"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_spec"/>
			<param name="playerid">
				The ID of the player to get the currently held weapon of
			</param>
			<library>omp_player</library>  <summary>Returns the ID of the weapon a player is currently holding.</summary>    <seealso name="GetPlayerWeaponData" />  <seealso name="GivePlayerWeapon" />  <seealso name="ResetPlayerWeapons" />  <remarks>Prior to version <b>0.3z R1-2</b>, when the player state is <b>PLAYER_STATE_PASSENGER</b>  this function returns the weapon held by the player before they entered the vehicle.  If a cheat  is used to spawn a weapon inside a vehicle, this function will not report it.</remarks>  <returns>The ID of the player's current weapon.  Returns <b><c>-1</c></b> if the player specified  does not exist.</returns> 
		</member>
		<member name="M:GetPlayerWeaponData" syntax="GetPlayerWeaponData(playerid, slot, &amp;weapons, &amp;ammo)">
			<attribute name="native"/>
			<referrer name="LooseWeapons"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_weapons"/>
			<referrer name="DoesPlayerHasWeapon"/>
			<param name="playerid">
				The ID of the player whose weapon data to retrieve
			</param>
			<param name="slot">
				<paraminfo>t_WEAPON_SLOT </paraminfo>
				The weapon slot to get data for (<b><c>0-12</c></b>)
			</param>
			<param name="weapons">
				<paraminfo>t_WEAPON &amp; </paraminfo>
				A variable in which to store the weapon ID, passed by reference
			</param>
			<param name="ammo">
				<paraminfo> &amp; </paraminfo>
				A variable in which to store the ammo, passed by reference
			</param>
			<library>omp_player</library>  <summary>Get the weapon and ammo in a specific player's weapon slot (e.g.  the weapon in the 'SMG'  slot).</summary>          <seealso name="GetPlayerWeapon" />  <seealso name="GivePlayerWeapon" />  <remarks>Old weapons with no ammo left are still returned.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player isn't connected and/or the weapon  slot specified is invalid (valid is <b><c>0-12</c></b>).  </returns> 
		</member>
		<member name="M:GetPlayerZ" syntax="GetPlayerZ(playerid)">
			<tagname value="Float"/>
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GetPlayerPos"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPosInFrontOfPlayer" syntax="GetPosInFrontOfPlayer(playerid, &amp;x, &amp;y, distance)">
			<tagname value="Float"/>
			<stacksize value="7"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="distance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetRaceID" syntax="GetRaceID(racename[])">
			<stacksize value="7"/>
			<dependency name="SQL"/>
			<dependency name="cache_get_row_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="racename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetRaceTick" syntax="GetRaceTick()">
			<stacksize value="4"/>
			<referrer name="Race_Timing"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<dependency name="GetTickCount"/>
			<dependency name="RaceTick"/>
		</member>
		<member name="M:GetServerRuleFlags" syntax="GetServerRuleFlags(rule[])">
			<tagname value="E_SERVER_RULE_FLAGS"/>
			<stacksize value="1"/>
			<param name="rule">
				<paraminfo> [] </paraminfo>
			</param>
			<library>omp_core</library> 
		</member>
		<member name="M:GetTT_ID" syntax="GetTT_ID(racename[])">
			<stacksize value="307"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<dependency name="SQL"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="racename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetTickCount" syntax="GetTickCount()">
			<attribute name="native"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="GetDuelTick"/>
			<referrer name="TT_StartRace"/>
			<referrer name="TTGetRaceTick"/>
			<referrer name="GoGoRace"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="GetRaceTick"/>
			<library>omp_core</library>  <summary>Returns the uptime of the actual server (not the open.mp server) in milliseconds.</summary>  <seealso name="tickcount" />  <remarks>GetTickCount will cause problems on servers with uptime of over 24 days as GetTickCount  will eventually warp past the integer size constraints.  However using  <a href="https://gist.github.com/ziggi/5d7d8dc42f54531feba7ae924c608e73">this</a>  function fixes the problem.</remarks>  <remarks>One common use for GetTickCount is for benchmarking.  It can be used to calculate how much  time some code takes to execute.</remarks>  <returns>Uptime of the actual server (not the open.mp server).</returns> 
		</member>
		<member name="M:GetTotalCreatedObjects" syntax="GetTotalCreatedObjects(playerid)">
			<stacksize value="8"/>
			<referrer name="MP_OPC"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_objletters"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="Players"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetUserID" syntax="GetUserID(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="MP_OPC"/>
			<referrer name="LoadKeys"/>
			<referrer name="SaveKeys"/>
			<referrer name="Duel_End"/>
			<referrer name="LoadEasterEggs"/>
			<referrer name="EasterEggPickup"/>
			<referrer name="Easter_Egg_Update"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SQL"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetUserIDName" syntax="GetUserIDName(user)">
			<stacksize value="28"/>
			<referrer name="cmd_nso"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetUserIDName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="user">
			</param>
		</member>
		<member name="M:GetVIPCount" syntax="GetVIPCount()">
			<stacksize value="6"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsVIP"/>
			<dependency name="Iterator@Player"/>
			<dependency name="cellmax"/>
		</member>
		<member name="M:GetVIPTotalCreatedObjects" syntax="GetVIPTotalCreatedObjects(playerid)">
			<stacksize value="8"/>
			<referrer name="cmd_cno"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="Players"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetVType" syntax="GetVType(vid)">
			<stacksize value="134"/>
			<referrer name="Drift"/>
			<referrer name="CheckPlayerState"/>
			<dependency name="GetVehicleModel"/>
			<param name="vid">
			</param>
		</member>
		<member name="M:GetVehicleComponentInSlot" syntax="GetVehicleComponentInSlot(vehicleid, slot)">
			<attribute name="native"/>
			<referrer name="cmd_savecar"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="vehicleid">
				The ID of the vehicle to check for the component
			</param>
			<param name="slot">
				<paraminfo>t_CARMODTYPE </paraminfo>
				The component slot to check for components (see below)
			</param>
			<library>omp_vehicle</library>  <summary>Retrieves the installed component ID (modshop mod(ification)) on a vehicle in a specific  slot.</summary>      <seealso name="AddVehicleComponent" />  <seealso name="GetVehicleComponentType" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" />  <remarks>  <b>Slots:</b><br />  <c>  CARMODTYPE_SPOILER  CARMODTYPE_HOOD  CARMODTYPE_ROOF  CARMODTYPE_SIDESKIRT  CARMODTYPE_LAMPS  CARMODTYPE_NITRO  CARMODTYPE_EXHAUST  CARMODTYPE_WHEELS  CARMODTYPE_STEREO  CARMODTYPE_HYDRAULICS  CARMODTYPE_FRONT_BUMPER  CARMODTYPE_REAR_BUMPER  CARMODTYPE_VENT_RIGHT  CARMODTYPE_VENT_LEFT  </c>  </remarks>  <remarks>  <b>Known Bugs:</b><br />  <ul>  <li>Doesn't work for <b><c>CARMODTYPE_STEREO</c></b>.</li>  <li>Both front bull bars and front bumper components are saved in the <b><c>CARMODTYPE_FRONT_BUMPER</c></b>  slot.  If a vehicle has both of them installed, this function will only return the one which was  installed last.</li>  <li>Both rear bull bars and rear bumper components are saved in the <b><c>CARMODTYPE_REAR_BUMPER</c></b>  slot.  If a vehicle has both of them installed, this function will only return the one which was  installed last.</li>  <li>Both left side skirt and right side skirt are saved in the <b><c>CARMODTYPE_SIDESKIRT</c></b>  slot.  If a vehicle has both of them installed, this function will only return the one which was  installed last. </li>  </ul>  </remarks>  <returns>The ID of the component installed in the specified slot.  Returns <b><c>0</c></b> if no  component in specified vehicle's specified slot, or if vehicle doesn't exist.</returns> 
		</member>
		<member name="M:GetVehicleComponentType" syntax="GetVehicleComponentType(component)">
			<tagname value="t_CARMODTYPE"/>
			<attribute name="native"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="component">
				The component ID to check
			</param>
			<library>omp_vehicle</library>  <summary>Find out what type of component a certain ID is.</summary>    <seealso name="AddVehicleComponent" />  <seealso name="RemoveVehicleComponent" />  <seealso name="GetVehicleComponentInSlot" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" />  <returns>The component slot ID of the specified component or <b><c>-1</c></b> if the component is  invalid.</returns> 
		</member>
		<member name="M:GetVehicleCount" syntax="GetVehicleCount()">
			<stacksize value="6"/>
			<referrer name="cmd_totalcars"/>
			<referrer name="cmd_dcradius"/>
			<dependency name="IsVehicleSpawned"/>
		</member>
		<member name="M:GetVehicleHealth" syntax="GetVehicleHealth(vehicleid, &amp;health)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="DerbyTimer"/>
			<referrer name="CheckPlayerState"/>
			<param name="vehicleid">
				The ID of the vehicle to get the health of
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the vehicle's health, passed by reference
			</param>
			<library>omp_vehicle</library>  <summary>Get the health of a vehicle.</summary>      <seealso name="SetVehicleHealth" />  <seealso name="GetPlayerHealth" />  <seealso name="GetPlayerArmour" />  <remarks>Full vehicle health is <b><c>1000</c></b>, however higher values are possible and increase  the health of the vehicle.</remarks>  <remarks>  <b>Health:</b><br />  <ul>  <li>&gt; 650 - undamaged</li>  <li>650-550 - white Smoke</li>  <li>550-390 - grey Smoke</li>  <li>390-250 - black Smoke</li>  <li>&lt; 250 - on fire (will explode seconds later)</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b> - success.<br />  <b><c>0</c></b> - failure (invalid vehicle ID).<br />  </returns> 
		</member>
		<member name="M:GetVehicleModel" syntax="GetVehicleModel(vehicleid)">
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_delivery"/>
			<referrer name="IsBike"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="IsBoat"/>
			<referrer name="IsPlane"/>
			<referrer name="IsInCar"/>
			<referrer name="cmd_xroof"/>
			<referrer name="cmd_savecar"/>
			<referrer name="TT_AddTimeToDB"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="IsPlayerInInvalidNosVehicle"/>
			<referrer name="GetPlayerVehicleModel"/>
			<referrer name="GetVType"/>
			<param name="vehicleid">
				The ID of the vehicle to get the model of
			</param>
			<library>omp_vehicle</library>  <summary>Gets the <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">model ID</a> of a vehicle.</summary>    <seealso name="GetPlayerVehicleid" />  <seealso name="GetVehiclePos" />  <seealso name="GetVehicleZAngle" />  <seealso name="GetPlayerVehicleSeat" />  <returns>The vehicle's <a href="http://wiki.sa-mp.com/wiki/Vehicle_Models">model ID</a>, or <b><c>0</c></b>  if the vehicle doesn't exist.</returns> 
		</member>
		<member name="M:GetVehicleModelIDFromName" syntax="GetVehicleModelIDFromName(vname[])">
			<stacksize value="7"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_rvehicle"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="vname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetVehicleParamsEx" syntax="GetVehicleParamsEx(vehicleid, &amp;engine, &amp;lights, &amp;alarm, &amp;doors, &amp;bonnet, &amp;boot, &amp;objective)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="cmd_alarm"/>
			<referrer name="cmd_boot"/>
			<referrer name="cmd_bonnet"/>
			<referrer name="cmd_engine"/>
			<referrer name="cmd_doors"/>
			<referrer name="cmd_lights"/>
			<referrer name="cmd_lock"/>
			<referrer name="cmd_unlock"/>
			<param name="vehicleid">
				The ID of the vehicle to get the parameters from
			</param>
			<param name="engine">
				<paraminfo>bool &amp; </paraminfo>
				Get the engine status.  If <b><c>1</c></b>, the engine is running.
			</param>
			<param name="lights">
				<paraminfo>bool &amp; </paraminfo>
				Get the vehicle's lights' state.  If <b><c>1</c></b> the lights are on
			</param>
			<param name="alarm">
				<paraminfo>bool &amp; </paraminfo>
				Get the vehicle's alarm state.  If <b><c>1</c></b> the alarm is (or was) sounding
			</param>
			<param name="doors">
				<paraminfo>bool &amp; </paraminfo>
				Get the lock status of the doors.  If <b><c>1</c></b> the doors are locked
			</param>
			<param name="bonnet">
				<paraminfo>bool &amp; </paraminfo>
				Get the bonnet/hood status.  If <b><c>1</c></b>, it's open
			</param>
			<param name="boot">
				<paraminfo>bool &amp; </paraminfo>
				Get the boot/trunk status. <b><c>1</c></b> means it is open
			</param>
			<param name="objective">
				<paraminfo>bool &amp; </paraminfo>
				Get the objective status. <b><c>1</c></b> means the objective is on
			</param>
			<library>omp_vehicle</library>  <summary>Gets a vehicle's parameters.</summary>                  <seealso name="SetVehicleParamsEx" />  <remarks>If a parameter is unset (SetVehicleParamsEx not used beforehand) the value will be <b><c>-1</c></b>  ('unset').</remarks> 
		</member>
		<member name="M:GetVehiclePos" syntax="GetVehiclePos(vehicleid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Detonate"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="IsVehicleSpawned"/>
			<referrer name="AngleUpdate"/>
			<referrer name="RotatePointVehicleRotation"/>
			<param name="vehicleid">
				The ID of the vehicle to get the position of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the x coordinate, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the y coordinate, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the z coordinate, passed by reference
			</param>
			<library>omp_vehicle</library>  <summary>Gets the position of a vehicle.</summary>          <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="SetVehiclePos" />  <seealso name="GetVehicleZAngle" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:GetVehicleRotationQuat" syntax="GetVehicleRotationQuat(vehicleid, &amp;w, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="RotatePointVehicleRotation"/>
			<param name="vehicleid">
				The ID of the vehicle to get the rotation of
			</param>
			<param name="w">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the first quaternion angle, passed by reference
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the second quaternion angle, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the third quaternion angle, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the fourth quaternion angle, passed by reference
			</param>
			<library>omp_vehicle</library>  <summary>Returns a vehicle's rotation on all axes as a quaternion.</summary>            <seealso name="GetVehicleZAngle" />  <remarks>  <b>To euler:</b><br />  <code>  // GetVehicleRotation Created by IllidanS4<br />  stock GetVehicleRotation(vehicleid, &amp;Float:rx, &amp;Float:ry, &amp;Float:rz)<br />  {<br />  new Float:qw, Float:qx, Float:qy, Float:qz;<br />  GetVehicleRotationQuat(vehicleid, qw, qx, qy, qz);<br />  rx = asin((2 * qy * qz) - (2 * qx * qw));<br />  ry = -atan2((qx * qz) + (qy * qw), 0.5 - (qx * qx) - (qy * qy));<br />  rz = -atan2((qx * qy) + (qz * qw), 0.5 - (qx * qx) - (qz * qz));<br />  }  </code>  </remarks>  <remarks>There is no 'set' variation of this function; you can not SET a vehicle's rotation (apart  from the <a href="#SetVehicleZAngle">z angle</a>) </remarks>  <remarks>This function may return incorrect values for unoccupied vehicles.  The reason is that the  third row of the vehicle's internal rotation matrix gets corrupted if it gets updated while unoccupied.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:GetVehicleVelocity" syntax="GetVehicleVelocity(vehicleid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Vehicle_Speed"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_launcher"/>
			<referrer name="GetPlayerSpeed"/>
			<referrer name="_B@Action"/>
			<param name="vehicleid">
				The ID of the vehicle to get the velocity of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in to which to store the vehicle's x velocity, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in to which to store the vehicle's y velocity, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in to which to store the vehicle's z velocity, passed by reference
			</param>
			<library>omp_vehicle</library>  <summary>Get the velocity of a vehicle on the x, y and z axes.</summary>          <seealso name="GetPlayerVelocity" />  <seealso name="SetVehicleVelocity" />  <seealso name="SetPlayerVelocity" />  <remarks>Multiply vector with <b><c>250.66667</c></b> for kmph or <b><c>199.416667</c></b> for mph  or something...</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle specified does not exist.<br  />  </returns> 
		</member>
		<member name="M:GetVehicleVirtualWorld" syntax="GetVehicleVirtualWorld(vehicleid)">
			<attribute name="native"/>
			<referrer name="RandomMessages"/>
			<referrer name="DerbyTimer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_dac"/>
			<referrer name="Race_Rotation"/>
			<param name="vehicleid">
				The ID of the vehicle to get the virtual world of
			</param>
			<library>omp_vehicle</library>  <summary>Get the virtual world of a vehicle.</summary>    <seealso name="SetVehicleVirtualWorld" />  <seealso name="GetPlayerVirtualWorld" />  <returns>The virtual world that the vehicle is in.</returns> 
		</member>
		<member name="M:GetVehicleZAngle" syntax="GetVehicleZAngle(vehicleid, &amp;angle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="GetXYInFrontOfPlayer"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="ReturnPlayerAngle"/>
			<referrer name="_B@Action"/>
			<referrer name="StuntTele"/>
			<param name="vehicleid">
				The ID of the vehicle to get the z angle of
			</param>
			<param name="angle">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the z rotation, passed by reference
			</param>
			<library>omp_vehicle</library>  <summary>Get the rotation of a vehicle on the z axis (yaw).</summary>      <seealso name="GetVehicleRotationQuat" />  <seealso name="GetVehicleRotation" />  <seealso name="SetVehicleZAngle" />  <seealso name="GetVehiclePos" />  <seealso name="GetPlayerFacingAngle" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.  </returns> 
		</member>
		<member name="M:GetWeaponIDFromName" syntax="GetWeaponIDFromName(WeaponName[])">
			<stacksize value="39"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_giveallweaponradius"/>
			<dependency name="GetWeaponName"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="WeaponName">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetWeaponModel" syntax="GetWeaponModel(weaponid)">
			<stacksize value="2"/>
			<referrer name="LooseWeapons"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:GetWeaponModelIDFromName" syntax="GetWeaponModelIDFromName(wname[])">
			<stacksize value="7"/>
			<referrer name="cmd_duel"/>
			<dependency name="IsNumeric"/>
			<dependency name="WeaponNames"/>
			<dependency name="WeaponNames"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="wname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetWeaponName" syntax="GetWeaponName(weaponid, weapon[], len)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="GetWeaponIDFromName"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_spec"/>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The ID of the weapon to get the name of
			</param>
			<param name="weapon">
				<paraminfo> [] </paraminfo>
				An array to store the weapon's name in, passed by reference
			</param>
			<param name="len">
				The maximum length of the weapon name to store.
			</param>
			<library>omp_core</library>  <summary>Get the name of a weapon.</summary>        <seealso name="GetPlayerWeapon" />  <seealso name="AllowInteriorWeapons" />  <seealso name="GivePlayerWeapon" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The weapon specified does not exist.  </returns> 
		</member>
		<member name="M:GetWeaponSlot" syntax="GetWeaponSlot(weaponid)">
			<tagname value="t_WEAPON_SLOT"/>
			<attribute name="native"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
			</param>
			<library>omp_core</library> 
		</member>
		<member name="M:GetXYInFrontOfPlayer" syntax="GetXYInFrontOfPlayer(playerid, &amp;x2, &amp;y2, distance)">
			<stacksize value="7"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="playerid">
			</param>
			<param name="x2">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="distance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetYSIScriptfilesDir" syntax="GetYSIScriptfilesDir(dir)">
			<stacksize value="1"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ftemporary"/>
			<dependency name="GetYSIScriptfilesDir"/>
			<dependency name="YSI_gsDefaultDirs"/>
			<param name="dir">
				<paraminfo>E_YSI_DIR </paraminfo>
				The ID of the directory.
			</param>
			<library>y_utils - files</library>    <returns>  A directory.  </returns>  <remarks>  Get a YSI scriptfiles directory, or a fallback.  </remarks> 
		</member>
		<member name="M:GivePlayerCash" syntax="GivePlayerCash(playerid, cash)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_sellmyprops"/>
			<referrer name="cmd_xmasgift"/>
			<referrer name="cmd_withdraw"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="MoneyGet"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="CheckRankForLevelUp"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="Money"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
			<param name="cash">
			</param>
		</member>
		<member name="M:GivePlayerMoney" syntax="GivePlayerMoney(playerid, money)">
			<attribute name="native"/>
			<referrer name="SetPlayerCash"/>
			<referrer name="GivePlayerCash"/>
			<referrer name="TakePlayerCash"/>
			<param name="playerid">
				The ID of the player to give money to or take money from
			</param>
			<param name="money">
				The amount of money to give the player.  Use a minus value to take money
			</param>
			<library>omp_player</library>  <summary>Give money to or take money from a player.</summary>      <seealso name="ResetPlayerMoney" />  <seealso name="GetPlayerMoney" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:GivePlayerWeapon" syntax="GivePlayerWeapon(playerid, weaponid, ammo)">
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_skydive"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_playduel"/>
			<referrer name="cmd_dm"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="cmd_para"/>
			<referrer name="cmd_knife"/>
			<referrer name="cmd_golfclub"/>
			<referrer name="cmd_brass"/>
			<referrer name="cmd_bat"/>
			<referrer name="cmd_nightstick"/>
			<referrer name="cmd_vibrator"/>
			<referrer name="cmd_vibrator2"/>
			<referrer name="cmd_dildo2"/>
			<referrer name="cmd_dildo"/>
			<referrer name="cmd_chainsaw"/>
			<referrer name="cmd_shovel"/>
			<referrer name="cmd_cane"/>
			<referrer name="cmd_flowers"/>
			<referrer name="cmd_camera"/>
			<referrer name="cmd_sniper"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_goodies"/>
			<referrer name="cmd_airdrop"/>
			<referrer name="cmd_war"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_hsrpg"/>
			<referrer name="Token_Weapons"/>
			<param name="playerid">
				The ID of the player to give a weapon to
			</param>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The ID of the weapon to give to the player
			</param>
			<param name="ammo">
				The amount of ammo to give to the player
			</param>
			<library>omp_player</library>  <summary>Give a player a weapon with a specified amount of ammo.</summary>        <seealso name="SetPlayerArmedWeapon" />  <seealso name="GetPlayerWeapon" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.<br />  </returns> 
		</member>
		<member name="M:GiveToken" syntax="GiveToken(playerid, token)">
			<stacksize value="1"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="Reward_Send"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Token"/>
			<param name="playerid">
			</param>
			<param name="token">
			</param>
		</member>
		<member name="M:GoGoRace" syntax="GoGoRace()">
			<stacksize value="18"/>
			<referrer name="RaceCountDown"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="CPs"/>
			<dependency name="CPs"/>
			<dependency name="CPsize"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="GetMyColor"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="MyRank"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RaceTick"/>
			<dependency name="RaceTime"/>
			<dependency name="RacesJoined"/>
			<dependency name="SetPlayerRaceCheckpoint"/>
			<dependency name="SetTimer"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="cellmax"/>
			<dependency name="eTimer"/>
			<dependency name="false"/>
			<dependency name="position"/>
			<dependency name="rTimer"/>
			<dependency name="racelabel"/>
			<dependency name="tickcount"/>
			<dependency name="true"/>
		</member>
		<member name="M:GotoPosition" syntax="GotoPosition(playerid, X, Y, Z, bringcar)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_michelles"/>
			<referrer name="cmd_rafinha"/>
			<referrer name="cmd_skydive"/>
			<referrer name="cmd_ic"/>
			<referrer name="cmd_lcp"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_amanda"/>
			<referrer name="cmd_tune"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_pier69"/>
			<referrer name="cmd_libertycity"/>
			<referrer name="cmd_cage"/>
			<referrer name="cmd_m1"/>
			<referrer name="cmd_m2"/>
			<referrer name="cmd_m3"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_runwayls"/>
			<referrer name="cmd_runwaylv"/>
			<referrer name="cmd_runwaysf"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_lsajump"/>
			<referrer name="cmd_beach"/>
			<referrer name="cmd_tf"/>
			<referrer name="cmd_lowrider"/>
			<referrer name="cmd_waa"/>
			<referrer name="cmd_club"/>
			<referrer name="cmd_sws"/>
			<referrer name="cmd_twister"/>
			<referrer name="cmd_loopstunt"/>
			<referrer name="cmd_jump"/>
			<referrer name="cmd_quarry"/>
			<referrer name="cmd_parkour4"/>
			<referrer name="cmd_parkour5"/>
			<referrer name="cmd_parkour6"/>
			<referrer name="cmd_parkour7"/>
			<referrer name="cmd_parajump1"/>
			<referrer name="cmd_parajump2"/>
			<referrer name="cmd_parajump4"/>
			<referrer name="cmd_parajump5"/>
			<referrer name="cmd_dmzone1"/>
			<referrer name="cmd_dmzone2"/>
			<referrer name="cmd_dmzone3"/>
			<referrer name="cmd_dmzone4"/>
			<referrer name="cmd_dmzone5"/>
			<referrer name="cmd_dmzone6"/>
			<referrer name="cmd_dmzone7"/>
			<referrer name="cmd_dmzone8"/>
			<referrer name="cmd_dmzone9"/>
			<referrer name="cmd_dmzone10"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ph"/>
			<referrer name="cmd_wb"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_sex"/>
			<referrer name="cmd_bayside"/>
			<referrer name="cmd_docks"/>
			<referrer name="cmd_methlab"/>
			<referrer name="cmd_snakefarm"/>
			<referrer name="cmd_motel"/>
			<referrer name="cmd_gasstation"/>
			<referrer name="cmd_jays"/>
			<referrer name="cmd_gantdiner"/>
			<referrer name="cmd_8track"/>
			<referrer name="cmd_lshospital"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_cityhall"/>
			<referrer name="cmd_area69"/>
			<referrer name="cmd_waterfall"/>
			<referrer name="cmd_grove"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_pirateship"/>
			<referrer name="cmd_underbase"/>
			<referrer name="cmd_sfadrop"/>
			<referrer name="cmd_alexm"/>
			<referrer name="cmd_bikestunt"/>
			<referrer name="cmd_playaz"/>
			<referrer name="cmd_francy"/>
			<referrer name="cmd_mansion"/>
			<referrer name="cmd_cj101"/>
			<referrer name="cmd_venera"/>
			<referrer name="cmd_vida"/>
			<referrer name="cmd_deathangel"/>
			<referrer name="cmd_boeing747"/>
			<referrer name="cmd_meghan"/>
			<referrer name="cmd_saloun2"/>
			<referrer name="cmd_saloun3"/>
			<referrer name="cmd_braylon"/>
			<referrer name="cmd_gibbs"/>
			<referrer name="cmd_bikepark"/>
			<referrer name="cmd_hq"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_panzehir"/>
			<referrer name="cmd_assa"/>
			<referrer name="cmd_john"/>
			<referrer name="cmd_reham"/>
			<referrer name="cmd_woa"/>
			<referrer name="cmd_police"/>
			<referrer name="cmd_kjj"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_east"/>
			<referrer name="cmd_cvondz"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_datower"/>
			<referrer name="cmd_peckers"/>
			<referrer name="cmd_city"/>
			<referrer name="cmd_ft"/>
			<referrer name="cmd_city2"/>
			<referrer name="cmd_city3"/>
			<referrer name="cmd_city4"/>
			<referrer name="cmd_city5"/>
			<referrer name="cmd_nrgstunt2"/>
			<referrer name="cmd_driftcity"/>
			<referrer name="cmd_drift1"/>
			<referrer name="cmd_drift2"/>
			<referrer name="cmd_drift3"/>
			<referrer name="cmd_drift4"/>
			<referrer name="cmd_drift5"/>
			<referrer name="cmd_drift6"/>
			<referrer name="cmd_windy"/>
			<referrer name="cmd_probe"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_disco"/>
			<referrer name="cmd_factory"/>
			<referrer name="cmd_sumo1"/>
			<referrer name="cmd_vrock"/>
			<referrer name="cmd_vrock2"/>
			<referrer name="cmd_bedroom"/>
			<referrer name="cmd_janitor"/>
			<referrer name="cmd_woozie"/>
			<referrer name="cmd_restaurant"/>
			<referrer name="cmd_sweets"/>
			<referrer name="cmd_dam"/>
			<referrer name="cmd_donuts"/>
			<referrer name="cmd_railroad"/>
			<referrer name="cmd_rcbox"/>
			<referrer name="cmd_crackhouse"/>
			<referrer name="cmd_meathouse"/>
			<referrer name="cmd_prison"/>
			<referrer name="cmd_angelpine"/>
			<referrer name="cmd_graveyard"/>
			<referrer name="cmd_teepee"/>
			<referrer name="cmd_mcasino"/>
			<referrer name="cmd_clowns"/>
			<referrer name="cmd_price"/>
			<referrer name="cmd_boathouse"/>
			<referrer name="cmd_longjump"/>
			<referrer name="cmd_kingring"/>
			<referrer name="cmd_barn"/>
			<referrer name="cmd_lvpolice"/>
			<referrer name="cmd_mall"/>
			<referrer name="cmd_cludia"/>
			<referrer name="cmd_hoshi"/>
			<referrer name="cmd_school"/>
			<referrer name="cmd_beach2"/>
			<referrer name="cmd_reefy"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_launcher"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="StuntTele"/>
			<dependency name="DriftID"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="TDMJoined"/>
			<dependency name="TDrif"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="bringcar">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:H@" syntax="H@(...)">
			<stacksize value="1"/>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_shortfunc</library>  <remarks>  Just a dead-end for spare parameters.  Implementation of  <c>__pragma("unused", x);</c>, which disables the warning for a unused  variable, by using it!  </remarks> 
		</member>
		<member name="M:HIDE_PAWNDOC" syntax="HIDE_PAWNDOC(symbol[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  Create a <c>const</c> that is never used, which has pawndoc documentation  attached to it.  This seems to be the best way to prevent the documentation  from appearing in XML (<c>-r</c>) output - even conditional compilation  doesn't work on comments.  Used internally as <c>YSI_HIDE_PAWNDOC</c>.  <p/>  The input should have some unique name, so when using it within an ifdef  block, don't use the same name as the tested symbol, because the the  replacement in question will be applied to the hidden variable as well.  <p/>  This should also be a globally unique symbol name, because this only works  with `<c>const</c>`, not `<c>static const</c>`.  </remarks> 
		</member>
		<member name="M:HO_Addons" syntax="HO_Addons(playerid, var0, var1, var2, var3, var4, var5, var6)">
			<stacksize value="119"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<dependency name="slots"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="var0">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var3">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var4">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var5">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var6">
			</param>
		</member>
		<member name="M:HO_Addons2" syntax="HO_Addons2(playerid, var6, var0, var1, var2, var3, var4, var5)">
			<stacksize value="119"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<dependency name="slots"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="var6">
			</param>
			<param name="var0">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var3">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var4">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var5">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:HO_Addons3" syntax="HO_Addons3(playerid, var6, var0, var1, var2, var3, var4, var5, var7)">
			<stacksize value="119"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<dependency name="slots"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="var6">
			</param>
			<param name="var0">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var3">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var4">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var5">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="var7">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:HO_delete" syntax="HO_delete(setname[])">
			<stacksize value="239"/>
			<referrer name="cmd_dho"/>
			<dependency name="HO_exist"/>
			<dependency name="SQL"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="setname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:HO_exist" syntax="HO_exist(setname[])">
			<stacksize value="107"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_lho"/>
			<referrer name="cmd_dho"/>
			<referrer name="HO_delete"/>
			<dependency name="SQL"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="setname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:HO_load" syntax="HO_load(playerid, setname[])">
			<stacksize value="121"/>
			<referrer name="cmd_lho"/>
			<dependency name="Allowed"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SQL"/>
			<dependency name="SavedBy"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="bone"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="hName"/>
			<dependency name="modelID"/>
			<dependency name="mysql_query"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<dependency name="slots"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="setname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:HO_save" syntax="HO_save(playerid, setname[])">
			<stacksize value="288"/>
			<referrer name="cmd_sho"/>
			<dependency name="Allowed"/>
			<dependency name="GetPlayerName"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SQL"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="mysql_query"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<dependency name="slots"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="setname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:HTTP" syntax="HTTP(index, method, url[], data[], callback[])">
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<param name="index">
				ID used to differentiate requests that are sent to the same callback (useful  for playerids)
			</param>
			<param name="method">
				<paraminfo>t_HTTP_METHOD </paraminfo>
				The type of request you wish to send
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
				The URL you want to request. (Without 'http://')
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
				Any POST data you want to send with the request
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
				Name of the callback function you want to use to handle responses to this  request
			</param>
			<library>omp_http</library>  <summary>Sends a threaded HTTP request.</summary>            <returns><b><c>1</c></b> on success, <b><c>0</c></b> on failure.</returns>  <remarks>  <b>Request types:</b><br />  <ul>  <li><b><c>HTTP_GET</c></b></li>  <li><b><c>HTTP_POST</c></b></li>  <li><b><c>HTTP_HEAD</c></b></li>  </ul>  </remarks>  <remarks>  <b>Response codes:</b><br />  <ul>  <li><b><c>HTTP_ERROR_BAD_HOST</c></b></li>  <li><b><c>HTTP_ERROR_NO_SOCKET</c></b></li>  <li><b><c>HTTP_ERROR_CANT_CONNECT</c></b></li>  <li><b><c>HTTP_ERROR_CANT_WRITE</c></b></li>  <li><b><c>HTTP_ERROR_CONTENT_TOO_BIG</c></b></li>  <li><b><c>HTTP_ERROR_MALFORMED_RESPONSE</c></b></li>  <li>+ standard HTTP response codes</li>  </ul>  </remarks>  <example>  <code>  // HTTP callback. <br />  public MyHttpResponse(index, responseCode, const data[]) { ... }  </code>  </example> 
		</member>
		<member name="M:HasObjectCameraCollision" syntax="HasObjectCameraCollision(objectid)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="__IsObjectNoCameraCol"/>
			<param name="objectid">
			</param>
			<library>omp_object</library>  <summary></summary> 
		</member>
		<member name="M:HasPlayerObjectCameraCollision" syntax="HasPlayerObjectCameraCollision(playerid, objectid)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="__IsObjectNoCameraCol"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<library>omp_object</library>  <summary></summary> 
		</member>
		<member name="M:HasRPName" syntax="HasRPName(playerid, casing, longNames)">
			<tagname value="bool"/>
			<stacksize value="31"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsRPName"/>
			<param name="playerid">
				Player whose name you want to test.
			</param>
			<param name="casing">
				<paraminfo>bool </paraminfo>
				Check for string casing?  I.e. allow <c>James</c> but  not <c>james</c>.
			</param>
			<param name="longNames">
				<paraminfo>bool </paraminfo>
				Allow more than two name parts?
			</param>
			<library>y_utils - names</library>  <summary>  HasRPName  </summary>        <remarks>  Is this player's name in the form <c>First_Last</c>?  </remarks> 
		</member>
		<member name="M:HexStr" syntax="HexStr(str[])">
			<stacksize value="7"/>
			<referrer name="hexstr"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_utils - conversions</library>  <param name="string">String to convert to a number.</param>  <returns>  value of the passed hex string.  </returns>  <remarks>  Now stops on invalid characters.  </remarks> 
		</member>
		<member name="M:HideModelSelectionMenu" syntax="HideModelSelectionMenu(playerid)">
			<stacksize value="5"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<dependency name="CancelSelectTextDraw"/>
			<dependency name="SetPVarInt"/>
			<dependency name="mS_DestroySelectionMenu"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:HideReport" syntax="HideReport()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsAdmin"/>
			<dependency name="RXDM"/>
			<dependency name="TextDrawHideForPlayer"/>
		</member>
		<member name="M:HideVehicle" syntax="HideVehicle(vehicleid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:IPInfoDB" syntax="IPInfoDB(index, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="index">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IPInfoDB_Admin" syntax="IPInfoDB_Admin(index, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="709"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="split"/>
			<dependency name="strdel"/>
			<param name="index">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IPInfoDB_Connect" syntax="IPInfoDB_Connect(index, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="320"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCLookups"/>
			<dependency name="GPCI"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="SendMessageToAdminsEx_Lookup"/>
			<dependency name="formatex"/>
			<dependency name="split"/>
			<dependency name="strdel"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="index">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IPToInt" syntax="IPToInt(ip[])">
			<stacksize value="6"/>
			<referrer name="Android_OnPlayerConnect"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="strval"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				Dot notation IP to convert to an integer.
			</param>
			<library>y_utils - ip</library>    <returns>  The IP.  </returns>  <remarks>  Converts an IP from a string, such as <c>192.168.0.1</c>, converted to a  32-bit integer, such as <c>0xC0A80001</c>.  Does far fewer checks on the  input than the newer <c>DottedToIntIP</c>, but this function isn't  deprecated for use in situations where the input format is know, such as  directly after a call to <c>GetPlayerIp</c>.  </remarks> 
		</member>
		<member name="M:IS_IN_RANGE" syntax="IS_IN_RANGE(value, lower, upper)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				The number to compare.
			</param>
			<param name="lower">
				The lower limit.
			</param>
			<param name="upper">
				The upper limit.
			</param>
			<library>y_utils - maths</library>        <returns>  Is the value in the given range.  </returns>  <remarks>  Equivalent to:  <code>		(%1) &lt;= (%0) &lt; (%2)</code>  </remarks> 
		</member>
		<member name="M:ITER_SAFE_REMOVE" syntax="ITER_SAFE_REMOVE(iter[], &amp;index)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to deal with safely.
			</param>
			<param name="index">
				<paraminfo> &amp; </paraminfo>
				Index.
			</param>
			<library>y_iterate</library>      <remarks>  Call functions that modify an iterator safely from inside a loop:  <code>  DestroyVehicle(vehicleid)  {  Iter_Remove(Vehicle, vehicleid);  }  foreach (new vehicleid : Vehicle)  {  ITER_SAFE_REMOVE(Vehicle, vehicleid)  {  DestroyVehicle(vehicleid);  }  }  </code>  </remarks> 
		</member>
		<member name="M:InitializeFormatSpecifiers" syntax="InitializeFormatSpecifiers()">
			<stacksize value="7"/>
			<referrer name="formatex"/>
			<dependency name="funcidx"/>
			<dependency name="gs_CustomFormatFunctions"/>
			<dependency name="gs_bIsInitialized"/>
			<dependency name="true"/>
		</member>
		<member name="M:InsertDuelResult" syntax="InsertDuelResult(winner, loser, weapon1, weapon2, ticks, domination)">
			<stacksize value="268"/>
			<referrer name="Duel_End"/>
			<dependency name="SQL"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="winner">
			</param>
			<param name="loser">
			</param>
			<param name="weapon1">
			</param>
			<param name="weapon2">
			</param>
			<param name="ticks">
			</param>
			<param name="domination">
			</param>
		</member>
		<member name="M:IntBool" syntax="IntBool(thebool)">
			<stacksize value="1"/>
			<referrer name="Save"/>
			<dependency name="true"/>
			<param name="thebool">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:IntToBool" syntax="IntToBool(inta)">
			<stacksize value="12"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_vstats"/>
			<dependency name="IntToBool"/>
			<dependency name="formatex"/>
			<param name="inta">
			</param>
		</member>
		<member name="M:IntToIP" syntax="IntToIP(dest[], ip, len)">
			<stacksize value="13"/>
			<dependency name="format"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Where to render the dotted notation IP.
			</param>
			<param name="ip">
				Integer IP version.
			</param>
			<param name="len">
				Size of the destination string.
			</param>
			<library>y_utils - ip</library>       
		</member>
		<member name="M:InterpolateColor" syntax="InterpolateColor(startColour, endColour, value, maxvalue, minvalue)">
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="InterpolateColourLinear"/>
			<dependency name="floatdiv"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="value">
			</param>
			<param name="maxvalue">
			</param>
			<param name="minvalue">
			</param>
			<library>y_utils - colour</library>      <param name="fraction">How far to interpolate between the colours.</param>  <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs linear interpolation between the colours, which isn't  usually the best way wrt human vision, but is fast.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:InterpolateColorGamma" syntax="InterpolateColorGamma(startColour, endColour, fraction)">
			<stacksize value="6"/>
			<dependency name="Debug_Print0"/>
			<dependency name="InterpolateColourGamma"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
				How far to interpolate between the colours.
			</param>
			<library>y_utils - colour</library>        <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs gamma interpolation between the colours, which is a  good balance between complexity and perception.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:InterpolateColorLinear" syntax="InterpolateColorLinear(startColour, endColour, fraction)">
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Debug_Print0"/>
			<dependency name="InterpolateColourLinear"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
				How far to interpolate between the colours.
			</param>
			<library>y_utils - colour</library>        <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs linear interpolation between the colours, which isn't  usually the best way wrt human vision, but is fast.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:InterpolateColorSRGB" syntax="InterpolateColorSRGB(startColour, endColour, fraction)">
			<stacksize value="6"/>
			<dependency name="Debug_Print0"/>
			<dependency name="InterpolateColourSRGB"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
				How far to interpolate between the colours.
			</param>
			<library>y_utils - colour</library>        <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs full sRGB colour space interpolation, which is more  exact even than gamma interpolation, but also a lot slower.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:InterpolateColour" syntax="InterpolateColour(startColour, endColour, value, maxvalue, minvalue)">
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="InterpolateColourLinear"/>
			<dependency name="floatdiv"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="value">
			</param>
			<param name="maxvalue">
			</param>
			<param name="minvalue">
			</param>
			<library>y_utils - colour</library>      <param name="fraction">How far to interpolate between the colours.</param>  <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs linear interpolation between the colours, which isn't  usually the best way wrt human vision, but is fast.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:InterpolateColourGamma" syntax="InterpolateColourGamma(startColour, endColour, fraction)">
			<stacksize value="14"/>
			<referrer name="InterpolateColorGamma"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
				How far to interpolate between the colours.
			</param>
			<library>y_utils - colour</library>  <summary>  InterpolateColourGamma(startColour, endColour, Float:fraction);  </summary>        <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs gamma interpolation between the colours, which is a  good balance between complexity and perception.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:InterpolateColourLinear" syntax="InterpolateColourLinear(startColour, endColour, fraction)">
			<stacksize value="9"/>
			<referrer name="InterpolateColorLinear"/>
			<referrer name="InterpolateColor"/>
			<referrer name="InterpolateColour"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="floatround"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
				How far to interpolate between the colours.
			</param>
			<library>y_utils - colour</library>  <summary>  InterpolateColourLinear(startColour, endColour, Float:fraction);  </summary>        <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs linear interpolation between the colours, which isn't  usually the best way wrt human vision, but is fast.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:InterpolateColourSRGB" syntax="InterpolateColourSRGB(startColour, endColour, fraction)">
			<stacksize value="14"/>
			<referrer name="InterpolateColorSRGB"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="CIEToSRGB"/>
			<dependency name="SRGBToCIE"/>
			<dependency name="floatround"/>
			<param name="startColour">
				One of the two colours.
			</param>
			<param name="endColour">
				The other of the two colours.
			</param>
			<param name="fraction">
				<paraminfo>Float </paraminfo>
				How far to interpolate between the colours.
			</param>
			<library>y_utils - colour</library>  <summary>  InterpolateColourSRGB(startColour, endColour, Float:fraction);  </summary>        <remarks>  This function takes a value (fraction) which is a distance between the two  endpoints as a fraction.  This fraction is applied to the two colours given  to find a third colour at some point between those two colours.  This function performs full sRGB colour space interpolation, which is more  exact even than gamma interpolation, but also a lot slower.  The fraction is optional, and uses the second colour's alpha for blending  if not given.  </remarks> 
		</member>
		<member name="M:IpToInt" syntax="IpToInt(s_szIP[])">
			<stacksize value="5"/>
			<referrer name="MP_OPC"/>
			<dependency name="strval"/>
			<param name="s_szIP">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsActorStreamedIn" syntax="IsActorStreamedIn(actorid, playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<param name="actorid">
				The ID of the actor
			</param>
			<param name="playerid">
				The ID of the player
			</param>
			<library>omp_actor</library>  <summary>Checks if an actor is streamed in for a player.</summary>      <seealso name="CreateActor" />  <seealso name="IsPlayerStreamedIn" />  <returns><b><c>1</c></b> if the actor is streamed in for the player, or <b><c>0</c></b> if it is  not.</returns> 
		</member>
		<member name="M:IsAdmin" syntax="IsAdmin(playerid)">
			<stacksize value="1"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_randomgame"/>
			<referrer name="cmd_version"/>
			<referrer name="cmd_trt"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_spinvehicle"/>
			<referrer name="cmd_spinvehiclex"/>
			<referrer name="cmd_spinvehicley"/>
			<referrer name="cmd_spinvehiclez"/>
			<referrer name="OnPlayerText"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="Login"/>
			<referrer name="cmd_prophelp"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_eject"/>
			<referrer name="cmd_report"/>
			<referrer name="HideReport"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_vips"/>
			<referrer name="cmd_pros"/>
			<referrer name="cmd_lime"/>
			<referrer name="cmd_saveallstats"/>
			<referrer name="cmd_imghelp"/>
			<referrer name="cmd_website"/>
			<referrer name="cmd_facebook"/>
			<referrer name="cmd_avip"/>
			<referrer name="cmd_vipinfo"/>
			<referrer name="cmd_proinfo"/>
			<referrer name="cmd_donateinfo"/>
			<referrer name="cmd_frr"/>
			<referrer name="cmd_admincolor"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="OnPlayerEditDynamicObject"/>
			<referrer name="cmd_nso"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_gom"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_aotv"/>
			<referrer name="cmd_gmlo"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_do"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_dbers"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_adminsettings"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_fav"/>
			<referrer name="cmd_discord"/>
			<referrer name="cmd_fav2"/>
			<referrer name="cmd_irc"/>
			<referrer name="cmd_readrules"/>
			<referrer name="cmd_nospam"/>
			<referrer name="cmd_ts"/>
			<referrer name="cmd_dontask"/>
			<referrer name="cmd_aregister"/>
			<referrer name="cmd_nospawnkill"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_specpolice"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_jp"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_loadrace"/>
			<referrer name="cmd_race"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_racerotation"/>
			<referrer name="cmd_racenos"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="SendMessageToAdminsEx_Lookup"/>
			<referrer name="SendTeleMessageToAdmins"/>
			<referrer name="GetAdminCount"/>
			<referrer name="cmd_viphideout"/>
			<referrer name="cmd_sftower"/>
			<dependency name="AdminLvl"/>
			<dependency name="Players"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsAdminInSpec" syntax="IsAdminInSpec(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="gSpectateID"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsAndroidPlayer" syntax="IsAndroidPlayer(playerid)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsBike" syntax="IsBike(veh)">
			<stacksize value="4"/>
			<dependency name="GetVehicleModel"/>
			<param name="veh">
			</param>
		</member>
		<member name="M:IsBoat" syntax="IsBoat(vehicleid)">
			<stacksize value="14"/>
			<referrer name="cmd_plate"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsCrashDetectPresent" syntax="IsCrashDetectPresent()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="false"/>
		</member>
		<member name="M:IsDynamicObjectMaterialUsed" syntax="IsDynamicObjectMaterialUsed(objectid, materialindex)">
			<attribute name="native"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_do"/>
			<param name="objectid">
			</param>
			<param name="materialindex">
			</param>
		</member>
		<member name="M:IsEven" syntax="IsEven(value)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				Value to check if is even.
			</param>
			<library>y_utils - maths</library>   
		</member>
		<member name="M:IsHex" syntax="IsHex(str[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="ishex"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check.
			</param>
			<library>y_utils - conversions</library>    <returns>  true/false.  </returns> 
		</member>
		<member name="M:IsIP" syntax="IsIP(str[])">
			<stacksize value="17"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="IsNumeric"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsInCar" syntax="IsInCar(playerid)">
			<stacksize value="4"/>
			<referrer name="cmd_pj1"/>
			<referrer name="cmd_tunemenu"/>
			<referrer name="cmd_pj2"/>
			<referrer name="cmd_pj3"/>
			<referrer name="cmd_pj"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsNaN" syntax="IsNaN(value)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The IEEE754 floating point number (<c>Float:</c>) to check.
			</param>
			<library>y_utils - maths</library>    <returns>  An IEEE754 floating-point number is defined as Not-A-Number when all the exponent bits are set,  and the mantissa is non-zero.  The sign bit is ignored, so we first remove that and test the  result is <c>&gt; 0x7F800000</c>.  Because any signed number bigger than that must have all the  MSBs set, plus at least one more.  </returns> 
		</member>
		<member name="M:IsNameConnected" syntax="IsNameConnected(name[])">
			<stacksize value="27"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="false"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsNotAdmin" syntax="IsNotAdmin(playerid)">
			<stacksize value="5"/>
			<dependency name="IsPlayerAdmin"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsNull" syntax="IsNull(str[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check if is null.
			</param>
			<library>y_utils - strings</library>    <remarks>  Uses a new shorter and branchless method, which also works with offsets so  this is valid:  <code>  new str[32]; IsNull(str[5]);  </code>  </remarks> 
		</member>
		<member name="M:IsNumeric" syntax="IsNumeric(str[])">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="isnumeric"/>
			<referrer name="GetWeaponModelIDFromName"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="IsIP"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check
			</param>
			<library>y_utils - conversions</library>    <remarks>  Checks if a given string is numeric.  </remarks> 
		</member>
		<member name="M:IsNumeric2" syntax="IsNumeric2(string[])">
			<stacksize value="4"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_ssb"/>
			<dependency name="false"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsOdd" syntax="IsOdd(value)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				Value to check if is odd.
			</param>
			<library>y_utils - maths</library>   
		</member>
		<member name="M:IsPCPlayer" syntax="IsPCPlayer(playerid)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlane" syntax="IsPlane(vehicleid)">
			<stacksize value="18"/>
			<referrer name="cmd_offroad"/>
			<referrer name="cmd_mega"/>
			<referrer name="cmd_virtualwheels"/>
			<referrer name="cmd_dollar"/>
			<referrer name="cmd_shadow"/>
			<referrer name="cmd_atomic"/>
			<referrer name="cmd_twist"/>
			<referrer name="cmd_cutter"/>
			<referrer name="cmd_rims"/>
			<referrer name="cmd_classic"/>
			<referrer name="cmd_switchwheels"/>
			<referrer name="cmd_import"/>
			<referrer name="cmd_trance"/>
			<referrer name="cmd_hy"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_plate"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsPlayerAdmin" syntax="IsPlayerAdmin(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="cmd_rconadmins"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="IsNotAdmin"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_network</library>  <summary>Check if a player is logged in as an RCON admin.</summary>    <seealso name="SendRconCommand" />  <seealso name="OnRconLoginAttempt" />  <returns><b><c>1</c></b> if the player is an RCON admin, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerAdminLevel" syntax="IsPlayerAdminLevel(playerid, level)">
			<stacksize value="1"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rmbuilding"/>
			<referrer name="cmd_mysqlq"/>
			<referrer name="cmd_restore"/>
			<referrer name="cmd_search"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="cmd_dho"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_ttp"/>
			<referrer name="cmd_setpropbuyable"/>
			<referrer name="cmd_setpropunbuyable"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_cloak"/>
			<referrer name="cmd_uncloak"/>
			<referrer name="cmd_camera"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_dactor"/>
			<referrer name="cmd_actorkill"/>
			<referrer name="cmd_actorstrip"/>
			<referrer name="cmd_addactor"/>
			<referrer name="cmd_rconadmins"/>
			<referrer name="cmd_police"/>
			<referrer name="cmd_answer"/>
			<referrer name="cmd_dpt"/>
			<referrer name="cmd_startctf"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_ctfhelp"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_event"/>
			<referrer name="cmd_event2"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_derbyhelp"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_adddrift"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_expo"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_eo"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_objhelp"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dammi"/>
			<referrer name="cmd_damp"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_daso"/>
			<referrer name="cmd_goodies"/>
			<referrer name="cmd_dsom"/>
			<referrer name="OnPlayerSelectDynamicObject"/>
			<referrer name="cmd_camo"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_playaudio"/>
			<referrer name="cmd_stopaudioall"/>
			<referrer name="cmd_playaudioplayer"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_panztalk"/>
			<referrer name="cmd_amandatalk"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_spooflost"/>
			<referrer name="cmd_clearchat"/>
			<referrer name="cmd_hideme"/>
			<referrer name="cmd_showme"/>
			<referrer name="cmd_moveproxies"/>
			<referrer name="cmd_cancelgiftbox"/>
			<referrer name="cmd_delgiftbox"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_controlpanel"/>
			<referrer name="cmd_togglefakekillsban"/>
			<referrer name="cmd_fakekill"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_fakeban"/>
			<referrer name="cmd_eavr"/>
			<referrer name="cmd_davr"/>
			<referrer name="cmd_togglevehiclerockets"/>
			<referrer name="cmd_changeevadeaction"/>
			<referrer name="cmd_toggleadminmessages"/>
			<referrer name="cmd_readpms"/>
			<referrer name="cmd_readteles"/>
			<referrer name="cmd_toggleiplookups"/>
			<referrer name="cmd_toggleautogodmode"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_hideout"/>
			<referrer name="cmd_hideout2"/>
			<referrer name="cmd_hideout3"/>
			<referrer name="cmd_hideout4"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_serverstats"/>
			<referrer name="cmd_takevip"/>
			<referrer name="cmd_takepro"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_countdown"/>
			<referrer name="cmd_totalcars"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_nuke2"/>
			<referrer name="cmd_nuke"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_setep"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_enablehydraall"/>
			<referrer name="cmd_disablehydraall"/>
			<referrer name="cmd_enablerhinoall"/>
			<referrer name="cmd_disablerhinoall"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<referrer name="cmd_bankrupt"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="cmd_setplayeroranges"/>
			<referrer name="cmd_setplayerapples"/>
			<referrer name="cmd_setplayerraceswon"/>
			<referrer name="cmd_setplayerplaytime"/>
			<referrer name="cmd_setplayerracesjoined"/>
			<referrer name="cmd_setplayerkills"/>
			<referrer name="cmd_setplayerworld"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_healall"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_hsrpg"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_unbanlast"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givejp"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_ann"/>
			<referrer name="cmd_tann"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_ann2"/>
			<referrer name="cmd_ann3"/>
			<referrer name="cmd_ann4"/>
			<referrer name="cmd_gotocoords"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_settoken"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_buildrace"/>
			<referrer name="cmd_raceguide"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="cmd_rweather"/>
			<referrer name="cmd_deathrace"/>
			<referrer name="cmd_cp"/>
			<referrer name="cmd_dcp"/>
			<referrer name="cmd_clearrace"/>
			<referrer name="cmd_cpsize"/>
			<referrer name="cmd_saverace"/>
			<referrer name="cmd_deleterace"/>
			<referrer name="cmd_undeleterace"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_tps"/>
			<dependency name="AdminLvl"/>
			<dependency name="Players"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="level">
			</param>
		</member>
		<member name="M:IsPlayerAttachedObjectSlotUsed" syntax="IsPlayerAttachedObjectSlotUsed(playerid, index)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rho"/>
			<referrer name="cmd_raho"/>
			<referrer name="cmd_myho"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_cbone"/>
			<referrer name="cmd_eho"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<param name="index">
				The index (slot) to check
			</param>
			<library>omp_object</library>  <summary>Check if a player has an object attached in the specified index (slot).</summary>      <seealso name="SetPlayerAttachedObject" />  <seealso name="RemovePlayerAttachedObject" />  <returns><b><c>1</c></b> if used, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerConnected" syntax="IsPlayerConnected(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="IsPCPlayer"/>
			<referrer name="IsAndroidPlayer"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="SSCANF_RunInit"/>
			<referrer name="F@p"/>
			<referrer name="F@P"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_version"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="countdownr"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="GetUserIDName"/>
			<referrer name="GetPlayerClosestPlayer"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="OnPlayerText"/>
			<referrer name="DerbyTimer"/>
			<referrer name="Unjailplayer_Timer"/>
			<referrer name="UnmutePlayer_Timer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="GetPlayerMostRacesWon"/>
			<referrer name="GetPlayerMostCash"/>
			<referrer name="GetPlayerMostCTF"/>
			<referrer name="GetPlayerMostScore"/>
			<referrer name="GetPlayerCountExNPC"/>
			<referrer name="GetPlayerCount"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="IsNameConnected"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_getid"/>
			<referrer name="cmd_duel"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="Duel_End"/>
			<referrer name="ReturnPlayerID"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_eject"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_npcs"/>
			<referrer name="cmd_rconadmins"/>
			<referrer name="cmd_admins"/>
			<referrer name="cmd_bountylist"/>
			<referrer name="cmd_afklist"/>
			<referrer name="cmd_vips"/>
			<referrer name="cmd_pros"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="cmd_closectf"/>
			<referrer name="StartDerby"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_playaudioplayer"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_spooflost"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_dbers"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_fakekill"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_fakeban"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_takevip"/>
			<referrer name="cmd_takepro"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_enablehydraall"/>
			<referrer name="cmd_disablehydraall"/>
			<referrer name="cmd_enablerhinoall"/>
			<referrer name="cmd_disablerhinoall"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<referrer name="cmd_bankrupt"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="cmd_setplayeroranges"/>
			<referrer name="cmd_setplayerapples"/>
			<referrer name="cmd_setplayerraceswon"/>
			<referrer name="cmd_setplayerplaytime"/>
			<referrer name="cmd_setplayerracesjoined"/>
			<referrer name="cmd_setplayerkills"/>
			<referrer name="cmd_setplayerworld"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_healall"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givejp"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_settoken"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="PlaySoundForAll2"/>
			<referrer name="RaceCountDown"/>
			<referrer name="GoGoRace"/>
			<referrer name="SendMessageToAdmins_PM"/>
			<referrer name="SendMessageToMinigame"/>
			<referrer name="SendMessageToAdmins_Tele"/>
			<referrer name="SendMessageToAdmins"/>
			<referrer name="SendMessageToAdminsExPlayer"/>
			<referrer name="SendMessageToAdminsEx"/>
			<referrer name="SendMessageToAdminsEx_Lookup"/>
			<referrer name="SendTeleMessageToAdmins"/>
			<referrer name="GetAdminCount"/>
			<referrer name="GetVIPCount"/>
			<referrer name="PlaySoundForAll"/>
			<referrer name="Chat_SendMessageToAdmins"/>
			<referrer name="IsSeatTaken"/>
			<referrer name="GetNumberOfPlayersOnThisIP"/>
			<referrer name="nofun"/>
			<referrer name="cmd_rtpall"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="AutoAssign"/>
			<referrer name="SendInfoText"/>
			<referrer name="GetUserID"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="GetNPCNameByID"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_player</library>  <summary>Checks if a player is connected (if an ID is taken by a connected player).</summary>    <seealso name="IsPlayerAdmin" />  <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <remarks>This function can be omitted in a lot of cases.  Many other functions already have some  sort of connection check built in.</remarks>  <returns><b><c>1</c></b> if the player is connected, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerInAnyDynamicArea" syntax="IsPlayerInAnyDynamicArea(playerid, recheck)">
			<attribute name="native"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="cmd_ammo"/>
			<referrer name="cmd_detonate"/>
			<referrer name="cmd_planes"/>
			<referrer name="cmd_boats"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_minigun"/>
			<param name="playerid">
			</param>
			<param name="recheck">
			</param>
		</member>
		<member name="M:IsPlayerInAnyVehicle" syntax="IsPlayerInAnyVehicle(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_nos"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_spinvehicle"/>
			<referrer name="cmd_spinvehiclex"/>
			<referrer name="cmd_spinvehicley"/>
			<referrer name="cmd_spinvehiclez"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="PGodTimer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_neon"/>
			<referrer name="cmd_offroad"/>
			<referrer name="cmd_cc"/>
			<referrer name="cmd_alarm"/>
			<referrer name="cmd_boot"/>
			<referrer name="cmd_bonnet"/>
			<referrer name="cmd_engine"/>
			<referrer name="cmd_doors"/>
			<referrer name="cmd_lights"/>
			<referrer name="cmd_xroof"/>
			<referrer name="cmd_mega"/>
			<referrer name="cmd_virtualwheels"/>
			<referrer name="cmd_dollar"/>
			<referrer name="cmd_shadow"/>
			<referrer name="cmd_atomic"/>
			<referrer name="cmd_twist"/>
			<referrer name="cmd_cutter"/>
			<referrer name="cmd_rims"/>
			<referrer name="cmd_classic"/>
			<referrer name="cmd_switchwheels"/>
			<referrer name="cmd_import"/>
			<referrer name="cmd_trance"/>
			<referrer name="cmd_hy"/>
			<referrer name="cmd_pj1"/>
			<referrer name="cmd_pj2"/>
			<referrer name="cmd_pj3"/>
			<referrer name="cmd_pj"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_alpha"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_euros"/>
			<referrer name="cmd_limo"/>
			<referrer name="cmd_adromada"/>
			<referrer name="cmd_at400"/>
			<referrer name="cmd_beagle"/>
			<referrer name="cmd_dodo"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_skin"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_fix"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_lock"/>
			<referrer name="cmd_unlock"/>
			<referrer name="cmd_sumo1"/>
			<referrer name="cmd_launcher"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_tram"/>
			<referrer name="cmd_kart"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_jp"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_join"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRace"/>
			<referrer name="TT_Exit"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="cmd_tp"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="GetPlayerSpeed"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="ReturnPlayerAngle"/>
			<referrer name="Drift"/>
			<referrer name="AngleUpdate"/>
			<referrer name="StuntTele"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_player</library>  <summary>Check if a player is inside any vehicle (as a driver or passenger).</summary>    <seealso name="IsPlayerInVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <returns><b><c>1</c></b> if the player is in a vehicle, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerInDeliveryVehicle" syntax="IsPlayerInDeliveryVehicle(playerid)">
			<stacksize value="5"/>
			<referrer name="cmd_delivery"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="dVehicles"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerInInvalidNosVehicle" syntax="IsPlayerInInvalidNosVehicle(playerid)">
			<stacksize value="36"/>
			<referrer name="cmd_nos"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="false"/>
			<dependency name="print"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerInRaceCheckpoint" syntax="IsPlayerInRaceCheckpoint(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_checkpoint</library>  <summary>Check if the player is inside their current set race checkpoint  (<a href="#SetPlayerRaceCheckpoint">SetPlayerRaceCheckpoint</a>).</summary>    <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <returns><b><c>1</c></b> is the player is in a race checkpoint, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerInRangeOfPoint" syntax="IsPlayerInRangeOfPoint(playerid, range, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="countdownr"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_givetokenradius"/>
			<param name="playerid">
				The ID of the player
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
				The furthest distance the player can be from the point to be in range
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate of the point to check the range to
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate of the point to check the range to
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate of the point to check the range to
			</param>
			<library>omp_player</library>  <summary>Checks if a player is in range of a point.  This native function is faster than the PAWN  implementation using distance formula.</summary>            <seealso name="GetPlayerDistanceFromPoint" />  <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="GetPlayerPos" />  <returns><b><c>1</c></b> if the player is in range, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerInVehicle" syntax="IsPlayerInVehicle(playerid, vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_eject"/>
			<referrer name="IsPlayerInInvalidNosVehicle"/>
			<referrer name="IsPlayerInDeliveryVehicle"/>
			<param name="playerid">
				ID of the player
			</param>
			<param name="vehicleid">
				ID of the vehicle
			</param>
			<library>omp_player</library>  <summary>Checks if a player is in a specific vehicle.</summary>      <seealso name="IsPlayerInAnyVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <returns><b><c>1</c></b> if the player is in the vehicle, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerLoggedIn" syntax="IsPlayerLoggedIn(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="Logged"/>
			<dependency name="Players"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerNPC" syntax="IsPlayerNPC(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="SSCANF_RunInit"/>
			<referrer name="Iter_OnPlayerConnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="GetPlayerClosestPlayer"/>
			<referrer name="PGodTimer"/>
			<referrer name="GetPlayerCountExNPC"/>
			<referrer name="cmd_npcs"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_washplayer"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_player</library>  <summary>Check if a player is an actual player or an NPC.</summary>    <seealso name="ConnectNPC" />  <seealso name="IsPlayerAdmin" />  <returns><b><c>1</c></b> if the player is an NPC, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerNearProperty" syntax="IsPlayerNearProperty(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="cmd_setpropbuyable"/>
			<referrer name="cmd_setpropunbuyable"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_sell"/>
			<dependency name="operator&lt;=(Float:,_:)"/>
			<dependency name="GetDistanceToProperty"/>
			<dependency name="PropertiesAmount"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerStreamedIn" syntax="IsPlayerStreamedIn(targetid, playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<param name="targetid">
				The ID of the player to check is streamed in
			</param>
			<param name="playerid">
				The ID of the player to check if playerid is streamed in for
			</param>
			<library>omp_player</library>  <summary>Checks if a player is streamed in another player's client.</summary>      <seealso name="IsActorStreamedIn" />  <seealso name="IsVehicleStreamedIn" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <seealso name="OnVehicleStreamIn" />  <seealso name="OnVehicleStreamOut" />  <remarks>Players aren't streamed in on their own client, so if playerid is the same as targetid it  will return false!</remarks>  <remarks>Players stream out if they are more than <b><c>150</c></b> meters away (see <c>server.cfg</c>  - <c>stream_distance</c>)</remarks>  <returns><b><c>1</c></b> if the player is streamed in, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPointInRangeOfPoint" syntax="IsPointInRangeOfPoint(x, y, z, x2, y2, z2, range)">
			<stacksize value="1"/>
			<referrer name="cmd_dsor"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsRPName" syntax="IsRPName(name[], casing, longNames)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="HasRPName"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name to test.
			</param>
			<param name="casing">
				<paraminfo>bool </paraminfo>
				Check for string casing?  I.e. allow <c>James</c> but  not <c>james</c>.
			</param>
			<param name="longNames">
				<paraminfo>bool </paraminfo>
				Allow more than two name parts?
			</param>
			<library>y_utils - names</library>  <summary>  IsRPName  </summary>        <remarks>  Is this name in the form <c>First_Last</c>?  Note this doesn't handle names  like "MacLeod", nor double-barralled surnames like "Smith-Thompson".  </remarks> 
		</member>
		<member name="M:IsSeatTaken" syntax="IsSeatTaken(vehicleid, seatid)">
			<stacksize value="4"/>
			<referrer name="RandomMessages"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_tt"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="Race_Rotation"/>
			<referrer name="FindSeat"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVehicleSeat"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="cellmax"/>
			<param name="vehicleid">
			</param>
			<param name="seatid">
			</param>
		</member>
		<member name="M:IsUserAdmin" syntax="IsUserAdmin(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="AdminLvl"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsVIP" syntax="IsVIP(playerid)">
			<stacksize value="1"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_camera"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_skin"/>
			<referrer name="cmd_lime"/>
			<referrer name="cmd_vipcolor"/>
			<referrer name="cmd_vipcmds"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_ctf"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_eo"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objhelp"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_hideout"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_countdown"/>
			<referrer name="cmd_asay"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_jp"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_buildrace"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="cmd_rweather"/>
			<referrer name="cmd_deathrace"/>
			<referrer name="cmd_cp"/>
			<referrer name="cmd_dcp"/>
			<referrer name="cmd_clearrace"/>
			<referrer name="cmd_cpsize"/>
			<referrer name="cmd_saverace"/>
			<referrer name="SaveRace"/>
			<referrer name="GetVIPCount"/>
			<referrer name="cmd_viphideout"/>
			<referrer name="cmd_sftower"/>
			<dependency name="Players"/>
			<dependency name="VIP"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsVIPLevel2" syntax="IsVIPLevel2(playerid)">
			<stacksize value="1"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="RandomMessages"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_cloak"/>
			<referrer name="cmd_uncloak"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_vipcmds"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_countdown"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_jp"/>
			<referrer name="cmd_god"/>
			<dependency name="Players"/>
			<dependency name="VIP"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsValidActor" syntax="IsValidActor(actorid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<param name="actorid">
				The ID of the actor to check
			</param>
			<library>omp_actor</library>  <summary>Checks if an actor ID is valid.</summary>    <returns><b><c>1</c></b> if the actor is valid, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsValidDBWeapon" syntax="IsValidDBWeapon(dbw)">
			<stacksize value="1"/>
			<referrer name="OnPlayerDeath"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="dbw">
			</param>
		</member>
		<member name="M:IsValidDynamic3DTextLabel" syntax="IsValidDynamic3DTextLabel(id)">
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="Login"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="id">
				<paraminfo>Text3D </paraminfo>
			</param>
		</member>
		<member name="M:IsValidDynamicActor" syntax="IsValidDynamicActor(actorid)">
			<attribute name="native"/>
			<referrer name="cmd_dactor"/>
			<referrer name="cmd_actorkill"/>
			<referrer name="cmd_actorstrip"/>
			<param name="actorid">
			</param>
		</member>
		<member name="M:IsValidDynamicCP" syntax="IsValidDynamicCP(checkpointid)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:IsValidDynamicMapIcon" syntax="IsValidDynamicMapIcon(iconid)">
			<attribute name="native"/>
			<referrer name="cmd_dammi"/>
			<param name="iconid">
			</param>
		</member>
		<member name="M:IsValidDynamicObject" syntax="IsValidDynamicObject(objectid)">
			<attribute name="native"/>
			<referrer name="GetPlayerClosestStreamedObject"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_dsor"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:IsValidDynamicPickup" syntax="IsValidDynamicPickup(pickupid)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_damp"/>
			<referrer name="cmd_dpickup"/>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:IsValidModel" syntax="IsValidModel(modelid)">
			<stacksize value="2"/>
			<dependency name="ObjectList"/>
			<dependency name="oID"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:IsValidObjectModel" syntax="IsValidObjectModel(modelid)">
			<stacksize value="1"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_pickup"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:IsValidSAMPObject" syntax="IsValidSAMPObject(modelid)">
			<stacksize value="1"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_pickup"/>
			<param name="modelid">
			</param>
		</member>
		<member name="M:IsValidSkin" syntax="IsValidSkin(skinid)">
			<stacksize value="24"/>
			<referrer name="cmd_skin"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="skinid">
			</param>
		</member>
		<member name="M:IsValidWeapon" syntax="IsValidWeapon(weaponid)">
			<stacksize value="1"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_giveallweaponradius"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:IsVehicleHidden" syntax="IsVehicleHidden(vehicleid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:IsVehicleSpawned" syntax="IsVehicleSpawned(vehicleid)">
			<stacksize value="9"/>
			<referrer name="GetVehicleCount"/>
			<referrer name="cmd_callcar"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="GetVehiclePos"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsVehicleStreamedIn" syntax="IsVehicleStreamedIn(vehicleid, playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Android_OnYSIInit"/>
			<param name="vehicleid">
				The ID of the vehicle to check
			</param>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_vehicle</library>  <summary>Checks if a vehicle is streamed in for a player.  Only nearby vehicles are streamed in (visible)  for a player.</summary>      <seealso name="IsPlayerStreamedIn" />  <seealso name="OnVehicleStreamIn" />  <seealso name="OnVehicleStreamOut" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <returns>  <b><c>0</c></b>: Vehicle is not streamed in for the player, or the function failed to execute (player  and/or vehicle do not exist).<br />  <b><c>1</c></b>: Vehicle is streamed in for the player.  </returns> 
		</member>
		<member name="M:Iter_ActorDo" syntax="Iter_ActorDo(add, actorid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Actor"/>
			<dependency name="Iterator@Actor"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="actorid">
			</param>
		</member>
		<member name="M:Iter_Add" syntax="Iter_Add(iter[], value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to add the data to.
			</param>
			<param name="value">
				Value to add to the iterator.
			</param>
			<library>y_iterate</library>      <remarks>  Wrapper for Iter_AddInternal.  native Iter_Add(Iterator:Name&lt;&gt;, value);  </remarks> 
		</member>
		<member name="M:Iter_AddStaticVehicle" syntax="Iter_AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2)">
			<stacksize value="10"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="AddStaticVehicle"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="YSI_gcII"/>
			<dependency name="YSI_gsIter_VehicleDo"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:Iter_AddStaticVehicleEx" syntax="Iter_AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2, respawn_delay, addSiren)">
			<stacksize value="12"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="AddStaticVehicleEx"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="YSI_gcII"/>
			<dependency name="YSI_gsIter_VehicleDo"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addSiren">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Iter_Add_InternalC" syntax="Iter_Add_InternalC(&amp;count, array[], size, value)">
			<stacksize value="8"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Android_OnYSIInit"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<referrer name="OnRconLoginAttempt"/>
			<referrer name="OnPlayerStreamIn"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="OnActorStreamIn"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="OnVehicleStreamIn"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="Iter_Prev_InternalD"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Array start index.
			</param>
			<param name="value">
				Item to add.
			</param>
			<library>y_iterate</library>          <remarks>  Adds a value to a given iterator set.  Now detects when you try and add the  last item multiple times, as well as all the other items.  Now simplified  even further with the new internal representation.  The modulo code is for  iterator reversal.  </remarks> 
		</member>
		<member name="M:Iter_Add_InternalD" syntax="Iter_Add_InternalD(&amp;count, array[], start, size, value)">
			<stacksize value="3"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_All_Internal" syntax="Iter_All_Internal(array[], size, value)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				The internal iterator data.
			</param>
			<param name="size">
				The internal iterator size.
			</param>
			<param name="value">
				The current iterator step.
			</param>
			<library>y_iterate</library>        <remarks>  Loop over all values in any iterator.  This is different to looping over the  iterator normally for multi-dimensional iterators, since it will return all  values in ANY iterator in their numerical order.  For single dimensional  iterators it is exactly the same, just a little slower.  </remarks> 
		</member>
		<member name="M:Iter_Alloc" syntax="Iter_Alloc(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the first free slot in.
			</param>
			<library>y_iterate</library>    <remarks>  Finds an empty slot in an iterator, adds that slot to the iterator, and  returns the now added slot.  native Iter_Alloc(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_Alloc_InternalC" syntax="Iter_Alloc_InternalC(&amp;count, array[], size, ...)">
			<stacksize value="4"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Array start index.
			</param>
			<param name="...">
			</param>
			<library>y_iterate</library>        <remarks>  Finds the first free slot in the iterator and add it.  Excepting requested  values.  </remarks> 
		</member>
		<member name="M:Iter_Alloc_InternalD" syntax="Iter_Alloc_InternalD(&amp;count, array[], start, size, ...)">
			<stacksize value="4"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:Iter_Available" syntax="Iter_Available(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the number of unused elements in.
			</param>
			<library>y_iterate</library>    <remarks>  Returns the number of unused items in this iterator.  native Iter_Available(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_Begin" syntax="Iter_Begin(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the start of.
			</param>
			<library>y_iterate</library>    <remarks>  Gets a point BEFORE the start of the iterator (the theoretical beginning).  </remarks> 
		</member>
		<member name="M:Iter_Clear" syntax="Iter_Clear(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to empty.
			</param>
			<library>y_iterate</library>    <remarks>  Wrapper for Iter_Clear_Internal.  Although it doesn't fit my normal strict spacing, the end of "B" is correct,  namely: "_:F@s(%0),%2)".  This uses the "_:%0,)" macro to consume  a trailing comma when nothing is given in "%2", so I can't have a leading  space sadly.  "- 2" in place of the normal "- 1" is CORRECT!  native Iter_Clear(IteratorArray:Name[]&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_Clear_InternalC" syntax="Iter_Clear_InternalC(array[], size, entries, ...)">
			<stacksize value="5"/>
			<referrer name="Android_OnYSIInit"/>
			<dependency name="setarg"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of information.
			</param>
			<param name="entries">
				Size of the count data.
			</param>
			<param name="...">
				Optional single multi-iterator to clear.
			</param>
			<library>y_iterate</library>          <remarks>  Resets an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Clear_InternalD" syntax="Iter_Clear_InternalD(array[], size, entries, elems, counts[], start)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of base array.
			</param>
			<param name="entries">
				Size of the count data.
			</param>
			<param name="elems">
				Number of iterator elements.
			</param>
			<param name="counts">
				<paraminfo> [] </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="start">
				Optional single multi-iterator to clear.
			</param>
			<library>y_iterate</library>              <remarks>  Resets an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Contains" syntax="Iter_Contains(iter[], value)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to check membership of.
			</param>
			<param name="value">
				Value to check.
			</param>
			<library>y_iterate</library>      <remarks>  Checks if the given value is in the given iterator.  native Iter_Contains(Iterator:Name&lt;&gt;, value);  </remarks> 
		</member>
		<member name="M:Iter_Contains_InternalC" syntax="Iter_Contains_InternalC(array[], size, value)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="value">
				Item to check.
			</param>
			<library>y_iterate</library>        <remarks>  Checks if this item is in the iterator.  </remarks> 
		</member>
		<member name="M:Iter_Contains_InternalD" syntax="Iter_Contains_InternalD(count, array[], size, start, value)">
			<stacksize value="1"/>
			<param name="count">
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="start">
			</param>
			<param name="value">
				Item to check.
			</param>
			<library>y_iterate</library>        <remarks>  Checks if this item is in the iterator.  </remarks> 
		</member>
		<member name="M:Iter_Count" syntax="Iter_Count(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the number of elements in.
			</param>
			<library>y_iterate</library>    <remarks>  Returns the number of items in this iterator.  native Iter_Count(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_Count_InternalC" syntax="Iter_Count_InternalC(counts[], slots)">
			<stacksize value="2"/>
			<param name="counts">
				<paraminfo> [] </paraminfo>
				Number of items in each iterator part.
			</param>
			<param name="slots">
				Number of multi-iterator values.
			</param>
			<library>y_iterate</library>      <remarks>  Return the total number of elements in all slots together.  </remarks> 
		</member>
		<member name="M:Iter_CreateActor" syntax="Iter_CreateActor(modelid, X, Y, Z, Rotation)">
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="CreateActor"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalActor"/>
			<dependency name="Iterator@LocalActor"/>
			<dependency name="YSI_gcII"/>
			<dependency name="YSI_gsIter_ActorDo"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Rotation">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Iter_CreateVehicle" syntax="Iter_CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay, addSiren)">
			<stacksize value="12"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_alpha"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_euros"/>
			<referrer name="cmd_limo"/>
			<referrer name="cmd_adromada"/>
			<referrer name="cmd_at400"/>
			<referrer name="cmd_beagle"/>
			<referrer name="cmd_dodo"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_tram"/>
			<referrer name="cmd_kart"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_join"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="CreateVehicle"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="YSI_gcII"/>
			<dependency name="YSI_gsIter_VehicleDo"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addSiren">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Iter_Debug" syntax="Iter_Debug(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to
			</param>
			<library>y_iterate</library>    <remarks>  Print information about an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Debug_InternalC" syntax="Iter_Debug_InternalC(name[], array[], size, count)">
			<stacksize value="19"/>
			<dependency name="cellmax"/>
			<dependency name="printf"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				iterator name.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="count">
				The number of elements added.
			</param>
			<library>y_iterate</library>          <remarks>  Print the contents of an iterator for debugging.  </remarks> 
		</member>
		<member name="M:Iter_Debug_InternalD" syntax="Iter_Debug_InternalD(name[], array[], size, counts[], slots)">
			<stacksize value="21"/>
			<dependency name="cellmax"/>
			<dependency name="printf"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				iterator name.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="counts">
				<paraminfo> [] </paraminfo>
				The number of elements added.
			</param>
			<param name="slots">
				The number of start points.
			</param>
			<library>y_iterate</library>            <remarks>  Print the contents of an iterator for debugging.  </remarks> 
		</member>
		<member name="M:Iter_DestroyActor" syntax="Iter_DestroyActor(actorid)">
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="DestroyActor"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@LocalActor"/>
			<dependency name="Iterator@LocalActor"/>
			<dependency name="YSI_gcII"/>
			<dependency name="YSI_gsIter_ActorDo"/>
			<dependency name="false"/>
			<param name="actorid">
			</param>
		</member>
		<member name="M:Iter_DestroyVehicle" syntax="Iter_DestroyVehicle(vehicleid)">
			<stacksize value="7"/>
			<referrer name="DerbyTimer"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="DestroyVehicleEx"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="YSI_gcII"/>
			<dependency name="YSI_gsIter_VehicleDo"/>
			<dependency name="false"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_End" syntax="Iter_End(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the end of.
			</param>
			<library>y_iterate</library>    <remarks>  Gets a point AFTER the end of the iterator (think "MAX_PLAYERS").  </remarks> 
		</member>
		<member name="M:Iter_Excludes" syntax="Iter_Excludes(iter[], value)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to check membership of.
			</param>
			<param name="value">
				Value to check.
			</param>
			<library>y_iterate</library>      <remarks>  Checks if the given value is NOT in the given iterator.  native Iter_Excludes(Iterator:Name&lt;&gt;, value);  </remarks> 
		</member>
		<member name="M:Iter_FastClear" syntax="Iter_FastClear(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to empty.
			</param>
			<library>y_iterate</library>    <remarks>  Uses a static array copy to blank the iterator instead of a loop.  BROKEN!  native Iter_FastClear(IteratorArray:Name[]&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_First" syntax="Iter_First(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the first valid element in.
			</param>
			<library>y_iterate</library>    <remarks>  Gets the first element in an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Free" syntax="Iter_Free(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the first free slot in.
			</param>
			<library>y_iterate</library>    <remarks>  Wrapper for Iter_Free_Internal.  Returns a slot NOT in the current  iterator.  native Iter_Free(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_FreeMulti" syntax="Iter_FreeMulti(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the multi-iterator to get the first free slot in.
			</param>
			<library>y_iterate</library>    <remarks>  Wrapper for Iter_FreeMulti_Internal.  Returns a slot NOT in the current  multi-iterator.  native Iter_FreeMulti(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_FreeMulti_Internal" syntax="Iter_FreeMulti_Internal(array[], trueSize, start)">
			<stacksize value="2"/>
			<dependency name="cellmin"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				multi-iterator data.
			</param>
			<param name="trueSize">
				Size of the multi-iterator.
			</param>
			<param name="start">
				End [?, since start points are backwards] of the multi-iterator.
			</param>
			<library>y_iterate</library>        <remarks>  Finds the first free multi index in the multi-iterator.  </remarks> 
		</member>
		<member name="M:Iter_Free_Internal" syntax="Iter_Free_Internal(array[], size)">
			<stacksize value="2"/>
			<dependency name="cellmin"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<library>y_iterate</library>      <remarks>  Finds the first free slot in the iterator.  </remarks> 
		</member>
		<member name="M:Iter_Func@Fib" syntax="Iter_Func@Fib(&amp;iterstart, cur)">
			<stacksize value="1"/>
			<dependency name="cellbits"/>
			<param name="iterstart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="cur">
			</param>
		</member>
		<member name="M:Iter_Func@Filter" syntax="Iter_Func@Filter(cur, val, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="val">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@N" syntax="Iter_Func@N(cur, n)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="n">
			</param>
		</member>
		<member name="M:Iter_Func@NonNull" syntax="Iter_Func@NonNull(cur, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Null" syntax="Iter_Func@Null(cur, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Powers" syntax="Iter_Func@Powers(&amp;iterstart, cur, base)">
			<stacksize value="1"/>
			<param name="iterstart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="cur">
			</param>
			<param name="base">
			</param>
		</member>
		<member name="M:Iter_Func@Random" syntax="Iter_Func@Random(&amp;iterstart, cur, count, min, max)">
			<stacksize value="3"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="iterstart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="cur">
			</param>
			<param name="count">
			</param>
			<param name="min">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:Iter_Func@Range" syntax="Iter_Func@Range(cur, min, max, step)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="cur">
			</param>
			<param name="min">
			</param>
			<param name="max">
			</param>
			<param name="step">
			</param>
		</member>
		<member name="M:Iter_Func@Until" syntax="Iter_Func@Until(cur, val, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="val">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@VehicleDriver" syntax="Iter_Func@VehicleDriver(vehicleid)">
			<stacksize value="6"/>
			<dependency name="Iter_Func@VehicleOccupant"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_Func@VehicleOccupant" syntax="Iter_Func@VehicleOccupant(vehicleid, includeDriver, includePassenger)">
			<stacksize value="7"/>
			<referrer name="Iter_Func@VehiclePassenger"/>
			<referrer name="Iter_Func@VehicleDriver"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="Iter_YieldReturn"/>
			<dependency name="Iterator@PlayersFromVehicles"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="YSI_gVehicleSeats"/>
			<dependency name="cellmax"/>
			<dependency name="clamp"/>
			<param name="vehicleid">
			</param>
			<param name="includeDriver">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="includePassenger">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Iter_Func@VehiclePassenger" syntax="Iter_Func@VehiclePassenger(vehicleid)">
			<stacksize value="6"/>
			<dependency name="Iter_Func@VehicleOccupant"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_GetMulti" syntax="Iter_GetMulti(iter[], value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to check membership of.
			</param>
			<param name="value">
				Value to check.
			</param>
			<library>y_iterate</library>      <returns>  Index in which the value is contained in the multi-iterator.  </returns>  <remarks>  Checks if the given value is in the given iterator, and if it is return which index it is contained.  native Iter_GetMulti(Iterator:Name&lt;&gt;, value);  </remarks> 
		</member>
		<member name="M:Iter_GetMulti_Internal" syntax="Iter_GetMulti_Internal(array[], trueSize, size, value)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				multi-iterator data.
			</param>
			<param name="trueSize">
				Size of the multi-iterator per index.
			</param>
			<param name="size">
				Size of the multi-iterator.
			</param>
			<param name="value">
				Item to check.
			</param>
			<library>y_iterate</library>          <returns>  INVALID_ITERATOR_SLOT on failure.  Index of the multi-iterator the value is contained.  </returns>  <remarks>  Checks if this item is in the multi-iterator at all, and if it is returns which index it is in.  </remarks> 
		</member>
		<member name="M:Iter_Index" syntax="Iter_Index(iter[], index, wrap)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get a slot in by index.
			</param>
			<param name="index">
				Index.
			</param>
			<param name="wrap">
				<paraminfo>bool </paraminfo>
				Keep going around until a value is found?
			</param>
			<library>y_iterate</library>        <remarks>  Wrapper for Iter_Index_Internal.  Returns the Nth value in the iterator  (requires looping due to the way iterators are stored and optimised for  loops not direct access).  native Iter_Index(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_Index_Internal" syntax="Iter_Index_Internal(count, array[], start, size, index, wrap)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Array start index.
			</param>
			<param name="size">
				Array size.
			</param>
			<param name="index">
				Index to find Nth value.
			</param>
			<param name="wrap">
				<paraminfo>bool </paraminfo>
				Keep going around until a value is found?
			</param>
			<library>y_iterate</library>              <remarks>  Allows you to find the Nth value in the iterator.  DO NOT call this in a  loop to get all values - that totally defeats the purpose of "foreach", just  use a normal "foreach" loop with an index counter for that case.  </remarks> 
		</member>
		<member name="M:Iter_Init" syntax="Iter_Init(iter[][])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [][] </paraminfo>
				Name of the iterator array to initialise.
			</param>
			<library>y_iterate</library>    <remarks>  Wrapper for Iter_Init_Internal.  When <c>__COMPILER_NESTED_ELLIPSIS</c> is  set, this isn't needed because multi-dimensional iterators can be  initialised with the new <c>{{0, 1, ...), ...}</c> feature.  In that case  <c>I@ = 0</c> is called as a <c>void</c> function that does nothing but ends  in a semi-colon (<c>I@</c> is used a lot in YSI as a <c>do nothing</c>  enabler).  <code>native Iter_Init(IteratorArray:Name[]&lt;&gt;);</code>  </remarks> 
		</member>
		<member name="M:Iter_InitAndClear" syntax="Iter_InitAndClear(iter[][])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [][] </paraminfo>
				Name of the iterator array to initialise.
			</param>
			<library>y_iterate</library>    <remarks>  Wrapper for Iter_Init_Internal.  ALWAYS resets the array.  <code>native Iter_InitAndClear(IteratorArray:Name[]&lt;&gt;);</code>  </remarks> 
		</member>
		<member name="M:Iter_Init_Internal" syntax="Iter_Init_Internal(array[][], first[], s0, s1, entries)">
			<stacksize value="9"/>
			<referrer name="Android_OnYSIInit"/>
			<dependency name="cellbytes"/>
			<dependency name="memcpy"/>
			<param name="array">
				<paraminfo> [][] </paraminfo>
				Iterator array to initialise.
			</param>
			<param name="first">
				<paraminfo> [] </paraminfo>
				First iterator slot.
			</param>
			<param name="s0">
				Size of first dimension.
			</param>
			<param name="s1">
				Size of second dimension.
			</param>
			<param name="entries">
				Number of start points.
			</param>
			<library>y_iterate</library>            <remarks>  Multi-dimensional arrays can't be initialised at compile time, so need to be  done at run time, which is slightly annoying.  </remarks> 
		</member>
		<member name="M:Iter_IsEmpty" syntax="Iter_IsEmpty(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to test the emptiness of.
			</param>
			<library>y_iterate</library>    <remarks>  For multi-iterators <c>Iter_IsEmpty(a&lt;&gt;)</c> and <c>Iter_IsEmpty(a&lt;5&gt;)</c>  are different.  The first returns <c>true</c> when all values are unused  by any slot.  The second returns <c>true</c> when that slot alone has no  values, even if every single value is used by other slots.  native Iter_IsEmpty(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_IsFull" syntax="Iter_IsFull(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to test the fullness of.
			</param>
			<library>y_iterate</library>    <remarks>  For multi-iterators <c>Iter_IsFull(a&lt;&gt;)</c> and <c>Iter_IsFull(a&lt;5&gt;)</c>  are different.  The first returns <c>true</c> when all values are used, in  any slot.  The second returns <c>true</c> when that slot alone has all  values.  native Iter_IsFull(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_Last" syntax="Iter_Last(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to
			</param>
			<library>y_iterate</library>    <remarks>  Gets the last element in an iterator.  Works by getting the previous item  from the one BEFORE the first element (i.e. the one before the sentinel).  </remarks> 
		</member>
		<member name="M:Iter_NewYield" syntax="Iter_NewYield()">
			<stacksize value="1"/>
			<library>y_iterate</library>  <remarks>  </remarks> 
		</member>
		<member name="M:Iter_Next" syntax="Iter_Next(iter[], cur)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the next element in.
			</param>
			<param name="cur">
				The current element.
			</param>
			<library>y_iterate</library>      <remarks>  Gets the element in an iterator after the current one.  </remarks> 
		</member>
		<member name="M:Iter_NonEmpty" syntax="Iter_NonEmpty(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to test the non-emptiness of.
			</param>
			<library>y_iterate</library>    <remarks>  For multi-iterators <c>Iter_NonEmpty(a&lt;&gt;)</c> and <c>Iter_NonEmpty(a&lt;5&gt;)</c>  are different.  The first returns <c>true</c> when any value is used, in  any slot.  The second returns <c>true</c> when that slot alone has any  values.  native Iter_NonEmpty(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_NonFull" syntax="Iter_NonFull(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to test the non-fullness of.
			</param>
			<library>y_iterate</library>    <remarks>  For multi-iterators <c>Iter_NonFull(a&lt;&gt;)</c> and <c>Iter_NonFull(a&lt;5&gt;)</c>  are different.  The first returns <c>true</c> when not all values are used  anywhere.  The second returns <c>true</c> when that slot alone is missing  some values, even if those values are in other slots.  native Iter_NonFull(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_None_Internal" syntax="Iter_None_Internal(array[], size, value)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				The internal iterator data.
			</param>
			<param name="size">
				The internal iterator size.
			</param>
			<param name="value">
				The current iterator step.
			</param>
			<library>y_iterate</library>        <remarks>  Loop over all values NOT in any iterator.  Similar to repeatedly calling  <c>Iter_Free</c>, though that will return the same value twice if called  twice in a row.  Instead, this function will loop through the missing ones.  </remarks> 
		</member>
		<member name="M:Iter_OnActorStreamIn" syntax="Iter_OnActorStreamIn(actorid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnActorStreamIn"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnActorStreamOut" syntax="Iter_OnActorStreamOut(actorid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnActorStreamOut"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnPlayerConnect" syntax="Iter_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="30"/>
			<automaton name="_ALS"/>
			<referrer name="ScriptInit_OnPlayerConnect"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Join"/>
			<dependency name="SSCANF_OnPlayerConnect"/>
			<dependency name="SSCANF_gInit"/>
			<param name="playerid">
			</param>
			<library>sscanf</library>  <remarks>  Called when a player connects.  Actually increments an internal count so that  if a script ends and <c>OnPlayerDisconnect</c> is called then <c>sscanf</c>  still knows that the player is really connected.  Also stores their name  internally.  </remarks> 
		</member>
		<member name="M:Iter_OnPlayerDisconnect" syntax="Iter_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="_ALS"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<dependency name="SSCANF_Leave"/>
			<dependency name="SSCANF_OnPlayerDisconnect"/>
			<dependency name="SSCANF_gInit"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
			<library>sscanf</library>  <remarks>  Called when a player disconnects, or when a script is ended.  </remarks> 
		</member>
		<member name="M:Iter_OnPlayerStateChange" syntax="Iter_OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="PlayerSpectatePlayer"/>
			<dependency name="PlayerSpectateVehicle"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="__gOnce"/>
			<dependency name="afob"/>
			<dependency name="gSpectateID"/>
			<dependency name="gSpectateType"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newstate">
				<paraminfo>t_PLAYER_STATE </paraminfo>
			</param>
			<param name="oldstate">
				<paraminfo>t_PLAYER_STATE </paraminfo>
			</param>
		</member>
		<member name="M:Iter_OnPlayerStreamIn" syntax="Iter_OnPlayerStreamIn(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerStreamIn"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnPlayerStreamOut" syntax="Iter_OnPlayerStreamOut(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnPlayerStreamOut"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnRconLoginAttempt" syntax="Iter_OnRconLoginAttempt(ip[], password[], success)">
			<attribute name="public"/>
			<stacksize value="26"/>
			<automaton name="_ALS"/>
			<referrer name="OnRconLoginAttempt"/>
			<dependency name="AddPlayerBan"/>
			<dependency name="BanEx2"/>
			<dependency name="Banned"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Registered"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="cellmax"/>
			<dependency name="formatex"/>
			<dependency name="print"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:Iter_OnVehicleStreamIn" syntax="Iter_OnVehicleStreamIn(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnVehicleStreamIn"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnVehicleStreamOut" syntax="Iter_OnVehicleStreamOut(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnVehicleStreamOut"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Iter_OnYSIInit" syntax="Iter_OnYSIInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="Android_OnYSIInit"/>
		</member>
		<member name="M:Iter_Prev" syntax="Iter_Prev(iter[], cur)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the previous element in.
			</param>
			<param name="cur">
				The current element.
			</param>
			<library>y_iterate</library>      <remarks>  Gets the element in an iterator before the current one.  Slow.  </remarks> 
		</member>
		<member name="M:Iter_Prev_InternalC" syntax="Iter_Prev_InternalC(array[], elems, size, slot)">
			<stacksize value="2"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="elems">
				Number of elements in the iterator.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="slot">
				The current slot.
			</param>
			<library>y_iterate</library>          <remarks>  Gets the element in an iterator that points to the current element.  </remarks> 
		</member>
		<member name="M:Iter_Prev_InternalD" syntax="Iter_Prev_InternalD(array[], size, slot)">
			<stacksize value="5"/>
			<referrer name="Iter_Add_InternalC"/>
			<referrer name="Iter_SafeRemove_1"/>
			<dependency name="min"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="slot">
				The current slot.
			</param>
			<library>y_iterate</library>        <remarks>  Gets the element in an iterator that points to the current element.  </remarks> 
		</member>
		<member name="M:Iter_Random" syntax="Iter_Random(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get a random slot from.
			</param>
			<library>y_iterate</library>    <remarks>  Wrapper for Iter_RandomInternal.  native Iter_Random(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_RandomAdd" syntax="Iter_RandomAdd(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to add a random slot to.
			</param>
			<library>y_iterate</library>    <remarks>  Wrapper for Iter_RandomAddInternal.  native Iter_RandomAdd(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_RandomAdd_InternalC" syntax="Iter_RandomAdd_InternalC(&amp;count, array[], start, ...)">
			<stacksize value="10"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_RandomFree_Multi"/>
			<dependency name="Iter_RandomFree_Single"/>
			<dependency name="__cell_shift"/>
			<dependency name="__param3_offset"/>
			<dependency name="__stk"/>
			<dependency name="cellbytes"/>
			<dependency name="numargs"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
			</param>
			<library>y_iterate</library>        <remarks>  Adds a random value to an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomAdd_InternalD" syntax="Iter_RandomAdd_InternalD(counts[], array[], size, slots, start, slot, ...)">
			<stacksize value="12"/>
			<dependency name="Iter_Add_InternalD"/>
			<dependency name="Iter_RandomFree_Multi"/>
			<dependency name="Iter_RandomFree_Single"/>
			<dependency name="__cell_shift"/>
			<dependency name="__param6_offset"/>
			<dependency name="__stk"/>
			<dependency name="cellbytes"/>
			<dependency name="numargs"/>
			<param name="counts">
				<paraminfo> [] </paraminfo>
				Number of items in each iterator part.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="slots">
				Number of multi-iterator values.
			</param>
			<param name="start">
				
			</param>
			<param name="slot">
				Multi-iterator slot to add to.
			</param>
			<param name="...">
			</param>
			<library>y_iterate</library>              <remarks>  Adds a random value to an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomFree" syntax="Iter_RandomFree(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get a random unused slot for.
			</param>
			<library>y_iterate</library>    <remarks>  Wrapper for Iter_RandomFree_Internal.  native Iter_RandomFree(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_RandomFree_InternalC" syntax="Iter_RandomFree_InternalC(count, array[], start, ...)">
			<stacksize value="10"/>
			<dependency name="Iter_RandomFree_Multi"/>
			<dependency name="Iter_RandomFree_Single"/>
			<dependency name="__cell_shift"/>
			<dependency name="__param3_offset"/>
			<dependency name="__stk"/>
			<dependency name="cellbytes"/>
			<dependency name="numargs"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
			</param>
			<library>y_iterate</library>        <remarks>  Returns a random unused value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomFree_InternalD" syntax="Iter_RandomFree_InternalD(counts[], array[], start, slots, ...)">
			<stacksize value="11"/>
			<dependency name="Iter_RandomFree_Multi"/>
			<dependency name="Iter_RandomFree_Single"/>
			<dependency name="__cell_shift"/>
			<dependency name="__param4_offset"/>
			<dependency name="__stk"/>
			<dependency name="cellbytes"/>
			<dependency name="numargs"/>
			<param name="counts">
				<paraminfo> [] </paraminfo>
				Number of items in each iterator part.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="slots">
				Number of multi-iterator values.
			</param>
			<param name="...">
			</param>
			<library>y_iterate</library>          <remarks>  Returns a random unused value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomFree_Multi" syntax="Iter_RandomFree_Multi(count, array[], start, num)">
			<stacksize value="7"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<dependency name="__cell_shift"/>
			<dependency name="__param4_offset"/>
			<dependency name="cellbytes"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="num">
			</param>
			<library>y_iterate</library>        <remarks>  Returns a random unused value from an iterator.  Takes a load of hidden  extra parameters on the stack, which are values to not return.  </remarks> 
		</member>
		<member name="M:Iter_RandomFree_Single" syntax="Iter_RandomFree_Single(count, array[], start)">
			<stacksize value="3"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<library>y_iterate</library>        <remarks>  Returns a random unused value from an iterator.  No exclusions.  </remarks> 
		</member>
		<member name="M:Iter_RandomRemove" syntax="Iter_RandomRemove(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to remove a random slot from.
			</param>
			<library>y_iterate</library>    <remarks>  Wrapper for Iter_RandomRemoveInternal.  native Iter_RandomRemove(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_RandomRemove_InternalC" syntax="Iter_RandomRemove_InternalC(&amp;count, array[], start, ...)">
			<stacksize value="10"/>
			<dependency name="Iter_Random_Impl"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="__cell_shift"/>
			<dependency name="__param3_offset"/>
			<dependency name="__stk"/>
			<dependency name="cellbytes"/>
			<dependency name="numargs"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
			</param>
			<library>y_iterate</library>        <remarks>  Removes a random value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomRemove_InternalD" syntax="Iter_RandomRemove_InternalD(&amp;count, array[], size, start, ...)">
			<stacksize value="11"/>
			<dependency name="Iter_Random_Impl"/>
			<dependency name="Iter_Remove_InternalD"/>
			<dependency name="__cell_shift"/>
			<dependency name="__param4_offset"/>
			<dependency name="__stk"/>
			<dependency name="cellbytes"/>
			<dependency name="numargs"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
			</param>
			<library>y_iterate</library>        <param name="slots">Number of multi-iterator values.</param>  <remarks>  Removes a random value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Random_Impl" syntax="Iter_Random_Impl(count, array[], start, num)">
			<stacksize value="7"/>
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<dependency name="__cell_shift"/>
			<dependency name="__param4_offset"/>
			<dependency name="cellbytes"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="num">
				Number of extra parameters hidden on the stack.
			</param>
			<library>y_iterate</library>          <remarks>  Returns a random value from an iterator.  If additional parameters are given they are excluded from consideration.  This allows you to chain calls to get multiple random values so follows:  new president     = Iter_Random(Player);  new vicePresident = Iter_Random(Player, president);  new primeMinister = Iter_Random(Player, president, vicePresident);  new minister      = Iter_Random(Player, president, vicePresident, primeMinister);  None of those values can be the same, and this saves horrible random-  dependent loops.  </remarks> 
		</member>
		<member name="M:Iter_Random_Internal" syntax="Iter_Random_Internal(count, array[], start, ...)">
			<stacksize value="10"/>
			<dependency name="Iter_Random_Impl"/>
			<dependency name="__cell_shift"/>
			<dependency name="__param3_offset"/>
			<dependency name="__stk"/>
			<dependency name="cellbytes"/>
			<dependency name="numargs"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			<param name="...">
				Excluded elements.
			</param>
			<library>y_iterate</library>          <remarks>  Returns a random value from an iterator.  If additional parameters are given they are excluded from consideration.  This allows you to chain calls to get multiple random values so follows:  new president     = Iter_Random(Player);  new vicePresident = Iter_Random(Player, president);  new primeMinister = Iter_Random(Player, president, vicePresident);  new minister      = Iter_Random(Player, president, vicePresident, primeMinister);  None of those values can be the same, and this saves horrible random-  dependent loops.  </remarks> 
		</member>
		<member name="M:Iter_Remove" syntax="Iter_Remove(iter[], value)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to remove data from.
			</param>
			<param name="value">
				Data to remove.
			</param>
			<library>y_iterate</library>      <remarks>  Wrapper for Iter_RemoveInternal.  native Iter_Remove(Iterator:Name&lt;&gt;, value);  </remarks> 
		</member>
		<member name="M:Iter_Remove_InternalC" syntax="Iter_Remove_InternalC(&amp;count, array[], size, value)">
			<stacksize value="6"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="ScriptInit_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStreamOut"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="OnActorStreamOut"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="OnVehicleStreamOut"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="cellmin"/>
			<dependency name="min"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Number of iterator elements.
			</param>
			<param name="value">
				Item to remove.
			</param>
			<library>y_iterate</library>          <remarks>  Removes a value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Remove_InternalD" syntax="Iter_Remove_InternalD(&amp;count, array[], start, size, value)">
			<stacksize value="2"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_SafeRemove" syntax="Iter_SafeRemove(iter[], value, &amp;next)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to remove data from.
			</param>
			<param name="value">
				Data to remove.
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
				Container for the pointer to the next element.
			</param>
			<library>y_iterate</library>        <remarks>  Wrapper for Iter_SafeRemoveInternal.  Common use:  Iter_SafeRemove(iter, i, i);  native Iter_SafeRemove(Iterator:Name&lt;&gt;, value, &amp;next);  </remarks> 
		</member>
		<member name="M:Iter_SafeRemove_1" syntax="Iter_SafeRemove_1(&amp;count, array[], size, value, &amp;last)">
			<stacksize value="6"/>
			<dependency name="Iter_Prev_InternalD"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				Iterator data.
			</param>
			<param name="size">
				Number of iterator elements.
			</param>
			<param name="value">
				Item to remove.
			</param>
			<param name="last">
				<paraminfo> &amp; </paraminfo>
				Pointer in which to store the last pointer.
			</param>
			<library>y_iterate</library>            <remarks>  Removes a value from an iterator safely.  </remarks> 
		</member>
		<member name="M:Iter_SafeRemove_2" syntax="Iter_SafeRemove_2(&amp;count, array[], start, size, value, &amp;last)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
			<param name="last">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Iter_Size" syntax="Iter_Size(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the size of.
			</param>
			<library>y_iterate</library>    <remarks>  Accesses the size of an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Starts" syntax="Iter_Starts(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the true starts of.
			</param>
			<library>y_iterate</library>    <remarks>  Accesses the number of starts in a multi-iterator.  </remarks> 
		</member>
		<member name="M:Iter_TrueArray" syntax="Iter_TrueArray(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the true array of.
			</param>
			<library>y_iterate</library>    <remarks>  Accesses the internal array of an iterator.  </remarks> 
		</member>
		<member name="M:Iter_TrueCount" syntax="Iter_TrueCount(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the true count of.
			</param>
			<library>y_iterate</library>    <remarks>  Accesses the internal count of an iterator.  </remarks> 
		</member>
		<member name="M:Iter_TrueMulti" syntax="Iter_TrueMulti(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Multi iterator to get the true count of.
			</param>
			<library>y_iterate</library>    <remarks>  Accesses the internal count of a multi-iterator.  </remarks> 
		</member>
		<member name="M:Iter_TrueSize" syntax="Iter_TrueSize(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the true size of.
			</param>
			<library>y_iterate</library>    <remarks>  Accesses the internal size of an iterator.  </remarks> 
		</member>
		<member name="M:Iter_VehicleDo" syntax="Iter_VehicleDo(add, vehicleid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Vehicle"/>
			<dependency name="Iterator@Vehicle"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_YieldEnter" syntax="Iter_YieldEnter()">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="Debug_Print0"/>
			<dependency name="YSI_gIteratorDepth"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="__11_cells"/>
			<dependency name="__1_cell"/>
			<dependency name="__3_cells"/>
			<dependency name="__6_cells"/>
			<dependency name="__frame_offset"/>
			<dependency name="__hea"/>
			<dependency name="__return_offset"/>
			<dependency name="__stk"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<library>y_iterate</library>  <remarks>  </remarks> 
		</member>
		<member name="M:Iter_YieldLoop" syntax="Iter_YieldLoop()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_ITER_YIELD_FIRST"/>
			<dependency name="E_ITER_YIELD_STACK_SIZE"/>
			<dependency name="YSI_gIteratorDepth"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="YSI_g_sPtr"/>
			<dependency name="YSI_g_sStackPtr"/>
			<dependency name="__2_cells"/>
			<dependency name="__4_cells"/>
			<dependency name="__5_cells"/>
			<dependency name="__6_cells"/>
			<dependency name="__cip"/>
			<dependency name="__frm"/>
			<dependency name="__hea"/>
			<dependency name="__jit_jump"/>
			<dependency name="__minus1"/>
			<dependency name="__stk"/>
			<dependency name="false"/>
			<dependency name="memcpy"/>
			<dependency name="true"/>
			<library>y_iterate</library>  <remarks>  <p>Because of the strange way we manipulate the stack, this function actually  gets called twice as often as you would expect.  Essentially, for this  (psudo-)loop:</p>  <code>  for (new i = iter_func(); Iter_YieldLoop(); )                              <br />  {                                                                          <br />  }  </code>  <p>The loop is entered and <c>iter_func()</c> is called.  This indirectly  calls <c>yield</c>, which returns to the call point of that function.  The  loop check is then entered and <c>Iter_YieldLoop()</c> is called.  Depending  on if <c>yield</c> was actually used, the main loop body is entered.  At the  end of that iteration, the loop check is run again and so  <c>Iter_YieldLoop()</c> is called again.</p>  <p>This is where it gets wierd!</p>  <p><c>Iter_YieldLoop()</c> does a stack copy and a jump in to the earlier  call to <c>iter_func</c>, whose return address is earlier in the code.  When  a <c>yield</c> is done again, that return is to the first part of the  <c>for</c> loop, which then instantly enters the loop check section and calls  <c>Iter_YieldLoop()</c> again (as a side-effect, saving the iterator value in  the loop variable).</p>  <p>So for <c>N</c> iterations of the loop, <c>Iter_YieldLoop()</c> is called  <c>2N + 1</c> times, and should be made aware of which phase of its calls it  is in.</p>  <p>This is, of course, made more complicated by nested loops, but that just  means we need to store the state on our own stack.</p>  </remarks> 
		</member>
		<member name="M:Iter_YieldReturn" syntax="Iter_YieldReturn(value)">
			<stacksize value="1"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<dependency name="I@"/>
			<dependency name="YSI_gIteratorDepth"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="YSI_g_sPtr"/>
			<dependency name="YSI_g_sStackPtr"/>
			<dependency name="__1_cell"/>
			<dependency name="__2_cells"/>
			<dependency name="__3_cells"/>
			<dependency name="__4_cells"/>
			<dependency name="__5_cells"/>
			<dependency name="__7_cells"/>
			<dependency name="__cip"/>
			<dependency name="__frame_offset"/>
			<dependency name="__frm"/>
			<dependency name="__hea"/>
			<dependency name="__jit_jump"/>
			<dependency name="__return_offset"/>
			<dependency name="__stk"/>
			<dependency name="memcpy"/>
			<param name="value">
			</param>
		</member>
		<member name="M:IterativeColouredSkipSPacked" syntax="IterativeColouredSkipSPacked(text[], start, &amp;colour)">
			<stacksize value="4"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<dependency name="cellmin"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<library>y_utils - textwrap</library>  <remarks>  Internal implementation.  </remarks> 
		</member>
		<member name="M:IterativeColouredSkipSUnpacked" syntax="IterativeColouredSkipSUnpacked(text[], start, &amp;colour)">
			<stacksize value="4"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<dependency name="cellmin"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<library>y_utils - textwrap</library>  <remarks>  Internal implementation.  </remarks> 
		</member>
		<member name="M:IterativeColouredSkipWPacked" syntax="IterativeColouredSkipWPacked(text[], lastIndex, start, &amp;hyphen, &amp;colour, useHyphen)">
			<stacksize value="9"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lastIndex">
			</param>
			<param name="start">
			</param>
			<param name="hyphen">
				<paraminfo>bool &amp; </paraminfo>
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="useHyphen">
				<paraminfo>bool </paraminfo>
			</param>
			<library>y_utils - textwrap</library>  <remarks>  Internal implementation.  </remarks> 
		</member>
		<member name="M:IterativeColouredSkipWUnpacked" syntax="IterativeColouredSkipWUnpacked(text[], lastIndex, start, &amp;hyphen, &amp;colour, useHyphen)">
			<stacksize value="9"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="lastIndex">
			</param>
			<param name="start">
			</param>
			<param name="hyphen">
				<paraminfo>bool &amp; </paraminfo>
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="useHyphen">
				<paraminfo>bool </paraminfo>
			</param>
			<library>y_utils - textwrap</library>  <remarks>  Internal implementation.  </remarks> 
		</member>
		<member name="M:IterativeColouredTextSplitter" syntax="IterativeColouredTextSplitter(text[], width, start, &amp;end, &amp;next, &amp;hyphen, &amp;colour, useHyphen)">
			<tagname value="bool"/>
			<stacksize value="10"/>
			<dependency name="IterativeColouredSkipSPacked"/>
			<dependency name="IterativeColouredSkipSUnpacked"/>
			<dependency name="IterativeColouredSkipWPacked"/>
			<dependency name="IterativeColouredSkipWUnpacked"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The input string to split up.
			</param>
			<param name="width">
				The maximum size of the output (including hyphen).
			</param>
			<param name="start">
				Where in the string to start the next line.
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
				The index to end the current line at (excluding hyphen).
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
				The index to start the next line from (skips trailing spaces).
			</param>
			<param name="hyphen">
				<paraminfo>bool &amp; </paraminfo>
				Should a hyphen be inserted in to the output?
			</param>
			<param name="colour">
				<paraminfo> &amp; </paraminfo>
				The colour for the start of the next line.
			</param>
			<param name="useHyphen">
				<paraminfo>bool </paraminfo>
				May a hyphen be included?
			</param>
			<library>y_utils - textwrap</library>  <summary>  bool:IterativeColouredTextSplitter(const text[], width, start, &amp;end, &amp;next, &amp;bool:hyphen)  </summary>                  <returns>  Does the function need to be called again to show another line?  </returns>  <remarks>  Split some text in to multiple lines.  With sensible breaks at spaces or  mid-word if they're long enough.  Unlike <c>IterativeTextSplitter</c> it  will never split in the middle of <c>{RRGGBB}</c> colour sequences, and can  ignore them for many checks.  </remarks> 
		</member>
		<member name="M:IterativeTextSplitter" syntax="IterativeTextSplitter(text[], width, start, &amp;end, &amp;next, &amp;hyphen, useHyphen)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The input string to split up.
			</param>
			<param name="width">
				The maximum size of the output (including hyphen).
			</param>
			<param name="start">
				Where in the string to start the next line.
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
				The index to end the current line at (excluding hyphen).
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
				The index to start the next line from (skips trailing spaces).
			</param>
			<param name="hyphen">
				<paraminfo>bool &amp; </paraminfo>
				Should a hyphen be inserted in to the output?
			</param>
			<param name="useHyphen">
				<paraminfo>bool </paraminfo>
				May a hyphen be included?
			</param>
			<library>y_utils - textwrap</library>  <summary>  bool:IterativeTextSplitter(const text[], width, start, &amp;end, &amp;next, &amp;bool:hyphen)  </summary>                <returns>  Does the function need to be called again to show another line?  </returns>  <remarks>  Split some text in to multiple lines.  With sensible breaks at spaces or  mid-word if they're long enough.  </remarks> 
		</member>
		<member name="M:Iterator" syntax="Iterator(name)">
			<tagname value="Iterator"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="name">
			</param>
			<library>y_iterate</library>  <remarks>  Creates a new iterator start/array pair.  </remarks> 
		</member>
		<member name="M:Iterator@Reverse" syntax="Iterator@Reverse(iter[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Iterator to run backwards.
			</param>
			<library>y_iterate</library>    <remarks>  Run an iterator backwards.  </remarks> 
		</member>
		<member name="M:JenkinsHash" syntax="JenkinsHash(str[])">
			<stacksize value="4"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				the string to hash.
			</param>
			<library>y_utils - encodings</library>    <returns>  the Jenkins hash of the input string  </returns>  <remarks>  This is a 32bit hash system so is not very secure, however we're only using  this as a string enumerator to uniquely identify strings easilly and allow  for a binary search of strings based on the hash of their name.  </remarks> 
		</member>
		<member name="M:K@" syntax="K@(function[], fmat[], ...)">
			<stacksize value="9"/>
			<dependency name="@_"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="K@"/>
			<dependency name="Q@"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="YSI_g_sCallData"/>
			<dependency name="YSI_g_sPropCaller"/>
			<dependency name="YSI_g_sPropVarArg"/>
			<dependency name="YSI_g_sYSIM_STRING"/>
			<dependency name="YSI_g_sYSI_MAX_STRING"/>
			<dependency name="__1_cell"/>
			<dependency name="__2_cells"/>
			<dependency name="__3_cells"/>
			<dependency name="__4_cells"/>
			<dependency name="__7_cells"/>
			<dependency name="__args_offset"/>
			<dependency name="__frame_offset"/>
			<dependency name="__frm"/>
			<dependency name="__hea"/>
			<dependency name="__local0_offset"/>
			<dependency name="__local1_offset"/>
			<dependency name="__local2_offset"/>
			<dependency name="__m7_cells"/>
			<dependency name="__param0_offset"/>
			<dependency name="__stk"/>
			<dependency name="getproperty"/>
			<dependency name="setarg"/>
			<dependency name="setproperty"/>
			<dependency name="strunpack"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_shortfunc</library>  <returns>  A number, the result of a named function call.  </returns>  <remarks>  <c>CallRemoteFunction</c> wrapper that handles references and string  returns.  Once the call is complete it loops through the specifier string to  look for any <c>v</c>s and gets their return values from specially named  properties (<c>"V" + idx</c> in group 8).  Can also call in the current  script instead of a remote script.  </remarks> 
		</member>
		<member name="M:Kick" syntax="Kick(playerid)">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_maprecord"/>
			<referrer name="delaykick"/>
			<param name="playerid">
				The ID of the player to kick
			</param>
			<library>omp_network</library>  <summary>Kicks a player from the server.  They will have to quit the game and re-connect if they  wish to continue playing.</summary>    <seealso name="Ban" />  <seealso name="BanEx" />  <remarks>Any action taken directly before Kick() (such as sending a message  with <a href="#SendClientMessage">SendClientMessage</a>) will not reach the player.  A timer must  be used to delay the kick.</remarks>  <returns>This function always returns <b><c>1</c></b>, even if the function failed to execute (player  specified doesn't exist).</returns> 
		</member>
		<member name="M:Kick2" syntax="Kick2(playerid)">
			<stacksize value="7"/>
			<referrer name="OnPlayerText"/>
			<referrer name="Login"/>
			<referrer name="cmd_kick"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:KillServer" syntax="KillServer()">
			<stacksize value="3"/>
			<dependency name="SendRconCommand"/>
		</member>
		<member name="M:KillTimer" syntax="KillTimer(timerid)">
			<attribute name="native"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="FIXES_OnClientCheckResponse"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="DerbyTimer"/>
			<referrer name="UnmutePlayer_Timer"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_startctf"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_endrace"/>
			<referrer name="TT_Announcement"/>
			<referrer name="TT_Exit"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="nofun"/>
			<referrer name="SendInfoText"/>
			<referrer name="DriftSave"/>
			<referrer name="Drift"/>
			<referrer name="CheckPlayerState"/>
			<param name="timerid">
				The ID of the timer to kill (returned by <a href="#SetTimer">SetTimer</a> or  <a href="#SetTimerEx">SetTimerEx</a>)
			</param>
			<library>omp_core</library>  <summary>Kills (stops) a running timer.</summary>    <seealso name="SetTimer" />  <seealso name="SetTimerEx" />  <returns>This function always returns <b><c>0</c></b>.</returns> 
		</member>
		<member name="M:L@" syntax="L@(ret, ...)">
			<stacksize value="8"/>
			<dependency name="YSI_g_sPropReturn"/>
			<dependency name="YSI_g_sPropVarArg"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<dependency name="setproperty"/>
			<param name="ret">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_shortfunc</library>  <remarks>  Used in remote function wrappers to put reference parameter retusn in to the  specially named properties (<c>"V" + idx</c> in group 8) for their return.  Also put the true return number in to a property, because remote call order  can't be relied on.  </remarks> 
		</member>
		<member name="M:LevenshteinDistance" syntax="LevenshteinDistance(stringA[], stringB[])">
			<stacksize value="11"/>
			<dependency name="DoLevenshteinDistance"/>
			<dependency name="DoLevenshteinDistancePackA"/>
			<dependency name="DoLevenshteinDistancePackAB"/>
			<dependency name="DoLevenshteinDistancePackB"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<param name="stringA">
				<paraminfo> [] </paraminfo>
				First string to compare.
			</param>
			<param name="stringB">
				<paraminfo> [] </paraminfo>
				Second string to compare.
			</param>
			<library>y_utils - similarity</library>      <returns>  The levenshtein difference (0 if the same).  </returns>  <remarks>  The levenshtein difference is a measure of the difference between two  strings, given as the number of operations required to change one string in  to the other one.  A lower number means that the strings are more similar,  with <c>0</c> meaning that they are identical.  Either string can be packed, and this function now has no upper limit on the  size of strings that can be compared, as long as they can fit in the heap.  </remarks> 
		</member>
		<member name="M:LinkVehicleToInterior" syntax="LinkVehicleToInterior(vehicleid, interiorid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_join"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="cmd_tp"/>
			<param name="vehicleid">
				The ID of the vehicle to link to an interior
			</param>
			<param name="interiorid">
				The <a href="http://wiki.sa-mp.com/wiki/Interiorids">Interior ID</a> to  link it to
			</param>
			<library>omp_vehicle</library>  <summary>Links a vehicle to an interior.  Vehicles can only be seen by players in the same interior  (<a href="#SetPlayerInterior">SetPlayerInterior</a>).</summary>      <seealso name="SetVehicleVirtualWorld" />  <seealso name="SetPlayerInterior" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.<br />  </returns> 
		</member>
		<member name="M:LoadDerbyMap" syntax="LoadDerbyMap(mapname[])">
			<stacksize value="51"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadderby"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="SQL"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="mapname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:LoadEasterEggs" syntax="LoadEasterEggs(playerid)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<referrer name="MP_OPC"/>
			<dependency name="GetUserID"/>
			<dependency name="MyEggs"/>
			<dependency name="MyEggs"/>
			<dependency name="SQL"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:LoadKeys" syntax="LoadKeys(playerid)">
			<stacksize value="65"/>
			<referrer name="Login"/>
			<dependency name="B@Status"/>
			<dependency name="B@Status"/>
			<dependency name="GetUserID"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:LoadModelSelectionMenu" syntax="LoadModelSelectionMenu(f_name[])">
			<stacksize value="239"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="false"/>
			<dependency name="floatstr"/>
			<dependency name="format"/>
			<dependency name="fread"/>
			<dependency name="gItemAmount"/>
			<dependency name="gItemList"/>
			<dependency name="gItemList"/>
			<dependency name="gListAmount"/>
			<dependency name="gLists"/>
			<dependency name="gLists"/>
			<dependency name="gRotZoom"/>
			<dependency name="gRotZoom"/>
			<dependency name="gRotZoomAmount"/>
			<dependency name="io_read"/>
			<dependency name="mS_strtok"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="f_name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:LoadProperties" syntax="LoadProperties()">
			<stacksize value="36"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Buyable"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="PickupNr"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropName"/>
			<dependency name="PropOwner"/>
			<dependency name="PropUnbuyableTime"/>
			<dependency name="PropValue"/>
			<dependency name="PropX"/>
			<dependency name="PropY"/>
			<dependency name="PropZ"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="SQL"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="propText"/>
			<dependency name="true"/>
		</member>
		<member name="M:LoadRace" syntax="LoadRace(playerid, racename[])">
			<stacksize value="309"/>
			<referrer name="cmd_loadrace"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CPs"/>
			<dependency name="CPs"/>
			<dependency name="CPsize"/>
			<dependency name="RCreator"/>
			<dependency name="R_Interior"/>
			<dependency name="R_Name"/>
			<dependency name="R_Weather"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceDetails"/>
			<dependency name="RecordName"/>
			<dependency name="RecordName"/>
			<dependency name="RecordTime"/>
			<dependency name="RecordVehicle"/>
			<dependency name="RecordVehicle"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TotalCP"/>
			<dependency name="VehicleID"/>
			<dependency name="bombrace"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="isRecordEmpty"/>
			<dependency name="lastwin"/>
			<dependency name="mysql_query"/>
			<dependency name="rID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="racename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:LoadTextDraws" syntax="LoadTextDraws(g)">
			<stacksize value="5"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="TDDrift"/>
			<dependency name="TEXT_DRAW_ALIGN_LEFT"/>
			<dependency name="TEXT_DRAW_FONT_1"/>
			<dependency name="TextDrawAlignment"/>
			<dependency name="TextDrawBackgroundColour"/>
			<dependency name="TextDrawBoxColour"/>
			<dependency name="TextDrawColour"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="TextDrawFont"/>
			<dependency name="TextDrawLetterSize"/>
			<dependency name="TextDrawSetOutline"/>
			<dependency name="TextDrawSetProportional"/>
			<dependency name="TextDrawSetShadow"/>
			<dependency name="TextDrawTextSize"/>
			<dependency name="TextDrawUseBox"/>
			<dependency name="true"/>
			<param name="g">
			</param>
		</member>
		<member name="M:Login" syntax="Login(playerid)">
			<stacksize value="82"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_login"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AddPlayerBan"/>
			<dependency name="AdminChat"/>
			<dependency name="AdminLvl"/>
			<dependency name="AdminMsgs"/>
			<dependency name="AutoGM"/>
			<dependency name="Color"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="Deaths"/>
			<dependency name="DeliveryTotal"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="Expierience"/>
			<dependency name="GetPVarString"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="God"/>
			<dependency name="IPLookups"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Kick2"/>
			<dependency name="Kills"/>
			<dependency name="LoadKeys"/>
			<dependency name="Logged"/>
			<dependency name="Money"/>
			<dependency name="MyCar"/>
			<dependency name="MyLabel"/>
			<dependency name="PlayTime"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RacesJoined"/>
			<dependency name="RacesWon"/>
			<dependency name="Rank"/>
			<dependency name="Reports"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetMyColor"/>
			<dependency name="SetPlayerCash"/>
			<dependency name="SetPlayerFightingStyle"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="Skin"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="Token"/>
			<dependency name="VIP"/>
			<dependency name="apples"/>
			<dependency name="banked"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="ctf_wins"/>
			<dependency name="explosions"/>
			<dependency name="false"/>
			<dependency name="favwpn"/>
			<dependency name="formatex"/>
			<dependency name="fs"/>
			<dependency name="groupName"/>
			<dependency name="mysql_query"/>
			<dependency name="oranges"/>
			<dependency name="readpms"/>
			<dependency name="readteles"/>
			<dependency name="score"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<dependency name="xmas"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:LooseWeapons" syntax="LooseWeapons(playerid)">
			<attribute name="public"/>
			<stacksize value="59"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_dropguns"/>
			<dependency name="Ammo"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="EachPos"/>
			<dependency name="ForbiddenWeaponsDrop"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="GetWeaponModel"/>
			<dependency name="Model"/>
			<dependency name="Ocuppied"/>
			<dependency name="Pickupid"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TimerIDs"/>
			<dependency name="WeaponsDropped"/>
			<dependency name="WeaponsDropped"/>
			<dependency name="false"/>
			<dependency name="floatadd"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:MP_OPC" syntax="MP_OPC(playerid)">
			<attribute name="public"/>
			<stacksize value="250"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AddPlayerBan"/>
			<dependency name="AdminLvl"/>
			<dependency name="AnnText"/>
			<dependency name="AutoNewsChange"/>
			<dependency name="BanEx"/>
			<dependency name="Banned"/>
			<dependency name="BuildInitial"/>
			<dependency name="CanTP"/>
			<dependency name="CanTP"/>
			<dependency name="CreatePlayerObject"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="CreateTextTT"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="DIALOG_STYLE_PASSWORD"/>
			<dependency name="Delivery"/>
			<dependency name="DeliveryID"/>
			<dependency name="DeliveryTotal"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftID"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="DuelArenaCreated"/>
			<dependency name="DuelDisable"/>
			<dependency name="DuelIgnored"/>
			<dependency name="DuelIgnored"/>
			<dependency name="DuelInvitation"/>
			<dependency name="DuelSpectating"/>
			<dependency name="DuelStarting"/>
			<dependency name="DuelWaiting"/>
			<dependency name="DuelWeapon"/>
			<dependency name="DuelWeapon"/>
			<dependency name="Earnings"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GangZoneShowForPlayer"/>
			<dependency name="GetPlayerCount"/>
			<dependency name="GetPlayerCountExNPC"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetTotalCreatedObjects"/>
			<dependency name="GetUserID"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="HTTP"/>
			<dependency name="HTTP_GET"/>
			<dependency name="ID"/>
			<dependency name="IP"/>
			<dependency name="IpToInt"/>
			<dependency name="IsDueling"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Kick"/>
			<dependency name="LoadEasterEggs"/>
			<dependency name="Login"/>
			<dependency name="MyEggs"/>
			<dependency name="MyEggs"/>
			<dependency name="MyLastTT"/>
			<dependency name="NickName"/>
			<dependency name="NickName"/>
			<dependency name="OnPlayerFloodControl"/>
			<dependency name="PlayerDriftCancellation"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="PlayerProps"/>
			<dependency name="PlayerTextDrawAlignment"/>
			<dependency name="PlayerTextDrawBackgroundColour"/>
			<dependency name="PlayerTextDrawColour"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="PlayerTextDrawSetProportional"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropOwner"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="RXDM"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="Registered"/>
			<dependency name="RemoveBuildingForPlayer"/>
			<dependency name="ReportsTD"/>
			<dependency name="ResetVariables"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendDeathMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="Server"/>
			<dependency name="SetPVarString"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerObjectMaterial"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="SpeedBoostMultiplier"/>
			<dependency name="TDrif"/>
			<dependency name="TDriftPointsNow"/>
			<dependency name="TEXT_DRAW_ALIGN_CENTER"/>
			<dependency name="TEXT_DRAW_FONT_3"/>
			<dependency name="TT_ID"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="TimeLeft"/>
			<dependency name="TogglePlayerClock"/>
			<dependency name="VehRequest"/>
			<dependency name="_B@ResetKey"/>
			<dependency name="_B@ResetValue"/>
			<dependency name="allowmg"/>
			<dependency name="banonevade"/>
			<dependency name="building"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dm"/>
			<dependency name="eXist"/>
			<dependency name="e_iIP"/>
			<dependency name="e_iTimeStamp"/>
			<dependency name="fake_kill_warns"/>
			<dependency name="false"/>
			<dependency name="floatabs"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<dependency name="gPlayerSpawned"/>
			<dependency name="g_ConnectionDate"/>
			<dependency name="g_DialogPage"/>
			<dependency name="g_Target"/>
			<dependency name="g_Target"/>
			<dependency name="g_eaJoinLog"/>
			<dependency name="g_eaJoinLog"/>
			<dependency name="g_pIP"/>
			<dependency name="g_pIP"/>
			<dependency name="gettime"/>
			<dependency name="mgVariable"/>
			<dependency name="myramp"/>
			<dependency name="mysql_query"/>
			<dependency name="precord"/>
			<dependency name="print"/>
			<dependency name="racelabel"/>
			<dependency name="random"/>
			<dependency name="score"/>
			<dependency name="spawnZones"/>
			<dependency name="strcmp"/>
			<dependency name="strdel"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<dependency name="vehDuel"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:MP_OPCPTD" syntax="MP_OPCPTD(playerid, playertextid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:MP_OPCTD" syntax="MP_OPCTD(playerid, clickedid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:MatrixTransformVector" syntax="MatrixTransformVector(vector[], m[][], &amp;resx, &amp;resy, &amp;resz)">
			<stacksize value="1"/>
			<referrer name="RotatePointVehicleRotation"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="vector">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="m">
				<paraminfo>Float [4][4] </paraminfo>
			</param>
			<param name="resx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="resy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="resz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Mean" syntax="Mean(arr[], num)">
			<stacksize value="5"/>
			<dependency name="Sum"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			<library>y_utils - maths</library>      <returns>  The mathematical mean value of the array.  </returns> 
		</member>
		<member name="M:Median" syntax="Median(arr[], num)">
			<stacksize value="5"/>
			<dependency name="QuickSort"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			<library>y_utils - maths</library>      <returns>  The mathematical median value of the array.  </returns>  <remarks>  Must sort the array first.  </remarks> 
		</member>
		<member name="M:MegaJump" syntax="MegaJump(playerid, infront, height)">
			<stacksize value="10"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<dependency name="operator-(_:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerVelocity"/>
			<dependency name="SetPlayerVelocity"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="playerid">
			</param>
			<param name="infront">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:MemCmp" syntax="MemCmp(arr1[], arr2[], count)">
			<stacksize value="3"/>
			<referrer name="memcmp"/>
			<param name="arr1">
				<paraminfo> [] </paraminfo>
				First array to compare.
			</param>
			<param name="arr2">
				<paraminfo> [] </paraminfo>
				Second array to compare.
			</param>
			<param name="count">
				How many cells to compare.
			</param>
			<library>y_utils - arrays</library>        <returns>  The difference (0 if the same).  </returns>  <remarks>  Returns the first found difference between two arrays.  If they are the same  the return value is <c>0</c>, otherwise it is <c>arr1[i] - arr2[i]</c>.  </remarks> 
		</member>
		<member name="M:MemSet" syntax="MemSet(arr[], value, size)">
			<stacksize value="7"/>
			<dependency name="RawMemSet"/>
			<dependency name="cellbytes"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				Array or address to set to a value.
			</param>
			<param name="value">
				What to set the cells to.
			</param>
			<param name="size">
				Number of cells to fill.
			</param>
			<library>y_utils - arrays</library>        <remarks>  Based on <a href="http://forum.sa-mp.com/showthread.php?p=1606781#post1606781">  code by Slice</a>, modified to use binary flags instead of a loop.  "MemSet" takes an array, the size of the array, and a value to fill it with  and sets the whole array to that value.  "rawmemset" is similar, but takes an AMX data segment address instead and  the size is in bytes, not cells.  However, the size must still be a  multiple of 4.  </remarks> 
		</member>
		<member name="M:MinigameCounter" syntax="MinigameCounter(id)">
			<stacksize value="3"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<param name="id">
			</param>
		</member>
		<member name="M:Mode" syntax="Mode(arr[], num)">
			<stacksize value="6"/>
			<dependency name="QuickSort"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			<library>y_utils - maths</library>      <returns>  The mathematical modal value of the array.  </returns>  <remarks>  Must sort the array first.  </remarks> 
		</member>
		<member name="M:MoneyGet" syntax="MoneyGet(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:MoveDynamicObject" syntax="MoveDynamicObject(objectid, x, y, z, speed, rx, ry, rz)">
			<attribute name="native"/>
			<referrer name="PGodTimer"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smomtp"/>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="speed">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:NOT_IN_RANGE" syntax="NOT_IN_RANGE(value, lower, upper)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				The number to compare.
			</param>
			<param name="lower">
				The lower limit.
			</param>
			<param name="upper">
				The upper limit.
			</param>
			<library>y_utils - maths</library>        <returns>  Is the value outside the given range.  </returns>  <remarks>  Equivalent to:  <code>		(%1) &lt;= (%0) &lt; (%2)</code>  </remarks> 
		</member>
		<member name="M:O@A_" syntax="O@A_()">
			<tagname value="bool"/>
			<stacksize value="2"/>
			<referrer name="O@A_"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="OnPlayerConnect"/>
			<dependency name="O@V_"/>
			<dependency name="cellbytes"/>
			<dependency name="false"/>
			<library>amx_assembly addressof_light</library>
		</member>
		<member name="M:OnActorStreamIn" syntax="OnActorStreamIn(actorid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnActorStreamIn"/>
			<dependency name="Iter_Single@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<param name="actorid">
				The ID of the actor that has been streamed in for the player
			</param>
			<param name="forplayerid">
				The ID of the player that streamed the actor in
			</param>
			<summary>This callback is called when an actor is streamed in by a player's client.</summary>      <seealso name="OnActorStreamOut" />  <seealso name="OnPlayerStreamIn" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>It is always called first in filterscripts.</remarks>  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnActorStreamOut" syntax="OnActorStreamOut(actorid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_OnActorStreamOut"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<dependency name="Iterator@StreamedActor"/>
			<param name="actorid">
				The ID of the actor that has been streamed out for the player
			</param>
			<param name="forplayerid">
				The ID of the player that streamed the actor out
			</param>
			<summary>This callback is called when an actor is streamed out by a player's client.</summary>      <seealso name="OnActorStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>It is always called first in filterscripts.</remarks>  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnAndroidCheck" syntax="OnAndroidCheck(playerid, isDisgustingThiefToBeBanned)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="isDisgustingThiefToBeBanned">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:OnAndroidTimer" syntax="OnAndroidTimer(playerid)">
			<stacksize value="7"/>
			<referrer name="OnPlayerConnect"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="YSI_gcII"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnCachedInit" syntax="OnCachedInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="SSCANF_OnCachedInit"/>
			<dependency name="SSCANF_RunInit"/>
			<library>sscanf</library>  <remarks>  Called when the script starts if it is (legacy) YSI cached mode.  </remarks> 
		</member>
		<member name="M:OnClientCheckResponse" syntax="OnClientCheckResponse(playerid, actionid, memaddr, retndata)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="FIXES_OnClientCheckResponse"/>
			<param name="playerid">
				The ID of the player checked
			</param>
			<param name="actionid">
				The type of check performed
			</param>
			<param name="memaddr">
				The address requested
			</param>
			<param name="retndata">
				The result of the check
			</param>
			<summary>This callback is called when a SendClientCheck request comletes</summary>          <seealso name="SendClientCheck" /> <p/> <library>y_rconfix</library>  <remarks>  Call the hooked version of <c>OnClientCheckResponse</c>, regardless of how  this version is called.  So either natively or using the fix here.  </remarks> 
		</member>
		<member name="M:OnDialogResponse" syntax="OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="1010"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ActiveCTF"/>
			<dependency name="ActiveDerby"/>
			<dependency name="AddNeon"/>
			<dependency name="AddProperty"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="AdminChat"/>
			<dependency name="AdminMsgs"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="AutoAssign"/>
			<dependency name="AutoGM"/>
			<dependency name="B@Status"/>
			<dependency name="B@Status"/>
			<dependency name="BikeStuntCPS"/>
			<dependency name="BikeStuntCPS"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="ChangeVehicleColours"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="Color"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="CountFileLines"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="DIALOG_STYLE_INPUT"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DeleteMovingData"/>
			<dependency name="DerbyInterior"/>
			<dependency name="DerbyLoaded"/>
			<dependency name="DerbyPlayers"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbyVehicle"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftID"/>
			<dependency name="DriftName"/>
			<dependency name="DriftName"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="DriftPos"/>
			<dependency name="DriftPos"/>
			<dependency name="DriftRecord"/>
			<dependency name="DriftRecordName"/>
			<dependency name="DriftRecordName"/>
			<dependency name="DriftVehicle"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="FIGHT_STYLE_BOXING"/>
			<dependency name="FIGHT_STYLE_ELBOW"/>
			<dependency name="FIGHT_STYLE_GRABKICK"/>
			<dependency name="FIGHT_STYLE_KNEEHEAD"/>
			<dependency name="FIGHT_STYLE_KUNGFU"/>
			<dependency name="FIGHT_STYLE_NORMAL"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GameTimer"/>
			<dependency name="GameTimerEx"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="GotoPosition"/>
			<dependency name="IPLookups"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsIP"/>
			<dependency name="IsNumeric2"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KSpree"/>
			<dependency name="Kick"/>
			<dependency name="KillTimer"/>
			<dependency name="LastCar"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="LoadDerbyMap"/>
			<dependency name="LoadProperties"/>
			<dependency name="LoadTextDraws"/>
			<dependency name="Logged"/>
			<dependency name="Login"/>
			<dependency name="Minigame"/>
			<dependency name="Moving"/>
			<dependency name="MyLastTT"/>
			<dependency name="ObjDialogIDs"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PMG_Pickups"/>
			<dependency name="PMG_Pickups"/>
			<dependency name="PMs"/>
			<dependency name="PlayAudioStreamForPlayer"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="PlayerDriftCancellation"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceRotation"/>
			<dependency name="RemoveNeon"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SPoints"/>
			<dependency name="SQL"/>
			<dependency name="SaveProperties"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SendRconCommand"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="Server"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetMyColor"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="SetPlayerCameraLookAt"/>
			<dependency name="SetPlayerCameraPos"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerFightingStyle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerMarkerForPlayer"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SetPlayerTeam"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="SetTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="SetUP_TT"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_Update"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="TDDrift"/>
			<dependency name="TDMJoined"/>
			<dependency name="TDrif"/>
			<dependency name="TDriftPointsNow"/>
			<dependency name="TT_Announcement"/>
			<dependency name="TT_ChecknTeleport"/>
			<dependency name="TT_Exit"/>
			<dependency name="TT_ID"/>
			<dependency name="TakePlayerCash"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="TimeLeft"/>
			<dependency name="TimerA"/>
			<dependency name="TimerC"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="Token"/>
			<dependency name="TokenUltimate"/>
			<dependency name="TokenUsing"/>
			<dependency name="Token_Vehicle"/>
			<dependency name="Token_Weapons"/>
			<dependency name="UltimateTimer"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="VehicleID"/>
			<dependency name="WEAPON_AK47"/>
			<dependency name="WEAPON_CHAINSAW"/>
			<dependency name="WEAPON_COLT45"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="WEAPON_FLAMETHROWER"/>
			<dependency name="WEAPON_GRENADE"/>
			<dependency name="WEAPON_M4"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="WEAPON_MOLOTOV"/>
			<dependency name="WEAPON_MP5"/>
			<dependency name="WEAPON_POOLSTICK"/>
			<dependency name="WEAPON_ROCKETLAUNCHER"/>
			<dependency name="WEAPON_SAWEDOFF"/>
			<dependency name="WEAPON_SHOTGSPA"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="WEAPON_SILENCED"/>
			<dependency name="WEAPON_SNIPER"/>
			<dependency name="WEAPON_TEC9"/>
			<dependency name="WEAPON_UZI"/>
			<dependency name="_@tmp"/>
			<dependency name="_B@EchoP"/>
			<dependency name="_B@EchoS"/>
			<dependency name="__loading"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="allowmg"/>
			<dependency name="autofix"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="cellmax"/>
			<dependency name="dueling"/>
			<dependency name="duelloc"/>
			<dependency name="dveh"/>
			<dependency name="eDriftTimer"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="false"/>
			<dependency name="favwpn"/>
			<dependency name="fcreate"/>
			<dependency name="formatex"/>
			<dependency name="fremove"/>
			<dependency name="groupName"/>
			<dependency name="idUsed"/>
			<dependency name="invited"/>
			<dependency name="lastpm"/>
			<dependency name="mysql_query"/>
			<dependency name="ptp_president"/>
			<dependency name="raceRotTimer"/>
			<dependency name="raceRotTimerEx"/>
			<dependency name="random"/>
			<dependency name="readpms"/>
			<dependency name="readteles"/>
			<dependency name="strcmp"/>
			<dependency name="strdel"/>
			<dependency name="stringContainsIP"/>
			<dependency name="strlen"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
				The ID of the player that responded to the dialog
			</param>
			<param name="dialogid">
				The ID of the dialog the player responded to, assigned in ShowPlayerDialog
			</param>
			<param name="response">
				<b><c>1</c></b> for left button and <b><c>0</c></b> for right button (if only  one button shown, always <b><c>1</c></b>)
			</param>
			<param name="listitem">
				The ID of the list item selected by the player (starts at <b><c>0</c></b>)  (only if using a list style dialog)
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
				The text entered into the input box by the player or the selected list item  text
			</param>
			<library>omp_dialog</library>  <summary>This callback is called when a player responds to a dialog shown using <a href="#ShowPlayerDialog">ShowPlayerDialog</a>  by either clicking a button, pressing ENTER/ESC or double-clicking a list item (if using a list style  dialog).</summary>            <seealso name="ShowPlayerDialog" />  <remarks>A player's dialog doesn't hide when the gamemode restarts, causing the server to print <c>"Warning:  PlayerDialogResponse PlayerId: 0 dialog ID doesn't match last sent dialog ID"</c> if a player responded  to this dialog after restart.</remarks>  <remarks>Parameters can contain different values, based on dialog's <a href="https://open.mp/docs/scripting/resources/dialogstyles">style</ </remarks>  <returns>  Returning <b><c>0</c></b> in this callback will pass the dialog to another script in case no matching  code were found in your gamemode's callback.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnDnsLookup" syntax="OnDnsLookup(index, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="index">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDnsLookup_Connect" syntax="OnDnsLookup_Connect(index, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="index">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDynamicActorStreamIn" syntax="OnDynamicActorStreamIn(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnDynamicActorStreamOut" syntax="OnDynamicActorStreamOut(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnDynamicObjectMoved" syntax="OnDynamicObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnEnterExitModShop" syntax="OnEnterExitModShop(playerid, enterexit, interiorid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that entered or exited the modshop
			</param>
			<param name="enterexit">
				<b><c>1</c></b> if the player entered or <b><c>0</c></b> if they exited
			</param>
			<param name="interiorid">
				The interior ID of the modshop that the player is entering (or 0 if exiting)
			</param>
			<summary>This callback is called when a player enters or exits a mod shop.</summary>        <seealso name="OnVehicleMod" />  <seealso name="OnVehicleRespray" />  <seealso name="OnVehiclePaintjob" />  <seealso name="AddVehicleComponent" />  <remarks>Players collide when they get into the same mod shop.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnFilterScriptExit" syntax="OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit_OnFilterScriptExit"/>
			<dependency name="ScriptInit_OnScriptExit"/>
			<dependency name="ScriptInit_OnYSIExit"/>
			<dependency name="ScriptInit_PostExitFuncs_"/>
			<dependency name="ScriptInit_PreExitFuncs_"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<summary>This callback is called when a filterscript is unloaded.  It is only called inside the filterscript  which is unloaded.</summary>  <seealso name="OnFilterScriptInit" />  <seealso name="OnGameModeInit" />  <seealso name="OnGameModeExit" />  <returns>This callback does not handle returns.</returns> <p/> <library>y_scriptinit</library>  <transition keep="true" target="_script_init_fix_state : true"/>  <transition keep="true" target="_ALS : _ALS_go"/>  <remarks>  Call <c>OnScriptExit</c> in filterscripts.  </remarks> 
		</member>
		<member name="M:OnFilterScriptInit" syntax="OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="E_SCRIPTINIT_STATE_JITING"/>
			<dependency name="ResolveYSIScriptfileDirs"/>
			<dependency name="ScriptInit_CallOnCodeInit"/>
			<dependency name="ScriptInit_GetStartTime"/>
			<dependency name="ScriptInit_PostInitFuncs_"/>
			<dependency name="ScriptInit_PreInitFuncs_"/>
			<dependency name="Server_FinishIntroMessage"/>
			<dependency name="Server_RestartLongCall"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<dependency name="YVers_StartCheck"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<summary>This callback is called when a filterscript is initialized (loaded).  It is only called  inside the filterscript which is starting.</summary>  <seealso name="OnFilterScriptExit" />  <seealso name="OnGameModeInit" />  <seealso name="OnGameModeExit" />  <returns>This callback does not handle returns.</returns> <p/> <library>y_scriptinit</library>  <transition keep="true" target="_script_init_fix_state : true"/>  <transition keep="true" target="_ALS : _ALS_go"/>  <remarks>  Call <c>OnScriptInit</c> in filterscripts.  </remarks>  <transition target="_ALS_go"/>

		</member>
		<member name="M:OnGameModeExit" syntax="OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit_OnGameModeExit"/>
			<dependency name="ScriptInit_OnScriptExit"/>
			<dependency name="ScriptInit_OnYSIExit"/>
			<dependency name="ScriptInit_PostExitFuncs_"/>
			<dependency name="ScriptInit_PreExitFuncs_"/>
			<dependency name="YSI_GAMEMODE"/>
			<summary>This callback is called when a gamemode ends, either through 'gmx', the server being shut  down, or <a href="#GameModeExit">GameModeExit</a>.</summary>  <seealso name="OnGameModeInit" />  <seealso name="OnFilterScriptExit" />  <seealso name="OnFilterScriptInit" />  <seealso name="GameModeExit" />  <remarks>This function can also be used in a filterscript to detect if the gamemode changes with  RCON commands like changemode or gmx, as changing the gamemode does not reload a filterscript.</remarks>  <remarks>When using OnGameModeExit in conjunction with the 'rcon gmx' console command keep in mind  there is a potential for client bugs to occur an example of this is excessive  <a href="#RemoveBuildingForPlayer">RemoveBuildingForPlayer</a>  calls during OnGameModeInit which could result in a client crash. </remarks>  <remarks>This callback will NOT be called if the server crashes or the process is killed by other  means, such as using the Linux kill command or pressing the close-button on the Windows console.  </remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in gamemode.  </returns> <p/> <library>y_scriptinit</library>  <transition keep="true" target="_script_init_fix_state : true"/>  <transition keep="true" target="_ALS : _ALS_go"/>  <remarks>  Call <c>OnScriptExit</c> in gamemodes.  </remarks> 
		</member>
		<member name="M:OnGameModeInit" syntax="OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="E_SCRIPTINIT_STATE_JITING"/>
			<dependency name="KillTimer"/>
			<dependency name="ResolveYSIScriptfileDirs"/>
			<dependency name="ScriptInit_CallOnCodeInit"/>
			<dependency name="ScriptInit_GetStartTime"/>
			<dependency name="ScriptInit_PostInitFuncs_"/>
			<dependency name="ScriptInit_PreInitFuncs_"/>
			<dependency name="ScriptInit_PurgeTemporaries"/>
			<dependency name="Server_FinishIntroMessage"/>
			<dependency name="Server_RestartLongCall"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<dependency name="YSI_GAMEMODE"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<dependency name="YSI_gsPurgeTimer"/>
			<dependency name="YVers_StartCheck"/>
			<dependency name="existproperty"/>
			<dependency name="false"/>
			<dependency name="setproperty"/>
			<dependency name="true"/>
			<summary>This callback is triggered when the gamemode starts.</summary>  <seealso name="OnGameModeExit" />  <seealso name="OnFilterScriptInit" />  <seealso name="OnFilterScriptExit" />  <remarks>This function can also be used in a filterscript to detect if the gamemode changes with  RCON commands like changemode or gmx, as changing the gamemode does not reload a filterscript.</remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in gamemode.  </returns> <p/> <library>y_scriptinit</library>  <transition keep="true" target="_script_init_fix_state : true"/>  <transition keep="true" target="_ALS : _ALS_go"/>  <remarks>  Call <c>OnScriptInit</c> in gamemodes.  </remarks>  <transition target="_ALS_go"/>

		</member>
		<member name="M:OnHostLookup" syntax="OnHostLookup(index, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="index">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnHostnameLookup" syntax="OnHostnameLookup(index, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="index">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnIRCDnsLookup" syntax="OnIRCDnsLookup(index, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="index">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnIncomingConnection" syntax="OnIncomingConnection(playerid, ip_address[], port)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player attempting to connect
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
				The IP address of the player attempting to connect
			</param>
			<param name="port">
				The port of the attempted connection
			</param>
			<summary>This callback is called when an IP address attempts a connection to the server.  To block  incoming connections, use <a href="#BlockIpAddress">BlockIpAddress</a>.</summary>        <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <seealso name="OnPlayerFinishedDownloading" />  <seealso name="BlockIpAddress" />  <seealso name="UnBlockIpAddress" />  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnJITCompile" syntax="OnJITCompile()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Debug_Print0"/>
			<dependency name="E_SCRIPTINIT_STATE_JITED"/>
			<dependency name="E_SCRIPTINIT_STATE_JITING"/>
			<dependency name="ResolveYSIScriptfileDirs"/>
			<dependency name="ScriptInit_CallOnCodeInit"/>
			<dependency name="ScriptInit_GetStartTime"/>
			<dependency name="ScriptInit_OnJITCompile"/>
			<dependency name="Server_FinishIntroMessage"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<dependency name="__debug"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<library>y_scriptinit</library>  <remarks>  Called when the JIT plugin starts.  Used to determine that the plugin  exists (and remember that fact for later), and to compile YSI (and other)  code before JIT compilation.  Thus calls <c>OnCodeInit</c>.  </remarks>  <transition target="_ALS_go"/>

		</member>
		<member name="M:OnObjectMoved" syntax="OnObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
				The ID of the object that was moved
			</param>
			<summary>This callback is called when an object is moved after <a href="#MoveObject">MoveObject</a>  (when it stops moving).</summary>    <seealso name="MoveObject" />  <seealso name="IsObjectMoving" />  <seealso name="StopObject" />  <seealso name="OnPlayerObjectMoved" />  <remarks><a href="#SetObjectPos">SetObjectPos</a> does not work when used in this callback.  To fix  it, recreate the object.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPickupStreamIn" syntax="OnPickupStreamIn(pickupid, playerid)">
			<stacksize value="1"/>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<summary>Called when a pickup enters the visual range of a player.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPickupStreamOut" syntax="OnPickupStreamOut(pickupid, playerid)">
			<stacksize value="1"/>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<summary>Called when a pickup leaves the visual range of a player.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerClickGangZone" syntax="OnPlayerClickGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerClickMap" syntax="OnPlayerClickMap(playerid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that placed a target/waypoint
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X float coordinate where the player clicked
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y float coordinate where the player clicked
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z float coordinate where the player clicked (inaccurate - see note below)
			</param>
			<summary>OnPlayerClickMap is called when a player places a target/waypoint on the pause menu map  (by right-clicking).</summary>          <seealso name="SetPlayerPos" />  <seealso name="SetPlayerPosFindZ" />  <seealso name="GetPlayerPos" />  <remarks>The Z value returned will be <b><c>0</c></b> (invalid) if it is far away from the player;  use the <a href="http://forum.sa-mp.com/showthread.php?t=275492">MapAndreas plugin</a> to get a more  accurate Z coordinate.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerClickPlayer" syntax="OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that clicked on a player on the scoreboard
			</param>
			<param name="clickedplayerid">
				The ID of the player that was clicked on
			</param>
			<param name="source">
				<paraminfo>t_CLICK_SOURCE </paraminfo>
				The source of the player's click
			</param>
			<summary>Called when a player double-clicks on a player on the scoreboard.</summary>        <seealso name="OnPlayerClickTextDraw" />  <remarks>There is currently only one <paramref name="source" /> (<b><c>0 - CLICK_SOURCE_SCOREBOARD</c></b>).  The existence of this argument suggests that more sources may be supported in the future.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerClickPlayerGangZone" syntax="OnPlayerClickPlayerGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerClickPlayerTextDraw" syntax="OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetTickCount"/>
			<dependency name="HideModelSelectionMenu"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetPVarInt"/>
			<dependency name="gCancelButtonTextDrawId"/>
			<dependency name="gNextButtonTextDrawId"/>
			<dependency name="gPrevButtonTextDrawId"/>
			<dependency name="gSelectionItems"/>
			<dependency name="gSelectionItemsTag"/>
			<dependency name="mS_GetNumberOfPages"/>
			<dependency name="mS_GetNumberOfPagesEx"/>
			<dependency name="mS_GetPlayerCurrentListID"/>
			<dependency name="mS_ShowPlayerMPs"/>
			<dependency name="mS_UpdatePageTextDraw"/>
			<param name="playerid">
				The ID of the player that selected a textdraw
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw that the player selected
			</param>
			<summary>This callback is called when a player clicks on a player-textdraw.  It is not called when  player cancels the select mode (ESC) - however, <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a>  is.</summary>      <seealso name="PlayerTextDrawSetSelectable" />  <seealso name="OnPlayerClickTextDraw" />  <seealso name="OnPlayerClickPlayer" />  <remarks>When a player presses ESC to cancel selecting a textdraw, <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a>  is called with a textdraw ID of <b><c>INVALID_TEXT_DRAW</c></b>. <a href="#OnPlayerClickPlayerTextDraw">OnPlayerClickPlayerTextDraw</a>  won't be called also.</remarks>  <returns>  Returning <b><c>1</c></b> in this callback will prevent it being called in other scripts.  This  should be used to signal that the textdraw on which they clicked was 'found' and no further processing  is needed.  You should return <b><c>0</c></b> if the textdraw on which they clicked wasn't found,  just like in <a href="#OnPlayerCommandText">OnPlayerCommandText</a>.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerClickTextDraw" syntax="OnPlayerClickTextDraw(playerid, clickedid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetPVarInt"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetPVarInt"/>
			<dependency name="mS_DestroySelectionMenu"/>
			<dependency name="mS_GetPlayerCurrentListID"/>
			<param name="playerid">
				The ID of the player that clicked on the textdraw
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
				The ID of the clicked textdraw. <b><c>INVALID_TEXT_DRAW</c></b> if selection  was cancelled
			</param>
			<summary>This callback is called when a player clicks on a textdraw or cancels the select mode with  the Escape key.</summary>      <seealso name="OnPlayerClickPlayerTextDraw" />  <seealso name="OnPlayerClickPlayer" />  <remarks>The clickable area is defined by <a href="#TextDrawTextSize">TextDrawTextSize</a>.  The  x and y parameters passed to that function must not be zero or negative. </remarks>  <remarks>Do not use <a href="#CancelSelectTextDraw">CancelSelectTextDraw</a> unconditionally within  this callback.  This results in an infinite loop. </remarks>  <returns>  Returning <b><c>1</c></b> in this callback will prevent it being called in other scripts.  This  should be used to signal that the textdraw on which they clicked was 'found' and no further processing  is needed.  You should return <b><c>0</c></b> if the textdraw on which they clicked wasn't found,  just like in <a href="#OnPlayerCommandText">OnPlayerCommandText</a>.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerCommandPerformed" syntax="OnPlayerCommandPerformed(playerid, cmdtext[], success)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIP"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnPlayerCommandReceived" syntax="OnPlayerCommandReceived(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandText" syntax="OnPlayerCommandText(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="format"/>
			<dependency name="tolower"/>
			<dependency name="zcmd_g_HasOPCE"/>
			<dependency name="zcmd_g_HasOPCS"/>
			<param name="playerid">
				The ID of the player that entered a command
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
				The command that was entered (including the forward slash)
			</param>
			<summary>This callback is called when a player enters a command into the client chat window.  Commands  are anything that start with a forward slash, e.g. <c>/help</c>.</summary>      <seealso name="OnPlayerText" />  <seealso name="OnRconCommand" />  <seealso name="SendRconCommand" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  Return <b><c>1</c></b> if the command was processed, otherwise <b><c>0</c></b>; If the command  was not found both in filterscripts and in gamemode, the player will be received a message: <em>SERVER:  Unknown command</em>.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other scripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerConnect" syntax="OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="OnAndroidTimer"/>
			<dependency name="SetTimerExAddr"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<dependency name="YSI_SendClientCheck__"/>
			<dependency name="YSI_g_sTimers"/>
			<dependency name="YSI_gcI"/>
			<dependency name="false"/>
			<param name="playerid">
				The ID of the player that connected
			</param>
			<summary>This callback is called when a player connects to the server.</summary>    <seealso name="OnPlayerDisconnect" />  <seealso name="OnIncomingConnection" />  <seealso name="OnPlayerFinishedDownloading" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerDeath" syntax="OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="378"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="AddPlayerBan"/>
			<dependency name="AdminLvl"/>
			<dependency name="AmRacing"/>
			<dependency name="BanEx2"/>
			<dependency name="Banned"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="CheckRankForLevelUp"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DCAdmin"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DeathCount"/>
			<dependency name="Deaths"/>
			<dependency name="DeleteMovingData"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="DriftID"/>
			<dependency name="DriftSave"/>
			<dependency name="DuelInvitation"/>
			<dependency name="Duel_End"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="Expierience"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetDistance"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVehicleModel"/>
			<dependency name="GetPlayerVehicleSeat"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="God"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsDueling"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsValidDBWeapon"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KSpree"/>
			<dependency name="KillTimer"/>
			<dependency name="LastDeathTime"/>
			<dependency name="LooseWeapons"/>
			<dependency name="Minigame"/>
			<dependency name="Moving"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="OnRaceCD"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceStart"/>
			<dependency name="RaceTime"/>
			<dependency name="Registered"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SPoints"/>
			<dependency name="SVLoaded"/>
			<dependency name="SVPlayers"/>
			<dependency name="SVStarted"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendDeathMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="Server"/>
			<dependency name="SetPlayerCash"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="TDMJoined"/>
			<dependency name="TDrif"/>
			<dependency name="Team1Kills"/>
			<dependency name="Team2Kills"/>
			<dependency name="TextDrawHideForAll"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="Token"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="VIP"/>
			<dependency name="VehRequest"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aWeaponNames"/>
			<dependency name="aWeaponNames"/>
			<dependency name="allowmg"/>
			<dependency name="autofix"/>
			<dependency name="bombrace"/>
			<dependency name="bounty"/>
			<dependency name="cellmax"/>
			<dependency name="dueling"/>
			<dependency name="eTimer"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="fake_kill_warns"/>
			<dependency name="fakekillsac"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gPlayerSpawned"/>
			<dependency name="lastwin"/>
			<dependency name="print"/>
			<dependency name="ptp_president"/>
			<dependency name="rTimer"/>
			<dependency name="racelabel"/>
			<dependency name="racenotify"/>
			<dependency name="score"/>
			<dependency name="true"/>
			<dependency name="vehDuel"/>
			<dependency name="xstring"/>
			<dependency name="xx_cd"/>
			<param name="playerid">
				The ID of the player that died
			</param>
			<param name="killerid">
				The ID of the player that killed the player who died, or <b><c>INVALID_PLAYER_ID</c></b>  if there was none
			</param>
			<param name="reason">
				The ID of the <a href="http://wiki.sa-mp.com/wiki/Weapons">reason</a> for the  player's death
			</param>
			<summary>This callback is called when a player dies, either by suicide or by being killed by another  player.</summary>        <seealso name="OnPlayerSpawn" />  <seealso name="SendDeathMessage" />  <seealso name="SetPlayerHealth" />  <remarks>  The reason will return 37 (flame thrower) from any fire sources (e.g.  molotov, 18)<br />  The reason will return 51 from any weapon that creates an explosion (e.g.  RPG, grenade)<br />  You do not need to check whether killerid is valid before using it in <a href="#SendDeathMessage">SendDeathMessage</a>.  <b><c>INVALID_PLAYER_ID</c></b> is a valid killerid ID parameter in that function.<br />  <b>playerid</b> is the only one who can call the callback. (good to know for anti fake death)  </remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerDisconnect" syntax="OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="KillTimer"/>
			<dependency name="YSI_g_sIsAndroid"/>
			<dependency name="YSI_g_sTimers"/>
			<param name="playerid">
				The ID of the player that disconnected
			</param>
			<param name="reason">
				The reason for the disconnection.  See table below
			</param>
			<summary>This callback is called when a player disconnects from the server.</summary>      <seealso name="OnPlayerConnect" />  <seealso name="OnIncomingConnection" />  <seealso name="OnPlayerFinishedDownloading" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>Some functions might not work correctly when used in this callback because the player is  already disconnected when the callback is called.  This means that you can't get unambiguous information  from functions like <a href="#GetPlayerIp">GetPlayerIp</a> and <a href="#GetPlayerPos">GetPlayerPos</a>.</remarks>  <remarks>  <b>Reasons:</b><br />  <ul>  <li><b><c>0</c></b> - timeout/Crash - the player's connection was lost.  Either their game crashed  or their network had a fault.</li>  <li><b><c>1</c></b> - quit - the player purposefully quit, either using the <b><c>/quit (/q)</c></b>  command or via the pause menu.</li>  <li><b><c>2</c></b> - kick/ban - the player was kicked or banned by the server.</li>  </ul>  </remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEditAttachedObject" syntax="OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, rotationX, rotationY, rotationZ, scaleX, scaleY, scaleZ)">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="Epx"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="bone"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
				The ID of the player that ended edition mode
			</param>
			<param name="response">
				<paraminfo>t_EDIT_RESPONSE </paraminfo>
				<b><c>0</c></b> if they cancelled (ESC) or <b><c>1</c></b> if they clicked  the save icon
			</param>
			<param name="index">
				The index of the attached object
			</param>
			<param name="modelid">
				The model of the attached object that was edited
			</param>
			<param name="boneid">
				The bone of the attached object that was edited
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
				The X offset for the attached object that was edited
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
				The Y offset for the attached object that was edited
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
				The Z offset for the attached object that was edited
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The X rotation for the attached object that was edited
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The Y rotation for the attached object that was edited
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The Z rotation for the attached object that was edited
			</param>
			<param name="scaleX">
				<paraminfo>Float </paraminfo>
				The X scale for the attached object that was edited
			</param>
			<param name="scaleY">
				<paraminfo>Float </paraminfo>
				The Y scale for the attached object that was edited
			</param>
			<param name="scaleZ">
				<paraminfo>Float </paraminfo>
				The Z scale for the attached object that was edited
			</param>
			<summary>This callback is called when a player ends attached object edition mode.</summary>                              <seealso name="EditAttachedObject" />  <seealso name="SetPlayerAttachedObject" />  <remarks>Editions should be discarded if response was <b><c>0</c></b> (cancelled).  This must be  done by storing the offsets etc.  in an array BEFORE using <a href="#EditAttachedObject">EditAttachedObject</a>.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other scripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next script.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEditDynamicObject" syntax="OnPlayerEditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Editing"/>
			<dependency name="IsAdmin"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetDynamicObjectPos"/>
			<dependency name="SetDynamicObjectRot"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditObject" syntax="OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, rotationX, rotationY, rotationZ)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that edited an object
			</param>
			<param name="playerobject">
				<b><c>0</c></b> if it is a global object or <b><c>1</c></b> if it is a  playerobject
			</param>
			<param name="objectid">
				The ID of the edited object
			</param>
			<param name="response">
				<paraminfo>t_EDIT_RESPONSE </paraminfo>
				The type of response
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X offset for the object that was edited
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y offset for the object that was edited
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z offset for the object that was edited
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The X rotation for the object that was edited
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The Y rotation for the object that was edited
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The Z rotation for the object that was edited
			</param>
			<summary>This callback is called when a player finishes editing an object (<a href="#EditObject">EditObject</a>/<a  href="#EditPlayerObject">EditPlayerObject</a>).</summary>                      <seealso name="EditObject" />  <seealso name="CreateObject" />  <seealso name="DestroyObject" />  <seealso name="MoveObject" />  <remarks>When using <b><c>EDIT_RESPONSE_UPDATE</c></b> be aware that this callback will not be called  when releasing an edit in progress resulting in the last update of <b><c>EDIT_RESPONSE_UPDATE</c></b>  being out of sync of the objects current position.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other scripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next script.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEnterCheckpoint" syntax="OnPlayerEnterCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
				The player who entered the checkpoint
			</param>
			<summary>This callback is called when a player enters the checkpoint set for that player.</summary>    <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEnterDynamicArea" syntax="OnPlayerEnterDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicCP" syntax="OnPlayerEnterDynamicCP(playerid, checkpointid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CheckRankForLevelUp"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Delivery"/>
			<dependency name="DeliveryCP"/>
			<dependency name="DeliveryID"/>
			<dependency name="DeliveryTotal"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="Expierience"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Server"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="bikeGameCP"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicRaceCP" syntax="OnPlayerEnterDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterGangZone" syntax="OnPlayerEnterGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerEnterPlayerGangZone" syntax="OnPlayerEnterPlayerGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerEnterRaceCheckpoint" syntax="OnPlayerEnterRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="917"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="AmRacing"/>
			<dependency name="CPs"/>
			<dependency name="CPs"/>
			<dependency name="CPsize"/>
			<dependency name="CheckRankForLevelUp"/>
			<dependency name="Check_IfMadeRecord"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="Expierience"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetRaceTick"/>
			<dependency name="GetTickCount"/>
			<dependency name="GetVehicleComponentInSlot"/>
			<dependency name="GetVehicleComponentType"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRaceCheckpoint"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="MAPICON_LOCAL_CHECKPOINT"/>
			<dependency name="Minigame"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="MyRank"/>
			<dependency name="OnRaceCD"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_ONFOOT"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="RaceSound"/>
			<dependency name="RaceStart"/>
			<dependency name="RaceTime"/>
			<dependency name="RaceTime22"/>
			<dependency name="RacesWon"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="RemoveVehicleComponent"/>
			<dependency name="ReturnTime"/>
			<dependency name="ReturnTime"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerMapIcon"/>
			<dependency name="SetPlayerRaceCheckpoint"/>
			<dependency name="SetTimer"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<dependency name="TTTimeTDUpdate"/>
			<dependency name="TT_AddTimeToDB"/>
			<dependency name="TT_CPSize"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TT_Exit"/>
			<dependency name="TT_ID"/>
			<dependency name="TextDrawHideForAll"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="Token"/>
			<dependency name="TotalCP"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="VehicleID"/>
			<dependency name="__R_Name"/>
			<dependency name="__R_Name"/>
			<dependency name="__Timer"/>
			<dependency name="__TotalCP"/>
			<dependency name="bombrace"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_num_rows"/>
			<dependency name="cellmax"/>
			<dependency name="eTimer"/>
			<dependency name="false"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<dependency name="formatex"/>
			<dependency name="lastwin"/>
			<dependency name="mysql_query"/>
			<dependency name="pRaceLabel"/>
			<dependency name="position"/>
			<dependency name="rID"/>
			<dependency name="rTimer"/>
			<dependency name="racelabel"/>
			<dependency name="racenotify"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xx_cd"/>
			<param name="playerid">
				The ID of the player who entered the race checkpoint
			</param>
			<summary>This callback is called when a player enters a race checkpoint.</summary>    <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEnterVehicle" syntax="OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AllowedVehicle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetTimerEx"/>
			<dependency name="cNeon"/>
			<dependency name="false"/>
			<dependency name="isNeonON"/>
			<dependency name="true"/>
			<param name="playerid">
				ID of the player who attempts to enter a vehicle
			</param>
			<param name="vehicleid">
				ID of the vehicle the player is attempting to enter
			</param>
			<param name="ispassenger">
				<b><c>0</c></b> if entering as driver. <b><c>1</c></b> if entering as passenger
			</param>
			<summary>This callback is called when a player <b><c>starts</c></b> to enter a vehicle, meaning the  player is not in vehicle yet at the time this callback is called.</summary>        <seealso name="OnPlayerExitVehicle" />  <seealso name="OnPlayerStateChange" />  <seealso name="PutPlayerInVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <remarks>This callback is called when a player <b>BEGINS</b> to enter a vehicle, not when they HAVE  entered it.  See <a href="#OnPlayerStateChange">OnPlayerStateChange</a>. </remarks>  <remarks>This callback is still called if the player is denied entry to the vehicle (e.g.  it is  locked or full). </remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerExitVehicle" syntax="OnPlayerExitVehicle(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="AllowedVehicle"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RemoveNeon"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="afob"/>
			<dependency name="false"/>
			<dependency name="isNeonON"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that is exiting a vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle the player is exiting
			</param>
			<summary>This callback is called when a player <b>starts</b> to exit a vehicle.</summary>      <seealso name="OnPlayerEnterVehicle" />  <seealso name="OnPlayerStateChange" />  <seealso name="RemovePlayerFromVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <remarks>Not called if the player falls off a bike or is removed from a vehicle by other means such  as using <a href="#SetPlayerPos">SetPlayerPos</a>.</remarks>  <remarks>You must use <a href="#OnPlayerStateChange">OnPlayerStateChange</a> and check if their old  state is <b><c>PLAYER_STATE_DRIVER</c></b> or <b><c>PLAYER_STATE_PASSENGER</c></b> and their new  state is <b><c>PLAYER_STATE_ONFOOT</c></b>.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerExitedMenu" syntax="OnPlayerExitedMenu(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that exited the menu
			</param>
			<summary>Called when a player exits a menu.</summary>    <seealso name="OnPlayerSelectedMenuRow" />  <seealso name="CreateMenu" />  <seealso name="DestroyMenu" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerFinishedDownloading" syntax="OnPlayerFinishedDownloading(playerid, virtualworld)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that finished downloading custom models
			</param>
			<param name="virtualworld">
				The ID of the virtual world the player finished downloading custom models  for
			</param>
			<summary>This callback is called when a player finishes downloading custom models.  For more information  on how to add custom models to your server, see <a href="http://forum.sa-mp.com/showthread.php?t=644105">the  release thread</a> and <a href="http://forum.sa-mp.com/showthread.php?t=644123">this tutorial</a>.</summary>      <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <seealso name="OnIncomingConnection" />  <remarks>This callback is called every time a player changes virtual worlds, even if there are no  custom models present in that world.</remarks>  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnPlayerFloodControl" syntax="OnPlayerFloodControl(playerid, iCount, iTimeSpan)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="MP_OPC"/>
			<dependency name="AddPlayerBan"/>
			<dependency name="BanEx"/>
			<dependency name="Banned"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Registered"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="iCount">
			</param>
			<param name="iTimeSpan">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamage" syntax="OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that gave damage
			</param>
			<param name="damagedid">
				The ID of the player that received damage
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
				The amount of health/armour damagedid has lost (combined)
			</param>
			<param name="weaponid">
				The <a href="http://wiki.sa-mp.com/wiki/Weapons">reason</a> that caused the  damage
			</param>
			<param name="bodypart">
				The body part that was hit. (NOTE: This parameter was added in <b>0.3z</b>.  Leave it out if using an older version!)
			</param>
			<summary>This callback is called when a player gives damage to another player.</summary>            <seealso name="OnPlayerTakeDamage" />  <remarks>  Keep in mind this function can be inaccurate in some cases.<br />  If you want to prevent certain players from damaging eachother, use <a href="#SetPlayerTeam">SetPlayerTeam</a>.<br  />  The weaponid will return <b><c>37</c></b> (flame thrower) from any fire sources (e.g.  molotov,  18)<br />  The weaponid will return <b><c>51</c></b> from any weapon that creates an explosion (e.g.  RPG,  grenade)<br />  <b>playerid</b> is the only one who can call the callback.<br />  The amount is always the maximum damage the weaponid can do, even when the health left is less  than that maximum damage.  So when a player has <b><c>100.0</c></b> health and gets shot with a Desert  Eagle which has a damage value of <b><c>46.2</c></b>, it takes 3 shots to kill that player.  All  3 shots will show an amount of <b><c>46.2</c></b>, even though when the last shot hits, the player  only has <b><c>7.6</c></b> health left.  </remarks>  <returns>  <b><c>1</c></b> - Callback will not be called in other filterscripts.<br />  <b><c>0</c></b> - Allows this callback to be called in other filterscripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerGiveDamageActor" syntax="OnPlayerGiveDamageActor(playerid, damaged_actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that gave damage
			</param>
			<param name="damaged_actorid">
				The ID of the actor that received damage
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
				The amount of health/armour damaged_actorid has lost
			</param>
			<param name="weaponid">
				The reason that caused the damage
			</param>
			<param name="bodypart">
				The body part that was hit
			</param>
			<summary>This callback is called when a player gives damage to an actor.</summary>            <seealso name="CreateActor" />  <seealso name="SetActorInvulnerable" />  <seealso name="SetActorHealth" />  <seealso name="GetActorHealth" />  <seealso name="IsActorInvulnerable" />  <seealso name="IsValidActor" />  <seealso name="OnActorStreamOut" />  <seealso name="OnPlayerStreamIn" />  <remarks>This function does not get called if the actor is set invulnerable (WHICH IS BY DEFAULT).  See <a href="#SetActorInvulnerable">SetActorInvulnerable</a>.</remarks>  <returns>  <b><c>1</c></b> - Callback will not be called in other filterscripts.<br />  <b><c>0</c></b> - Allows this callback to be called in other filterscripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerGiveDamageDynamicActor" syntax="OnPlayerGiveDamageDynamicActor(playerid, actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="actorid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerInteriorChange" syntax="OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="GetPlayerState"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PLAYER_STATE_SPECTATING"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="cellmax"/>
			<dependency name="gSpectateID"/>
			<param name="playerid">
				The playerid who changed interior
			</param>
			<param name="newinteriorid">
				The interior the player is now in
			</param>
			<param name="oldinteriorid">
				The interior the player was in before
			</param>
			<summary>Called when a player changes interior.  Can be triggered by SetPlayerInterior or when a  player enter/exits a building.</summary>        <seealso name="SetPlayerInterior" />  <seealso name="GetPlayerInterior" />  <seealso name="LinkVehicleToInterior" />  <seealso name="OnPlayerStateChange" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerKeyStateChange" syntax="OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="AmRacing"/>
			<dependency name="B@Status"/>
			<dependency name="B@Status"/>
			<dependency name="CreateExplosion"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInInvalidNosVehicle"/>
			<dependency name="KEY_ACTION"/>
			<dependency name="KEY_CROUCH"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="KEY_JUMP"/>
			<dependency name="KEY_LOOK_LEFT"/>
			<dependency name="KEY_LOOK_RIGHT"/>
			<dependency name="KEY_NO"/>
			<dependency name="KEY_SPRINT"/>
			<dependency name="KEY_SUBMISSION"/>
			<dependency name="KEY_YES"/>
			<dependency name="MJ_Value"/>
			<dependency name="MJ_Value"/>
			<dependency name="MegaJump"/>
			<dependency name="Minigame"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceNOS"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetVehicleVelocity"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="SpeedBoostMultiplier"/>
			<dependency name="TDMJoined"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="_B@Action"/>
			<dependency name="__gOnce"/>
			<dependency name="bombrace"/>
			<dependency name="explosions"/>
			<dependency name="explosionsr"/>
			<dependency name="false"/>
			<dependency name="floatabs"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="gSpectateType"/>
			<dependency name="megajump"/>
			<dependency name="rockets"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
				The ID of the player that pressed or released a key
			</param>
			<param name="newkeys">
				<paraminfo>t_KEY </paraminfo>
				A map (bitmask) of the keys currently held - see <a href="http://wiki.sa-mp.com/wiki/Keys">here</a>
			</param>
			<param name="oldkeys">
				<paraminfo>t_KEY </paraminfo>
				A map (bitmask) of the keys held prior to the current change - see  <a href="http://wiki.sa-mp.com/wiki/Keys">here</a>
			</param>
			<summary>This callback is called when the state of any supported key is changed (pressed/released).  Directional keys do not trigger OnPlayerKeyStateChange (up/down/left/right).</summary>        <seealso name="GetPlayerKeys" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>  Useful macros:<br />  <code>  // HOLDING(keys)<br />  #define HOLDING(%0) ((newkeys &amp; (%0)) == (%0))<br />  <br />  // PRESSED(keys)<br />  #define PRESSED(%0) (((newkeys &amp; (%0)) == (%0)) &amp;&amp; ((oldkeys &amp; (%0)) != (%0)))<br  />  <br />  // PRESSING(keyVariable, keys)<br />  #define PRESSING(%0,%1) (%0 &amp; (%1))<br />  <br />  // RELEASED(keys)<br />  #define RELEASED(%0) (((newkeys &amp; (%0)) != (%0)) &amp;&amp; ((oldkeys &amp; (%0)) == (%0)))<br  />  </code>  </remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerLeaveCheckpoint" syntax="OnPlayerLeaveCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that left their checkpoint
			</param>
			<summary>This callback is called when a player leaves the checkpoint set for them by  <a href="#SetPlayerCheckpoint">SetPlayerCheckpoint</a>.  Only one checkpoint can be set at a time.</summary>    <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerLeaveDynamicArea" syntax="OnPlayerLeaveDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicCP" syntax="OnPlayerLeaveDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicRaceCP" syntax="OnPlayerLeaveDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveGangZone" syntax="OnPlayerLeaveGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerLeavePlayerGangZone" syntax="OnPlayerLeavePlayerGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="zoneid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveRaceCheckpoint" syntax="OnPlayerLeaveRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that left the race checkpoint
			</param>
			<summary>This callback is called when a player leaves the race checkpoint.</summary>    <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerModelSelection" syntax="OnPlayerModelSelection(playerid, response, listid, modelid)">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="Save"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="Skin"/>
			<dependency name="bikelist"/>
			<dependency name="helislist"/>
			<dependency name="planelist"/>
			<dependency name="random"/>
			<dependency name="skinlist"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listid">
			</param>
			<param name="modelid">
			</param>
		</member>
		<member name="M:OnPlayerModelSelectionEx" syntax="OnPlayerModelSelectionEx(playerid, response, extraid, modelid)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="extraid">
			</param>
			<param name="modelid">
			</param>
		</member>
		<member name="M:OnPlayerObjectMoved" syntax="OnPlayerObjectMoved(playerid, objectid)">
			<stacksize value="1"/>
			<param name="playerid">
				The playerid the object is assigned to
			</param>
			<param name="objectid">
				The ID of the player object that was moved
			</param>
			<summary>This callback is called when a player object is moved after <a href="#MovePlayerObject">MovePlayerObject</a>  (when it stops moving).</summary>      <seealso name="OnObjectMoved" />  <seealso name="MovePlayerObject" />  <seealso name="IsPlayerObjectMoving" />  <seealso name="StopPlayerObject" />  <remarks>This callback can also be called for NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerPickUpDynamicPickup" syntax="OnPlayerPickUpDynamicPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ActiveCTF"/>
			<dependency name="ActiveDerby"/>
			<dependency name="Ammo"/>
			<dependency name="CTFFlags"/>
			<dependency name="CTFI"/>
			<dependency name="CTFIcons"/>
			<dependency name="CTFInterior"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="CTFTimer"/>
			<dependency name="CTFToken"/>
			<dependency name="CTF_Flags"/>
			<dependency name="DerbyPickups"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="DoesPlayerHasWeapon"/>
			<dependency name="EasterEggPickup"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="GetWeaponSlot"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="GiveToken"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="Model"/>
			<dependency name="Ocuppied"/>
			<dependency name="PMG_Pickups"/>
			<dependency name="PMG_Pickups"/>
			<dependency name="PickupNr"/>
			<dependency name="Pickupid"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropName"/>
			<dependency name="PropOwner"/>
			<dependency name="PropValue"/>
			<dependency name="RepairVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Server"/>
			<dependency name="SetPlayerAmmo"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="TimerIDs"/>
			<dependency name="Token"/>
			<dependency name="VIP"/>
			<dependency name="WEAPON_ROCKETLAUNCHER"/>
			<dependency name="WeaponsDropped"/>
			<dependency name="WeaponsDropped"/>
			<dependency name="box"/>
			<dependency name="boxtype"/>
			<dependency name="cellmax"/>
			<dependency name="cpV"/>
			<dependency name="ctf_wins"/>
			<dependency name="ctfflags"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mgVariable"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpPickup" syntax="OnPlayerPickUpPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<summary>Called when a player picks up a pickup created with <a href="#CreatePickup">CreatePickup</a>.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerPickUpPlayerPickup" syntax="OnPlayerPickUpPlayerPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePlayerPickup
			</param>
			<summary>Called when a player picks up a pickup created with <a href="#CreatePickup">CreatePlayerPickup</a>.</summary>      <seealso name="CreatePlayerPickup" />  <seealso name="DestroyPlayerPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerPickupStreamIn" syntax="OnPlayerPickupStreamIn(pickupid, playerid)">
			<stacksize value="1"/>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<summary>Called when a pickup enters the visual range of a player.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerPickupStreamOut" syntax="OnPlayerPickupStreamOut(pickupid, playerid)">
			<stacksize value="1"/>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<summary>Called when a pickup leaves the visual range of a player.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerRequestClass" syntax="OnPlayerRequestClass(playerid, classid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Class"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SPECIAL_ACTION_DANCE2"/>
			<dependency name="SetPlayerCameraLookAt"/>
			<dependency name="SetPlayerCameraPos"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="TD_GetPlayerWeaponData"/>
			<param name="playerid">
				The ID of the player that changed class
			</param>
			<param name="classid">
				The ID of the current class being viewed (returned by <a href="#AddPlayerClass">AddPlayerClass</a>)
			</param>
			<summary>Called when a player changes class at class selection (and when class selection first appears).</summary>      <seealso name="OnPlayerRequestSpawn" />  <seealso name="AddPlayerClass" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback is also called when a player presses <b>F4</b>.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will prevent the player from spawning.  The player can  be forced to spawn when <a href="#SpawnPlayer">SpawnPlayer</a> is used.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerRequestDownload" syntax="OnPlayerRequestDownload(playerid, type, crc)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
				<paraminfo>t_DOWNLOAD_REQUEST </paraminfo>
			</param>
			<param name="crc">
			</param>
		</member>
		<member name="M:OnPlayerRequestSpawn" syntax="OnPlayerRequestSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Class"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="Logged"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Registered"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="SetSpawnInfo"/>
			<dependency name="Spawned"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="WEAPON_MP5"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that requested to spawn
			</param>
			<summary>Called when a player attempts to spawn via class selection either by pressing SHIFT or clicking  the 'Spawn' button.</summary>    <seealso name="OnPlayerSpawn" />  <seealso name="OnPlayerRequestClass" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>To prevent players from spawning with certain classes, the last viewed class must be saved  in a variable in <a href="#OnPlayerRequestClass">OnPlayerRequestClass</a>.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will prevent the player from spawning.<br />  It is always called first in filterscripts so returning <b><c>0</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerSelectDynamicObject" syntax="OnPlayerSelectDynamicObject(playerid, objectid, modelid, x, y, z)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="IsPlayerAdminLevel"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectObject" syntax="OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that selected an object
			</param>
			<param name="type">
				<paraminfo>t_SELECT_OBJECT </paraminfo>
				The type of selection
			</param>
			<param name="objectid">
				The ID of the selected object
			</param>
			<param name="modelid">
				The model ID of the selected object
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X position of the selected object
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y position of the selected object
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z position of the selected object
			</param>
			<summary>This callback is called when a player selects an object after <a href="#SelectObject">SelectObject</a>  has been used.</summary>                <seealso name="SelectObject" />  <returns>  <b><c>1</c></b> - Will prevent other scripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next script.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerSelectedMenuRow" syntax="OnPlayerSelectedMenuRow(playerid, row)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that selected a menu item
			</param>
			<param name="row">
				The ID of the row that was selected.  The first row is ID <b><c>0</c></b>
			</param>
			<summary>This callback is called when a player selects an item from a menu (<a href="#ShowMenuForPlayer">ShowMenuForPlayer</a>).</summary>      <seealso name="OnPlayerExitedMenu" />  <seealso name="OnDialogResponse" />  <seealso name="CreateMenu" />  <seealso name="DestroyMenu" />  <seealso name="AddMenuItem" />  <seealso name="ShowMenuForPlayer" />  <seealso name="HideMenuForPlayer" />  <remarks>The menu ID is not passed to this callback. <a href="#GetPlayerMenu">GetPlayerMenu</a> must  be used to determine which menu the player selected an item on.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerShootDynamicObject" syntax="OnPlayerShootDynamicObject(playerid, weaponid, objectid, x, y, z)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSpawn" syntax="OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="42"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;=(_:,Float:)"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="DuelStarting"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GangZoneStopFlashForPlayer"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="MyLabel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="ReturnPlayerArmour"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetMyColor"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="SetPlayerChatBubble"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SetPlayerTeam"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetTimerEx"/>
			<dependency name="Skin"/>
			<dependency name="SpawnProtect"/>
			<dependency name="TDMJoined"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="VIP"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="WEAPON_SHOTGSPA"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="WEAPON_SILENCED"/>
			<dependency name="WEAPON_SNIPER"/>
			<dependency name="WeaponData"/>
			<dependency name="allowmg"/>
			<dependency name="bone"/>
			<dependency name="canhealme"/>
			<dependency name="canrocket"/>
			<dependency name="dm"/>
			<dependency name="dmlock"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="favwpn"/>
			<dependency name="formatex"/>
			<dependency name="gPlayerSpawned"/>
			<dependency name="modelID"/>
			<dependency name="mytime"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="random"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="weapons"/>
			<dependency name="weapons"/>
			<dependency name="xstring"/>
			<param name="playerid">
				The ID of the player that spawned
			</param>
			<summary>This callback is called when a player spawns.(i.e.  after caling <a href="#SpawnPlayer">SpawnPlayer</a>  function).</summary>    <seealso name="OnPlayerDeath" />  <seealso name="OnVehicleSpawn" />  <seealso name="SpawnPlayer" />  <seealso name="AddPlayerClass" />  <seealso name="SetSpawnInfo" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>The game sometimes deducts $100 from players after spawn.</remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerStateChange" syntax="OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnPlayerStateChange"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@PlayersFromVehicles"/>
			<dependency name="Iterator@PlayersFromVehicles"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="__gOnce"/>
			<param name="playerid">
				The ID of the player that changed state
			</param>
			<param name="newstate">
				<paraminfo>t_PLAYER_STATE </paraminfo>
				The player's new state
			</param>
			<param name="oldstate">
				<paraminfo>t_PLAYER_STATE </paraminfo>
				The player's previous state
			</param>
			<summary>This callback is called when a player changes state.  For example, when a player changes  from being the driver of a vehicle to being on-foot.</summary>        <seealso name="OnPlayerInteriorChange" />  <seealso name="GetPlayerState" />  <seealso name="GetPlayerSpecialAction" />  <seealso name="SetPlayerSpecialAction" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>  <b>States:</b><br />  <ul>  <li><b><c>PLAYER_STATE_NONE</c></b> - empty (while initializing)</li>  <li><b><c>PLAYER_STATE_ONFOOT</c></b> - player is on foot</li>  <li><b><c>PLAYER_STATE_DRIVER</c></b> - player is the driver of a vehicle</li>  <li><b><c>PLAYER_STATE_PASSENGER</c></b> - player is passenger of a vehicle</li>  <li><b><c>PLAYER_STATE_WASTED</c></b> - player is dead or on class selection</li>  <li><b><c>PLAYER_STATE_SPAWNED</c></b> - player is spawned</li>  <li><b><c>PLAYER_STATE_SPECTATING</c></b> - player is spectating</li>  <li><b><c>PLAYER_STATE_EXIT_VEHICLE</c></b> - player exits a vehicle</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_DRIVER</c></b> - player enters a vehicle as driver</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_PASSENGER</c></b> - player enters a vehicle as passenger  </li>  </ul>  </remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerStreamIn" syntax="OnPlayerStreamIn(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnPlayerStreamIn"/>
			<dependency name="Iter_Single@StreamedBot"/>
			<dependency name="Iter_Single@StreamedCharacter"/>
			<dependency name="Iter_Single@StreamedPlayer"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<param name="playerid">
				The ID of the player who has been streamed
			</param>
			<param name="forplayerid">
				The ID of the player that streamed the other player in
			</param>
			<summary>This callback is called when a player is streamed by some other player's client.</summary>      <seealso name="OnPlayerStreamOut" />  <seealso name="OnActorStreamIn" />  <seealso name="OnVehicleStreamIn" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> <p/> <library>y_iterate</library>  <param name="playerid">Player who entered streaming range.</param>  <param name="forplayerid">The viewing player.</param>  <remarks>  Update the internal list of which players <c>forplayerid</c> can see.  </remarks> 
		</member>
		<member name="M:OnPlayerStreamOut" syntax="OnPlayerStreamOut(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_OnPlayerStreamOut"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@StreamedBot"/>
			<dependency name="Iter_Single@StreamedCharacter"/>
			<dependency name="Iter_Single@StreamedPlayer"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedBot"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedCharacter"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<dependency name="Iterator@StreamedPlayer"/>
			<param name="playerid">
				The player who has been destreamed
			</param>
			<param name="forplayerid">
				The player who has destreamed the other player
			</param>
			<summary>This callback is called when a player is streamed out from some other player's client.</summary>      <seealso name="OnPlayerStreamIn" />  <seealso name="OnActorStreamOut" />  <seealso name="OnVehicleStreamOut" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> <p/> <library>y_iterate</library>  <param name="playerid">Player who left streaming range.</param>  <param name="forplayerid">The viewing player.</param>  <remarks>  Update the internal list of which players <c>forplayerid</c> can see.  </remarks> 
		</member>
		<member name="M:OnPlayerTakeDamage" syntax="OnPlayerTakeDamage(playerid, issuerid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SetPlayerHealth"/>
			<param name="playerid">
				The ID of the player that took damage
			</param>
			<param name="issuerid">
				The ID of the player that caused the damage. <b><c>INVALID_PLAYER_ID</c></b>  if self-inflicted
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
				The amount of damage the player took (health and armour combined)
			</param>
			<param name="weaponid">
				The ID of the <a href="http://wiki.sa-mp.com/wiki/Weapons">weapon/reason</a>  for the damage
			</param>
			<param name="bodypart">
				The body part that was hit. (NOTE: This parameter was added in <b>0.3z</b>.  Leave it out if using an older version!)
			</param>
			<summary>This callback is called when a player takes damage.</summary>            <seealso name="OnPlayerGiveDamage" />  <seealso name="OnPlayerWeaponShot" />  <remarks><a href="#GetPlayerHealth">GetPlayerHealth</a> and <a href="#GetPlayerArmour">GetPlayerArmour</a>  will return the old amounts of the player before this callback. </remarks>  <remarks>  The weaponid will return <b><c>37</c></b> (flame thrower) from any fire sources (e.g.  molotov,  <b><c>18</c></b>).<br />  The weaponid will return <b><c>51</c></b> from any weapon that creates an explosion (e.g.  RPG,  grenade)<br />  <b>playerid</b> is the only one who can call the callback.<br />  The amount is always the maximum damage the weaponid can do, even when the health left is less  than that maximum damage.  So when a player has <b><c>100.0</c></b> health and gets shot with a Desert  Eagle which has a damage value of <b><c>46.2</c></b>, it takes 3 shots to kill that player.  All  3 shots will show an amount of <b><c>46.2</c></b>, even though when the last shot hits, the player  only has <b><c>7.6</c></b> health left.  </remarks>  <returns>  <b><c>1</c></b> - Callback will not be called in other filterscripts.<br />  <b><c>0</c></b> - Allows this callback to be called in other filterscripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerText" syntax="OnPlayerText(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AdminChat"/>
			<dependency name="AdminLvl"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="DCAdmin"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="GiveToken"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsVIP"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Kick2"/>
			<dependency name="Minigame"/>
			<dependency name="MuteTimer"/>
			<dependency name="Muted"/>
			<dependency name="MutedBy"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendMessageToAdmins_PM"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="SetTimerEx"/>
			<dependency name="Spam"/>
			<dependency name="VIP"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="groupName"/>
			<dependency name="mysql_query"/>
			<dependency name="score"/>
			<dependency name="strcmp"/>
			<dependency name="stringContainsIP"/>
			<dependency name="strlen"/>
			<dependency name="tCash"/>
			<dependency name="tScore"/>
			<dependency name="true"/>
			<dependency name="ttoken"/>
			<dependency name="tword"/>
			<dependency name="typing"/>
			<dependency name="xstring"/>
			<param name="playerid">
				The ID of the player who typed the text
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text the player typed
			</param>
			<summary>Called when a player sends a chat message.</summary>      <seealso name="OnPlayerCommandText" />  <seealso name="SendPlayerMessageToPlayer" />  <seealso name="SendPlayerMessageToAll" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will stop the text from being sent to all players.<br  />  It is always called first in filterscripts so returning <b><c>0</c></b> there blocks other scripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerUpdate" syntax="OnPlayerUpdate(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
				ID of the player sending an update packet
			</param>
			<summary>This callback is called every time a client/player updates the server with their status.  It is often used to create custom callbacks for client updates that aren't actively tracked by the  server, such as health or armor updates or players switching weapons.</summary>    <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback is called, on average, 30 times per second, per player; only use it when you  know what it's meant for (or more importantly what it's NOT meant for). </remarks>  <remarks>The frequency with which this callback is called for each player varies, depending on what  the player is doing.  Driving or shooting will trigger a lot more updates than idling. </remarks>  <returns>  <b><c>0</c></b> - Update from this player will not be replicated to other clients.<br />  <b><c>1</c></b> - Indicates that this update can be processed normally and sent to other players.<br  />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerWeaponShot" syntax="OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="BULLET_HIT_TYPE_NONE"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="PlaySoundForAdmins"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
				The ID of the player that shot a weapon
			</param>
			<param name="weaponid">
				The ID of the <a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> shot  by the player
			</param>
			<param name="hittype">
				<paraminfo>t_BULLET_HIT_TYPE </paraminfo>
				The type of thing the shot hit (none, player, vehicle, or (player)object)
			</param>
			<param name="hitid">
				The ID of the player, vehicle or object that was hit
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X coordinate that the shot hit
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y coordinate that the shot hit
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z coordinate that the shot hit
			</param>
			<summary>This callback is called when a player fires a shot from a weapon.  Only bullet weapons are  supported.  Only <b>passenger</b> drive-by is supported (not driver drive-by, and not sea sparrow  / hunter shots).</summary>                <seealso name="OnPlayerGiveDamage" />  <seealso name="GetPlayerLastShotVectors" />  <remarks>  <li><b><c>BULLET_HIT_TYPE_NONE(0)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_PLAYER(1)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_VEHICLE(2)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_OBJECT(3)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_PLAYER_OBJECT(4)</c></b></li>  </remarks>  <remarks><b><c>BULLET_HIT_TYPE_PLAYER</c></b> is also called for NPCs.  Actors are ignored by this  callback and detects as <b><c>BULLET_HIT_TYPE_NONE</c></b>.</remarks>  <remarks>This callback is only called when lag compensation is <b>enabled</b>. </remarks>  <remarks>  If hittype is:<br />  <ul>  <li>- <b><c>BULLET_HIT_TYPE_NONE</c></b>: the fX, fY and fZ parameters are normal coordinates,  will give 0.0 for coordinates if nothing was hit (e.g.  far object that the bullet can't reach);</li>  <li>- Others: the fX, fY and fZ are offsets relative to the hitid.</li>  </ul>  </remarks>  <remarks>  Isn't called if you fired in vehicle as driver or if you are looking behind with the aim enabled  (shooting in air).<br />  It is called as <b><c>BULLET_HIT_TYPE_VEHICLE</c></b> with the correct hitid (the hit player's  vehicleid) if you are shooting a player which is in a vehicle.  It won't be called as <b><c>BULLET_HIT_TYPE_PLAYER</c></b>  at all.<br />  </remarks>  <remarks>  </remarks>  <remarks><a href="#GetPlayerLastShotVectors">GetPlayerLastShotVectors</a> can be used in this callback  for more detailed bullet vector information.</remarks>  <returns>  <b><c>0</c></b> - Prevent the bullet from causing damage.<br />  <b><c>1</c></b> - Allow the bullet to cause damage.<br />  It is always called first in filterscripts so returning <b><c>0</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnQueryError" syntax="OnQueryError(errorid, error[], callback[], query[], handle)">
			<stacksize value="1"/>
			<param name="errorid">
			</param>
			<param name="error">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:OnRconCommand" syntax="OnRconCommand(cmd[])">
			<stacksize value="1"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
				A string containing the command that was typed, as well as any passed parameters
			</param>
			<summary>This callback is called when a command is sent through the server console, remote RCON,  or via the in-game "/rcon command".</summary>    <seealso name="IsPlayerAdmin" />  <seealso name="OnRconLoginAttempt" />  <remarks>You will need to include this callback in a loaded filterscript for it to work in the gamemode!</remarks>  <remarks>"/rcon" is not included in "cmd" when a player types a command. </remarks>  <remarks>If you use the <a href="#print">print</a> function here, it will send a message to the player  who typed the command in-game as well as the log.</remarks>  <remarks>This callback is not called when the player is not logged in as RCON admin. </remarks>  <remarks>When the player is not logged in as RCON admin and uses <b>/rcon login</b>, this callback  will not be called and <a href="#OnRconLoginAttempt">OnRconLoginAttempt</a> is called instead.  However,  when the player is logged in as RCON admin, the use of this command will call this callback. </remarks>  <returns>  <b><c>0</c></b> if the command was not processed, it will be passed to another script or <b><c>1</c></b>  if the command was processed, will not be passed to other scripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks gamemode from  seeing it.  </returns> 
		</member>
		<member name="M:OnRconLoginAttempt" syntax="OnRconLoginAttempt(ip[], password[], success)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerAdmin"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnRconLoginAttempt"/>
			<dependency name="Iter_Single@RconAdmin"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Iterator@RconAdmin"/>
			<dependency name="cellmax"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				The IP of the player that tried to log in to RCON
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
				The password used to login with
			</param>
			<param name="success">
				<b><c>0</c></b> if the password was incorrect or <b><c>1</c></b> if it was  correct
			</param>
			<summary>This callback is called when someone attempts to log in to RCON in-game; successful or not.</summary>        <seealso name="OnRconCommand" />  <seealso name="IsPlayerAdmin" />  <seealso name="SendRconCommand" />  <remarks>This callback is only called when /rcon login is used in-game. </remarks>  <remarks>This callback is only called when the player is not yet logged in.  When the player is logged  in, <a href="#OnRconCommand">OnRconCommand</a> is called instead.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> <p/> <library>y_iterate</library>  <param name="playerid">Player who joined.</param>  <remarks>  Adds a player to the loop data.  Now sorts the list too.  Note that I found  the most bizzare bug ever (I *think* it may be a compiler but, but it  requires further investigation), basically it seems that multiple variables  were being treated as the same variable (namely @YSII_EgotS and  @YSII_CgharacterS were the same and @YSII_EgotC and @YSII_CgharacterC were the  same).  Adding print statements which reference these variables seem to fix  the problem, and I've tried to make sure that the values will never actually  get printed.  </remarks> 
		</member>
		<member name="M:OnRuntimeError" syntax="OnRuntimeError(code, &amp;suppress)">
			<stacksize value="1"/>
			<param name="code">
			</param>
			<param name="suppress">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:OnScriptCash" syntax="OnScriptCash(playerid, amount, source)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player who got cash from the game
			</param>
			<param name="amount">
				The amount of cash given
			</param>
			<param name="source">
				Where the money came from
			</param>
			<summary>This callback is called when a SendClientCheck request comletes</summary>        <remarks>Doesn't work</remarks> 
		</member>
		<member name="M:OnScriptInit" syntax="OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="SSCANF_OnScriptInit"/>
			<dependency name="SSCANF_RunInit"/>
			<dependency name="SSCANF_gInit"/>
			<library>sscanf</library>  <remarks>  Called for earlier initialisation by YSI.  </remarks> 
		</member>
		<member name="M:OnScriptInit@C" syntax="OnScriptInit@C()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="SSCANF_OnFilterScriptInit"/>
			<dependency name="SSCANF_RunInit"/>
			<dependency name="SSCANF_gInit"/>
			<library>sscanf</library>  <remarks>  Called when the script starts if it is a filterscript, sets up the system,  then calls the "real" OnFilterScriptInit (using the new ALS 2 hook method).  </remarks> 
		</member>
		<member name="M:OnScriptInit@E" syntax="OnScriptInit@E()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="SSCANF_OnGameModeInit"/>
			<dependency name="SSCANF_RunInit"/>
			<dependency name="SSCANF_gInit"/>
			<library>sscanf</library>  <remarks>  Called when the script starts if it is a gamemode.  This callback is also  called in filterscripts so we don't want to reinitialise the system in that  case.  </remarks> 
		</member>
		<member name="M:OnTrailerUpdate" syntax="OnTrailerUpdate(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player who sent a trailer update
			</param>
			<param name="vehicleid">
				The Trailer being updated
			</param>
			<summary>This callback is called when a player sent a trailer update.</summary>      <seealso name="OnUnoccupiedVehicleUpdate" />  <seealso name="GetVehicleTrailer" />  <seealso name="IsTrailerAttachedToVehicle" />  <seealso name="AttachTrailerToVehicle" />  <seealso name="DetachTrailerFromVehicle" />  <remarks>This callback is called very frequently per second per trailer.  You should refrain from  implementing intensive calculations or intensive file writing/reading operations in this callback.  </remarks>  <returns>  <b><c>0</c></b> - Cancels any trailer updates from being sent to other players.  Update is still  sent to the updating player.<br />  <b><c>1</c></b> - Processes the trailer update as normal and synchronizes it between all players.<br  />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnUnoccupiedVehicleUpdate" syntax="OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, new_x, new_y, new_z, vel_x, vel_y, vel_z)">
			<stacksize value="1"/>
			<param name="vehicleid">
				The ID of the vehicle that's position was updated
			</param>
			<param name="playerid">
				The ID of the player that sent a vehicle position sync update
			</param>
			<param name="passenger_seat">
				The ID of the seat if the player is a passenger.  0=not in vehicle,  1=front passenger, 2=backleft 3=backright 4+ is for coach/bus etc.  with many passenger seats
			</param>
			<param name="new_x">
				<paraminfo>Float </paraminfo>
				The new X coordinate of the vehicle.</b>  Leave it out if using an earlier version
			</param>
			<param name="new_y">
				<paraminfo>Float </paraminfo>
				The new Y coordinate of the vehicle.</b>  Leave it out if using an earlier version
			</param>
			<param name="new_z">
				<paraminfo>Float </paraminfo>
				The new Z coordinate of the vehicle.</b>  Leave it out if using an earlier version
			</param>
			<param name="vel_x">
				<paraminfo>Float </paraminfo>
				The new X velocity of the vehicle.</b>  Leave it out if using an earlier version
			</param>
			<param name="vel_y">
				<paraminfo>Float </paraminfo>
				The new Y velocity of the vehicle.</b>  Leave it out if using an earlier version
			</param>
			<param name="vel_z">
				<paraminfo>Float </paraminfo>
				The new Z velocity of the vehicle.</b>  Leave it out if using an earlier version
			</param>
			<summary>This callback is called when a player's client updates/syncs the position of a vehicle they're  not driving.  This can happen outside of the vehicle or when the player is a passenger of a vehicle  that has no driver.</summary>                    <seealso name="OnTrailerUpdate" />  <remarks>This callback is called very frequently per second per unoccupied vehicle.  You should refrain  from implementing intensive calculations or intensive file writing/reading operations in this callback.</remarks>  <remarks><a href="#GetVehiclePos">GetVehiclePos</a> will return the old coordinates of the vehicle  before this update.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will stop the vehicle's position being synced to other  players.  Update is still sent to the updating player.  Useful for combating vehicle teleport hacks.<br  />  It is always called first in filterscripts so returning <b><c>0</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnVehicleDamageStatusUpdate" syntax="OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
				The ID of the vehicle that was changed its damage status
			</param>
			<param name="playerid">
				The ID of the player who synced the change in the damage status (who had the  car damaged or repaired)
			</param>
			<summary>This callback is called when a vehicle element such as doors, tires, panels, or lights change  their damage status.</summary>      <seealso name="GetVehicleDamageStatus" />  <seealso name="UpdateVehicleDamageStatus" />  <remarks>This does not include vehicle health changes</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.<br />  </returns> 
		</member>
		<member name="M:OnVehicleDeath" syntax="OnVehicleDeath(vehicleid, killerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
				The ID of the vehicle that was destroyed
			</param>
			<param name="killerid">
				The ID of the player that reported (synced) the vehicle's destruction (name  is misleading).  Generally the driver or a passenger (if any) or the closest player
			</param>
			<summary>This callback is called when a vehicle is destroyed - either by exploding or becoming submerged  in water.</summary>      <seealso name="OnVehicleSpawn" />  <seealso name="SetVehicleHealth" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback will also be called when a vehicle enters water, but the vehicle can be saved  from destruction by teleportation or driving out (if only partially submerged).  The callback won't  be called a second time, and the vehicle may disappear when the driver exits, or after a short time.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleMod" syntax="OnVehicleMod(playerid, vehicleid, component)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the driver of the vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle which is modded
			</param>
			<param name="component">
				The ID of the component which was added to the vehicle
			</param>
			<summary>This callback is called when a vehicle is modded.</summary>        <seealso name="AddVehicleComponent" />  <seealso name="OnEnterExitModShop" />  <seealso name="OnVehiclePaintjob" />  <seealso name="OnVehicleRespray" />  <remarks>This callback is NOT called by <a href="#AddVehicleComponent">AddVehicleComponent</a>.</remarks>  <returns>  Return <b><c>0</c></b> to desync the mod (or an invalid mod) from propagating and / or crashing  players.<br />  It is always called first in gamemode so returning <b><c>0</c></b> there also blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnVehiclePaintjob" syntax="OnVehiclePaintjob(playerid, vehicleid, paintjob)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that changed the paintjob of their vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle that had its paintjob changed
			</param>
			<param name="paintjob">
				The ID of the new paintjob
			</param>
			<summary>Called when a player previews a vehicle paintjob inside a mod shop.  Watch out, this callback  is not called when the player buys the paintjob.</summary>        <seealso name="ChangeVehiclePaintjob" />  <seealso name="ChangeVehicleColours" />  <seealso name="OnVehicleRespray" />  <seealso name="OnVehicleMod" />  <remarks>This callback is not called by <a href="#ChangeVehiclePaintjob">ChangeVehiclePaintjob</a>.</remarks>  <returns>  This callback does not handle returns.  Returning <b><c>0</c></b> won't deny the paintjob change.<br  />  It is always called first in gamemode so returning <b><c>0</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnVehicleRespray" syntax="OnVehicleRespray(playerid, vehicleid, colour1, colour2)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that is driving the vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle that was resprayed
			</param>
			<param name="colour1">
				The colour that the vehicle's primary colour was changed to
			</param>
			<param name="colour2">
				The colour that the vehicle's secondary colour was changed to
			</param>
			<summary>This callback is called when a player exits a mod shop, even if the colours weren't changed.  Watch out, the name is ambiguous, Pay 'n' Spray shops don't call this callback.</summary>          <seealso name="ChangeVehicleColours" />  <seealso name="ChangeVehiclePaintjob" />  <seealso name="OnVehiclePaintjob" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" />  <remarks>Previewing a component inside a mod shop might call this callback.</remarks>  <remarks>This callback is not called by <a href="#ChangeVehicleColor">ChangeVehicleColor</a>.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will deny the colour change.  Returning <b><c>1</c></b>  will allow it.  This can be used to prevent hackers from changing vehicle colours using cheats.<br  />  It is always called first in gamemode so returning <b><c>0</c></b> there also blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnVehicleSirenStateChange" syntax="OnVehicleSirenStateChange(playerid, vehicleid, newstate)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that toggled the siren (driver)
			</param>
			<param name="vehicleid">
				The ID of the vehicle of which the siren was toggled for
			</param>
			<param name="newstate">
				<b><c>0</c></b> if siren was turned off, <b><c>1</c></b> if siren was turned  on
			</param>
			<summary>This callback is called when a vehicle's siren is toggled.</summary>        <seealso name="GetVehicleParamsSirenState" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback is only called when a vehicle's siren is toggled on or off, NOT when the alternate  siren is in use (holding horn).</remarks>  <returns>  <b><c>1</c></b> - Will prevent gamemode from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the gamemode.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleSpawn" syntax="OnVehicleSpawn(vehicleid)">
			<stacksize value="1"/>
			<param name="vehicleid">
				The ID of the vehicle that spawned
			</param>
			<summary>This callback is called when a vehicle <b>re</b>spawns.</summary>    <seealso name="OnVehicleDeath" />  <seealso name="OnPlayerSpawn" />  <seealso name="SetVehicleToRespawn" />  <seealso name="CreateVehicle" />  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleStreamIn" syntax="OnVehicleStreamIn(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnVehicleStreamIn"/>
			<dependency name="Iter_Single@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<param name="vehicleid">
				The ID of the vehicle that streamed in for the player
			</param>
			<param name="forplayerid">
				The ID of the player who the vehicle streamed in for
			</param>
			<summary>Called when a vehicle is streamed to a player's client.</summary>      <seealso name="OnVehicleStreamOut" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleStreamOut" syntax="OnVehicleStreamOut(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="Iter_OnVehicleStreamOut"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<dependency name="Iterator@StreamedVehicle"/>
			<param name="vehicleid">
				The ID of the vehicle that streamed out
			</param>
			<param name="forplayerid">
				The ID of the player who is no longer streaming the vehicle
			</param>
			<summary>This callback is called when a vehicle is streamed out for a player's client (it's so far  away that they can't see it).</summary>      <seealso name="OnVehicleStreamIn" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:PAWNDOC" syntax="PAWNDOC()">
			<stacksize value="3"/>
			<automaton name="__PAWNDOC"/>
			<dependency name="CONST_PAWNDOC"/>
			<dependency name="Debug_Code1"/>
			<dependency name="Debug_Code2"/>
			<dependency name="Debug_Code3"/>
			<dependency name="Debug_Code4"/>
			<dependency name="Debug_Code5"/>
			<dependency name="Debug_Code6"/>
			<dependency name="Debug_Code7"/>
			<dependency name="Debug_Print1"/>
			<dependency name="Debug_Print2"/>
			<dependency name="Debug_Print3"/>
			<dependency name="Debug_Print4"/>
			<dependency name="Debug_Print5"/>
			<dependency name="Debug_Print6"/>
			<dependency name="Debug_Print7"/>
			<dependency name="ENUM_PAWNDOC"/>
			<dependency name="FUNC_PAWNDOC"/>
			<dependency name="FloatAbs"/>
			<dependency name="GetIP"/>
			<dependency name="HIDE_PAWNDOC"/>
			<dependency name="IS_IN_RANGE"/>
			<dependency name="ITER_SAFE_REMOVE"/>
			<dependency name="IsEven"/>
			<dependency name="IsNaN"/>
			<dependency name="IsNull"/>
			<dependency name="IsOdd"/>
			<dependency name="Iter_Add"/>
			<dependency name="Iter_Alloc"/>
			<dependency name="Iter_Available"/>
			<dependency name="Iter_Begin"/>
			<dependency name="Iter_Clear"/>
			<dependency name="Iter_Contains"/>
			<dependency name="Iter_Count"/>
			<dependency name="Iter_Debug"/>
			<dependency name="Iter_End"/>
			<dependency name="Iter_Excludes"/>
			<dependency name="Iter_FastClear"/>
			<dependency name="Iter_First"/>
			<dependency name="Iter_Free"/>
			<dependency name="Iter_FreeMulti"/>
			<dependency name="Iter_GetMulti"/>
			<dependency name="Iter_Index"/>
			<dependency name="Iter_Init"/>
			<dependency name="Iter_InitAndClear"/>
			<dependency name="Iter_IsEmpty"/>
			<dependency name="Iter_IsFull"/>
			<dependency name="Iter_Last"/>
			<dependency name="Iter_Next"/>
			<dependency name="Iter_NonEmpty"/>
			<dependency name="Iter_NonFull"/>
			<dependency name="Iter_Prev"/>
			<dependency name="Iter_Random"/>
			<dependency name="Iter_RandomAdd"/>
			<dependency name="Iter_RandomFree"/>
			<dependency name="Iter_RandomRemove"/>
			<dependency name="Iter_Remove"/>
			<dependency name="Iter_SafeRemove"/>
			<dependency name="Iter_Size"/>
			<dependency name="Iter_Starts"/>
			<dependency name="Iter_TrueArray"/>
			<dependency name="Iter_TrueCount"/>
			<dependency name="Iter_TrueMulti"/>
			<dependency name="Iter_TrueSize"/>
			<dependency name="Iterator"/>
			<dependency name="Iterator@Reverse"/>
			<dependency name="NOT_IN_RANGE"/>
			<dependency name="StrCpy"/>
			<dependency name="StripR"/>
			<dependency name="UCMP"/>
			<dependency name="VALID_PLAYERID"/>
			<dependency name="ceildiv"/>
			<dependency name="floordiv"/>
			<dependency name="iterfunc"/>
			<remarks>  Use this after all other pawndoc fixes to finish off the <c>PAWNDOC</c>  function in the current file.  </remarks> 
		</member>
		<member name="M:PGodTimer" syntax="PGodTimer()">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="AddPlayerBan"/>
			<dependency name="BanEx2"/>
			<dependency name="CAM_MODE_AIMWEAPON"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerCameraMode"/>
			<dependency name="GetPlayerCameraPos"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="God"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iterator@Player"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="Moving"/>
			<dependency name="Moving"/>
			<dependency name="MovingToX"/>
			<dependency name="MovingToY"/>
			<dependency name="MovingToZ"/>
			<dependency name="PlaySoundForAdmins"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RepairVehicle"/>
			<dependency name="ReturnPosX"/>
			<dependency name="ReturnPosY"/>
			<dependency name="ReturnPosZ"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SpawnProtect"/>
			<dependency name="autofix"/>
			<dependency name="cellmax"/>
			<dependency name="crashwarns"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="e_MovingObject_Speed"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="idUsed"/>
			<dependency name="kLibPos"/>
			<dependency name="oPos"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:PP_MRET" syntax="PP_MRET()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:PP_main" syntax="PP_main()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="print"/>
		</member>
		<member name="M:PlayAudioStreamForPlayer" syntax="PlayAudioStreamForPlayer(playerid, url[], posX, posY, posZ, distance, usepos)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_myradio"/>
			<referrer name="cmd_playaudio"/>
			<referrer name="cmd_playaudioplayer"/>
			<param name="playerid">
				The ID of the player to play the audio for
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
				The url to play.  Valid formats are mp3 and ogg/vorbis.  A link to a .pls (playlist)  file will play that playlist
			</param>
			<param name="posX">
				<paraminfo>Float </paraminfo>
				The x position at which to play the audio.  Has no effect unless usepos is set  to 1 (optional=<b><c>0.0</c></b>)
			</param>
			<param name="posY">
				<paraminfo>Float </paraminfo>
				The y position at which to play the audio.  Has no effect unless usepos is set  to 1 (optional=<b><c>0.0</c></b>)
			</param>
			<param name="posZ">
				<paraminfo>Float </paraminfo>
				The z position at which to play the audio.  Has no effect unless usepos is set  to 1 (optional=<b><c>0.0</c></b>)
			</param>
			<param name="distance">
				<paraminfo>Float </paraminfo>
				The distance over which the audio will be heard.  Has no effect unless usepos  is set to 1 (optional=<b><c>50.0</c></b>)
			</param>
			<param name="usepos">
				<paraminfo>bool </paraminfo>
				Use the positions and distance specified. (optional=<b><c>0</c></b>)
			</param>
			<library>omp_player</library>  <summary>Play an 'audio stream' for a player.  Normal audio files also work (e.g.  MP3).</summary>                <seealso name="StopAudioStreamForPlayer" />  <seealso name="PlayerPlaySound" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:PlaySoundForAdmins" syntax="PlaySoundForAdmins(sound)">
			<stacksize value="8"/>
			<referrer name="PGodTimer"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="Anticheat_Update"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AdminLvl"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="cellmax"/>
			<param name="sound">
			</param>
		</member>
		<member name="M:PlaySoundForAll" syntax="PlaySoundForAll(soundid)">
			<stacksize value="8"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_fart"/>
			<referrer name="cmd_allbugged"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="cellmax"/>
			<param name="soundid">
			</param>
		</member>
		<member name="M:PlaySoundForAll2" syntax="PlaySoundForAll2(soundid)">
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<param name="soundid">
			</param>
		</member>
		<member name="M:PlayerPlaySound" syntax="PlayerPlaySound(playerid, soundid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="countdownr"/>
			<referrer name="countdown"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_michelles"/>
			<referrer name="Unjailplayer_Timer"/>
			<referrer name="UnmutePlayer_Timer"/>
			<referrer name="IPInfoDB_Admin"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_duel"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_cc"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_para"/>
			<referrer name="cmd_brass"/>
			<referrer name="cmd_vibrator"/>
			<referrer name="cmd_vibrator2"/>
			<referrer name="cmd_dildo2"/>
			<referrer name="cmd_dildo"/>
			<referrer name="cmd_chainsaw"/>
			<referrer name="cmd_shovel"/>
			<referrer name="cmd_cane"/>
			<referrer name="cmd_flowers"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_hy"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_fix"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_stunts"/>
			<referrer name="cmd_stunts2"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_myweather"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_enablehydraall"/>
			<referrer name="cmd_disablehydraall"/>
			<referrer name="cmd_enablerhinoall"/>
			<referrer name="cmd_disablerhinoall"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_healall"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="PlaySoundForAll2"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="PlaySoundForAdmins"/>
			<referrer name="PlaySoundForAll"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="RaceSound"/>
			<referrer name="EasterEggPickup"/>
			<referrer name="_B@Action"/>
			<param name="playerid">
				The ID of the player for whom to play the sound
			</param>
			<param name="soundid">
				The sound to play
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x coordinate for the sound to play at. (0 for no position)
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y coordinate for the sound to play at. (0 for no position)
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				z coordinate for the sound to play at. (0 for no position)
			</param>
			<library>omp_player</library>  <summary>Plays the specified sound for a player.</summary>            <seealso name="PlayCrimeReportForPlayer" />  <seealso name="PlayAudioStreamForPlayer" />  <seealso name="StopAudioStreamForPlayer" />  <remarks>Only use the coordinates if you want the sound to be played at a certain position.  Set  coordinates all to 0 to just play the sound.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:PlayerSpectatePlayer" syntax="PlayerSpectatePlayer(playerid, targetid, mode)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="cmd_spec"/>
			<param name="playerid">
				The ID of the player that will spectate
			</param>
			<param name="targetid">
				The ID of the player that should be spectated
			</param>
			<param name="mode">
				<paraminfo>t_SPECTATE_MODE </paraminfo>
				The mode to spectate with (optional=<b><c>SPECTATE_MODE_NORMAL</c></b>)
			</param>
			<library>omp_player</library>  <summary>Makes a player spectate (watch) another player.</summary>        <seealso name="PlayerSpectateVehicle" />  <seealso name="TogglePlayerSpectating" />  <remarks>Order is CRITICAL! Ensure that you use <a href="#TogglePlayerSpectating">TogglePlayerSpectating</a>  before <a href="#PlayerSpectatePlayer">PlayerSpectatePlayer</a>. </remarks>  <remarks>playerid and targetid's virtual world and interior must be the same for this function to  work properly. </remarks>  <remarks>  <b>Spectate modes:</b><br />  <ul>  <li><b><c>SPECTATE_MODE_NORMAL</c></b> - normal spectate mode (third person point of view).  Camera can not be changed.</li>  <li><b><c>SPECTATE_MODE_FIXED </c></b> - use SetPlayerCameraPos after this to position the player's  camera, and it will track the player/vehicle set with PlayerSpectatePlayer/PlayerSpectateVehicle.</li>  <li><b><c>SPECTATE_MODE_SIDE</c></b> - the camera will be attached to the side of the player/vehicle  (like when you're in first-person camera on a bike and you do a wheelie).</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  One of the players specified does not exist.  </returns> 
		</member>
		<member name="M:PlayerSpectateVehicle" syntax="PlayerSpectateVehicle(playerid, targetid, mode)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="cmd_spec"/>
			<param name="playerid">
				The ID of the player who should spectate a vehicle
			</param>
			<param name="targetid">
				The ID of the vehicle the player should spectate
			</param>
			<param name="mode">
				<paraminfo>t_SPECTATE_MODE </paraminfo>
				The spectate mode.  Can generally be left blank as it defaults to 'normal'
			</param>
			<library>omp_player</library>  <summary>Sets a player to spectate another vehicle.  Their camera will be attached to the vehicle  as if they are driving it.</summary>        <seealso name="PlayerSpectatePlayer" />  <seealso name="TogglePlayerSpectating" />  <remarks>Order is CRITICAL! Ensure that you use <a href="#TogglePlayerSpectating">TogglePlayerSpectating</a>  before <a href="#PlayerSpectatePlayer">PlayerSpectatePlayer</a>. </remarks>  <remarks>playerid and targetid have to be in the same interior for this function to work properly.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Note that success is reported if the player  is not in spectator mode (<a href="#TogglePlayerSpectating">TogglePlayerSpectating</a>), but nothing  will happen. <a href="#TogglePlayerSpectating">TogglePlayerSpectating</a> MUST be used first.<br  />  <b><c>0</c></b>: The function failed to execute.  The player, vehicle, or both don't exist.  </returns> 
		</member>
		<member name="M:PlayerTextDrawAlignment" syntax="PlayerTextDrawAlignment(playerid, textid, alignment)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the alignment of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the alignment of
			</param>
			<param name="alignment">
				<paraminfo>t_TEXT_DRAW_ALIGN </paraminfo>
				<b><c>1</c></b>-left <b><c>2</c></b>-centered <b><c>3</c></b>-right
			</param>
			<library>omp_textdraw</library>  <summary>Set the text alignment of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>For alignment <b><c>2</c></b> (center) the x and y values of TextSize need to be swapped,  see notes at <a href="#PlayerTextDrawTextSize">PlayerTextDrawTextSize</a>. </remarks> 
		</member>
		<member name="M:PlayerTextDrawBackgroundColour" syntax="PlayerTextDrawBackgroundColour(playerid, textid, backgroundColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the background colour of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the background colour of
			</param>
			<param name="backgroundColour">
				The colour that the textdraw should be set to
			</param>
			<library>omp_textdraw</library>  <summary>Adjust the background colour of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>If <a href="#PlayerTextDrawSetOutline">PlayerTextDrawSetOutline</a> is used with size &gt;  0, the outline colour will match the colour used in <a href="#PlayerTextDrawBackgroundColour">PlayerTextDrawBackgroundColour</a>.  Changing the value of colour seems to alter the colour used in <a href="#PlayerTextDrawColour">PlayerTextDrawColour</a></remarks> 
		</member>
		<member name="M:PlayerTextDrawBoxColour" syntax="PlayerTextDrawBoxColour(playerid, textid, boxColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<param name="playerid">
				The ID of the player whose textdraw to set the box colour of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player textdraw to set the box colour of
			</param>
			<param name="boxColour">
				The colour to set.  Alpha (transparency) is supported
			</param>
			<library>omp_textdraw</library>  <summary>Sets the colour of a textdraw's box (<a href="#PlayerTextDrawUseBox">PlayerTextDrawUseBox</a>).</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PlayerTextDrawColour" syntax="PlayerTextDrawColour(playerid, textid, textColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreateCurrentPageTextDraw"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerHeaderTextDraw"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player who's textdraw to set the colour of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The TextDraw to change
			</param>
			<param name="textColour">
				The colour in hexadecimal format
			</param>
			<library>omp_textdraw</library>  <summary>Sets the text colour of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>You can also use Gametext colours in textdraws.</remarks>  <remarks>The textdraw must be re-shown to the player in order to update the colour.</remarks> 
		</member>
		<member name="M:PlayerTextDrawDestroy" syntax="PlayerTextDrawDestroy(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_DestroyPlayerMPs"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<param name="playerid">
				The ID of the player who's player-textdraw to destroy
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to destroy
			</param>
			<library>omp_textdraw</library>  <summary>Destroy a player-textdraw.</summary>      <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PlayerTextDrawFont" syntax="PlayerTextDrawFont(playerid, textid, font)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreateCurrentPageTextDraw"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerHeaderTextDraw"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to change the font of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to change the font of
			</param>
			<param name="font">
				<paraminfo>t_TEXT_DRAW_FONT </paraminfo>
				There are four font styles.  A font value greater than <b><c>3</c></b> does not  display, and anything greater than <b><c>16</c></b> crashes the client.  See  <a href="https://open.mp/docs/scripting/functions/TextDrawFont">https://open.mp/docs/scripting/functions/TextDrawFont</a>
			</param>
			<library>omp_textdraw</library>  <summary>Change the font of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PlayerTextDrawHide" syntax="PlayerTextDrawHide(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="DestroyAnnText"/>
			<param name="playerid">
				The ID of the player to hide the textdraw for
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to hide
			</param>
			<library>omp_textdraw</library>  <summary>Hide a player-textdraw from the player it was created for.</summary>      <seealso name="PlayerTextDrawShow" />  <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" /> 
		</member>
		<member name="M:PlayerTextDrawLetterSize" syntax="PlayerTextDrawLetterSize(playerid, textid, width, height)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreateCurrentPageTextDraw"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerHeaderTextDraw"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the letter size of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to change the letter size of
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				Width of a char
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				Height of a char
			</param>
			<library>omp_textdraw</library>  <summary>Sets the width and height of the letters in a player-textdraw.</summary>          <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>When using this function purely for the benefit of affecting the textdraw box, multiply  'y' by <b><c>0.135</c></b> to convert to <a href="#TextDrawTextSize">TextDrawTextSize</a>-like measurements</remarks>  <remarks>Fonts appear to look the best with an x to y ratio of <b><c>1</c></b> to <b><c>4</c></b>  (e.g.  if x is <b><c>0.5</c></b> then y should be <b><c>2</c></b>).</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetOutline" syntax="PlayerTextDrawSetOutline(playerid, textid, outlineSize)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreateCurrentPageTextDraw"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerHeaderTextDraw"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the outline of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the outline of
			</param>
			<param name="outlineSize">
				The thickness of the outline
			</param>
			<library>omp_textdraw</library>  <summary>Set the outline of a player-textdraw.  The outline colour cannot be changed unless  <a href="#PlayerTextDrawBackgroundColor">PlayerTextDrawBackgroundColor</a>  is used.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PlayerTextDrawSetPreviewModel" syntax="PlayerTextDrawSetPreviewModel(playerid, textid, model)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<param name="playerid">
				The PlayerTextDraw player ID
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The textdraw ID that will display the 3D preview
			</param>
			<param name="model">
				The GTA SA or SA:MP model ID to display
			</param>
			<library>omp_textdraw</library>  <summary>Sets a player textdraw 2D preview sprite of a specified model ID.</summary>        <seealso name="PlayerTextDrawSetPreviewRot" />  <seealso name="PlayerTextDrawSetPreviewVehCol" />  <seealso name="PlayerTextDrawFont" />  <seealso name="OnPlayerClickPlayerTextDraw" />  <remarks>The textdraw MUST use the font type <b><c>TEXT_DRAW_FONT_MODEL_PREVIEW</c></b> in order  for this function to have effect.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  If an invalid model is passed 'success' is  reported, but the model will appear as a yellow/black question mark.<br />  <b><c>0</c></b>: The function failed to execute.  Player and/or textdraw do not exist.  </returns> 
		</member>
		<member name="M:PlayerTextDrawSetPreviewRot" syntax="PlayerTextDrawSetPreviewRot(playerid, textid, rotX, rotY, rotZ, zoom)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to change
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to change
			</param>
			<param name="rotX">
				<paraminfo>Float </paraminfo>
				The x rotation value
			</param>
			<param name="rotY">
				<paraminfo>Float </paraminfo>
				The y rotation value
			</param>
			<param name="rotZ">
				<paraminfo>Float </paraminfo>
				The z rotation value
			</param>
			<param name="zoom">
				<paraminfo>Float </paraminfo>
				The zoom value, smaller values make the camera closer and larger values make the  camera further away (optional=<b><c>1.0</c></b>)
			</param>
			<library>omp_textdraw</library>  <summary>Sets the rotation and zoom of a 3D model preview player-textdraw.</summary>              <seealso name="TextDrawSetPreviewRot" />  <seealso name="PlayerTextDrawSetPreviewModel" />  <seealso name="PlayerTextDrawSetPreviewVehCol" />  <seealso name="PlayerTextDrawFont" />  <seealso name="OnPlayerClickPlayerTextDraw" />  <remarks>The textdraw MUST use the font type <b><c>TEXT_DRAW_FONT_MODEL_PREVIEW</c></b> and already  have a model set in order for this function to have effect.</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetProportional" syntax="PlayerTextDrawSetProportional(playerid, textid, proportional)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the proportionality of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the proportionality of
			</param>
			<param name="proportional">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable proportionality, <b><c>0</c></b> to disable
			</param>
			<library>omp_textdraw</library>  <summary>Appears to scale text spacing to a proportional ratio.  Useful when using  <a href="#PlayerTextDrawLetterSize">PlayerTextDrawLetterSize</a>  to ensure the text has even character spacing.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PlayerTextDrawSetSelectable" syntax="PlayerTextDrawSetSelectable(playerid, textid, selectable)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the selectability of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the selectability of
			</param>
			<param name="selectable">
				<paraminfo>bool </paraminfo>
				Set the player-textdraw selectable (<b><c>1</c></b>) or non-selectable (<b><c>0</c></b>).  By default this is <b><c>0</c></b>
			</param>
			<library>omp_textdraw</library>  <summary>Toggles whether a player-textdraw can be selected or not.</summary>        <seealso name="SelectTextDraw" />  <seealso name="CancelSelectTextDraw" />  <seealso name="OnPlayerClickPlayerTextDraw" />  <remarks><a href="#PlayerTextDrawSetSelectable">PlayerTextDrawSetSelectable</a> MUST be used BEFORE  the textdraw is shown to the player.</remarks>  <remarks>Use <a href="#PlayerTextDrawTextSize">PlayerTextDrawTextSize</a> to define the clickable  area.</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetShadow" syntax="PlayerTextDrawSetShadow(playerid, textid, shadowSize)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreateCurrentPageTextDraw"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerHeaderTextDraw"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player to show the textdraw for
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to show
			</param>
			<param name="shadowSize">
				The size of the shadow. <b><c>0</c></b> will hide the shadow
			</param>
			<library>omp_textdraw</library>  <summary>Show a player-textdraw to the player it was created for.</summary>        <seealso name="PlayerTextDrawHide" />  <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" /> 
		</member>
		<member name="M:PlayerTextDrawSetString" syntax="PlayerTextDrawSetString(playerid, textid, format[], ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_UpdatePageTextDraw"/>
			<referrer name="SendInfoText"/>
			<param name="playerid">
				The ID of the player who's textdraw string to set
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to change
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The new string for the TextDraw.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_textdraw</library>  <summary>Change the text of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>There are limits to the length of textdraw strings! See <a href="https://open.mp/docs/scripting/resources/limits">Limits</a>  for more info.</remarks>  <remarks>You don't have to show the TextDraw again in order to apply the changes.</remarks> 
		</member>
		<member name="M:PlayerTextDrawShow" syntax="PlayerTextDrawShow(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreateCurrentPageTextDraw"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerHeaderTextDraw"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<referrer name="SendInfoText"/>
			<param name="playerid">
				The ID of the player to show the textdraw for
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to show
			</param>
			<library>omp_textdraw</library>  <summary>Show a player-textdraw to the player it was created for.</summary>      <seealso name="PlayerTextDrawHide" />  <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" /> 
		</member>
		<member name="M:PlayerTextDrawTextSize" syntax="PlayerTextDrawTextSize(playerid, textid, width, height)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<referrer name="mS_CreateMPTextDraw"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the size of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the size of
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				The size on the x axis (left/right) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				The size on the y axis (up/down) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>omp_textdraw</library>  <summary>Change the size of a player-textdraw (box if <a href="#PlayerTextDrawUseBox">PlayerTextDrawUseBox</a>  is enabled and/or clickable area for use with <a href="#PlayerTextDrawSetSelectable">PlayerTextDrawSetSelectable</a>).</summary>          <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>  The x and y have different meanings with different PlayerTextDrawAlignment values:<br />  <ul>  <li><b><c>1</c></b> (left): they are the right-most corner of the box, absolute coordinates.</li>  <li><b><c>2</c></b> (center): they need to inverted (switch the two) and the x value is the overall  width of the box.</li>  <li><b><c>3</c></b> (right): the x and y are the coordinates of the left-most corner of the box  </li>  </ul>  </remarks>  <remarks>  Using font type <b><c>4</c></b> (sprite) and <b><c>5</c></b> (model preview) converts x and y of  this function from corner coordinates to WIDTH and HEIGHT (offsets).<br />  The TextDraw box starts <b><c>10.0</c></b> units up and <b><c>5.0</c></b> to the left as the origin  (<a href="#TextDrawCreate">TextDrawCreate</a> coordinate).<br />  This function defines the clickable area for use with <a href="#PlayerTextDrawSetSelectable">PlayerTextDrawSetSelectable</a>,  whether a box is shown or not.  </remarks> 
		</member>
		<member name="M:PlayerTextDrawUseBox" syntax="PlayerTextDrawUseBox(playerid, textid, boxEnabled)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="mS_CreateCurrentPageTextDraw"/>
			<referrer name="mS_CreatePlayerDialogButton"/>
			<referrer name="mS_CreatePlayerHeaderTextDraw"/>
			<referrer name="mS_CreatePlayerBGTextDraw"/>
			<param name="playerid">
				The ID of the player whose textdraw to toggle the box of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to toggle the box of
			</param>
			<param name="boxEnabled">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to use a box or <b><c>0</c></b> to not use a box
			</param>
			<library>omp_textdraw</library>  <summary>Toggle the box on a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PosCloseToSpawn" syntax="PosCloseToSpawn(x1, y1, z1)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_tpos"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&lt;=(Float:,_:)"/>
			<dependency name="cpHelpMsg"/>
			<dependency name="floatabs"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<dependency name="floatsub"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z1">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PrintAmxHeader" syntax="PrintAmxHeader()">
			<stacksize value="1"/>
			<referrer name="ScriptInit_Dump"/>
		</member>
		<member name="M:PrintArg" syntax="PrintArg(n)">
			<stacksize value="1"/>
			<dependency name="__1_cell"/>
			<dependency name="__2_cells"/>
			<dependency name="__3_cells"/>
			<dependency name="__cell_shift"/>
			<dependency name="__frame_offset"/>
			<dependency name="print"/>
			<param name="n">
				The numeric parameter position to print.
			</param>
			<library>y_utils - varargs</library>    <returns>  Prints a string passed as a vararg to the calling function.  </returns> 
		</member>
		<member name="M:PutPlayerInVehicle" syntax="PutPlayerInVehicle(playerid, vehicleid, seatid)">
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_alpha"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_euros"/>
			<referrer name="cmd_limo"/>
			<referrer name="cmd_adromada"/>
			<referrer name="cmd_at400"/>
			<referrer name="cmd_beagle"/>
			<referrer name="cmd_dodo"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_tram"/>
			<referrer name="cmd_kart"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_join"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_Exit"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<param name="playerid">
				The ID of the player to put in a vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle to put the player in
			</param>
			<param name="seatid">
				The ID of the seat to put the player in
			</param>
			<library>omp_player</library>  <summary>Puts a player in a vehicle.</summary>        <seealso name="RemovePlayerFromVehicle" />  <seealso name="GetPlayerVehicleid" />  <seealso name="GetPlayerVehicleSeat" />  <seealso name="OnPlayerEnterVehicle" />  <remarks>If this function is used on a player that is already in a vehicle, other players will still  see them in their previous vehicle.  To fix this, first remove the player from the vehicle.</remarks>  <remarks>If the seat is invalid or is taken, will cause a crash when they EXIT the vehicle.</remarks>  <remarks>You can use <a href="#GetPlayerVehicleSeat">GetPlayerVehicleSeat</a> in a loop to check  if a seat is occupied by any players.</remarks>  <remarks>  <b>Seats:</b><br />  <ul>  <li><b><c>0</c></b> - driver.</li>  <li><b><c>1</c></b> - front passenger.</li>  <li><b><c>2</c></b> - back-left passenger.</li>  <li><b><c>3</c></b> - back-right passenger.</li>  <li><b><c>4+</c></b> - passenger seats (coach etc.).</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player or vehicle don't exist.  </returns> 
		</member>
		<member name="M:QuickSort" syntax="QuickSort(arr[], num)">
			<stacksize value="6"/>
			<referrer name="Mode"/>
			<referrer name="Median"/>
			<dependency name="Utils_QuickSort"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array to sort.
			</param>
			<param name="num">
				The size of the array.
			</param>
			<library>y_utils - arrays</library>      <remarks>  Sorts the array in place.  Uses quick sort because it is relatively simple  and pretty "quick".  </remarks> 
		</member>
		<member name="M:R@" syntax="R@(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_shortfunc</library>  <remarks>  An alias for <c>CallLocalFunction</c>, but with a shorter name (for macro  length limits) and better tag support.  </remarks> 
		</member>
		<member name="M:RaceCountDown" syntax="RaceCountDown()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="AmRacing"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GoGoRace"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="OnRaceCD"/>
			<dependency name="Players"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceSound"/>
			<dependency name="RaceStart"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetTimer"/>
			<dependency name="TextDrawHideForAll"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="racenotify"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<dependency name="xx_cd"/>
		</member>
		<member name="M:RaceDetails" syntax="RaceDetails()">
			<stacksize value="11"/>
			<referrer name="LoadRace"/>
			<referrer name="Race_Rotation"/>
			<referrer name="StartRace"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RecordName"/>
			<dependency name="RecordName"/>
			<dependency name="RecordTime"/>
			<dependency name="RecordVehicle"/>
			<dependency name="RecordVehicle"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetTimer"/>
			<dependency name="TotalCP"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="bombrace"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="isRecordEmpty"/>
			<dependency name="mysql_query"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<dependency name="xx_cd"/>
		</member>
		<member name="M:RaceMustEnd" syntax="RaceMustEnd()">
			<attribute name="public"/>
			<stacksize value="207"/>
			<dependency name="AmRacing"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="OnRaceCD"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceStart"/>
			<dependency name="RaceTime"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="TextDrawHideForAll"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="eTimer"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="lastwin"/>
			<dependency name="rTimer"/>
			<dependency name="racelabel"/>
			<dependency name="racenotify"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xx_cd"/>
		</member>
		<member name="M:RaceSound" syntax="RaceSound(playerid, sound)">
			<stacksize value="10"/>
			<referrer name="RaceCountDown"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="PlayerPlaySound"/>
			<param name="playerid">
			</param>
			<param name="sound">
			</param>
		</member>
		<member name="M:RaceTime22" syntax="RaceTime22(playerid, raceid)">
			<attribute name="public"/>
			<stacksize value="73"/>
			<referrer name="TT_Announcement"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<dependency name="Difft"/>
			<dependency name="Positiont"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="Time18t"/>
			<dependency name="__Timer"/>
			<dependency name="__TotalCP"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="raceid">
			</param>
		</member>
		<member name="M:RaceVehicle" syntax="RaceVehicle(playerid)">
			<stacksize value="62"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Race_Rotation" syntax="Race_Rotation()">
			<attribute name="public"/>
			<stacksize value="309"/>
			<referrer name="Race_Rotation"/>
			<referrer name="StartRace"/>
			<dependency name="CPs"/>
			<dependency name="CPs"/>
			<dependency name="CPsize"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetPlayerCount"/>
			<dependency name="GetVehicleVirtualWorld"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="Iterator@Vehicle"/>
			<dependency name="RCreator"/>
			<dependency name="R_Interior"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceDetails"/>
			<dependency name="RaceRotation"/>
			<dependency name="RecordName"/>
			<dependency name="RecordName"/>
			<dependency name="RecordTime"/>
			<dependency name="RecordVehicle"/>
			<dependency name="RecordVehicle"/>
			<dependency name="SQL"/>
			<dependency name="TotalCP"/>
			<dependency name="VehicleID"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="isRecordEmpty"/>
			<dependency name="mysql_query"/>
			<dependency name="rID"/>
			<dependency name="true"/>
		</member>
		<member name="M:Race_Timing" syntax="Race_Timing()">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AmRacing"/>
			<dependency name="GetMyColor"/>
			<dependency name="GetRaceTick"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="KillTimer"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="Players"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceStart"/>
			<dependency name="RaceTime"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="TotalCP"/>
			<dependency name="TotalRacers"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="eTimer"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="lastwin"/>
			<dependency name="rTimer"/>
			<dependency name="racelabel"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:Random" syntax="Random(minOrMax, max, ...)">
			<stacksize value="1"/>
			<param name="minOrMax">
				Upper bound, or lower bound with 2+ parameters or when less than naught.
			</param>
			<param name="max">
				Upper bound.
			</param>
			<param name="...">
			</param>
			<library>y_utils - random</library>      <param>Value(s) to not return.</param>  <remarks>  Generate a random number between the given numbers (min &lt;= n &lt; max).  Default minimum is 0 (changes the parameter order).  This uses a compile-  time macro to detect the number of parameters and adjust the implementation  accordingly.  Also when there is only one parameter and it is below naught,  it uses naught as the max and the parameter as the min instead.  Won't  return the value <c>except</c> if it is between the limits.  So can be  called with one, two, or three parameters.  Don't try  <c>Random(0, _, 2);</c> for example, it won't work.  With more than two  parameters all the rest are numbers that should not be returned.  </remarks> 
		</member>
		<member name="M:RandomFloatMax" syntax="RandomFloatMax(max)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="RandomPointsInCircleCentred"/>
			<referrer name="RandomPointsInCircleDistributed"/>
			<referrer name="RandomPointInCircleCentred"/>
			<referrer name="RandomPointInCircleDistributed"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="float"/>
			<dependency name="floatround"/>
			<dependency name="random"/>
			<param name="max">
				<paraminfo>Float </paraminfo>
				Upper bound.
			</param>
			<library>y_utils - random</library>    <remarks>  Generate a random float between <c>0 &lt;= n &lt; max</c>.  </remarks> 
		</member>
		<member name="M:RandomFloatMinMax" syntax="RandomFloatMinMax(min, max, dp)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="RandomPointsInCircleSampled"/>
			<referrer name="RandomPointInCircleSampled"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="Debug_Print0"/>
			<dependency name="float"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<dependency name="random"/>
			<param name="min">
				<paraminfo>Float </paraminfo>
				Lower bound, or upper bound when only parameter.
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
				Upper bound.
			</param>
			<param name="dp">
				How small to make the differences
			</param>
			<library>y_utils - random</library>        <remarks>  Generate a random float between the given numbers (min &lt;= n &lt; max).  Default minimum is 0.0 (changes the parameter order).  </remarks> 
		</member>
		<member name="M:RandomGame" syntax="RandomGame()">
			<attribute name="public"/>
			<stacksize value="223"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="tCash"/>
			<dependency name="tScore"/>
			<dependency name="true"/>
			<dependency name="ttoken"/>
			<dependency name="tword"/>
			<dependency name="typing"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:RandomMax" syntax="RandomMax(max)">
			<stacksize value="3"/>
			<dependency name="YSI_Random__"/>
			<param name="max">
				Upper bound.
			</param>
			<library>y_utils - random</library>    <remarks>  Generate a random number between the given numbers (min &lt;= n &lt; max).  Default minimum is 0 (changes the parameter order).  This uses a compile-  time macro to detect the number of parameters and adjust the implementation  accordingly.  Also when there is only one parameter and it is below naught,  it uses naught as the max and the parameter as the min instead.  </remarks> 
		</member>
		<member name="M:RandomMessages" syntax="RandomMessages()">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="Earnings"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="GetVehicleVirtualWorld"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Iterator@Vehicle"/>
			<dependency name="Logged"/>
			<dependency name="Lotto"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="PlayerProps"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropUnbuyableTime"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="RandomMSG"/>
			<dependency name="RandomMSG"/>
			<dependency name="Save"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Token"/>
			<dependency name="VIP"/>
			<dependency name="cellmax"/>
			<dependency name="formatex"/>
			<dependency name="laststatic"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:RandomMinMax" syntax="RandomMinMax(min, max)">
			<stacksize value="3"/>
			<dependency name="YSI_Random__"/>
			<param name="min">
				Lower bound.
			</param>
			<param name="max">
				Upper bound.
			</param>
			<library>y_utils - random</library>      <remarks>  Generate a random number  between the given numbers (min &lt;= n &lt; max).  </remarks> 
		</member>
		<member name="M:RandomMinMaxExcept" syntax="RandomMinMaxExcept(min, max, except)">
			<stacksize value="3"/>
			<dependency name="YSI_Random__"/>
			<param name="min">
				Lower bound.
			</param>
			<param name="max">
				Upper bound.
			</param>
			<param name="except">
				Value to not return.
			</param>
			<library>y_utils - random</library>        <remarks>  Generate a random number between the given numbers (min &lt;= n &lt; max).  Won't return the value <c>except</c> if it is between the limits.  </remarks> 
		</member>
		<member name="M:RandomMinMaxExceptMany" syntax="RandomMinMaxExceptMany(min, max, ...)">
			<stacksize value="7"/>
			<dependency name="YSI_Random__"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<param name="min">
				Lower bound.
			</param>
			<param name="max">
				Upper bound.
			</param>
			<param name="...">
				Values to not return.
			</param>
			<library>y_utils - random</library>        <remarks>  Generate a random number between the given numbers (min &lt;= n &lt; max).  Default minimum is 0 (changes the parameter order).  Won't return any of  the extra parameter values, so you can do:  <code>  Random(0, 20, 11, 12, 13);  </code>  To randomly select <c>0-10, 14-19</c> (inclusive).  </remarks> 
		</member>
		<member name="M:RandomMinigame" syntax="RandomMinigame()">
			<attribute name="public"/>
			<stacksize value="82"/>
			<referrer name="cmd_randomgame"/>
			<dependency name="operator!=(Float:,_:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="ActiveCTF"/>
			<dependency name="ActiveDerby"/>
			<dependency name="CTFFlags"/>
			<dependency name="CTFI"/>
			<dependency name="CTFIcons"/>
			<dependency name="CTFInterior"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFSpawn"/>
			<dependency name="CTFTimer"/>
			<dependency name="CTFToken"/>
			<dependency name="CTF_Flags"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="DerbyInterior"/>
			<dependency name="DerbyLoaded"/>
			<dependency name="DerbyPickups"/>
			<dependency name="DerbyPlayers"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbyTime"/>
			<dependency name="DerbyVehicle"/>
			<dependency name="DerbyZ"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="KillTimer"/>
			<dependency name="LoadDerbyMap"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="SQL"/>
			<dependency name="SVLoaded"/>
			<dependency name="SVStarted"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetTimer"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="random"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:RandomMulberry32" syntax="RandomMulberry32()">
			<stacksize value="1"/>
			<library>y_utils - random</library>  <remarks>  Relatively high quality 32-bit PRNG.  </remarks> 
		</member>
		<member name="M:RandomMulberry32__" syntax="RandomMulberry32__()">
			<stacksize value="1"/>
			<library>y_utils - random</library>  <remarks>  Relatively high quality 32-bit PRNG.  </remarks> 
		</member>
		<member name="M:RandomPointInCircleCentred" syntax="RandomPointInCircleCentred(centreX, centreY, radius, &amp;outX, &amp;outY)">
			<stacksize value="6"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="RandomFloatMax"/>
			<dependency name="degrees"/>
			<dependency name="floatsin"/>
			<param name="centreX">
				<paraminfo>Float </paraminfo>
				The x co-ordinate of the centre of the circle.
			</param>
			<param name="centreY">
				<paraminfo>Float </paraminfo>
				The y co-ordinate of the centre of the circle.
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The size (radius) of the circle.
			</param>
			<param name="outX">
				<paraminfo>Float &amp; </paraminfo>
				The return for the random x co-ordinate.
			</param>
			<param name="outY">
				<paraminfo>Float &amp; </paraminfo>
				The return for the random y co-ordinate.
			</param>
			<library>y_utils - random</library>  <summary>  Get a random point in a circle.  </summary>            <remarks>  Medium method.  Generate an angle and distance.  Fixed loop bounds, but  worst distribution (although actually the best distribution if you want more  near the centre, as in an explosion).  </remarks> 
		</member>
		<member name="M:RandomPointInCircleDistributed" syntax="RandomPointInCircleDistributed(centreX, centreY, radius, &amp;outX, &amp;outY)">
			<stacksize value="6"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="RandomFloatMax"/>
			<dependency name="degrees"/>
			<dependency name="floatsin"/>
			<dependency name="floatsqroot"/>
			<param name="centreX">
				<paraminfo>Float </paraminfo>
				The x co-ordinate of the centre of the circle.
			</param>
			<param name="centreY">
				<paraminfo>Float </paraminfo>
				The y co-ordinate of the centre of the circle.
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The size (radius) of the circle.
			</param>
			<param name="outX">
				<paraminfo>Float &amp; </paraminfo>
				The return for the random x co-ordinate.
			</param>
			<param name="outY">
				<paraminfo>Float &amp; </paraminfo>
				The return for the random y co-ordinate.
			</param>
			<library>y_utils - random</library>  <summary>  Get a random point in a circle.  </summary>            <remarks>  Best method.  Generate an angle and distance, but adjusted for a perfect  distribution of points throughout the circle.  Fixed loop bounds.  </remarks> 
		</member>
		<member name="M:RandomPointInCircleSampled" syntax="RandomPointInCircleSampled(centreX, centreY, radius, &amp;outX, &amp;outY)">
			<stacksize value="10"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="RandomFloatMinMax"/>
			<dependency name="VectorSize"/>
			<param name="centreX">
				<paraminfo>Float </paraminfo>
				The x co-ordinate of the centre of the circle.
			</param>
			<param name="centreY">
				<paraminfo>Float </paraminfo>
				The y co-ordinate of the centre of the circle.
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The size (radius) of the circle.
			</param>
			<param name="outX">
				<paraminfo>Float &amp; </paraminfo>
				The return for the random x co-ordinate.
			</param>
			<param name="outY">
				<paraminfo>Float &amp; </paraminfo>
				The return for the random y co-ordinate.
			</param>
			<library>y_utils - random</library>  <summary>  Get a random point in a circle.  </summary>            <remarks>  Most basic method.  Generate points in a square and test them.  Simple but  unbounded.  Good distribution.  </remarks> 
		</member>
		<member name="M:RandomPointsInCircleCentred" syntax="RandomPointsInCircleCentred(centreX, centreY, radius, xs[], ys[], sx, sy)">
			<stacksize value="6"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="RandomFloatMax"/>
			<dependency name="degrees"/>
			<dependency name="floatsin"/>
			<param name="centreX">
				<paraminfo>Float </paraminfo>
				The x co-ordinate of the centre of the circle.
			</param>
			<param name="centreY">
				<paraminfo>Float </paraminfo>
				The y co-ordinate of the centre of the circle.
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The size (radius) of the circle.
			</param>
			<param name="xs">
				<paraminfo>Float [] </paraminfo>
				The return array for the random x co-ordinates.
			</param>
			<param name="ys">
				<paraminfo>Float [] </paraminfo>
				The return array for the random y co-ordinates.
			</param>
			<param name="sx">
				The size of the x return array (must match <c>sy</c>.
			</param>
			<param name="sy">
				The size of the y return array (must match <c>sx</c>.
			</param>
			<library>y_utils - random</library>  <summary>  Get an array of random points in a circle.  </summary>                <remarks>  Medium method.  Generate an angle and distance.  Fixed loop bounds, but  worst distribution (although actually the best distribution if you want more  near the centre, as in an explosion).  </remarks> 
		</member>
		<member name="M:RandomPointsInCircleDistributed" syntax="RandomPointsInCircleDistributed(centreX, centreY, radius, xs[], ys[], sx, sy)">
			<stacksize value="6"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="RandomFloatMax"/>
			<dependency name="degrees"/>
			<dependency name="floatsin"/>
			<dependency name="floatsqroot"/>
			<param name="centreX">
				<paraminfo>Float </paraminfo>
				The x co-ordinate of the centre of the circle.
			</param>
			<param name="centreY">
				<paraminfo>Float </paraminfo>
				The y co-ordinate of the centre of the circle.
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The size (radius) of the circle.
			</param>
			<param name="xs">
				<paraminfo>Float [] </paraminfo>
				The return array for the random x co-ordinates.
			</param>
			<param name="ys">
				<paraminfo>Float [] </paraminfo>
				The return array for the random y co-ordinates.
			</param>
			<param name="sx">
				The size of the x return array (must match <c>sy</c>.
			</param>
			<param name="sy">
				The size of the y return array (must match <c>sx</c>.
			</param>
			<library>y_utils - random</library>  <summary>  Get an array of random points in a circle.  </summary>                <remarks>  Best method.  Generate an angle and distance, but adjusted for a perfect  distribution of points throughout the circle.  Fixed loop bounds.  </remarks> 
		</member>
		<member name="M:RandomPointsInCircleSampled" syntax="RandomPointsInCircleSampled(centreX, centreY, radius, xs[], ys[], sx, sy)">
			<stacksize value="12"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="RandomFloatMinMax"/>
			<dependency name="VectorSize"/>
			<param name="centreX">
				<paraminfo>Float </paraminfo>
				The x co-ordinate of the centre of the circle.
			</param>
			<param name="centreY">
				<paraminfo>Float </paraminfo>
				The y co-ordinate of the centre of the circle.
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The size (radius) of the circle.
			</param>
			<param name="xs">
				<paraminfo>Float [] </paraminfo>
				The return array for the random x co-ordinates.
			</param>
			<param name="ys">
				<paraminfo>Float [] </paraminfo>
				The return array for the random y co-ordinates.
			</param>
			<param name="sx">
				The size of the x return array (must match <c>sy</c>.
			</param>
			<param name="sy">
				The size of the y return array (must match <c>sx</c>.
			</param>
			<library>y_utils - random</library>  <summary>  Get an array of random points in a circle.  </summary>                <remarks>  Most basic method.  Generate points in a square and test them.  Simple but  unbounded.  Good distribution.  </remarks> 
		</member>
		<member name="M:RandomSplitMix32" syntax="RandomSplitMix32()">
			<stacksize value="1"/>
			<library>y_utils - random</library>  <remarks>  Slightly lower quality 32-bit PRNG.  </remarks> 
		</member>
		<member name="M:RandomSplitMix32__" syntax="RandomSplitMix32__()">
			<stacksize value="1"/>
			<library>y_utils - random</library>  <remarks>  Slightly lower quality 32-bit PRNG.  </remarks> 
		</member>
		<member name="M:RandomVehicleColor" syntax="RandomVehicleColor()">
			<stacksize value="3"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<dependency name="random"/>
		</member>
		<member name="M:Range" syntax="Range(arr[], num)">
			<stacksize value="4"/>
			<dependency name="cellmax"/>
			<dependency name="cellmin"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			<library>y_utils - maths</library>      <returns>  The mathematical range of the values of the array.  </returns> 
		</member>
		<member name="M:RawMemCpy_" syntax="RawMemCpy_(dest, src, index, numbytes, maxlength)">
			<attribute name="native"/>
			<referrer name="rawMemcpy"/>
			<param name="dest">
				Destination address.
			</param>
			<param name="src">
				Source data.
			</param>
			<param name="index">
			</param>
			<param name="numbytes">
				Number of bytes to copy.
			</param>
			<param name="maxlength">
			</param>
			<library>y_utils - arrays</library>        <remarks>  Like memcpy, but takes addresses instead of arrays.  Also far less secure  because it doesn't check the destination size - it just assumes it is large  enough.  </remarks> 
		</member>
		<member name="M:RawMemSet" syntax="RawMemSet(address, value, size)">
			<stacksize value="1"/>
			<referrer name="MemSet"/>
			<referrer name="memset"/>
			<referrer name="rawMemset"/>
			<dependency name="cellbytes"/>
			<param name="address">
				Array or address to set to a value.
			</param>
			<param name="value">
				What to set the cells to.
			</param>
			<param name="size">
				Number of bytes to fill.
			</param>
			<library>y_utils - arrays</library>        <remarks>  Based on code by Slice:  <a href="http://forum.sa-mp.com/showthread.php?p=1606781#post1606781" />  Modified to use binary flags instead of a loop.  "MemSet" takes an array, the size of the array, and a value to fill it with  and sets the whole array to that value.  "RawMemSet" is similar, but takes an AMX data segment address instead and  the size is in bytes, not cells.  However, the size must still be a multiple  of 4.  </remarks> 
		</member>
		<member name="M:RemoveBuildingForPlayer" syntax="RemoveBuildingForPlayer(playerid, modelid, centerX, centerY, centerZ, radius)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="cmd_rmbuilding"/>
			<param name="playerid">
				The ID of the player to remove the objects for
			</param>
			<param name="modelid">
				The model to remove
			</param>
			<param name="centerX">
				<paraminfo>Float </paraminfo>
				The x coordinate around which the objects will be removed
			</param>
			<param name="centerY">
				<paraminfo>Float </paraminfo>
				The y coordinate around which the objects will be removed
			</param>
			<param name="centerZ">
				<paraminfo>Float </paraminfo>
				The z coordinate around which the objects will be removed
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The radius around the specified point to remove objects with the specified model
			</param>
			<library>omp_player</library>  <summary>Removes a standard San Andreas model for a single player within a specified range.</summary>              <seealso name="DestroyObject" />  <seealso name="DestroyPlayerObject" />  <remarks>There appears to be a limit of around <b><c>1000</c></b> lines/objects.  There is no workaround.  </remarks>  <remarks>When removing the same object for a player, they will crash.  Commonly, players crash when  reconnecting to the server because the server removes buildings on <a href="#OnPlayerConnect">OnPlayerConnect</a>.  </remarks>  <remarks>You can use <b><c>-1</c></b> for the modelid to remove all objects  within the specified radius.</remarks> 
		</member>
		<member name="M:RemoveNeon" syntax="RemoveNeon(playerid)">
			<stacksize value="3"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerExitVehicle"/>
			<dependency name="DestroyObject"/>
			<dependency name="neons"/>
			<dependency name="neons"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RemovePlayerAttachedObject" syntax="RemovePlayerAttachedObject(playerid, index)">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_rho"/>
			<referrer name="cmd_raho"/>
			<referrer name="cmd_lho"/>
			<param name="playerid">
				The ID of the player to remove the object from
			</param>
			<param name="index">
				The index of the object to remove (set with <a href="#SetPlayerAttachedObject">SetPlayerAttachedObject</a>)
			</param>
			<library>omp_object</library>  <summary>Remove an attached object from a player.</summary>      <seealso name="SetPlayerAttachedObject" />  <seealso name="IsPlayerAttachedObjectSlotUsed" />  <returns><b><c>1</c></b> on success, <b><c>0</c></b> on failure.</returns> 
		</member>
		<member name="M:RemovePlayerFromVehicle" syntax="RemovePlayerFromVehicle(playerid)">
			<attribute name="native"/>
			<referrer name="cmd_eject"/>
			<param name="playerid">
				The ID of the player to remove from their vehicle
			</param>
			<library>omp_player</library>  <summary>Removes/ejects a player from their vehicle.</summary>    <seealso name="PutPlayerInVehicle" />  <remarks>  The exiting animation is not synced for other players.<br />  This function will not work when used in <a href="#OnPlayerEnterVehicle">OnPlayerEnterVehicle</a>,  because the player isn't in the vehicle when the callback is called.  Use <a href="#OnPlayerStateChange">OnPlayerStateChange</a>  instead.<br />  The player isn't removed if he is in a RC Vehicle.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:RemovePlayerMapIcon" syntax="RemovePlayerMapIcon(playerid, iconid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="playerid">
				The ID of the player whose icon to remove
			</param>
			<param name="iconid">
				The ID of the icon to remove.  This is the second parameter of  <a href="#SetPlayerMapIcon">SetPlayerMapIcon</a>
			</param>
			<library>omp_player</library>  <summary>Removes a map icon that was set earlier for a player using <a href="#SetPlayerMapIcon">SetPlayerMapIcon</a>.</summary>      <seealso name="SetPlayerMapIcon" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  </returns> 
		</member>
		<member name="M:RemoveVehicleComponent" syntax="RemoveVehicleComponent(vehicleid, component)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="vehicleid">
				ID of the vehicle
			</param>
			<param name="component">
				ID of the <a href="http://wiki.sa-mp.com/wiki/Car_Component_ID">component</a>  to remove
			</param>
			<library>omp_vehicle</library>  <summary>Remove a component from a vehicle.</summary>      <seealso name="AddVehicleComponent" />  <seealso name="GetVehicleComponentInSlot" />  <seealso name="GetVehicleComponentType" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" /> 
		</member>
		<member name="M:RemoveWeaponDropped" syntax="RemoveWeaponDropped(pickupid, wid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Ammo"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="Model"/>
			<dependency name="Ocuppied"/>
			<dependency name="Pickupid"/>
			<dependency name="WeaponsDropped"/>
			<dependency name="WeaponsDropped"/>
			<dependency name="false"/>
			<param name="pickupid">
			</param>
			<param name="wid">
			</param>
		</member>
		<member name="M:RepairVehicle" syntax="RepairVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="PGodTimer"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_fix"/>
			<referrer name="_B@Action"/>
			<param name="vehicleid">
				The ID of the vehicle to repair
			</param>
			<library>omp_vehicle</library>  <summary>Fully repairs a vehicle, including visual damage (bumps, dents, scratches, popped tires  etc.).</summary>    <seealso name="SetVehicleHealth" />  <seealso name="GetVehicleHealth" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:ResetPlayerArmor" syntax="ResetPlayerArmor(playerid)">
			<stacksize value="4"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dmq"/>
			<referrer name="dmq"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="SetPlayerArmour"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetPlayerCash" syntax="ResetPlayerCash(playerid)">
			<stacksize value="3"/>
			<referrer name="cmd_bankrupt"/>
			<referrer name="cmd_setplayercash"/>
			<dependency name="Money"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetPlayerHealth" syntax="ResetPlayerHealth(playerid)">
			<stacksize value="4"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dmq"/>
			<referrer name="dmq"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="SetPlayerHealth"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetPlayerMoney" syntax="ResetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="SetPlayerCash"/>
			<referrer name="ResetPlayerCash"/>
			<param name="playerid">
				The ID of the player to reset the money of
			</param>
			<library>omp_player</library>  <summary>Reset a player's money to $0.</summary>    <seealso name="GetPlayerMoney" />  <seealso name="GivePlayerMoney" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:ResetPlayerWeapons" syntax="ResetPlayerWeapons(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="LooseWeapons"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_dropguns"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_dmq"/>
			<referrer name="dmq"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_startctf"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_join"/>
			<param name="playerid">
				The ID of the player whose weapons to remove
			</param>
			<library>omp_player</library>  <summary>Removes all weapons from a player.</summary>    <seealso name="GivePlayerWeapon" />  <seealso name="GetPlayerWeapon" />  <remarks>To remove individual weapons from a player, set their ammo to <b><c>0</c></b> using  <a href="#SetPlayerAmmo">SetPlayerAmmo</a>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:ResetSpam" syntax="ResetSpam(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Spam"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetVariables" syntax="ResetVariables(playerid)">
			<stacksize value="5"/>
			<referrer name="MP_OPC"/>
			<dependency name="AC_ArmourAlerts"/>
			<dependency name="AC_HealthAlerts"/>
			<dependency name="AC_JackAlerts"/>
			<dependency name="AC_MoneyAlerts"/>
			<dependency name="AdminChat"/>
			<dependency name="AdminLvl"/>
			<dependency name="AdminMsgs"/>
			<dependency name="AllowedVehicle"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="AutoGM"/>
			<dependency name="Banned"/>
			<dependency name="Collisions"/>
			<dependency name="Color"/>
			<dependency name="Deaths"/>
			<dependency name="Editing"/>
			<dependency name="Expierience"/>
			<dependency name="FPS_bool"/>
			<dependency name="God"/>
			<dependency name="IPLookups"/>
			<dependency name="KSpree"/>
			<dependency name="LastCar"/>
			<dependency name="Logged"/>
			<dependency name="Lotto"/>
			<dependency name="MJ_Value"/>
			<dependency name="MJ_Value"/>
			<dependency name="Minigame"/>
			<dependency name="Money"/>
			<dependency name="Muted"/>
			<dependency name="MyCar"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="MyRank"/>
			<dependency name="PMs"/>
			<dependency name="PlayTime"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RacesJoined"/>
			<dependency name="RacesWon"/>
			<dependency name="Rank"/>
			<dependency name="Registered"/>
			<dependency name="SPoints"/>
			<dependency name="Skin"/>
			<dependency name="Spam"/>
			<dependency name="SpawnProtect"/>
			<dependency name="Spawned"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="TDMJoined"/>
			<dependency name="Token"/>
			<dependency name="TokenUltimate"/>
			<dependency name="TokenUsing"/>
			<dependency name="VIP"/>
			<dependency name="Wash"/>
			<dependency name="acceptpms"/>
			<dependency name="afob"/>
			<dependency name="allowmg"/>
			<dependency name="apples"/>
			<dependency name="autofix"/>
			<dependency name="banked"/>
			<dependency name="bounty"/>
			<dependency name="cNeon"/>
			<dependency name="crashwarns"/>
			<dependency name="ctf_wins"/>
			<dependency name="ctfflags"/>
			<dependency name="dueling"/>
			<dependency name="duelloc"/>
			<dependency name="explosions"/>
			<dependency name="false"/>
			<dependency name="favwpn"/>
			<dependency name="fs"/>
			<dependency name="gSpectateID"/>
			<dependency name="groupName"/>
			<dependency name="hidden"/>
			<dependency name="hydra"/>
			<dependency name="invited"/>
			<dependency name="isNeonON"/>
			<dependency name="megajump"/>
			<dependency name="mytime"/>
			<dependency name="oranges"/>
			<dependency name="readpms"/>
			<dependency name="reporteda"/>
			<dependency name="rhino"/>
			<dependency name="rockets"/>
			<dependency name="sessiontime"/>
			<dependency name="strdel"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResolveYSIScriptfileDirs" syntax="ResolveYSIScriptfileDirs()">
			<stacksize value="66"/>
			<referrer name="OnJITCompile"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="E_YSI_DIR"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="YSI_gsBuggedFOpen"/>
			<dependency name="YSI_gsDefaultDirs"/>
			<dependency name="YSI_gsDefaultDirs"/>
			<dependency name="__debug"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<library>y_utils - files</library>  <remarks>  Check if all the YSI scriptfiles directories exist.  Checks for `.gitkeep`  in each folder, then each folder without `YSI/` prefix, then just nothing.  </remarks> 
		</member>
		<member name="M:ReturnName" syntax="ReturnName(playerid)">
			<stacksize value="29"/>
			<dependency name="GetPlayerName"/>
			<dependency name="ReturnName"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ReturnPlayerAngle" syntax="ReturnPlayerAngle(playerid)">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<referrer name="Drift"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ReturnPlayerArmour" syntax="ReturnPlayerArmour(playerid)">
			<stacksize value="5"/>
			<referrer name="OnPlayerSpawn"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="floatround"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ReturnPlayerHealth" syntax="ReturnPlayerHealth(playerid)">
			<stacksize value="5"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="floatround"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ReturnPlayerID" syntax="ReturnPlayerID(PlayerName[], value)">
			<stacksize value="7"/>
			<referrer name="cmd_duel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="NickName"/>
			<dependency name="NickName"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="PlayerName">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:ReturnPlayerName" syntax="ReturnPlayerName(playerid)">
			<stacksize value="29"/>
			<dependency name="GetPlayerName"/>
			<dependency name="ReturnPlayerName"/>
			<param name="playerid">
				Player whose name you want to get.
			</param>
			<library>y_utils - names</library>  <summary>  ReturnPlayerName  </summary>    <remarks>  Get a player's name.  </remarks> 
		</member>
		<member name="M:ReturnPlayerRPName" syntax="ReturnPlayerRPName(playerid)">
			<stacksize value="30"/>
			<dependency name="GetPlayerRPName"/>
			<dependency name="ReturnPlayerRPName"/>
			<param name="playerid">
				Player whose name you want to get.
			</param>
			<library>y_utils - names</library>  <summary>  ReturnPlayerRPName  </summary>    <remarks>  Get a player's name, with <c>_</c> replaced by <c> </c>.  </remarks> 
		</member>
		<member name="M:ReturnStringArg" syntax="ReturnStringArg(idx)">
			<stacksize value="145"/>
			<dependency name="ReturnStringArg"/>
			<dependency name="__3_cells"/>
			<dependency name="__4_cells"/>
			<dependency name="__param0_offset"/>
			<dependency name="__param1_offset"/>
			<dependency name="cellbytes"/>
			<dependency name="strcat"/>
			<param name="idx">
				Index of the string in the parameters.
			</param>
			<library>y_utils - varargs</library>    <returns>  string  </returns>  <remarks>  Is passed the result of getarg, which will be the address of a string (in  theory) and uses that for DMA to get the string.  </remarks> 
		</member>
		<member name="M:ReturnTeleportID" syntax="ReturnTeleportID()">
			<stacksize value="5"/>
			<referrer name="CreateNewTeleport"/>
			<dependency name="TeleportSystem"/>
			<dependency name="TeleportSystem"/>
			<dependency name="strlen"/>
			<dependency name="tName"/>
		</member>
		<member name="M:ReturnTime" syntax="ReturnTime(tiks)">
			<stacksize value="39"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="TT_Announcement"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="ReturnTime"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<param name="tiks">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Reward_Send" syntax="Reward_Send(playerid, mode, type)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="EasterEggPickup"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GiveToken"/>
			<param name="playerid">
			</param>
			<param name="mode">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:RmInvis" syntax="RmInvis(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Iterator@Player"/>
			<dependency name="SetPlayerMarkerForPlayer"/>
			<dependency name="cellmax"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RotatePointVehicleRotation" syntax="RotatePointVehicleRotation(vehid, Invector[], &amp;resx, &amp;resy, &amp;resz, worldspace)">
			<stacksize value="42"/>
			<referrer name="_B@Action"/>
			<dependency name="operator-(_:,Float:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="GetVehicleRotationQuat"/>
			<dependency name="MatrixTransformVector"/>
			<param name="vehid">
			</param>
			<param name="Invector">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="resx">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="resy">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="resz">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="worldspace">
			</param>
		</member>
		<member name="M:SRGBToCIE" syntax="SRGBToCIE(colour, &amp;x, &amp;y, &amp;z)">
			<stacksize value="10"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="GetNearestColourSRGB"/>
			<referrer name="GetNearestColourSRGBCached"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator/(_:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="floatpower"/>
			<param name="colour">
				The sRGB colour to convert.
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				The x return value.
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				The y return value.
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				The z return value.
			</param>
			<library>y_utils - colour</library>  <summary>  SRGBToCIE(colour, &amp;Float:x, &amp;Float:y, &amp;Float:z);  </summary>          <remarks>  Converts a colour from sRGB colour space to CIE XYZ colour space.  See:  https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation_(sRGB_to_CIE_XYZ)  </remarks> 
		</member>
		<member name="M:SSCANF_GetClosestString" syntax="SSCANF_GetClosestString(input[], candidates[][], threshold, count)">
			<stacksize value="6"/>
			<referrer name="SSCANF_GetClosestValue"/>
			<dependency name="SSCANF_Levenshtein"/>
			<dependency name="cellmin"/>
			<param name="input">
				<paraminfo> [] </paraminfo>
				The first string to compare.
			</param>
			<param name="candidates">
				<paraminfo> [][] </paraminfo>
				A list of other strings to compare against.
			</param>
			<param name="threshold">
				How similar the strings must be to be considered a match.
			</param>
			<param name="count">
				The number of candidates.
			</param>
			<library>sscanf</library>          <remarks>  Takes an input string and an array of string possibilities (candidates) and  returns the index of the string closest to the input string.  If no valid  match is found, <c>-1</c> is returned.  Note that this will always return the  closest, even if the closest is not that close; which is why an optional  <c>threshold</c> parameter is available.  When this parameter is provided the  closest match must be closer in Levenshtein distance than the threshold,  otherwise again <c>-1</c> is returned.  </remarks> 
		</member>
		<member name="M:SSCANF_GetClosestValue" syntax="SSCANF_GetClosestValue(input[], candidates[][], results[], fail, threshold, count, check)">
			<stacksize value="8"/>
			<dependency name="SSCANF_GetClosestString"/>
			<dependency name="cellmin"/>
			<param name="input">
				<paraminfo> [] </paraminfo>
				The first string to compare.
			</param>
			<param name="candidates">
				<paraminfo> [][] </paraminfo>
				A list of other strings to compare against.
			</param>
			<param name="results">
				<paraminfo> [] </paraminfo>
				The values to return when the corresponding candidate (by index) is the closest  match.
			</param>
			<param name="fail">
				The value to return when there is no good match.
			</param>
			<param name="threshold">
				How similar the strings must be to be considered a match.
			</param>
			<param name="count">
				The number of candidates (must match <c>check</c>).
			</param>
			<param name="check">
				The number of results (must match <c>count</c>).
			</param>
			<library>sscanf</library>                <remarks>  Similar to <c>SSCANF_GetClosestString</c> in that it searches the  <c>candidates</c> array for the string most closely matching the <c>input</c>  and bounded by <c>threshold</c>.  But instead of returning the index this  function returns the value in the second <c>results</c> array at that index;  and instead of returning <c>-1</c> on failure it returns the value of  <c>fail</c>.  The two arrays must match in size and an <c>assert</c> in the  function checks for this.  </remarks> 
		</member>
		<member name="M:SSCANF_GetSimilarString" syntax="SSCANF_GetSimilarString(input[], candidates[][], threshold, count)">
			<stacksize value="6"/>
			<referrer name="SSCANF_GetSimilarValue"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="SSCANF_TextSimilarity"/>
			<dependency name="cellmin"/>
			<param name="input">
				<paraminfo> [] </paraminfo>
				The first string to compare.
			</param>
			<param name="candidates">
				<paraminfo> [][] </paraminfo>
				A list of other strings to compare against.
			</param>
			<param name="threshold">
				<paraminfo>Float </paraminfo>
				How similar the strings must be to be considered a match.
			</param>
			<param name="count">
				The number of candidates.
			</param>
			<library>sscanf</library>          <remarks>  Takes an input string and an array of string possibilities (candidates) and  returns the index of the string closest to the input string.  If no valid  match is found, <c>-1</c> is returned.  Note that this will always return the  closest, even if the closest is not that close; which is why an optional  <c>threshold</c> parameter is available.  When this parameter is provided the  closest match must be closer in Levenshtein distance than the threshold,  otherwise again <c>-1</c> is returned.  </remarks> 
		</member>
		<member name="M:SSCANF_GetSimilarValue" syntax="SSCANF_GetSimilarValue(input[], candidates[][], results[], fail, threshold, count, check)">
			<stacksize value="8"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<dependency name="SSCANF_GetSimilarString"/>
			<dependency name="cellmin"/>
			<param name="input">
				<paraminfo> [] </paraminfo>
				The first string to compare.
			</param>
			<param name="candidates">
				<paraminfo> [][] </paraminfo>
				A list of other strings to compare against.
			</param>
			<param name="results">
				<paraminfo> [] </paraminfo>
				The values to return when the corresponding candidate (by index) is the closest  match.
			</param>
			<param name="fail">
				The value to return when there is no good match.
			</param>
			<param name="threshold">
				<paraminfo>Float </paraminfo>
				How similar the strings must be to be considered a match.
			</param>
			<param name="count">
				The number of candidates (must match <c>check</c>).
			</param>
			<param name="check">
				The number of results (must match <c>count</c>).
			</param>
			<library>sscanf</library>                <remarks>  Similar to <c>SSCANF_GetClosestString</c> in that it searches the  <c>candidates</c> array for the string most closely matching the <c>input</c>  and bounded by <c>threshold</c>.  But instead of returning the index this  function returns the value in the second <c>results</c> array at that index;  and instead of returning <c>-1</c> on failure it returns the value of  <c>fail</c>.  The two arrays must match in size and an <c>assert</c> in the  function checks for this.  </remarks> 
		</member>
		<member name="M:SSCANF_Init" syntax="SSCANF_Init(players, invalid, len)">
			<attribute name="native"/>
			<referrer name="SSCANF_RunInit"/>
			<param name="players">
				The maximum players on the server.
			</param>
			<param name="invalid">
				The invalid player ID.
			</param>
			<param name="len">
				<c>MAX_PLAYER_NAME</c>.
			</param>
			<library>sscanf</library>        <remarks>  Initialise the plugin with real server information.  </remarks> 
		</member>
		<member name="M:SSCANF_IsConnected" syntax="SSCANF_IsConnected(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_RunInit"/>
			<param name="playerid">
				The ID of the player.
			</param>
			<library>sscanf</library>    <remarks>  Checks if the plugin knows about a given player ID.  Used when modes restart  to re-add players.  </remarks> 
		</member>
		<member name="M:SSCANF_Join" syntax="SSCANF_Join(playerid, name[], npc)">
			<attribute name="native"/>
			<referrer name="SSCANF_RunInit"/>
			<referrer name="Iter_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player.
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name of the player.
			</param>
			<param name="npc">
				<paraminfo>bool </paraminfo>
				Is this player an NPC?
			</param>
			<library>sscanf</library>        <remarks>  Called when a player joins to inform the plugin of the connection.  </remarks> 
		</member>
		<member name="M:SSCANF_Leave" syntax="SSCANF_Leave(playerid)">
			<attribute name="native"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<param name="playerid">
				The ID of the player.
			</param>
			<library>sscanf</library>    <remarks>  Called when a player leaves to inform the plugin of the disconnection.  </remarks> 
		</member>
		<member name="M:SSCANF_Levenshtein" syntax="SSCANF_Levenshtein(string1[], string2[])">
			<attribute name="native"/>
			<referrer name="SSCANF_GetClosestString"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
				The first string to compare.
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
				The second string to compare.
			</param>
			<library>sscanf</library>      <remarks>  Computes the <a href="https://en.wikipedia.org/wiki/Levenshtein_distance">  Levenshtein Distance</a> between two strings.  This is simlar to  <c>strcmp</c> in usage, but is slightly more "fuzzy".  Distances are used to  work out which string is the most similar to another one, though they may not  be identical.  Useful in <c>k</c> callback functions to determine if the  entered string is close to a possible string.  </remarks> 
		</member>
		<member name="M:SSCANF_OnCachedInit" syntax="SSCANF_OnCachedInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnCachedInit"/>
		</member>
		<member name="M:SSCANF_OnFilterScriptInit" syntax="SSCANF_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnScriptInit@C"/>
		</member>
		<member name="M:SSCANF_OnGameModeInit" syntax="SSCANF_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<automaton name="_ALS"/>
			<referrer name="OnScriptInit@E"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="funcidx"/>
			<dependency name="zcmd_g_HasOPCE"/>
			<dependency name="zcmd_g_HasOPCS"/>
		</member>
		<member name="M:SSCANF_OnPlayerConnect" syntax="SSCANF_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<automaton name="_ALS"/>
			<referrer name="Iter_OnPlayerConnect"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="gBackgroundTextDrawId"/>
			<dependency name="gCancelButtonTextDrawId"/>
			<dependency name="gCurrentPageTextDrawId"/>
			<dependency name="gHeaderTextDrawId"/>
			<dependency name="gItemAt"/>
			<dependency name="gNextButtonTextDrawId"/>
			<dependency name="gPrevButtonTextDrawId"/>
			<dependency name="gSelectionItems"/>
			<dependency name="gSelectionItems"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnPlayerDisconnect" syntax="SSCANF_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="71"/>
			<automaton name="_ALS"/>
			<referrer name="Iter_OnPlayerDisconnect"/>
			<dependency name="AC_ArmourAlerts"/>
			<dependency name="AC_HealthAlerts"/>
			<dependency name="AC_JackAlerts"/>
			<dependency name="AC_MoneyAlerts"/>
			<dependency name="ActiveCTF"/>
			<dependency name="AdminLvl"/>
			<dependency name="AllowedVehicle"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="AnnText"/>
			<dependency name="Banned"/>
			<dependency name="BuildInitial"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="CTFToken"/>
			<dependency name="CanTP"/>
			<dependency name="CanTP"/>
			<dependency name="Color"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="DeathCount"/>
			<dependency name="Deaths"/>
			<dependency name="DeleteTextTT"/>
			<dependency name="DeliveryCP"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DestroyDynamicCP"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="DestroyObject"/>
			<dependency name="DestroyPlayerObject"/>
			<dependency name="DestroyTextDraws"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftID"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="DuelArenaCreated"/>
			<dependency name="DuelDisable"/>
			<dependency name="DuelIgnored"/>
			<dependency name="DuelIgnored"/>
			<dependency name="DuelInvitation"/>
			<dependency name="DuelSpectating"/>
			<dependency name="DuelStarting"/>
			<dependency name="DuelWaiting"/>
			<dependency name="DuelWeapon"/>
			<dependency name="DuelWeapon"/>
			<dependency name="Duel_End"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="FPS_bool"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetAdminCount"/>
			<dependency name="God"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsDueling"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsVIP"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="IsValidDynamicCP"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KSpree"/>
			<dependency name="KillTimer"/>
			<dependency name="LastCar"/>
			<dependency name="LastDeathTime"/>
			<dependency name="Logged"/>
			<dependency name="MJ_Value"/>
			<dependency name="MJ_Value"/>
			<dependency name="Minigame"/>
			<dependency name="Money"/>
			<dependency name="Muted"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="MyEggs"/>
			<dependency name="MyEggs"/>
			<dependency name="MyLabel"/>
			<dependency name="MyLastTT"/>
			<dependency name="MyRank"/>
			<dependency name="PMG_Pickups"/>
			<dependency name="PMG_Pickups"/>
			<dependency name="PMs"/>
			<dependency name="PlayTime"/>
			<dependency name="PlayerDriftCancellation"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RXDM"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="RaceRotation"/>
			<dependency name="RacesJoined"/>
			<dependency name="RacesWon"/>
			<dependency name="ReconnectIP"/>
			<dependency name="ReconnectIP"/>
			<dependency name="Reconnecting"/>
			<dependency name="Registered"/>
			<dependency name="RemoveNeon"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="Reports"/>
			<dependency name="ReportsTD"/>
			<dependency name="SVLoaded"/>
			<dependency name="SVPlayers"/>
			<dependency name="SVStarted"/>
			<dependency name="Save"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendDeathMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SendRconCommand"/>
			<dependency name="Server"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="Skin"/>
			<dependency name="Spam"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="Spawned"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="TDDrift"/>
			<dependency name="TDMJoined"/>
			<dependency name="TDrif"/>
			<dependency name="TDriftPointsNow"/>
			<dependency name="TT_ID"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TimeLeft"/>
			<dependency name="TimerA"/>
			<dependency name="TimerC"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="Token"/>
			<dependency name="TokenUltimate"/>
			<dependency name="TokenUsing"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="UltimateTimer"/>
			<dependency name="VIP"/>
			<dependency name="allowmg"/>
			<dependency name="autofix"/>
			<dependency name="building"/>
			<dependency name="cellmax"/>
			<dependency name="dueling"/>
			<dependency name="eDriftTimer"/>
			<dependency name="eXist"/>
			<dependency name="fFPS"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gPlayerSpawned"/>
			<dependency name="gSpectateID"/>
			<dependency name="gSpectateType"/>
			<dependency name="isNeonON"/>
			<dependency name="ptp_president"/>
			<dependency name="racelabel"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<dependency name="vFPS"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:SSCANF_OnScriptInit" syntax="SSCANF_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnScriptInit"/>
		</member>
		<member name="M:SSCANF_Option" syntax="SSCANF_Option(name[], value)">
			<stacksize value="1"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The sscanf option to get or set.  For example <c>SSCANF_ARGB</c>.
			</param>
			<param name="value">
				<paraminfo> {_,Float} </paraminfo>
				The optional value to use when setting the option.
			</param>
			<library>sscanf</library>      <remarks>  Backwards-compatibility with <c>SSCANF_Option</c>.  Usage:  <code>  SSCANF_Option(SSCANF_QUIET, 1);           <br />  new quiet = SSCANF_Option(SSCANF_QUIET);  </code>  This doesn't actually use a default parameter because a user may want to set  the option to whatever that parameter is.  Instead this is a macro that calls  <c>SSCANF_GetOption__</c> when called with one parameter (just a name), or  instead calls <c>SSCANF_SetOption__</c> when called with two - a name and a  value.  </remarks> 
		</member>
		<member name="M:SSCANF_RunInit" syntax="SSCANF_RunInit()">
			<stacksize value="31"/>
			<referrer name="OnScriptInit"/>
			<referrer name="OnScriptInit@C"/>
			<referrer name="OnScriptInit@E"/>
			<referrer name="OnCachedInit"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_IsConnected"/>
			<dependency name="SSCANF_Join"/>
			<dependency name="SSCANF_gInit"/>
			<library>sscanf</library> <remarks> Generic initialisation code called from a range of different init publics. </remarks> <!-- <p/> <p/> There's a bug in the old compiler with the pawndoc generation for functions containing <c>state</c>.  This little trick starts an XML comment at the end of the documentation <c>SSCANF_RunInit</c> and immediately closes it again in a dedicated function <c>SSCANF_RunInit0</c>, which is sorted next lexicographically. --> <transition target="_ALS_go"/>

		</member>
		<member name="M:SSCANF_TextSimilarity" syntax="SSCANF_TextSimilarity(string1[], string2[])">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="SSCANF_GetSimilarString"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
				The first string to compare.
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
				The second string to compare.
			</param>
			<library>sscanf</library>      <remarks>  This works out the similarity between two strings.  The Levenshtein distance  often produces results that seem weird to people, for example by that measure  <c>NRG</c> is closer to <c>TUG</c> than <c>NRG-500</c>.  Instead this  function compares all pairs of letters between the two strings to work out  what percentage of each string is in the other string, then multiplies the  results to get the final similarity.  This algorithm produces much more human  sane results, and can handle things like <c>ls police<c> matching  <c>Police Car (LSPD)</c>.  It ignores all punctuation and case as well.  </remarks> 
		</member>
		<member name="M:SSCANF_Version" syntax="SSCANF_Version(version[], size)">
			<stacksize value="1"/>
			<dependency name="SSCANF_VERSION_BCD"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
				Pass-by-reference return value.
			</param>
			<param name="size">
				The size of the destination array.
			</param>
			<library>sscanf</library>      <remarks>  Get the SSCANF plugin version as a string (e.g. <c>"2.11.2"</c>) <em>or</em>  a BCD-encoded value (e.g. <c>0x021102</c>).  This function returns a string  (by reference) when called with parameters, or a number (directly) when not.  </remarks> 
		</member>
		<member name="M:SSCANF__" syntax="SSCANF__(file[], line, data[], format[], ...)">
			<attribute name="native"/>
			<referrer name="cmd_version"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="cmd_getdist"/>
			<referrer name="cmd_rmbuilding"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_spinvehicle"/>
			<referrer name="cmd_spinvehiclex"/>
			<referrer name="cmd_spinvehicley"/>
			<referrer name="cmd_spinvehiclez"/>
			<referrer name="cmd_mjh"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="cmd_mjv"/>
			<referrer name="LoadKeys"/>
			<referrer name="DCMD_stats"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_rho"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_lho"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_cbone"/>
			<referrer name="cmd_eho"/>
			<referrer name="cmd_dho"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_ttp"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_sendoranges"/>
			<referrer name="cmd_sendapples"/>
			<referrer name="cmd_sendtokens"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_getid"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_deposit"/>
			<referrer name="cmd_withdraw"/>
			<referrer name="cmd_setmyradio"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_cc"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_eject"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_pj"/>
			<referrer name="cmd_dactor"/>
			<referrer name="cmd_actorkill"/>
			<referrer name="cmd_actorstrip"/>
			<referrer name="cmd_addactor"/>
			<referrer name="cmd_skin"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ask"/>
			<referrer name="cmd_answer"/>
			<referrer name="cmd_frr"/>
			<referrer name="cmd_dpt"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_cam"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_adddrift"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_expo"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_eo"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_gom"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_aotv"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_do"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_playaudioplayer"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_spooflost"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_myweather"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_fakekill"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_fakeban"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_mytime"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_takevip"/>
			<referrer name="cmd_takepro"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_setep"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<referrer name="cmd_bankrupt"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="cmd_setplayeroranges"/>
			<referrer name="cmd_setplayerapples"/>
			<referrer name="cmd_setplayerraceswon"/>
			<referrer name="cmd_setplayerplaytime"/>
			<referrer name="cmd_setplayerracesjoined"/>
			<referrer name="cmd_setplayerkills"/>
			<referrer name="cmd_setplayerworld"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_asay"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givejp"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_gotocoords"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_mytoken"/>
			<referrer name="cmd_settoken"/>
			<referrer name="cmd_buytokens"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_loadrace"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="cmd_rweather"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_cpsize"/>
			<referrer name="cmd_saverace"/>
			<referrer name="cmd_deleterace"/>
			<referrer name="cmd_undeleterace"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="ConvertProperties"/>
			<param name="file">
				<paraminfo> [] </paraminfo>
				The file in which this call is found.
			</param>
			<param name="line">
				The line at which this call is found.
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
				The input string containing the data to parse out.
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The format description of what the input data should contain.
			</param>
			<param name="...">
				<paraminfo> {T_WEAPON,Float,_} </paraminfo>
			</param>
			<library>sscanf</library>          <remarks>  The current true implementation of <c>sscanf</c> in the plugin.  This is  wrapped by macros to provide <c>sscanf</c> enhanced with filenames and line  numbers so that errors have more information.  The plugin also contains a  native function called <c>sscanf</c> which is only for backwards-  compatibility with older versions of this include.  </remarks> 
		</member>
		<member name="M:Save" syntax="Save(playerid)">
			<stacksize value="98"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_savestats"/>
			<referrer name="cmd_saveallstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_setlevel"/>
			<dependency name="AdminChat"/>
			<dependency name="AdminLvl"/>
			<dependency name="AdminMsgs"/>
			<dependency name="AutoGM"/>
			<dependency name="Color"/>
			<dependency name="Deaths"/>
			<dependency name="DeliveryTotal"/>
			<dependency name="Expierience"/>
			<dependency name="GPCI"/>
			<dependency name="GetPVarString"/>
			<dependency name="IPLookups"/>
			<dependency name="IntBool"/>
			<dependency name="Logged"/>
			<dependency name="Money"/>
			<dependency name="MyCar"/>
			<dependency name="PlayTime"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RacesJoined"/>
			<dependency name="RacesWon"/>
			<dependency name="Rank"/>
			<dependency name="SQL"/>
			<dependency name="SaveKeys"/>
			<dependency name="Skin"/>
			<dependency name="Token"/>
			<dependency name="VIP"/>
			<dependency name="apples"/>
			<dependency name="banked"/>
			<dependency name="explosions"/>
			<dependency name="favwpn"/>
			<dependency name="formatex"/>
			<dependency name="fs"/>
			<dependency name="groupName"/>
			<dependency name="mysql_query"/>
			<dependency name="oranges"/>
			<dependency name="readpms"/>
			<dependency name="readteles"/>
			<dependency name="score"/>
			<dependency name="true"/>
			<dependency name="xmas"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SaveKeys" syntax="SaveKeys(playerid)">
			<stacksize value="16"/>
			<referrer name="Save"/>
			<dependency name="B@Status"/>
			<dependency name="B@Status"/>
			<dependency name="GetUserID"/>
			<dependency name="SQL"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SaveProperties" syntax="SaveProperties()">
			<stacksize value="16"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_sellallprops"/>
			<dependency name="CountProperties"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropName"/>
			<dependency name="PropOwner"/>
			<dependency name="PropValue"/>
			<dependency name="PropX"/>
			<dependency name="PropY"/>
			<dependency name="PropZ"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="SQL"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="printfex"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:SaveRace" syntax="SaveRace(playerid)">
			<stacksize value="15"/>
			<referrer name="cmd_saverace"/>
			<dependency name="AmBuilding"/>
			<dependency name="BCPs"/>
			<dependency name="BCPs"/>
			<dependency name="BCPsize"/>
			<dependency name="BCPsize"/>
			<dependency name="BInterior"/>
			<dependency name="BName"/>
			<dependency name="BName"/>
			<dependency name="BTotalCPs"/>
			<dependency name="BVehicleID"/>
			<dependency name="ClearRace"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="bombrace"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="tmpw"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SaveSettings" syntax="SaveSettings()">
			<stacksize value="7"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<dependency name="SQL"/>
			<dependency name="Server"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="precord"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:ScriptInit_CallOnCodeInit" syntax="ScriptInit_CallOnCodeInit(jit, fs)">
			<tagname value="bool"/>
			<stacksize value="41"/>
			<referrer name="OnJITCompile"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="Debug_Enable"/>
			<dependency name="E_SCRIPTINIT_STATE_RELOAD"/>
			<dependency name="GetTickCount"/>
			<dependency name="R@"/>
			<dependency name="ScriptInit_CodeInitFuncs_"/>
			<dependency name="Server_DisableLongCall"/>
			<dependency name="Server_EnableLongCall"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_PrintIntroMessage"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="Server_RestartLongCall"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<dependency name="YSI_gscInitMsgD"/>
			<dependency name="__debug"/>
			<dependency name="format"/>
			<dependency name="true"/>
			<param name="jit">
				<paraminfo>bool </paraminfo>
				We are calling the callback from the JIT plugin.
			</param>
			<param name="fs">
				<paraminfo>bool </paraminfo>
				We are calling the callback in a filterscript.
			</param>
			<library>y_scriptinit</library>      <remarks>  This is seemingly a lot of code just to call a callback, but it does more  than that.  Really this is <c>OnScriptInit</c> for this file - it calls  other callbacks, dumps debug information, profiles the startup, and caches  compilation results.  These steps are all done regardless of which callback  gets triggered first, hence why the code is abstracted.  </remarks> 
		</member>
		<member name="M:ScriptInit_CodeInitFuncs_" syntax="ScriptInit_CodeInitFuncs_()">
			<stacksize value="9"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="__9_cells"/>
			<dependency name="__cip"/>
			<dependency name="__jit_jump"/>
			<library>y_scriptinit</library>  <remarks>  Calls all the <c>@init(init_code)</c> functions.  </remarks> 
		</member>
		<member name="M:ScriptInit_Dump" syntax="ScriptInit_Dump(filename[], message[])">
			<stacksize value="57"/>
			<dependency name="DisasmWrite"/>
			<dependency name="GetYSIScriptfilesDir"/>
			<dependency name="PrintAmxHeader"/>
			<dependency name="Server_DisableLongCall"/>
			<dependency name="Server_EnableLongCall"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_gsStartTime"/>
			<dependency name="YSI_gscDone"/>
			<dependency name="YSI_gscInitMsgC"/>
			<dependency name="YSI_gscInitMsgD"/>
			<dependency name="__debug"/>
			<dependency name="fautocleanup"/>
			<dependency name="format"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
				Name of the file to write the dump to.
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
				Message to show in the console.
			</param>
			<library>y_scriptinit</library>      <remarks>  Write a disassembled version of the current state of the script to a file.  This is by far the most powerful debugging technique I've ever had while  developing YSI.  It is generally called twice - once before  <c>OnCodeInit</c> is run, and once after.  That callback does all of the  assembly-level transformations used to implement many of the advanced YSI  features.  Thus the two resulting dump files can be used to examine and  compare the results of every code rewrite done, and see where things have  gone wrong.  Plus, if anyone has a complex bug I can ask for those two files  and get a very complete view of what their script is trying to do, without  needing any of their source.  </remarks> 
		</member>
		<member name="M:ScriptInit_GetStartTime" syntax="ScriptInit_GetStartTime()">
			<stacksize value="13"/>
			<referrer name="OnJITCompile"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="YSI_gsStartDMY"/>
			<dependency name="YSI_gsStartHMS"/>
			<dependency name="YSI_gsStartTime"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<library>y_scriptinit</library>  <remarks>  Store the earliest time of this script starting that we can.  </remarks> 
		</member>
		<member name="M:ScriptInit_MainInitFuncs_" syntax="ScriptInit_MainInitFuncs_()">
			<stacksize value="9"/>
			<referrer name="main"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="__9_cells"/>
			<dependency name="__cip"/>
			<dependency name="__jit_jump"/>
			<library>y_scriptinit</library>  <remarks>  Calls all the <c>@init(init_main)</c> functions.  </remarks> 
		</member>
		<member name="M:ScriptInit_OnCodeInit" syntax="ScriptInit_OnCodeInit()">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetGlobal"/>
			<dependency name="AMX_HEADER_AMX_VERSION"/>
			<dependency name="AMX_HEADER_CIP"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_DEFSIZE"/>
			<dependency name="AMX_HEADER_FILE_VERSION"/>
			<dependency name="AMX_HEADER_FLAGS"/>
			<dependency name="AMX_HEADER_HEA"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_MAGIC"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_SIZE"/>
			<dependency name="AMX_HEADER_STP"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_HeaderTableQuickSort"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_REAL_DATA"/>
			<dependency name="__dat"/>
			<dependency name="__defsize_cells"/>
		</member>
		<member name="M:ScriptInit_OnFilterScriptExit" syntax="ScriptInit_OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnFilterScriptExit"/>
		</member>
		<member name="M:ScriptInit_OnGameModeExit" syntax="ScriptInit_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<automaton name="_ALS"/>
			<referrer name="OnGameModeExit"/>
			<dependency name="Ammo"/>
			<dependency name="AnnText"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="DestroyObject"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="EasterPickup"/>
			<dependency name="FPS_bool"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Kick"/>
			<dependency name="Logged"/>
			<dependency name="Model"/>
			<dependency name="Ocuppied"/>
			<dependency name="Pickupid"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="Players"/>
			<dependency name="RXDM"/>
			<dependency name="RemoveNeon"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="Save"/>
			<dependency name="SaveProperties"/>
			<dependency name="SaveSettings"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="TextDrawDestroy"/>
			<dependency name="TextDrawHideForAll"/>
			<dependency name="WeaponData"/>
			<dependency name="WeaponsDropped"/>
			<dependency name="WeaponsDropped"/>
			<dependency name="eXist"/>
			<dependency name="fFPS"/>
			<dependency name="false"/>
			<dependency name="isNeonON"/>
			<dependency name="mysql_close"/>
			<dependency name="printfex"/>
			<dependency name="racenotify"/>
			<dependency name="true"/>
			<dependency name="vFPS"/>
		</member>
		<member name="M:ScriptInit_OnJITCompile" syntax="ScriptInit_OnJITCompile()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnJITCompile"/>
		</member>
		<member name="M:ScriptInit_OnPlayerConnect" syntax="ScriptInit_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<automaton name="_ALS"/>
			<referrer name="Android_OnPlayerConnect"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_OnPlayerConnect"/>
			<dependency name="Iter_Single@Bot"/>
			<dependency name="Iter_Single@Character"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iterator@Bot"/>
			<dependency name="Iterator@Character"/>
			<dependency name="Iterator@Player"/>
			<param name="playerid">
				Player who joined.
			</param>
			<library>y_iterate</library>    <remarks>  Adds a player to the loop data.  Now sorts the list too.  Note that I found  the most bizzare bug ever (I *think* it may be a compiler but, but it  requires further investigation), basically it seems that multiple variables  were being treated as the same variable (namely @YSII_EgotS and  @YSII_CgharacterS were the same and @YSII_EgotC and @YSII_CgharacterC were the  same).  Adding print statements which reference these variables seem to fix  the problem, and I've tried to make sure that the values will never actually  get printed.  </remarks> 
		</member>
		<member name="M:ScriptInit_OnPlayerDisconnect" syntax="ScriptInit_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<automaton name="_ALS"/>
			<referrer name="Android_OnPlayerDisconnect"/>
			<dependency name="operator*(_no_itertag:,_:)"/>
			<dependency name="FALSE"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_OnPlayerDisconnect"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Bot"/>
			<dependency name="Iter_Single@Character"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iter_Single@PlayersFromVehicles"/>
			<dependency name="Iter_Single@RconAdmin"/>
			<dependency name="Iterator@Bot"/>
			<dependency name="Iterator@Character"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Iterator@PlayersFromVehicles"/>
			<dependency name="Iterator@RconAdmin"/>
			<param name="playerid">
				Player who left.
			</param>
			<param name="reason">
			</param>
			<library>y_iterate</library>    <remarks>  Removes a player from the loop data.  No longer uses "hook" to ENSURE  that this is always last.  Previously I think that the order of  evaluation in y_hooks meant that this got called before the user  "OnPlayerDisconnect".  </remarks> 
		</member>
		<member name="M:ScriptInit_OnScriptExit" syntax="ScriptInit_OnScriptExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
		</member>
		<member name="M:ScriptInit_OnYSIExit" syntax="ScriptInit_OnYSIExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
		</member>
		<member name="M:ScriptInit_OnYSIInit" syntax="ScriptInit_OnYSIInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="_ALS"/>
			<dependency name="Server_LoadRconFix"/>
			<dependency name="YSI_GAMEMODE"/>
		</member>
		<member name="M:ScriptInit_PostExitFuncs_" syntax="ScriptInit_PostExitFuncs_()">
			<stacksize value="9"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="__9_cells"/>
			<dependency name="__cip"/>
			<dependency name="__jit_jump"/>
			<library>y_scriptinit</library>  <remarks>  Calls all the <c>@exit(exit_script)</c> functions.  </remarks> 
		</member>
		<member name="M:ScriptInit_PostInitFuncs_" syntax="ScriptInit_PostInitFuncs_()">
			<stacksize value="9"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="__9_cells"/>
			<dependency name="__cip"/>
			<dependency name="__jit_jump"/>
			<library>y_scriptinit</library>  <remarks>  Calls all the <c>@init(init_mode)</c> functions.  </remarks> 
		</member>
		<member name="M:ScriptInit_PreExitFuncs_" syntax="ScriptInit_PreExitFuncs_()">
			<stacksize value="9"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="__9_cells"/>
			<dependency name="__cip"/>
			<dependency name="__jit_jump"/>
			<library>y_scriptinit</library>  <remarks>  Calls all the <c>@exit(exit_mode)</c> functions.  </remarks> 
		</member>
		<member name="M:ScriptInit_PreInitFuncs_" syntax="ScriptInit_PreInitFuncs_()">
			<stacksize value="9"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="__9_cells"/>
			<dependency name="__cip"/>
			<dependency name="__jit_jump"/>
			<library>y_scriptinit</library>  <remarks>  Calls all the <c>@init(init_script)</c> functions.  </remarks> 
		</member>
		<member name="M:ScriptInit_PrintF__" syntax="ScriptInit_PrintF__(fmat[], arg)">
			<attribute name="native"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="arg">
			</param>
		</member>
		<member name="M:ScriptInit_PurgeTemporaries" syntax="ScriptInit_PurgeTemporaries()">
			<stacksize value="118"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="SetTimerAddr"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_TEMP_FILE_NAME"/>
			<dependency name="YSI_gsPurgeTimer"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fread"/>
			<dependency name="fremove"/>
			<dependency name="fseek"/>
			<dependency name="ftemporary_"/>
			<dependency name="fwrite"/>
			<dependency name="gettime"/>
			<dependency name="io_read"/>
			<dependency name="io_write"/>
			<dependency name="seek_start"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<library>y_scriptinit</library>  <remarks>  Delete temporary files that have reached their maximum age.  Related to  <c>ftemporary</c>, which only stores files for a limited period.  </remarks> 
		</member>
		<member name="M:Script_CacheLoaded" syntax="Script_CacheLoaded()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="E_SCRIPTINIT_STATE_RELOAD"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<library>y_scriptdata</library>  <returns>  <c>true</c> if this script was loaded from <c>YSI_CACHE</c>.  </returns> 
		</member>
		<member name="M:Script_CacheSaved" syntax="Script_CacheSaved()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_DUMPED"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<library>y_scriptdata</library>  <returns>  <c>true</c> if this script was written to <c>YSI_CACHE</c>.  </returns> 
		</member>
		<member name="M:Script_GetCompilerCodepage" syntax="Script_GetCompilerCodepage(version[], vlen)">
			<stacksize value="5"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="strcat"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
			<library>y_scriptdata</library>  <returns>  The codepage used to build this script, as a string.  </returns> 
		</member>
		<member name="M:Script_GetCompilerString" syntax="Script_GetCompilerString(version[], os[], vlen, olen)">
			<stacksize value="11"/>
			<referrer name="Server_GetCompilerString"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="YSI_gscWindows"/>
			<dependency name="__Pawn"/>
			<dependency name="__PawnBuild"/>
			<dependency name="format"/>
			<dependency name="strcat"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="os">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
			<param name="olen">
			</param>
			<library>y_scriptdata</library>  <returns>  The version of the compiler used to build this script, as a string.  </returns> 
		</member>
		<member name="M:Script_GetCompilerVersion" syntax="Script_GetCompilerVersion()">
			<stacksize value="1"/>
			<dependency name="__Pawn"/>
			<dependency name="__PawnBuild"/>
			<library>y_scriptdata</library>  <returns>  The version of the compiler used to build this script.  </returns> 
		</member>
		<member name="M:Script_GetIncludesString" syntax="Script_GetIncludesString(version[], vlen)">
			<stacksize value="7"/>
			<referrer name="Server_GetServerString"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="__SAMP_INCLUDES_VERSION"/>
			<dependency name="format"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
			<library>y_scriptdata</library>  <returns>  The includes used to build this script, as a string.  </returns> 
		</member>
		<member name="M:Script_GetIncludesVersion" syntax="Script_GetIncludesVersion()">
			<stacksize value="1"/>
			<referrer name="Server_GetServerVersion"/>
			<library>y_scriptdata</library>  <returns>  The includes used to build this script.  </returns>  <remarks>  Version examples:  <ul>  <li>0.3.DL R1       - 03D010</li>  <li>0.3.7 R3        - 037030</li>  <li>0.3.7 R2-2      - 037022</li>  <li>0.3.7 R1-2      - 037012</li>  <li>0.3.7           - 037000</li>  <li>0.3z R4         - 030740</li>  <li>0.3z R3         - 030730</li>  <li>0.3z R2-1       - 030721</li>  <li>0.3z R1-2       - 030712</li>  <li>0.3z            - 030700</li>  <li>0.3x R2 patch 1 - 030621</li>  <li>0.3x R2         - 030620</li>  <li>0.3x R1-2       - 030612</li>  <li>0.3x            - 030600</li>  <li>0.3e            - 030500</li>  <li>0.3d            - 030400</li>  <li>0.3c            - 030300</li>  <li>0.3b            - 030200</li>  <li>0.3a            - 030100</li>  <li>0.2X            - 02A000</li>  <li>0.2.2 R3        - 022300</li>  </ul>  Rough rules:  <p />  Uses (roughtly) BCD.  Special versions are denoted outside 0-9.  <p />  <code>  0.1.2c R4-5  | | ||  | |  0 1 23  4 5  =  0x012345  </code>  (assuming c is the third revision)  <p />  0.2X becomes 02A000 because it is basically 0.2.3, but not, while higher  than 0.2.2 so can't be 020400 (for example).  Also, its a capital letter,  so doesn't use the revision method.  <p />  P.S.  Making a consistent scheme for SA:MP versions is REALLY hard.  <p />  open.mp releases can use `A` as the first digit.  </remarks> 
		</member>
		<member name="M:Script_GetStartString" syntax="Script_GetStartString(output[], size)">
			<stacksize value="17"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="Server_GetStartDateTime"/>
			<dependency name="format"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<library>y_scriptdata</library>  <returns>  The time the script started, as a string.  </returns> 
		</member>
		<member name="M:Script_IsFilterscript" syntax="Script_IsFilterscript()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<library>y_scriptdata</library>  <returns>  <c>true</c> if this script is determined to be a filterscript at runtime.  </returns> 
		</member>
		<member name="M:Script_IsGameMode" syntax="Script_IsGameMode()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<library>y_scriptdata</library>  <returns>  <c>true</c> if this script is determined to be a gamemode at runtime.  </returns> 
		</member>
		<member name="M:Script_IsLinuxCompiler" syntax="Script_IsLinuxCompiler()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<library>y_scriptdata</library>  <returns>  <c>true</c> if this script was compiled with a Linux compiler.  </returns> 
		</member>
		<member name="M:Script_IsWindowsCompiler" syntax="Script_IsWindowsCompiler()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<library>y_scriptdata</library>  <returns>  <c>true</c> if this script was compiled with a Windows compiler.  </returns> 
		</member>
		<member name="M:Script_JITComplete" syntax="Script_JITComplete()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="Server_GetJITVersion"/>
			<dependency name="E_SCRIPTINIT_STATE_JITED"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<library>y_scriptdata</library>  <returns>  <c>true</c> if the JIT plugin has completed compilation.  </returns> 
		</member>
		<member name="M:SelectTextDraw" syntax="SelectTextDraw(playerid, hoverColour)">
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<param name="playerid">
				The ID of the player that should be able to select a textdraw
			</param>
			<param name="hoverColour">
				The colour of the textdraw when hovering over with mouse (<b>RGBA</b>)
			</param>
			<library>omp_textdraw</library>  <summary>Display the cursor and allow the player to select a textdraw.</summary>      <seealso name="CancelSelectTextDraw" />  <seealso name="TextDrawSetSelectable" />  <seealso name="PlayerTextDrawSetSelectable" />  <seealso name="OnPlayerClickTextDraw" />  <seealso name="OnPlayerClickPlayerTextDraw" />  <remarks><a href="#TextDrawSetSelectable">TextDrawSetSelectable</a> or  <a href="#PlayerTextDrawSetSelectable">PlayerTextDrawSetSelectable</a>  MUST be used first, to allow a textdraw to be selectable.</remarks>  <remarks>It is the TEXT which will be highlighted when hovered over, NOT the box (if one is shown).</remarks> 
		</member>
		<member name="M:SendClientMessage" syntax="SendClientMessage(playerid, colour, format[], ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_version"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="cmd_getdist"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_delivery"/>
			<referrer name="cmd_michelles"/>
			<referrer name="cmd_rmbuilding"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="VehExpire"/>
			<referrer name="cmd_maprecord"/>
			<referrer name="cmd_mysqlq"/>
			<referrer name="cmd_restore"/>
			<referrer name="cmd_search"/>
			<referrer name="cmd_np"/>
			<referrer name="cmd_nos"/>
			<referrer name="cmd_rafinha"/>
			<referrer name="cmd_skydive"/>
			<referrer name="cmd_ic"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_lcp"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_spinvehicle"/>
			<referrer name="cmd_spinvehiclex"/>
			<referrer name="cmd_spinvehicley"/>
			<referrer name="cmd_spinvehiclez"/>
			<referrer name="cmd_dfmj"/>
			<referrer name="cmd_megajump"/>
			<referrer name="cmd_enableallmegajump"/>
			<referrer name="cmd_disableallmegajump"/>
			<referrer name="cmd_mjh"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="cmd_mjv"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="Unjailplayer_Timer"/>
			<referrer name="UnmutePlayer_Timer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="Login"/>
			<referrer name="GotoPosition"/>
			<referrer name="OnDnsLookup"/>
			<referrer name="cmd_uptime"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="cmd_minigames"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_rho"/>
			<referrer name="cmd_raho"/>
			<referrer name="cmd_myho"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_lho"/>
			<referrer name="cmd_skateboard"/>
			<referrer name="cmd_shark"/>
			<referrer name="cmd_broom"/>
			<referrer name="cmd_ballhead"/>
			<referrer name="cmd_witchhat"/>
			<referrer name="cmd_pumpkin"/>
			<referrer name="cmd_xmashat"/>
			<referrer name="cmd_penis"/>
			<referrer name="cmd_helmet"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_cbone"/>
			<referrer name="cmd_eho"/>
			<referrer name="cmd_dho"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_ttp"/>
			<referrer name="cmd_myprops"/>
			<referrer name="cmd_prophelp"/>
			<referrer name="cmd_setpropbuyable"/>
			<referrer name="cmd_setpropunbuyable"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_sellmyprops"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_dropguns"/>
			<referrer name="cmd_xmasgift"/>
			<referrer name="cmd_easteregghint"/>
			<referrer name="cmd_myeastereggs"/>
			<referrer name="cmd_sendoranges"/>
			<referrer name="cmd_sendapples"/>
			<referrer name="cmd_sendtokens"/>
			<referrer name="cmd_selfiecam"/>
			<referrer name="cmd_ammo"/>
			<referrer name="cmd_ammo2"/>
			<referrer name="cmd_amanda"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_groupmanage"/>
			<referrer name="cmd_getid"/>
			<referrer name="cmd_playduel"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dm"/>
			<referrer name="Duel_EndWait"/>
			<referrer name="mSend1"/>
			<referrer name="mSend2"/>
			<referrer name="mSend3"/>
			<referrer name="mSend4"/>
			<referrer name="mSend5"/>
			<referrer name="cmd_afob"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_spinslots"/>
			<referrer name="cmd_deposit"/>
			<referrer name="cmd_balance"/>
			<referrer name="cmd_withdraw"/>
			<referrer name="cmd_cloak"/>
			<referrer name="cmd_uncloak"/>
			<referrer name="cmd_healme"/>
			<referrer name="cmd_altitude"/>
			<referrer name="cmd_mypos"/>
			<referrer name="cmd_whatsmyip"/>
			<referrer name="cmd_rneon"/>
			<referrer name="cmd_offroad"/>
			<referrer name="cmd_tune"/>
			<referrer name="cmd_setmyradio"/>
			<referrer name="cmd_myradio"/>
			<referrer name="cmd_topplayers"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_detonate"/>
			<referrer name="Detonate"/>
			<referrer name="cmd_cc"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_eject"/>
			<referrer name="cmd_alarm"/>
			<referrer name="cmd_boot"/>
			<referrer name="cmd_bonnet"/>
			<referrer name="cmd_engine"/>
			<referrer name="cmd_doors"/>
			<referrer name="cmd_lights"/>
			<referrer name="cmd_cuffme"/>
			<referrer name="cmd_para"/>
			<referrer name="cmd_knife"/>
			<referrer name="cmd_golfclub"/>
			<referrer name="cmd_brass"/>
			<referrer name="cmd_bat"/>
			<referrer name="cmd_nightstick"/>
			<referrer name="cmd_vibrator"/>
			<referrer name="cmd_vibrator2"/>
			<referrer name="cmd_dildo2"/>
			<referrer name="cmd_dildo"/>
			<referrer name="cmd_chainsaw"/>
			<referrer name="cmd_shovel"/>
			<referrer name="cmd_cane"/>
			<referrer name="cmd_flowers"/>
			<referrer name="cmd_camera"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_xroof"/>
			<referrer name="cmd_mega"/>
			<referrer name="cmd_virtualwheels"/>
			<referrer name="cmd_dollar"/>
			<referrer name="cmd_shadow"/>
			<referrer name="cmd_atomic"/>
			<referrer name="cmd_twist"/>
			<referrer name="cmd_cutter"/>
			<referrer name="cmd_rims"/>
			<referrer name="cmd_classic"/>
			<referrer name="cmd_switchwheels"/>
			<referrer name="cmd_import"/>
			<referrer name="cmd_trance"/>
			<referrer name="cmd_hy"/>
			<referrer name="cmd_pj1"/>
			<referrer name="cmd_tunemenu"/>
			<referrer name="cmd_pj2"/>
			<referrer name="cmd_pj3"/>
			<referrer name="cmd_pj"/>
			<referrer name="cmd_ssb"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_alpha"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_euros"/>
			<referrer name="cmd_limo"/>
			<referrer name="cmd_adromada"/>
			<referrer name="cmd_at400"/>
			<referrer name="cmd_beagle"/>
			<referrer name="cmd_dodo"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_maverick"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_cb"/>
			<referrer name="cmd_dactor"/>
			<referrer name="cmd_actorkill"/>
			<referrer name="cmd_actorstrip"/>
			<referrer name="cmd_addactor"/>
			<referrer name="cmd_vips"/>
			<referrer name="cmd_pros"/>
			<referrer name="cmd_skin"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_acceptpms"/>
			<referrer name="cmd_denypms"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_fix"/>
			<referrer name="cmd_nocolor"/>
			<referrer name="cmd_red"/>
			<referrer name="cmd_lime"/>
			<referrer name="cmd_blue"/>
			<referrer name="cmd_grey"/>
			<referrer name="cmd_white"/>
			<referrer name="cmd_green"/>
			<referrer name="cmd_yellow"/>
			<referrer name="cmd_darkyellow"/>
			<referrer name="cmd_brightyellow"/>
			<referrer name="cmd_brightblue"/>
			<referrer name="cmd_purple"/>
			<referrer name="cmd_aqua"/>
			<referrer name="cmd_orange"/>
			<referrer name="cmd_strongorange"/>
			<referrer name="cmd_lightblue"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_savestats"/>
			<referrer name="cmd_saveallstats"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_pier69"/>
			<referrer name="cmd_libertycity"/>
			<referrer name="cmd_cage"/>
			<referrer name="cmd_m1"/>
			<referrer name="cmd_m2"/>
			<referrer name="cmd_m3"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_runwayls"/>
			<referrer name="cmd_runwaylv"/>
			<referrer name="cmd_runwaysf"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_lsajump"/>
			<referrer name="cmd_lock"/>
			<referrer name="cmd_unlock"/>
			<referrer name="cmd_beach"/>
			<referrer name="cmd_tf"/>
			<referrer name="cmd_lowrider"/>
			<referrer name="cmd_waa"/>
			<referrer name="cmd_club"/>
			<referrer name="cmd_sws"/>
			<referrer name="cmd_twister"/>
			<referrer name="cmd_loopstunt"/>
			<referrer name="cmd_jump"/>
			<referrer name="cmd_quarry"/>
			<referrer name="cmd_parkour4"/>
			<referrer name="cmd_parkour5"/>
			<referrer name="cmd_parkour6"/>
			<referrer name="cmd_parkour7"/>
			<referrer name="cmd_parajump1"/>
			<referrer name="cmd_parajump2"/>
			<referrer name="cmd_parajump3"/>
			<referrer name="cmd_parajump4"/>
			<referrer name="cmd_parajump5"/>
			<referrer name="cmd_dmzone1"/>
			<referrer name="cmd_dmzone2"/>
			<referrer name="cmd_dmzone3"/>
			<referrer name="cmd_dmzone4"/>
			<referrer name="cmd_dmzone5"/>
			<referrer name="cmd_dmzone6"/>
			<referrer name="cmd_dmzone7"/>
			<referrer name="cmd_dmzone8"/>
			<referrer name="cmd_dmzone9"/>
			<referrer name="cmd_dmzone10"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ph"/>
			<referrer name="cmd_wb"/>
			<referrer name="cmd_dnrisland"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_sex"/>
			<referrer name="cmd_bayside"/>
			<referrer name="cmd_docks"/>
			<referrer name="cmd_methlab"/>
			<referrer name="cmd_snakefarm"/>
			<referrer name="cmd_motel"/>
			<referrer name="cmd_gasstation"/>
			<referrer name="cmd_jays"/>
			<referrer name="cmd_gantdiner"/>
			<referrer name="cmd_8track"/>
			<referrer name="cmd_lshospital"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_cityhall"/>
			<referrer name="cmd_area69"/>
			<referrer name="cmd_waterfall"/>
			<referrer name="cmd_grove"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_pirateship"/>
			<referrer name="cmd_underbase"/>
			<referrer name="cmd_rick"/>
			<referrer name="cmd_sfadrop"/>
			<referrer name="cmd_alexm"/>
			<referrer name="cmd_bikestunt"/>
			<referrer name="cmd_playaz"/>
			<referrer name="cmd_francy"/>
			<referrer name="cmd_mansion"/>
			<referrer name="cmd_cj101"/>
			<referrer name="cmd_venera"/>
			<referrer name="cmd_vida"/>
			<referrer name="cmd_deathangel"/>
			<referrer name="cmd_boeing747"/>
			<referrer name="cmd_meghan"/>
			<referrer name="cmd_saloun2"/>
			<referrer name="cmd_saloun3"/>
			<referrer name="cmd_braylon"/>
			<referrer name="cmd_gibbs"/>
			<referrer name="cmd_bikepark"/>
			<referrer name="cmd_hq"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_panzehir"/>
			<referrer name="cmd_assa"/>
			<referrer name="cmd_john"/>
			<referrer name="cmd_reham"/>
			<referrer name="cmd_woa"/>
			<referrer name="cmd_police"/>
			<referrer name="cmd_kjj"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_east"/>
			<referrer name="cmd_cvondz"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_datower"/>
			<referrer name="cmd_peckers"/>
			<referrer name="cmd_city"/>
			<referrer name="cmd_ft"/>
			<referrer name="cmd_city2"/>
			<referrer name="cmd_city3"/>
			<referrer name="cmd_city4"/>
			<referrer name="cmd_city5"/>
			<referrer name="cmd_nrgstunt2"/>
			<referrer name="cmd_driftcity"/>
			<referrer name="cmd_drift1"/>
			<referrer name="cmd_drift2"/>
			<referrer name="cmd_drift3"/>
			<referrer name="cmd_drift4"/>
			<referrer name="cmd_drift5"/>
			<referrer name="cmd_drift6"/>
			<referrer name="cmd_windy"/>
			<referrer name="cmd_probe"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_disco"/>
			<referrer name="cmd_factory"/>
			<referrer name="cmd_sumo1"/>
			<referrer name="cmd_vrock"/>
			<referrer name="cmd_vrock2"/>
			<referrer name="cmd_bedroom"/>
			<referrer name="cmd_janitor"/>
			<referrer name="cmd_woozie"/>
			<referrer name="cmd_restaurant"/>
			<referrer name="cmd_sweets"/>
			<referrer name="cmd_dam"/>
			<referrer name="cmd_donuts"/>
			<referrer name="cmd_railroad"/>
			<referrer name="cmd_rcbox"/>
			<referrer name="cmd_crackhouse"/>
			<referrer name="cmd_meathouse"/>
			<referrer name="cmd_prison"/>
			<referrer name="cmd_angelpine"/>
			<referrer name="cmd_graveyard"/>
			<referrer name="cmd_teepee"/>
			<referrer name="cmd_mcasino"/>
			<referrer name="cmd_clowns"/>
			<referrer name="cmd_price"/>
			<referrer name="cmd_boathouse"/>
			<referrer name="cmd_longjump"/>
			<referrer name="cmd_kingring"/>
			<referrer name="cmd_barn"/>
			<referrer name="cmd_lvpolice"/>
			<referrer name="cmd_mall"/>
			<referrer name="cmd_cludia"/>
			<referrer name="cmd_hoshi"/>
			<referrer name="cmd_school"/>
			<referrer name="cmd_beach2"/>
			<referrer name="cmd_reefy"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_launcher"/>
			<referrer name="cmd_teles"/>
			<referrer name="cmd_teles2"/>
			<referrer name="cmd_ask"/>
			<referrer name="cmd_answer"/>
			<referrer name="cmd_viphelp"/>
			<referrer name="cmd_proinfo"/>
			<referrer name="cmd_rules"/>
			<referrer name="cmd_frr"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_planes"/>
			<referrer name="cmd_boats"/>
			<referrer name="cmd_helis"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_pink"/>
			<referrer name="cmd_vipcolor"/>
			<referrer name="cmd_admincolor"/>
			<referrer name="cmd_brown"/>
			<referrer name="cmd_vipcmds"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_stunts"/>
			<referrer name="cmd_racehelp"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_dpt"/>
			<referrer name="cmd_night"/>
			<referrer name="cmd_day"/>
			<referrer name="cmd_fs"/>
			<referrer name="cmd_normalfs"/>
			<referrer name="cmd_kneehead"/>
			<referrer name="cmd_kungfu"/>
			<referrer name="cmd_boxing"/>
			<referrer name="cmd_grabkick"/>
			<referrer name="cmd_elbow"/>
			<referrer name="cmd_ks"/>
			<referrer name="cmd_evc"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_tram"/>
			<referrer name="cmd_kart"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_cam"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_af"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_smenu"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_event"/>
			<referrer name="cmd_event2"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_adddrift"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_me"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_myramp"/>
			<referrer name="cmd_dramp"/>
			<referrer name="cmd_expo"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_eo"/>
			<referrer name="OnPlayerEditDynamicObject"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_nso"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_gom"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_movehelp"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="cmd_textures"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_daso"/>
			<referrer name="cmd_aotv"/>
			<referrer name="cmd_goodies"/>
			<referrer name="cmd_dsom"/>
			<referrer name="cmd_gmlo"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_do"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_playaudio"/>
			<referrer name="cmd_stopaudioall"/>
			<referrer name="cmd_streamerstats"/>
			<referrer name="cmd_playaudioplayer"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_panztalk"/>
			<referrer name="cmd_amandatalk"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_spooflost"/>
			<referrer name="cmd_hideme"/>
			<referrer name="cmd_showme"/>
			<referrer name="cmd_moveproxies"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_dbers"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_myweather"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_togglefakekillsban"/>
			<referrer name="cmd_fakekill"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_fakeban"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_eavr"/>
			<referrer name="cmd_davr"/>
			<referrer name="cmd_togglevehiclerockets"/>
			<referrer name="cmd_changeevadeaction"/>
			<referrer name="cmd_toggleadminmessages"/>
			<referrer name="cmd_readpms"/>
			<referrer name="cmd_readteles"/>
			<referrer name="cmd_toggleiplookups"/>
			<referrer name="cmd_toggleautogodmode"/>
			<referrer name="cmd_mytime"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_leavetdm"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_changetdm"/>
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_serverstats"/>
			<referrer name="cmd_takevip"/>
			<referrer name="cmd_takepro"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_ts"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_countdown"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_totalcars"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_nuke2"/>
			<referrer name="cmd_nuke"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_setep"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<referrer name="cmd_bankrupt"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="cmd_setplayeroranges"/>
			<referrer name="cmd_setplayerapples"/>
			<referrer name="cmd_setplayerraceswon"/>
			<referrer name="cmd_setplayerplaytime"/>
			<referrer name="cmd_setplayerracesjoined"/>
			<referrer name="cmd_setplayerkills"/>
			<referrer name="cmd_setplayerworld"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_asay"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_hsrpg"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givejp"/>
			<referrer name="cmd_jp"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_ann"/>
			<referrer name="cmd_tann"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_ann2"/>
			<referrer name="cmd_ann3"/>
			<referrer name="cmd_ann4"/>
			<referrer name="cmd_gotocoords"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_token"/>
			<referrer name="cmd_mytoken"/>
			<referrer name="cmd_settoken"/>
			<referrer name="cmd_buytokens"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_loadrace"/>
			<referrer name="cmd_race"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_buildrace"/>
			<referrer name="cmd_raceguide"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="cmd_rweather"/>
			<referrer name="cmd_deathrace"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_cp"/>
			<referrer name="cmd_dcp"/>
			<referrer name="cmd_clearrace"/>
			<referrer name="cmd_cpsize"/>
			<referrer name="cmd_saverace"/>
			<referrer name="cmd_racerotation"/>
			<referrer name="cmd_racenos"/>
			<referrer name="cmd_deleterace"/>
			<referrer name="cmd_undeleterace"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_tt"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Announcement"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
			<referrer name="SaveRace"/>
			<referrer name="ClearRace"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="IsNotAdmin"/>
			<referrer name="SendMessageToAdmins_PM"/>
			<referrer name="SendMessageToMinigame"/>
			<referrer name="SendMessageToAdmins_Tele"/>
			<referrer name="SendMessageToAdmins"/>
			<referrer name="SendMessageToAdminsExPlayer"/>
			<referrer name="SendMessageToAdminsEx"/>
			<referrer name="SendMessageToAdminsEx_Lookup"/>
			<referrer name="SendTeleMessageToAdmins"/>
			<referrer name="Chat_SendMessageToAdmins"/>
			<referrer name="SendClientMessageToAllEx"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="Token_Weapons"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="nofun"/>
			<referrer name="cmd_rtpall"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="cmd_cmtp"/>
			<referrer name="cmd_tps"/>
			<referrer name="HO_Addons"/>
			<referrer name="HO_Addons2"/>
			<referrer name="HO_Addons3"/>
			<referrer name="cmd_viphideout"/>
			<referrer name="cmd_sftower"/>
			<referrer name="StuntTele"/>
			<param name="playerid">
				The ID of the player to display the message to
			</param>
			<param name="colour">
				The colour of the message (<b>RGBA</b>)
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The text that will be displayed <b>(max 144 characters).  Optionally formatted.</b>
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_player</library>  <summary>This function sends a message to a specific player with a chosen colour in the chat.  The  whole line in the chatbox will be in the set colour unless colour embedding is used (since <b><c>0.3c</c></b>).</summary>        <seealso name="SendClientMessageToAll" />  <seealso name="SendPlayerMessageToPlayer" />  <seealso name="SendPlayerMessageToAll" />  <remarks>If a message is longer than 144 characters, it will not be sent.  Truncation can be used  to prevent this.  Displaying a message on multiple lines will also solve this issue. </remarks>  <remarks>Avoid using the percent sign (or format specifiers) in the actual message text without properly  escaping it (like <b><c>%%</c></b>).  It will result in crashes otherwise. </remarks>  <remarks>You can use colour embedding for multiple colours in the message. </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is reported when the string is over  144 characters, but the message won't be sent.<br />  <b><c>0</c></b>: The function failed to execute.  The player is not connected.  </returns> 
		</member>
		<member name="M:SendClientMessageToAll" syntax="SendClientMessageToAll(colour, format[], ...)">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="RandomGame"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_maprecord"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_enableallmegajump"/>
			<referrer name="cmd_disableallmegajump"/>
			<referrer name="OnPlayerText"/>
			<referrer name="DerbyTimer"/>
			<referrer name="OnPlayerFloodControl"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dm"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_care"/>
			<referrer name="cmd_poop"/>
			<referrer name="cmd_cheese"/>
			<referrer name="cmd_omfg"/>
			<referrer name="cmd_scratch"/>
			<referrer name="cmd_fart"/>
			<referrer name="cmd_allbugged"/>
			<referrer name="cmd_cry"/>
			<referrer name="cmd_burp"/>
			<referrer name="cmd_wtf"/>
			<referrer name="cmd_noway"/>
			<referrer name="cmd_party"/>
			<referrer name="cmd_lol"/>
			<referrer name="cmd_ohyea"/>
			<referrer name="cmd_ohno"/>
			<referrer name="cmd_lovinit"/>
			<referrer name="cmd_cornholio"/>
			<referrer name="cmd_really"/>
			<referrer name="cmd_imghelp"/>
			<referrer name="cmd_website"/>
			<referrer name="cmd_facebook"/>
			<referrer name="cmd_avip"/>
			<referrer name="cmd_vipinfo"/>
			<referrer name="cmd_proinfo"/>
			<referrer name="cmd_donateinfo"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_me"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_playaudio"/>
			<referrer name="cmd_stopaudioall"/>
			<referrer name="cmd_playaudioplayer"/>
			<referrer name="cmd_panztalk"/>
			<referrer name="cmd_amandatalk"/>
			<referrer name="cmd_clearchat"/>
			<referrer name="cmd_cancelgiftbox"/>
			<referrer name="cmd_delgiftbox"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_fakeban"/>
			<referrer name="cmd_eavr"/>
			<referrer name="cmd_davr"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_fav"/>
			<referrer name="cmd_discord"/>
			<referrer name="cmd_fav2"/>
			<referrer name="cmd_irc"/>
			<referrer name="cmd_readrules"/>
			<referrer name="cmd_nospam"/>
			<referrer name="cmd_dontask"/>
			<referrer name="cmd_aregister"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_countdown"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_enablehydraall"/>
			<referrer name="cmd_disablehydraall"/>
			<referrer name="cmd_enablerhinoall"/>
			<referrer name="cmd_disablerhinoall"/>
			<referrer name="cmd_asay"/>
			<referrer name="cmd_healall"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="RaceCountDown"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="cmd_rtpall"/>
			<referrer name="EasterEggPickup"/>
			<referrer name="DriftSave"/>
			<param name="colour">
				The colour of the message (<b>RGBA</b>)
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The message to show (<b>max 144 characters</b>).  Optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_core</library>  <summary>Displays a message in chat to all players.  This is a multi-player equivalent of  <a href="#SendClientMessage">SendClientMessage</a>.</summary>      <seealso name="SendClientMessage" />  <seealso name="SendPlayerMessageToAll" />  <remarks>Avoid using format specifiers in your messages without formatting the string that is sent.  It will result in crashes otherwise.</remarks>  <returns>This function always returns <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:SendClientMessageToAllEx" syntax="SendClientMessageToAllEx(exeption, color, message[])">
			<stacksize value="6"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_sellmyprops"/>
			<dependency name="Iterator@Player"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<param name="exeption">
			</param>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendDeathMessage" syntax="SendDeathMessage(killer, killee, weapon)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_fakekill"/>
			<param name="killer">
				The ID of the killer (can be <b><c>INVALID_PLAYER_ID</c></b>)
			</param>
			<param name="killee">
				The ID of the player that died
			</param>
			<param name="weapon">
				The <a href="http://wiki.sa-mp.com/wiki/Weapons">reason</a> (not always a weapon)  for the victim's death.  Special icons can also be used (<b><c>ICON_CONNECT</c></b> and <b><c>ICON_DISCONNECT</c></b>)
			</param>
			<library>omp_core</library>  <summary>Adds a death to the 'killfeed' on the right-hand side of the screen for all players.</summary>        <seealso name="SendDeathMessageToPlayer" />  <seealso name="OnPlayerDeath" />  <remarks>Death messages can be cleared by using a valid player ID for <paramref name="killee" />  that is not connected.</remarks>  <remarks>To show a death message for just a single player, use <a href="#SendDeathMessageToPlayer">SendDeathMessageToPlayer</a>.  </remarks>  <remarks>You can use NPCs to create your own custom death reasons. </remarks>  <returns>This function always returns <b><c>1</c></b>, even if the function fails to execute.  The  function fails to execute (no death message shown) if <paramref name="killee" /> is invalid.  If  <paramref name="reason" /> is invalid, a generic skull-and-crossbones icon is shown. <paramref name="killer"  /> being invalid (<b><c>INVALID_PLAYER_ID</c></b>) is valid.</returns> 
		</member>
		<member name="M:SendInfoText" syntax="SendInfoText(playerid, time, text[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="EasterEggPickup"/>
			<referrer name="Easter_Egg_Update"/>
			<dependency name="AnnText"/>
			<dependency name="AnnTextShown"/>
			<dependency name="HideAnnTextTimer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="time">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendMessageToAdmins" syntax="SendMessageToAdmins(playerid, level, color, string[])">
			<stacksize value="6"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_camera"/>
			<referrer name="cmd_npcs"/>
			<referrer name="cmd_admins"/>
			<referrer name="cmd_acceptpms"/>
			<referrer name="cmd_denypms"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_af"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_hsrpg"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_jp"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_tann"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_buytokens"/>
			<dependency name="AdminLvl"/>
			<dependency name="AdminMsgs"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="level">
			</param>
			<param name="color">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendMessageToAdminsEx" syntax="SendMessageToAdminsEx(color, level, string[])">
			<stacksize value="6"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="cmd_mysqlq"/>
			<referrer name="cmd_restore"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="Unjailplayer_Timer"/>
			<referrer name="UnmutePlayer_Timer"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="Login"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ask"/>
			<referrer name="cmd_answer"/>
			<referrer name="cmd_frr"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_spooflost"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_dbers"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_togglevehiclerockets"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_setep"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ann"/>
			<referrer name="cmd_ann2"/>
			<referrer name="cmd_ann3"/>
			<referrer name="cmd_ann4"/>
			<referrer name="cmd_gotocoords"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_gethere"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<param name="color">
			</param>
			<param name="level">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendMessageToAdminsExPlayer" syntax="SendMessageToAdminsExPlayer(playerid, color, level, string[])">
			<stacksize value="6"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="level">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendMessageToAdminsEx_Lookup" syntax="SendMessageToAdminsEx_Lookup(color, level, string[])">
			<stacksize value="6"/>
			<referrer name="IPInfoDB_Connect"/>
			<dependency name="AdminLvl"/>
			<dependency name="IPLookups"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<dependency name="true"/>
			<param name="color">
			</param>
			<param name="level">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendMessageToAdmins_PM" syntax="SendMessageToAdmins_PM(playerid, level, color, string[])">
			<stacksize value="6"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_pm"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<dependency name="readpms"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="level">
			</param>
			<param name="color">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendMessageToAdmins_Tele" syntax="SendMessageToAdmins_Tele(playerid, level, color, string[])">
			<stacksize value="6"/>
			<referrer name="cmd_tp"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<dependency name="readteles"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="level">
			</param>
			<param name="color">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendMessageToMinigame" syntax="SendMessageToMinigame(color, mingame, String[])">
			<stacksize value="6"/>
			<referrer name="DerbyTimer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<param name="color">
			</param>
			<param name="mingame">
			</param>
			<param name="String">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendRconCommand" syntax="SendRconCommand(format[], ...)">
			<attribute name="native"/>
			<referrer name="Server_LoadRconFix"/>
			<referrer name="Server_UnloadRconFix"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_unbanlast"/>
			<referrer name="KillServer"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The RCON command to be executed.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_network</library>  <summary>Sends an RCON (Remote Console) command.</summary>    <seealso name="IsPlayerAdmin" />  <seealso name="OnRconCommand" />  <seealso name="OnRconLoginAttempt" />  <remarks>Does not support login, due to the lack of a 'playerid' parameter.</remarks>  <remarks>'password 0' will remove the server's password if one is set.</remarks>  <returns>This function always returns <b><c>1</c></b>.</returns>  <remarks>This function will result in <a href="#OnRconCommand">OnRconCommand</a> being called.</remarks> 
		</member>
		<member name="M:SendTeleMessageToAdmins" syntax="SendTeleMessageToAdmins(color, level, string[])">
			<stacksize value="6"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_beach"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_area69"/>
			<referrer name="cmd_grove"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_panzehir"/>
			<referrer name="cmd_police"/>
			<referrer name="cmd_kjj"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_city"/>
			<referrer name="cmd_city2"/>
			<referrer name="cmd_city3"/>
			<referrer name="cmd_city4"/>
			<referrer name="cmd_city5"/>
			<referrer name="cmd_disco"/>
			<referrer name="cmd_factory"/>
			<referrer name="cmd_sweets"/>
			<referrer name="cmd_icode"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cellmax"/>
			<dependency name="readteles"/>
			<dependency name="true"/>
			<param name="color">
			</param>
			<param name="level">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Server_Abort" syntax="Server_Abort(reason)">
			<stacksize value="1"/>
			<param name="reason">
				The halt type.
			</param>
			<library>y_serverdata</library>    <remarks>  Halt the server, or at least the current public, instantly.  </remarks> <p/> <library>y_serverdata</library>  <param name="reason">The halt type.</param>  <remarks>  Halt the server, or at least the current public, instantly.  </remarks> 
		</member>
		<member name="M:Server_CacheLoaded" syntax="Server_CacheLoaded()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="E_SCRIPTINIT_STATE_RELOAD"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if this script was loaded from <c>YSI_CACHE</c>.  </returns> 
		</member>
		<member name="M:Server_CacheSaved" syntax="Server_CacheSaved()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_DUMPED"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if this script was written to <c>YSI_CACHE</c>.  </returns> 
		</member>
		<member name="M:Server_CrashDetectExists" syntax="Server_CrashDetectExists()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="__crash_flag"/>
			<dependency name="false"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if crashdetect exists.  </returns> <p/> <library>y_serverdata</library>  <returns>  <c>true</c> if crashdetect exists.  </returns> 
		</member>
		<member name="M:Server_DisableDetectAddr0" syntax="Server_DisableDetectAddr0()">
			<stacksize value="1"/>
			<dependency name="__crash_flag"/>
			<library>y_serverdata</library>  <remarks>  Disable crashdetect's ability to detect possibly unintended writes to  address naught.  </remarks> <p/> <library>y_serverdata</library>  <remarks>  Disable crashdetect's ability to detect possibly unintended writes to  address naught.  </remarks> 
		</member>
		<member name="M:Server_DisableLongCall" syntax="Server_DisableLongCall()">
			<stacksize value="1"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="Server_HasLongCallControl"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<dependency name="__crash_flag"/>
			<library>y_serverdata</library>  <remarks>  Disable the detection of slow functions, if crashdetect exists.  </remarks> <p/> <library>y_serverdata</library>  <remarks>  Disable the detection of slow functions, if crashdetect exists.  </remarks> 
		</member>
		<member name="M:Server_EnableDetectAddr0" syntax="Server_EnableDetectAddr0()">
			<stacksize value="1"/>
			<dependency name="__crash_flag"/>
			<library>y_serverdata</library>  <remarks>  Enable crashdetect's ability to detect possibly unintended writes to address  naught.  </remarks> <p/> <library>y_serverdata</library>  <remarks>  Enable crashdetect's ability to detect possibly unintended writes to address  naught.  </remarks> 
		</member>
		<member name="M:Server_EnableLongCall" syntax="Server_EnableLongCall()">
			<stacksize value="1"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="Server_HasLongCallControl"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<dependency name="__crash_flag"/>
			<library>y_serverdata</library>  <remarks>  Enable the detection of slow functions, if crashdetect exists.  </remarks> <p/> <library>y_serverdata</library>  <remarks>  Enable the detection of slow functions, if crashdetect exists.  </remarks> 
		</member>
		<member name="M:Server_FinishIntroMessage" syntax="Server_FinishIntroMessage()">
			<stacksize value="3"/>
			<referrer name="OnJITCompile"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="YVers_Callback"/>
			<dependency name="YSI_Print__"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_gsFirstHeader"/>
			<dependency name="true"/>
			<library>y_scriptinit</library>  <remarks>  This is called after all the intro messages have been completed to add  padding.  </remarks> 
		</member>
		<member name="M:Server_FinishIntroPart" syntax="Server_FinishIntroPart()">
			<stacksize value="3"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="YVers_Callback"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<dependency name="YSI_Print__"/>
			<dependency name="YSI_gsNewPart"/>
			<dependency name="YSI_gscHeader"/>
			<dependency name="YSI_gscSpacer"/>
			<dependency name="true"/>
			<library>y_scriptinit</library>  <remarks>  If a box was previously partially written in to with  <c>Server_PrintIntroPart</c> this closes the box off at the bottom.  It  basically just prints a line in the console.  </remarks> 
		</member>
		<member name="M:Server_GetCompilerString" syntax="Server_GetCompilerString(version[], os[], vlen, olen)">
			<stacksize value="7"/>
			<dependency name="Script_GetCompilerString"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="os">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
			<param name="olen">
			</param>
			<library>y_serverdata</library>  <returns>  The version of the compiler used to build this script, as a string.  </returns>  <remarks>  The compiler version used isn't a feature of the server currently executing  this code, hence this function is deprecated.  </remarks> 
		</member>
		<member name="M:Server_GetCompilerVersion" syntax="Server_GetCompilerVersion()">
			<stacksize value="1"/>
			<dependency name="__Pawn"/>
			<dependency name="__PawnBuild"/>
			<library>y_serverdata</library>  <returns>  The version of the compiler used to build this script.    </returns>  <remarks>  The compiler version used isn't a feature of the server currently executing  this code, hence this function is deprecated.  </remarks> 
		</member>
		<member name="M:Server_GetJITString" syntax="Server_GetJITString(version[], vlen)">
			<stacksize value="5"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="Server_GetJITVersion"/>
			<dependency name="strcat"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
			<library>y_serverdata</library>  <returns>  The version of the JIT plugin loaded, if any, as a string.  </returns>  <remarks>  There is no native way to determine this, the code just tries to estimate  based on some feature heuristics.  </remarks> 
		</member>
		<member name="M:Server_GetJITVersion" syntax="Server_GetJITVersion()">
			<stacksize value="3"/>
			<referrer name="Server_GetJITString"/>
			<dependency name="Script_JITComplete"/>
			<dependency name="Server_JITExists"/>
			<dependency name="__cip"/>
			<dependency name="__jit_jump"/>
			<library>y_serverdata</library>  <returns>  The version of the JIT plugin loaded.  </returns>  <remarks>  There is no native way to determine this, the code just tries to estimate  based on some feature heuristics.  </remarks> 
		</member>
		<member name="M:Server_GetLongCallDefault" syntax="Server_GetLongCallDefault()">
			<stacksize value="1"/>
			<dependency name="__crash_flag"/>
			<dependency name="__crash_time"/>
			<library>y_serverdata</library>  <remarks>  Get the default long call time for crashdetect.  May not be the current  setting.  Simply stores the current value, resets it, restores the current  and returns the old version.  </remarks> 
		</member>
		<member name="M:Server_GetLongCallTime" syntax="Server_GetLongCallTime()">
			<stacksize value="1"/>
			<dependency name="__crash_time"/>
			<library>y_serverdata</library>  <returns>  The current setting (in microseconds) for the slow code warning threshold.  Or <c>0</c> if there is none.  </returns> <p/> <library>y_serverdata</library>  <returns>  The current setting (in microseconds) for the slow code warning threshold.  Or <c>0</c> if there is none.  </returns> 
		</member>
		<member name="M:Server_GetServerString" syntax="Server_GetServerString(version[], os[], vlen, olen)">
			<stacksize value="7"/>
			<dependency name="Script_GetIncludesString"/>
			<param name="version">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="os">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="vlen">
			</param>
			<param name="olen">
			</param>
			<library>y_serverdata</library>  <returns>  The includes used to build this script, as a string.  </returns>  <remarks>  The includes used were taken as a proxy for the server version, but they are  not a good substitute, hence this function is deprecated.  </remarks> 
		</member>
		<member name="M:Server_GetServerVersion" syntax="Server_GetServerVersion()">
			<stacksize value="3"/>
			<dependency name="Script_GetIncludesVersion"/>
			<library>y_serverdata</library>  <returns>  The includes used to build this script.  </returns>  <remarks>  The includes used were taken as a proxy for the server version, but they are  not a good substitute, hence this function is deprecated.  </remarks> 
		</member>
		<member name="M:Server_GetStartDateTime" syntax="Server_GetStartDateTime(&amp;year, &amp;month, &amp;day, &amp;hour, &amp;minute, &amp;second)">
			<stacksize value="1"/>
			<referrer name="Script_GetStartString"/>
			<dependency name="YSI_gsStartDMY"/>
			<dependency name="YSI_gsStartHMS"/>
			<param name="year">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="month">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="day">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="hour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="minute">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="second">
				<paraminfo> &amp; </paraminfo>
			</param>
			<library>y_serverdata</library>  <remarks>  Get the start time of the script, previously determined by  <c>ScriptInit_GetStartTime</c>, as a set of six components for time and  date.  </remarks> 
		</member>
		<member name="M:Server_GetStartTime" syntax="Server_GetStartTime()">
			<stacksize value="1"/>
			<dependency name="YSI_gsStartTime"/>
			<library>y_serverdata</library>  <remarks>  Get the start time of the script, previously determined by  <c>ScriptInit_GetStartTime</c>, as a unix timestamp.  </remarks> 
		</member>
		<member name="M:Server_HasDetectAddr0" syntax="Server_HasDetectAddr0()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="__crash_flag"/>
			<dependency name="false"/>
			<library>y_serverdata</library>  <remarks>  <c>true</c> if crashdetect is able to warn for writes to address naught.  </remarks> <p/> <library>y_serverdata</library>  <remarks>  <c>true</c> if crashdetect is able to warn for writes to address naught.  </remarks> 
		</member>
		<member name="M:Server_HasLongCallControl" syntax="Server_HasLongCallControl()">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="Server_DisableLongCall"/>
			<dependency name="Server_EnableLongCall"/>
			<dependency name="Server_IsLongCallEnabled"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<library>y_serverdata</library>  <remarks>  Is a version of the crashdetect plugin loaded that we can control long call  detection in via registers.  There were several releases where this just  didn't work properly.  </remarks> 
		</member>
		<member name="M:Server_IsDetectAddr0Enabled" syntax="Server_IsDetectAddr0Enabled()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="__crash_flag"/>
			<dependency name="false"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if crashdetect will warn for writes to address naught.  </returns> <p/> <library>y_serverdata</library>  <returns>  <c>true</c> if crashdetect will warn for writes to address naught.  </returns> 
		</member>
		<member name="M:Server_IsFilterscript" syntax="Server_IsFilterscript()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if this script is determined to be a filterscript at runtime.  </returns> 
		</member>
		<member name="M:Server_IsGameMode" syntax="Server_IsGameMode()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="YSI_GAMEMODE"/>
			<library>y_scriptdata</library>  <returns>  <c>true</c> if this script is determined to be a gamemode at runtime.  </returns> 
		</member>
		<member name="M:Server_IsLinuxCompiler" syntax="Server_IsLinuxCompiler()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="false"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if this script was compiled with a Linux compiler.  </returns> 
		</member>
		<member name="M:Server_IsLinuxHost" syntax="Server_IsLinuxHost()">
			<tagname value="bool"/>
			<stacksize value="2"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="__cod"/>
			<dependency name="__dat"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if this script is running on a Linux server currently.  </returns> 
		</member>
		<member name="M:Server_IsLongCallEnabled" syntax="Server_IsLongCallEnabled()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="Server_HasLongCallControl"/>
			<dependency name="__crash_flag"/>
			<dependency name="false"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if long call (slow code) detection is active.  </returns>  <remarks>  Check if the crashdetect plugin exists, and long call detection is enabled.  </remarks> <p/> <library>y_serverdata</library>  <returns>  <c>true</c> if long call (slow code) detection is active.  </returns>  <remarks>  Check if the crashdetect plugin exists, and long call detection is enabled.  </remarks> 
		</member>
		<member name="M:Server_IsOpenMP" syntax="Server_IsOpenMP()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if this script is running on an open.mp server currently.  </returns> 
		</member>
		<member name="M:Server_IsSAMP" syntax="Server_IsSAMP()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if this script is running on a SA:MP server currently.  </returns> 
		</member>
		<member name="M:Server_IsWindowsCompiler" syntax="Server_IsWindowsCompiler()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="true"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if this script was compiled with a Windows compiler.  </returns> 
		</member>
		<member name="M:Server_IsWindowsHost" syntax="Server_IsWindowsHost()">
			<tagname value="bool"/>
			<stacksize value="2"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="__cod"/>
			<dependency name="__dat"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if this script is running on a Windows server currently.  </returns> 
		</member>
		<member name="M:Server_JITComplete" syntax="Server_JITComplete()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE_JITED"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if the JIT plugin has completed compilation.  </returns> 
		</member>
		<member name="M:Server_JITExists" syntax="Server_JITExists()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="Server_GetJITVersion"/>
			<dependency name="E_SCRIPTINIT_STATE_JITING"/>
			<dependency name="E_SCRIPTINIT_STATE_NONE"/>
			<dependency name="YSI_g_sScriptInitState"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if the JIT plugin exists.  </returns> 
		</member>
		<member name="M:Server_LoadRconFix" syntax="Server_LoadRconFix()">
			<stacksize value="7"/>
			<automaton name="_ALS"/>
			<referrer name="ScriptInit_OnYSIInit"/>
			<dependency name="Debug_Print0"/>
			<dependency name="SendRconCommand"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="YSI_gscOnClientCheckResponse"/>
			<dependency name="YSI_gscRconFixFS"/>
			<dependency name="__OPEN_MP_VERSION"/>
			<dependency name="fblockwrite"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="getproperty"/>
			<dependency name="io_write"/>
			<dependency name="setproperty"/>
			<library>y_rconfix</library>  <remarks>  This code is always needed, even if fixes.inc exists, because y_master can  repeatedly load and unload it to use as a buffer filterscript.  Basically,  because this FS is always loaded it ensures that 16 other filterscripts  can't all be loaded at once.  So if 15 are loaded and we need an extra  space to reload one while preserving data we can unload this one, use the  spare space, then load this one back up again.  </remarks> 
		</member>
		<member name="M:Server_PrintIntroMessage" syntax="Server_PrintIntroMessage(...)">
			<stacksize value="7"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<dependency name="ScriptInit_PrintF__"/>
			<dependency name="Server_PrintYSIHeader"/>
			<dependency name="YSI_Print__"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_gsFirstHeader"/>
			<dependency name="YSI_gsObnoxiousHeader"/>
			<dependency name="YSI_gsc38"/>
			<dependency name="YSI_gscHeader"/>
			<dependency name="YSI_gscSpacer"/>
			<dependency name="__cell_shift"/>
			<dependency name="__frm"/>
			<dependency name="cellbytes"/>
			<dependency name="false"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
			<library>y_scriptinit</library>  <remarks>  Every parameter to this function is a string, and they are all shown in  order in the console, in a nice box.  If this is the first call it also  shows the amazing beautiful YSI header first.  </remarks> 
		</member>
		<member name="M:Server_PrintIntroPart" syntax="Server_PrintIntroPart(...)">
			<stacksize value="7"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="YVers_Callback"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<dependency name="ScriptInit_PrintF__"/>
			<dependency name="Server_PrintYSIHeader"/>
			<dependency name="YSI_Print__"/>
			<dependency name="YSI_SPACE"/>
			<dependency name="YSI_gsFirstHeader"/>
			<dependency name="YSI_gsNewPart"/>
			<dependency name="YSI_gsObnoxiousHeader"/>
			<dependency name="YSI_gsc38"/>
			<dependency name="YSI_gscHeader"/>
			<dependency name="YSI_gscSpacer"/>
			<dependency name="__cell_shift"/>
			<dependency name="__frm"/>
			<dependency name="cellbytes"/>
			<dependency name="false"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
			<library>y_scriptinit</library>  <remarks>  Every parameter to this function is a string, and they are all shown in  order in the console, in a nice box.  Unlike <c>Server_PrintIntroMessage</c>  this doesn't close the box, nor does it start a new one if one is already  being written in to.  Thus this one can append messages within a nice box in  the console.  If this is the first call it also shows the loved and adored  YSI header first.  </remarks> 
		</member>
		<member name="M:Server_PrintYSIHeader" syntax="Server_PrintYSIHeader()">
			<stacksize value="3"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<dependency name="YSI_Print__"/>
			<library>y_scriptinit</library>  <remarks>  Print the awesome header that everyone loves in the console.  You're  welcomes everyone!  </remarks> 
		</member>
		<member name="M:Server_ResetLongCallTime" syntax="Server_ResetLongCallTime()">
			<stacksize value="1"/>
			<dependency name="__crash_flag"/>
			<library>y_serverdata</library>  <remarks>  Set the slow code threshold back to the default value.  </remarks> <p/> <library>y_serverdata</library>  <remarks>  Set the slow code threshold back to the default value.  </remarks> 
		</member>
		<member name="M:Server_RestartLongCall" syntax="Server_RestartLongCall()">
			<stacksize value="1"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="__crash_flag"/>
			<library>y_serverdata</library>  <remarks>  Restart the current function's long call timer, if crashdetect exists.  So  the detection of slow code will only account for execution time after this  point.  </remarks> <p/> <library>y_serverdata</library>  <remarks>  Restart the current function's long call timer, if crashdetect exists.  So  the detection of slow code will only account for execution time after this  point.  </remarks> 
		</member>
		<member name="M:Server_SetLongCallTime" syntax="Server_SetLongCallTime(usTime)">
			<stacksize value="1"/>
			<dependency name="__crash_time"/>
			<param name="usTime">
				The time in microseconds.
			</param>
			<library>y_serverdata</library>    <remarks>  Set the time that crashdetect will use when detecting slow functions.  Anything executing for longer than this time will trigger a warning.  </remarks> <p/> <library>y_serverdata</library>  <param name="usTime">The time in microseconds.</param>  <remarks>  Set the time that crashdetect will use when detecting slow functions.  Anything executing for longer than this time will trigger a warning.  </remarks> 
		</member>
		<member name="M:Server_UnloadRconFix" syntax="Server_UnloadRconFix()">
			<stacksize value="3"/>
			<automaton name="_ALS"/>
			<dependency name="SendRconCommand"/>
			<dependency name="__OPEN_MP_VERSION"/>
			<library>y_rconfix</library>  <remarks>  Unload the callback fix filterscript.  </remarks> 
		</member>
		<member name="M:Server_UpgradeCrashDetect" syntax="Server_UpgradeCrashDetect()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="YVers_PrintHeader"/>
			<dependency name="__crash_flag"/>
			<dependency name="false"/>
			<library>y_serverdata</library>  <returns>  <c>true</c> if crashdetect needs updating.  </returns> 
		</member>
		<member name="M:SetCameraBehindPlayer" syntax="SetCameraBehindPlayer(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_resetcam"/>
			<referrer name="cmd_playduel"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_reefy"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_fps"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_goto"/>
			<referrer name="RaceCountDown"/>
			<param name="playerid">
				The player you want to restore the camera for
			</param>
			<library>omp_player</library>  <summary>Restore the camera to a place behind the player, after using a function like  <a href="#SetPlayerCameraPos">SetPlayerCameraPos</a>.</summary>    <seealso name="SetPlayerCameraPos" />  <seealso name="SetPlayerCameraLookAt" /> 
		</member>
		<member name="M:SetDynamicActorHealth" syntax="SetDynamicActorHealth(actorid, health)">
			<attribute name="native"/>
			<referrer name="cmd_actorkill"/>
			<param name="actorid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetDynamicObjectMaterial" syntax="SetDynamicObjectMaterial(objectid, materialindex, modelid, txdname[], texturename[], materialcolor)">
			<attribute name="native"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_do"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="BuildObjects"/>
			<param name="objectid">
			</param>
			<param name="materialindex">
			</param>
			<param name="modelid">
			</param>
			<param name="txdname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="texturename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialcolor">
			</param>
		</member>
		<member name="M:SetDynamicObjectMaterialText" syntax="SetDynamicObjectMaterialText(objectid, materialindex, text[], materialsize, fontface[], fontsize, bold, fontcolor, backcolor, textalignment)">
			<attribute name="native"/>
			<referrer name="cmd_sot"/>
			<referrer name="BuildObjects"/>
			<param name="objectid">
			</param>
			<param name="materialindex">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialsize">
			</param>
			<param name="fontface">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fontsize">
			</param>
			<param name="bold">
			</param>
			<param name="fontcolor">
			</param>
			<param name="backcolor">
			</param>
			<param name="textalignment">
			</param>
		</member>
		<member name="M:SetDynamicObjectPos" syntax="SetDynamicObjectPos(objectid, x, y, z)">
			<attribute name="native"/>
			<referrer name="OnPlayerEditDynamicObject"/>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetDynamicObjectRot" syntax="SetDynamicObjectRot(objectid, rx, ry, rz)">
			<attribute name="native"/>
			<referrer name="OnPlayerEditDynamicObject"/>
			<param name="objectid">
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetGameModeText" syntax="SetGameModeText(format[], ...)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The gamemode name to display.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_core</library>  <summary>Set the name of the game mode, which appears in the server browser.</summary>   
		</member>
		<member name="M:SetMyColor" syntax="SetMyColor(playerid)">
			<stacksize value="4"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Login"/>
			<referrer name="cmd_login"/>
			<dependency name="Color"/>
			<dependency name="Players"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SetPVarFloat" syntax="SetPVarFloat(playerid, pvar[], value)">
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<param name="playerid">
				The ID of the player whose player variable will be set
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable
			</param>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The float you want to save in the player variable
			</param>
			<library>omp_variable</library>  <summary>Set a float player variable's value.</summary>        <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  Either the player specified is not connected,  or the variable name is null or over 40 characters.  </returns> 
		</member>
		<member name="M:SetPVarInt" syntax="SetPVarInt(playerid, pvar[], value)">
			<attribute name="native"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_fcr"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_alpha"/>
			<referrer name="cmd_hydra"/>
			<referrer name="cmd_rhino"/>
			<referrer name="cmd_hunter"/>
			<referrer name="cmd_euros"/>
			<referrer name="cmd_limo"/>
			<referrer name="cmd_adromada"/>
			<referrer name="cmd_at400"/>
			<referrer name="cmd_beagle"/>
			<referrer name="cmd_dodo"/>
			<referrer name="cmd_sandking"/>
			<referrer name="cmd_sultan"/>
			<referrer name="cmd_bus"/>
			<referrer name="cmd_coach"/>
			<referrer name="cmd_faggio"/>
			<referrer name="cmd_shamal"/>
			<referrer name="cmd_bullet"/>
			<referrer name="cmd_bmx"/>
			<referrer name="cmd_vortex"/>
			<referrer name="cmd_turismo"/>
			<referrer name="cmd_jester"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_giveallweaponradius"/>
			<param name="playerid">
				The ID of the player whose player variable will be set
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable
			</param>
			<param name="value">
				The integer to be set
			</param>
			<library>omp_variable</library>  <summary>Set an integer player variable.</summary>        <seealso name="GetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <remarks>Variables aren't reset until after <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  is called, so the values are still accessible in <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  Either the player specified is not connected,  or the variable name is null or over 40 characters.  </returns> 
		</member>
		<member name="M:SetPVarString" syntax="SetPVarString(playerid, pvar[], value[], ...)">
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player whose player variable will be set
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
				The string you want to save in the player variable.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_variable</library>  <summary>Saves a string into a player variable.</summary>        <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" /> 
		</member>
		<member name="M:SetPickupForPlayer" syntax="SetPickupForPlayer(playerid, id, model, type, x, y, z)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="id">
			</param>
			<param name="model">
			</param>
			<param name="type">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<library>omp_pickup</library> 
		</member>
		<member name="M:SetPlayer3DTextLabelVirtualWorld" syntax="SetPlayer3DTextLabelVirtualWorld(playerid, textid, virtualWorld)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="textid">
				<paraminfo>PlayerText3D </paraminfo>
			</param>
			<param name="virtualWorld">
			</param>
			<library>omp_textlabel</library> 
		</member>
		<member name="M:SetPlayerAmmo" syntax="SetPlayerAmmo(playerid, weaponid, ammo)">
			<attribute name="native"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<param name="playerid">
				The ID of the player to set the weapon ammo of
			</param>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The ID of the <a href="http://wiki.sa-mp.com/wiki/Weapons">weapon</a> to set  the ammo of.
			</param>
			<param name="ammo">
				The amount of ammo to set
			</param>
			<library>omp_player</library>  <summary>Set the ammo of a player's weapon.</summary>        <seealso name="GetPlayerAmmo" />  <seealso name="GivePlayerWeapon" />  <seealso name="SetPlayerArmedWeapon" />  <remarks>Set the ammo to <b><c>0</c></b> to remove a weapon from a player's inventory.  Note that  the weapon will still show up in <a href="#GetPlayerWeaponData">GetPlayerWeaponData</a>, albeit with  <b><c>0</c></b> ammo.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is also returned when the weapon  specified is invalid.<br />  <b><c>0</c></b>: The function failed to execute.  The player isn't connected.<br />  </returns> 
		</member>
		<member name="M:SetPlayerArmedWeapon" syntax="SetPlayerArmedWeapon(playerid, weaponid)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<param name="playerid">
				The ID of the player to arm with a weapon
			</param>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The ID of the weapon that the player should be armed with
			</param>
			<library>omp_player</library>  <summary>Sets which weapon (that a player already has) the player is holding.</summary>      <seealso name="GivePlayerWeapon" />  <seealso name="GetPlayerWeapon" />  <remarks>This function arms a player with a weapon they <b>already have</b>; it does not give them  a new weapon.  See <a href="#GivePlayerWeapon">GivePlayerWeapon</a>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is returned even when the function  fails to execute (the player doesn't have the weapon specified, or it is an invalid weapon).<br />  <b><c>0</c></b>: The function failed to execute.  The player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerArmour" syntax="SetPlayerArmour(playerid, armour)">
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="DuelStart"/>
			<referrer name="cmd_dm"/>
			<referrer name="ResetPlayerArmor"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_goodies"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_armorall"/>
			<param name="playerid">
				The ID of the player to set the armour of
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
				The amount of armour to set, as a percentage (float).  Values larger than <b><c>100</c></b>  are valid, but won't be displayed in the HUD's armour bar
			</param>
			<library>omp_player</library>  <summary>Set a player's armor level.</summary>      <seealso name="GetPlayerArmour" />  <seealso name="SetPlayerHealth" />  <seealso name="GetPlayerHealth" />  <remarks>Armour is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b></remarks>  <remarks>The function's name is armour, not armor (Americanized).</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerAttachedObject" syntax="SetPlayerAttachedObject(playerid, index, modelid, bone, offsetX, offsetY, offsetZ, rotationX, rotationY, rotationZ, scaleX, scaleY, scaleZ, materialColour1, materialColour2)">
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerEditAttachedObject"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_skateboard"/>
			<referrer name="cmd_shark"/>
			<referrer name="cmd_broom"/>
			<referrer name="cmd_ballhead"/>
			<referrer name="cmd_witchhat"/>
			<referrer name="cmd_pumpkin"/>
			<referrer name="cmd_xmashat"/>
			<referrer name="cmd_penis"/>
			<referrer name="cmd_helmet"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_cbone"/>
			<referrer name="HO_load"/>
			<referrer name="HO_Addons"/>
			<referrer name="HO_Addons2"/>
			<referrer name="HO_Addons3"/>
			<param name="playerid">
				The ID of the player to attach the object to
			</param>
			<param name="index">
				The index (slot) to assign the object to (0-9)
			</param>
			<param name="modelid">
				The <a href="https://dev.prineside.com/en/gtasa_samp_model_id/">model</a> to attach
			</param>
			<param name="bone">
				The bone to attach the object to
			</param>
			<param name="offsetX">
				<paraminfo>Float </paraminfo>
				x axis offset for the object position (optional=<b><c>0.0</c></b>)
			</param>
			<param name="offsetY">
				<paraminfo>Float </paraminfo>
				y axis offset for the object position (optional=<b><c>0.0</c></b>)
			</param>
			<param name="offsetZ">
				<paraminfo>Float </paraminfo>
				z axis offset for the object position (optional=<b><c>0.0</c></b>)
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				x axis rotation of the object (optional=<b><c>0.0</c></b>)
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				y axis rotation of the object (optional=<b><c>0.0</c></b>)
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				z axis rotation of the object (optional=<b><c>0.0</c></b>)
			</param>
			<param name="scaleX">
				<paraminfo>Float </paraminfo>
				x axis scale of the object (optional=<b><c>1.0</c></b>)
			</param>
			<param name="scaleY">
				<paraminfo>Float </paraminfo>
				y axis scale of the object (optional=<b><c>1.0</c></b>)
			</param>
			<param name="scaleZ">
				<paraminfo>Float </paraminfo>
				z axis scale of the object (optional=<b><c>1.0</c></b>)
			</param>
			<param name="materialColour1">
				The first object colour to set <b>ARGB</b> (optional=<b><c>0</c></b>)
			</param>
			<param name="materialColour2">
				The second object colour to set <b>ARGB</b> (optional=<b><c>0</c></b>)
			</param>
			<library>omp_object</library>  <summary>Attach an object to a specific bone on a player.</summary>                                <seealso name="RemovePlayerAttachedObject" />  <seealso name="IsPlayerAttachedObjectSlotUsed" />  <seealso name="EditAttachedObject" />  <remarks>This function is separate from the <a href="#CreateObject">CreateObject</a>/  <a href="#CreatePlayerObject">CreatePlayerObject</a>  pools.</remarks>  <remarks>  <b>Bone IDs:</b><br />  <ul>  <li><b><c>1</c></b> - spine</li>  <li><b><c>2</c></b> - head</li>  <li><b><c>3</c></b> - left upper arm</li>  <li><b><c>4</c></b> - right upper arm</li>  <li><b><c>5</c></b> - left hand</li>  <li><b><c>6</c></b> - right hand</li>  <li><b><c>7</c></b> - left thigh</li>  <li><b><c>8</c></b> - right thigh</li>  <li><b><c>9</c></b> - left foot</li>  <li><b><c>10</c></b> - right foot</li>  <li><b><c>11</c></b> - right calf</li>  <li><b><c>12</c></b> - left calf</li>  <li><b><c>13</c></b> - left forearm</li>  <li><b><c>14</c></b> - right forearm</li>  <li><b><c>15</c></b> - left clavicle (shoulder)</li>  <li><b><c>16</c></b> - right clavicle (shoulder)</li>  <li><b><c>17</c></b> - neck</li>  <li><b><c>18</c></b> - jaw </li>  </ul>  </remarks>  <returns><b><c>1</c></b> on success, <b><c>0</c></b> on failure.</returns> 
		</member>
		<member name="M:SetPlayerCameraLookAt" syntax="SetPlayerCameraLookAt(playerid, x, y, z, cut)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_selfiecam"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_specpolice"/>
			<param name="playerid">
				The ID of the player whose camera to set
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate for the player's camera to look at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate for the player's camera to look at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate for the player's camera to look at
			</param>
			<param name="cut">
				<paraminfo>t_CAM_MOVE </paraminfo>
				The style of the change.  Can be used to interpolate (change slowly) from old pos  to new pos using <b><c>CAMERA_MOVE</c></b>.  Added in <b>0.3e</b>.  Leave out for older versions  (optional=<b><c>CAMERA_CUT</c></b>)
			</param>
			<library>omp_player</library>  <summary>Set the direction a player's camera looks at.  Generally meant to be used in combination  with <a href="#SetPlayerCameraPos">SetPlayerCameraPos</a>.</summary>            <seealso name="SetPlayerCameraPos" />  <seealso name="SetCameraBehindPlayer" />  <seealso name="GetPlayerCameraPos" />  <seealso name="GetPlayerCameraFrontVector" />  <remarks>Using the camera functions directly after enabling spectator mode doesn't work.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerCameraPos" syntax="SetPlayerCameraPos(playerid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_selfiecam"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_specpolice"/>
			<param name="playerid">
				ID of the player
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to place the camera at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to place the camera at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to place the camera at
			</param>
			<library>omp_player</library>  <summary>Sets the camera to a specific position for a player.</summary>          <seealso name="SetPlayerCameraLookAt" />  <seealso name="SetCameraBehindPlayer" />  <remarks>You may also have to use <a href="#SetPlayerCameraLookAt">SetPlayerCameraLookAt</a> with  this function in order to work properly.</remarks>  <remarks>Use <a href="#SetCameraBehindPlayer">SetCameraBehindPlayer</a> to reset the camera to behind  the player.</remarks>  <remarks>Using the camera functions directly after enabling spectator mode doesn't work.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified doesn't exist.  </returns> 
		</member>
		<member name="M:SetPlayerCash" syntax="SetPlayerCash(playerid, cash)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="Login"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_giveallcash"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="Money"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerMoney"/>
			<param name="playerid">
			</param>
			<param name="cash">
			</param>
		</member>
		<member name="M:SetPlayerChatBubble" syntax="SetPlayerChatBubble(playerid, text[], colour, drawDistance, expireTime, ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="DisableSpawnProtection"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_cb"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_god"/>
			<param name="playerid">
				The player which should have the chat bubble
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text to display
			</param>
			<param name="colour">
				The text colour
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
				The distance from where players are able to see the chat bubble
			</param>
			<param name="expireTime">
				The time in miliseconds the bubble should be displayed for
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_player</library>  <summary>Creates a chat bubble above a player's name tag.</summary>            <remarks>You can't see your own chatbubbles.  The same applies to attached 3D text labels.</remarks>  <remarks>You can use colour embedding for multiple colours in the message.</remarks> 
		</member>
		<member name="M:SetPlayerColor" syntax="SetPlayerColor(playerid, colour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_nocolor"/>
			<referrer name="cmd_red"/>
			<referrer name="cmd_lime"/>
			<referrer name="cmd_blue"/>
			<referrer name="cmd_grey"/>
			<referrer name="cmd_white"/>
			<referrer name="cmd_green"/>
			<referrer name="cmd_yellow"/>
			<referrer name="cmd_darkyellow"/>
			<referrer name="cmd_brightyellow"/>
			<referrer name="cmd_brightblue"/>
			<referrer name="cmd_purple"/>
			<referrer name="cmd_aqua"/>
			<referrer name="cmd_orange"/>
			<referrer name="cmd_strongorange"/>
			<referrer name="cmd_lightblue"/>
			<referrer name="cmd_pink"/>
			<referrer name="cmd_vipcolor"/>
			<referrer name="cmd_admincolor"/>
			<referrer name="cmd_brown"/>
			<referrer name="SetMyColor"/>
			<param name="playerid">
				The ID of the player whose colour to set
			</param>
			<param name="colour">
				The colour to set.  Supports alpha values (<b>RGBA</b>)
			</param>
			<library>omp_player</library>  <summary>Set the colour of a player's nametag and marker (radar blip).</summary>      <seealso name="SetPlayerMarkerForPlayer" />  <seealso name="GetPlayerColor" />  <seealso name="ChangeVehicleColor" />  <remarks>This function will change player's colour for everyone, even if player's colour was changed  with <a href="#SetPlayerMarkerForPlayer">SetPlayerMarkerForPlayer</a> for any other player. </remarks>  <remarks>If used under <a href="#OnPlayerConnect">OnPlayerConnect</a>, the affecting player will  not see the colour in the TAB menu. </remarks> 
		</member>
		<member name="M:SetPlayerDrunkLevel" syntax="SetPlayerDrunkLevel(playerid, level)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_sober"/>
			<param name="playerid">
				The ID of the player to set the drunkenness of
			</param>
			<param name="level">
				The level of drunkenness to set
			</param>
			<library>omp_player</library>  <summary>Sets the drunk level of a player which makes the player's camera sway and vehicles hard  to control.</summary>      <seealso name="GetPlayerDrunkLevel" />  <remarks>  Players' drunk level will automatically decrease over time, based on their FPS (players with <b><c>50</c></b>  FPS will lose <b><c>50</c></b> 'levels' per second.  This is useful for determining a player's FPS!).<br  />  In <b>0.3a</b> the drunk level will decrement and stop at <b><c>2000</c></b>.  In <b>0.3b+</b>  the drunk level decrements to <b><c>0</c></b>)<br />  Levels over <b><c>2000</c></b> make the player drunk (camera swaying and vehicles difficult to  control).<br />  Max drunk level is <b><c>50000</c></b>.<br />  While the drunk level is above <b><c>5000</c></b>, the player's HUD (radar etc.) will be hidden.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerFacingAngle" syntax="SetPlayerFacingAngle(playerid, ang)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_michelles"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_ammo2"/>
			<referrer name="cmd_playduel"/>
			<referrer name="Duel_SetPlayerPos"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ph"/>
			<referrer name="cmd_docks"/>
			<referrer name="cmd_methlab"/>
			<referrer name="cmd_snakefarm"/>
			<referrer name="cmd_8track"/>
			<referrer name="cmd_lshospital"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_cityhall"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_sfadrop"/>
			<referrer name="cmd_alexm"/>
			<referrer name="cmd_bikestunt"/>
			<referrer name="cmd_playaz"/>
			<referrer name="cmd_francy"/>
			<referrer name="cmd_mansion"/>
			<referrer name="cmd_cj101"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_police"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_east"/>
			<referrer name="cmd_cvondz"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_datower"/>
			<referrer name="cmd_peckers"/>
			<referrer name="cmd_ft"/>
			<referrer name="cmd_drift2"/>
			<referrer name="cmd_dam"/>
			<referrer name="cmd_prison"/>
			<referrer name="cmd_angelpine"/>
			<referrer name="cmd_graveyard"/>
			<referrer name="cmd_teepee"/>
			<referrer name="cmd_mcasino"/>
			<referrer name="cmd_clowns"/>
			<referrer name="cmd_boathouse"/>
			<referrer name="cmd_longjump"/>
			<referrer name="cmd_kingring"/>
			<referrer name="cmd_barn"/>
			<referrer name="cmd_lvpolice"/>
			<referrer name="cmd_mall"/>
			<referrer name="cmd_cludia"/>
			<referrer name="cmd_hoshi"/>
			<referrer name="cmd_school"/>
			<referrer name="cmd_beach2"/>
			<referrer name="cmd_reefy"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_launcher"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_base"/>
			<referrer name="cmd_base2"/>
			<referrer name="cmd_base3"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_tp"/>
			<referrer name="StuntTele"/>
			<param name="playerid">
				The ID of the player to set the facing angle of
			</param>
			<param name="ang">
				<paraminfo>Float </paraminfo>
				The angle the player should face
			</param>
			<library>omp_player</library>  <summary>Set a player's facing angle (z rotation).</summary>      <seealso name="GetPlayerFacingAngle" />  <seealso name="SetPlayerPos" />  <remarks>Angles are reversed in GTA:SA; 90 degrees would be East in the real world, but in GTA:SA  90 degrees is in fact West.  North and South are still 0/360 and 180.  To convert this, simply do  <b>360 - angle</b>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerFightingStyle" syntax="SetPlayerFightingStyle(playerid, style)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Login"/>
			<referrer name="cmd_normalfs"/>
			<referrer name="cmd_kneehead"/>
			<referrer name="cmd_kungfu"/>
			<referrer name="cmd_boxing"/>
			<referrer name="cmd_grabkick"/>
			<referrer name="cmd_elbow"/>
			<param name="playerid">
				The ID of player to set the fighting style of
			</param>
			<param name="style">
				<paraminfo>t_FIGHT_STYLE </paraminfo>
				The fighting style that should be set
			</param>
			<library>omp_player</library>  <summary>Set a player's special fighting style.  To use in-game, aim and press the 'secondary attack'  key (<b>ENTER</b> by default).</summary>      <seealso name="GetPlayerFightingStyle" />  <remarks>This does not affect normal fist attacks - only special/secondary attacks (aim + press 'secondary  attack' key).</remarks>  <remarks>  <b>Fighting styles:</b><br />  <ul>  <li><b><c>FIGHT_STYLE_NORMAL</c></b></li>  <li><b><c>FIGHT_STYLE_BOXING</c></b></li>  <li><b><c>FIGHT_STYLE_KUNGFU</c></b></li>  <li><b><c>FIGHT_STYLE_KNEEHEAD</c></b></li>  <li><b><c>FIGHT_STYLE_GRABKICK</c></b></li>  <li><b><c>FIGHT_STYLE_ELBOW</c></b></li>  </ul>  </remarks> 
		</member>
		<member name="M:SetPlayerHealth" syntax="SetPlayerHealth(playerid, health)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="DisableSpawnProtection"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerText"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="DuelStart"/>
			<referrer name="cmd_dm"/>
			<referrer name="ResetPlayerHealth"/>
			<referrer name="cmd_healme"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_kill"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_goodies"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_changetdm"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_healall"/>
			<referrer name="cmd_god"/>
			<param name="playerid">
				The ID of the player to set the health of
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
				The value to set the player's health to.  Max health that can be displayed in  the HUD is <b><c>100</c></b>, though higher values are valid
			</param>
			<library>omp_player</library>  <summary>Set the health of a player.</summary>      <seealso name="GetPlayerHealth" />  <seealso name="GetPlayerArmour" />  <seealso name="SetPlayerArmour" />  <remarks>Health is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b></remarks>  <remarks>If a player's health is set to <b><c>0</c></b> or a minus value, they will die instantly.</remarks>  <remarks>If a player's health is below <b><c>10</c></b> or above <b><c>98303</c></b>, their health  bar will flash. </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerInterior" syntax="SetPlayerInterior(playerid, interiorid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="StopSpec"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_michelles"/>
			<referrer name="cmd_rafinha"/>
			<referrer name="cmd_skydive"/>
			<referrer name="cmd_ic"/>
			<referrer name="cmd_lcp"/>
			<referrer name="OnPlayerInteriorChange"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_ammo2"/>
			<referrer name="cmd_playduel"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_libertycity"/>
			<referrer name="cmd_cage"/>
			<referrer name="cmd_m1"/>
			<referrer name="cmd_m2"/>
			<referrer name="cmd_m3"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_runwayls"/>
			<referrer name="cmd_runwaylv"/>
			<referrer name="cmd_runwaysf"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_lsajump"/>
			<referrer name="cmd_beach"/>
			<referrer name="cmd_tf"/>
			<referrer name="cmd_lowrider"/>
			<referrer name="cmd_waa"/>
			<referrer name="cmd_club"/>
			<referrer name="cmd_sws"/>
			<referrer name="cmd_twister"/>
			<referrer name="cmd_loopstunt"/>
			<referrer name="cmd_jump"/>
			<referrer name="cmd_quarry"/>
			<referrer name="cmd_parkour4"/>
			<referrer name="cmd_parkour5"/>
			<referrer name="cmd_parkour6"/>
			<referrer name="cmd_parkour7"/>
			<referrer name="cmd_parajump1"/>
			<referrer name="cmd_parajump2"/>
			<referrer name="cmd_parajump4"/>
			<referrer name="cmd_parajump5"/>
			<referrer name="cmd_dmzone1"/>
			<referrer name="cmd_dmzone2"/>
			<referrer name="cmd_dmzone3"/>
			<referrer name="cmd_dmzone4"/>
			<referrer name="cmd_dmzone5"/>
			<referrer name="cmd_dmzone6"/>
			<referrer name="cmd_dmzone7"/>
			<referrer name="cmd_dmzone8"/>
			<referrer name="cmd_dmzone9"/>
			<referrer name="cmd_dmzone10"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_ph"/>
			<referrer name="cmd_wb"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_sex"/>
			<referrer name="cmd_bayside"/>
			<referrer name="cmd_docks"/>
			<referrer name="cmd_methlab"/>
			<referrer name="cmd_snakefarm"/>
			<referrer name="cmd_motel"/>
			<referrer name="cmd_gasstation"/>
			<referrer name="cmd_jays"/>
			<referrer name="cmd_gantdiner"/>
			<referrer name="cmd_8track"/>
			<referrer name="cmd_lshospital"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_cityhall"/>
			<referrer name="cmd_area69"/>
			<referrer name="cmd_waterfall"/>
			<referrer name="cmd_grove"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_pirateship"/>
			<referrer name="cmd_underbase"/>
			<referrer name="cmd_sfadrop"/>
			<referrer name="cmd_alexm"/>
			<referrer name="cmd_bikestunt"/>
			<referrer name="cmd_playaz"/>
			<referrer name="cmd_francy"/>
			<referrer name="cmd_mansion"/>
			<referrer name="cmd_cj101"/>
			<referrer name="cmd_venera"/>
			<referrer name="cmd_vida"/>
			<referrer name="cmd_deathangel"/>
			<referrer name="cmd_boeing747"/>
			<referrer name="cmd_meghan"/>
			<referrer name="cmd_saloun2"/>
			<referrer name="cmd_saloun3"/>
			<referrer name="cmd_braylon"/>
			<referrer name="cmd_gibbs"/>
			<referrer name="cmd_bikepark"/>
			<referrer name="cmd_hq"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_panzehir"/>
			<referrer name="cmd_assa"/>
			<referrer name="cmd_john"/>
			<referrer name="cmd_reham"/>
			<referrer name="cmd_woa"/>
			<referrer name="cmd_police"/>
			<referrer name="cmd_kjj"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_east"/>
			<referrer name="cmd_cvondz"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_datower"/>
			<referrer name="cmd_peckers"/>
			<referrer name="cmd_nrgstunt2"/>
			<referrer name="cmd_driftcity"/>
			<referrer name="cmd_drift1"/>
			<referrer name="cmd_drift2"/>
			<referrer name="cmd_drift3"/>
			<referrer name="cmd_drift4"/>
			<referrer name="cmd_drift5"/>
			<referrer name="cmd_drift6"/>
			<referrer name="cmd_windy"/>
			<referrer name="cmd_probe"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_disco"/>
			<referrer name="cmd_factory"/>
			<referrer name="cmd_vrock"/>
			<referrer name="cmd_vrock2"/>
			<referrer name="cmd_bedroom"/>
			<referrer name="cmd_janitor"/>
			<referrer name="cmd_woozie"/>
			<referrer name="cmd_restaurant"/>
			<referrer name="cmd_sweets"/>
			<referrer name="cmd_dam"/>
			<referrer name="cmd_donuts"/>
			<referrer name="cmd_railroad"/>
			<referrer name="cmd_rcbox"/>
			<referrer name="cmd_crackhouse"/>
			<referrer name="cmd_meathouse"/>
			<referrer name="cmd_prison"/>
			<referrer name="cmd_school"/>
			<referrer name="cmd_launcher"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_base"/>
			<referrer name="cmd_base2"/>
			<referrer name="cmd_base3"/>
			<referrer name="cmd_hideout"/>
			<referrer name="cmd_hideout2"/>
			<referrer name="cmd_hideout3"/>
			<referrer name="cmd_hideout4"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_tp"/>
			<referrer name="StuntTele"/>
			<param name="playerid">
				The ID of the player to set the interior of
			</param>
			<param name="interiorid">
				The <a href="http://wiki.sa-mp.com/wiki/Interiorids">interior ID</a> to  set the player in
			</param>
			<library>omp_player</library>  <summary>Set a player's interior.  A list of currently known interiors and their positions can be  found <a href="http://wiki.sa-mp.com/wiki/Interiorids">here</a>.</summary>      <seealso name="GetPlayerInterior" />  <seealso name="LinkVehicleToInterior" />  <seealso name="OnPlayerInteriorChange" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerKB" syntax="SetPlayerKB(playerid, value)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="SpeedBoostDisabled"/>
			<param name="playerid">
			</param>
			<param name="value">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerMapIcon" syntax="SetPlayerMapIcon(playerid, iconid, x, y, z, markerType, colour, style)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="playerid">
				The ID of the player to set the map icon for
			</param>
			<param name="iconid">
				The player's icon ID, ranging from <b><c>0</c></b> to <b><c>99</c></b>.  This  means there is a maximum of <b><c>100</c></b> map icons.  ID can be used in <a href="#RemovePlayerMapIcon">RemovePlayerMapIcon</a>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to place the map icon at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to place the map icon at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to place the map icon at
			</param>
			<param name="markerType">
				The icon to set
			</param>
			<param name="colour">
				The colour of the icon (<b>RGBA</b>).  This should only be used with the square  icon (ID: <b><c>0</c></b>)
			</param>
			<param name="style">
				<paraminfo>t_MAPICON </paraminfo>
				The style of icon (optional=<b><c>MAPICON_LOCAL</c></b>)
			</param>
			<library>omp_player</library>  <summary>Place an icon/marker on a player's map.  Can be used to mark locations such as banks and  hospitals to players.</summary>                  <seealso name="RemovePlayerMapIcon" />  <seealso name="SetPlayerMarkerForPlayer" />  <remarks>If you use an invalid marker type, it will create ID <b><c>1</c></b> (White Square). </remarks>  <remarks>If you use an icon ID that is already in use, it will replace the current map icon using  that ID. </remarks>  <remarks>Marker type <b><c>1</c></b> (square), <b><c>2</c></b> (player blip), <b><c>4</c></b> (north),  and <b><c>56</c></b> (single airstrip blip) will cause your game to crash if you have map legends  enabled while viewing the map.</remarks>  <remarks>  <b>Map icon styles:</b><br />  <ul>  <li><b><c>0 MAPICON_LOCAL</c></b> - close proximity only</li>  <li><b><c>1 MAPICON_GLOBAL</c></b> - show on radar edge as long as in range</li>  <li><b><c>2 MAPICON_LOCAL_CHECKPOINT</c></b> - Close proximity only (with checkpoint)</li>  <li><b><c>3 MAPICON_GLOBAL_CHECKPOINT</c></b> - Show on radar edge as long as in range (with  checkpoint)</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  Player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerMarkerForPlayer" syntax="SetPlayerMarkerForPlayer(playerid, targetid, colour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="RmInvis"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_hideradar"/>
			<referrer name="cmd_showradar"/>
			<referrer name="cmd_cloak"/>
			<referrer name="cmd_uncloak"/>
			<param name="playerid">
				The player that will see the player's changed blip/nametag colour
			</param>
			<param name="targetid">
				The player whose colour will be changed
			</param>
			<param name="colour">
				New colour. (<b>RGBA</b>)
			</param>
			<library>omp_player</library>  <summary>Change the colour of a player's <b>nametag</b> and <b>radar blip</b> for another player.</summary>        <seealso name="ShowPlayerMarkers" />  <seealso name="LimitPlayerMarkerRadius" />  <seealso name="SetPlayerColor" />  <seealso name="ShowPlayerNameTagForPlayer" />  <seealso name="GetPlayerMarkerForPlayer" /> 
		</member>
		<member name="M:SetPlayerMinigame" syntax="SetPlayerMinigame(playerid, value)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_dmq"/>
			<referrer name="dmq"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_Exit"/>
			<referrer name="DeleteTextTT"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:SetPlayerName" syntax="SetPlayerName(playerid, name[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_setname"/>
			<param name="playerid">
				The ID of the player to set the name of
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name to set.  Must be 1-24 characters long and only contain valid characters  (<b>0-9</b>, <b>a-z</b>, <b>A-z</b>, <b>[]</b>, <b>()</b>, <b>$</b>, <b>@</b>, <b>.</b>, <b>_</b>,  <b>=</b>)
			</param>
			<library>omp_player</library>  <summary>Sets the name of a player.</summary>      <seealso name="GetPlayerName" />  <remarks>Changing the players' name to the same name but with different character cases (e.g. "John"  to "JOHN") will not work. </remarks>  <remarks>If used in <a href="#OnPlayerConnect">OnPlayerConnect</a>, the new name will <b>not</b>  be shown for the connecting player. </remarks>  <remarks>Passing a null string as the new name will crash the server. </remarks>  <remarks>Player names can be up to 24 characters when using this function, but when joining the server  from the server browser, players' names must be no more than 20 and less than 3 characters  (the server will deny entry).  This allows for 4 characters extra when using <a href="#SetPlayerName">SetPlayerName</a>.  </remarks>  <returns>  <b><c>1</c></b> The name was changed successfully.<br />  <b><c>0</c></b> The player already has that name.<br />  <b><c>-1</c></b> The name can not be changed (it's already in use, too long or has invalid characters).  </returns> 
		</member>
		<member name="M:SetPlayerObjectMaterial" syntax="SetPlayerObjectMaterial(playerid, objectid, materialIndex, modelid, textureLibrary[], textureName[], materialColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The ID of the player the object is associated to
			</param>
			<param name="objectid">
				The ID of the object to replace the texture of
			</param>
			<param name="materialIndex">
				The material index on the object to change (<b><c>0</c></b> to <b><c>15</c></b>)
			</param>
			<param name="modelid">
				The modelid on which replacement texture is located.  Use <b><c>0</c></b> for  alpha.  Use <b><c>-1</c></b> to change the material colour without altering the existing texture
			</param>
			<param name="textureLibrary">
				<paraminfo> [] </paraminfo>
				The name of the txd file which contains the replacement texture (use  <b><c>"none"</c></b> if not required)
			</param>
			<param name="textureName">
				<paraminfo> [] </paraminfo>
				The name of the texture to use as the replacement (use <b><c>"none"</c></b>  if not required)
			</param>
			<param name="materialColour">
				The object colour to set (<b>ARGB</b>).  Using <b><c>0</c></b> keeps  the existing material colour (optional=<b><c>0</c></b>)
			</param>
			<library>omp_object</library>  <summary>Replace the texture of a player-object with the texture from another model in the game.</summary>                <seealso name="SetObjectMaterial" />  <seealso name="SetPlayerObjectMaterialText" />  <remarks>Vertex lightning of the object will disappear if material colour is changed.</remarks> 
		</member>
		<member name="M:SetPlayerPos" syntax="SetPlayerPos(playerid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_ttp"/>
			<referrer name="cmd_ammo2"/>
			<referrer name="cmd_playduel"/>
			<referrer name="cmd_dm"/>
			<referrer name="Duel_SetPlayerPos"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_parajump3"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_startctf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_giftbox"/>
			<referrer name="cmd_airdrop"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_base"/>
			<referrer name="cmd_base2"/>
			<referrer name="cmd_base3"/>
			<referrer name="cmd_hideout"/>
			<referrer name="cmd_hideout2"/>
			<referrer name="cmd_hideout3"/>
			<referrer name="cmd_hideout4"/>
			<referrer name="cmd_gotocoords"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_join"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="cmd_tp"/>
			<param name="playerid">
				The ID of the player to set the position of
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to position the player at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to position the player at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to position the player at
			</param>
			<library>omp_player</library>  <summary>Set a player's position.</summary>          <seealso name="SetPlayerPosFindZ" />  <seealso name="SetPlayerFacingAngle" />  <seealso name="GetPlayerPos" />  <seealso name="SetVehiclePos" />  <seealso name="GetVehiclePos" />  <remarks>Using this function on a player in a vehicle will instantly remove them from the vehicle.  Useful for quickly ejecting players.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerRaceCheckpoint" syntax="SetPlayerRaceCheckpoint(playerid, type, centreX, centreY, centreZ, nextX, nextY, nextZ, radius)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_join"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRace"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
			<referrer name="GoGoRace"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="playerid">
				The ID of the player to set the checkpoint for
			</param>
			<param name="type">
				<paraminfo>t_CP_TYPE </paraminfo>
				Type of checkpoint. <b><c>0</c></b>-Normal, <b><c>1</c></b>-Finish, <b><c>2</c></b>-Nothing(Only  the checkpoint without anything on it), <b><c>3</c></b>-Air normal, <b><c>4</c></b>-Air finish, <b><c>5</c></b>-Air  (rotates and stops), <b><c>6</c></b>-Air (increases, decreases and disappears), <b><c>7</c></b>-Air  (swings down and up), <b><c>8</c></b>-Air (swings up and down)
			</param>
			<param name="centreX">
				<paraminfo>Float </paraminfo>
				x-Coordinate
			</param>
			<param name="centreY">
				<paraminfo>Float </paraminfo>
				y-Coordinate
			</param>
			<param name="centreZ">
				<paraminfo>Float </paraminfo>
				z-Coordinate
			</param>
			<param name="nextX">
				<paraminfo>Float </paraminfo>
				x-Coordinate of the next point, for the arrow facing direction
			</param>
			<param name="nextY">
				<paraminfo>Float </paraminfo>
				y-Coordinate of the next point, for the arrow facing direction
			</param>
			<param name="nextZ">
				<paraminfo>Float </paraminfo>
				z-Coordinate of the next point, for the arrow facing direction
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				Radius of the checkpoint
			</param>
			<library>omp_checkpoint</library>  <summary>Creates a race checkpoint.  When the player enters it, the <a href="#OnPlayerEnterRaceCheckpoint">OnPlayerEnterRaceCheckpoint</a>  callback is called.</summary>                    <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <remarks>If a race checkpoint is already set it will use the radius of that checkpoint instead of the  new one. </remarks>  <remarks>  Race checkpoints created on server-created objects (<a href="#CreateObject">CreateObject</a>/<a  href="#CreatePlayerObject">CreatePlayerObject</a>) will appear down on the 'real' ground, but will  still function correctly.<br />  Race checkpoints are asynchronous, meaning only one can be shown at a time.  To 'stream' race checkpoints  (only show them when players are close enough), use a race checkpoint streamer.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerScore" syntax="SetPlayerScore(playerid, score)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="Login"/>
			<referrer name="cmd_setplayerkills"/>
			<param name="playerid">
				The ID of the player to set the score of
			</param>
			<param name="score">
				The value to set the player's score to
			</param>
			<library>omp_player</library>  <summary>Set a player's score.  Players' scores are shown in the scoreboard (shown by holding the  TAB key).</summary>      <seealso name="GetPlayerScore" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerSkin" syntax="SetPlayerSkin(playerid, skinid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_skin"/>
			<param name="playerid">
				The ID of the player to set the skin of
			</param>
			<param name="skinid">
				The <a href="http://wiki.sa-mp.com/wiki/Skins">skin</a> the player should use
			</param>
			<library>omp_player</library>  <summary>Set the skin of a player.  A player's skin is their character model.</summary>      <seealso name="GetPlayerSkin" />  <seealso name="SetSpawnInfo" />  <remarks>If a player's skin is set when they are crouching, in a vehicle, or performing certain animations,  they will become frozen or otherwise glitched.  This can be fixed by using  <a href="#TogglePlayerControllable">TogglePlayerControllable</a>.  Players can be detected as being crouched through <a href="#GetPlayerSpecialAction">GetPlayerSpecialAction</a>  (<b><c>SPECIAL_ACTION_DUCK</c></b>).</remarks>  <remarks>Setting a player's skin when he is dead may crash players around him.</remarks>  <remarks>Note that 'success' is reported even when skin ID is invalid (not <b><c>0</c></b>-<b><c>311</c></b>,  or <b><c>74</c></b>), but the skin will be set to ID <b><c>0</c></b> (CJ).</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.<br  />  </returns> 
		</member>
		<member name="M:SetPlayerSpecialAction" syntax="SetPlayerSpecialAction(playerid, actionid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_beer"/>
			<referrer name="cmd_uncuff"/>
			<referrer name="cmd_cuffme"/>
			<referrer name="cmd_sprunk"/>
			<referrer name="cmd_pee"/>
			<referrer name="cmd_handsup"/>
			<referrer name="cmd_dance"/>
			<referrer name="cmd_dance2"/>
			<referrer name="cmd_dance3"/>
			<referrer name="cmd_dance4"/>
			<referrer name="cmd_givejp"/>
			<referrer name="cmd_jp"/>
			<param name="playerid">
				The player that should perform the action
			</param>
			<param name="actionid">
				<paraminfo>t_SPECIAL_ACTION </paraminfo>
				The action that should be performed
			</param>
			<library>omp_player</library>  <summary>This function allows to set players special action.</summary>      <seealso name="GetPlayerSpecialAction" />  <seealso name="ApplyAnimation" />  <remarks>Removing jetpacks from players by setting their special action to <b><c>0</c></b> causes  the sound to stay until death.</remarks>  <remarks>  <b>Special actions: (marked with * cannot be set)</b><br />  <ul>  <li><b><c>0 - SPECIAL_ACTION_NONE</c></b></li>  <li><b><c>1 - SPECIAL_ACTION_DUCK *</c></b> - Detect if the player is crouching.</li>  <li><b><c>2 - SPECIAL_ACTION_USEJETPACK</c></b></li>  <li><b><c>3 - SPECIAL_ACTION_ENTER_VEHICLE *</c></b> - Detect if the player is entering a vehicle  via an animation.</li>  <li><b><c>4 - SPECIAL_ACTION_EXIT_VEHICLE *</c></b> - Detect if the player is exiting a vehicle  via an animation.</li>  <li><b><c>5 - SPECIAL_ACTION_DANCE1</c></b></li>  <li><b><c>6 - SPECIAL_ACTION_DANCE2</c></b></li>  <li><b><c>7 - SPECIAL_ACTION_DANCE3</c></b></li>  <li><b><c>8 - SPECIAL_ACTION_DANCE4</c></b></li>  <li><b><c>10 - SPECIAL_ACTION_HANDSUP</c></b></li>  <li><b><c>11 - SPECIAL_ACTION_USECELLPHONE</c></b></li>  <li><b><c>12 - SPECIAL_ACTION_SITTING *</c></b></li>  <li><b><c>13 - SPECIAL_ACTION_STOPUSECELLPHONE</c></b></li>  <li><b><c>20 - SPECIAL_ACTION_DRINK_BEER</c></b> - Will increase the player's drunk level when  used</li>  <li><b><c>21 - SPECIAL_ACTION_SMOKE_CIGGY</c></b> - Will give the player a cigar</li>  <li><b><c>22 - SPECIAL_ACTION_DRINK_WINE</c></b> - Will give the player a wine bottle to get  drunk from</li>  <li><b><c>23 - SPECIAL_ACTION_DRINK_SPRUNK</c></b> - Will give the player a sprunk bottle to  drink from</li>  <li><b><c>24 - SPECIAL_ACTION_CUFFED</c></b> - Will force the player in to cuffs (hands are behind  their back) (<b>does not work on CJ skin</b>)</li>  <li><b><c>25 - SPECIAL_ACTION_CARRY</c></b>         - Will apply a 'carrying' animation to the  player and make them unable to sprint, jump or punch (<b>does not work on CJ skin</b>)</li>  <li><b><c>68 - SPECIAL_ACTION_PISSING</c></b> - Will make make the player perform the pissing  animation with visible pee.</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerTeam" syntax="SetPlayerTeam(playerid, teamid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_dm"/>
			<param name="playerid">
				The ID of the player you want to set the team of
			</param>
			<param name="teamid">
				The team to put the player in.  Use <b><c>NO_TEAM</c></b> to remove the player  from any team
			</param>
			<library>omp_player</library>  <summary>Set the team of a player.</summary>      <seealso name="GetPlayerTeam" />  <seealso name="SetTeamCount" />  <seealso name="EnableVehicleFriendlyFire" />  <remarks>Players can not damage/kill players on the same team unless they use a knife to slit their  throat.  Players are also unable to damage vehicles driven by a player from  the same team.  This can be enabled with <a href="#EnableVehicleFriendlyFire">EnableVehicleFriendlyFire</a>.</remarks>  <remarks><b><c>255</c></b> (or <b><c>NO_TEAM</c></b>) is the default team to be able to shoot other  players, not <b><c>0</c></b>.</remarks> 
		</member>
		<member name="M:SetPlayerTime" syntax="SetPlayerTime(playerid, hour, minute)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_night"/>
			<referrer name="cmd_day"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_mytime"/>
			<referrer name="cmd_settime"/>
			<param name="playerid">
				The ID of the player to set the game time of
			</param>
			<param name="hour">
				Hour to set (0-23)
			</param>
			<param name="minute">
				Minutes to set (0-59)
			</param>
			<library>omp_player</library>  <summary>Sets the game time for a player.  If a player's clock is enabled (<a href="#TogglePlayerClock">TogglePlayerClock</a>)  the time displayed by it will update automatically.</summary>        <seealso name="SetWorldTime" />  <seealso name="GetPlayerTime" />  <seealso name="TogglePlayerClock" />  <remarks>Using this function under <a href="#OnPlayerConnect">OnPlayerConnect</a> doesn't work.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerToken" syntax="SetPlayerToken(playerid, value)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Token"/>
			<param name="playerid">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:SetPlayerVelocity" syntax="SetPlayerVelocity(playerid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="MegaJump"/>
			<param name="playerid">
				The player to apply the speed to
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The velocity (speed) on the x axis
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The velocity (speed) on the y axis
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The velocity (speed) on the z axis
			</param>
			<library>omp_player</library>  <summary>Set a player's velocity on the x, y and z axes.</summary>          <seealso name="GetPlayerVelocity" />  <seealso name="SetVehicleVelocity" />  <seealso name="GetVehicleVelocity" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerVirtualWorld" syntax="SetPlayerVirtualWorld(playerid, virtualWorld)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="StopSpec"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_coq"/>
			<referrer name="cmd_diner"/>
			<referrer name="cmd_hell"/>
			<referrer name="cmd_trucking2"/>
			<referrer name="cmd_trucking"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_michelles"/>
			<referrer name="DerbyTimer"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_grenadedm"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_dmq"/>
			<referrer name="dmq"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_sws"/>
			<referrer name="cmd_sumo1"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_startctf"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartCTF"/>
			<referrer name="StartRandomCTF"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_leavetdm"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_base"/>
			<referrer name="cmd_base2"/>
			<referrer name="cmd_base3"/>
			<referrer name="cmd_hideout"/>
			<referrer name="cmd_hideout2"/>
			<referrer name="cmd_hideout3"/>
			<referrer name="cmd_hideout4"/>
			<referrer name="cmd_setplayerworld"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_bptp"/>
			<referrer name="cmd_join"/>
			<referrer name="TT_Exit"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="DriftSave"/>
			<param name="playerid">
				The ID of the player you want to set the virtual world of
			</param>
			<param name="virtualWorld">
				The virtual world ID to put the player in
			</param>
			<library>omp_player</library>  <summary>Set the virtual world of a player.  They can only see other players or vehicles that are  in that same world.</summary>      <seealso name="GetPlayerVirtualWorld" />  <seealso name="SetVehicleVirtualWorld" />  <remarks>The default virtual world is <b><c>0</c></b></remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerWeather" syntax="SetPlayerWeather(playerid, weather)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_myweather"/>
			<referrer name="cmd_join"/>
			<param name="playerid">
				The ID of the player whose weather to set
			</param>
			<param name="weather">
				The <a href="http://wiki.sa-mp.com/wiki/Weatherid">weather</a> to set
			</param>
			<library>omp_player</library>  <summary>Set a player's weather.</summary>      <seealso name="SetWeather" />  <seealso name="SetGravity" />  <remarks>If <a href="#TogglePlayerClock">TogglePlayerClock</a> is enabled, weather will slowly change  over time, instead of changing instantly.</remarks> 
		</member>
		<member name="M:SetPlayerWorldBounds" syntax="SetPlayerWorldBounds(playerid, maxX, minX, maxY, minY)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<param name="playerid">
				The ID of the player to set the world boundaries of
			</param>
			<param name="maxX">
				<paraminfo>Float </paraminfo>
				The maximum x coordinate the player can go to
			</param>
			<param name="minX">
				<paraminfo>Float </paraminfo>
				The minimum x coordinate the player can go to
			</param>
			<param name="maxY">
				<paraminfo>Float </paraminfo>
				The maximum y coordinate the player can go to
			</param>
			<param name="minY">
				<paraminfo>Float </paraminfo>
				The minimum y coordinate the player can go to
			</param>
			<library>omp_player</library>  <summary>Set the world boundaries for a player.  Players can not go out of the boundaries (they will  be pushed back in).</summary>            <seealso name="GangZoneCreate" />  <remarks>This function does not work if used in <a href="#OnPlayerConnect">OnPlayerConnect</a></remarks>  <remarks>A player's world boundaries can be reset by setting them to <b><c>20000.0</c></b>, <b><c>-20000.0</c></b>,  <b><c>20000.0</c></b>, <b><c>-20000.0</c></b>.  These are the default values.</remarks>  <remarks>This function doesn't work in interiors!</remarks> 
		</member>
		<member name="M:SetServerRuleFlags" syntax="SetServerRuleFlags(rule[], flags)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="rule">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="flags">
				<paraminfo>E_SERVER_RULE_FLAGS </paraminfo>
			</param>
			<library>omp_core</library> 
		</member>
		<member name="M:SetSpawnInfo" syntax="SetSpawnInfo(playerid, team, skin, spawnX, spawnY, spawnZ, angle, weapon1, ammo1, weapon2, ammo2, weapon3, ammo3)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<param name="playerid">
				The Playerid of who you want to set the spawn information
			</param>
			<param name="team">
				The Team-ID of the chosen player
			</param>
			<param name="skin">
				The <a href="https://open.mp/docs/scripting/resources/skins">skin</a> which the player  will  spawn with
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate of the player's spawn position
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate of the player's spawn position
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate of the player's spawn position
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The direction in which the player should face after spawning
			</param>
			<param name="weapon1">
				<paraminfo>t_WEAPON </paraminfo>
				The first spawn-<a href="https://open.mp/docs/scripting/resources/weaponids">weapon</a>  for  the player
			</param>
			<param name="ammo1">
				The amount of ammunition for the primary spawnweapon
			</param>
			<param name="weapon2">
				<paraminfo>t_WEAPON </paraminfo>
				The second spawn-<a href="https://open.mp/docs/scripting/resources/weaponids">weapon</a>  for  the player
			</param>
			<param name="ammo2">
				The amount of ammunition for the second spawnweapon
			</param>
			<param name="weapon3">
				<paraminfo>t_WEAPON </paraminfo>
				The third spawn-<a href="https://open.mp/docs/scripting/resources/weaponids">weapon</a>  for  the player
			</param>
			<param name="ammo3">
				The amount of ammunition for the third spawnweapon
			</param>
			<library>omp_class</library>  <summary>This function can be used to change the spawn information of a specific player.  It allows  you to automatically set someone's spawn weapons, their team, skin and spawn position, normally used  in case of minigames or automatic-spawn systems.</summary>                            <seealso name="SetPlayerSkin" />  <seealso name="SetPlayerTeam" />  <seealso name="SpawnPlayer" /> 
		</member>
		<member name="M:SetTeamCount" syntax="SetTeamCount(count)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="count">
				Number of teams the gamemode knows
			</param>
			<library>omp_class</library>  <summary>This function is used to change the amount of teams used in the gamemode.  It has no obvious  way of being used, but can help to indicate the number of teams used for better (more effective)  internal handling.  This function should only be used in the <a href="#OnGameModeInit">OnGameModeInit</a>  callback.  Important: You can pass 2 billion here if you like, this function has no effect at all.</summary>    <seealso name="GetPlayerTeam" />  <seealso name="SetPlayerTeam" /> 
		</member>
		<member name="M:SetTimer" syntax="SetTimer(functionName[], interval, repeating)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="countdown"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_startctf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_countdown"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="GoGoRace"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="functionName">
				<paraminfo> [] </paraminfo>
				Name of the function to call as a string.  This must be a public function  (forwarded).  A null string here will crash the server
			</param>
			<param name="interval">
				Interval in milliseconds
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
				Whether the timer should repeat or not
			</param>
			<library>omp_core</library>  <summary>Sets a 'timer' to call a function after some time.  Can be set to repeat.</summary>        <seealso name="SetTimerEx" />  <seealso name="KillTimer" />  <remarks>Timer intervals are not accurate (roughly 25% off).  There's a fix available  <a href="http://forum.sa-mp.com/showthread.php?t=289675">here</a>.  </remarks>  <remarks>Timer IDs are never used twice.  You can use <a href="#KillTimer">KillTimer</a> on a timer  ID and it won't matter if it's running or not. </remarks>  <remarks>The function that should be called must be public. </remarks>  <remarks>The use of many timers will result in increased memory/cpu usage. </remarks>  <returns>The ID of the timer that was started.  Timer IDs start at <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:SetTimerAddr" syntax="SetTimerAddr(addr, time, repeat)">
			<stacksize value="7"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<dependency name="SetTimerEx"/>
			<dependency name="YSI_gcI"/>
			<dependency name="YSI_gscTimerStub"/>
			<param name="addr">
			</param>
			<param name="time">
			</param>
			<param name="repeat">
				<paraminfo>bool </paraminfo>
			</param>
			<library>y_samp_natives</library>  <remarks>  <c>SetTimer</c> version that takes function addresses, not names.  </remarks> 
		</member>
		<member name="M:SetTimerEx" syntax="SetTimerEx(functionName[], interval, repeating, specifiers[], ...)">
			<attribute name="native"/>
			<referrer name="SetTimerAddr"/>
			<referrer name="SetTimerExAddr"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="LooseWeapons"/>
			<referrer name="countdownr"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="cmd_playduel"/>
			<referrer name="cmd_duel"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="cmd_detonate"/>
			<referrer name="cmd_ctf"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="TT_Announcement"/>
			<referrer name="TT_StartRaceCD"/>
			<referrer name="TT_StartRace"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="Kick2"/>
			<referrer name="BanEx2"/>
			<referrer name="SendInfoText"/>
			<referrer name="Drift"/>
			<referrer name="CheckPlayerState"/>
			<param name="functionName">
				<paraminfo> [] </paraminfo>
				The name of a public function to call when the timer expires
			</param>
			<param name="interval">
				Interval in milliseconds
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
				Whether the timer should be called repeatedly (can only be stopped with <a  href="#KillTimer">KillTimer</a>) or only once
			</param>
			<param name="specifiers">
				<paraminfo> [] </paraminfo>
				Special format indicating the types of values the timer will pass
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
				Indefinite number of arguments to pass (must follow format specified in previous parameter)
			</param>
			<library>omp_core</library>  <summary>Sets a timer to call a function after the specified interval.  This variant ('Ex') can pass  parameters (such as a player ID) to the function.</summary>            <seealso name="SetTimer" />  <seealso name="KillTimer" />  <seealso name="CallLocalFunction" />  <seealso name="CallRemoteFunction" />  <remarks>Timer intervals are not accurate (roughly 25% off).  There's a fix available  <a href="http://forum.sa-mp.com/showthread.php?t=289675">here</a>.  </remarks>  <remarks>Timer IDs are never used twice.  You can use KillTimer() on a timer ID and it won't matter  if it's running or not. </remarks>  <remarks>The function that should be called must be public. </remarks>  <remarks>The use of many timers will result in increased memory/cpu usage. </remarks>  <remarks>  <b>Specifier syntax:</b><br />  <ul>  <li><b><c>i</c></b> - integer</li>  <li><b><c>d</c></b> - integer</li>  <li><b><c>a</c></b> - array The next parameter must be an integer (<b><c>"i"</c></b>) with the  array's size</li>  <li><b><c>s</c></b> - string</li>  <li><b><c>f</c></b> - float</li>  <li><b><c>b</c></b> - boolean</li>  </ul>  </remarks>  <returns>The ID of the timer that was started.  Timer IDs start at <b><c>1</c></b> and are never  reused.  There are no internal checks to verify that the parameters passed are valid (e.g.  duration  not a minus value).</returns> 
		</member>
		<member name="M:SetTimerExAddr" syntax="SetTimerExAddr(dummy__, time, repeat, fmt[], addr, ...)">
			<stacksize value="5"/>
			<referrer name="OnPlayerConnect"/>
			<dependency name="I@"/>
			<dependency name="Q@"/>
			<dependency name="SetTimerEx"/>
			<dependency name="YSI_gscTimerStub"/>
			<dependency name="__frm"/>
			<dependency name="strcat"/>
			<param name="dummy__">
			</param>
			<param name="time">
			</param>
			<param name="repeat">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="fmt">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addr">
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_samp_natives</library>  <remarks>  <c>SetTimerEx</c> version that takes function addresses, not names.  </remarks> 
		</member>
		<member name="M:SetToken" syntax="SetToken(playerid, token)">
			<stacksize value="1"/>
			<referrer name="cmd_settoken"/>
			<referrer name="cmd_buytokens"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Token"/>
			<param name="playerid">
			</param>
			<param name="token">
			</param>
		</member>
		<member name="M:SetUP_TT" syntax="SetUP_TT(playerid, raceID)">
			<stacksize value="637"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TT_CPSize"/>
			<dependency name="TT_ID"/>
			<dependency name="TT_Initization"/>
			<dependency name="TT_LoadCheckpoints"/>
			<dependency name="__R_Name"/>
			<dependency name="__R_Name"/>
			<dependency name="__TotalCP"/>
			<dependency name="__VehicleID"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="playerid">
			</param>
			<param name="raceID">
			</param>
		</member>
		<member name="M:SetVehicleAngularVelocity" syntax="SetVehicleAngularVelocity(vehicleid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_spinvehicle"/>
			<referrer name="cmd_spinvehiclex"/>
			<referrer name="cmd_spinvehicley"/>
			<referrer name="cmd_spinvehiclez"/>
			<referrer name="_B@Action"/>
			<param name="vehicleid">
				The ID of the vehicle to set the velocity of
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The amount of velocity in the angular x direction
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The amount of velocity in the angular y direction 
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The amount of velocity in the angular z direction
			</param>
			<library>omp_vehicle</library>  <summary>Sets the angular x, y and z velocity of a vehicle.</summary>          <seealso name="SetVehicleVelocity" />  <seealso name="GetVehicleVelocity" />  <remarks>This function has no effect on un-occupied vehicles and does not effect trains.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleBeenOccupied" syntax="SetVehicleBeenOccupied(vehicleid, occupied)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="occupied">
				<paraminfo>bool </paraminfo>
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SetVehicleDead" syntax="SetVehicleDead(vehicleid, dead)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="dead">
				<paraminfo>bool </paraminfo>
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SetVehicleHealth" syntax="SetVehicleHealth(vehicleid, health)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="PGodTimer"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_fix"/>
			<referrer name="cmd_af"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="_B@Action"/>
			<param name="vehicleid">
				The ID of the vehicle to set the health of
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
				The health, given as a float value
			</param>
			<library>omp_vehicle</library>  <summary>Set a vehicle's health.  When a vehicle's health decreases the engine will produce smoke,  and finally fire when it decreases to less than 250 (25%).</summary>      <seealso name="GetVehicleHealth" />  <seealso name="RepairVehicle" />  <seealso name="SetPlayerHealth" />  <seealso name="OnVehicleDeath" />  <remarks>Full vehicle health is <b><c>1000</c></b>, however higher values are possible and increase  the health of the vehicle.</remarks>  <remarks>  <b>Health:</b><br />  <ul>  <li>&gt; 650 - undamaged</li>  <li>650-550 - white Smoke</li>  <li>550-390 - grey Smoke</li>  <li>390-250 - black Smoke</li>  <li>&lt; 250 - on fire (will explode seconds later)</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleNumberPlate" syntax="SetVehicleNumberPlate(vehicleid, numberPlate[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_plate"/>
			<param name="vehicleid">
				The ID of the vehicle to set the number plate of
			</param>
			<param name="numberPlate">
				<paraminfo> [] </paraminfo>
				The text that should be displayed on the number plate
			</param>
			<library>omp_vehicle</library>  <summary>Set a vehicle numberPlate.</summary>      <seealso name="SetVehicleToRespawn" />  <seealso name="ChangeVehicleColours" />  <seealso name="ChangeVehiclePaintjob" />  <remarks>You can use colour embedding on the number plate text.</remarks>  <remarks>  This function has no internal error checking.  Do not assign custom number plates to vehicles without  plates (boats, planes, etc) as this will result in some unneeded processing time on the client.<br  />  The vehicle must be re-spawned or re-streamed for the changes to take effect.<br />  There's a limit of 32 characters on each number plate (including embedded colours).<br />  The text length that can be seen on the number plate is around 9 to 10 characters, more characters  will cause the text to split.<br />  Some vehicle models has a backward number plate, e.g.  Boxville (498) (as an alternative to this  vehicle you can use vehicle model ID 609, which is a duplicated Boxville (aka Boxburg), but with  a regular number plate).<br />  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.<br />  </returns> 
		</member>
		<member name="M:SetVehicleOccupiedTick" syntax="SetVehicleOccupiedTick(vehicleid, ticks)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="ticks">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SetVehicleParamsEx" syntax="SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="cmd_alarm"/>
			<referrer name="cmd_boot"/>
			<referrer name="cmd_bonnet"/>
			<referrer name="cmd_engine"/>
			<referrer name="cmd_doors"/>
			<referrer name="cmd_lights"/>
			<referrer name="cmd_lock"/>
			<referrer name="cmd_unlock"/>
			<param name="vehicleid">
				The ID of the vehicle to set the parameters of
			</param>
			<param name="engine">
				<paraminfo>bool </paraminfo>
				Engine status. <b><c>0</c></b> - Off, <b><c>1</c></b> - On
			</param>
			<param name="lights">
				<paraminfo>bool </paraminfo>
				Light status. <b><c>0</c></b> - Off, <b><c>1</c></b> - On
			</param>
			<param name="alarm">
				<paraminfo>bool </paraminfo>
				Vehicle alarm status.  If on, the alarm starts. <b><c>0</c></b> - Off, <b><c>1</c></b>  - On
			</param>
			<param name="doors">
				<paraminfo>bool </paraminfo>
				Door lock status. <b><c>0</c></b> - Unlocked, <b><c>1</c></b> - Locked
			</param>
			<param name="bonnet">
				<paraminfo>bool </paraminfo>
				Bonnet (hood) status. <b><c>0</c></b> - Closed, <b><c>1</c></b> - Open
			</param>
			<param name="boot">
				<paraminfo>bool </paraminfo>
				Boot/trunk status. <b><c>0</c></b> - Closed, <b><c>1</c></b> - Open
			</param>
			<param name="objective">
				<paraminfo>bool </paraminfo>
				Toggle the objective arrow above the vehicle. <b><c>0</c></b> - Off, <b><c>1</c></b>  - On
			</param>
			<library>omp_vehicle</library>  <summary>Sets a vehicle's parameters for all players.</summary>                  <seealso name="GetVehicleParamsEx" />  <seealso name="SetVehicleParamsForPlayer" />  <seealso name="UpdateVehicleDamageStatus" />  <remarks>The alarm will not reset when finished, you'll need to reset it by yourself with this function.  </remarks>  <remarks>Lights also operate during the day (Only when <a href="#ManualVehicleEngineAndLights">ManualVehicleEngineAndLights</a>  is enabled). </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehiclePos" syntax="SetVehiclePos(vehicleid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="RaceVehicle"/>
			<referrer name="cmd_tp"/>
			<param name="vehicleid">
				Vehicle ID that you want set new position
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to position the vehicle at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to position the vehicle at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to position the vehicle at
			</param>
			<library>omp_vehicle</library>  <summary>Set a vehicle's position.</summary>          <seealso name="SetPlayerPos" />  <seealso name="GetVehiclePos" />  <seealso name="SetVehicleZAngle" />  <remarks>An empty vehicle will not fall after being teleported into the air.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleRespawnTick" syntax="SetVehicleRespawnTick(vehicleid, ticks)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="ticks">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SetVehicleToRespawn" syntax="SetVehicleToRespawn(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_plate"/>
			<referrer name="cmd_rasv"/>
			<referrer name="DestroyVehicleEx"/>
			<param name="vehicleid">
				The ID of the vehicle to respawn
			</param>
			<library>omp_vehicle</library>  <summary>Sets a vehicle back to the position at where it was created.</summary>    <seealso name="CreateVehicle" />  <seealso name="DestroyVehicle" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleVelocity" syntax="SetVehicleVelocity(vehicleid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_launcher"/>
			<referrer name="_B@Action"/>
			<param name="vehicleid">
				The ID of the vehicle to set the velocity of
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The velocity in the x direction
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The velocity in the y direction 
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The velocity in the z direction
			</param>
			<library>omp_vehicle</library>  <summary>Sets the x, y and z velocity of a vehicle.</summary>          <remarks>This function has no affect on un-occupied vehicles and does not affect trains.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleVirtualWorld" syntax="SetVehicleVirtualWorld(vehicleid, virtualWorld)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_rasv"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_Exit"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="DriftSave"/>
			<param name="vehicleid">
				The ID of vehicle to set the virtual world of
			</param>
			<param name="virtualWorld">
				The ID of the virtual world to put the vehicle in
			</param>
			<library>omp_vehicle</library>  <summary>Sets the 'virtual world' of a vehicle.  Players will only be able to see vehicles in their  own virtual world.</summary>      <seealso name="GetVehicleVirtualWorld" />  <seealso name="SetPlayerVirtualWorld" /> 
		</member>
		<member name="M:SetVehicleZAngle" syntax="SetVehicleZAngle(vehicleid, angle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_rv"/>
			<referrer name="GotoPosition"/>
			<referrer name="cmd_callcar"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRaceCD"/>
			<referrer name="RaceVehicle"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="cmd_tp"/>
			<referrer name="_B@Action"/>
			<referrer name="StuntTele"/>
			<param name="vehicleid">
				The ID of the vehicle to set the rotation of
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The z angle to set
			</param>
			<library>omp_vehicle</library>  <summary>Set the z rotation (yaw) of a vehicle.</summary>      <seealso name="GetVehicleZAngle" />  <seealso name="SetVehiclePos" />  <remarks>A vehicle's x and y (pitch and roll) rotation will be reset when this function is used.  The x and y rotations can not be set.</remarks>  <remarks>This function does not work on unoccupied vehicles.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:ShowModelSelectionMenu" syntax="ShowModelSelectionMenu(playerid, ListID, header_text[], dialogBGcolor, previewBGcolor, tdSelectionColor)">
			<stacksize value="9"/>
			<referrer name="cmd_skin"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_planes"/>
			<referrer name="cmd_helis"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GetTickCount"/>
			<dependency name="SelectTextDraw"/>
			<dependency name="SetPVarInt"/>
			<dependency name="gBackgroundTextDrawId"/>
			<dependency name="gCancelButtonTextDrawId"/>
			<dependency name="gCurrentPageTextDrawId"/>
			<dependency name="gHeaderTextDrawId"/>
			<dependency name="gLists"/>
			<dependency name="gNextButtonTextDrawId"/>
			<dependency name="gPrevButtonTextDrawId"/>
			<dependency name="mS_CreateCurrentPageTextDraw"/>
			<dependency name="mS_CreatePlayerBGTextDraw"/>
			<dependency name="mS_CreatePlayerDialogButton"/>
			<dependency name="mS_CreatePlayerHeaderTextDraw"/>
			<dependency name="mS_DestroySelectionMenu"/>
			<dependency name="mS_ShowPlayerMPs"/>
			<dependency name="mS_UpdatePageTextDraw"/>
			<param name="playerid">
			</param>
			<param name="ListID">
			</param>
			<param name="header_text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="dialogBGcolor">
			</param>
			<param name="previewBGcolor">
			</param>
			<param name="tdSelectionColor">
			</param>
		</member>
		<member name="M:ShowModelSelectionMenuEx" syntax="ShowModelSelectionMenuEx(playerid, items_array[], item_amount, header_text[], extraid, Xrot, Yrot, Zrot, mZoom, dialogBGcolor, previewBGcolor, tdSelectionColor)">
			<stacksize value="9"/>
			<referrer name="cmd_search"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GetTickCount"/>
			<dependency name="SelectTextDraw"/>
			<dependency name="SetPVarFloat"/>
			<dependency name="SetPVarInt"/>
			<dependency name="gBackgroundTextDrawId"/>
			<dependency name="gCancelButtonTextDrawId"/>
			<dependency name="gCurrentPageTextDrawId"/>
			<dependency name="gCustomList"/>
			<dependency name="gCustomList"/>
			<dependency name="gHeaderTextDrawId"/>
			<dependency name="gNextButtonTextDrawId"/>
			<dependency name="gPrevButtonTextDrawId"/>
			<dependency name="mS_CreateCurrentPageTextDraw"/>
			<dependency name="mS_CreatePlayerBGTextDraw"/>
			<dependency name="mS_CreatePlayerDialogButton"/>
			<dependency name="mS_CreatePlayerHeaderTextDraw"/>
			<dependency name="mS_DestroySelectionMenu"/>
			<dependency name="mS_ShowPlayerMPs"/>
			<dependency name="mS_UpdatePageTextDraw"/>
			<dependency name="print"/>
			<param name="playerid">
			</param>
			<param name="items_array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="item_amount">
			</param>
			<param name="header_text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="extraid">
			</param>
			<param name="Xrot">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Yrot">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Zrot">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mZoom">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="dialogBGcolor">
			</param>
			<param name="previewBGcolor">
			</param>
			<param name="tdSelectionColor">
			</param>
		</member>
		<member name="M:ShowPlayerDialog" syntax="ShowPlayerDialog(playerid, dialogid, style, title[], body[], button1[], button2[], ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="IPInfoDB_Admin"/>
			<referrer name="OnDnsLookup"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_minigames"/>
			<referrer name="cmd_myho"/>
			<referrer name="cmd_boneid"/>
			<referrer name="cmd_hohelp"/>
			<referrer name="cmd_samplehos"/>
			<referrer name="cmd_myprops"/>
			<referrer name="cmd_prophelp"/>
			<referrer name="cmd_eggcmds"/>
			<referrer name="cmd_ammo"/>
			<referrer name="cmd_kb"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_groupmanage"/>
			<referrer name="cmd_whatsnew"/>
			<referrer name="cmd_neon"/>
			<referrer name="cmd_bandana"/>
			<referrer name="cmd_glasses"/>
			<referrer name="cmd_wheels"/>
			<referrer name="cmd_radio"/>
			<referrer name="cmd_tradein"/>
			<referrer name="cmd_topplayers"/>
			<referrer name="cmd_actioncmds"/>
			<referrer name="cmd_mylabel"/>
			<referrer name="cmd_tunemenu"/>
			<referrer name="cmd_npcs"/>
			<referrer name="cmd_rconadmins"/>
			<referrer name="cmd_admins"/>
			<referrer name="cmd_bountylist"/>
			<referrer name="cmd_afklist"/>
			<referrer name="cmd_vips"/>
			<referrer name="cmd_pros"/>
			<referrer name="cmd_teles"/>
			<referrer name="cmd_help"/>
			<referrer name="cmd_imghelp"/>
			<referrer name="cmd_website"/>
			<referrer name="cmd_facebook"/>
			<referrer name="cmd_viphelp"/>
			<referrer name="cmd_donateinfo"/>
			<referrer name="cmd_donate"/>
			<referrer name="cmd_rules"/>
			<referrer name="cmd_frr"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_boats"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_cmds"/>
			<referrer name="cmd_animhelp"/>
			<referrer name="cmd_colors"/>
			<referrer name="cmd_vipcmds"/>
			<referrer name="cmd_stunts"/>
			<referrer name="cmd_stunts2"/>
			<referrer name="cmd_credits"/>
			<referrer name="cmd_racehelp"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_fs"/>
			<referrer name="cmd_rank"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_racerules"/>
			<referrer name="cmd_ctfhelp"/>
			<referrer name="cmd_survival"/>
			<referrer name="cmd_survivalhelp"/>
			<referrer name="cmd_smenu"/>
			<referrer name="cmd_event"/>
			<referrer name="cmd_event2"/>
			<referrer name="cmd_derbyhelp"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_objhelp"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_camo"/>
			<referrer name="cmd_damo"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_controlpanel"/>
			<referrer name="cmd_changeevadeaction"/>
			<referrer name="cmd_toggleadminmessages"/>
			<referrer name="cmd_readpms"/>
			<referrer name="cmd_readteles"/>
			<referrer name="cmd_toggleiplookups"/>
			<referrer name="cmd_toggleautogodmode"/>
			<referrer name="cmd_adminsettings"/>
			<referrer name="cmd_tdmhelp"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_irc"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_unbanlast"/>
			<referrer name="cmd_token"/>
			<referrer name="cmd_thelp"/>
			<referrer name="cmd_tt"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="cmd_gamestats"/>
			<referrer name="EasterEggPickup"/>
			<param name="playerid">
				The ID of the player to show the dialog to
			</param>
			<param name="dialogid">
				An ID to assign this dialog to, so responses can be processed.  Max dialogid  is <b><c>32767</c></b>.  Using negative values will close any open dialog
			</param>
			<param name="style">
				<paraminfo>t_DIALOG_STYLE </paraminfo>
				The style of the dialog
			</param>
			<param name="title">
				<paraminfo> [] </paraminfo>
				The title at the top of the dialog.  The length of the title can not exceed  more than 64 characters before it starts to cut off
			</param>
			<param name="body">
				<paraminfo> [] </paraminfo>
				The text to display in the main dialog.  Use <b><c>\n</c></b> to start a new line  and <b><c>\t</c></b> to tabulate.  May be optionally formatted.
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
				The text on the left button
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
				The text on the right button.  Leave it blank ( "" ) to hide it
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_dialog</library>  <summary>Shows the player a synchronous (only one at a time) dialog box.</summary>                <seealso name="TextDrawShowForPlayer" />  <seealso name="OnDialogResponse" />  <remarks>Use colour embedding for multiple colours in the text. </remarks>  <remarks>Using <b><c>-1</c></b> as dialogid closes all dialogs currently shown on the client's screen.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.<br />  </returns> 
		</member>
		<member name="M:ShowPlayerNameTagForPlayer" syntax="ShowPlayerNameTagForPlayer(playerid, targetid, show)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Duel_Initiate"/>
			<param name="playerid">
				Player who will see the results of this function
			</param>
			<param name="targetid">
				Player whose name tag will be shown or hidden
			</param>
			<param name="show">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b>-show name tag, <b><c>0</c></b>-hide name tag
			</param>
			<library>omp_player</library>  <summary>This functions allows you to toggle the drawing of player nametags, healthbars and armor  bars which display above their head.  For use of a similar function like this on a global level,  <a href="#ShowNameTags">ShowNameTags</a> function.</summary>        <seealso name="ShowNameTags" />  <seealso name="DisableNameTagLOS" />  <seealso name="SetPlayerMarkerForPlayer" />  <remarks><a href="#ShowNameTags">ShowNameTags</a> must be set to <b><c>1</c></b> to be able to show  name tags with ShowPlayerNameTagForPlayer, that means that in order to be effective you need to <c>ShowPlayerNameTagForPlayer(forplayerid,  playerid, 0)</c> ahead of time(<a href="#OnPlayerStreamIn">OnPlayerStreamIn</a> is a good spot).</remarks> 
		</member>
		<member name="M:ShowVehicle" syntax="ShowVehicle(vehicleid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SkipWhitespace" syntax="SkipWhitespace(str[], pos)">
			<stacksize value="4"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to skip over part of.
			</param>
			<param name="pos">
				The start of the whitespace.
			</param>
			<library>y_utils - strings</library>      <returns>  The end of the whitespace.  </returns>  <remarks>  Doesn't skip over NULL terminators.  </remarks> 
		</member>
		<member name="M:SpawnPlayer" syntax="SpawnPlayer(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Unjailplayer_Timer"/>
			<referrer name="cmd_leaveptp"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dmq"/>
			<referrer name="dmq"/>
			<referrer name="Duel_End"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="CTFTimeout"/>
			<referrer name="cmd_closectf"/>
			<referrer name="cmd_unloadderby"/>
			<referrer name="cmd_leavetdm"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_specoff"/>
			<param name="playerid">
				The ID of the player to spawn
			</param>
			<library>omp_class</library>  <summary>(Re)Spawns a player.</summary>    <seealso name="SetSpawnInfo" />  <seealso name="AddPlayerClass" />  <seealso name="OnPlayerSpawn" />  <remarks>Kills the player if they are in a vehicle and then they spawn with a bottle in their hand.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SpawnVehicle" syntax="SpawnVehicle(playerid, model)">
			<stacksize value="13"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRace"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AngleToPoint"/>
			<dependency name="ChangeVehicleColours"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TTcar"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
			<param name="model">
			</param>
		</member>
		<member name="M:StartCTF" syntax="StartCTF()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="ActiveCTF"/>
			<dependency name="CTFInterior"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="CTFSpawn"/>
			<dependency name="CTFToken"/>
			<dependency name="CTF_Flags"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="ctfflags"/>
			<dependency name="false"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartDerby" syntax="StartDerby()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ActiveDerby"/>
			<dependency name="DerbyLoaded"/>
			<dependency name="DerbyPlayers"/>
			<dependency name="DerbyVehicle"/>
			<dependency name="DestroyDerbyObjects"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="WEAPON_TEC9"/>
			<dependency name="autofix"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:StartRace" syntax="StartRace()">
			<attribute name="public"/>
			<stacksize value="309"/>
			<referrer name="cmd_race"/>
			<dependency name="CPs"/>
			<dependency name="CPs"/>
			<dependency name="CPsize"/>
			<dependency name="RCreator"/>
			<dependency name="R_Interior"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceDetails"/>
			<dependency name="Race_Rotation"/>
			<dependency name="RecordName"/>
			<dependency name="RecordName"/>
			<dependency name="RecordTime"/>
			<dependency name="RecordVehicle"/>
			<dependency name="RecordVehicle"/>
			<dependency name="SQL"/>
			<dependency name="TotalCP"/>
			<dependency name="VehicleID"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="isRecordEmpty"/>
			<dependency name="mysql_query"/>
			<dependency name="rID"/>
			<dependency name="true"/>
		</member>
		<member name="M:StartRandomCTF" syntax="StartRandomCTF(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="ActiveCTF"/>
			<dependency name="CTFInterior"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="CTFSpawn"/>
			<dependency name="CTFToken"/>
			<dependency name="CTF_Flags"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="ctfflags"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StartRecordingPlayerData" syntax="StartRecordingPlayerData(playerid, recordType, recordFile[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player to record
			</param>
			<param name="recordType">
				<paraminfo>t_PLAYER_RECORDING_TYPE </paraminfo>
				The type of recording
			</param>
			<param name="recordFile">
				<paraminfo> [] </paraminfo>
				The name of the file which will hold the recorded data.  It will be saved  in the scriptfiles directory, with an automatically added .rec extension, you will need to move the  file to npcmodes/recordings to use for playback
			</param>
			<library>omp_player</library>  <summary>Starts recording a player's movements to a file, which can then be reproduced by an NPC.</summary>        <seealso name="StopRecordingPlayerData" /> 
		</member>
		<member name="M:StartSurvival" syntax="StartSurvival()">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="God"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SPoints"/>
			<dependency name="SVLoaded"/>
			<dependency name="SVPlayers"/>
			<dependency name="SVStarted"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gamePickups"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
		</member>
		<member name="M:StopAudioStreamForPlayer" syntax="StopAudioStreamForPlayer(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_stopradio"/>
			<referrer name="cmd_stopaudioall"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="playerid">
				The player you want to stop the audio stream for
			</param>
			<library>omp_player</library>  <summary>Stops the current audio stream for a player.</summary>    <seealso name="PlayAudioStreamForPlayer" />  <seealso name="PlayerPlaySound" /> 
		</member>
		<member name="M:StopRecordingPlayerData" syntax="StopRecordingPlayerData(playerid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="playerid">
				The player you want to stop the recordings of
			</param>
			<library>omp_player</library>  <summary>Stops all the recordings that had been started with <a href="#StartRecordingPlayerData">StartRecordingPlayerData</a>  for a specific player.</summary>    <seealso name="StartRecordingPlayerData" /> 
		</member>
		<member name="M:StopSpec" syntax="StopSpec(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="false"/>
			<dependency name="gSpectateID"/>
			<dependency name="gSpectateType"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StrCpy" syntax="StrCpy(dest[], src[], len)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Destination string.
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
				Source string.
			</param>
			<param name="len">
				(Implicit) maximum length of the destination.
			</param>
			<library>y_utils - strings</library>       
		</member>
		<member name="M:StrToLower" syntax="StrToLower(str[], len)">
			<stacksize value="6"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="tolower"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to convert.
			</param>
			<param name="len">
				How much of the string to convert.
			</param>
			<library>y_utils - strings</library>     
		</member>
		<member name="M:StrToUpper" syntax="StrToUpper(str[], len)">
			<stacksize value="6"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="toupper"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to convert.
			</param>
			<param name="len">
				How much of the string to convert.
			</param>
			<library>y_utils - strings</library>     
		</member>
		<member name="M:Streamer_GetIntData" syntax="Streamer_GetIntData(type, id, data)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_eo"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_nso"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dammi"/>
			<referrer name="cmd_damp"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_aotv"/>
			<referrer name="GetTotalCreatedObjects"/>
			<referrer name="GetVIPTotalCreatedObjects"/>
			<referrer name="DestroyDerbyObjects"/>
			<referrer name="cmd_gmlo"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_do"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="data">
			</param>
		</member>
		<member name="M:Streamer_OnItemStreamIn" syntax="Streamer_OnItemStreamIn(type, id, forplayerid)">
			<stacksize value="1"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Streamer_OnItemStreamOut" syntax="Streamer_OnItemStreamOut(type, id, forplayerid)">
			<stacksize value="1"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:Streamer_OnPluginError" syntax="Streamer_OnPluginError(error[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="printfex"/>
			<param name="error">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_SetIntData" syntax="Streamer_SetIntData(type, id, data, value)">
			<attribute name="native"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_do"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="CreateAdminObject"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="data">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Streamer_Update" syntax="Streamer_Update(playerid, type)">
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_east"/>
			<referrer name="cmd_cvondz"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_washplayer"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:Streamer_UpdateEx" syntax="Streamer_UpdateEx(playerid, x, y, z, worldid, interiorid, type, compensatedtime, freezeplayer)">
			<attribute name="native"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="DerbyTimer"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_runwayls"/>
			<referrer name="cmd_runwaylv"/>
			<referrer name="cmd_runwaysf"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_lsajump"/>
			<referrer name="cmd_twister"/>
			<referrer name="cmd_loopstunt"/>
			<referrer name="cmd_jump"/>
			<referrer name="cmd_quarry"/>
			<referrer name="cmd_parkour4"/>
			<referrer name="cmd_parkour5"/>
			<referrer name="cmd_parkour6"/>
			<referrer name="cmd_parkour7"/>
			<referrer name="cmd_parajump1"/>
			<referrer name="cmd_parajump2"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_ph"/>
			<referrer name="cmd_wb"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_docks"/>
			<referrer name="cmd_methlab"/>
			<referrer name="cmd_snakefarm"/>
			<referrer name="cmd_motel"/>
			<referrer name="cmd_gasstation"/>
			<referrer name="cmd_jays"/>
			<referrer name="cmd_gantdiner"/>
			<referrer name="cmd_8track"/>
			<referrer name="cmd_lshospital"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_cityhall"/>
			<referrer name="cmd_datower"/>
			<referrer name="cmd_peckers"/>
			<referrer name="cmd_city"/>
			<referrer name="cmd_city2"/>
			<referrer name="cmd_city3"/>
			<referrer name="cmd_city4"/>
			<referrer name="cmd_city5"/>
			<referrer name="cmd_nrgstunt2"/>
			<referrer name="cmd_driftcity"/>
			<referrer name="cmd_sumo1"/>
			<referrer name="cmd_launcher"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_loopobj"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_vpo"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="type">
			</param>
			<param name="compensatedtime">
			</param>
			<param name="freezeplayer">
			</param>
		</member>
		<member name="M:StringScan" syntax="StringScan(string[], scanchar[])">
			<stacksize value="4"/>
			<dependency name="strlen"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="scanchar">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Strip" syntax="Strip(str[])">
			<stacksize value="9"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellbytes"/>
			<dependency name="cellmin"/>
			<dependency name="memcpy"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the start and end of.
			</param>
			<library>y_utils - strings</library>   
		</member>
		<member name="M:StripL" syntax="StripL(str[])">
			<stacksize value="9"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellbytes"/>
			<dependency name="cellmin"/>
			<dependency name="memcpy"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the start of.
			</param>
			<library>y_utils - strings</library>   
		</member>
		<member name="M:StripNL" syntax="StripNL(str[])">
			<stacksize value="5"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the end of.
			</param>
			<library>y_utils - strings</library>    <remarks>  Updated from old versions, should be more efficient  </remarks> 
		</member>
		<member name="M:StripR" syntax="StripR(str[])">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the end of.
			</param>
			<library>y_utils - strings</library>    <remarks>  Updated from old versions, should be more efficient  </remarks> 
		</member>
		<member name="M:StuntTele" syntax="StuntTele(playerid, x, y, z, a)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_road1"/>
			<referrer name="cmd_road2"/>
			<referrer name="cmd_road3"/>
			<referrer name="cmd_road4"/>
			<referrer name="cmd_parkournrg"/>
			<referrer name="cmd_parkour1"/>
			<referrer name="cmd_parkour2"/>
			<referrer name="cmd_parkour3"/>
			<referrer name="cmd_road5"/>
			<referrer name="cmd_road6"/>
			<referrer name="cmd_road7"/>
			<referrer name="cmd_road8"/>
			<referrer name="cmd_road9"/>
			<referrer name="cmd_road10"/>
			<referrer name="cmd_road11"/>
			<referrer name="cmd_road12"/>
			<referrer name="cmd_road13"/>
			<referrer name="cmd_road14"/>
			<referrer name="cmd_tripzenx1"/>
			<referrer name="cmd_tripzenx2"/>
			<referrer name="cmd_tripzenx3"/>
			<referrer name="cmd_road15"/>
			<referrer name="cmd_lastroad"/>
			<referrer name="cmd_bmxparkour"/>
			<referrer name="cmd_racetrack"/>
			<referrer name="cmd_rcity"/>
			<referrer name="cmd_viphideout"/>
			<referrer name="cmd_sftower"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="a">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Sum" syntax="Sum(arr[], num)">
			<stacksize value="2"/>
			<referrer name="Mean"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need summing.
			</param>
			<param name="num">
				The size of the array.
			</param>
			<library>y_utils - maths</library>      <returns>  All the values in the array added together.  </returns> 
		</member>
		<member name="M:T@" syntax="T@(ret[], ...)">
			<stacksize value="8"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_g_sPropVarArg"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<dependency name="setproperty"/>
			<param name="ret">
				<paraminfo> [144] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_shortfunc</library>  <remarks>  Used in remote function wrappers to put reference parameter retusn in to the  specially named properties (<c>"V" + idx</c> in group 8) for their return.  Also put the true return string in to a property, because remote call order  can't be relied on, and can't return strings even if it could.  </remarks> 
		</member>
		<member name="M:TD_GetPlayerWeaponData" syntax="TD_GetPlayerWeaponData(playerid, classid)">
			<stacksize value="140"/>
			<referrer name="OnPlayerRequestClass"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="WeaponData"/>
			<dependency name="ammo"/>
			<dependency name="ammo"/>
			<dependency name="formatex"/>
			<dependency name="weapons"/>
			<dependency name="weapons"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:TTGetRaceTick" syntax="TTGetRaceTick(playerid)">
			<stacksize value="4"/>
			<referrer name="TTTimeTDUpdate"/>
			<dependency name="GetTickCount"/>
			<dependency name="__RaceTick"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TTTimeTDUpdate" syntax="TTTimeTDUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="31"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<dependency name="TTGetRaceTick"/>
			<dependency name="TT_ID"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="Time18t"/>
			<dependency name="__Timer"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TT_AddTimeToDB" syntax="TT_AddTimeToDB(playerid, id, time3)">
			<stacksize value="335"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="SQL"/>
			<dependency name="TT_Check_IfMadeRecord"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="playerid">
			</param>
			<param name="id">
			</param>
			<param name="time3">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TT_Announcement" syntax="TT_Announcement(playerid, raceid)">
			<stacksize value="680"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="KillTimer"/>
			<dependency name="RaceTime22"/>
			<dependency name="ReturnTime"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TT_ID"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="VehicleNames"/>
			<dependency name="VehicleNames"/>
			<dependency name="__R_Name"/>
			<dependency name="__R_Name"/>
			<dependency name="__VehicleID"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_num_rows"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="ttCD"/>
			<dependency name="tttimer"/>
			<param name="playerid">
			</param>
			<param name="raceid">
			</param>
		</member>
		<member name="M:TT_Check_IfMadeRecord" syntax="TT_Check_IfMadeRecord(playerid, RaceID, racetime)">
			<attribute name="public"/>
			<stacksize value="362"/>
			<referrer name="TT_AddTimeToDB"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerName"/>
			<dependency name="ReturnTime"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__R_Name"/>
			<dependency name="__R_Name"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="RaceID">
			</param>
			<param name="racetime">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TT_ChecknTeleport" syntax="TT_ChecknTeleport(playerid, raceid)">
			<stacksize value="11"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="AngleToPoint"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerRaceCheckpoint"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="SpawnVehicle"/>
			<dependency name="TT_CPSize"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TT_ID"/>
			<dependency name="TTcar"/>
			<dependency name="__VehicleID"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="raceid">
			</param>
		</member>
		<member name="M:TT_Exit" syntax="TT_Exit(playerid)">
			<stacksize value="7"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_tt"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Difft"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="KillTimer"/>
			<dependency name="Positiont"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="TT_ID"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="Time18t"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="__Timer"/>
			<dependency name="true"/>
			<dependency name="tttimer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TT_Initization" syntax="TT_Initization(playerid, RaceVehicle)">
			<stacksize value="1"/>
			<referrer name="SetUP_TT"/>
			<dependency name="__VehicleID"/>
			<param name="playerid">
			</param>
			<param name="RaceVehicle">
			</param>
		</member>
		<member name="M:TT_LoadCheckpoints" syntax="TT_LoadCheckpoints(playerid, nextcheckpointfree, CheckPointX, CheckPointY, CheckPointZ)">
			<stacksize value="1"/>
			<referrer name="SetUP_TT"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TT_Checkpoints"/>
			<param name="playerid">
			</param>
			<param name="nextcheckpointfree">
			</param>
			<param name="CheckPointX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="CheckPointY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="CheckPointZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TT_StartRace" syntax="TT_StartRace(playerid, raceid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="TT_StartRaceCD"/>
			<dependency name="Difft"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetTickCount"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Positiont"/>
			<dependency name="RaceCheckpoint"/>
			<dependency name="SetPlayerRaceCheckpoint"/>
			<dependency name="SetTimerEx"/>
			<dependency name="SpawnVehicle"/>
			<dependency name="TT_CPSize"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="Time18t"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="__RaceTick"/>
			<dependency name="__VehicleID"/>
			<dependency name="true"/>
			<dependency name="tttimer"/>
			<param name="playerid">
			</param>
			<param name="raceid">
			</param>
		</member>
		<member name="M:TT_StartRaceCD" syntax="TT_StartRaceCD(playerid, raceid)">
			<attribute name="public"/>
			<stacksize value="58"/>
			<dependency name="AngleToPoint"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="SetTimerEx"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TT_Checkpoints"/>
			<dependency name="TT_ID"/>
			<dependency name="TT_StartRace"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="ttCD"/>
			<param name="playerid">
			</param>
			<param name="raceid">
			</param>
		</member>
		<member name="M:TakePlayerCash" syntax="TakePlayerCash(playerid, cash)">
			<stacksize value="4"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_deposit"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_buytokens"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="Money"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<param name="playerid">
			</param>
			<param name="cash">
			</param>
		</member>
		<member name="M:TextDrawAlignment" syntax="TextDrawAlignment(textid, alignment)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the alignment of
			</param>
			<param name="alignment">
				<paraminfo>t_TEXT_DRAW_ALIGN </paraminfo>
				<b><c>1</c></b>-left <b><c>2</c></b>-centered <b><c>3</c></b>-right
			</param>
			<library>omp_textdraw</library>  <summary>Set the alignment of text in a text draw.</summary>      <remarks>For alignment <b><c>2</c></b> (center) the x and y values of <a href="#TextSize">TextSize</a>  need to be swapped, see notes at <a href="#TextDrawTextSize">TextDrawTextSize</a>, also position  coordinate become position of center of textdraw and not left/top edges. </remarks> 
		</member>
		<member name="M:TextDrawBackgroundColour" syntax="TextDrawBackgroundColour(textid, backgroundColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the background colour of
			</param>
			<param name="backgroundColour">
				The colour that the textdraw should be set to
			</param>
			<library>omp_textdraw</library>  <summary>Adjusts the text draw area background colour (the outline/shadow - NOT the box.  For box  colour, see <a href="#TextDrawBoxColour">TextDrawBoxColour</a>).</summary>      <remarks>If <a href="#TextDrawSetOutline">TextDrawSetOutline</a> is used with size &gt; <b><c>0</c></b>,  the outline colour will match the colour used in <a href="#TextDrawBackgroundColour">TextDrawBackgroundColour</a>.  Changing the value of colour seems to alter the colour used in <a href="#TextDrawColour">TextDrawColour</a></remarks>  <remarks>If you want to change the background colour of a textdraw that is already shown, you don't  have to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawBoxColour" syntax="TextDrawBoxColour(textid, boxColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="boxColour">
				The colour (<b>RGBA</b>)
			</param>
			<library>omp_textdraw</library>  <summary>Adjusts the text box colour (only used if <a href="#TextDrawUseBox">TextDrawUseBox</a> 'use'  parameter is <b><c>1</c></b>).</summary>      <remarks>If you want to change the boxcolour of a textdraw that is already shown, you don't have  to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawColour" syntax="TextDrawColour(textid, textColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to change the colour of.
			</param>
			<param name="textColour">
				The colour to set the textdraw to
			</param>
			<library>omp_textdraw</library>  <summary>Sets the text colour of a textdraw.</summary>      <remarks>You can also use GameText colours in TextDraws.</remarks>  <remarks>If the TextDraw is already shown, it must be re-shown (<a href="#TextDrawShowForAll">TextDrawShowForAll</a>/<a  href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>) for the changes of this function to take  effect.</remarks> 
		</member>
		<member name="M:TextDrawCreate" syntax="TextDrawCreate(x, y, format[], ...)">
			<tagname value="Text"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="CreateTextTT"/>
			<referrer name="LoadTextDraws"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x (left/right) coordinate to create the textdraw at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y (up/down) coordinate to create the textdraw at
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The text that will appear in the textdraw.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_textdraw</library>  <summary>Creates a textdraw.  Textdraws are, as the name implies, text (mainly - there can be boxes,  sprites and model previews (skins/vehicles/weapons/objects too) that is drawn on a player's screens.</summary>        <remarks>  If you choose values for y that are less than 1, the first text row will be invisible and only  the shadow is visible.<br />  If part of the text is off-screen, the colour of the text will not show, only the shadow (if enabled)  will.  </remarks>  <remarks>  Maximum length of textdraw is <b>800</b> characters.  Longer text will crash the legacy (SA:MP) client  in older  versions.<br />  If you use colour codes (such as <b><c>~R~ ~G~</c></b>) beyond 255th character the legacy (SA:MP) client  will  crash trying to display the textdraw.  </remarks>  <remarks>  The x, y coordinate is the top left coordinate for the text draw area based on a 640x480 "canvas"  (irrespective of screen resolution).  If you plan on using <a href="#TextDrawAlignment">TextDrawAlignment</a>  with alignment <b><c>3</c></b> (right), the x, y coordinate is the top right coordinate for the text  draw.<br />  This function merely CREATES the textdraw, you must use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>  or <a href="#TextDrawShowForAll">TextDrawShowForAll</a> to show it.<br />  It is recommended to use WHOLE numbers instead of decimal positions when creating textdraws to  ensure resolution friendly design.  </remarks>  <remarks>Keyboard key mapping codes (such as <b><c>~k~~VEHICLE_ENTER_EXIT~</c></b> don't work beyond  255th character. </remarks>  <returns>The ID of the created textdraw.  Textdraw IDs start at <b><c>0</c></b>.</returns> 
		</member>
		<member name="M:TextDrawDestroy" syntax="TextDrawDestroy(textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="DeleteTextTT"/>
			<referrer name="DestroyTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to destroy.  Returned by <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>omp_textdraw</library>  <summary>Destroys a previously-created textdraw.</summary>   
		</member>
		<member name="M:TextDrawFont" syntax="TextDrawFont(textid, font)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="CreateTextTT"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="font">
				<paraminfo>t_TEXT_DRAW_FONT </paraminfo>
				There are four font styles, see  <a href="https://open.mp/docs/scripting/functions/TextDrawFont">https://open.mp/docs/scripting/functions/TextDrawFont</a>.  Font value <b><c>4</c></b> specifies that this is a txd sprite; <b><c>5</c></b> specifies that this  textdraw can display preview models.  A font value greater than 5 does not display, and anything  greater than 16 crashes the client
			</param>
			<library>omp_textdraw</library>  <summary>Changes the text font.</summary>      <remarks>If you want to change the font of a textdraw that is already shown, you don't have to recreate  it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/<a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawHideForAll" syntax="TextDrawHideForAll(textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_endrace"/>
			<referrer name="RaceCountDown"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to hide (returned by <a href="#TextDrawCreate">TextDrawCreate</a>)
			</param>
			<library>omp_textdraw</library>  <summary>Hides a text draw for all players.</summary>    <seealso name="TextDrawShowForPlayer" />  <seealso name="TextDrawHideForPlayer" />  <seealso name="TextDrawShowForAll" /> 
		</member>
		<member name="M:TextDrawHideForPlayer" syntax="TextDrawHideForPlayer(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="cmd_trt"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="HideReport"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="TT_Exit"/>
			<referrer name="DriftSave"/>
			<param name="playerid">
				The ID of the player that the textdraw should be hidden for
			</param>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to hide
			</param>
			<library>omp_textdraw</library>  <summary>Hides a textdraw for a specific player.</summary>      <seealso name="TextDrawHideForAll" />  <seealso name="TextDrawShowForPlayer" />  <seealso name="TextDrawShowForAll" /> 
		</member>
		<member name="M:TextDrawLetterSize" syntax="TextDrawLetterSize(textid, width, height)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				Width of a char
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				Height of a char
			</param>
			<library>omp_textdraw</library>  <summary>Sets the width and height of the letters.</summary>        <remarks>When using this function purely for the benefit of affecting the TextDraw box, multiply  'y' by <b><c>0.135</c></b> to convert to <a href="#TextDrawTextSize">TextDrawTextSize</a>-like measurements.  <b>Hint</b>: it is easier and extremely precise to use <b><c>LD_SPAC:white</c></b> sprite for box-only  textdraws, <a href="#TextDrawTextSize">TextDrawTextSize</a> will have regular offsets.</remarks>  <remarks>If you want to change the letter size of a textdraw that is already shown, you don't have  to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible. </remarks>  <remarks>Fonts appear to look the best with an x to y ratio of <b><c>1</c></b> to <b><c>4</c></b>  (e.g.  if x is <b><c>0.5</c></b> then y should be <b><c>2</c></b>). </remarks> 
		</member>
		<member name="M:TextDrawSetOutline" syntax="TextDrawSetOutline(textid, outlineSize)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="CreateTextTT"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the text draw to set the outline thickness of
			</param>
			<param name="outlineSize">
				The thickness of the outline, as an integer. <b><c>0</c></b> for no outline
			</param>
			<library>omp_textdraw</library>  <summary>Sets the thickness of a textdraw's text's outline. <a href="#TextDrawBackgroundColor">TextDrawBackgroundColor</a>  can be used to change the colour.</summary>      <remarks>If you want to change the outline of a textdraw that is already shown, you don't have to  recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/<a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawSetPreviewModel" syntax="TextDrawSetPreviewModel(textid, model)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The textdraw ID that will display the 3D preview
			</param>
			<param name="model">
				The GTA SA or SA:MP model ID to display
			</param>
			<library>omp_textdraw</library>  <summary>Set the model for a textdraw model preview.</summary>      <remarks>The textdraw MUST use the font type <b><c>TEXT_DRAW_FONT_MODEL_PREVIEW</c></b> in order  for this function to have effect.</remarks>  <remarks>Use <a href="#TextDrawBackgroundColor">TextDrawBackgroundColor</a> to set the background  colour behind the model.</remarks> 
		</member>
		<member name="M:TextDrawSetProportional" syntax="TextDrawSetProportional(textid, proportional)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="CreateTextTT"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the proportionality of
			</param>
			<param name="proportional">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable proportionality, <b><c>0</c></b> to disable
			</param>
			<library>omp_textdraw</library>  <summary>Appears to scale text spacing to a proportional ratio.  Useful when using <a href="#TextDrawLetterSize">TextDrawLetterSize</a>  to ensure the text has even character spacing.</summary>      <remarks>Proportionality is set to <b><c>1</c></b> by default, you might skip this function if you  don't want to disable it. </remarks>  <remarks>If you want to change the proportionality of a textdraw that is already shown, you don't  have to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible. </remarks> 
		</member>
		<member name="M:TextDrawSetSelectable" syntax="TextDrawSetSelectable(textid, selectable)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to make selectable
			</param>
			<param name="selectable">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to make it selectable, or <b><c>0</c></b> to make it not selectable
			</param>
			<library>omp_textdraw</library>  <summary>Sets whether a textdraw can be selected (clicked on) or not.</summary>      <remarks><a href="#TextDrawSetSelectable">TextDrawSetSelectable</a> must be used BEFORE the textdraw  is shown to players for it to be selectable.</remarks>  <remarks>Use <a href="#TextDrawTextSize">TextDrawTextSize</a> to define the clickable area.</remarks> 
		</member>
		<member name="M:TextDrawSetShadow" syntax="TextDrawSetShadow(textid, shadowSize)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="CreateTextTT"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the shadow size of
			</param>
			<param name="shadowSize">
				The size of the shadow. <b><c>1</c></b> is generally used for a normal shadow  size. <b><c>0</c></b> disables the shadow completely
			</param>
			<library>omp_textdraw</library>  <summary>Sets the size of a textdraw's text's shadow.</summary>      <remarks>The shadow can be cut by the box area if the size is set too big for the area.</remarks>  <remarks>If you want to change the shadow of a textdraw that is already shown, you don't have to  recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/<a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The textdraw does not exist.  </returns> 
		</member>
		<member name="M:TextDrawSetString" syntax="TextDrawSetString(textid, format[], ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="TD_GetPlayerWeaponData"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_kill"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_endrace"/>
			<referrer name="RaceTime22"/>
			<referrer name="TTTimeTDUpdate"/>
			<referrer name="RaceCountDown"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="AutoNewsChange"/>
			<referrer name="CountDownDriftTimer"/>
			<referrer name="DriftSave"/>
			<referrer name="UpdateMOTD_Text"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The new string for the TextDraw.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_textdraw</library>  <summary>Changes the text on a textdraw.</summary>      <remarks>There are limits to the length of textdraw strings - see <a href="https://open.mp/docs/scripting/resources/limits">here</a>  for more info.</remarks> 
		</member>
		<member name="M:TextDrawShowForPlayer" syntax="TextDrawShowForPlayer(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="TD_GetPlayerWeaponData"/>
			<referrer name="MP_OPC"/>
			<referrer name="cmd_trt"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Login"/>
			<referrer name="TT_StartRace"/>
			<referrer name="RaceCountDown"/>
			<param name="playerid">
				The ID of the player to show the textdraw for
			</param>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to show.  Returned by <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>omp_textdraw</library>  <summary>Shows a textdraw for a specific player.</summary>      <remarks>If only a single player will see a textdraw, it might be wise to use player-textdraws instead.  This is also useful for textdraws that need to show information specific for an individual player.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means either the player and/or textdraw  specified does not exist.  </returns> 
		</member>
		<member name="M:TextDrawTextSize" syntax="TextDrawTextSize(textid, width, height)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to set the size of
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				The size on the x axis (left/right) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				The size on the y axis (up/down) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>omp_textdraw</library>  <summary>Change the size of a textdraw (box if <a href="#TextDrawUseBox">TextDrawUseBox</a> is enabled  and/or clickable area for use with <a href="#TextDrawSetSelectable">TextDrawSetSelectable</a>).</summary>        <remarks>  The x and y have different meanings with different TextDrawAlignment values:<br />  <ul>  <li><b><c>1</c></b> (left): they are the right-most corner of the box, absolute coordinates.</li>  <li><b><c>2</c></b> (center): they need to inverted (switch the two) and the x value is the overall  width of the box.</li>  <li><b><c>3</c></b> (right): the x and y are the coordinates of the left-most corner of the box  </li>  </ul>  </remarks>  <remarks>  Using font type <b><c>4</c></b> (sprite) and <b><c>5</c></b> (model preview) converts x and y of  this function from corner coordinates to WIDTH and HEIGHT (offsets).<br />  The TextDraw box starts <b><c>10.0</c></b> units up and <b><c>5.0</c></b> to the left as the origin  (<a href="#TextDrawCreate">TextDrawCreate</a> coordinate).<br />  This function defines the clickable area for use with <a href="#TextDrawSetSelectable">TextDrawSetSelectable</a>,  whether a box is shown or not.  </remarks>  <remarks>If you want to change the text size of a textdraw that is already shown, you don't have  to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawUseBox" syntax="TextDrawUseBox(textid, enableBox)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="LoadTextDraws"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the text textdraw to toggle the box of
			</param>
			<param name="enableBox">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to show a box or <b><c>0</c></b> to not show a box
			</param>
			<library>omp_textdraw</library>  <summary>Toggle whether a textdraw uses a box or not.</summary>      <remarks>If the textdraw is already shown, it must be re-shown (<a href="#TextDrawShowForAll">TextDrawShowForAll</a>/<a  href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>) to show the changes of this function.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the textdraw specified does not exist.  </returns> 
		</member>
		<member name="M:TogglePlayerClock" syntax="TogglePlayerClock(playerid, toggle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<param name="playerid">
				The player whose clock you want to enable/disable
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to show and <b><c>0</c></b> to hide.  Hidden by default
			</param>
			<library>omp_player</library>  <summary>Toggle the in-game clock (top-right corner) for a specific player.  When this is enabled,  time will progress at 1 minute per second.  Weather will also interpolate (slowly change over time)  when set using <a href="#SetWeather">SetWeather</a>/<a href="#SetPlayerWeather">SetPlayerWeather</a>.</summary>      <remarks>Time is not synced with other players! Time can be synced using <a href="#SetPlayerTime">SetPlayerTime</a>.</remarks>  <remarks>Time will automatically advance 6 hours when the player dies.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The specified player does not exist.  </returns> 
		</member>
		<member name="M:TogglePlayerControllable" syntax="TogglePlayerControllable(playerid, controllable)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_playduel"/>
			<referrer name="DuelStart"/>
			<referrer name="cmd_duel"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_plate"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="Unwash"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="TT_Announcement"/>
			<referrer name="TT_StartRace"/>
			<referrer name="TT_Exit"/>
			<referrer name="RaceCountDown"/>
			<param name="playerid">
				The ID of the player to toggle the controllability of
			</param>
			<param name="controllable">
				<paraminfo>bool </paraminfo>
			</param>
			<library>omp_player</library>  <summary>Toggles whether a player can control their character or not.  The player will also be unable  to move their camera.</summary>    <param name="toggle"><b><c>0</c></b> to make them uncontrollable, <b><c>1</c></b> to make them controllable</param>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:TogglePlayerGhostMode" syntax="TogglePlayerGhostMode(playerid, enable)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<param name="playerid">
			</param>
			<param name="enable">
				<paraminfo>bool </paraminfo>
			</param>
			<library>omp_player</library> 
		</member>
		<member name="M:TogglePlayerSpectating" syntax="TogglePlayerSpectating(playerid, toggle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="StopSpec"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="Iter_OnPlayerStateChange"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_ban"/>
			<param name="playerid">
				The ID of the player who should spectate
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable spectating and <b><c>0</c></b> to disable
			</param>
			<library>omp_player</library>  <summary>Toggle whether a player is in spectator mode or not.  While in spectator mode a player can  spectate (watch) other players and vehicles.  After using this function, either <a href="#PlayerSpectatePlayer">PlayerSpectatePlayer</a>  or <a href="#PlayerSpectateVehicle">PlayerSpectateVehicle</a> needs to be used.</summary>      <seealso name="PlayerSpectatePlayer" />  <seealso name="PlayerSpectateVehicle" />  <remarks>If the player is not loaded in before setting the spectate status to false, the connection  can be closed unexpectedly.</remarks>  <remarks>When spectator mode is disabled, <a href="#OnPlayerSpawn">OnPlayerSpawn</a> will automatically  be called, if you wish to restore player to state before spectating, you will have to handle that  in <a href="#OnPlayerSpawn">OnPlayerSpawn</a>.  Note also, that player can also go to class selection  before if they used F4 during spectate, a player also CAN die in spectate mode due to various glitches.</remarks>  <remarks>When a player is in spectate mode their HUD is hidden, making it useful for setting a player's  camera without the HUD.  Also, objects near the player's camera will be streamed in, making this  useful for interpolating cameras.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player does not exist.  </returns> 
		</member>
		<member name="M:Token_Vehicle" syntax="Token_Vehicle(playerid, token, modelid, time, type)">
			<attribute name="public"/>
			<stacksize value="236"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AllowedVehicle"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="KillTimer"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetTimerEx"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="TDMJoined"/>
			<dependency name="Token"/>
			<dependency name="TokenUltimate"/>
			<dependency name="TokenUsing"/>
			<dependency name="UltimateTimer"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="token">
			</param>
			<param name="modelid">
			</param>
			<param name="time">
			</param>
			<param name="type">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:Token_Weapons" syntax="Token_Weapons(playerid, weapontype)">
			<attribute name="public"/>
			<stacksize value="110"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Token"/>
			<dependency name="TokenUsing"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="weapontype">
			</param>
		</member>
		<member name="M:Trim" syntax="Trim(str[], &amp;start, &amp;end)">
			<stacksize value="4"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to trim.
			</param>
			<param name="start">
				<paraminfo> &amp; </paraminfo>
				Start of the substring.
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
				End of the substring.
			</param>
			<library>y_utils - strings</library>        <remarks>  Modifies "start" and "end" to be tight on text in "str".  <c>Strip</c>  removes the characters from the end, so needs a modifiable string, this just  tells you where the ends are.  </remarks> 
		</member>
		<member name="M:TryPPM" syntax="TryPPM(ppm)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="random"/>
			<param name="ppm">
				The likelihood of returning <c>true</c>.
			</param>
			<library>y_utils - random</library>  <summary>  TryPPM(ppm);  </summary>    <returns>  <c>true</c>, <c>ppm%oooo</c> of the time; or <c>false</c>  </returns>  <remarks>  Basically a ppm random number generator (that's out of 1000000).  Could be  used to replicate something with a <c>1.0001%</c> chance of happening via:  <br />  <c>TryPPM(10001)</c>  </remarks> 
		</member>
		<member name="M:TryPercentage" syntax="TryPercentage(percentage)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="random"/>
			<param name="percentage">
				The likelihood of returning <c>true</c>.
			</param>
			<library>y_utils - random</library>  <summary>  TryPercentage(percentage);  </summary>    <returns>  <c>true</c>, <c>percentage%</c> of the time; or <c>false</c>  </returns>  <remarks>  Basically a percentage random number generator.  </remarks> 
		</member>
		<member name="M:TryPermille" syntax="TryPermille(permille)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="random"/>
			<param name="permille">
				The likelihood of returning <c>true</c>.
			</param>
			<library>y_utils - random</library>  <summary>  TryPermille(permille);  </summary>    <returns>  <c>true</c>, <c>permille%o</c> of the time; or <c>false</c>  </returns>  <remarks>  Basically a permille random number generator (that's out of 1000).  Could be  used to replicate something with a <c>42.1%</c> chance of happening via:  <br />  <c>TryPermille(421)</c>  </remarks> 
		</member>
		<member name="M:UCMP" syntax="UCMP(value, upper)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="value">
				The unsigned number to compare.
			</param>
			<param name="upper">
				The upper limit.
			</param>
			<library>y_utils - maths</library>      <returns>  An unsigned comparison between the two values.  </returns> 
		</member>
		<member name="M:Unjailplayer_Timer" syntax="Unjailplayer_Timer(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:UnmutePlayer_Timer" syntax="UnmutePlayer_Timer(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="KillTimer"/>
			<dependency name="MuteTimer"/>
			<dependency name="Muted"/>
			<dependency name="MutedBy"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="Spam"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Unpack" syntax="Unpack(str[])">
			<stacksize value="149"/>
			<dependency name="Unpack"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to unpack
			</param>
			<library>y_utils - strings</library>    <returns>  unpacked string  </returns>  <remarks>  Mainly used for debugging.  </remarks> 
		</member>
		<member name="M:Unwash" syntax="Unwash(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="Wash"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:UpdateDynamic3DTextLabelText" syntax="UpdateDynamic3DTextLabelText(id, color, text[])">
			<attribute name="native"/>
			<referrer name="Race_Timing"/>
			<param name="id">
				<paraminfo>Text3D </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:UpdateMOTD_Text" syntax="UpdateMOTD_Text(string[])">
			<stacksize value="4"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_tann"/>
			<dependency name="RXDM"/>
			<dependency name="TextDrawSetString"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:UsePlayerPedAnims" syntax="UsePlayerPedAnims()">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<library>omp_core</library>  <summary>Uses standard player walking animation (animation of the CJ skin) instead of custom animations  for every skin (e.g.  skating for skater skins).</summary>  <seealso name="ApplyAnimation" />  <seealso name="ClearAnimations" />  <remarks>Only works when placed under <a href="#OnGameModeInit">OnGameModeInit</a>.</remarks>  <remarks>Not using this function causes two-handed weapons (not dual-handed - a single weapon that  is held by both hands) to be held in only one hand.</remarks> 
		</member>
		<member name="M:Utils_ChaosMod" syntax="Utils_ChaosMod(playerid)">
			<stacksize value="8"/>
			<referrer name="Android_OnAndroidTimer"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="SetPlayerArmedWeapon"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVelocity"/>
			<dependency name="SetPlayerWorldBounds"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SetVehicleVelocity"/>
			<dependency name="random"/>
			<param name="playerid">
				Player to mess up.
			</param>
			<library>y_utils - misc</library>    <remarks>  Make some random effects on the player.  Inspired by the single player chaos  mod.  </remarks> 
		</member>
		<member name="M:Utils_QuickSort" syntax="Utils_QuickSort(arr[], low, high)">
			<stacksize value="8"/>
			<referrer name="Utils_QuickSort"/>
			<referrer name="QuickSort"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array to sort.
			</param>
			<param name="low">
				The lowest index to sort.
			</param>
			<param name="high">
				The highest index (inclusive) to sort.
			</param>
			<library>y_utils - arrays</library>        <remarks>  Internal recursive call for quicksorting.  </remarks> 
		</member>
		<member name="M:VALID_PLAYERID" syntax="VALID_PLAYERID(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="playerid">
				The player to check.
			</param>
			<library>y_utils - misc</library>    <returns>  Is this a valid playerid (NOT, is the player connected).  </returns> 
		</member>
		<member name="M:ValstrWithOrdinal" syntax="ValstrWithOrdinal(n)">
			<stacksize value="37"/>
			<dependency name="ValstrWithOrdinal"/>
			<dependency name="strcat"/>
			<dependency name="valstr"/>
			<param name="n">
				The number to convert to a string with ordinal.
			</param>
			<library>y_utils - strings</library>    <returns>  Stringises a number, then adds <c>st/nd/rd/th</c>.  </returns> 
		</member>
		<member name="M:VectorSize" syntax="VectorSize(x, y, z)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="RandomPointsInCircleSampled"/>
			<referrer name="RandomPointInCircleSampled"/>
			<referrer name="Vehicle_Speed"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The vector's magnitude on the x axis
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The vector's magnitude on the y axis
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The vector's magnitude on the z axis
			</param>
			<library>omp_core</library>  <summary>Returns the norm (length) of the provided vector.</summary>        <seealso name="GetPlayerDistanceFromPoint" />  <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="floatsqroot" />  <returns>The norm (length) of the provided vector as a float.</returns> 
		</member>
		<member name="M:VehExpire" syntax="VehExpire(playerid, id)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<dependency name="vehDuel"/>
			<param name="playerid">
			</param>
			<param name="id">
			</param>
		</member>
		<member name="M:Vehicle_Speed" syntax="Vehicle_Speed(vehicleid)">
			<stacksize value="6"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="VectorSize"/>
			<dependency name="floatround"/>
			<param name="vehicleid">
				The vehicleid to get speed.
			</param>
			  <returns>  Current vehicle speed.  </returns>  <remarks>  This function have returns in KM/H.  </remarks> 
		</member>
		<member name="M:X@" syntax="X@(n)">
			<stacksize value="6"/>
			<dependency name="YSI_g_sPropReturn"/>
			<dependency name="setproperty"/>
			<param name="n">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_shortfunc</library>  <remarks>  Put the true remote call return number in to a property, because remote call  order can't be relied on.  </remarks> 
		</member>
		<member name="M:YSI_FOpen__" syntax="YSI_FOpen__(filename[], mode)">
			<tagname value="File"/>
			<stacksize value="5"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Server_LoadRconFix"/>
			<referrer name="YSI_ftouch__"/>
			<referrer name="ftemporary_"/>
			<referrer name="fautocleanup"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<referrer name="LoadModelSelectionMenu"/>
			<referrer name="fcreate"/>
			<referrer name="AddToLogFile"/>
			<referrer name="AddLineToFile"/>
			<referrer name="CountFileLines"/>
			<referrer name="CreateLog"/>
			<referrer name="CountRaces"/>
			<referrer name="ConvertProperties"/>
			<dependency name="YSI_gsBuggedFOpen"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>filemode </paraminfo>
			</param>
		</member>
		<member name="M:YSI_Format__" syntax="YSI_Format__(dest[], size, format[], ...)">
			<attribute name="native"/>
			<referrer name="Debug_PrintArray"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_samp_natives</library>  <remarks>  Const-correct <c>format</c>.  </remarks> 
		</member>
		<member name="M:YSI_IsLocalVarPackedString__" syntax="YSI_IsLocalVarPackedString__(str[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="IsNumeric"/>
			<referrer name="IsHex"/>
			<referrer name="HexStr"/>
			<referrer name="BoolStr"/>
			<referrer name="BinStr"/>
			<referrer name="BernsteinHash"/>
			<referrer name="bernstein"/>
			<referrer name="JenkinsHash"/>
			<referrer name="StrToLower"/>
			<referrer name="StrToUpper"/>
			<referrer name="StripNL"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="EndOfLine"/>
			<referrer name="SkipWhitespace"/>
			<referrer name="Trim"/>
			<referrer name="ftemporary_"/>
			<referrer name="IPToInt"/>
			<referrer name="DottedToIntIP"/>
			<referrer name="GetPlayerRPName"/>
			<referrer name="IsRPName"/>
			<referrer name="LevenshteinDistance"/>
			<referrer name="BiGramSimilarity"/>
			<referrer name="IterativeTextSplitter"/>
			<referrer name="IterativeColouredTextSplitter"/>
			<dependency name="false"/>
			<dependency name="ucharmax"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to test the packing of.
			</param>
			<library>y_samp_natives</library>  <summary>  YSI_IsLocalVarPackedString__(str[]);  </summary>    <remarks>  There is a bug in the SA:MP implementation of <c>ispacked</c>, it doesn't  work with high unicode values.  This is fixed in open.mp, and the same fix  is used here (just change the comparison to unsigned).  The inline assembly  version above is actually faster than the native for locals.  This code only  works on local variables because <c>LREF.U</c> doesn't work for array names,  only individual cells, hence the weird function name.  </remarks> 
		</member>
		<member name="M:YSI_IsNumeric__" syntax="YSI_IsNumeric__()">
			<stacksize value="1"/>
		</member>
		<member name="M:YSI_PrintF__" syntax="YSI_PrintF__(format[], ...)">
			<attribute name="native"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
			<library>y_samp_natives</library>  <remarks>  These should pretty much always exist, but are defined in "a_samp" in SA:MP,  when they should really be "core" functions.  They are defined in "console"  in open.mp, and here in YSI so that they are always available.  </remarks> 
		</member>
		<member name="M:YSI_Print__" syntax="YSI_Print__(string[])">
			<attribute name="native"/>
			<referrer name="Server_PrintYSIHeader"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="Server_FinishIntroPart"/>
			<referrer name="Server_FinishIntroMessage"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_samp_natives</library>  <remarks>  These should pretty much always exist, but are defined in "a_samp" in SA:MP,  when they should really be "core" functions.  They are defined in "console"  in open.mp, and here in YSI so that they are always available.  </remarks> 
		</member>
		<member name="M:YSI_Random__" syntax="YSI_Random__(max)">
			<attribute name="native"/>
			<referrer name="RandomMinMaxExceptMany"/>
			<referrer name="RandomMinMaxExcept"/>
			<referrer name="RandomMinMax"/>
			<referrer name="RandomMax"/>
			<param name="max">
			</param>
			<library>y_samp_natives</library>  <remarks>  Case-correct <c>random</c>.  </remarks> 
		</member>
		<member name="M:YSI_SendClientCheck__" syntax="YSI_SendClientCheck__(playerid, type, memoryAddress, memoryOffset, byteCount)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="memoryAddress">
			</param>
			<param name="memoryOffset">
			</param>
			<param name="byteCount">
			</param>
			<library>y_samp_natives</library>  <remarks>  Const-correct <c>SendClientCheck</c>.  </remarks> 
		</member>
		<member name="M:YSI_ftouch__" syntax="YSI_ftouch__(filename[])">
			<stacksize value="6"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="io_write"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
				The file to "touch".
			</param>
			<library>y_utils - files</library>  <summary>  ftouch(filename);  </summary>    <returns>  0 - File already exists.  1 - File was created.  -1 - File was not created.  </returns>  <remarks>  This "touches" a file in the Unix sense of creating it but not opening or  editing it in any way.  </remarks> 
		</member>
		<member name="M:YVers_Callback" syntax="YVers_Callback(index, code, data[])">
			<stacksize value="48"/>
			<dependency name="Server_FinishIntroMessage"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<param name="index">
			</param>
			<param name="code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_version</library>  <param name="	index">Not used.</param>  <param name="	code">Response code from the server.</param>  <param name="	data[]">HTTP data sent from the server.</param>  <remarks>  This is called when my server responds to the HTTP request sent above  (or  when it doesn't).  This prints information on the current and any future  versions of YSI.  Note that it only does a strcmp to determine if the  version is newer - people can't have versions newer than the latest, only  older or equal (unless they play with the version numbers, but then that's  their own fault).  </remarks> 
		</member>
		<member name="M:YVers_OnYSIInit" syntax="YVers_OnYSIInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
		</member>
		<member name="M:YVers_PrintHeader" syntax="YVers_PrintHeader()">
			<stacksize value="61"/>
			<referrer name="YVers_StartCheck"/>
			<dependency name="@_"/>
			<dependency name="GetConsoleVarAsString"/>
			<dependency name="Script_GetCompilerCodepage"/>
			<dependency name="Script_GetCompilerString"/>
			<dependency name="Script_GetIncludesString"/>
			<dependency name="Script_GetStartString"/>
			<dependency name="Server_CrashDetectExists"/>
			<dependency name="Server_FinishIntroPart"/>
			<dependency name="Server_GetJITString"/>
			<dependency name="Server_HasLongCallControl"/>
			<dependency name="Server_IsLinuxHost"/>
			<dependency name="Server_IsWindowsHost"/>
			<dependency name="Server_PrintIntroPart"/>
			<dependency name="Server_UpgradeCrashDetect"/>
			<dependency name="YSI_EMPTY"/>
			<dependency name="YSI_gscLinux"/>
			<dependency name="YSI_gscWindows"/>
			<dependency name="__Pawn"/>
			<dependency name="__date"/>
			<dependency name="__time"/>
			<dependency name="format"/>
			<library>y_version</library>  <remarks>  Print information about the script and server to the console.  Plugins,  version, compiler, etc.  </remarks> 
		</member>
		<member name="M:YVers_StartCheck" syntax="YVers_StartCheck()">
			<stacksize value="3"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="YVers_PrintHeader"/>
			<dependency name="__debug"/>
			<library>y_version</library>  <remarks>  Constructor.  Checks to see if there is a new version available.  This code  can not use ANY of the rest of YSI as it needs to be included by everything  first.  </remarks> 
		</member>
		<member name="M:Y_Less_says_ta_for_using_YSI" syntax="Y_Less_says_ta_for_using_YSI()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<remarks>  Thank you for using YSI!  </remarks> 
		</member>
		<member name="M:Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz" syntax="Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz()">
			<stacksize value="1"/>
			<hidden />  <remarks>  This function only exists to hide other functions.  It starts a massive  comment block in the pawndoc XML output that hides all internal  functions - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal functions appear in the  generated documentation always.  This is the best way to hide them.  You  still see one function (this one), but at least the documentation for  this one function can explain why it exists.  <p/>  This is <c>Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz</c> and starts the internal  functions block.  This is the last possible name before the first  character is <c>_</c> when the functions are sorted lexicographically  (alphabetically).  There's also <c>Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzy</c>  that starts the variables block; they could have the same name if they  were not declared in the same scope, but they might not always be  separately defined.  <p/>  Note that the actual hiding itself is done by an XML comment started  here and ended later.  </remarks>  <!-- 
		</member>
		<member name="M:_@ALS" syntax="_@ALS()">
			<tagname value="ALS"/>
			<stacksize value="1"/>
			<dependency name="ALS"/>
		</member>
		<member name="M:_@BULLET_HIT_TYPE" syntax="_@BULLET_HIT_TYPE()">
			<tagname value="t_BULLET_HIT_TYPE"/>
			<stacksize value="1"/>
			<dependency name="__BULLET_HIT_TYPE"/>
		</member>
		<member name="M:_@CAMERA_MOVE" syntax="_@CAMERA_MOVE()">
			<tagname value="CAMERA_MOVE"/>
			<stacksize value="1"/>
		</member>
		<member name="M:_@CAM_MODE" syntax="_@CAM_MODE()">
			<tagname value="t_CAM_MODE"/>
			<stacksize value="1"/>
			<dependency name="__CAM_MODE"/>
		</member>
		<member name="M:_@CARMODTYPE" syntax="_@CARMODTYPE()">
			<tagname value="t_CARMODTYPE"/>
			<stacksize value="1"/>
			<dependency name="__CARMODTYPE"/>
		</member>
		<member name="M:_@CLICK_SOURCE" syntax="_@CLICK_SOURCE()">
			<tagname value="t_CLICK_SOURCE"/>
			<stacksize value="1"/>
			<dependency name="__CLICK_SOURCE"/>
		</member>
		<member name="M:_@CONNECTION_STATUS" syntax="_@CONNECTION_STATUS()">
			<tagname value="t_CONNECTION_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__CONNSTAT"/>
		</member>
		<member name="M:_@CP_TYPE" syntax="_@CP_TYPE()">
			<tagname value="t_CP_TYPE"/>
			<stacksize value="1"/>
			<dependency name="__CP_TYPE"/>
		</member>
		<member name="M:_@DIALOG_STYLE" syntax="_@DIALOG_STYLE()">
			<tagname value="t_DIALOG_STYLE"/>
			<stacksize value="1"/>
			<dependency name="__DIALOG_STYLE"/>
		</member>
		<member name="M:_@DOWNLOAD_REQUEST" syntax="_@DOWNLOAD_REQUEST()">
			<tagname value="t_DOWNLOAD_REQUEST"/>
			<stacksize value="1"/>
			<dependency name="__DOWNLOAD_REQUEST"/>
		</member>
		<member name="M:_@EDIT_RESPONSE" syntax="_@EDIT_RESPONSE()">
			<tagname value="t_EDIT_RESPONSE"/>
			<stacksize value="1"/>
			<dependency name="__EDIT_RESPONSE"/>
		</member>
		<member name="M:_@E_AMX_TABLE" syntax="_@E_AMX_TABLE()">
			<tagname value="E_AMX_TABLE"/>
			<stacksize value="1"/>
			<dependency name="E_AMX_TABLE"/>
		</member>
		<member name="M:_@E_SCRIPTINIT_STATE" syntax="_@E_SCRIPTINIT_STATE()">
			<tagname value="E_SCRIPTINIT_STATE"/>
			<stacksize value="1"/>
			<dependency name="E_SCRIPTINIT_STATE"/>
		</member>
		<member name="M:_@E_YSI_DIR" syntax="_@E_YSI_DIR()">
			<tagname value="E_YSI_DIR"/>
			<stacksize value="1"/>
			<dependency name="E_YSI_DIR"/>
		</member>
		<member name="M:_@FIGHT_STYLE" syntax="_@FIGHT_STYLE()">
			<tagname value="t_FIGHT_STYLE"/>
			<stacksize value="1"/>
			<dependency name="__FIGHT_STYLE"/>
		</member>
		<member name="M:_@FORCE_SYNC" syntax="_@FORCE_SYNC()">
			<tagname value="t_FORCE_SYNC"/>
			<stacksize value="1"/>
			<dependency name="__FORCE_SYNC"/>
		</member>
		<member name="M:_@HTTP_ERROR" syntax="_@HTTP_ERROR()">
			<tagname value="t_HTTP_ERROR"/>
			<stacksize value="1"/>
			<dependency name="__HTTP_ERROR"/>
		</member>
		<member name="M:_@HTTP_METHOD" syntax="_@HTTP_METHOD()">
			<tagname value="t_HTTP_METHOD"/>
			<stacksize value="1"/>
			<dependency name="__HTTP_METHOD"/>
		</member>
		<member name="M:_@KEY" syntax="_@KEY()">
			<tagname value="t_KEY"/>
			<stacksize value="1"/>
			<dependency name="__KEY"/>
		</member>
		<member name="M:_@MAPICON" syntax="_@MAPICON()">
			<tagname value="t_MAPICON"/>
			<stacksize value="1"/>
			<dependency name="__MAPICON"/>
		</member>
		<member name="M:_@OBJECT_MATERIAL_SIZE" syntax="_@OBJECT_MATERIAL_SIZE()">
			<tagname value="t_OBJECT_MATERIAL_SIZE"/>
			<stacksize value="1"/>
			<dependency name="__OBJECT_MATERIAL_SIZE"/>
		</member>
		<member name="M:_@OBJECT_MATERIAL_TEXT_ALIGN" syntax="_@OBJECT_MATERIAL_TEXT_ALIGN()">
			<tagname value="t_OBJECT_MATERIAL_TEXT_ALIGN"/>
			<stacksize value="1"/>
			<dependency name="__OBJECT_MATERIAL_TEXT_ALIGN"/>
		</member>
		<member name="M:_@PLAYER_MARKERS_MODE" syntax="_@PLAYER_MARKERS_MODE()">
			<tagname value="t_PLAYER_MARKERS_MODE"/>
			<stacksize value="1"/>
			<dependency name="__PLAYER_MARKERS_MODE"/>
		</member>
		<member name="M:_@PLAYER_RECORDING_TYPE" syntax="_@PLAYER_RECORDING_TYPE()">
			<tagname value="t_PLAYER_RECORDING_TYPE"/>
			<stacksize value="1"/>
			<dependency name="__PLAYER_RECORDING_TYPE"/>
		</member>
		<member name="M:_@PLAYER_STATE" syntax="_@PLAYER_STATE()">
			<tagname value="t_PLAYER_STATE"/>
			<stacksize value="1"/>
			<dependency name="__PLAYER_STATE"/>
		</member>
		<member name="M:_@SELECT_OBJECT" syntax="_@SELECT_OBJECT()">
			<tagname value="t_SELECT_OBJECT"/>
			<stacksize value="1"/>
			<dependency name="__SELECT_OBJECT"/>
		</member>
		<member name="M:_@SPECIAL_ACTION" syntax="_@SPECIAL_ACTION()">
			<tagname value="t_SPECIAL_ACTION"/>
			<stacksize value="1"/>
			<dependency name="__SPECIAL_ACTION"/>
		</member>
		<member name="M:_@SPECTATE_MODE" syntax="_@SPECTATE_MODE()">
			<tagname value="t_SPECTATE_MODE"/>
			<stacksize value="1"/>
			<dependency name="__SPECTATE_MODE"/>
		</member>
		<member name="M:_@SQLITE_OPEN" syntax="_@SQLITE_OPEN()">
			<tagname value="SQLITE_OPEN"/>
			<stacksize value="1"/>
			<dependency name="__SQLITE_OPEN"/>
		</member>
		<member name="M:_@TEXT_DRAW_ALIGN" syntax="_@TEXT_DRAW_ALIGN()">
			<tagname value="t_TEXT_DRAW_ALIGN"/>
			<stacksize value="1"/>
			<dependency name="__TEXT_DRAW_ALIGN"/>
		</member>
		<member name="M:_@TEXT_DRAW_FONT" syntax="_@TEXT_DRAW_FONT()">
			<tagname value="t_TEXT_DRAW_FONT"/>
			<stacksize value="1"/>
			<dependency name="__TEXT_DRAW_FONT"/>
		</member>
		<member name="M:_@VARTYPE" syntax="_@VARTYPE()">
			<tagname value="t_VARTYPE"/>
			<stacksize value="1"/>
			<dependency name="__VARTYPE"/>
		</member>
		<member name="M:_@VEHICLE_DOOR_STATUS" syntax="_@VEHICLE_DOOR_STATUS()">
			<tagname value="t_VEHICLE_DOOR_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__VEHICLE_DOOR_STATUS"/>
		</member>
		<member name="M:_@VEHICLE_LIGHT_STATUS" syntax="_@VEHICLE_LIGHT_STATUS()">
			<tagname value="t_VEHICLE_LIGHT_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__VEHICLE_LIGHT_STATUS"/>
		</member>
		<member name="M:_@VEHICLE_MODEL_INFO" syntax="_@VEHICLE_MODEL_INFO()">
			<tagname value="t_VEHICLE_MODEL_INFO"/>
			<stacksize value="1"/>
			<dependency name="__VEHICLE_MODEL_INFO"/>
		</member>
		<member name="M:_@VEHICLE_PANEL_STATUS" syntax="_@VEHICLE_PANEL_STATUS()">
			<tagname value="t_VEHICLE_PANEL_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__VEHICLE_PANEL_STATUS"/>
		</member>
		<member name="M:_@VEHICLE_TYRE_STATUS" syntax="_@VEHICLE_TYRE_STATUS()">
			<tagname value="t_VEHICLE_TYRE_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__VEHICLE_TYRE_STATUS"/>
		</member>
		<member name="M:_@WEAPON" syntax="_@WEAPON()">
			<tagname value="t_WEAPON"/>
			<stacksize value="1"/>
			<dependency name="__WEAPON"/>
		</member>
		<member name="M:_@WEAPONSKILL" syntax="_@WEAPONSKILL()">
			<tagname value="t_WEAPONSKILL"/>
			<stacksize value="1"/>
			<dependency name="__WEAPONSKILL"/>
		</member>
		<member name="M:_@WEAPONSTATE" syntax="_@WEAPONSTATE()">
			<tagname value="t_WEAPONSTATE"/>
			<stacksize value="1"/>
			<dependency name="__WEAPONSTATE"/>
		</member>
		<member name="M:_@WEAPON_SLOT" syntax="_@WEAPON_SLOT()">
			<tagname value="t_WEAPON_SLOT"/>
			<stacksize value="1"/>
			<dependency name="__WEAPON_SLOT"/>
		</member>
		<member name="M:_@__E_COMPILER_ENUM" syntax="_@__E_COMPILER_ENUM()">
			<tagname value="__E_COMPILER_ENUM"/>
			<stacksize value="1"/>
			<dependency name="__E_COMPILER_ENUM"/>
		</member>
		<member name="M:_@__PRAGMA_WARNING" syntax="_@__PRAGMA_WARNING()">
			<tagname value="__PRAGMA_WARNING"/>
			<stacksize value="1"/>
			<dependency name="__PRAGMA_WARNING"/>
		</member>
		<member name="M:_@exit_order" syntax="_@exit_order()">
			<tagname value="exit_order"/>
			<stacksize value="1"/>
			<dependency name="exit_order"/>
		</member>
		<member name="M:_@init_order" syntax="_@init_order()">
			<tagname value="init_order"/>
			<stacksize value="1"/>
			<dependency name="init_order"/>
		</member>
		<member name="M:_B@Action" syntax="_B@Action(playerid, _@@ctrl)">
			<stacksize value="18"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="AmRacing"/>
			<dependency name="B@Value"/>
			<dependency name="B@Value"/>
			<dependency name="ChangeVehicleColours"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceNOS"/>
			<dependency name="RepairVehicle"/>
			<dependency name="RotatePointVehicleRotation"/>
			<dependency name="SetVehicleAngularVelocity"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SetVehicleVelocity"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="false"/>
			<dependency name="floatabs"/>
			<dependency name="floatsqroot"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="_@@ctrl">
			</param>
		</member>
		<member name="M:_B@EchoP" syntax="_B@EchoP(_@@ctrl)">
			<stacksize value="79"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="_B@EchoP"/>
			<dependency name="formatex"/>
			<param name="_@@ctrl">
			</param>
		</member>
		<member name="M:_B@EchoS" syntax="_B@EchoS(playerid, _@@State)">
			<stacksize value="79"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_kb"/>
			<referrer name="cmd_ckb"/>
			<dependency name="B@Status"/>
			<dependency name="_B@EchoS"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="_@@State">
			</param>
		</member>
		<member name="M:_B@Fetch" syntax="_B@Fetch(playerid, _@@State)">
			<stacksize value="1"/>
			<dependency name="B@Status"/>
			<param name="playerid">
			</param>
			<param name="_@@State">
			</param>
		</member>
		<member name="M:_B@ResetKey" syntax="_B@ResetKey(playerid)">
			<stacksize value="2"/>
			<referrer name="MP_OPC"/>
			<dependency name="B@Status"/>
			<dependency name="B@Status"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_B@ResetValue" syntax="_B@ResetValue(playerid)">
			<stacksize value="1"/>
			<referrer name="MP_OPC"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="B@Value"/>
			<dependency name="B@Value"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_FIXES_OnClientCheckResponse" syntax="_FIXES_OnClientCheckResponse()">
			<stacksize value="1"/>
			<automaton name="OnClientCheckResponse"/>
			<library>y_rconfix</library>  <remarks>  Define the states for calling the fix callbacks, or not.  </remarks> 
		</member>
		<member name="M:_PreHook_IncludeStates" syntax="_PreHook_IncludeStates()">
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<library>y_prehook</library>  <remarks>  Define all the states used by ALS prehooks.  Several of them only exist to  ensure that <c>&lt;&gt;</c> works.  </remarks> 
		</member>
		<member name="M:_ResetHO_coOrdination" syntax="_ResetHO_coOrdination(playerid, hID)">
			<stacksize value="1"/>
			<referrer name="cmd_ballhead"/>
			<referrer name="cmd_witchhat"/>
			<referrer name="cmd_pumpkin"/>
			<referrer name="cmd_xmashat"/>
			<referrer name="cmd_penis"/>
			<referrer name="cmd_helmet"/>
			<referrer name="cmd_cho"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="hID">
			</param>
		</member>
		<member name="M:_SSCANF_IncludeStates" syntax="_SSCANF_IncludeStates()">
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<library>sscanf</library>  <remarks>  Common ALS boilerplate to ensure that all the <c>&lt;_ALS : &gt;</c> states  are known to the compiler.  </remarks> 
		</member>
		<member name="M:_ScriptInit_FixState" syntax="_ScriptInit_FixState()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_script_init_fix_state"/>
			<p/><p/> <library>y_scriptinit</library>  <transition keep="true" target="_script_init_fix_state : true"/>  <transition keep="true" target="_ALS : _ALS_go"/>  <remarks>  I'm not quite sure what causes it, but there seems to be a bug in the  compiler somewhere which messes up the <c>ysi_debug</c> automaton and the  <c>YSI_FILTERSCRIPT</c> variable :(.  <p />  I eventually figured this one out:  <p />  https://github.com/pawn-lang/compiler/issues/666  <p />  So this fix is probably no longer needed.  </remarks> 
		</member>
		<member name="M:_YSI_ConstMod" syntax="_YSI_ConstMod(&amp;var, val)">
			<stacksize value="1"/>
			<param name="var">
				<paraminfo> &amp; </paraminfo>
				The variable to modify.
			</param>
			<param name="val">
				The new value.
			</param>
			<library>y_code</library>      <returns>  The old value of the variable.  </returns>  <remarks>  Bypasses the compiler to modify a <c>const</c>.  This should obviously not  be done without extreme care.  The general rule is only use this if the  change is promptly undone, so the changes are not externally visible from a  function.  For example when adding a null terminator to a constant string  to display it, then restoring it before ending:  <code>  PrintSome(const string[], n)                 <br />  {                                            <br /><indent />  new ch = _YSI_ConstMod(string[n], '\0'); <br /><indent />  print(string);                           <br /><indent />  _YSI_ConstMod(string[n], ch);            <br />  }  </code>  That will add a null terminator, use the shorter string, then (most  importantly) restore the old value of the string before the function ends.  From the perspective of anyone calling this example function the string is  the same after the call as it was before the call, hence the guarantees  offered by <c>const</c> are maintained, even if there's some internal  trickery going on.  <p />  It is also used to set <c>final</c> values, which aren't restored to their  old value, they are set once and never changed again.  </remarks> 
		</member>
		<member name="M:_YSI_FGetChar__" syntax="_YSI_FGetChar__(handle, value, utf8)">
			<attribute name="native"/>
			<referrer name="Files_CopyRange"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="utf8">
				<paraminfo>bool </paraminfo>
			</param>
			<library>y_samp_natives</library>  <remarks>  Case-correct <c>fgetchar</c>, with macros to hide the superfluous parameter.  </remarks> 
		</member>
		<member name="M:__CompilerFirstPass" syntax="__CompilerFirstPass()">
			<stacksize value="1"/>
			<library>y_compilerdata</library>  <remarks>  Exist purely to be detected before they are used.  If that check succeedes,  the compiler is on its second or third pass and already has a list of all  functions.  </remarks> 
		</member>
		<member name="M:__CompilerSecondPass__" syntax="__CompilerSecondPass__()">
			<stacksize value="1"/>
			<library>y_compilerdata</library>  <remarks>  Exist purely to be detected before they are used.  If that check succeedes,  the compiler is on its second or third pass and already has a list of all  functions.  </remarks> 
		</member>
		<member name="M:__CompilerThirdPass__" syntax="__CompilerThirdPass__()">
			<stacksize value="1"/>
			<library>y_compilerdata</library>  <remarks>  Exist purely to be detected before they are used.  If that check succeedes,  the compiler is on its second or third pass and already has a list of all  functions.  </remarks> 
		</member>
		<member name="M:__IsObjectNoCameraCol" syntax="__IsObjectNoCameraCol(objectid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="HasObjectCameraCollision"/>
			<referrer name="HasPlayerObjectCameraCollision"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:__MACRO__ceildiv" syntax="__MACRO__ceildiv()">
			<stacksize value="1"/>
			<referrer name="Base64Encode"/>
		</member>
		<member name="M:__const_impl" syntax="__const_impl(arr[])">
			<stacksize value="2"/>
			<dependency name="__const_impl"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:__deprecated" syntax="__deprecated(symbol[])">
			<stacksize value="1"/>
			<param name="symbol">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("deprecated", var);</c>  Gives the best warning I can manage  without compiler support; call a function called <c>__deprecated</c> and  pass in the variable.  </remarks> 
		</member>
		<member name="M:__fmt_funcinc" syntax="__fmt_funcinc()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="format"/>
		</member>
		<member name="M:__pragma_align" syntax="__pragma_align()">
			<stacksize value="1"/>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("align");</c>  </remarks> 
		</member>
		<member name="M:__pragma_amxlimit" syntax="__pragma_amxlimit(limit)">
			<stacksize value="1"/>
			<param name="limit">
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("amxlimit", 8192);</c>  </remarks> 
		</member>
		<member name="M:__pragma_amxram" syntax="__pragma_amxram(ram)">
			<stacksize value="1"/>
			<param name="ram">
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("amxram", 4096);</c>  </remarks> 
		</member>
		<member name="M:__pragma_codepage" syntax="__pragma_codepage(codepage[])">
			<stacksize value="1"/>
			<param name="codepage">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("codepage", 5001);</c>  </remarks> 
		</member>
		<member name="M:__pragma_compat" syntax="__pragma_compat(compatibility)">
			<stacksize value="1"/>
			<param name="compatibility">
				<paraminfo>bool </paraminfo>
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("compat", true);</c>  </remarks> 
		</member>
		<member name="M:__pragma_compress" syntax="__pragma_compress(compress)">
			<stacksize value="1"/>
			<param name="compress">
				<paraminfo>bool </paraminfo>
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("compress", true);</c>  </remarks> 
		</member>
		<member name="M:__pragma_ctrlchar" syntax="__pragma_ctrlchar(character)">
			<stacksize value="1"/>
			<param name="character">
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("ctrlchar", '\\');</c>  </remarks> 
		</member>
		<member name="M:__pragma_dynamic" syntax="__pragma_dynamic(ram)">
			<stacksize value="1"/>
			<param name="ram">
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("dynamic", 2048);</c>  </remarks> 
		</member>
		<member name="M:__pragma_library" syntax="__pragma_library(library[])">
			<stacksize value="1"/>
			<param name="library">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("library", "sscanf");</c>  </remarks> 
		</member>
		<member name="M:__pragma_option" syntax="__pragma_option(option[])">
			<stacksize value="1"/>
			<param name="option">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("option", "-l");</c>  </remarks> 
		</member>
		<member name="M:__pragma_overlay" syntax="__pragma_overlay(size)">
			<stacksize value="1"/>
			<param name="size">
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("overlay", 1024);</c>  </remarks> 
		</member>
		<member name="M:__pragma_pack" syntax="__pragma_pack(pack)">
			<stacksize value="1"/>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("pack", true);</c>  </remarks> 
		</member>
		<member name="M:__pragma_rational" syntax="__pragma_rational(tagname[], bits)">
			<stacksize value="1"/>
			<param name="tagname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="bits">
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("rational", tagof (Float:));</c>  </remarks> 
		</member>
		<member name="M:__pragma_semicolon" syntax="__pragma_semicolon(use)">
			<stacksize value="1"/>
			<param name="use">
				<paraminfo>bool </paraminfo>
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("semicolon", true);</c>  </remarks> 
		</member>
		<member name="M:__pragma_tabsize" syntax="__pragma_tabsize(tabsize)">
			<stacksize value="1"/>
			<param name="tabsize">
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("tabsize", 4);</c>  </remarks> 
		</member>
		<member name="M:__pragma_warning" syntax="__pragma_warning(type, warning)">
			<stacksize value="1"/>
			<param name="type">
				<paraminfo>__PRAGMA_WARNING </paraminfo>
			</param>
			<param name="warning">
			</param>
			<library>y_compilerdata</library>  <remarks>  <c>__pragma("warning", disable, 200);</c>  </remarks> 
		</member>
		<member name="M:__print" syntax="__print(string[])">
			<attribute name="native"/>
			<referrer name="print"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<library>console</library> 
		</member>
		<member name="M:_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz" syntax="_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz()">
			<stacksize value="1"/>
			<hidden />  <remarks>  This function only exists to hide other functions.  It end a massive  comment block in the pawndoc XML output that hides all internal  functions - that is, those that start with <c>_</c>.  This is a very  common pattern used throughout YSI (and most of programming).  Unfortunately these weirdly named internal functions appear in the  generated documentation always.  This is the best way to hide them.  You  still see one function (<c>Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz</c>), but at  least the documentation for that can explain why it exists.  <p/>  This is <c>_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz</c> and ends the internal  functions block.  This is the last possible name before the first  character is no longer <c>_</c> when the functions are sorted  lexicographically (alphabetically).  There's also  <c>_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzy</c> that ends the variables block;  they could have the same name if they were not declared in the same  scope, but they might not always be separately defined.  <p/>  Note that the actual hiding itself is done by an XML comment started  earlier and ended here.  </remarks>  --> 
		</member>
		<member name="M:acos" syntax="acos(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The cosine for which to find the angle for
			</param>
			<library>omp_core</library>  <summary>Get the inversed value of a cosine in degrees.</summary>    <seealso name="floatcos" />  <returns>The angle in degrees.</returns> 
		</member>
		<member name="M:asin" syntax="asin(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The sine for which to find the angle for
			</param>
			<library>omp_core</library>  <summary>Get the inversed value of a sine in degrees.</summary>    <seealso name="floatsin" />  <returns>The angle in degrees.</returns> 
		</member>
		<member name="M:atan" syntax="atan(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="AngleToPoint"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
				The tangent for which to find the angle for
			</param>
			<library>omp_core</library>  <summary>Get the inversed value of a tangent in degrees.</summary>    <seealso name="atan2" />  <seealso name="floattan" />  <returns>The angle in degrees.</returns> 
		</member>
		<member name="M:bernstein" syntax="bernstein(str[])">
			<stacksize value="7"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="cellbits"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_utils - encodings</library>  <param name="string">the string to hash.</param>  <returns>  The bernstein hash of the input string  </returns>  <remarks>  This is a 32bit hash system so is not very secure, however we're only using  this as a string enumerator to uniquely identify strings easilly and allow  for a binary search of strings based on the hash of their name.  <em>crc32</em>, then <em>jenkins</em> were originally used however this is  far faster, if a little collision prone, but we're checking the strings  manually anyway.  This doesn't matter as it would be done regardless of  hash method, so this doesn't need to be accounted for.  Speed is all that  matters with at least least a bit of non collision (the number of strings  we're dealing with, this should have none-to-few collisions).  <p/>  I modified it slightly from the original code pasted by aru, to code closer  to <a href="http://www.burtleburtle.net/bob/hash/doobs.html">the code</a>  and to work with PAWN (and shaved 0.2us off the time for one call :D).  <p/>  Uber reduced version (just for fun):  <code>  b(s[]){new h=-1,i,j;while((j=s[i++]))h=h*33+j;return h;}  </code>  <p/>  Update: Contrary to what I said above this is also used to identify colour  strings for the updated text system involving file based styling and this  is not checked for collisions as it's unimportant.  But this doesn't affect  the function at all, I just mentioned it here for "interest".  </remarks> 
		</member>
		<member name="M:binstr" syntax="binstr(str[])">
			<stacksize value="4"/>
			<dependency name="BinStr"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_utils - conversions</library>  <param name="string">String to try convert to a boolean.</param>  <returns>  bool: passed boolean.  </returns>  <remarks>  This takes a value in 0110101 (boolean) format and returns it as a  regular value.  </remarks> 
		</member>
		<member name="M:boolstr" syntax="boolstr(str[])">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="BoolStr"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_utils - conversions</library>  <param name="string">String to try convert to a boolean.</param>  <returns>  bool: passed boolean.  </returns>  <remarks>  This can take a number of ways of representing booleans - 0, false and  nothing there.  Anything not one of those things (false is not case  sensitive) is assumed true.  </remarks> 
		</member>
		<member name="M:cache_affected_rows" syntax="cache_affected_rows()">
			<attribute name="native"/>
			<referrer name="cmd_mysqlq"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_clearctfflags"/>
		</member>
		<member name="M:cache_get_field_count" syntax="cache_get_field_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_fields"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_result_count" syntax="cache_get_result_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_results"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_row_count" syntax="cache_get_row_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_rows"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_row_int" syntax="cache_get_row_int()">
			<stacksize value="1"/>
			<referrer name="GetRaceID"/>
		</member>
		<member name="M:cache_get_value_index_bool" syntax="cache_get_value_index_bool(row_idx, column_idx, &amp;destination)">
			<stacksize value="5"/>
			<dependency name="cache_get_value_index_int"/>
			<param name="row_idx">
			</param>
			<param name="column_idx">
			</param>
			<param name="destination">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_index_int" syntax="cache_get_value_index_int(row_idx, column_idx, &amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_get_value_index_bool"/>
			<param name="row_idx">
			</param>
			<param name="column_idx">
			</param>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name" syntax="cache_get_value_name(row_idx, column_name[], destination[], max_len)">
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="GetUserIDName"/>
			<referrer name="Login"/>
			<referrer name="LoadKeys"/>
			<referrer name="DCMD_stats"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_myradio"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_moveproxies"/>
			<referrer name="cmd_unbanlast"/>
			<referrer name="cmd_tt"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Announcement"/>
			<referrer name="LoadRace"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="HO_load"/>
			<referrer name="StartRace"/>
			<referrer name="LoadProperties"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
		</member>
		<member name="M:cache_get_value_name_bool" syntax="cache_get_value_name_bool(row_idx, column_name[], &amp;destination)">
			<stacksize value="5"/>
			<dependency name="cache_get_value_name_int"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name_float" syntax="cache_get_value_name_float(row_idx, column_name[], &amp;destination)">
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Announcement"/>
			<referrer name="LoadRace"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="HO_load"/>
			<referrer name="StartRace"/>
			<referrer name="LoadProperties"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name_int" syntax="cache_get_value_name_int(row_idx, column_name[], &amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_get_value_name_bool"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="Login"/>
			<referrer name="DCMD_stats"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_tt"/>
			<referrer name="GetTT_ID"/>
			<referrer name="SetUP_TT"/>
			<referrer name="SaveRace"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="Race_Rotation"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="HO_load"/>
			<referrer name="HO_delete"/>
			<referrer name="LoadEasterEggs"/>
			<referrer name="GetUserID"/>
			<referrer name="StartRace"/>
			<referrer name="LoadProperties"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_num_fields" syntax="cache_num_fields()">
			<stacksize value="4"/>
			<dependency name="cache_get_field_count"/>
		</member>
		<member name="M:cache_num_results" syntax="cache_num_results()">
			<stacksize value="4"/>
			<dependency name="cache_get_result_count"/>
		</member>
		<member name="M:cache_num_rows" syntax="cache_num_rows()">
			<stacksize value="4"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="GetUserIDName"/>
			<referrer name="Login"/>
			<referrer name="LoadKeys"/>
			<referrer name="DCMD_stats"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_groupmanage"/>
			<referrer name="cmd_myradio"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_dpt"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_moveproxies"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_serverstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_unbanlast"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_tt"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="GetTT_ID"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Announcement"/>
			<referrer name="SaveRace"/>
			<referrer name="GetRaceID"/>
			<referrer name="LoadRace"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="HO_load"/>
			<referrer name="HO_exist"/>
			<referrer name="HO_delete"/>
			<referrer name="LoadEasterEggs"/>
			<referrer name="Easter_Egg_Update"/>
			<referrer name="GetUserID"/>
			<referrer name="StartRace"/>
			<referrer name="LoadProperties"/>
			<referrer name="CountProperties"/>
			<dependency name="cache_get_row_count"/>
		</member>
		<member name="M:ceildiv" syntax="ceildiv(numerator, denominator)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="numerator">
				The top of the division.
			</param>
			<param name="denominator">
				The bottom of the division.
			</param>
			<library>y_utils - maths</library>      <returns>  (numerator / denominator) rounded up.  </returns>  <remarks>  Normal integer division ALWAYS rounds down - this always rounds up.  </remarks> 
		</member>
		<member name="M:chrfind" syntax="chrfind(needle, haystack[], start)">
			<stacksize value="6"/>
			<dependency name="ChrFind"/>
			<param name="needle">
				The character to find.
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
				The string to find it in.
			</param>
			<param name="start">
				The offset to start from.
			</param>
			<library>y_utils - strings</library>        <returns>  Fail - -1, Success - pos  </returns> 
		</member>
		<member name="M:chrfindp" syntax="chrfindp(needle, haystack[], start)">
			<stacksize value="6"/>
			<dependency name="ChrFind"/>
			<param name="needle">
				The character to find.
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
				The string to find it in.
			</param>
			<param name="start">
				The offset to start from.
			</param>
			<library>y_utils - strings</library>        <returns>  Fail - -1, Success - pos  </returns>  <remarks>  Like <symbolref name="ChrFind" />, but with no upper-bounds check on  <paramref name="start" />.  Now it has them anyway...  </remarks> 
		</member>
		<member name="M:clamp" syntax="clamp(value, min, max)">
			<attribute name="native"/>
			<referrer name="Iter_Func@VehicleOccupant"/>
			<param name="value">
			</param>
			<param name="min">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:clearstring" syntax="clearstring(string[])">
			<stacksize value="6"/>
			<dependency name="strdel"/>
			<dependency name="strlen"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:clreol" syntax="clreol()">
			<stacksize value="1"/>
			<library>console</library>  <summary>Clear the rest of the line.</summary>  <seealso name="clrscr"/>  <return>This function always returns 0.</return>  <remarks>Clears the line at which the cursor is, from the position of the cursor to the right  margin of the console.  This function does not move the cursor.</remarks> 
		</member>
		<member name="M:clrscr" syntax="clrscr()">
			<stacksize value="1"/>
			<library>console</library>  <summary>Clear the screen.</summary>  <seealso name="clreol"/>  <return>This function always returns 0.</return>  <remarks>Clears the display and moves the cursor to the upper left corner.</remarks> 
		</member>
		<member name="M:cmd_123" syntax="cmd_123(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_countdown"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_8track" syntax="cmd_8track(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_a" syntax="cmd_a(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_ann"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_acceptpms" syntax="cmd_acceptpms(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="acceptpms"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_accountstatus" syntax="cmd_accountstatus(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="28"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_actff" syntax="cmd_actff(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_addctfflag"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_actioncmds" syntax="cmd_actioncmds(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_actorkill" syntax="cmd_actorkill(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsValidDynamicActor"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetDynamicActorHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_actorstrip" syntax="cmd_actorstrip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyActorAnimation"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsValidDynamicActor"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addactor" syntax="cmd_addactor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="CreateDynamicActor"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addctfflag" syntax="cmd_addctfflag(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="34"/>
			<referrer name="cmd_actff"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addderbyhealthpickup" syntax="cmd_addderbyhealthpickup(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="34"/>
			<referrer name="cmd_adhp"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addderbyspawnpoint" syntax="cmd_addderbyspawnpoint(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="36"/>
			<referrer name="cmd_adsp"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_adddrift" syntax="cmd_adddrift(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="73"/>
			<referrer name="cmd_createdrift"/>
			<dependency name="AddDrift"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="strfind"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addprop" syntax="cmd_addprop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="44"/>
			<dependency name="AddProperty"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strfind"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addtoset" syntax="cmd_addtoset(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="215"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="E_STREAMER_MODEL_ID"/>
			<dependency name="GetDynamicObjectMaterial"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetDynamicObjectRot"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsDynamicObjectMaterialUsed"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strcmp"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_adhp" syntax="cmd_adhp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_addderbyhealthpickup"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_admincolor" syntax="cmd_admincolor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="IsAdmin"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_admins" syntax="cmd_admins(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="AdminLvl"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="hidden"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_adminsettings" syntax="cmd_adminsettings(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="513"/>
			<referrer name="cmd_as"/>
			<dependency name="AdminMsgs"/>
			<dependency name="AutoGM"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="GameTimer"/>
			<dependency name="IPLookups"/>
			<dependency name="IsAdmin"/>
			<dependency name="Players"/>
			<dependency name="RaceRotation"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="raceRotTimer"/>
			<dependency name="readpms"/>
			<dependency name="readteles"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_adromada" syntax="cmd_adromada(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_adsp" syntax="cmd_adsp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_addderbyspawnpoint"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_af" syntax="cmd_af(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_autofix"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="autofix"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_afk" syntax="cmd_afk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="49"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="God"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerChatBubble"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_afklist" syntax="cmd_afklist(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="GetPVarInt"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_afob" syntax="cmd_afob(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="afob"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_airdrop" syntax="cmd_airdrop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Players"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="TDMJoined"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_aka" syntax="cmd_aka(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="58"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_al" syntax="cmd_al(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_armorall"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_alarm" syntax="cmd_alarm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_alexm" syntax="cmd_alexm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_allbugged" syntax="cmd_allbugged(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_alpha" syntax="cmd_alpha(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_altitude" syntax="cmd_altitude(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_amanda" syntax="cmd_amanda(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="GetNPCNameByID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GotoPosition"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_amandapm" syntax="cmd_amandapm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="112"/>
			<dependency name="GetNPCNameByID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_amandatalk" syntax="cmd_amandatalk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GetNPCNameByID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ammo" syntax="cmd_ammo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_guns"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ammo2" syntax="cmd_ammo2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_angelpine" syntax="cmd_angelpine(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_animhelp" syntax="cmd_animhelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_animslist"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_animslist" syntax="cmd_animslist(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_animhelp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ann" syntax="cmd_ann(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_a"/>
			<dependency name="GameTextForAll"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ann2" syntax="cmd_ann2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GameTextForAll"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ann3" syntax="cmd_ann3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GameTextForAll"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ann4" syntax="cmd_ann4(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GameTextForAll"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_annp" syntax="cmd_annp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="112"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_annr" syntax="cmd_annr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_annradius"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_annradius" syntax="cmd_annradius(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<referrer name="cmd_annr"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_answer" syntax="cmd_answer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="139"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_aotv" syntax="cmd_aotv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="AttachDynamicObjectToVehicle"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsAdmin"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_aqua" syntax="cmd_aqua(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_area69" syntax="cmd_area69(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_aregister" syntax="cmd_aregister(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_armorall" syntax="cmd_armorall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_al"/>
			<referrer name="cmd_armourall"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="cellmax"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_armour" syntax="cmd_armour(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_armourall" syntax="cmd_armourall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_armorall"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_as" syntax="cmd_as(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_adminsettings"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_asay" syntax="cmd_asay(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="109"/>
			<referrer name="cmd_say"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ask" syntax="cmd_ask(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="137"/>
			<dependency name="Muted"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_assa" syntax="cmd_assa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_at400" syntax="cmd_at400(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_atomic" syntax="cmd_atomic(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_autofix" syntax="cmd_autofix(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_af"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_avip" syntax="cmd_avip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_back" syntax="cmd_back(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPVarInt"/>
			<dependency name="God"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_balance" syntax="cmd_balance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="banked"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ballhead" syntax="cmd_ballhead(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="_ResetHO_coOrdination"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ban" syntax="cmd_ban(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="73"/>
			<dependency name="AddPlayerBan"/>
			<dependency name="AdminLvl"/>
			<dependency name="BanEx2"/>
			<dependency name="Banned"/>
			<dependency name="DCAdmin"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Registered"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="gSpectateType"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_band" syntax="cmd_band(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_bandana"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bandana" syntax="cmd_bandana(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_band"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bankrupt" syntax="cmd_bankrupt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ResetPlayerCash"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bans" syntax="cmd_bans(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="173"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bar" syntax="cmd_bar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_barn" syntax="cmd_barn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_barrier" syntax="cmd_barrier(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_base" syntax="cmd_base(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_base2" syntax="cmd_base2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_base3" syntax="cmd_base3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bat" syntax="cmd_bat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bayside" syntax="cmd_bayside(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bb" syntax="cmd_bb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_beach" syntax="cmd_beach(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_beach2" syntax="cmd_beach2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_beagle" syntax="cmd_beagle(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bedroom" syntax="cmd_bedroom(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_beer" syntax="cmd_beer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SPECIAL_ACTION_DRINK_BEER"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bikepark" syntax="cmd_bikepark(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bikes" syntax="cmd_bikes(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="DriftID"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RaceActive"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="ShowModelSelectionMenu"/>
			<dependency name="TDrif"/>
			<dependency name="VehicleID"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="bikelist"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bikestunt" syntax="cmd_bikestunt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_blue" syntax="cmd_blue(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bmx" syntax="cmd_bmx(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bmxparkour" syntax="cmd_bmxparkour(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_boathouse" syntax="cmd_boathouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_boats" syntax="cmd_boats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_boeing747" syntax="cmd_boeing747(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_boneid" syntax="cmd_boneid(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bonnet" syntax="cmd_bonnet(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_boot" syntax="cmd_boot(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bounty" syntax="cmd_bounty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="155"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="TakePlayerCash"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bounty"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bountylist" syntax="cmd_bountylist(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="bounty"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_boxing" syntax="cmd_boxing(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="FIGHT_STYLE_BOXING"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFightingStyle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bptp" syntax="cmd_bptp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_brass" syntax="cmd_brass(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_braylon" syntax="cmd_braylon(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bridge" syntax="cmd_bridge(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_brightblue" syntax="cmd_brightblue(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_brightyellow" syntax="cmd_brightyellow(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bring" syntax="cmd_bring(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_gethere"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_broom" syntax="cmd_broom(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_brown" syntax="cmd_brown(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_buildrace" syntax="cmd_buildrace(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="BuildInitial"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bullet" syntax="cmd_bullet(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_burn" syntax="cmd_burn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateExplosion"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_burp" syntax="cmd_burp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_bus" syntax="cmd_bus(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_buy" syntax="cmd_buy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="403"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Buyable"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="Earnings"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerID"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNearProperty"/>
			<dependency name="IsVIP"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="PlayerProps"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropName"/>
			<dependency name="PropOwner"/>
			<dependency name="PropUnbuyableTime"/>
			<dependency name="PropValue"/>
			<dependency name="PropX"/>
			<dependency name="PropY"/>
			<dependency name="PropZ"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAllEx"/>
			<dependency name="TakePlayerCash"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="propText"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_buytokens" syntax="cmd_buytokens(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="131"/>
			<dependency name="AC_MoneyAlerts"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerName"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetToken"/>
			<dependency name="TakePlayerCash"/>
			<dependency name="Token"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ca" syntax="cmd_ca(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ClearAnimations"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cage" syntax="cmd_cage(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_callcar" syntax="cmd_callcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsVehicleSpawned"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleZAngle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cam" syntax="cmd_cam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AttachCameraToObject"/>
			<dependency name="AttachCameraToPlayerObject"/>
			<dependency name="AttachObjectToPlayer"/>
			<dependency name="AttachPlayerObjectToVehicle"/>
			<dependency name="CreateObject"/>
			<dependency name="CreatePlayerObject"/>
			<dependency name="FPS_bool"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="fFPS"/>
			<dependency name="true"/>
			<dependency name="vFPS"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_camera" syntax="cmd_camera(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_camo" syntax="cmd_camo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cancelgiftbox" syntax="cmd_cancelgiftbox(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Server"/>
			<dependency name="box"/>
			<dependency name="boxtype"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cane" syntax="cmd_cane(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_car" syntax="cmd_car(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="DriftID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LastCar"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="MyCar"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RaceActive"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="TDrif"/>
			<dependency name="VehicleID"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_care" syntax="cmd_care(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_carkill" syntax="cmd_carkill(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_carkill2" syntax="cmd_carkill2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_carmods" syntax="cmd_carmods(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_carparkma" syntax="cmd_carparkma(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cars" syntax="cmd_cars(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="DriftID"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RaceActive"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="TDrif"/>
			<dependency name="VehicleID"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_casino" syntax="cmd_casino(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cb" syntax="cmd_cb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerChatBubble"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cbone" syntax="cmd_cbone(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="147"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cc" syntax="cmd_cc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="cmd_colorcar"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ChangeVehicleColours"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cctff" syntax="cmd_cctff(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_clearctfflags"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cd" syntax="cmd_cd(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_countdown"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cde" syntax="cmd_cde(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_createderby"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cdr" syntax="cmd_cdr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_countdownradius"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cea" syntax="cmd_cea(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_changeevadeaction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_chainsaw" syntax="cmd_chainsaw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_chainsawdm" syntax="cmd_chainsawdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_chainsawdm2" syntax="cmd_chainsawdm2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_changeevadeaction" syntax="cmd_changeevadeaction(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_cea"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Server"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="banonevade"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_changepass" syntax="cmd_changepass(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setpass"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_changetdm" syntax="cmd_changetdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ForceClassSelection"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="TDMJoined"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_checkweapons" syntax="cmd_checkweapons(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<referrer name="cmd_cw"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="allowmg"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cheese" syntax="cmd_cheese(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_chicken" syntax="cmd_chicken(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cho" syntax="cmd_cho(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="121"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsValidObjectModel"/>
			<dependency name="IsValidSAMPObject"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="_ResetHO_coOrdination"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_christmastree" syntax="cmd_christmastree(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_city" syntax="cmd_city(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_city2" syntax="cmd_city2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_city3" syntax="cmd_city3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_city4" syntax="cmd_city4(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_city5" syntax="cmd_city5(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cityhall" syntax="cmd_cityhall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cj101" syntax="cmd_cj101(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ckb" syntax="cmd_ckb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="545"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="_B@EchoS"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_classic" syntax="cmd_classic(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_clearchat" syntax="cmd_clearchat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_clearctfflags" syntax="cmd_clearctfflags(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<referrer name="cmd_cctff"/>
			<dependency name="ActiveCTF"/>
			<dependency name="CTFLoaded"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_affected_rows"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_clearmyteleport" syntax="cmd_clearmyteleport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_cmtp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_clearrace" syntax="cmd_clearrace(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AmBuilding"/>
			<dependency name="ClearRace"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cloak" syntax="cmd_cloak(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerMarkerForPlayer"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_closectf" syntax="cmd_closectf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ActiveCTF"/>
			<dependency name="CTFI"/>
			<dependency name="CTFIcons"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="CTFTimer"/>
			<dependency name="CTFToken"/>
			<dependency name="CTF_Flags"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="ctfflags"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_closederby" syntax="cmd_closederby(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_closederby"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_closesurvival" syntax="cmd_closesurvival(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DeleteMovingData"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Moving"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SPoints"/>
			<dependency name="SVLoaded"/>
			<dependency name="SVPlayers"/>
			<dependency name="SVStarted"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gamePickups"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cloudsma" syntax="cmd_cloudsma(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_clowns" syntax="cmd_clowns(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_club" syntax="cmd_club(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cludia" syntax="cmd_cludia(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cmds" syntax="cmd_cmds(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="2509"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cmtp" syntax="cmd_cmtp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_clearmyteleport"/>
			<dependency name="CanTP"/>
			<dependency name="CanTP"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cno" syntax="cmd_cno(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVIPTotalCreatedObjects"/>
			<dependency name="IsVIP"/>
			<dependency name="IsValidObjectModel"/>
			<dependency name="IsValidSAMPObject"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_coach" syntax="cmd_coach(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_color" syntax="cmd_color(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_colors"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_colorcar" syntax="cmd_colorcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_cc"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_colors" syntax="cmd_colors(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_color"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_combatdm" syntax="cmd_combatdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_controlpanel" syntax="cmd_controlpanel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_cpanel"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_coq" syntax="cmd_coq(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cornholio" syntax="cmd_cornholio(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_countdown" syntax="cmd_countdown(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_cd"/>
			<referrer name="cmd_123"/>
			<dependency name="CountDown"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetTimer"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_countdownradius" syntax="cmd_countdownradius(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<referrer name="cmd_cdr"/>
			<dependency name="CountDown"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetTimerEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cp" syntax="cmd_cp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddCP"/>
			<dependency name="AmBuilding"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cpanel" syntax="cmd_cpanel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_controlpanel"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cpr" syntax="cmd_cpr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cpsize" syntax="cmd_cpsize(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="ChangeCPSize"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_crackhouse" syntax="cmd_crackhouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_crash" syntax="cmd_crash(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AdminLvl"/>
			<dependency name="CrashPlayer"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_createctf" syntax="cmd_createctf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="37"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strfind"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_createderby" syntax="cmd_createderby(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<referrer name="cmd_cde"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_createdrift" syntax="cmd_createdrift(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_adddrift"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_creategroup" syntax="cmd_creategroup(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="29"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="groupName"/>
			<dependency name="mysql_query"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_credits" syntax="cmd_credits(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cry" syntax="cmd_cry(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ctf" syntax="cmd_ctf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="45"/>
			<dependency name="ActiveCTF"/>
			<dependency name="CTFFlags"/>
			<dependency name="CTFI"/>
			<dependency name="CTFIcons"/>
			<dependency name="CTFInterior"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFSpawn"/>
			<dependency name="CTFTimer"/>
			<dependency name="CTFToken"/>
			<dependency name="CTF_Flags"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ctfhelp" syntax="cmd_ctfhelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cuffme" syntax="cmd_cuffme(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SPECIAL_ACTION_CUFFED"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cutter" syntax="cmd_cutter(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cvondz" syntax="cmd_cvondz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cw" syntax="cmd_cw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_checkweapons"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_d" syntax="cmd_d(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_dobj"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_da" syntax="cmd_da(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dac" syntax="cmd_dac(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetVehicleVirtualWorld"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="formatex"/>
			<dependency name="laststatic"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dactor" syntax="cmd_dactor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_deleteactor"/>
			<dependency name="DestroyDynamicActor"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsValidDynamicActor"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dam" syntax="cmd_dam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_damj" syntax="cmd_damj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_disableallmegajump"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dammi" syntax="cmd_dammi(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="CountDynamicMapIcons"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsValidDynamicMapIcon"/>
			<dependency name="Streamer_GetIntData"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_damo" syntax="cmd_damo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_damp" syntax="cmd_damp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="CountDynamicPickups"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Streamer_GetIntData"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dance" syntax="cmd_dance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SPECIAL_ACTION_DANCE1"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dance2" syntax="cmd_dance2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SPECIAL_ACTION_DANCE2"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dance3" syntax="cmd_dance3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SPECIAL_ACTION_DANCE3"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dance4" syntax="cmd_dance4(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SPECIAL_ACTION_DANCE4"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dano" syntax="cmd_dano(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="121"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&lt;=(_:,Float:)"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DeleteMovingData"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="GetDistance"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetPName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Moving"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_darkyellow" syntax="cmd_darkyellow(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_daso" syntax="cmd_daso(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="108"/>
			<referrer name="cmd_destroyallstreamobjects"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DestroyAllDynamicObjects"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_datower" syntax="cmd_datower(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_davr" syntax="cmd_davr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="rockets"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_day" syntax="cmd_day(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="mytime"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dbers" syntax="cmd_dbers(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerKeys"/>
			<dependency name="GetPlayerState"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="KEY_FIRE"/>
			<dependency name="PLAYER_STATE_PASSENGER"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dc" syntax="cmd_dc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dcp" syntax="cmd_dcp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AmBuilding"/>
			<dependency name="DeleteCP"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dcr" syntax="cmd_dcr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_dcradius"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dcradius" syntax="cmd_dcradius(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="cmd_dcr"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetVehicleCount"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_de" syntax="cmd_de(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_detonate"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deagledm" syntax="cmd_deagledm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deathangel" syntax="cmd_deathangel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deathrace" syntax="cmd_deathrace(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AmBuilding"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="bombrace"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_defaultmegajump" syntax="cmd_defaultmegajump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_dfmj"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deleteactor" syntax="cmd_deleteactor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_dactor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deletectf" syntax="cmd_deletectf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="35"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_affected_rows"/>
			<dependency name="cache_num_rows"/>
			<dependency name="ctfflags"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deleterace" syntax="cmd_deleterace(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="31"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deleteramp" syntax="cmd_deleteramp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_dramp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deletesavedcar" syntax="cmd_deletesavedcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="28"/>
			<referrer name="cmd_dsc"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_delgiftbox" syntax="cmd_delgiftbox(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Server"/>
			<dependency name="box"/>
			<dependency name="boxtype"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_delivery" syntax="cmd_delivery(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="CuntDeliveries"/>
			<dependency name="CuntDeliveries"/>
			<dependency name="Delivery"/>
			<dependency name="DeliveryCP"/>
			<dependency name="DeliveryID"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerInDeliveryVehicle"/>
			<dependency name="LVDeliveries"/>
			<dependency name="LVDeliveries"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_denypms" syntax="cmd_denypms(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="acceptpms"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deposit" syntax="cmd_deposit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TakePlayerCash"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="banked"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_derbyhelp" syntax="cmd_derbyhelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_destroyallstreamobjects" syntax="cmd_destroyallstreamobjects(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_daso"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_detonate" syntax="cmd_detonate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_de"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="FALSE"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetTimerEx"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dfmj" syntax="cmd_dfmj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_defaultmegajump"/>
			<dependency name="AdminLvl"/>
			<dependency name="MJ_Value"/>
			<dependency name="MJ_Value"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dgmfp" syntax="cmd_dgmfp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="TogglePlayerGhostMode"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dha" syntax="cmd_dha(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_disablehydraall"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dho" syntax="cmd_dho(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="81"/>
			<dependency name="HO_delete"/>
			<dependency name="HO_exist"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dildo" syntax="cmd_dildo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dildo2" syntax="cmd_dildo2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dildodm" syntax="cmd_dildodm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dildodm2" syntax="cmd_dildodm2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dildoparty" syntax="cmd_dildoparty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_diner" syntax="cmd_diner(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disableaf" syntax="cmd_disableaf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="132"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="autofix"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disableallmegajump" syntax="cmd_disableallmegajump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_damj"/>
			<dependency name="AdminLvl"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="megajump"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disablehydraall" syntax="cmd_disablehydraall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_dha"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="hydra"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disablemegajump" syntax="cmd_disablemegajump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_dmj"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disablepms" syntax="cmd_disablepms(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="AdminLvl"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PMs"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disablerhinoall" syntax="cmd_disablerhinoall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_dra"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="rhino"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disablespeedboost" syntax="cmd_disablespeedboost(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="111"/>
			<referrer name="cmd_dsb"/>
			<referrer name="cmd_dkb"/>
			<referrer name="cmd_dsbkb"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disarm" syntax="cmd_disarm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="111"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="wpa"/>
			<dependency name="wpa"/>
			<dependency name="wps"/>
			<dependency name="wps"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disarmradius" syntax="cmd_disarmradius(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="140"/>
			<referrer name="cmd_dr"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="wpa"/>
			<dependency name="wpa"/>
			<dependency name="wps"/>
			<dependency name="wps"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_disco" syntax="cmd_disco(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_discord" syntax="cmd_discord(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dkb" syntax="cmd_dkb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_disablespeedboost"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dm" syntax="cmd_dm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DMw"/>
			<dependency name="DMw"/>
			<dependency name="GetPlayerMinigame"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="NickName"/>
			<dependency name="NickName"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerTeam"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="dm"/>
			<dependency name="dmlock"/>
			<dependency name="formatex"/>
			<dependency name="mSend3"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dmao" syntax="cmd_dmao(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="E_STREAMER_ATTACHED_VEHICLE"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPName"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dmapicon" syntax="cmd_dmapicon(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="AdminLvl"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dmj" syntax="cmd_dmj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="cmd_disablemegajump"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="megajump"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dmkick" syntax="cmd_dmkick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="ResetPlayerArmor"/>
			<dependency name="ResetPlayerHealth"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="dm"/>
			<dependency name="formatex"/>
			<dependency name="mSend3"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dmlock" syntax="cmd_dmlock(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="NickName"/>
			<dependency name="NickName"/>
			<dependency name="ResetPlayerArmor"/>
			<dependency name="ResetPlayerHealth"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="dm"/>
			<dependency name="dmlock"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mSend3"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dmq" syntax="cmd_dmq(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="ResetPlayerArmor"/>
			<dependency name="ResetPlayerHealth"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="dm"/>
			<dependency name="mSend3"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dmzone1" syntax="cmd_dmzone1(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dmzone10" syntax="cmd_dmzone10(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dmzone2" syntax="cmd_dmzone2(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dmzone3" syntax="cmd_dmzone3(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dmzone4" syntax="cmd_dmzone4(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dmzone5" syntax="cmd_dmzone5(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dmzone6" syntax="cmd_dmzone6(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dmzone7" syntax="cmd_dmzone7(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dmzone8" syntax="cmd_dmzone8(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dmzone9" syntax="cmd_dmzone9(playerid, params)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_dnrisland" syntax="cmd_dnrisland(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dns" syntax="cmd_dns(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="24"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="HTTP"/>
			<dependency name="HTTP_GET"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dnv" syntax="cmd_dnv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetPName"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="formatex"/>
			<dependency name="laststatic"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_do" syntax="cmd_do(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="149"/>
			<referrer name="cmd_du"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="E_STREAMER_MODEL_ID"/>
			<dependency name="GetDynamicObjectMaterial"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetDynamicObjectRot"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsDynamicObjectMaterialUsed"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dobj" syntax="cmd_dobj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="59"/>
			<referrer name="cmd_d"/>
			<dependency name="DeleteMovingData"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Moving"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="formatex"/>
			<dependency name="idUsed"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_docks" syntax="cmd_docks(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dodo" syntax="cmd_dodo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dollar" syntax="cmd_dollar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_donate" syntax="cmd_donate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_donateinfo" syntax="cmd_donateinfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dontask" syntax="cmd_dontask(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_donuts" syntax="cmd_donuts(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_door" syntax="cmd_door(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_doors" syntax="cmd_doors(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dosf" syntax="cmd_dosf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="48"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_doshka" syntax="cmd_doshka(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dpickup" syntax="cmd_dpickup(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="AdminLvl"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dpt" syntax="cmd_dpt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="281"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dr" syntax="cmd_dr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_disarmradius"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dra" syntax="cmd_dra(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_disablerhinoall"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dramp" syntax="cmd_dramp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="cmd_deleteramp"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="myramp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drift" syntax="cmd_drift(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1211"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DestroyTextDraws"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftName"/>
			<dependency name="DriftName"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="DriftPos"/>
			<dependency name="DriftPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerDriftCancellation"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="TDDrift"/>
			<dependency name="TDrif"/>
			<dependency name="TDriftPointsNow"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TimeLeft"/>
			<dependency name="TimerA"/>
			<dependency name="TimerC"/>
			<dependency name="__loading"/>
			<dependency name="__loading"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="eDriftTimer"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="mysql_query"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drift1" syntax="cmd_drift1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drift2" syntax="cmd_drift2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drift3" syntax="cmd_drift3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drift4" syntax="cmd_drift4(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drift5" syntax="cmd_drift5(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drift6" syntax="cmd_drift6(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_driftcity" syntax="cmd_driftcity(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drop" syntax="cmd_drop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="111"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drop2" syntax="cmd_drop2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="111"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dropguns" syntax="cmd_dropguns(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="LooseWeapons"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_drunk" syntax="cmd_drunk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dsb" syntax="cmd_dsb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_disablespeedboost"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dsbfp" syntax="cmd_dsbfp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AdminLvl"/>
			<dependency name="EnableStuntBonusForPlayer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dsbkb" syntax="cmd_dsbkb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_disablespeedboost"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dsc" syntax="cmd_dsc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_deletesavedcar"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dso" syntax="cmd_dso(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="58"/>
			<dependency name="DeleteMovingData"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="Minigame"/>
			<dependency name="Moving"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="formatex"/>
			<dependency name="idUsed"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dsom" syntax="cmd_dsom(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="BeginObjectSelecting"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dsor" syntax="cmd_dsor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DestroyDynamicObject"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPointInRangeOfPoint"/>
			<dependency name="IsValidDynamicObject"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_du" syntax="cmd_du(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_do"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_duel" syntax="cmd_duel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="351"/>
			<dependency name="DuelDisable"/>
			<dependency name="DuelIgnored"/>
			<dependency name="DuelIgnored"/>
			<dependency name="DuelInvitation"/>
			<dependency name="DuelStarting"/>
			<dependency name="DuelTimer"/>
			<dependency name="DuelWaiting"/>
			<dependency name="DuelWeapon"/>
			<dependency name="DuelWeapon"/>
			<dependency name="DuelWorld"/>
			<dependency name="Duel_End"/>
			<dependency name="Duel_Initiate"/>
			<dependency name="Duel_RandomizeSigns"/>
			<dependency name="Duel_SetPlayerPos"/>
			<dependency name="GetPlayerMinigame"/>
			<dependency name="GetWeaponModelIDFromName"/>
			<dependency name="IsDueling"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="KillTimer"/>
			<dependency name="NickName"/>
			<dependency name="NickName"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="ResetPlayerArmor"/>
			<dependency name="ResetPlayerHealth"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="ReturnPlayerID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="WeaponNames"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mSend2"/>
			<dependency name="mSend3"/>
			<dependency name="mSend4"/>
			<dependency name="mSend5"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<dependency name="strtok"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_e" syntax="cmd_e(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<referrer name="cmd_ep"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateExplosion"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="explosions"/>
			<dependency name="explosionsr"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_eamj" syntax="cmd_eamj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_enableallmegajump"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_east" syntax="cmd_east(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_easteregghint" syntax="cmd_easteregghint(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="cmd_egghint"/>
			<dependency name="EasterEgg"/>
			<dependency name="EasterEgg"/>
			<dependency name="SendClientMessage"/>
			<dependency name="random"/>
			<dependency name="tip"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_eat" syntax="cmd_eat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="152"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerName"/>
			<dependency name="God"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_eavr" syntax="cmd_eavr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="rockets"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_eggcmds" syntax="cmd_eggcmds(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_egghelp"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_egghelp" syntax="cmd_egghelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_eggcmds"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_egghint" syntax="cmd_egghint(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_easteregghint"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_egmfp" syntax="cmd_egmfp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="TogglePlayerGhostMode"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_eha" syntax="cmd_eha(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_enablehydraall"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_eho" syntax="cmd_eho(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="EditAttachedObject"/>
			<dependency name="Epx"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_eject" syntax="cmd_eject(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="RemovePlayerFromVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_elbow" syntax="cmd_elbow(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="FIGHT_STYLE_ELBOW"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFightingStyle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_elevator" syntax="cmd_elevator(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_emj" syntax="cmd_emj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="cmd_enablemegajump"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="megajump"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_enableaf" syntax="cmd_enableaf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="132"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="autofix"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_enableallmegajump" syntax="cmd_enableallmegajump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_eamj"/>
			<dependency name="AdminLvl"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="megajump"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_enablehydraall" syntax="cmd_enablehydraall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_eha"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="hydra"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_enablemegajump" syntax="cmd_enablemegajump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_emj"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_enablepms" syntax="cmd_enablepms(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PMs"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_enablerhinoall" syntax="cmd_enablerhinoall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_era"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="rhino"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_enablespeedboost" syntax="cmd_enablespeedboost(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="111"/>
			<referrer name="cmd_esb"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_endrace" syntax="cmd_endrace(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="AmRacing"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="OnRaceCD"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceStart"/>
			<dependency name="RaceTime"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="TextDrawHideForAll"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="bombrace"/>
			<dependency name="eTimer"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="lastwin"/>
			<dependency name="rTimer"/>
			<dependency name="racelabel"/>
			<dependency name="racenotify"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<dependency name="xx_cd"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_engine" syntax="cmd_engine(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_eo" syntax="cmd_eo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="EditDynamicObject"/>
			<dependency name="Editing"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ep" syntax="cmd_ep(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_e"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_era" syntax="cmd_era(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_enablerhinoall"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_esb" syntax="cmd_esb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_enablespeedboost"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_esbfp" syntax="cmd_esbfp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AdminLvl"/>
			<dependency name="EnableStuntBonusForPlayer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_euros" syntax="cmd_euros(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_evc" syntax="cmd_evc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_tvc"/>
			<dependency name="Collisions"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_evcfp" syntax="cmd_evcfp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="cmd_tvcfp"/>
			<dependency name="AdminLvl"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_event" syntax="cmd_event(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_event2" syntax="cmd_event2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_expo" syntax="cmd_expo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateExplosion"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_f" syntax="cmd_f(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_flip"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_facebook" syntax="cmd_facebook(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_factory" syntax="cmd_factory(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_faggio" syntax="cmd_faggio(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fakeban" syntax="cmd_fakeban(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="62"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fakekill" syntax="cmd_fakekill(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendDeathMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fakeme" syntax="cmd_fakeme(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="61"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fart" syntax="cmd_fart(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_farton" syntax="cmd_farton(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerName"/>
			<dependency name="God"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fav" syntax="cmd_fav(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fav2" syntax="cmd_fav2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fch" syntax="cmd_fch(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_weapons"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fcr" syntax="cmd_fcr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fencegate" syntax="cmd_fencegate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="cmd_override"/>
			<dependency name="AdminLvl"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Security"/>
			<dependency name="strcmp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fex" syntax="cmd_fex(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fix" syntax="cmd_fix(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="RepairVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleHealth"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_flamedm" syntax="cmd_flamedm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_flamer" syntax="cmd_flamer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="apples"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_flamerall" syntax="cmd_flamerall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_flip" syntax="cmd_flip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_f"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AdminLvl"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="RepairVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SetVehicleVelocity"/>
			<dependency name="SetVehicleZAngle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_flowers" syntax="cmd_flowers(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_forceleave" syntax="cmd_forceleave(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="AmRacing"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Minigame"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="OnRaceCD"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="racelabel"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_forcesfa" syntax="cmd_forcesfa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="138"/>
			<referrer name="cmd_fsfa"/>
			<dependency name="AdminLvl"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_forsale" syntax="cmd_forsale(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fps" syntax="cmd_fps(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AttachCameraToObject"/>
			<dependency name="AttachCameraToPlayerObject"/>
			<dependency name="AttachObjectToPlayer"/>
			<dependency name="AttachPlayerObjectToVehicle"/>
			<dependency name="CreateObject"/>
			<dependency name="CreatePlayerObject"/>
			<dependency name="DestroyObject"/>
			<dependency name="FPS_bool"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="fFPS"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<dependency name="vFPS"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_francy" syntax="cmd_francy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_freeze" syntax="cmd_freeze(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="88"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_frr" syntax="cmd_frr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsAdmin"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fs" syntax="cmd_fs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fsfa" syntax="cmd_fsfa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_forcesfa"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ft" syntax="cmd_ft(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fu" syntax="cmd_fu(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_funbowl" syntax="cmd_funbowl(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_funnel1" syntax="cmd_funnel1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_funnel2" syntax="cmd_funnel2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fw" syntax="cmd_fw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setmyfw"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_g" syntax="cmd_g(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_goto"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ga" syntax="cmd_ga(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveapple"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gaa" syntax="cmd_gaa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveallapple"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gac" syntax="cmd_gac(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveallcash"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gamestats" syntax="cmd_gamestats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="DIALOG_STYLE_TABLIST"/>
			<dependency name="DeliveryTotal"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RacesJoined"/>
			<dependency name="RacesWon"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="ctf_wins"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gantdiner" syntax="cmd_gantdiner(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gao" syntax="cmd_gao(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveallorange"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gar" syntax="cmd_gar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveappleradius"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gasstation" syntax="cmd_gasstation(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gat" syntax="cmd_gat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="106"/>
			<referrer name="cmd_givealltokens"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GiveToken"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gaw" syntax="cmd_gaw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveallweapon"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gawr" syntax="cmd_gawr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveallweaponradius"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_getdist" syntax="cmd_getdist(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetDistance"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gethere" syntax="cmd_gethere(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<referrer name="cmd_gh"/>
			<referrer name="cmd_bring"/>
			<dependency name="AdminLvl"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_getid" syntax="cmd_getid(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="93"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gh" syntax="cmd_gh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_gethere"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gho" syntax="cmd_gho(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="161"/>
			<dependency name="Allowed"/>
			<dependency name="GetPlayerName"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<dependency name="slots"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ghost" syntax="cmd_ghost(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gibbs" syntax="cmd_gibbs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_jethrogibbs"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gift" syntax="cmd_gift(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_xmasgift"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giftbox" syntax="cmd_giftbox(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Server"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="box"/>
			<dependency name="boxtype"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ginvite" syntax="cmd_ginvite(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="formatex"/>
			<dependency name="gInvited"/>
			<dependency name="groupName"/>
			<dependency name="mysql_query"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gipv" syntax="cmd_gipv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_ps"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveallapple" syntax="cmd_giveallapple(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="cmd_gaa"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="apples"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveallcash" syntax="cmd_giveallcash(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="cmd_gac"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerCash"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveallfake" syntax="cmd_giveallfake(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="137"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveallorange" syntax="cmd_giveallorange(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="cmd_gao"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="oranges"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givealltokens" syntax="cmd_givealltokens(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_gat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveallweapon" syntax="cmd_giveallweapon(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="193"/>
			<referrer name="cmd_gaw"/>
			<dependency name="AmRacing"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetWeaponIDFromName"/>
			<dependency name="GetWeaponName"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidWeapon"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="allowmg"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveallweaponradius" syntax="cmd_giveallweaponradius(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="74"/>
			<referrer name="cmd_gawr"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetWeaponIDFromName"/>
			<dependency name="GetWeaponName"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsValidWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetPVarInt"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="strval"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveapple" syntax="cmd_giveapple(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="cmd_ga"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="apples"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveappleradius" syntax="cmd_giveappleradius(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="141"/>
			<referrer name="cmd_gar"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="apples"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givecash" syntax="cmd_givecash(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="cmd_sendcash"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AC_MoneyAlerts"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerCash"/>
			<dependency name="TakePlayerCash"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givefake" syntax="cmd_givefake(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="140"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givejp" syntax="cmd_givejp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="121"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveorange" syntax="cmd_giveorange(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="cmd_go"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="oranges"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveorangeradius" syntax="cmd_giveorangeradius(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="141"/>
			<referrer name="cmd_gor"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="oranges"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givepro" syntax="cmd_givepro(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="VIP"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givetoken" syntax="cmd_givetoken(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<referrer name="cmd_gt"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GiveToken"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Token"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givetokenradius" syntax="cmd_givetokenradius(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<referrer name="cmd_gtr"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GiveToken"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givevehicle" syntax="cmd_givevehicle(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="54"/>
			<referrer name="cmd_gv"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPName"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetVehicleModelIDFromName"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givevip" syntax="cmd_givevip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="VIP"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giveweapon" syntax="cmd_giveweapon(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="55"/>
			<referrer name="cmd_gw"/>
			<dependency name="AdminLvl"/>
			<dependency name="GetWeaponIDFromName"/>
			<dependency name="GetWeaponName"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidWeapon"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="allowmg"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_glasses" syntax="cmd_glasses(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_glenpark" syntax="cmd_glenpark(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_glo" syntax="cmd_glo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="E_STREAMER_MODEL_ID"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gm" syntax="cmd_gm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_god"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gmlo" syntax="cmd_gmlo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="E_STREAMER_MODEL_ID"/>
			<dependency name="IsAdmin"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gmo" syntax="cmd_gmo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="E_STREAMER_MODEL_ID"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_go" syntax="cmd_go(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveorange"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_god" syntax="cmd_god(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="126"/>
			<referrer name="cmd_gm"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AdminLvl"/>
			<dependency name="GetPlayerName"/>
			<dependency name="God"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsVIP"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerChatBubble"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_golfclub" syntax="cmd_golfclub(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gom" syntax="cmd_gom(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="54"/>
			<dependency name="GetDynamicObjectMaterial"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_goodies" syntax="cmd_goodies(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gor" syntax="cmd_gor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveorangeradius"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_goto" syntax="cmd_goto(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="113"/>
			<referrer name="cmd_g"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="AdminLvl"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gotocoords" syntax="cmd_gotocoords(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gotocoords2" syntax="cmd_gotocoords2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gotox" syntax="cmd_gotox(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gotoy" syntax="cmd_gotoy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gotoz" syntax="cmd_gotoz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_grabkick" syntax="cmd_grabkick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="FIGHT_STYLE_GRABKICK"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFightingStyle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_graveyard" syntax="cmd_graveyard(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_green" syntax="cmd_green(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_grenadedm" syntax="cmd_grenadedm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_grenadedm2" syntax="cmd_grenadedm2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_grenades" syntax="cmd_grenades(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="Token"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_grey" syntax="cmd_grey(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_groupmanage" syntax="cmd_groupmanage(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="groupName"/>
			<dependency name="mysql_query"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_grove" syntax="cmd_grove(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gt" syntax="cmd_gt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_givetoken"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gtr" syntax="cmd_gtr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_givetokenradius"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_guns" syntax="cmd_guns(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_ammo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gv" syntax="cmd_gv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_givevehicle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gw" syntax="cmd_gw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_giveweapon"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_handsup" syntax="cmd_handsup(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SPECIAL_ACTION_HANDSUP"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_heal" syntax="cmd_heal(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_healall" syntax="cmd_healall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_hl"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_healme" syntax="cmd_healme(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="Token"/>
			<dependency name="canhealme"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_helis" syntax="cmd_helis(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowModelSelectionMenu"/>
			<dependency name="helislist"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hell" syntax="cmd_hell(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_helmet" syntax="cmd_helmet(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="_ResetHO_coOrdination"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_help" syntax="cmd_help(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hideme" syntax="cmd_hideme(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="hidden"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hideout" syntax="cmd_hideout(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hideout2" syntax="cmd_hideout2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hideout3" syntax="cmd_hideout3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hideout4" syntax="cmd_hideout4(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hideradar" syntax="cmd_hideradar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="SetPlayerMarkerForPlayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hl" syntax="cmd_hl(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_healall"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hohelp" syntax="cmd_hohelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="609"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hos" syntax="cmd_hos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_samplehos"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hoshi" syntax="cmd_hoshi(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hospital" syntax="cmd_hospital(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_house" syntax="cmd_house(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hox" syntax="cmd_hox(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="147"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hoy" syntax="cmd_hoy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="147"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hoz" syntax="cmd_hoz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="147"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hq" syntax="cmd_hq(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hrx" syntax="cmd_hrx(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="140"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hry" syntax="cmd_hry(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="147"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hrz" syntax="cmd_hrz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="147"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hsdm" syntax="cmd_hsdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hsrpg" syntax="cmd_hsrpg(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hsx" syntax="cmd_hsx(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="147"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hsy" syntax="cmd_hsy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="147"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hsz" syntax="cmd_hsz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="147"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<dependency name="oX"/>
			<dependency name="oY"/>
			<dependency name="oZ"/>
			<dependency name="rX"/>
			<dependency name="rY"/>
			<dependency name="rZ"/>
			<dependency name="sX"/>
			<dependency name="sY"/>
			<dependency name="sZ"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hug" syntax="cmd_hug(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hunter" syntax="cmd_hunter(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hy" syntax="cmd_hy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_hydraulics"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hydra" syntax="cmd_hydra(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="hydra"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hydradm" syntax="cmd_hydradm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="autofix"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hydraulics" syntax="cmd_hydraulics(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_hy"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ic" syntax="cmd_ic(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_icode" syntax="cmd_icode(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_imghelp" syntax="cmd_imghelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_import" syntax="cmd_import(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_injured" syntax="cmd_injured(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_irc" syntax="cmd_irc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_island" syntax="cmd_island(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jail" syntax="cmd_jail(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="142"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="JailTimer"/>
			<dependency name="Minigame"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_janitor" syntax="cmd_janitor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jayce" syntax="cmd_jayce(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jays" syntax="cmd_jays(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jeffy" syntax="cmd_jeffy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jester" syntax="cmd_jester(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jethrogibbs" syntax="cmd_jethrogibbs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_gibbs"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jetpack" syntax="cmd_jetpack(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_jp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_john" syntax="cmd_john(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_join" syntax="cmd_join(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="CPs"/>
			<dependency name="CPs"/>
			<dependency name="CPsize"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="DisableRemoteVehicleCollisions"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="OnRaceCD"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="R_Interior"/>
			<dependency name="R_Name"/>
			<dependency name="R_Weather"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceStart"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerRaceCheckpoint"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="TotalRacers"/>
			<dependency name="VehicleID"/>
			<dependency name="bombrace"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_joinctf" syntax="cmd_joinctf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="ActiveCTF"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="CTFSpawn"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="TDMJoined"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_joinderby" syntax="cmd_joinderby(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="ActiveDerby"/>
			<dependency name="DerbyInterior"/>
			<dependency name="DerbyLoaded"/>
			<dependency name="DerbyPlayers"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbyVehicle"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="TDMJoined"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_joingroup" syntax="cmd_joingroup(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="75"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="gInvited"/>
			<dependency name="groupName"/>
			<dependency name="mysql_query"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_joinptp" syntax="cmd_joinptp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Server"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SetPlayerTeam"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="ptp_president"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_joinsurvival" syntax="cmd_joinsurvival(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="God"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SPoints"/>
			<dependency name="SVLoaded"/>
			<dependency name="SVPlayers"/>
			<dependency name="SVStarted"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="TDMJoined"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jointdm" syntax="cmd_jointdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="128"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="GetPlayerName"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerCameraLookAt"/>
			<dependency name="SetPlayerCameraPos"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="TDMJoined"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jp" syntax="cmd_jp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_jetpack"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsVIP"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jpdm" syntax="cmd_jpdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SPECIAL_ACTION_USEJETPACK"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_jump" syntax="cmd_jump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kalifa" syntax="cmd_kalifa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kart" syntax="cmd_kart(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LastCar"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kb" syntax="cmd_kb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="22"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="_B@EchoS"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kick" syntax="cmd_kick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="72"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Kick2"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="gSpectateType"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kill" syntax="cmd_kill(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DestroyTextDraws"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="DuelInvitation"/>
			<dependency name="Duel_End"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsDueling"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerDriftCancellation"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerArmor"/>
			<dependency name="ResetPlayerHealth"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="TDDrift"/>
			<dependency name="TDrif"/>
			<dependency name="TDriftPointsNow"/>
			<dependency name="TT_Exit"/>
			<dependency name="TT_ID"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TimeLeft"/>
			<dependency name="TimerA"/>
			<dependency name="TimerC"/>
			<dependency name="autofix"/>
			<dependency name="dm"/>
			<dependency name="eDriftTimer"/>
			<dependency name="false"/>
			<dependency name="mSend3"/>
			<dependency name="true"/>
			<dependency name="ttCD"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kingring" syntax="cmd_kingring(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kiss" syntax="cmd_kiss(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kissing" syntax="cmd_kissing(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kjj" syntax="cmd_kjj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kneehead" syntax="cmd_kneehead(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="FIGHT_STYLE_KNEEHEAD"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFightingStyle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_knife" syntax="cmd_knife(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kp" syntax="cmd_kp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AdminLvl"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ks" syntax="cmd_ks(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="52"/>
			<dependency name="KSpree"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kungfu" syntax="cmd_kungfu(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="FIGHT_STYLE_KUNGFU"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFightingStyle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_label" syntax="cmd_label(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_mylabel"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_landmass" syntax="cmd_landmass(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lastcheckpoint" syntax="cmd_lastcheckpoint(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_lcp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lastroad" syntax="cmd_lastroad(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_launch" syntax="cmd_launch(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_launcher" syntax="cmd_launcher(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetVehicleVelocity"/>
			<dependency name="SpeedBoostMultiplier"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="floatabs"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lcp" syntax="cmd_lcp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_lastcheckpoint"/>
			<dependency name="AmRacing"/>
			<dependency name="CPs"/>
			<dependency name="CPs"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="Players"/>
			<dependency name="RaceActive"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ld" syntax="cmd_ld(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_loadderby"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lean" syntax="cmd_lean(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_leave" syntax="cmd_leave(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="AmRacing"/>
			<dependency name="Collisions"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="DisablePlayerRaceCheckpoint"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Minigame"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="OnRaceCD"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="RemovePlayerMapIcon"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="racelabel"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_leavedm" syntax="cmd_leavedm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="cmd_leavemg"/>
			<dependency name="DestroyTextDraws"/>
			<dependency name="DriftBonus"/>
			<dependency name="DriftPointsNow"/>
			<dependency name="DuelInvitation"/>
			<dependency name="Duel_End"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsDueling"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerDriftCancellation"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerArmor"/>
			<dependency name="ResetPlayerHealth"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="TDDrift"/>
			<dependency name="TDrif"/>
			<dependency name="TDriftPointsNow"/>
			<dependency name="TT_Exit"/>
			<dependency name="TT_ID"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TimeLeft"/>
			<dependency name="TimerA"/>
			<dependency name="TimerC"/>
			<dependency name="autofix"/>
			<dependency name="dm"/>
			<dependency name="eDriftTimer"/>
			<dependency name="false"/>
			<dependency name="mSend3"/>
			<dependency name="true"/>
			<dependency name="ttCD"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_leavemg" syntax="cmd_leavemg(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_leavedm"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_leaveptp" syntax="cmd_leaveptp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="God"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Server"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="false"/>
			<dependency name="ptp_president"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_leavetdm" syntax="cmd_leavetdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="TDMJoined"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lho" syntax="cmd_lho(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="162"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="HO_exist"/>
			<dependency name="HO_load"/>
			<dependency name="ID"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SSCANF__"/>
			<dependency name="SavedBy"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_libertycity" syntax="cmd_libertycity(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lick" syntax="cmd_lick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lift" syntax="cmd_lift(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Assigned_GiveFreeMovingID"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="Moving"/>
			<dependency name="Moving"/>
			<dependency name="MovingToX"/>
			<dependency name="MovingToY"/>
			<dependency name="MovingToZ"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ReturnPosX"/>
			<dependency name="ReturnPosY"/>
			<dependency name="ReturnPosZ"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="e_MovingObject_Speed"/>
			<dependency name="formatex"/>
			<dependency name="idUsed"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lift2" syntax="cmd_lift2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Assigned_GiveFreeMovingID"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="Moving"/>
			<dependency name="Moving"/>
			<dependency name="MovingToX"/>
			<dependency name="MovingToY"/>
			<dependency name="MovingToZ"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ReturnPosX"/>
			<dependency name="ReturnPosY"/>
			<dependency name="ReturnPosZ"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="e_MovingObject_Speed"/>
			<dependency name="formatex"/>
			<dependency name="idUsed"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lightblue" syntax="cmd_lightblue(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lights" syntax="cmd_lights(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lime" syntax="cmd_lime(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_limo" syntax="cmd_limo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lo" syntax="cmd_lo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_loadobjects"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loadcar" syntax="cmd_loadcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="random"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loadctf" syntax="cmd_loadctf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="42"/>
			<dependency name="ActiveCTF"/>
			<dependency name="CTFFlags"/>
			<dependency name="CTFI"/>
			<dependency name="CTFIcons"/>
			<dependency name="CTFInterior"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="CTFSpawn"/>
			<dependency name="CTFTimer"/>
			<dependency name="CTFToken"/>
			<dependency name="CTF_Flags"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loadderby" syntax="cmd_loadderby(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="81"/>
			<referrer name="cmd_ld"/>
			<dependency name="operator!=(Float:,_:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="ActiveDerby"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="DerbyInterior"/>
			<dependency name="DerbyLoaded"/>
			<dependency name="DerbyPickups"/>
			<dependency name="DerbyPlayers"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbySpawns"/>
			<dependency name="DerbyTime"/>
			<dependency name="DerbyVehicle"/>
			<dependency name="DerbyZ"/>
			<dependency name="GameTextForAll"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="LoadDerbyMap"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetTimer"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loadobjects" syntax="cmd_loadobjects(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="149"/>
			<referrer name="cmd_lo"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPName"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loadrace" syntax="cmd_loadrace(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="31"/>
			<dependency name="IsAdmin"/>
			<dependency name="LoadRace"/>
			<dependency name="RaceRotation"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loadset" syntax="cmd_loadset(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1190"/>
			<referrer name="cmd_ls"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPName"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loadsurvival" syntax="cmd_loadsurvival(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="52"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsAdmin"/>
			<dependency name="SQL"/>
			<dependency name="SVLoaded"/>
			<dependency name="SVStarted"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lock" syntax="cmd_lock(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_login" syntax="cmd_login(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="68"/>
			<dependency name="Logged"/>
			<dependency name="Login"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetMyColor"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lol" syntax="cmd_lol(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_longjump" syntax="cmd_longjump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loo" syntax="cmd_loo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_loopobj"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loop" syntax="cmd_loop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loopobj" syntax="cmd_loopobj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="33"/>
			<referrer name="cmd_stack"/>
			<referrer name="cmd_loo"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loopobj2" syntax="cmd_loopobj2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="136"/>
			<referrer name="cmd_loor"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsValidObjectModel"/>
			<dependency name="IsValidSAMPObject"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loopobj3" syntax="cmd_loopobj3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="133"/>
			<referrer name="cmd_lor"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsValidObjectModel"/>
			<dependency name="IsValidSAMPObject"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loopstunt" syntax="cmd_loopstunt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_loor" syntax="cmd_loor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_loopobj2"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lor" syntax="cmd_lor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_loopobj3"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lotto" syntax="cmd_lotto(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="Lotto"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="TakePlayerCash"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lovinit" syntax="cmd_lovinit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lowrider" syntax="cmd_lowrider(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ls" syntax="cmd_ls(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_loadset"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lsa" syntax="cmd_lsa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lsajump" syntax="cmd_lsajump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lshospital" syntax="cmd_lshospital(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lva" syntax="cmd_lva(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_lvpolice" syntax="cmd_lvpolice(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_m1" syntax="cmd_m1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_m2" syntax="cmd_m2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_m3" syntax="cmd_m3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_m4dm" syntax="cmd_m4dm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_makeout" syntax="cmd_makeout(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mall" syntax="cmd_mall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_maluda" syntax="cmd_maluda(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_maludadisco" syntax="cmd_maludadisco(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mansion" syntax="cmd_mansion(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mapicon" syntax="cmd_mapicon(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_maprecord" syntax="cmd_maprecord(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Kick"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_maverick" syntax="cmd_maverick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mcasino" syntax="cmd_mcasino(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_me" syntax="cmd_me(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="Muted"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="stringContainsIP"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_meathouse" syntax="cmd_meathouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mega" syntax="cmd_mega(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_megajump" syntax="cmd_megajump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="cmd_mj"/>
			<dependency name="AdminLvl"/>
			<dependency name="MJ_Value"/>
			<dependency name="MJ_Value"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="megajump"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_meghan" syntax="cmd_meghan(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mehdi" syntax="cmd_mehdi(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_methlab" syntax="cmd_methlab(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mg" syntax="cmd_mg(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_minigun"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mgdm" syntax="cmd_mgdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="allowmg"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mgdm2" syntax="cmd_mgdm2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="allowmg"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mgdm3" syntax="cmd_mgdm3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="allowmg"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_michelles" syntax="cmd_michelles(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_minigames" syntax="cmd_minigames(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_minigun" syntax="cmd_minigun(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_mg"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_minigunall" syntax="cmd_minigunall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="WEAPON_MINIGUN"/>
			<dependency name="allowmg"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mj" syntax="cmd_mj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_megajump"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mjh" syntax="cmd_mjh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="MJ_Value"/>
			<dependency name="MJ_Value"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mjv" syntax="cmd_mjv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="MJ_Value"/>
			<dependency name="MJ_Value"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_monster" syntax="cmd_monster(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="DriftID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RaceActive"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="TDrif"/>
			<dependency name="VehicleID"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_motel" syntax="cmd_motel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_movehelp" syntax="cmd_movehelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_moveproxies" syntax="cmd_moveproxies(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="27"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_moveu" syntax="cmd_moveu(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mrt" syntax="cmd_mrt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_mytoken"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mute" syntax="cmd_mute(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="AdminLvl"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="MuteTimer"/>
			<dependency name="Muted"/>
			<dependency name="MutedBy"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetTimerEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mycar" syntax="cmd_mycar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="42"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetVehicleModelIDFromName"/>
			<dependency name="IsNumeric"/>
			<dependency name="Minigame"/>
			<dependency name="MyCar"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TDMJoined"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="strval"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myeastereggs" syntax="cmd_myeastereggs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_myeggs"/>
			<dependency name="CountPlayerEggs"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myeggs" syntax="cmd_myeggs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_myeastereggs"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myfence" syntax="cmd_myfence(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AttachDynamicObjectToVehicle"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myho" syntax="cmd_myho(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="611"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="bone"/>
			<dependency name="formatex"/>
			<dependency name="modelID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mylabel" syntax="cmd_mylabel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="48"/>
			<referrer name="cmd_label"/>
			<referrer name="cmd_setlabel"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="Minigame"/>
			<dependency name="MyLabel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myobjects" syntax="cmd_myobjects(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="E_STREAMER_MODEL_ID"/>
			<dependency name="IsAdmin"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myobjsets" syntax="cmd_myobjsets(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="40"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="ObjDialogIDs"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mypos" syntax="cmd_mypos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myprops" syntax="cmd_myprops(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="813"/>
			<dependency name="DIALOG_STYLE_TABLIST"/>
			<dependency name="GetPlayerID"/>
			<dependency name="PlayerProps"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropName"/>
			<dependency name="PropOwner"/>
			<dependency name="PropValue"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myradio" syntax="cmd_myradio(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="79"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="PlayAudioStreamForPlayer"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myramp" syntax="cmd_myramp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="myramp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mysqlq" syntax="cmd_mysqlq(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="cache_affected_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mytime" syntax="cmd_mytime(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="mytime"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mytoken" syntax="cmd_mytoken(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="73"/>
			<referrer name="cmd_mrt"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Token"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_myweather" syntax="cmd_myweather(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nearestplayer" syntax="cmd_nearestplayer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_np"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nearestrockets" syntax="cmd_nearestrockets(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<referrer name="cmd_nr"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_neon" syntax="cmd_neon(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_neons"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_neons" syntax="cmd_neons(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_neon"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_newteleport" syntax="cmd_newteleport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="36"/>
			<referrer name="cmd_newtp"/>
			<dependency name="CreateNewTeleport"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_newtp" syntax="cmd_newtp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_newteleport"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_night" syntax="cmd_night(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="mytime"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nightstick" syntax="cmd_nightstick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nocolor" syntax="cmd_nocolor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_normalfs" syntax="cmd_normalfs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="FIGHT_STYLE_NORMAL"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFightingStyle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nos" syntax="cmd_nos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInInvalidNosVehicle"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nospam" syntax="cmd_nospam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nospawnkill" syntax="cmd_nospawnkill(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="GameTextForAll"/>
			<dependency name="IsAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_noway" syntax="cmd_noway(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_np" syntax="cmd_np(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_nearestplayer"/>
			<dependency name="GetPlayerClosestPlayer"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_npcs" syntax="cmd_npcs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nr" syntax="cmd_nr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_nearestrockets"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nrg" syntax="cmd_nrg(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="DriftID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RaceActive"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="TDrif"/>
			<dependency name="VehicleID"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nrgstunt2" syntax="cmd_nrgstunt2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nso" syntax="cmd_nso(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="32"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerClosestStreamedObject"/>
			<dependency name="GetUserIDName"/>
			<dependency name="GetUserIDName"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nuke" syntax="cmd_nuke(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateExplosion"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nuke2" syntax="cmd_nuke2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateExplosion"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_numplate" syntax="cmd_numplate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_plate"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_obj" syntax="cmd_obj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="22"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_objhelp" syntax="cmd_objhelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_objinfo" syntax="cmd_objinfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_streamerstats"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_objletters" syntax="cmd_objletters(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="44"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="CreateSentence"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetTotalCreatedObjects"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_offroad" syntax="cmd_offroad(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ohno" syntax="cmd_ohno(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ohyea" syntax="cmd_ohyea(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_oinfo" syntax="cmd_oinfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_streamerstats"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_omfg" syntax="cmd_omfg(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_onfire" syntax="cmd_onfire(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_or" syntax="cmd_or(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_override"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_orange" syntax="cmd_orange(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_override" syntax="cmd_override(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_or"/>
			<dependency name="cmd_fencegate"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pa" syntax="cmd_pa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_playaudio"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_paintjob" syntax="cmd_paintjob(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_pj"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_paintjob1" syntax="cmd_paintjob1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_pj1"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_paintjob2" syntax="cmd_paintjob2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_pj2"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_paintjob3" syntax="cmd_paintjob3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_pj3"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_palm" syntax="cmd_palm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_panzehir" syntax="cmd_panzehir(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_panztalk" syntax="cmd_panztalk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GetNPCNameByID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pap" syntax="cmd_pap(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_playaudioplayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_para" syntax="cmd_para(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parajump1" syntax="cmd_parajump1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parajump2" syntax="cmd_parajump2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parajump3" syntax="cmd_parajump3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerPos"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parajump4" syntax="cmd_parajump4(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parajump5" syntax="cmd_parajump5(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parkour1" syntax="cmd_parkour1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parkour2" syntax="cmd_parkour2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parkour3" syntax="cmd_parkour3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parkour4" syntax="cmd_parkour4(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parkour5" syntax="cmd_parkour5(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parkour6" syntax="cmd_parkour6(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parkour7" syntax="cmd_parkour7(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_parkournrg" syntax="cmd_parkournrg(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_party" syntax="cmd_party(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_peckers" syntax="cmd_peckers(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pee" syntax="cmd_pee(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SPECIAL_ACTION_PISSING"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_penis" syntax="cmd_penis(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="_ResetHO_coOrdination"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ph" syntax="cmd_ph(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pickup" syntax="cmd_pickup(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsValidObjectModel"/>
			<dependency name="IsValidSAMPObject"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pier69" syntax="cmd_pier69(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pink" syntax="cmd_pink(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pipe" syntax="cmd_pipe(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pirateship" syntax="cmd_pirateship(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pj" syntax="cmd_pj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_paintjob"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsInCar"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pj1" syntax="cmd_pj1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_paintjob1"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsInCar"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pj2" syntax="cmd_pj2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_paintjob2"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsInCar"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pj3" syntax="cmd_pj3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_paintjob3"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsInCar"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_planes" syntax="cmd_planes(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DriftID"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowModelSelectionMenu"/>
			<dependency name="TDrif"/>
			<dependency name="planelist"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_plate" syntax="cmd_plate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="25"/>
			<referrer name="cmd_snp"/>
			<referrer name="cmd_setnumplate"/>
			<referrer name="cmd_numplate"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsBoat"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleToRespawn"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_playaudio" syntax="cmd_playaudio(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<referrer name="cmd_pa"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="PlayAudioStreamForPlayer"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_playaudioplayer" syntax="cmd_playaudioplayer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="91"/>
			<referrer name="cmd_pap"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayAudioStreamForPlayer"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_playaz" syntax="cmd_playaz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_playduel" syntax="cmd_playduel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="dueling"/>
			<dependency name="duelloc"/>
			<dependency name="false"/>
			<dependency name="invited"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_playpen" syntax="cmd_playpen(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pm" syntax="cmd_pm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="140"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPVarInt"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Muted"/>
			<dependency name="PMs"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins_PM"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="acceptpms"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="lastpm"/>
			<dependency name="stringContainsIP"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_police" syntax="cmd_police(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pooldm" syntax="cmd_pooldm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pooldm2" syntax="cmd_pooldm2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_poop" syntax="cmd_poop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ppimv" syntax="cmd_ppimv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_price" syntax="cmd_price(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_prison" syntax="cmd_prison(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_probe" syntax="cmd_probe(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_prodm" syntax="cmd_prodm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_proinfo" syntax="cmd_proinfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_prophelp" syntax="cmd_prophelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pros" syntax="cmd_pros(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="VIP"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_prosay" syntax="cmd_prosay(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_say"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ps" syntax="cmd_ps(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<referrer name="cmd_gipv"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_psay" syntax="cmd_psay(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_say"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_puke" syntax="cmd_puke(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_pumpkin" syntax="cmd_pumpkin(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="_ResetHO_coOrdination"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_purple" syntax="cmd_purple(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_qs" syntax="cmd_qs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_quickstart"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_quarry" syntax="cmd_quarry(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_quickstart" syntax="cmd_quickstart(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_qs"/>
			<referrer name="cmd_startrace"/>
			<dependency name="IsAdmin"/>
			<dependency name="OnRaceCD"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceStart"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<dependency name="xx_cd"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_race" syntax="cmd_race(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="108"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCGen"/>
			<dependency name="IsAdmin"/>
			<dependency name="RaceActive"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StartRace"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_raceguide" syntax="cmd_raceguide(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_racehelp" syntax="cmd_racehelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_raceinfo" syntax="cmd_raceinfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_racers"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_racenos" syntax="cmd_racenos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsAdmin"/>
			<dependency name="RaceNOS"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_racerotation" syntax="cmd_racerotation(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsAdmin"/>
			<dependency name="RaceRotation"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_racers" syntax="cmd_racers(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="512"/>
			<referrer name="cmd_raceinfo"/>
			<dependency name="AmRacing"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="MyCurrentCP"/>
			<dependency name="Players"/>
			<dependency name="RCreator"/>
			<dependency name="R_Name"/>
			<dependency name="RaceActive"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="TotalCP"/>
			<dependency name="TotalRacers"/>
			<dependency name="TotalRacersCur"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_racerules" syntax="cmd_racerules(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_racetrack" syntax="cmd_racetrack(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_racevehicle" syntax="cmd_racevehicle(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_rvehicle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_radio" syntax="cmd_radio(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rafinha" syntax="cmd_rafinha(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_raho" syntax="cmd_raho(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SendClientMessage"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_railroad" syntax="cmd_railroad(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ramp" syntax="cmd_ramp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_randomgame" syntax="cmd_randomgame(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="IsAdmin"/>
			<dependency name="RandomMinigame"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rank" syntax="cmd_rank(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Expierience"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Rank"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rape" syntax="cmd_rape(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerName"/>
			<dependency name="God"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rasv" syntax="cmd_rasv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetVehicleToRespawn"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="formatex"/>
			<dependency name="laststatic"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rc" syntax="cmd_rc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_reconnect"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rcbox" syntax="cmd_rcbox(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rcity" syntax="cmd_rcity(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rcmd" syntax="cmd_rcmd(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_rconcmd"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rconadmins" syntax="cmd_rconadmins(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdmin"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rconcmd" syntax="cmd_rconcmd(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="55"/>
			<referrer name="cmd_rcmd"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SendRconCommand"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_react" syntax="cmd_react(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="tword"/>
			<dependency name="typing"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_readpms" syntax="cmd_readpms(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="false"/>
			<dependency name="readpms"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_readrules" syntax="cmd_readrules(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_readteles" syntax="cmd_readteles(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="false"/>
			<dependency name="readteles"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_really" syntax="cmd_really(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_reconnect" syntax="cmd_reconnect(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<referrer name="cmd_rc"/>
			<dependency name="AdminLvl"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="ReconnectIP"/>
			<dependency name="ReconnectIP"/>
			<dependency name="Reconnecting"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SendRconCommand"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_red" syntax="cmd_red(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_reefy" syntax="cmd_reefy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_register" syntax="cmd_register(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="199"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="Logged"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="Save"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="Skin"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_reham" syntax="cmd_reham(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_report" syntax="cmd_report(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="67"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="DCReports"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RXDM"/>
			<dependency name="Reports"/>
			<dependency name="ReportsString"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Server"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TotalReports"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cellmax"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="reporteda"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_requestteleport" syntax="cmd_requestteleport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_rtp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_resetcam" syntax="cmd_resetcam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="SetCameraBehindPlayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_resetracerecord" syntax="cmd_resetracerecord(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_resetttime"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_resettime" syntax="cmd_resettime(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="32"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_resetttime" syntax="cmd_resetttime(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="32"/>
			<referrer name="cmd_resetracerecord"/>
			<referrer name="cmd_rrr"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_restaurant" syntax="cmd_restaurant(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_restore" syntax="cmd_restore(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="BuildObjects"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rhino" syntax="cmd_rhino(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="rhino"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rho" syntax="cmd_rho(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="136"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerAttachedObjectSlotUsed"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rick" syntax="cmd_rick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rims" syntax="cmd_rims(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rmbuilding" syntax="cmd_rmbuilding(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="RemoveBuildingForPlayer"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rneon" syntax="cmd_rneon(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="DestroyObject"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cNeon"/>
			<dependency name="false"/>
			<dependency name="isNeonON"/>
			<dependency name="neons"/>
			<dependency name="neons"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road1" syntax="cmd_road1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road10" syntax="cmd_road10(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road11" syntax="cmd_road11(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road12" syntax="cmd_road12(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road13" syntax="cmd_road13(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road14" syntax="cmd_road14(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road15" syntax="cmd_road15(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road2" syntax="cmd_road2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road3" syntax="cmd_road3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road4" syntax="cmd_road4(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road5" syntax="cmd_road5(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road6" syntax="cmd_road6(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road7" syntax="cmd_road7(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road8" syntax="cmd_road8(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_road9" syntax="cmd_road9(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rocket" syntax="cmd_rocket(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_rpg"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rocketdm" syntax="cmd_rocketdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rpg" syntax="cmd_rpg(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_rocket"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerChatBubble"/>
			<dependency name="canrocket"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="oranges"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rrr" syntax="cmd_rrr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_resetttime"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rt" syntax="cmd_rt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_token"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rtp" syntax="cmd_rtp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="cmd_requestteleport"/>
			<dependency name="CanTP"/>
			<dependency name="CanTP"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TPsystem"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rtpall" syntax="cmd_rtpall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="CanTP"/>
			<dependency name="CanTP"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="TPsystem"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rules" syntax="cmd_rules(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_runwayls" syntax="cmd_runwayls(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_runwaylv" syntax="cmd_runwaylv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_runwaysf" syntax="cmd_runwaysf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rv" syntax="cmd_rv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RaceActive"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="VehicleID"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rvehicle" syntax="cmd_rvehicle(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<referrer name="cmd_srv"/>
			<referrer name="cmd_setracevehicle"/>
			<referrer name="cmd_racevehicle"/>
			<dependency name="AmBuilding"/>
			<dependency name="BVehicleID"/>
			<dependency name="GetVehicleModelIDFromName"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="strval"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rwdm" syntax="cmd_rwdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_rweather" syntax="cmd_rweather(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_srw"/>
			<dependency name="AmBuilding"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="tmpw"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sa" syntax="cmd_sa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ClearAnimations"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_saa" syntax="cmd_saa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_stopaudioall"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_saloun" syntax="cmd_saloun(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_saloun2" syntax="cmd_saloun2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_saloun3" syntax="cmd_saloun3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_samplehos" syntax="cmd_samplehos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_hos"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sandking" syntax="cmd_sandking(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sas" syntax="cmd_sas(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_saveallstats"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_saveallstats" syntax="cmd_saveallstats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_sas"/>
			<dependency name="IsAdmin"/>
			<dependency name="Logged"/>
			<dependency name="Players"/>
			<dependency name="Save"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_savecar" syntax="cmd_savecar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="57"/>
			<dependency name="CARMODTYPE_EXHAUST"/>
			<dependency name="CARMODTYPE_FRONT_BUMPER"/>
			<dependency name="CARMODTYPE_HOOD"/>
			<dependency name="CARMODTYPE_HYDRAULICS"/>
			<dependency name="CARMODTYPE_LAMPS"/>
			<dependency name="CARMODTYPE_NITRO"/>
			<dependency name="CARMODTYPE_REAR_BUMPER"/>
			<dependency name="CARMODTYPE_ROOF"/>
			<dependency name="CARMODTYPE_SIDESKIRT"/>
			<dependency name="CARMODTYPE_SPOILER"/>
			<dependency name="CARMODTYPE_VENT_LEFT"/>
			<dependency name="CARMODTYPE_VENT_RIGHT"/>
			<dependency name="CARMODTYPE_WHEELS"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleComponentInSlot"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_savemyaccount" syntax="cmd_savemyaccount(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_savestats"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_saveobjects" syntax="cmd_saveobjects(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="75"/>
			<referrer name="cmd_so"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="E_STREAMER_MODEL_ID"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetDynamicObjectRot"/>
			<dependency name="GetTotalCreatedObjects"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_saverace" syntax="cmd_saverace(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="BName"/>
			<dependency name="BName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="SSCANF__"/>
			<dependency name="SaveRace"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_saveset" syntax="cmd_saveset(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="168"/>
			<referrer name="cmd_ss"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="E_STREAMER_MODEL_ID"/>
			<dependency name="GetDynamicObjectMaterial"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="GetDynamicObjectRot"/>
			<dependency name="GetTotalCreatedObjects"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsDynamicObjectMaterialUsed"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_savestats" syntax="cmd_savestats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_sma"/>
			<referrer name="cmd_sms"/>
			<referrer name="cmd_savemyaccount"/>
			<dependency name="Logged"/>
			<dependency name="Players"/>
			<dependency name="Save"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_say" syntax="cmd_say(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_vsay"/>
			<referrer name="cmd_vipsay"/>
			<referrer name="cmd_prosay"/>
			<referrer name="cmd_psay"/>
			<dependency name="cmd_asay"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sch" syntax="cmd_sch(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setcarhealth"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_school" syntax="cmd_school(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_scratch" syntax="cmd_scratch(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sd" syntax="cmd_sd(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_startderby"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sddz" syntax="cmd_sddz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setderbydeathzone"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sdos" syntax="cmd_sdos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setderbyobjectset"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sdv" syntax="cmd_sdv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setderbyvehicle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_search" syntax="cmd_search(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="141"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="ObjectList"/>
			<dependency name="ObjectList"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowModelSelectionMenuEx"/>
			<dependency name="oID"/>
			<dependency name="oName"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_selfiecam" syntax="cmd_selfiecam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCameraLookAt"/>
			<dependency name="SetPlayerCameraPos"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sell" syntax="cmd_sell(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="693"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Buyable"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="Earnings"/>
			<dependency name="GetPlayerID"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerNearProperty"/>
			<dependency name="PlayerProps"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropName"/>
			<dependency name="PropOwner"/>
			<dependency name="PropUnbuyableTime"/>
			<dependency name="PropValue"/>
			<dependency name="PropX"/>
			<dependency name="PropY"/>
			<dependency name="PropZ"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAllEx"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="propText"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sellallprops" syntax="cmd_sellallprops(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Earnings"/>
			<dependency name="GetPlayerID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="PlayerProps"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropOwner"/>
			<dependency name="PropUnbuyableTime"/>
			<dependency name="PropValue"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="SaveProperties"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAllEx"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sellmyprops" syntax="cmd_sellmyprops(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="136"/>
			<dependency name="Earnings"/>
			<dependency name="GetPlayerID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="PlayerProps"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropOwner"/>
			<dependency name="PropUnbuyableTime"/>
			<dependency name="PropValue"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAllEx"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sendapples" syntax="cmd_sendapples(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="apples"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sendcash" syntax="cmd_sendcash(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_givecash"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sendoranges" syntax="cmd_sendoranges(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="apples"/>
			<dependency name="formatex"/>
			<dependency name="oranges"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sendtokens" syntax="cmd_sendtokens(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Token"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_serverstats" syntax="cmd_serverstats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="112"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setammo" syntax="cmd_setammo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="122"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setarmour" syntax="cmd_setarmour(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setcarhealth" syntax="cmd_setcarhealth(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<referrer name="cmd_sch"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setctftoken" syntax="cmd_setctftoken(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="31"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setderbydeathzone" syntax="cmd_setderbydeathzone(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="32"/>
			<referrer name="cmd_sddz"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setderbyobjectset" syntax="cmd_setderbyobjectset(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="50"/>
			<referrer name="cmd_sdos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setderbyvehicle" syntax="cmd_setderbyvehicle(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="51"/>
			<referrer name="cmd_sdv"/>
			<dependency name="GetVehicleModelIDFromName"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strval"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setep" syntax="cmd_setep(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="cmd_setexplosions"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="explosions"/>
			<dependency name="explosionsr"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setexplosions" syntax="cmd_setexplosions(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setep"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sethealth" syntax="cmd_sethealth(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setinfo" syntax="cmd_setinfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="60"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsAdmin"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setinterior" syntax="cmd_setinterior(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsVIP"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setlabel" syntax="cmd_setlabel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_mylabel"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setlevel" syntax="cmd_setlevel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="38"/>
			<dependency name="AdminLvl"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="Save"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="VIP"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="readpms"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setmycar" syntax="cmd_setmycar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="42"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetVehicleModelIDFromName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="MyCar"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TDMJoined"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="strval"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setmyfw" syntax="cmd_setmyfw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="49"/>
			<referrer name="cmd_fw"/>
			<dependency name="GetWeaponIDFromName"/>
			<dependency name="GetWeaponName"/>
			<dependency name="IsValidWeapon"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="favwpn"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setmyradio" syntax="cmd_setmyradio(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="78"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setname" syntax="cmd_setname(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="153"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Logged"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="Save"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerName"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setnumplate" syntax="cmd_setnumplate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_plate"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setpass" syntax="cmd_setpass(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="168"/>
			<referrer name="cmd_changepass"/>
			<dependency name="GetPlayerName"/>
			<dependency name="Logged"/>
			<dependency name="Players"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayerapples" syntax="cmd_setplayerapples(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="cmd_spa"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="apples"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayercash" syntax="cmd_setplayercash(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="cmd_spc"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="ResetPlayerCash"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayerdeaths" syntax="cmd_setplayerdeaths(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Deaths"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayerkills" syntax="cmd_setplayerkills(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="cmd_spk"/>
			<referrer name="cmd_setplayerscore"/>
			<referrer name="cmd_spd"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="score"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayerlabel" syntax="cmd_setplayerlabel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="118"/>
			<referrer name="cmd_spl"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="DestroyDynamic3DTextLabel"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamic3DTextLabel"/>
			<dependency name="MyLabel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayeroranges" syntax="cmd_setplayeroranges(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="cmd_spo"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="oranges"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayerplaytime" syntax="cmd_setplayerplaytime(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="cmd_sppt"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayTime"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayerracesjoined" syntax="cmd_setplayerracesjoined(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="cmd_sprj"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RacesJoined"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayerraceswon" syntax="cmd_setplayerraceswon(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="cmd_sprw"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RacesWon"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayerscore" syntax="cmd_setplayerscore(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayerkills"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setplayerworld" syntax="cmd_setplayerworld(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="cmd_spw"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setpropbuyable" syntax="cmd_setpropbuyable(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="519"/>
			<referrer name="cmd_spb"/>
			<dependency name="Buyable"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerNearProperty"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropName"/>
			<dependency name="PropOwner"/>
			<dependency name="PropUnbuyableTime"/>
			<dependency name="PropValue"/>
			<dependency name="PropX"/>
			<dependency name="PropY"/>
			<dependency name="PropZ"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setpropertyname" syntax="cmd_setpropertyname(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_spn"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setpropertyvalue" syntax="cmd_setpropertyvalue(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_spv"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setpropname" syntax="cmd_setpropname(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_spn"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setpropunbuyable" syntax="cmd_setpropunbuyable(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Buyable"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerNearProperty"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setpropvalue" syntax="cmd_setpropvalue(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_spv"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setracevehicle" syntax="cmd_setracevehicle(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_rvehicle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_settime" syntax="cmd_settime(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_settoken" syntax="cmd_settoken(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="cmd_srt"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetToken"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setweather" syntax="cmd_setweather(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sex" syntax="cmd_sex(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sfa" syntax="cmd_sfa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sfadrop" syntax="cmd_sfadrop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sftower" syntax="cmd_sftower(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIP"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_shadow" syntax="cmd_shadow(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_shamal" syntax="cmd_shamal(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_shark" syntax="cmd_shark(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sho" syntax="cmd_sho(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="161"/>
			<dependency name="HO2"/>
			<dependency name="HO_exist"/>
			<dependency name="HO_save"/>
			<dependency name="ID"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_shotgundm" syntax="cmd_shotgundm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_shovel" syntax="cmd_shovel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_showme" syntax="cmd_showme(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<dependency name="hidden"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_showradar" syntax="cmd_showradar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="SetPlayerMarkerForPlayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sit" syntax="cmd_sit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_skate" syntax="cmd_skate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_skateboard" syntax="cmd_skateboard(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_skin" syntax="cmd_skin(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsVIP"/>
			<dependency name="IsValidSkin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="ShowModelSelectionMenu"/>
			<dependency name="Skin"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="skinlist"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_skydive" syntax="cmd_skydive(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_slap" syntax="cmd_slap(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerName"/>
			<dependency name="God"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sma" syntax="cmd_sma(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_savestats"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_smenu" syntax="cmd_smenu(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SVLoaded"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_smoam" syntax="cmd_smoam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="Assigned_GiveFreeMovingID"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetDynamicObjectPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="Moving"/>
			<dependency name="Moving"/>
			<dependency name="Players"/>
			<dependency name="ReturnPosX"/>
			<dependency name="ReturnPosY"/>
			<dependency name="ReturnPosZ"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="e_MovingObject_Speed"/>
			<dependency name="formatex"/>
			<dependency name="idUsed"/>
			<dependency name="true"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_smoke" syntax="cmd_smoke(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_smomtp" syntax="cmd_smomtp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="Moving"/>
			<dependency name="Moving"/>
			<dependency name="MovingToX"/>
			<dependency name="MovingToY"/>
			<dependency name="MovingToZ"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="e_MovingObject_Actual"/>
			<dependency name="e_MovingObject_Speed"/>
			<dependency name="formatex"/>
			<dependency name="idUsed"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sms" syntax="cmd_sms(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_savestats"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_snakefarm" syntax="cmd_snakefarm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sniper" syntax="cmd_sniper(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIP"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="Token"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sniperdm" syntax="cmd_sniperdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sniperdm2" syntax="cmd_sniperdm2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="false"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_snp" syntax="cmd_snp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_plate"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_so" syntax="cmd_so(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_saveobjects"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sober" syntax="cmd_sober(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SetPlayerDrunkLevel"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_som" syntax="cmd_som(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="56"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sot" syntax="cmd_sot(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="35"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="OBJECT_MATERIAL_SIZE_128x32"/>
			<dependency name="OBJECT_MATERIAL_SIZE_256x32"/>
			<dependency name="OBJECT_MATERIAL_SIZE_32x32"/>
			<dependency name="OBJECT_MATERIAL_SIZE_64x32"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetDynamicObjectMaterialText"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sp" syntax="cmd_sp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_spec"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spa" syntax="cmd_spa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayerapples"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spawn" syntax="cmd_spawn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AdminLvl"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spb" syntax="cmd_spb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setpropbuyable"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spc" syntax="cmd_spc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayercash"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spd" syntax="cmd_spd(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayerkills"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spec" syntax="cmd_spec(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="55"/>
			<referrer name="cmd_sp"/>
			<dependency name="AdminLvl"/>
			<dependency name="AmRacing"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetWeaponName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsVIP"/>
			<dependency name="PlayerSpectatePlayer"/>
			<dependency name="PlayerSpectateVehicle"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="Spawned"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="gSpectateType"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_specoff" syntax="cmd_specoff(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIP"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="gSpectateType"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_specpolice" syntax="cmd_specpolice(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsAdmin"/>
			<dependency name="SetPlayerCameraLookAt"/>
			<dependency name="SetPlayerCameraPos"/>
			<dependency name="gSpectateID"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spinslots" syntax="cmd_spinslots(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="27"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Token"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spinvehicle" syntax="cmd_spinvehicle(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleAngularVelocity"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spinvehiclex" syntax="cmd_spinvehiclex(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleAngularVelocity"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spinvehicley" syntax="cmd_spinvehicley(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleAngularVelocity"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spinvehiclez" syntax="cmd_spinvehiclez(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleAngularVelocity"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spk" syntax="cmd_spk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayerkills"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spl" syntax="cmd_spl(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayerlabel"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spn" syntax="cmd_spn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="136"/>
			<referrer name="cmd_setpropname"/>
			<referrer name="cmd_setpropertyname"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerNearProperty"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropName"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAllEx"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spo" syntax="cmd_spo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayeroranges"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spooflost" syntax="cmd_spooflost(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spotlight" syntax="cmd_spotlight(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sppt" syntax="cmd_sppt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayerplaytime"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sprj" syntax="cmd_sprj(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayerracesjoined"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sprunk" syntax="cmd_sprunk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SPECIAL_ACTION_DRINK_SPRUNK"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sprw" syntax="cmd_sprw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayerraceswon"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spv" syntax="cmd_spv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="111"/>
			<referrer name="cmd_setpropertyvalue"/>
			<referrer name="cmd_setpropvalue"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerNearProperty"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropValue"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAllEx"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spw" syntax="cmd_spw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_setplayerworld"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_srs" syntax="cmd_srs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_streamerstats"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_srt" syntax="cmd_srt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_settoken"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_srv" syntax="cmd_srv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_rvehicle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_srw" syntax="cmd_srw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_rweather"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ss" syntax="cmd_ss(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_saveset"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ssb" syntax="cmd_ssb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="129"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="IsNumeric2"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="SpeedBoostMultiplier"/>
			<dependency name="floatstr"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="strtok"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stack" syntax="cmd_stack(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_loopobj"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stackedpizza" syntax="cmd_stackedpizza(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stair" syntax="cmd_stair(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIP"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_startctf" syntax="cmd_startctf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="ActiveCTF"/>
			<dependency name="CTFIcons"/>
			<dependency name="CTFInterior"/>
			<dependency name="CTFLoaded"/>
			<dependency name="CTFMembers"/>
			<dependency name="CTFSpawn"/>
			<dependency name="CTFTimer"/>
			<dependency name="CTFToken"/>
			<dependency name="CTF_Flags"/>
			<dependency name="DestroyDynamicMapIcon"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetTimer"/>
			<dependency name="ctfflags"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_startderby" syntax="cmd_startderby(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_sd"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ActiveDerby"/>
			<dependency name="DerbyLoaded"/>
			<dependency name="DerbyPlayers"/>
			<dependency name="DerbyVehicle"/>
			<dependency name="DestroyDerbyObjects"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="WEAPON_TEC9"/>
			<dependency name="autofix"/>
			<dependency name="cellmax"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_startrace" syntax="cmd_startrace(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_quickstart"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_startsurvival" syntax="cmd_startsurvival(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="God"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SPoints"/>
			<dependency name="SVLoaded"/>
			<dependency name="SVPlayers"/>
			<dependency name="SVStarted"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerTime"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gamePickups"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stats" syntax="cmd_stats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="22"/>
			<dependency name="DIALOG_STYLE_TABLIST"/>
			<dependency name="Deaths"/>
			<dependency name="DeliveryTotal"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="God"/>
			<dependency name="IntToBool"/>
			<dependency name="IntToBool"/>
			<dependency name="PlayTime"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RacesJoined"/>
			<dependency name="RacesWon"/>
			<dependency name="Rank"/>
			<dependency name="SSCANF__"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="Skin"/>
			<dependency name="Token"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="apples"/>
			<dependency name="ctf_wins"/>
			<dependency name="formatex"/>
			<dependency name="oranges"/>
			<dependency name="score"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_steelma" syntax="cmd_steelma(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stopaudioall" syntax="cmd_stopaudioall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_saa"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stopradio" syntax="cmd_stopradio(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_streamerstats" syntax="cmd_streamerstats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="cmd_srs"/>
			<referrer name="cmd_objinfo"/>
			<referrer name="cmd_oinfo"/>
			<dependency name="CountDynamic3DTextLabels"/>
			<dependency name="CountDynamicCPs"/>
			<dependency name="CountDynamicMapIcons"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_streamset" syntax="cmd_streamset(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1142"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_strip" syntax="cmd_strip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_strip1" syntax="cmd_strip1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_strip2" syntax="cmd_strip2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_strip3" syntax="cmd_strip3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_strip4" syntax="cmd_strip4(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_strip5" syntax="cmd_strip5(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_strongorange" syntax="cmd_strongorange(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stunts" syntax="cmd_stunts(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stunts2" syntax="cmd_stunts2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1509"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sultan" syntax="cmd_sultan(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sumo1" syntax="cmd_sumo1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GotoPosition"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_survival" syntax="cmd_survival(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_survivalhelp" syntax="cmd_survivalhelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sweets" syntax="cmd_sweets(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_switchwheels" syntax="cmd_switchwheels(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sws" syntax="cmd_sws(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_t" syntax="cmd_t(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="33"/>
			<dependency name="GotoPosition"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_takepro" syntax="cmd_takepro(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="VIP"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_takevip" syntax="cmd_takevip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="VIP"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tam" syntax="cmd_tam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_toggleadminmessages"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tann" syntax="cmd_tann(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tc" syntax="cmd_tc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_tenniscourt"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tci" syntax="cmd_tci(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="30"/>
			<referrer name="cmd_togglectficons"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tdmhelp" syntax="cmd_tdmhelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_teepee" syntax="cmd_teepee(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_teleport" syntax="cmd_teleport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_tp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_teleports" syntax="cmd_teleports(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_teles"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_teleportsystem" syntax="cmd_teleportsystem(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_tps"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_teleporttoproperty" syntax="cmd_teleporttoproperty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_ttp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_teles" syntax="cmd_teles(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_teleports"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_teles2" syntax="cmd_teles2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tenniscourt" syntax="cmd_tenniscourt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_tc"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_textures" syntax="cmd_textures(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tf" syntax="cmd_tf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tfkac" syntax="cmd_tfkac(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_togglefakekillsban"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tfkb" syntax="cmd_tfkb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_togglefakekillsban"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_thelp" syntax="cmd_thelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tim" syntax="cmd_tim(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_toggleiplookups"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_timetrial" syntax="cmd_timetrial(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_tt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tod" syntax="cmd_tod(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_Update"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_toggleadminmessages" syntax="cmd_toggleadminmessages(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_tam"/>
			<dependency name="AdminMsgs"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_toggleautogodmode" syntax="cmd_toggleautogodmode(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="AutoGM"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_togglectficons" syntax="cmd_togglectficons(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_tci"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_togglefakekillsban" syntax="cmd_togglefakekillsban(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_tfkb"/>
			<referrer name="cmd_tfkac"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Server"/>
			<dependency name="fakekillsac"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_toggleiplookups" syntax="cmd_toggleiplookups(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_tim"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IPLookups"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_togglevehiclerockets" syntax="cmd_togglevehiclerockets(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_tvr"/>
			<referrer name="cmd_tve"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="rockets"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_token" syntax="cmd_token(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_rt"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_top10" syntax="cmd_top10(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="846"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="GetTT_ID"/>
			<dependency name="ReturnTime"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TT_ID"/>
			<dependency name="__R_Name"/>
			<dependency name="__R_Name"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_top20" syntax="cmd_top20(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1356"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="GetTT_ID"/>
			<dependency name="ReturnTime"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TT_ID"/>
			<dependency name="__R_Name"/>
			<dependency name="__R_Name"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_top5" syntax="cmd_top5(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="591"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="GetTT_ID"/>
			<dependency name="ReturnTime"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TT_ID"/>
			<dependency name="__R_Name"/>
			<dependency name="__R_Name"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_topplayers" syntax="cmd_topplayers(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="163"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="GetPName"/>
			<dependency name="GetPlayerMostCTF"/>
			<dependency name="GetPlayerMostCash"/>
			<dependency name="GetPlayerMostRacesWon"/>
			<dependency name="GetPlayerMostScore"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_totalcars" syntax="cmd_totalcars(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetVehicleCount"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_touch" syntax="cmd_touch(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tower" syntax="cmd_tower(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tp" syntax="cmd_tp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<referrer name="cmd_teleport"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="CanTP"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins_Tele"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="TPsystem"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="gSpectateID"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tpos" syntax="cmd_tpos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="PosCloseToSpawn"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tps" syntax="cmd_tps(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_teleportsystem"/>
			<referrer name="cmd_tpsystem"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TPsystem"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tpsystem" syntax="cmd_tpsystem(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_tps"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_trackp" syntax="cmd_trackp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="27"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="HTTP"/>
			<dependency name="HTTP_GET"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tradein" syntax="cmd_tradein(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tram" syntax="cmd_tram(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LastCar"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="random"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_trance" syntax="cmd_trance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tripzenx1" syntax="cmd_tripzenx1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tripzenx2" syntax="cmd_tripzenx2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tripzenx3" syntax="cmd_tripzenx3(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_trt" syntax="cmd_trt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="IsAdmin"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="Reports"/>
			<dependency name="ReportsTD"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_trucking" syntax="cmd_trucking(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_trucking2" syntax="cmd_trucking2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_trytofixctf" syntax="cmd_trytofixctf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="ActiveCTF"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ts" syntax="cmd_ts(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tt" syntax="cmd_tt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="2475"/>
			<referrer name="cmd_timetrial"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetPlayerMinigame"/>
			<dependency name="IsSeatTaken"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="TT_Exit"/>
			<dependency name="TT_ID"/>
			<dependency name="__loading"/>
			<dependency name="__loading"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="laststatic"/>
			<dependency name="mysql_query"/>
			<dependency name="ttCD"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ttp" syntax="cmd_ttp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_teleporttoproperty"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropName"/>
			<dependency name="PropX"/>
			<dependency name="PropY"/>
			<dependency name="PropZ"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tune" syntax="cmd_tune(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tunemenu" syntax="cmd_tunemenu(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_LIST"/>
			<dependency name="IsInCar"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_turismo" syntax="cmd_turismo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tvc" syntax="cmd_tvc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_evc"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tvcfp" syntax="cmd_tvcfp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_evcfp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tve" syntax="cmd_tve(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_togglevehiclerockets"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tvr" syntax="cmd_tvr(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_togglevehiclerockets"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_twist" syntax="cmd_twist(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_twister" syntax="cmd_twister(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ufo" syntax="cmd_ufo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_uld" syntax="cmd_uld(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_unloadderby"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_unbanlast" syntax="cmd_unbanlast(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="126"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SendRconCommand"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_uncloak" syntax="cmd_uncloak(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="GetPlayerColor"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerMarkerForPlayer"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_uncuff" syntax="cmd_uncuff(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SPECIAL_ACTION_NONE"/>
			<dependency name="SetPlayerSpecialAction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_undeleterace" syntax="cmd_undeleterace(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="31"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_underbase" syntax="cmd_underbase(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_underbridge" syntax="cmd_underbridge(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendTeleMessageToAdmins"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_unfreeze" syntax="cmd_unfreeze(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="88"/>
			<dependency name="GetPName"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_unjail" syntax="cmd_unjail(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="JailTimer"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_unloadderby" syntax="cmd_unloadderby(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cmd_uld"/>
			<dependency name="ActiveDerby"/>
			<dependency name="DerbyInterior"/>
			<dependency name="DerbyLoaded"/>
			<dependency name="DerbyPickups"/>
			<dependency name="DerbyPlayers"/>
			<dependency name="DerbyTime"/>
			<dependency name="DerbyVehicle"/>
			<dependency name="DerbyZ"/>
			<dependency name="DestroyDerbyObjects"/>
			<dependency name="DestroyDynamicPickup"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsValidDynamicPickup"/>
			<dependency name="KillTimer"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="autofix"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_unlock" syntax="cmd_unlock(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="VEHICLE_PARAMS_ON"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_unmute" syntax="cmd_unmute(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="KillTimer"/>
			<dependency name="MuteTimer"/>
			<dependency name="Muted"/>
			<dependency name="MutedBy"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Spam"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_updateraceangle" syntax="cmd_updateraceangle(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="47"/>
			<referrer name="cmd_ura"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="SQL"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatex"/>
			<dependency name="mysql_query"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_uptime" syntax="cmd_uptime(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Server"/>
			<dependency name="Uptime"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ura" syntax="cmd_ura(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_updateraceangle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_usedildo" syntax="cmd_usedildo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_v" syntax="cmd_v(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="53"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="AmRacing"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="DriftID"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleModelIDFromName"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GetXYInFrontOfPlayer"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerInAnyDynamicArea"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsVIP"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="PLAYER_STATE_DRIVER"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RaceActive"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="TDMJoined"/>
			<dependency name="TDrif"/>
			<dependency name="VehicleID"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="aVehicleNames"/>
			<dependency name="aVehicleNames"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="hydra"/>
			<dependency name="rhino"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vehicleduel" syntax="cmd_vehicleduel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetTimerEx"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="VehRequest"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="vehDuel"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_venera" syntax="cmd_venera(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_version" syntax="cmd_version(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="60"/>
			<dependency name="GetPlayerVersion"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vibrator" syntax="cmd_vibrator(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vibrator2" syntax="cmd_vibrator2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vida" syntax="cmd_vida(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vipcmds" syntax="cmd_vipcmds(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsVIP"/>
			<dependency name="IsVIPLevel2"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vipcolor" syntax="cmd_vipcolor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="IsVIP"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_viphelp" syntax="cmd_viphelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="cmd_vipinfo"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_viphideout" syntax="cmd_viphideout(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsVIP"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StuntTele"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vipinfo" syntax="cmd_vipinfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="cmd_viphelp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vips" syntax="cmd_vips(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="VIP"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vipsay" syntax="cmd_vipsay(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_say"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_virtualwheels" syntax="cmd_virtualwheels(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlane"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vortex" syntax="cmd_vortex(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsVIP"/>
			<dependency name="Iter_CreateVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="RandomVehicleColor"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vpo" syntax="cmd_vpo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="27"/>
			<dependency name="CountDynamicObjects"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="E_STREAMER_MODEL_ID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vrock" syntax="cmd_vrock(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vrock2" syntax="cmd_vrock2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vs" syntax="cmd_vs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_vstats"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vsay" syntax="cmd_vsay(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_say"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vstats" syntax="cmd_vstats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<referrer name="cmd_vs"/>
			<dependency name="AdminLvl"/>
			<dependency name="Banned"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="Deaths"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="GetPlayerMoney"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetPlayerScore"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="IntToBool"/>
			<dependency name="IntToBool"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="Minigame"/>
			<dependency name="PlayTime"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="RacesJoined"/>
			<dependency name="RacesWon"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="aWeaponNames"/>
			<dependency name="aWeaponNames"/>
			<dependency name="autofix"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<dependency name="strlen"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_waa" syntax="cmd_waa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_waitstart" syntax="cmd_waitstart(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_ws"/>
			<dependency name="IsAdmin"/>
			<dependency name="OnRaceCD"/>
			<dependency name="RaceActive"/>
			<dependency name="RaceStart"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<dependency name="xx_cd"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_wank" syntax="cmd_wank(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_war" syntax="cmd_war(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="129"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="autofix"/>
			<dependency name="false"/>
			<dependency name="favwpn"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_wash" syntax="cmd_wash(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_washplayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_washplayer" syntax="cmd_washplayer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<referrer name="cmd_wash"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="GetNPCNameByID"/>
			<dependency name="GetPName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerAdminLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendMessageToAdminsEx"/>
			<dependency name="SetTimerEx"/>
			<dependency name="Streamer_Update"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="Wash"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_waterfall" syntax="cmd_waterfall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_waterma" syntax="cmd_waterma(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_wb" syntax="cmd_wb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="Streamer_UpdateEx"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_weapons" syntax="cmd_weapons(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="33"/>
			<referrer name="cmd_wps"/>
			<referrer name="cmd_wpns"/>
			<referrer name="cmd_fch"/>
			<dependency name="Chat_SendMessageToAdmins"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="GetWeaponName"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_website" syntax="cmd_website(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="IsAdmin"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_whack" syntax="cmd_whack(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="God"/>
			<dependency name="IsAdmin"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="PlaySoundForAll"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_whatsmyip" syntax="cmd_whatsmyip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_whatsnew" syntax="cmd_whatsnew(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_wheels" syntax="cmd_wheels(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="DIALOG_STYLE_MSGBOX"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_white" syntax="cmd_white(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_windowma" syntax="cmd_windowma(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="IsAdmin"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="Streamer_GetIntData"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="userID"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_windy" syntax="cmd_windy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_witchhat" syntax="cmd_witchhat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="_ResetHO_coOrdination"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_withdraw" syntax="cmd_withdraw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="banked"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_woa" syntax="cmd_woa(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_woozie" syntax="cmd_woozie(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GotoPosition"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_world" syntax="cmd_world(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="AdminLvl"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="Players"/>
			<dependency name="SSCANF__"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="__file"/>
			<dependency name="__line"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_wpns" syntax="cmd_wpns(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_weapons"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_wps" syntax="cmd_wps(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_weapons"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ws" syntax="cmd_ws(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cmd_waitstart"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_wtf" syntax="cmd_wtf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="formatex"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_wwdm" syntax="cmd_wwdm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AmBuilding"/>
			<dependency name="AmRacing"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="God"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="UpdateMOTD_Text"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="xstring"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_xmasgift" syntax="cmd_xmasgift(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="cmd_gift"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Token"/>
			<dependency name="getdate"/>
			<dependency name="oranges"/>
			<dependency name="true"/>
			<dependency name="xmas"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_xmashat" syntax="cmd_xmashat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="HO"/>
			<dependency name="HO"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="_ResetHO_coOrdination"/>
			<dependency name="bone"/>
			<dependency name="eXist"/>
			<dependency name="false"/>
			<dependency name="modelID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_xroof" syntax="cmd_xroof(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_yellow" syntax="cmd_yellow(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Color"/>
			<dependency name="Minigame"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:countdown" syntax="countdown()">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="CountDown"/>
			<dependency name="GameTextForAll"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimer"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
		</member>
		<member name="M:countdown2" syntax="countdown2()">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CountDown"/>
			<dependency name="GameTextForAll"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Minigame"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="Players"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetTimer"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<dependency name="true"/>
		</member>
		<member name="M:countdownr" syntax="countdownr(x, y, z, r)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CountDown"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<dependency name="formatex"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="r">
			</param>
		</member>
		<member name="M:delaykick" syntax="delaykick(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Kick"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:dmq" syntax="dmq(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="ResetPlayerArmor"/>
			<dependency name="ResetPlayerHealth"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SetPlayerMinigame"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="dm"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:endofline" syntax="endofline(line[], pos)">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<dependency name="EndOfLine"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
				String to check.
			</param>
			<param name="pos">
				Postion to start from.
			</param>
			<library>y_utils - strings</library>      <remarks>  Checks if the current point in a line is the end of non-whitespace data.  </remarks> 
		</member>
		<member name="M:existproperty" syntax="existproperty(id, name[], value)">
			<attribute name="native"/>
			<referrer name="OnGameModeInit"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:fautocleanup" syntax="fautocleanup(name[], maxAge)">
			<tagname value="bool"/>
			<stacksize value="77"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ftemporary"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="YSI_TEMP_FILE_NAME"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="format"/>
			<dependency name="fwrite"/>
			<dependency name="gettime"/>
			<dependency name="io_append"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				File to clean up.
			</param>
			<param name="maxAge">
				Maximum temporary file age.
			</param>
			<library>y_utils - files</library>      <remarks>  Add a file to the temporary cleanup list.  </remarks> 
		</member>
		<member name="M:fblockread" syntax="fblockread(handle, buffer[], size)">
			<attribute name="native"/>
			<referrer name="Files_CopyRange"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:fblockwrite" syntax="fblockwrite(handle, buffer[], size)">
			<attribute name="native"/>
			<referrer name="Server_LoadRconFix"/>
			<referrer name="Files_CopyRange"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:fclose" syntax="fclose(handle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="YSI_FOpen__"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<referrer name="Server_LoadRconFix"/>
			<referrer name="YSI_ftouch__"/>
			<referrer name="fautocleanup"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="Files_DoCopy"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<referrer name="fcreate"/>
			<referrer name="AddToLogFile"/>
			<referrer name="AddLineToFile"/>
			<referrer name="CountFileLines"/>
			<referrer name="CreateLog"/>
			<referrer name="CountRaces"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:fcreate" syntax="fcreate(filename[])">
			<stacksize value="6"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="AddLineToFile"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="io_write"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:fexist" syntax="fexist(pattern[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Server_LoadRconFix"/>
			<referrer name="YSI_ftouch__"/>
			<referrer name="ftemporary_"/>
			<referrer name="fautocleanup"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="fcreate"/>
			<referrer name="AddToLogFile"/>
			<referrer name="AddLineToFile"/>
			<referrer name="CreateLog"/>
			<referrer name="ConvertProperties"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:flength" syntax="flength(handle)">
			<attribute name="native"/>
			<referrer name="Files_DoCopy"/>
			<referrer name="Files_Copy"/>
			<referrer name="Files_Move"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:float" syntax="float(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="RandomFloatMax"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="value">
			</param>
		</member>
		<member name="M:floatabs" syntax="floatabs(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="cmd_launcher"/>
			<referrer name="AngleToPoint"/>
			<referrer name="GetPlayerSpeed"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<referrer name="_B@Action"/>
			<referrer name="PosCloseToSpawn"/>
			<referrer name="GetDistanceToProperty"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatadd" syntax="floatadd(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="LooseWeapons"/>
			<referrer name="AngleToPoint"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcmp" syntax="floatcmp(oper1, oper2)">
			<attribute name="native"/>
			<referrer name="operator==(Float:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,Float:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,Float:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcos" syntax="floatcos(value, mode)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="GetXYInFrontOfPlayer"/>
			<referrer name="MegaJump"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="CreateSentence"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>anglemode </paraminfo>
			</param>
		</member>
		<member name="M:floatdiv" syntax="floatdiv(dividend, divisor)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="InterpolateColor"/>
			<referrer name="InterpolateColour"/>
			<referrer name="BiGramSimilarity"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<param name="dividend">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="divisor">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatmul" syntax="floatmul(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatpower" syntax="floatpower(value, exponent)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="SRGBToCIE"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="GetNearestColourGamma"/>
			<referrer name="GetNearestColourGammaCached"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="GetPlayerSpeed"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<referrer name="PosCloseToSpawn"/>
			<referrer name="GetDistanceToProperty"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="exponent">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatround" syntax="floatround(value, method)">
			<attribute name="native"/>
			<referrer name="InterpolateColourLinear"/>
			<referrer name="InterpolateColourGamma"/>
			<referrer name="CIEToSRGB"/>
			<referrer name="InterpolateColourSRGB"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="RandomFloatMax"/>
			<referrer name="Vehicle_Speed"/>
			<referrer name="MP_OPC"/>
			<referrer name="GetDistance"/>
			<referrer name="Duel_End"/>
			<referrer name="Duel_CreatePlayerArena"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_vstats"/>
			<referrer name="ReturnTime"/>
			<referrer name="GetPlayerSpeed"/>
			<referrer name="ReturnPlayerHealth"/>
			<referrer name="ReturnPlayerArmour"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="method">
				<paraminfo>floatround_method </paraminfo>
			</param>
		</member>
		<member name="M:floatsin" syntax="floatsin(value, mode)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="RandomPointsInCircleCentred"/>
			<referrer name="RandomPointsInCircleDistributed"/>
			<referrer name="RandomPointInCircleCentred"/>
			<referrer name="RandomPointInCircleDistributed"/>
			<referrer name="GetXYInFrontOfPlayer"/>
			<referrer name="MegaJump"/>
			<referrer name="GetPosInFrontOfPlayer"/>
			<referrer name="CreateSentence"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>anglemode </paraminfo>
			</param>
		</member>
		<member name="M:floatsqroot" syntax="floatsqroot(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="RandomPointsInCircleDistributed"/>
			<referrer name="RandomPointInCircleDistributed"/>
			<referrer name="GetDistance"/>
			<referrer name="DistanceToPoint"/>
			<referrer name="GetPlayerClosestStreamedObject"/>
			<referrer name="GetPlayerClosestPlayer"/>
			<referrer name="GetPlayerSpeed"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<referrer name="_B@Action"/>
			<referrer name="PosCloseToSpawn"/>
			<referrer name="GetDistanceToProperty"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatstr" syntax="floatstr(string[])">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="LoadModelSelectionMenu"/>
			<referrer name="cmd_ssb"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:floatsub" syntax="floatsub(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="AngleToPoint"/>
			<referrer name="GetPlayerTheoreticAngle"/>
			<referrer name="Drift"/>
			<referrer name="PosCloseToSpawn"/>
			<referrer name="GetDistanceToProperty"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatval" syntax="floatval(val)">
			<stacksize value="263"/>
			<referrer name="Drift"/>
			<dependency name="formatex"/>
			<dependency name="todec"/>
			<param name="val">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floordiv" syntax="floordiv(numerator, denominator)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="numerator">
				The top of the division.
			</param>
			<param name="denominator">
				The bottom of the division.
			</param>
			<library>y_utils - maths</library>  <summary>  floordiv(numerator, denominator);  </summary>      <returns>  (numerator / denominator) rounded down.  </returns>  <remarks>  Normal integer division ALWAYS rounds down - this also always rounds down,  making it a little pointless, but also more explicit in function.  </remarks> 
		</member>
		<member name="M:fopen" syntax="fopen(name[], mode)">
			<tagname value="File"/>
			<attribute name="native"/>
			<referrer name="YSI_FOpen__"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>filemode </paraminfo>
			</param>
		</member>
		<member name="M:format" syntax="format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="ScriptInit_Dump"/>
			<referrer name="ScriptInit_CallOnCodeInit"/>
			<referrer name="Script_GetCompilerString"/>
			<referrer name="Script_GetIncludesString"/>
			<referrer name="Script_GetStartString"/>
			<referrer name="YVers_PrintHeader"/>
			<referrer name="YVers_Callback"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<referrer name="va_return"/>
			<referrer name="fautocleanup"/>
			<referrer name="IntToIP"/>
			<referrer name="CensorIntIP"/>
			<referrer name="mS_UpdatePageTextDraw"/>
			<referrer name="LoadModelSelectionMenu"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="__fmt_funcinc"/>
			<referrer name="formatex"/>
			<referrer name="F@C"/>
			<referrer name="F@P"/>
			<referrer name="F@X"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
				The string to output the result to
			</param>
			<param name="len">
				The maximum length output can contain
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The format string
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
				Indefinite number of arguments of any tag
			</param>
			<library>omp_core</library>  <summary>Formats a string to include variables and other strings inside it.</summary>          <seealso name="print" />  <seealso name="printf" />  <remarks>This function doesn't support <a href="#strpack">packed strings</a>.</remarks>  <remarks>  <b>Format Specifiers:</b><br />  <ul>  <li><b><c>%i</c></b> - integer (whole number)</li>  <li><b><c>%d</c></b> - integer (whole number).</li>  <li><b><c>%s</c></b> - string</li>  <li><b><c>%f</c></b> - floating-point number (Float: tag)</li>  <li><b><c>%c</c></b> - ASCII character</li>  <li><b><c>%x</c></b> - hexadecimal number</li>  <li><b><c>%b</c></b> - binary number</li>  <li><b><c>%%</c></b> - literal <b><c>%</c></b></li>  <li><b><c>%q</c></b> - escape a text for SQLite. (Added in <b>0.3.7 R2</b>)</li>  </ul>  </remarks>  <remarks>The values for the placeholders follow in the exact same order as parameters in the call.  For example, <b><c>"I am %i years old"</c></b> - the <b><c>%i</c></b> will be replaced with an Integer  variable, which is the person's age.</remarks>  <remarks>You may optionally put a number between the <b><c>%</c></b> and the letter of the placeholder  code.  This number indicates the field width; if the size of the parameter to print at the position  of the placeholder is smaller than the field width, the field is expanded with spaces.  To cut the  number of decimal places beeing shown of a float, you can add <b><c>.&lt;max number&gt;</c></b> between  the <b><c>%</c></b> and the <b><c>f</c></b>. (example: <b><c>%.2f</c></b>)</remarks> 
		</member>
		<member name="M:formatex" syntax="formatex(szOutput[], iLength, szFormatString[], ...)">
			<stacksize value="152"/>
			<referrer name="printfex"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="TD_GetPlayerWeaponData"/>
			<referrer name="MP_OPC"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="RandomGame"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_version"/>
			<referrer name="cmd_dsbfp"/>
			<referrer name="cmd_egmfp"/>
			<referrer name="cmd_dgmfp"/>
			<referrer name="cmd_esbfp"/>
			<referrer name="cmd_getdist"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="countdownr"/>
			<referrer name="countdown"/>
			<referrer name="CPUConnectTime"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnPlayerModelSelectionEx"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_vehicleduel"/>
			<referrer name="cmd_maprecord"/>
			<referrer name="cmd_mysqlq"/>
			<referrer name="cmd_restore"/>
			<referrer name="GetUserIDName"/>
			<referrer name="cmd_np"/>
			<referrer name="cmd_rv"/>
			<referrer name="cmd_quickstart"/>
			<referrer name="cmd_megajump"/>
			<referrer name="cmd_enableallmegajump"/>
			<referrer name="cmd_disableallmegajump"/>
			<referrer name="cmd_mjh"/>
			<referrer name="cmd_emj"/>
			<referrer name="cmd_dmj"/>
			<referrer name="cmd_mjv"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerText"/>
			<referrer name="PGodTimer"/>
			<referrer name="DerbyTimer"/>
			<referrer name="Unjailplayer_Timer"/>
			<referrer name="UnmutePlayer_Timer"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerFloodControl"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="AddPlayerBan"/>
			<referrer name="AddProxy"/>
			<referrer name="Login"/>
			<referrer name="LoadKeys"/>
			<referrer name="SaveKeys"/>
			<referrer name="SaveSettings"/>
			<referrer name="Save"/>
			<referrer name="IntToBool"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="IPInfoDB_Admin"/>
			<referrer name="IPInfoDB_Connect"/>
			<referrer name="DCMD_players"/>
			<referrer name="DCMD_stats"/>
			<referrer name="DCMD_uptime"/>
			<referrer name="DCMD_tp"/>
			<referrer name="cmd_uptime"/>
			<referrer name="cmd_joinptp"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_gho"/>
			<referrer name="cmd_rho"/>
			<referrer name="cmd_myho"/>
			<referrer name="cmd_hohelp"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_lho"/>
			<referrer name="cmd_cho"/>
			<referrer name="cmd_hrx"/>
			<referrer name="cmd_hry"/>
			<referrer name="cmd_hrz"/>
			<referrer name="cmd_hox"/>
			<referrer name="cmd_hoy"/>
			<referrer name="cmd_hoz"/>
			<referrer name="cmd_hsx"/>
			<referrer name="cmd_hsy"/>
			<referrer name="cmd_hsz"/>
			<referrer name="cmd_cbone"/>
			<referrer name="cmd_dho"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_myprops"/>
			<referrer name="cmd_setpropbuyable"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_spv"/>
			<referrer name="cmd_spn"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_sellallprops"/>
			<referrer name="cmd_sellmyprops"/>
			<referrer name="cmd_lotto"/>
			<referrer name="cmd_myeastereggs"/>
			<referrer name="cmd_sendoranges"/>
			<referrer name="cmd_sendapples"/>
			<referrer name="cmd_sendtokens"/>
			<referrer name="cmd_ammo"/>
			<referrer name="cmd_kb"/>
			<referrer name="cmd_ckb"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_groupmanage"/>
			<referrer name="cmd_getid"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dm"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="Duel_End"/>
			<referrer name="InsertDuelResult"/>
			<referrer name="cmd_bounty"/>
			<referrer name="cmd_spinslots"/>
			<referrer name="cmd_balance"/>
			<referrer name="cmd_cloak"/>
			<referrer name="cmd_uncloak"/>
			<referrer name="cmd_healme"/>
			<referrer name="cmd_altitude"/>
			<referrer name="cmd_mypos"/>
			<referrer name="cmd_radio"/>
			<referrer name="cmd_setmyradio"/>
			<referrer name="cmd_myradio"/>
			<referrer name="cmd_topplayers"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_givecash"/>
			<referrer name="cmd_detonate"/>
			<referrer name="cmd_back"/>
			<referrer name="cmd_afk"/>
			<referrer name="cmd_camera"/>
			<referrer name="cmd_care"/>
			<referrer name="cmd_poop"/>
			<referrer name="cmd_cheese"/>
			<referrer name="cmd_omfg"/>
			<referrer name="cmd_scratch"/>
			<referrer name="cmd_fart"/>
			<referrer name="cmd_allbugged"/>
			<referrer name="cmd_cry"/>
			<referrer name="cmd_burp"/>
			<referrer name="cmd_wtf"/>
			<referrer name="cmd_noway"/>
			<referrer name="cmd_party"/>
			<referrer name="cmd_lol"/>
			<referrer name="cmd_ohyea"/>
			<referrer name="cmd_ohno"/>
			<referrer name="cmd_lovinit"/>
			<referrer name="cmd_cornholio"/>
			<referrer name="cmd_really"/>
			<referrer name="cmd_setplayerlabel"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_ssb"/>
			<referrer name="cmd_monster"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_cb"/>
			<referrer name="cmd_npcs"/>
			<referrer name="cmd_dactor"/>
			<referrer name="cmd_addactor"/>
			<referrer name="cmd_rconadmins"/>
			<referrer name="cmd_admins"/>
			<referrer name="cmd_bountylist"/>
			<referrer name="cmd_afklist"/>
			<referrer name="cmd_vips"/>
			<referrer name="cmd_pros"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_acceptpms"/>
			<referrer name="cmd_denypms"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_beach"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_island"/>
			<referrer name="cmd_hospital"/>
			<referrer name="cmd_area69"/>
			<referrer name="cmd_grove"/>
			<referrer name="cmd_underbridge"/>
			<referrer name="cmd_carmods"/>
			<referrer name="cmd_ufo"/>
			<referrer name="cmd_playpen"/>
			<referrer name="cmd_bar"/>
			<referrer name="cmd_casino"/>
			<referrer name="cmd_panzehir"/>
			<referrer name="cmd_police"/>
			<referrer name="cmd_kjj"/>
			<referrer name="cmd_maludadisco"/>
			<referrer name="cmd_ghost"/>
			<referrer name="cmd_maluda"/>
			<referrer name="cmd_tod"/>
			<referrer name="cmd_jeffy"/>
			<referrer name="cmd_kalifa"/>
			<referrer name="cmd_stackedpizza"/>
			<referrer name="cmd_doshka"/>
			<referrer name="cmd_jayce"/>
			<referrer name="cmd_saloun"/>
			<referrer name="cmd_mehdi"/>
			<referrer name="cmd_city"/>
			<referrer name="cmd_city2"/>
			<referrer name="cmd_city3"/>
			<referrer name="cmd_city4"/>
			<referrer name="cmd_city5"/>
			<referrer name="cmd_disco"/>
			<referrer name="cmd_factory"/>
			<referrer name="cmd_sweets"/>
			<referrer name="cmd_icode"/>
			<referrer name="cmd_ask"/>
			<referrer name="cmd_answer"/>
			<referrer name="cmd_avip"/>
			<referrer name="cmd_rules"/>
			<referrer name="cmd_frr"/>
			<referrer name="cmd_cars"/>
			<referrer name="cmd_bikes"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_vipcmds"/>
			<referrer name="cmd_sniper"/>
			<referrer name="cmd_stunts2"/>
			<referrer name="cmd_racers"/>
			<referrer name="cmd_dpt"/>
			<referrer name="cmd_rank"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_ks"/>
			<referrer name="cmd_evcfp"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_enableaf"/>
			<referrer name="cmd_disableaf"/>
			<referrer name="cmd_af"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_joinctf"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartSurvival"/>
			<referrer name="StartDerby"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_closesurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_startderby"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_givevehicle"/>
			<referrer name="cmd_me"/>
			<referrer name="cmd_loopobj2"/>
			<referrer name="cmd_loopobj3"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_sot"/>
			<referrer name="cmd_cno"/>
			<referrer name="cmd_objletters"/>
			<referrer name="cmd_nso"/>
			<referrer name="cmd_objhelp"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_mapicon"/>
			<referrer name="cmd_dmapicon"/>
			<referrer name="cmd_dpickup"/>
			<referrer name="cmd_pickup"/>
			<referrer name="cmd_door"/>
			<referrer name="cmd_pipe"/>
			<referrer name="cmd_stair"/>
			<referrer name="cmd_funnel2"/>
			<referrer name="cmd_spotlight"/>
			<referrer name="cmd_funnel1"/>
			<referrer name="cmd_ramp"/>
			<referrer name="cmd_myfence"/>
			<referrer name="cmd_bridge"/>
			<referrer name="cmd_funbowl"/>
			<referrer name="cmd_loop"/>
			<referrer name="cmd_chicken"/>
			<referrer name="cmd_barrier"/>
			<referrer name="cmd_palm"/>
			<referrer name="cmd_tower"/>
			<referrer name="cmd_landmass"/>
			<referrer name="cmd_forsale"/>
			<referrer name="cmd_elevator"/>
			<referrer name="cmd_christmastree"/>
			<referrer name="cmd_house"/>
			<referrer name="cmd_moveu"/>
			<referrer name="cmd_dso"/>
			<referrer name="cmd_gom"/>
			<referrer name="cmd_som"/>
			<referrer name="cmd_lift2"/>
			<referrer name="cmd_lift"/>
			<referrer name="cmd_smoam"/>
			<referrer name="cmd_smomtp"/>
			<referrer name="cmd_waterma"/>
			<referrer name="cmd_carparkma"/>
			<referrer name="cmd_cloudsma"/>
			<referrer name="cmd_steelma"/>
			<referrer name="cmd_windowma"/>
			<referrer name="cmd_dobj"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_dsor"/>
			<referrer name="cmd_daso"/>
			<referrer name="cmd_gmlo"/>
			<referrer name="cmd_gmo"/>
			<referrer name="cmd_myobjects"/>
			<referrer name="cmd_glo"/>
			<referrer name="cmd_vpo"/>
			<referrer name="cmd_dano"/>
			<referrer name="cmd_dmao"/>
			<referrer name="cmd_do"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_playaudio"/>
			<referrer name="cmd_stopaudioall"/>
			<referrer name="cmd_streamerstats"/>
			<referrer name="cmd_playaudioplayer"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_amandapm"/>
			<referrer name="cmd_panztalk"/>
			<referrer name="cmd_amandatalk"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_spooflost"/>
			<referrer name="cmd_moveproxies"/>
			<referrer name="cmd_nearestrockets"/>
			<referrer name="cmd_dbers"/>
			<referrer name="cmd_checkweapons"/>
			<referrer name="cmd_weapons"/>
			<referrer name="cmd_setweather"/>
			<referrer name="cmd_myweather"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_fakeban"/>
			<referrer name="cmd_tpos"/>
			<referrer name="cmd_eavr"/>
			<referrer name="cmd_davr"/>
			<referrer name="cmd_togglevehiclerockets"/>
			<referrer name="cmd_adminsettings"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_enablespeedboost"/>
			<referrer name="cmd_disablespeedboost"/>
			<referrer name="cmd_enablepms"/>
			<referrer name="cmd_disablepms"/>
			<referrer name="cmd_jointdm"/>
			<referrer name="cmd_war"/>
			<referrer name="countdown2"/>
			<referrer name="cmd_disarm"/>
			<referrer name="cmd_disarmradius"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_unjail"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_serverstats"/>
			<referrer name="cmd_takevip"/>
			<referrer name="cmd_takepro"/>
			<referrer name="cmd_giveapple"/>
			<referrer name="cmd_giveappleradius"/>
			<referrer name="cmd_giveorange"/>
			<referrer name="cmd_giveorangeradius"/>
			<referrer name="cmd_giveallapple"/>
			<referrer name="cmd_giveallorange"/>
			<referrer name="cmd_givefake"/>
			<referrer name="cmd_giveallfake"/>
			<referrer name="cmd_givevip"/>
			<referrer name="cmd_givepro"/>
			<referrer name="cmd_fav"/>
			<referrer name="cmd_discord"/>
			<referrer name="cmd_fav2"/>
			<referrer name="cmd_irc"/>
			<referrer name="cmd_readrules"/>
			<referrer name="cmd_nospam"/>
			<referrer name="cmd_ts"/>
			<referrer name="cmd_dontask"/>
			<referrer name="cmd_countdownradius"/>
			<referrer name="cmd_countdown"/>
			<referrer name="cmd_whack"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_rape"/>
			<referrer name="cmd_makeout"/>
			<referrer name="cmd_lick"/>
			<referrer name="cmd_hug"/>
			<referrer name="cmd_kiss"/>
			<referrer name="cmd_touch"/>
			<referrer name="cmd_usedildo"/>
			<referrer name="cmd_eat"/>
			<referrer name="cmd_farton"/>
			<referrer name="cmd_totalcars"/>
			<referrer name="cmd_giveweapon"/>
			<referrer name="cmd_setmyfw"/>
			<referrer name="cmd_burn"/>
			<referrer name="cmd_e"/>
			<referrer name="cmd_setep"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_minigunall"/>
			<referrer name="cmd_flamerall"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_giveallcash"/>
			<referrer name="cmd_enablehydraall"/>
			<referrer name="cmd_disablehydraall"/>
			<referrer name="cmd_enablerhinoall"/>
			<referrer name="cmd_disablerhinoall"/>
			<referrer name="cmd_trackp"/>
			<referrer name="cmd_dns"/>
			<referrer name="cmd_bankrupt"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="cmd_setplayeroranges"/>
			<referrer name="cmd_setplayerapples"/>
			<referrer name="cmd_setplayerraceswon"/>
			<referrer name="cmd_setplayerplaytime"/>
			<referrer name="cmd_setplayerracesjoined"/>
			<referrer name="cmd_setplayerkills"/>
			<referrer name="cmd_setplayerworld"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_setlevel"/>
			<referrer name="cmd_dnv"/>
			<referrer name="cmd_asay"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_setammo"/>
			<referrer name="cmd_setcarhealth"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_world"/>
			<referrer name="cmd_setinterior"/>
			<referrer name="cmd_spawn"/>
			<referrer name="cmd_kp"/>
			<referrer name="cmd_crash"/>
			<referrer name="cmd_healall"/>
			<referrer name="cmd_armorall"/>
			<referrer name="cmd_rconcmd"/>
			<referrer name="cmd_flamer"/>
			<referrer name="cmd_fex"/>
			<referrer name="cmd_rpg"/>
			<referrer name="cmd_grenades"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_hsrpg"/>
			<referrer name="cmd_dcradius"/>
			<referrer name="cmd_dc"/>
			<referrer name="cmd_carkill"/>
			<referrer name="cmd_carkill2"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_ppimv"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unmute"/>
			<referrer name="cmd_mute"/>
			<referrer name="cmd_dac"/>
			<referrer name="cmd_rasv"/>
			<referrer name="cmd_unbanlast"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givejp"/>
			<referrer name="cmd_jp"/>
			<referrer name="cmd_annradius"/>
			<referrer name="cmd_ann"/>
			<referrer name="cmd_tann"/>
			<referrer name="cmd_annp"/>
			<referrer name="cmd_ann2"/>
			<referrer name="cmd_ann3"/>
			<referrer name="cmd_ann4"/>
			<referrer name="cmd_gotocoords"/>
			<referrer name="cmd_gotocoords2"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_launch"/>
			<referrer name="cmd_gotoz"/>
			<referrer name="cmd_gotox"/>
			<referrer name="cmd_gotoy"/>
			<referrer name="cmd_drop2"/>
			<referrer name="cmd_drop"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_god"/>
			<referrer name="cmd_mytoken"/>
			<referrer name="cmd_settoken"/>
			<referrer name="cmd_buytokens"/>
			<referrer name="cmd_gat"/>
			<referrer name="cmd_givetoken"/>
			<referrer name="cmd_givetokenradius"/>
			<referrer name="cmd_race"/>
			<referrer name="cmd_join"/>
			<referrer name="cmd_leave"/>
			<referrer name="cmd_forceleave"/>
			<referrer name="cmd_endrace"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_deleterace"/>
			<referrer name="cmd_undeleterace"/>
			<referrer name="cmd_waitstart"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_tt"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="GetTT_ID"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="TT_AddTimeToDB"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Announcement"/>
			<referrer name="TT_ChecknTeleport"/>
			<referrer name="TT_StartRaceCD"/>
			<referrer name="RaceTime22"/>
			<referrer name="TTTimeTDUpdate"/>
			<referrer name="ReturnTime"/>
			<referrer name="AddCP"/>
			<referrer name="DeleteCP"/>
			<referrer name="ChangeCPSize"/>
			<referrer name="SaveRace"/>
			<referrer name="GetRaceID"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="RaceCountDown"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="AddToLogFile"/>
			<referrer name="AddLineToFile"/>
			<referrer name="CreateLog"/>
			<referrer name="RaceVehicle"/>
			<referrer name="OnPlayerEnterDynamicCP"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="Token_Weapons"/>
			<referrer name="Token_Vehicle"/>
			<referrer name="cmd_gamestats"/>
			<referrer name="cmd_rtpall"/>
			<referrer name="cmd_rtp"/>
			<referrer name="cmd_tp"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="HO_load"/>
			<referrer name="HO_save"/>
			<referrer name="HO_exist"/>
			<referrer name="HO_delete"/>
			<referrer name="HO_Addons"/>
			<referrer name="HO_Addons2"/>
			<referrer name="HO_Addons3"/>
			<referrer name="AutoNewsChange"/>
			<referrer name="CreateNewTeleport"/>
			<referrer name="LoadEasterEggs"/>
			<referrer name="EasterEggPickup"/>
			<referrer name="Easter_Egg_Update"/>
			<referrer name="GetUserID"/>
			<referrer name="AddDrift"/>
			<referrer name="CountDownDriftTimer"/>
			<referrer name="DriftSave"/>
			<referrer name="floatval"/>
			<referrer name="_B@EchoS"/>
			<referrer name="_B@EchoP"/>
			<referrer name="StartRace"/>
			<referrer name="AddProperty"/>
			<referrer name="LoadProperties"/>
			<referrer name="SaveProperties"/>
			<dependency name="InitializeFormatSpecifiers"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gs_CustomFormatFunctions"/>
			<dependency name="gs_bIsInitialized"/>
			<dependency name="min"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="strins"/>
			<dependency name="strunpack"/>
			<dependency name="true"/>
			<param name="szOutput">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="iLength">
			</param>
			<param name="szFormatString">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,PlayerText3D,Text,Text3D,Menu,DB,DBResult,File,Float} </paraminfo>
			</param>
		</member>
		<member name="M:fputchar" syntax="fputchar(handle, value, utf8)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Files_CopyRange"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="utf8">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:fread" syntax="fread(handle, string[], size, pack)">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="LoadModelSelectionMenu"/>
			<referrer name="CountFileLines"/>
			<referrer name="CountRaces"/>
			<referrer name="ConvertProperties"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:fremove" syntax="fremove(name[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Files_Move"/>
			<referrer name="OnDialogResponse"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:fseek" syntax="fseek(handle, position, whence)">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Files_DoCopy"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="position">
			</param>
			<param name="whence">
				<paraminfo>seek_whence </paraminfo>
			</param>
		</member>
		<member name="M:ftemporary" syntax="ftemporary(ret[], ext[], len, maxAge)">
			<tagname value="File"/>
			<stacksize value="40"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<dependency name="E_YSI_DIR_TEMP"/>
			<dependency name="GetYSIScriptfilesDir"/>
			<dependency name="fautocleanup"/>
			<dependency name="ftemporary_"/>
			<dependency name="strcat"/>
			<param name="ret">
				<paraminfo> [] </paraminfo>
				Storage for the return value.
			</param>
			<param name="ext">
				<paraminfo> [] </paraminfo>
				Extension.
			</param>
			<param name="len">
				Maximum string length.
			</param>
			<param name="maxAge">
				Maximum temporary file age.
			</param>
			<library>y_utils - files</library>          <remarks>  Generate a random temporary filename and open it.  Also redefines  <c>ftemp</c> to call this function instead if called with extra parameters.  </remarks> 
		</member>
		<member name="M:ftemporary_" syntax="ftemporary_(name[], ext[], path[], len)">
			<tagname value="File"/>
			<stacksize value="6"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="ftemporary"/>
			<dependency name="YSI_FOpen__"/>
			<dependency name="YSI_IsLocalVarPackedString__"/>
			<dependency name="fexist"/>
			<dependency name="io_readwrite"/>
			<dependency name="random"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				Storage for the return value.
			</param>
			<param name="ext">
				<paraminfo> [] </paraminfo>
				Extension.
			</param>
			<param name="path">
				<paraminfo> [] </paraminfo>
				Directory in which to place temporary files.
			</param>
			<param name="len">
				Maximum string length.
			</param>
			<library>y_utils - files</library>          <remarks>  Internal detail for <c>ftemporary</c>.  Should not be called directly.  </remarks> 
		</member>
		<member name="M:funcidx" syntax="funcidx(name[])">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="InitializeFormatSpecifiers"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:fwrite" syntax="fwrite(handle, string[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<referrer name="fautocleanup"/>
			<referrer name="AddToLogFile"/>
			<referrer name="AddLineToFile"/>
			<referrer name="CreateLog"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:getarg" syntax="getarg(arg, index)">
			<attribute name="native"/>
			<referrer name="Debug_PrintQ_IMPL"/>
			<referrer name="L@"/>
			<referrer name="T@"/>
			<referrer name="RandomMinMaxExceptMany"/>
			<param name="arg">
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:getchar" syntax="getchar(echo)">
			<stacksize value="1"/>
			<param name="echo">
				<paraminfo>bool </paraminfo>
				If <c>true</c>, the character read from the keyboard is echoed on the display.
			</param>
			<library>console</library>  <summary>Read one character.</summary>    <seealso name="getstring"/>  <return>The numeric code for the character that is read (this is usually the ASCII code).</return> 
		</member>
		<member name="M:getdate" syntax="getdate(&amp;year, &amp;month, &amp;day)">
			<attribute name="native"/>
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="cmd_xmasgift"/>
			<param name="year">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="month">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="day">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:getproperty" syntax="getproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="Server_LoadRconFix"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:getstring" syntax="getstring(string[], size, pack)">
			<stacksize value="1"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				
			</param>
			<param name="size">
				
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				
			</param>
			<library>console</library>  <summary>Read a line.</summary>        <seealso name="getchar"/>  <return>The number of characters read, excluding the terminating null character.</return>  <remarks>Function <c>getstring</c> stops reading when either the enter key is typed or the  maximum length is reached.  The maximum length is in cells (not characters) and it includes a   terminating null character.  The function can read both packed and unpacked strings; when reading  a packed string, the function may read more characters than the size parameter specifies, since  each cell holds multiple characters.</remarks> 
		</member>
		<member name="M:gettime" syntax="gettime(&amp;hour, &amp;minute, &amp;second)">
			<attribute name="native"/>
			<referrer name="ScriptInit_GetStartTime"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="fautocleanup"/>
			<referrer name="MP_OPC"/>
			<referrer name="Duel_End"/>
			<param name="hour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="minute">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="second">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:getvalue" syntax="getvalue(base, end, ...)">
			<stacksize value="1"/>
			<param name="base">
				Must be between 2 and 36, use 10 for decimal or 16 for hexadecimal.
			</param>
			<param name="end">
				The character code that terminates the input.  More than one character may be listed.
			</param>
			<param name="...">
			</param>
			<library>console</library>  <summary>Read a number.</summary>      <param name="..."></param>  <seealso name="getstring"/>  <return>The value that is read.</return>  <remarks>Read a value (a signed number) from the keyboard.  The <c>getvalue</c> function allows  you to read in a numeric radix from 2 to 36 (the base parameter) with decimal radix by default.  By default the input ends when the user types the enter key, but one or more different keys may  be selected (the end parameter and subsequent). In the list of terminating keys, a positive  number (like <c>'\r'</c>) displays the key and terminates input, and a negative number terminates  input without displaying the terminating key.</remarks> 
		</member>
		<member name="M:gotoxy" syntax="gotoxy(x, y)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="x">
				
			</param>
			<param name="y">
				The new cursor position.
			</param>
			<library>console</library>  <summary>Set cursor location.</summary>      <seealso name="clrscr"/>  <return><c>true</c> if the cursor moved and <c>false</c> if the requested position is invalid.</return>  <remarks>Sets the cursor position on the console.  The upper left corner is at <c>(1,1)</c>.</remarks> 
		</member>
		<member name="M:hexstr" syntax="hexstr(str[])">
			<stacksize value="4"/>
			<dependency name="HexStr"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<library>y_utils - conversions</library>  <param name="string">String to convert to a number.</param>  <returns>  value of the passed hex string.  </returns>  <remarks>  Now stops on invalid characters.  </remarks> 
		</member>
		<member name="M:ishex" syntax="ishex(str[])">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="IsHex"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check.
			</param>
			<library>y_utils - conversions</library>    <returns>  true/false.  </returns> 
		</member>
		<member name="M:isnumeric" syntax="isnumeric(str[])">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="IsNumeric"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:iterfunc" syntax="iterfunc(params)">
			<attribute name="native"/>
			<referrer name="PAWNDOC"/>
			<param name="params">
				The iterator function's parameters.
			</param>
			<library>y_iterate</library>    <remarks>  Used to declare a special iterator function.  Examples:  <code>  iterfunc stock OnlyZero(cur)                                                 <br />  {                                                                            <br /><indent />  if (cur == -1)                                                           <br /><indent /><indent />  return 0;                                                            <br /><indent />  return -1;                                                               <br />  }                                                                            <br />  </code>  <code>  iterfunc stock AlsoOnlyZero[cellmin](cur)                                    <br />  {                                                                            <br /><indent />  if (cur == cellmin)                                                      <br /><indent /><indent />  return 0;                                                            <br /><indent />  return cellmin;                                                          <br />  }                                                                            <br />  </code>  <code>  iterfunc stock OneToTen[cellmin](cur)                                        <br />  {                                                                            <br /><indent />  if (cur == cellmin)                                                      <br /><indent /><indent />  return 1;                                                            <br /><indent />  if (cur == 10)                                                           <br /><indent /><indent />  return cellmin;                                                      <br /><indent />  return cur + 1;                                                          <br />  }                                                                            <br />  </code>  <code>  iterfunc stock OneToN(cur, n)                                                <br />  {                                                                            <br /><indent />  if (n &lt; 1)                                                            <br /><indent /><indent />  return -1;                                                           <br /><indent />  if (cur == -1)                                                           <br /><indent /><indent />  return 1;                                                            <br /><indent />  if (cur == n)                                                            <br /><indent /><indent />  return -1;                                                           <br /><indent />  return cur + 1;                                                          <br />  }                                                                            <br />  </code>  </remarks> 
		</member>
		<member name="M:mS_CreateCurrentPageTextDraw" syntax="mS_CreateCurrentPageTextDraw(playerid, Xpos, Ypos)">
			<tagname value="PlayerText"/>
			<stacksize value="7"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="PlayerTextDrawColour"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PlayerTextDrawUseBox"/>
			<dependency name="TEXT_DRAW_FONT_1"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="Xpos">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Ypos">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:mS_CreateMPTextDraw" syntax="mS_CreateMPTextDraw(playerid, modelindex, Xpos, Ypos, Xrot, Yrot, Zrot, mZoom, width, height, bgcolor)">
			<tagname value="PlayerText"/>
			<stacksize value="9"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="PlayerTextDrawBackgroundColour"/>
			<dependency name="PlayerTextDrawColour"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawSetPreviewModel"/>
			<dependency name="PlayerTextDrawSetPreviewRot"/>
			<dependency name="PlayerTextDrawSetSelectable"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="TEXT_DRAW_FONT_MODEL_PREVIEW"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="modelindex">
			</param>
			<param name="Xpos">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Ypos">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Xrot">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Yrot">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Zrot">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mZoom">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="bgcolor">
			</param>
		</member>
		<member name="M:mS_CreatePlayerBGTextDraw" syntax="mS_CreatePlayerBGTextDraw(playerid, Xpos, Ypos, Width, Height, bgcolor)">
			<tagname value="PlayerText"/>
			<stacksize value="7"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="PlayerTextDrawBackgroundColour"/>
			<dependency name="PlayerTextDrawBoxColour"/>
			<dependency name="PlayerTextDrawColour"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="PlayerTextDrawUseBox"/>
			<dependency name="TEXT_DRAW_FONT_0"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="Xpos">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Ypos">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Width">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Height">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="bgcolor">
			</param>
		</member>
		<member name="M:mS_CreatePlayerDialogButton" syntax="mS_CreatePlayerDialogButton(playerid, Xpos, Ypos, Width, Height, button_text[])">
			<tagname value="PlayerText"/>
			<stacksize value="7"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="PlayerTextDrawAlignment"/>
			<dependency name="PlayerTextDrawBackgroundColour"/>
			<dependency name="PlayerTextDrawBoxColour"/>
			<dependency name="PlayerTextDrawColour"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="PlayerTextDrawSetSelectable"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="PlayerTextDrawUseBox"/>
			<dependency name="TEXT_DRAW_ALIGN_CENTER"/>
			<dependency name="TEXT_DRAW_FONT_1"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="Xpos">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Ypos">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Width">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Height">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="button_text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:mS_CreatePlayerHeaderTextDraw" syntax="mS_CreatePlayerHeaderTextDraw(playerid, Xpos, Ypos, header_text[])">
			<tagname value="PlayerText"/>
			<stacksize value="7"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="PlayerTextDrawColour"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PlayerTextDrawUseBox"/>
			<dependency name="TEXT_DRAW_FONT_0"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="Xpos">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Ypos">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="header_text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:mS_DestroyPlayerMPs" syntax="mS_DestroyPlayerMPs(playerid)">
			<stacksize value="5"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="gSelectionItems"/>
			<dependency name="gSelectionItems"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:mS_DestroySelectionMenu" syntax="mS_DestroySelectionMenu(playerid)">
			<stacksize value="5"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="HideModelSelectionMenu"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<dependency name="DeletePVar"/>
			<dependency name="GetPVarInt"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="SetPVarInt"/>
			<dependency name="gBackgroundTextDrawId"/>
			<dependency name="gCancelButtonTextDrawId"/>
			<dependency name="gCurrentPageTextDrawId"/>
			<dependency name="gHeaderTextDrawId"/>
			<dependency name="gNextButtonTextDrawId"/>
			<dependency name="gPrevButtonTextDrawId"/>
			<dependency name="mS_DestroyPlayerMPs"/>
			<dependency name="mS_GetPlayerCurrentListID"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:mS_GetAmountOfListItems" syntax="mS_GetAmountOfListItems(ListID)">
			<stacksize value="1"/>
			<referrer name="mS_GetNumberOfPages"/>
			<dependency name="gLists"/>
			<param name="ListID">
			</param>
		</member>
		<member name="M:mS_GetAmountOfListItemsEx" syntax="mS_GetAmountOfListItemsEx(playerid)">
			<stacksize value="4"/>
			<referrer name="mS_GetNumberOfPagesEx"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<dependency name="GetPVarInt"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:mS_GetNumberOfPages" syntax="mS_GetNumberOfPages(ListID)">
			<stacksize value="5"/>
			<referrer name="mS_UpdatePageTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<dependency name="mS_GetAmountOfListItems"/>
			<param name="ListID">
			</param>
		</member>
		<member name="M:mS_GetNumberOfPagesEx" syntax="mS_GetNumberOfPagesEx(playerid)">
			<stacksize value="5"/>
			<referrer name="mS_UpdatePageTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<dependency name="mS_GetAmountOfListItemsEx"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:mS_GetPlayerCurrentListID" syntax="mS_GetPlayerCurrentListID(playerid)">
			<stacksize value="4"/>
			<referrer name="mS_ShowPlayerMPs"/>
			<referrer name="mS_UpdatePageTextDraw"/>
			<referrer name="mS_DestroySelectionMenu"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<dependency name="GetPVarInt"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:mS_ShowPlayerMPs" syntax="mS_ShowPlayerMPs(playerid)">
			<stacksize value="26"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetPVarFloat"/>
			<dependency name="GetPVarInt"/>
			<dependency name="gCustomList"/>
			<dependency name="gCustomList"/>
			<dependency name="gItemList"/>
			<dependency name="gItemList"/>
			<dependency name="gLists"/>
			<dependency name="gRotZoom"/>
			<dependency name="gRotZoom"/>
			<dependency name="gSelectionItems"/>
			<dependency name="gSelectionItems"/>
			<dependency name="gSelectionItemsTag"/>
			<dependency name="gSelectionItemsTag"/>
			<dependency name="mS_CreateMPTextDraw"/>
			<dependency name="mS_DestroyPlayerMPs"/>
			<dependency name="mS_GetAmountOfListItemsEx"/>
			<dependency name="mS_GetPlayerCurrentListID"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:mS_UpdatePageTextDraw" syntax="mS_UpdatePageTextDraw(playerid)">
			<stacksize value="75"/>
			<referrer name="ShowModelSelectionMenu"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="OnPlayerClickPlayerTextDraw"/>
			<dependency name="GetPVarInt"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="format"/>
			<dependency name="gCurrentPageTextDrawId"/>
			<dependency name="mS_GetNumberOfPages"/>
			<dependency name="mS_GetNumberOfPagesEx"/>
			<dependency name="mS_GetPlayerCurrentListID"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:mS_strtok" syntax="mS_strtok(string[], &amp;index)">
			<stacksize value="23"/>
			<referrer name="LoadModelSelectionMenu"/>
			<dependency name="EOS"/>
			<dependency name="mS_strtok"/>
			<dependency name="strlen"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:mSend1" syntax="mSend1(playerid, msg[])">
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="msg">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:mSend2" syntax="mSend2(playerid, msg[])">
			<stacksize value="5"/>
			<referrer name="cmd_duel"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="msg">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:mSend3" syntax="mSend3(playerid, msg[])">
			<stacksize value="5"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_dmlock"/>
			<referrer name="cmd_dmkick"/>
			<referrer name="cmd_dm"/>
			<referrer name="cmd_dmq"/>
			<referrer name="cmd_leavedm"/>
			<referrer name="cmd_kill"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="msg">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:mSend4" syntax="mSend4(playerid, msg[])">
			<stacksize value="5"/>
			<referrer name="cmd_duel"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="msg">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:mSend5" syntax="mSend5(playerid, msg[])">
			<stacksize value="5"/>
			<referrer name="cmd_duel"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="msg">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:main" syntax="main()">
			<attribute name="entry"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit_MainInitFuncs_"/>
			<library>y_scriptinit</library>  <remarks>  Call <c>@init(init_main)</c> functions.  </remarks> 
		</member>
		<member name="M:memcmp" syntax="memcmp(arr1[], arr2[], count)">
			<stacksize value="6"/>
			<dependency name="MemCmp"/>
			<param name="arr1">
				<paraminfo> [] </paraminfo>
				First array to compare.
			</param>
			<param name="arr2">
				<paraminfo> [] </paraminfo>
				Second array to compare.
			</param>
			<param name="count">
				How many cells to compare.
			</param>
			<library>y_utils - arrays</library>        <returns>  The difference (0 if the same).  </returns>  <remarks>  Returns the first found difference between two arrays.  If they are the same  the return value is <c>0</c>, otherwise it is <c>arr1[i] - arr2[i]</c>.  </remarks> 
		</member>
		<member name="M:memcpy" syntax="memcpy(dest[], source[], index, numbytes, maxlength)">
			<attribute name="native"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="Iter_Init_Internal"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="numbytes">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:memset" syntax="memset(arr[], val, size)">
			<stacksize value="7"/>
			<dependency name="RawMemSet"/>
			<dependency name="cellbytes"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				Array or address to set to a value.
			</param>
			<param name="val">
			</param>
			<param name="size">
				Number of cells to fill.
			</param>
			<library>y_utils - arrays</library>    <param name="value">What to set the cells to.</param>    <remarks>  Based on <a href="http://forum.sa-mp.com/showthread.php?p=1606781#post1606781">  code by Slice</a>, modified to use binary flags instead of a loop.  "MemSet" takes an array, the size of the array, and a value to fill it with  and sets the whole array to that value.  "rawmemset" is similar, but takes an AMX data segment address instead and  the size is in bytes, not cells.  However, the size must still be a  multiple of 4.  </remarks> 
		</member>
		<member name="M:min" syntax="min(value1, value2)">
			<attribute name="native"/>
			<referrer name="Base64Decode"/>
			<referrer name="Files_CopyRange"/>
			<referrer name="DoLevenshteinDistance"/>
			<referrer name="DoLevenshteinDistancePackA"/>
			<referrer name="DoLevenshteinDistancePackB"/>
			<referrer name="DoLevenshteinDistancePackAB"/>
			<referrer name="Iter_Remove_InternalC"/>
			<referrer name="Iter_Prev_InternalD"/>
			<referrer name="formatex"/>
			<param name="value1">
			</param>
			<param name="value2">
			</param>
		</member>
		<member name="M:mysql_close" syntax="mysql_close(handle)">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_connect" syntax="mysql_connect(host[], user[], password[], database[], option_id)">
			<tagname value="MySQL"/>
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="host">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="user">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="database">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="option_id">
				<paraminfo>MySQLOpt </paraminfo>
			</param>
		</member>
		<member name="M:mysql_errno" syntax="mysql_errno(handle)">
			<attribute name="native"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_query" syntax="mysql_query(handle, query[], use_cache)">
			<tagname value="Cache"/>
			<attribute name="native"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_mysqlq"/>
			<referrer name="GetUserIDName"/>
			<referrer name="OnPlayerText"/>
			<referrer name="AddPlayerBan"/>
			<referrer name="AddProxy"/>
			<referrer name="Login"/>
			<referrer name="LoadKeys"/>
			<referrer name="SaveKeys"/>
			<referrer name="SaveSettings"/>
			<referrer name="Save"/>
			<referrer name="DCMD_stats"/>
			<referrer name="cmd_setpropbuyable"/>
			<referrer name="cmd_buy"/>
			<referrer name="cmd_sell"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_groupmanage"/>
			<referrer name="InsertDuelResult"/>
			<referrer name="cmd_setmyradio"/>
			<referrer name="cmd_myradio"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_report"/>
			<referrer name="cmd_register"/>
			<referrer name="cmd_login"/>
			<referrer name="cmd_drift"/>
			<referrer name="cmd_dpt"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_deletesavedcar"/>
			<referrer name="cmd_savecar"/>
			<referrer name="cmd_deletectf"/>
			<referrer name="cmd_ctf"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadctf"/>
			<referrer name="cmd_clearctfflags"/>
			<referrer name="cmd_addctfflag"/>
			<referrer name="cmd_tci"/>
			<referrer name="cmd_setctftoken"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_loadsurvival"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_addderbyhealthpickup"/>
			<referrer name="cmd_addderbyspawnpoint"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_setderbydeathzone"/>
			<referrer name="cmd_setderbyobjectset"/>
			<referrer name="cmd_createderby"/>
			<referrer name="cmd_setinfo"/>
			<referrer name="cmd_loadobjects"/>
			<referrer name="cmd_saveobjects"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_saveset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_dosf"/>
			<referrer name="cmd_aka"/>
			<referrer name="cmd_myobjsets"/>
			<referrer name="cmd_bans"/>
			<referrer name="cmd_t"/>
			<referrer name="cmd_newteleport"/>
			<referrer name="cmd_moveproxies"/>
			<referrer name="cmd_accountstatus"/>
			<referrer name="cmd_serverstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_unbanlast"/>
			<referrer name="cmd_updateraceangle"/>
			<referrer name="cmd_deleterace"/>
			<referrer name="cmd_undeleterace"/>
			<referrer name="cmd_resettime"/>
			<referrer name="cmd_resetttime"/>
			<referrer name="cmd_tt"/>
			<referrer name="cmd_top5"/>
			<referrer name="cmd_top10"/>
			<referrer name="cmd_top20"/>
			<referrer name="GetTT_ID"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="TT_AddTimeToDB"/>
			<referrer name="SetUP_TT"/>
			<referrer name="TT_Announcement"/>
			<referrer name="SaveRace"/>
			<referrer name="GetRaceID"/>
			<referrer name="LoadRace"/>
			<referrer name="RaceDetails"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="Race_Rotation"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="LoadDerbyMap"/>
			<referrer name="HO_load"/>
			<referrer name="HO_save"/>
			<referrer name="HO_exist"/>
			<referrer name="HO_delete"/>
			<referrer name="LoadEasterEggs"/>
			<referrer name="Easter_Egg_Update"/>
			<referrer name="GetUserID"/>
			<referrer name="AddDrift"/>
			<referrer name="DriftSave"/>
			<referrer name="StartRace"/>
			<referrer name="AddProperty"/>
			<referrer name="LoadProperties"/>
			<referrer name="SaveProperties"/>
			<referrer name="CountProperties"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="use_cache">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:nofun" syntax="nofun(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AllowedVehicle"/>
			<dependency name="DestroyVehicleEx"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="KillTimer"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TokenUltimate"/>
			<dependency name="UltimateTimer"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:numargs" syntax="numargs()">
			<attribute name="native"/>
			<referrer name="Server_PrintIntroMessage"/>
			<referrer name="Server_PrintIntroPart"/>
			<referrer name="AMX_GetGlobalAddress"/>
			<referrer name="AMX_GetRelativeAddress"/>
			<referrer name="L@"/>
			<referrer name="T@"/>
			<referrer name="RandomMinMaxExceptMany"/>
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<referrer name="printfex"/>
		</member>
		<member name="M:print" syntax="print(string[], foreground, background)">
			<stacksize value="3"/>
			<referrer name="AMX_DumpHeader"/>
			<referrer name="PrintArg"/>
			<referrer name="ShowModelSelectionMenuEx"/>
			<referrer name="LoadModelSelectionMenu"/>
			<referrer name="printfex"/>
			<referrer name="PP_main"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="IsPlayerInInvalidNosVehicle"/>
			<referrer name="DB_StreamObjects"/>
			<dependency name="__print"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The string to print
			</param>
			<param name="foreground">
				The string to print
			</param>
			<param name="background">
				Colour codes for the foreground and the background of the text string;  see function <c>setattr</c> for a list of colours.  When left at <c>-1</c>, the default colours  are used.  Note that a terminal or a host application may not support colours.
			</param>
			<library>console</library>  <summary>Prints a string to the server console (not in-game chat) and logs (server_log.txt).</summary>        <seealso name="printf"/>  <return>This function always returns 0.</return> 
		</member>
		<member name="M:printf" syntax="printf(format[], ...)">
			<attribute name="native"/>
			<referrer name="Debug_Print0"/>
			<referrer name="AMX_DumpHeader"/>
			<referrer name="Iter_Debug_InternalC"/>
			<referrer name="Iter_Debug_InternalD"/>
			<referrer name="LoadModelSelectionMenu"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The format string
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
				Indefinite number of arguments of any tag
			</param>
			<library>console</library>  <summary>Outputs a formatted string on the console (the server window, not the in-game chat).</summary>      <seealso name="print"/>  <seealso name="format"/>  <remarks>The format string or its output should not exceed 1024 characters.  Anything beyond that  length can lead to a server to crash.</remarks>  <remarks>This function doesn't support <a href="#strpack">packed</a> strings.</remarks>  <remarks>  <b>Format Specifiers:</b><p/>  <ul>  <li><b><c>%i</c></b> - integer (whole number)</li>  <li><b><c>%d</c></b> - integer (whole number).</li>  <li><b><c>%s</c></b> - string</li>  <li><b><c>%f</c></b> - floating-point number (Float: tag)</li>  <li><b><c>%c</c></b> - ASCII character</li>  <li><b><c>%x</c></b> - hexadecimal number</li>  <li><b><c>%b</c></b> - binary number</li>  <li><b><c>%%</c></b> - literal <b><c>%</c></b></li>  <li><b><c>%q</c></b> - escape a text for SQLite. (Added in <b>0.3.7 R2</b>)</li>  </ul>  </remarks>  <remarks>The values for the placeholders follow in the exact same order as parameters in the call.  For example, <b><c>"I am %i years old"</c></b> - the <b><c>%i</c></b> will be replaced with an Integer  variable, which is the person's age.</remarks>  <remarks>You may optionally put a number between the <b><c>%</c></b> and the letter of the placeholder  code.  This number indicates the field width; if the size of the parameter to print at the position  of the placeholder is smaller than the field width, the field is expanded with spaces.  To cut the  number of decimal places beeing shown of a float, you can add <b><c>.&lt;max number&gt;</c></b> between  the <b><c>%</c></b> and the <b><c>f</c></b>. (example: <b><c>%.2f</c></b>)</remarks>  <return>This function always returns 0.</return> 
		</member>
		<member name="M:printfex" syntax="printfex(szFormatString[], ...)">
			<stacksize value="8"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="Streamer_OnPluginError"/>
			<referrer name="BuildObjects"/>
			<referrer name="ConvertProperties"/>
			<referrer name="SaveProperties"/>
			<dependency name="formatex"/>
			<dependency name="numargs"/>
			<dependency name="print"/>
			<param name="szFormatString">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,PlayerText3D,Text,Text3D,Menu,DB,DBResult,File,Float} </paraminfo>
			</param>
		</member>
		<member name="M:random" syntax="random(max)">
			<attribute name="native"/>
			<referrer name="Utils_ChaosMod"/>
			<referrer name="ftemporary_"/>
			<referrer name="RandomFloatMinMax"/>
			<referrer name="RandomFloatMax"/>
			<referrer name="TryPercentage"/>
			<referrer name="TryPermille"/>
			<referrer name="TryPPM"/>
			<referrer name="Iter_Random_Impl"/>
			<referrer name="Iter_RandomFree_Multi"/>
			<referrer name="Iter_RandomFree_Single"/>
			<referrer name="Iter_Func@Random"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="RandomGame"/>
			<referrer name="LooseWeapons"/>
			<referrer name="RandomMessages"/>
			<referrer name="OnPlayerModelSelection"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_delivery"/>
			<referrer name="DerbyTimer"/>
			<referrer name="Anticheat_Update"/>
			<referrer name="cmd_hydradm"/>
			<referrer name="cmd_m4dm"/>
			<referrer name="cmd_dildoparty"/>
			<referrer name="cmd_dildodm2"/>
			<referrer name="cmd_chainsawdm"/>
			<referrer name="cmd_flamedm"/>
			<referrer name="cmd_dildodm"/>
			<referrer name="cmd_chainsawdm2"/>
			<referrer name="cmd_grenadedm2"/>
			<referrer name="cmd_sniperdm2"/>
			<referrer name="cmd_prodm"/>
			<referrer name="cmd_hsdm"/>
			<referrer name="cmd_deagledm"/>
			<referrer name="cmd_shotgundm"/>
			<referrer name="cmd_combatdm"/>
			<referrer name="cmd_rocketdm"/>
			<referrer name="cmd_mgdm"/>
			<referrer name="cmd_mgdm2"/>
			<referrer name="cmd_mgdm3"/>
			<referrer name="cmd_pooldm"/>
			<referrer name="cmd_jpdm"/>
			<referrer name="cmd_pooldm2"/>
			<referrer name="cmd_sniperdm"/>
			<referrer name="cmd_wwdm"/>
			<referrer name="cmd_rwdm"/>
			<referrer name="cmd_easteregghint"/>
			<referrer name="Duel_End"/>
			<referrer name="Duel_RandomizeSigns"/>
			<referrer name="cmd_spinslots"/>
			<referrer name="cmd_pj"/>
			<referrer name="cmd_nrg"/>
			<referrer name="cmd_bb"/>
			<referrer name="cmd_da"/>
			<referrer name="cmd_lva"/>
			<referrer name="cmd_lsa"/>
			<referrer name="cmd_club"/>
			<referrer name="cmd_dmzone1"/>
			<referrer name="cmd_dmzone2"/>
			<referrer name="cmd_dmzone3"/>
			<referrer name="cmd_dmzone4"/>
			<referrer name="cmd_dmzone5"/>
			<referrer name="cmd_dmzone6"/>
			<referrer name="cmd_dmzone7"/>
			<referrer name="cmd_dmzone8"/>
			<referrer name="cmd_dmzone9"/>
			<referrer name="cmd_dmzone10"/>
			<referrer name="cmd_glenpark"/>
			<referrer name="cmd_sfa"/>
			<referrer name="cmd_forcesfa"/>
			<referrer name="cmd_dam"/>
			<referrer name="cmd_loadcar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_tram"/>
			<referrer name="cmd_kart"/>
			<referrer name="RandomMinigame"/>
			<referrer name="StartSurvival"/>
			<referrer name="cmd_startsurvival"/>
			<referrer name="cmd_joinsurvival"/>
			<referrer name="cmd_joinderby"/>
			<referrer name="cmd_war"/>
			<referrer name="cmd_join"/>
			<referrer name="SpawnVehicle"/>
			<referrer name="TT_StartRaceCD"/>
			<referrer name="RandomVehicleColor"/>
			<referrer name="_B@Action"/>
			<param name="max">
			</param>
		</member>
		<member name="M:rawMemcpy" syntax="rawMemcpy(dest, src, numbytes)">
			<stacksize value="7"/>
			<dependency name="RawMemCpy_"/>
			<dependency name="cellmax"/>
			<param name="dest">
				Destination address.
			</param>
			<param name="src">
				Source data.
			</param>
			<param name="numbytes">
				Number of bytes to copy.
			</param>
			<library>y_utils - arrays</library>        <remarks>  Like memcpy, but takes addresses instead of arrays.  Also far less secure  because it doesn't check the destination size - it just assumes it is large  enough.  </remarks> 
		</member>
		<member name="M:rawMemset" syntax="rawMemset(address, value, size)">
			<stacksize value="6"/>
			<dependency name="RawMemSet"/>
			<param name="address">
				Array or address to set to a value.
			</param>
			<param name="value">
				What to set the cells to.
			</param>
			<param name="size">
				Number of bytes to fill.
			</param>
			<library>y_utils - arrays</library>        <remarks>  Based on code by Slice:  <a href="http://forum.sa-mp.com/showthread.php?p=1606781#post1606781" />  Modified to use binary flags instead of a loop.  "MemSet" takes an array, the size of the array, and a value to fill it with  and sets the whole array to that value.  "RawMemSet" is similar, but takes an AMX data segment address instead and  the size is in bytes, not cells.  However, the size must still be a multiple  of 4.  </remarks> 
		</member>
		<member name="M:setarg" syntax="setarg(arg, index, value)">
			<attribute name="native"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="Iter_Clear_InternalC"/>
			<param name="arg">
			</param>
			<param name="index">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:setattr" syntax="setattr(foreground, background)">
			<stacksize value="1"/>
			<param name="foreground">
				The string to print
			</param>
			<param name="background">
				Colour codes for the foreground and the background of the text string;  see function <c>setattr</c> for a list of colours.  When left at <c>-1</c>, the default colours  are used.  Note that a terminal or a host application may not support colours
			</param>
			<library>console</library>  <summary>Set text colours.</summary>      <seealso name="clrscr"/>  <return>This function always returns 0.</return>  <remarks>On most systems, the colour value must be a value between zero and seven, as per the  ANSI escape sequences, ISO 6429.  Predefined constants for the colours are <c>black (0)</c>,  <c>red (1)</c>, <c>green (2)</c>, <c>yellow (3)</c>, <c>blue (4)</c>, <c>magenta (5)</c>,  <c>cyan (6)</c>, and <c>white (7)</c>.</remarks> 
		</member>
		<member name="M:setproperty" syntax="setproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="K@"/>
			<referrer name="D@"/>
			<referrer name="L@"/>
			<referrer name="T@"/>
			<referrer name="X@"/>
			<referrer name="Server_LoadRconFix"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:split" syntax="split(strsrc[], strdest[][], delimiter)">
			<stacksize value="11"/>
			<referrer name="IPInfoDB_Admin"/>
			<referrer name="IPInfoDB_Connect"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<param name="strsrc">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="strdest">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="delimiter">
			</param>
		</member>
		<member name="M:sscanf" syntax="sscanf(data[], format[], ...)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
				The input string containing the data to parse out.
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The format description of what the input data should contain.
			</param>
			<param name="...">
				<paraminfo> {T_WEAPON,Float,_} </paraminfo>
			</param>
			<library>sscanf</library>      <remarks>  The main entry point.  See the readme for vast amounts of information on how  to call this function and all the details on what it does.  This is a macro  that calls <c>SSCANF__</c> and passes the current file and line number as  well for improved error messages.  </remarks> 
		</member>
		<member name="M:sscanf_vehicle" syntax="sscanf_vehicle(string[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="SSCANF_GetSimilarValue"/>
			<dependency name="strval"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The current word being parsed out of the <c>sscanf</c> input.
			</param>
			<library>sscanf</library>    <remarks>  The default implementation of <c>k&lt;vehicle&gt;</c>.  Finds the closest  vehicle by Levenshtein distance to the input.  </remarks> 
		</member>
		<member name="M:sscanf_weapon" syntax="sscanf_weapon(string[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="SSCANF_GetSimilarValue"/>
			<dependency name="strval"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The current word being parsed out of the <c>sscanf</c> input.
			</param>
			<library>sscanf</library>    <remarks>  The default implementation of <c>k&lt;weapon&gt;</c>.  Finds the closest  weapon by Levenshtein distance to the input.  </remarks> 
		</member>
		<member name="M:strcat" syntax="strcat(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="SetTimerExAddr"/>
			<referrer name="Server_GetJITString"/>
			<referrer name="Script_GetCompilerString"/>
			<referrer name="Script_GetCompilerCodepage"/>
			<referrer name="va_getstring"/>
			<referrer name="ReturnStringArg"/>
			<referrer name="ValstrWithOrdinal"/>
			<referrer name="ftemporary_"/>
			<referrer name="ftemporary"/>
			<referrer name="ResolveYSIScriptfileDirs"/>
			<referrer name="CensorIntIP"/>
			<referrer name="F@p"/>
			<referrer name="F@P"/>
			<referrer name="F@W"/>
			<referrer name="F@w"/>
			<referrer name="F@v"/>
			<referrer name="cmd_cmds"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strcmp" syntax="strcmp(string1[], string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="YVers_Callback"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="BoolStr"/>
			<referrer name="LevenshteinDistance"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="MP_OPC"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerText"/>
			<referrer name="Login"/>
			<referrer name="Iter_OnRconLoginAttempt"/>
			<referrer name="IsNameConnected"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_streamset"/>
			<referrer name="cmd_loadset"/>
			<referrer name="cmd_addtoset"/>
			<referrer name="cmd_fencegate"/>
			<referrer name="cmd_jail"/>
			<referrer name="cmd_washplayer"/>
			<referrer name="cmd_endrace"/>
			<referrer name="TT_Check_IfMadeRecord"/>
			<referrer name="RaceDetails"/>
			<referrer name="Race_Timing"/>
			<referrer name="RaceMustEnd"/>
			<referrer name="Check_IfMadeRecord"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="GetNumberOfPlayersOnThisIP"/>
			<referrer name="GetPlayerID"/>
			<referrer name="DB_StreamObjects"/>
			<referrer name="GetNPCNameByID"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strdel" syntax="strdel(string[], start, end)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="formatex"/>
			<referrer name="MP_OPC"/>
			<referrer name="CPUConnectTime"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="IPInfoDB_Admin"/>
			<referrer name="IPInfoDB_Connect"/>
			<referrer name="clearstring"/>
			<referrer name="ResetVariables"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
		</member>
		<member name="M:strfind" syntax="strfind(string[], sub[], ignorecase, pos)">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="YVers_Callback"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="ChrFind"/>
			<referrer name="GetPlayerRPName"/>
			<referrer name="GetPlayerRPComponents"/>
			<referrer name="formatex"/>
			<referrer name="cmd_search"/>
			<referrer name="GetWeaponIDFromName"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_addprop"/>
			<referrer name="cmd_getid"/>
			<referrer name="GetWeaponModelIDFromName"/>
			<referrer name="ReturnPlayerID"/>
			<referrer name="cmd_createctf"/>
			<referrer name="cmd_adddrift"/>
			<referrer name="GetVehicleModelIDFromName"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sub">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="pos">
			</param>
		</member>
		<member name="M:stringContainsIP" syntax="stringContainsIP(string[])">
			<stacksize value="3"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_pm"/>
			<referrer name="cmd_me"/>
			<dependency name="EOS"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strins" syntax="strins(string[], substr[], pos, maxlength)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="formatex"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="substr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strlen" syntax="strlen(string[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="AMX_GetNativeEntry"/>
			<referrer name="AMX_GetNativeName"/>
			<referrer name="va_strlen"/>
			<referrer name="Base64Decode"/>
			<referrer name="StripNL"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="EndOfLine"/>
			<referrer name="Unpack"/>
			<referrer name="unpack"/>
			<referrer name="ftemporary_"/>
			<referrer name="GetPlayerRPComponents"/>
			<referrer name="LevenshteinDistance"/>
			<referrer name="mS_strtok"/>
			<referrer name="CPUConnectTime"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="OnPlayerText"/>
			<referrer name="IPInfoDB_Connect"/>
			<referrer name="cmd_sho"/>
			<referrer name="cmd_ttp"/>
			<referrer name="cmd_ginvite"/>
			<referrer name="cmd_joingroup"/>
			<referrer name="cmd_creategroup"/>
			<referrer name="cmd_groupmanage"/>
			<referrer name="cmd_getid"/>
			<referrer name="cmd_duel"/>
			<referrer name="GetWeaponModelIDFromName"/>
			<referrer name="cmd_topplayers"/>
			<referrer name="cmd_setpass"/>
			<referrer name="cmd_ssb"/>
			<referrer name="cmd_cb"/>
			<referrer name="cmd_plate"/>
			<referrer name="RandomMinigame"/>
			<referrer name="cmd_loadderby"/>
			<referrer name="cmd_me"/>
			<referrer name="cmd_obj"/>
			<referrer name="cmd_react"/>
			<referrer name="cmd_playaudio"/>
			<referrer name="cmd_reconnect"/>
			<referrer name="cmd_heal"/>
			<referrer name="cmd_armour"/>
			<referrer name="cmd_vstats"/>
			<referrer name="cmd_setname"/>
			<referrer name="cmd_setplayercash"/>
			<referrer name="cmd_setplayerdeaths"/>
			<referrer name="cmd_sethealth"/>
			<referrer name="cmd_ps"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_ann"/>
			<referrer name="cmd_tann"/>
			<referrer name="cmd_ann2"/>
			<referrer name="cmd_ann3"/>
			<referrer name="cmd_ann4"/>
			<referrer name="cmd_gethere"/>
			<referrer name="strtok"/>
			<referrer name="IsNumeric2"/>
			<referrer name="ReturnTeleportID"/>
			<referrer name="IsIP"/>
			<referrer name="StringScan"/>
			<referrer name="split"/>
			<referrer name="clearstring"/>
			<referrer name="ResetVariables"/>
			<referrer name="CreateSentence"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strmid" syntax="strmid(dest[], source[], start, end, maxlength)">
			<attribute name="native"/>
			<referrer name="GetPlayerRPComponents"/>
			<referrer name="cmd_duel"/>
			<referrer name="IsIP"/>
			<referrer name="split"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strtok" syntax="strtok(string[], &amp;index)">
			<stacksize value="23"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_ssb"/>
			<dependency name="EOS"/>
			<dependency name="strlen"/>
			<dependency name="strtok"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:strunpack" syntax="strunpack(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="AMX_GetTagByValue"/>
			<referrer name="AMX_DumpHeader"/>
			<referrer name="K@"/>
			<referrer name="Unpack"/>
			<referrer name="unpack"/>
			<referrer name="formatex"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strval" syntax="strval(string[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_PurgeTemporaries"/>
			<referrer name="IPToInt"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="LoadModelSelectionMenu"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="IpToInt"/>
			<referrer name="cmd_duel"/>
			<referrer name="cmd_mycar"/>
			<referrer name="cmd_setmycar"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_setderbyvehicle"/>
			<referrer name="cmd_giveallweapon"/>
			<referrer name="cmd_giveallweaponradius"/>
			<referrer name="cmd_rvehicle"/>
			<referrer name="todec"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:swapchars" syntax="swapchars(c)">
			<attribute name="native"/>
			<referrer name="Cell_ReverseBits"/>
			<referrer name="Cell_ReverseNibbles"/>
			<referrer name="AMX_ReadPackedString"/>
			<referrer name="AMX_WriteString"/>
			<param name="c">
			</param>
		</member>
		<member name="M:tickcount" syntax="tickcount(&amp;granularity)">
			<attribute name="native"/>
			<referrer name="Duel_Initiate"/>
			<referrer name="GoGoRace"/>
			<param name="granularity">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:todec" syntax="todec(str[])">
			<stacksize value="3"/>
			<referrer name="floatval"/>
			<dependency name="strval"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:tolower" syntax="tolower(c)">
			<attribute name="native"/>
			<referrer name="StrToLower"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="c">
			</param>
		</member>
		<member name="M:toupper" syntax="toupper(c)">
			<attribute name="native"/>
			<referrer name="StrToUpper"/>
			<param name="c">
			</param>
		</member>
		<member name="M:u@" syntax="u@(u[])">
			<stacksize value="1"/>
			<param name="u">
				<paraminfo> [1] </paraminfo>
			</param>
		</member>
		<member name="M:unformat" syntax="unformat(data[], format[], ...)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
				The input string containing the data to parse out.
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The format description of what the input data should contain.
			</param>
			<param name="...">
				<paraminfo> {T_WEAPON,Float,_} </paraminfo>
			</param>
			- include <sscanf2> first.  <library>sscanf</library>      <remarks>  An alternative spelling of <c>sscanf</c>, requested by Kalcor because the  original doesn't match the C specification for the format descriptor.  This  is a macro that calls <c>UNFORMAT__</c> and passes the current file and line  number as well for improved error messages.  </remarks> 
		</member>
		<member name="M:unpack" syntax="unpack(str[])">
			<stacksize value="149"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<dependency name="unpack"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to unpack
			</param>
			<library>y_utils - strings</library>    <returns>  unpacked string  </returns>  <remarks>  Mainly used for debugging.  </remarks> 
		</member>
		<member name="M:va_getstring" syntax="va_getstring(dest[], arg, len)">
			<stacksize value="1"/>
			<dependency name="__3_cells"/>
			<dependency name="__4_cells"/>
			<dependency name="__cell_shift"/>
			<dependency name="__frame_offset"/>
			<dependency name="strcat"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Where to write the string to.
			</param>
			<param name="arg">
				Index of the string in the parameters.
			</param>
			<param name="len">
				The length of the destination address.
			</param>
			<library>y_utils - varargs</library>        <remarks>  Like <c>getarg</c> but for strings.  Theoretically just a loop over  <c>getarg</c>, but we can do better with <c>strcat</c>.  </remarks> 
		</member>
		<member name="M:va_return" syntax="va_return(fmat[], ...)">
			<stacksize value="145"/>
			<dependency name="__2_cells"/>
			<dependency name="format"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Bit,Text,Group,File,Float,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_strlen" syntax="va_strlen(arg)">
			<stacksize value="1"/>
			<dependency name="__1_cell"/>
			<dependency name="__2_cells"/>
			<dependency name="__3_cells"/>
			<dependency name="__cell_shift"/>
			<dependency name="strlen"/>
			<param name="arg">
				Index of the string in the parameters.
			</param>
			<library>y_utils - varargs</library>    <returns>  String length.  </returns>  <remarks>  Gets the length of a string passed to variable arguments, using the  parameter index as in <c>getarg</c>.  </remarks> 
		</member>
		<member name="M:valstr" syntax="valstr(dest[], value, pack)">
			<attribute name="native"/>
			<referrer name="ValstrWithOrdinal"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:zcmd_OnGameModeInit" syntax="zcmd_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="38"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AC_ArmourAlerts"/>
			<dependency name="AC_HealthAlerts"/>
			<dependency name="AC_JackAlerts"/>
			<dependency name="AC_MoneyAlerts"/>
			<dependency name="AddPlayerClass"/>
			<dependency name="AdminLvl"/>
			<dependency name="AllowedVehicle"/>
			<dependency name="AutoNewsChange"/>
			<dependency name="Banned"/>
			<dependency name="BuildObjects"/>
			<dependency name="Color"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="CreateDynamicRectangle"/>
			<dependency name="CreatePlayerObject"/>
			<dependency name="DB_StreamObjects"/>
			<dependency name="DCAdmin"/>
			<dependency name="DCC_FindChannelById"/>
			<dependency name="DCGen"/>
			<dependency name="DCLookups"/>
			<dependency name="DCReports"/>
			<dependency name="Deaths"/>
			<dependency name="DynamicVehicle"/>
			<dependency name="Earnings"/>
			<dependency name="EasterEgg"/>
			<dependency name="EasterEgg"/>
			<dependency name="EasterPickup"/>
			<dependency name="EnableStuntBonusForAll"/>
			<dependency name="Epos"/>
			<dependency name="GameTimer"/>
			<dependency name="GameTimerEx"/>
			<dependency name="GangZoneCreate"/>
			<dependency name="GetPlayerName"/>
			<dependency name="God"/>
			<dependency name="HO2"/>
			<dependency name="HO2"/>
			<dependency name="ID"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_AddStaticVehicle"/>
			<dependency name="Iter_AddStaticVehicleEx"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KSpree"/>
			<dependency name="LastCar"/>
			<dependency name="LoadModelSelectionMenu"/>
			<dependency name="Logged"/>
			<dependency name="Minigame"/>
			<dependency name="Money"/>
			<dependency name="Muted"/>
			<dependency name="MyCar"/>
			<dependency name="PMs"/>
			<dependency name="PlayTime"/>
			<dependency name="PlayerProps"/>
			<dependency name="Players"/>
			<dependency name="Players"/>
			<dependency name="PropEarning"/>
			<dependency name="PropInfo"/>
			<dependency name="PropInfo"/>
			<dependency name="PropIsBought"/>
			<dependency name="PropOwner"/>
			<dependency name="PropertiesAmount"/>
			<dependency name="RXDM"/>
			<dependency name="RaceNOS"/>
			<dependency name="RaceRotation"/>
			<dependency name="RacesJoined"/>
			<dependency name="RacesWon"/>
			<dependency name="Registered"/>
			<dependency name="RemoveBuildingForPlayer"/>
			<dependency name="Reports"/>
			<dependency name="SQL"/>
			<dependency name="Server"/>
			<dependency name="SetGameModeText"/>
			<dependency name="SetPlayerObjectMaterial"/>
			<dependency name="SetTimer"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="Skin"/>
			<dependency name="Spam"/>
			<dependency name="Spawned"/>
			<dependency name="SpeedBoostDisabled"/>
			<dependency name="TDMJoined"/>
			<dependency name="TEXT_DRAW_ALIGN_CENTER"/>
			<dependency name="TEXT_DRAW_ALIGN_LEFT"/>
			<dependency name="TEXT_DRAW_FONT_0"/>
			<dependency name="TEXT_DRAW_FONT_1"/>
			<dependency name="TEXT_DRAW_FONT_3"/>
			<dependency name="TPsystem"/>
			<dependency name="TextDrawAlignment"/>
			<dependency name="TextDrawBackgroundColour"/>
			<dependency name="TextDrawBoxColour"/>
			<dependency name="TextDrawColour"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="TextDrawFont"/>
			<dependency name="TextDrawLetterSize"/>
			<dependency name="TextDrawSetOutline"/>
			<dependency name="TextDrawSetPreviewModel"/>
			<dependency name="TextDrawSetProportional"/>
			<dependency name="TextDrawSetSelectable"/>
			<dependency name="TextDrawSetShadow"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="TextDrawTextSize"/>
			<dependency name="TextDrawUseBox"/>
			<dependency name="TogglePlayerClock"/>
			<dependency name="Token"/>
			<dependency name="TokenUltimate"/>
			<dependency name="TokenUsing"/>
			<dependency name="TotalReports"/>
			<dependency name="UsePlayerPedAnims"/>
			<dependency name="VIP"/>
			<dependency name="WEAPON_AK47"/>
			<dependency name="WEAPON_CHAINSAW"/>
			<dependency name="WEAPON_COLT45"/>
			<dependency name="WEAPON_DEAGLE"/>
			<dependency name="WEAPON_MP5"/>
			<dependency name="WEAPON_NITESTICK"/>
			<dependency name="WEAPON_SHOTGUN"/>
			<dependency name="WEAPON_SILENCED"/>
			<dependency name="WEAPON_SNIPER"/>
			<dependency name="WEAPON_UZI"/>
			<dependency name="WeaponData"/>
			<dependency name="bikeGameCP"/>
			<dependency name="bikelist"/>
			<dependency name="box"/>
			<dependency name="boxtype"/>
			<dependency name="building"/>
			<dependency name="cNeon"/>
			<dependency name="cellmax"/>
			<dependency name="cpHelpMsg"/>
			<dependency name="cpHelpMsg"/>
			<dependency name="cpV"/>
			<dependency name="dVehicles"/>
			<dependency name="false"/>
			<dependency name="firststatic"/>
			<dependency name="helislist"/>
			<dependency name="isNeonON"/>
			<dependency name="laststatic"/>
			<dependency name="mysql_connect"/>
			<dependency name="mysql_errno"/>
			<dependency name="planelist"/>
			<dependency name="print"/>
			<dependency name="printfex"/>
			<dependency name="ptp_president"/>
			<dependency name="raceRotTimer"/>
			<dependency name="raceRotTimerEx"/>
			<dependency name="racenotify"/>
			<dependency name="random"/>
			<dependency name="skinlist"/>
			<dependency name="spawnZones"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<dependency name="typing"/>
		</member>
		<member name="M:zcmd_OnPlayerCommandText" syntax="zcmd_OnPlayerCommandText(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>

	</members>
</doc>
