/*
	==============================              ===============================
                           RevolutionX RE-MASTERED 2019
	                              Founded in 2008
                                  Owned by CJ101
							  (c) 2008 - 2024 (present)
	===========================================================f================




##########################################################################################

Evaders tools:

!evaders Similliar accounts based on password
!ak2 - Similliar accounts based on IP
!aka - Similliar accounts based on IP
!accountslike - Search based on accounts which are similliar by name

##########################################################################################
##########################################################################################


								### Change~Logs ##

CJ101 v5.0.5

- Added /addtoset command
- Added /ghost teleort Command
- Added /mc to teleport to mount Chiliad
- Added NRGs around mount Chiliad
- Fixed some crashes
- 
-----------------------------------------------------------------------------------------

*/

new MySQL:SQL;

#define GetDistanceBetweenCoords(%1,%2,%3,%4,%5,%6) floatsqroot((%4 - %1)*(%4 - %1) + (%5 - %2)*(%5 - %2) + (%6 - %3)*(%6 - %3))
#define SERVERVERSION "5.1.0"

new Text:Reports[2];
new ReportsString[1800];

#define SEARCH_MENU 1
#define SSCANF_NO_NICE_FEATURES 1

#include <open.mp>
#include <YSI_Data\y_iterate>
#include <sscanf2>
#include <a_mysql>
#include <discord-connector>
#include <mselection>
#include <dcmd>
#include <rx_defines>
#include <zcmd>
#include <format>
#include <streamer>

new planelist = mS_INVALID_LISTID;
new skinlist = mS_INVALID_LISTID;
new bikelist = mS_INVALID_LISTID;
new helislist = mS_INVALID_LISTID;


#define DCMD_PREFIX '!' //If you don't define, by default it is '!'
#undef MAX_VEHICLES
#define MAX_VEHICLES 400
#define SSCANF_NO_NICE_FEATURES 1
#define STRONG_ORANGE 0xFEA043FF
#define GetDynamicObjectModel(%0) Streamer_GetIntData(STREAMER_TYPE_OBJECT, %0, E_STREAMER_MODEL_ID)

new Text:RXDM[7];
new ObjDialogIDs[25];
new Security[24];

forward IsNotAdmin(playerid);
new dVehicles[20];

new Float:CuntDeliveries[][3]=
{
	{-576.8745,-1055.2952,23.6464},
	{-388.3322,-1405.7462,24.9163},
	{-63.8910,-1591.1638,2.6039},
	{-275.7177,-2210.5488,28.3874},
	{-19.9963,-2503.3381,36.6425},
	{14.4181,-2646.2991,40.2734},
	{-1571.2170,-2734.1426,48.5274},
	{-2104.4685,-2439.3838,30.4612},
	{-2161.3679,-2422.6855,30.5386}
};

new Float:LVDeliveries[][3]=
{
	{1901.5458,963.1880,10.5276},
	{2089.8027,2073.8364,10.5274},
	{2501.2307,2133.0681,10.3797},
	{2600.6194,2093.2117,10.5279},
	{2290.0710,2422.3589,10.5260},
	{2523.2412,2336.0325,10.4561},
	{2517.5430,2321.2178,10.5254},
	{1875.7339,2242.1086,11.2557},
	{1006.9414,1086.9877,10.5271},
	{1131.9324,2090.4509,10.5279},
	{1609.0983,2229.1855,10.5278},
	{1965.1979,2161.5779,10.5278},
	{1963.0759,2286.9058,10.3773},
	{2187.0229,1992.6113,10.5266}
};

new gamePickups[15];
new bool:SVLoaded, bool:SVStarted, SVPlayers = 0;

// weapon drops
#define MAX_WEAPONS_DROPPED 5 //max numbers of weapons who can be dropped
#define REMOVE_WEAPONS_DROPPED_TIMER 20000 //miliseconds

enum wInfo
{
	Model,
	Ammo,
	Pickupid,
	bool:Ocuppied
};
new WeaponsDropped[MAX_WEAPONS_DROPPED][wInfo];

enum propinfo
{
	Text3D:propText,
	PropName[64],
	Float:PropX,
	Float:PropY,
	Float:PropZ,
	PropIsBought,
	PropUnbuyableTime,
	PropOwner[MAX_PLAYER_NAME],
	PropValue,
	PropEarning,
	PickupNr,
	bool:Buyable,
}

new PropertiesAmount;
new PropInfo[MAX_PROPERTIES][propinfo]; //CarInfo
new PlayerProps[MAX_PLAYERS];

#define DIALOG_BIKEGAME 2200

enum ATeles
{
	tName[20],
	Float:teleX,
	Float:teleY,
	Float:teleZ,
	Float:teleAng,
}
new TeleportSystem[20][ATeles];

new Float:BikeStuntCPS[][3]=
{
	{-1661.8834,52.1341,5.4323},
	{-1638.6213,75.8782,6.3450},
	{-1616.5964,98.1199,7.9524},
	{-1596.1619,118.6842,6.8546},
	{-1595.5986,122.0097,-1.6318},
	{-1616.9668,122.0257,-11.1741},
	{-1644.2063,124.6700,-5.0247},
	{-1662.1637,106.7057,-2.1824},
	{-1691.9010,70.7859,9.1551},
	{-1686.4688,48.8691,7.5782}
};

enum MovingObjectData
{
	bool:idUsed,
	Float:MovingToX,
	Float:MovingToY,
	Float:MovingToZ,
	Float:ReturnPosX,
	Float:ReturnPosY,
	Float:ReturnPosZ,
	e_MovingObject_Actual,
	e_MovingObject_Speed,
}
new Moving[50][MovingObjectData];
new PMG_Pickups[24][MAX_PLAYERS];



new bool:ForbiddenWeaponsDrop[47];
new TimerIDs[MAX_WEAPONS_DROPPED];
new Float: EachPos[11] ={ 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5 };

forward LooseWeapons(playerid);
forward RemoveWeaponDropped(pickupid, wid);
forward ForbidWeaponDrop(weaponid);
forward FreeWeaponDrop(weaponid);

enum
{
    DIALOG_IPINDEX = 369,
    DIALOG_IPLOGS,
    DIALOG_IPACTION,
    DIALOG_IPDELETION
}

new
    g_ConnectionDate[MAX_PLAYERS],
    g_pIP[MAX_PLAYERS][16],
    g_DialogPage[MAX_PLAYERS],
    g_Target[MAX_PLAYERS][MAX_PLAYER_NAME];
    
stock ReturnName(playerid)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    return name;
}
    
#define KillToken 10
#define RaceWinToken 10
#undef MAX_PLAYERS
#define MAX_PLAYERS 205

new NickName[MAX_PLAYERS][24];

enum e_JoinLog {
	e_iIP,
	e_iTimeStamp
};

static stock
	g_eaJoinLog[MAX_JOIN_LOGS][e_JoinLog]
;


new bool:megajump[MAX_PLAYERS];
enum players_data
{
	Rank,
	Expierience,
	bool:ReportsTD,
	DeliveryTotal,
	DeliveryID,
	bool:Delivery,
	DeliveryCP,
	// Race
	mgVariable,
	MyRank,
	bool:AmBuilding,
	bool:AmRacing,
	// endrace
	SPoints,
	Earnings,
	explosionsr,
	bool:canrocket,
	bool:canhealme,
	inhouse,
	lvl,
	fs,
	bool:acceptpms,
	bool:SpawnProtect,
	bool:xmas,
	sessiontime,
	mytime,
	myramp,
	gInvited,
	reporteda,
	ctfflags,
	MutedBy,
	Wash,
	bool:Collisions,
	userID,
	Class,
	AdminLvl,
	LevelBy,
	Minigame,
	LastCar,
	Money,
	PlayTime,
	Deaths,
	bool:Logged,
	bool:Registered,
	bool:Banned,
 	IP[16],
 	Skin,
 	Color,
 	bool:God,
	bool:Muted,
	bool:Spawned,
	VIP,
	RacesWon,
	RacesJoined,
	Text3D:MyLabel,
	bool:TDMJoined,
	KSpree,
	AC_MoneyAlerts,
	AC_ArmourAlerts,
	AC_HealthAlerts,
	AC_JackAlerts,
	crashwarns,
	bool:PMs,
	bool:autofix,
	Spam,
	Token,
	bool:AdminMsgs,
	MyCar,
	Editing,
	bool:IPLookups,
	bool:AutoGM,
	MuteTimer,
	JailTimer,
	banked,
	lastpm,
	score,
	bool:hydra,
	bool:rhino,
	bounty,
	bool:hidden,
	favwpn,
	bool:allowmg,
	bool:afob,
	AdminChat,
	dueling,
	duelloc,
	bool:invited,
	explosions,
	bool:readpms,
	bool:readteles,
	bool:rockets,
	oranges,
	apples,
	groupName[21],
	Kills,
	Lotto,
 	DeathCount,
    LastDeathTime,
   	bool:vehDuel,
	VehDueler,
	VehRequest,
	fake_kill_warns,
	ctf_wins

}
new Players[MAX_PLAYERS][players_data];

enum server_data
{
	TotalReports,
	Uptime,
	Team1Kills,
	Team2Kills,
	box,
	boxtype,
	ptp_president,
	bool:firstl,
	bool:fakekillsac,
	bool:banonevade,
	bool:realtimedmg,
	precord,
	bikeGameCP

}
new Server[server_data];

new ReconnectIP[MAX_PLAYERS][32];
new bool: Reconnecting[MAX_PLAYERS];
#define MAX_IP_SIZE 32

new neons[MAX_PLAYERS][4];
new	bool:isNeonON[MAX_PLAYERS];
new	cNeon[MAX_PLAYERS];
new	weapons[MAX_PLAYERS][3];
new	ammo[MAX_PLAYERS][3];
new	xstring[1200];
new	bool:typing;
new	tword[60];
new	ttoken;
new	tScore;
new	tCash;

new Float:MJ_Value[MAX_PLAYERS][2]; // 0 - infront , 1 - height
new GameTimer = 15;
new GameTimerEx;
new raceRotTimer = 10;
new raceRotTimerEx;
new gSpectateID[MAX_PLAYERS];
new gSpectateType[MAX_PLAYERS];
new CountDown = -1;
new vFPS[MAX_PLAYERS];
new bool:FPS_bool[MAX_PLAYERS]=false;
new fFPS[MAX_PLAYERS];



#define GetMinigame(%0) GetPlayerMinigame(%0)
#define userID(%0) GetUserID(%0)
#define SetMinigame(%0,%1) SetPlayerMinigame(%0,%1)

new RandomMSG[][] =
{
    "Welcome To RevolutionX DM/Stunt/Race/Fun SA-MP Server.",
    "Info:{FFFFFF} Are you a new player? Type /help for help, and type /cmds for a commands list.",
    "Info:{FFFFFF} You can buy some properties around the map. Type /buy to buy them.",
    "Info:{FFFFFF} Type /stats to see your deaths, kills, races won, and more.",
    "Info:{FFFFFF} Visit and register on the forums: http://revolutionxsamp.com/forum",
    "Info:{FFFFFF} You can color your car with the /cc command.",
    "Info:{FFFFFF} Type /cars to spawn cars, type /planes to spawn planes, etc.",
    "Warning:{FFFFFF} Read the /rules - anyone who breaks the rules will be kicked/banned.",
    "Info:{FFFFFF} Type /admins to see the current list of admins.",
    "Help:{FFFFFF} If you see a cheater, use /report <id> <reason>",
    "Help:{FFFFFF} You can choose your own custom color with /colors and /colors2",
    "Info:{FFFFFF} We dont allow cheating here. Cheat and you will be banned.",
    "Info:{FFFFFF} Want to be a VIP Player? Play regularly and make sure you are registered on the forum.",
    "Info:{FFFFFF} Want to Donate? Visit the website for more info.",
    "Info:{FFFFFF} You can set your own spawn /car with /setmycar!",
    "Info:{FFFFFF} You can buy tokens with /buytokens <amount>",
    "Info:{FFFFFF} Looking for some fun? Try out one of our /minigames",
    "Info:{FFFFFF} Have you tried our teleports? Try out /sfa .",
    "Info:{FFFFFF} Our most popular stunt set is /twister !",
	"Info:{FFFFFF} You can check your rank with /myrank! Get Expierience by racing, killing players, and more!",
	"Info:{FFFFFF} Join our /discord and chat with other players.",
	"Info:{FFFFFF} Want to start a duel with a friend? Type /duel",
	"Info:{FFFFFF} You can start a drift game with /drift."
};

new Float:cpHelpMsg[][]=
{
	{ -1325.0984,480.1006,7.1809 },
	{ -2619.4238,1387.9437,7.1332 },
	{ -1719.7006,1198.3561,25.1272 },
	{ -2019.1500,166.2704,28.2323 },
	{ -2592.6851,321.6908,4.5955 },
	{ -2711.7170,137.2399,4.3359 },
	{ -2712.3567,119.3569,4.3359 },
	{ -2042.8864,1188.1721,45.4453 },
	{ -2674.7380,274.8128,4.3359 },
	{ -1579.2490,658.4891,7.1875 },
	{ -2699.5901,584.6324,15.8154 }
};

new cpV[sizeof cpHelpMsg];

#define MAX_CTF_FLAGS 30

new CTFToken,CTFInterior,bool:CTFI,CTFIcons[50];
new CTF_Flags[MAX_CTF_FLAGS];
new CTFFlags;
new bool: ActiveCTF = false,CTFTimer = -1;
new bool:CTFLoaded = false;
new CTFMembers;
new Float:CTFSpawn[3];
new bool:ActiveDerby;
new bool:DerbyLoaded;
new DerbyVehicle;
new DerbyInterior;
new Float:DerbySpawns[4][4];
new DerbyPickups[5];
new DerbyPlayers;
new Float:DerbyZ;
new DerbyTime;
new bool:TokenUsing[MAX_PLAYERS];
new bool:TokenUltimate[MAX_PLAYERS];
new UltimateTimer[MAX_PLAYERS];
new bool:AllowedVehicle[MAX_PLAYERS];
new wps[MAX_PLAYERS][13];
new wpa[MAX_PLAYERS][13];
new tmpc[20];
new Float:SpeedBoostMultiplier[MAX_PLAYERS];
new bool:SpeedBoostDisabled[MAX_PLAYERS];
new Text:WeaponData[MAX_PLAYERS];
// ========== RACE VARIABLES
new laststatic;
new firststatic;
#define MAX_CHECKPOINT 50 // Permitted Total CP
#define DELAY_TIME 30 // race delay time
#define RACE_ROTAION 60 // race rotation

new rID,bombrace; // raceID
new R_Name[25]; // racename
new R_Interior; // Race R_Interior
new R_Weather, tmpw;
new RecordName[5][24]; // TOP 5 players <=> Race Records
new Float:RecordTime[5]; // TOP 5 players <=> Race Records
new RecordVehicle[5][24]; // top 5 player's record used vehicle
new VehicleID=-1; // permitted vehicle for the race
//new WeatherID=-1; // permitted vehicle for the race
new RaceTick; // Race Time ticks
new TotalCP; // TotalCP
new Float:CPs[MAX_CHECKPOINT][4], // Total race cps : float
	Float:CPsize[MAX_CHECKPOINT]; // every cp size for each CP
new RCreator[24]; // Race Creator..

new RaceTime; // Race Time
new rTimer; // TIMER!! KABOOOOM! XD
new eTimer; // TIMER!! KABOOOOM! XD.

new bool:RaceActive; // is Race Active? && race running
new bool:RaceStart; // is race started? && after Race Countdown
new bool:OnRaceCD; // is race countdown`ing ?
new bool:RaceRotation; // is it enabled or disabled?
new bool:RaceNOS; // is it enabled or disabled?
new TotalRacers; // total no. of racers
new TotalRacersCur; // total no. of current racers
new MyCurrentCP[MAX_PLAYERS]; // single racer current cp
//new LastRaceRank[128]; // Last Race Stats
new position; // Current race position incrementor
new lastwin[24]; // last race winner
new Text3D:pRaceLabel[MAX_PLAYERS]; // 3d label for cp
new Text3D:racelabel[MAX_PLAYERS];
new Text:racenotify; // textdraw for counting down for race
//new Text:Top5Hud; // displays last race's top 5 rider name after the race ends
//new Text:RaceFinal[5]; // Newer Version from ^^ Top5Hud
new bool:isRecordEmpty; // if true then "NONE" for record list else it will show em  on RaceDetails();
new xx_cd = DELAY_TIME; // Race Count Down

//============= RACE BUILD VARIABLES ====================
new BName[MAX_PLAYERS][24];
new BInterior[MAX_PLAYERS];
new BVehicleID[MAX_PLAYERS];
new BTotalCPs[MAX_PLAYERS];
new Float:BCPs[MAX_PLAYERS][MAX_CHECKPOINT][4];
new Float:BCPsize[MAX_PLAYERS][MAX_CHECKPOINT];
new BCurrentCP[MAX_PLAYERS];


forward RaceCountDown();
forward Race_Timing();
forward RaceMustEnd();
forward Check_IfMadeRecord(playerid,RaceID,Float:racetime);
forward Race_Rotation();



#define MAX_RACECHECKPOINTS 200 // Change if you want more room for checkpoints than this
#define MAX_CHECKPOINTS MAX_RACECHECKPOINTS
#define WAIT_RACE 5
new MyLastTT[MAX_PLAYERS];
new __RaceTick[MAX_PLAYERS];
new Float:TT_Checkpoints[MAX_PLAYERS][MAX_CHECKPOINTS][3];
new Float:TT_CPSize[MAX_PLAYERS];
//new RaceTimeout[MAX_PLAYERS];

new Text:Positiont[MAX_PLAYERS];
new Text:Difft[MAX_PLAYERS];
new Text:Time18t[MAX_PLAYERS];

//new bool:DisableRecord[MAX_PLAYERS];
new __VehicleID[MAX_PLAYERS];
new __R_Name[MAX_PLAYERS][32];
new __TotalCP[MAX_PLAYERS];
new __Timer[MAX_PLAYERS];
new tttimer[MAX_PLAYERS];
new ttCD[MAX_PLAYERS];
new RaceCheckpoint[MAX_PLAYERS];
new TT_ID[MAX_PLAYERS];
//new __loading[MAX_PLAYERS][75];
new TTcar[MAX_PLAYERS];
new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring Racer A","Hotring Racer B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car (LSPD)","Police Car (SFPD)",
	"Police Car (LVPD)","Police Ranger","Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer A","Luggage Trailer B",
	"Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};


#define COLOR_lms 0xBA5A5AFF
#define COLOR_ADMIN 0xFF24FFFF
#define PRO_MEMBER 0x33FF66

#define _WHITE 0xD0AA14FF
#define CameraAngles // Comment this if you would like to disable the camera when you've finished a note.

#if !defined PRESSED
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#endif


new bool:CanTP[MAX_PLAYERS][MAX_PLAYERS];
new bool:TPsystem;


// Holding Objects Script Imported
#define HelmetDIAG 2813
new building[3] ;


enum
    HOenum
{
	modelID,
	slots, // doesnt used this.. might be usefull in future.
	bone,
	Float:oX,
	Float:oY,
	Float:oZ,
	Float:rX,
	Float:rY,
	Float:rZ,
	Float:sX,
	Float:sY,
	Float:sZ
};

enum
	HOenum2
{
    ID, // used to get Total ID , it acts like slot with eXist variable on check at /cho.
	hName[22], // Object Name.. mainly used when user loads it
	SavedBy[22], // user who saved da ho.. used on loading ho
	bool:Allowed, // under construction. like toggling if he can load this ho or not.
	bool:eXist[10] // checking if this ID is aviable or taken
};
#define MAX_HO_SLOTS 10 // 0 - 9
new HO[MAX_PLAYERS][MAX_HO_SLOTS][HOenum]; // HO main data
new HO2[MAX_PLAYERS][HOenum2]; // HO side data
new Epx[MAX_PLAYERS];

main()
{
    print("[!] Revolutionx V4 Loaded.");
    print("[!] Revolutionx Anti-deAMX Initialized.");
}

// Easter Egg Code

#define EASTEREGG 0

#define C_PICKUP 0
#define C_COMPLETED 1

new PlayerText:AnnText[MAX_PLAYERS];
new AnnTextShown[MAX_PLAYERS];
new HideAnnTextTimer[MAX_PLAYERS];

enum eInfo
{
	  tip[80],
      Float:Epos[3]
};

new EasterEgg[][eInfo]=
{
	{"A new casino is under construction!",{2690.4526, 867.1161, 9.8000}},
	{"Have you ever seen a pyramid in Las Venturas?",{2323.7305, 1283.2560, 95.9000}},
	{"The pirates ship will never set sail again...",{2000.3872, 1526.9734, 14.1000}},
	{"A casino with a clown on it!",{2138.1614, 1785.8660, 10.4000}},
	{"The Visage motel is very famous in San Andreas!",{2075.9736, 1922.1576, 13.9000}},
	{"Home of the Bandits!",{1483.6501, 2229.8201, 11.4000}},
	{"Girls XXX , Live nude girls!",{2488.6299, 2126.7817, 25.3000}},
	{"Do you want to ROCK&ROLL?",{2640.4092, 2327.5684, 17.3000}},
	{"Xoomer in the desert...",{621.6111, 1681.6711, 6.5000}},
	{"Fort C... Wait what?",{170.9185, 1220.1047, 22.8000}},
	{"Red bridge connects between two countries!",{-1497.7028, 589.4399, 41.8000}},
	{"Have you ever seen the top of the world?",{-2877.1907, 2554.5935, 259.7000}},
	{"What are these Indian tents for?",{-859.7420, 2753.9412, 45.3000}},
	{"The dam is a great way to impound water!",{-892.6245, 1972.0618, 60.3000}},
	{"The smoking beef grill has a cow!",{-859.6649, 1525.7800, 27.7000}},
	{"A chicken has laid an easter egg!",{-237.0469, 2663.3486, 63.3000}},
	{"A neglected airport!",{414.8091, 2533.1072, 18.6000}},
	{"Welcome to Las venturas!",{984.5703, 2562.8738, 10.3000}},
	{"Do you like golfing?",{1493.4673, 2773.5403, 10.3000}},
	{"K.A.C.C - Restricted Area! Stay away!",{2543.7009, 2797.0344, 10.5000}},
	{"Emerald I. in Las Venturas has a huge parking lot!",{2072.4712, 2439.7766, 50.0000}},
	{"Do you like trains?",{2858.7356, 1267.4175, 11.3000}},
	{"Someone call the cops! Ryder plants weed in groove street!",{2464.9551, -1714.5767, 13.000}},
	{"The BIGGEST round thing on the map in Los Santos!",{2737.5132, -1760.3297, 43.7000}},
	{"Do you remember singleplayer version where u needed a forklift to steal crates?",{2744.3438, -2453.3770, 13.3000}},
	{"Los Santos Airport is so huge!",{1716.9100, -2678.6357, 13.3000}},
	{"Where is the lowrider meet?",{1763.8136, -1913.6129, 13.1000}},
	{"Everyone likes skating right? But where to skate...",{1953.8499, -1372.6798, 19.3000}},
	{"Which one is the first turf you attack in Singleplayer? G PARK!",{1966.1033, -1157.2660, 20.4000}},
	{"Coutt and Schutz!",{2115.9985, -1158.1235, 23.9000}},
	{"Inside the drain tunnel!",{2649.0359, -1453.7507, 15.7000}},
	{"Wheels scrap!",{2181.4875, -1996.4261, 13.3000}},
	{"The beach is a great way to train you muscles & show off!",{660.2039, -1869.7808, 5.1000}},
	{"Watchtower is a good way to protect a beach!",{154.0728, -1943.1287, 3.29900}},
	{"Market station!",{824.9611, -1353.6527, 13.3000}},
	{"Only rich people live in Vinewood!",{1378.1924, -806.4984, 84.4000}},
	{"Under the rail ways of Los Santos!",{1728.3096, -1031.0570, 23.4400}},
	{"CJ, Get on the BMX NOW!",{2245.0894, -1260.7599, 23.4000}},
	{"Bow Wow - Basketball - Who want to play?",{2290.7908, -1528.4020, 26.4000}},
	{"Pipe , beach , and two scrap cars?",{2871.0518, -2124.8667, 4.4000}},
	{"Saints boulevard, East beach Los Santos!",{2730.2461, -1642.2843, 12.7000}},
	{"Burning Desire!",{2357.2195, -1169.9604, 27.5000}},
	{"Does Mount Everest exist in San Andreas?",{-2432.4751,-1619.7983,527.0152}},
	{"Get the hell out of here burgler! ... CJ?!",{2494.6929,-1704.4829,1018.6438}},
	{"There are no Easter Eggs up here! Go away!",{-2666.8276,1594.9418,217.5739}},
	{"Are there any Cargo Ship in San Fierro?",{-2432.9309,1536.2261,34.7020}},
	{"The 4 Dragons casino is huge!",{1943.0436,1018.0239,992.7688}},
	{"NO SMOKING in Caligula's Casino!",{2161.6970,1599.9595,1000.2736}},
	{"Steak House!",{1693.9080,2208.5542,15.8412}},
	{"Feel like suiciding or killing someone? Plant a bomb in the car!",{1846.7745,-1855.5188,18.2780}},
	{"Excuse me!? where is the Unity Station?",{1726.0673,-1838.0248,13.8576}},
	{"Have you ever seen a broken statue anywhere?",{1721.9282, -1654.4810, 20.2688}},
	{"Try betting on horses, maybe you'll win something!",{820.5815,9.0130,1004.4963}},
	{"Exporting cars is a well paid job!",{-1536.9352,125.9484,3.8547}},
	{"It's time for a party!",{487.7654,-4.5528,1002.3781}},
	{"DRUGS!",{-2188.7451,-247.9088,41.0195}},
	{"Well Stacked Pizza's make the best pizzas!",{379.0127,-116.2872,1001.7922}},
	{"Shall we get a Tattoo?",{-201.7688,-23.0449,1002.5734}},
	{"CALL NOW 555-3478!",{1970.7280,-1793.0056,18.1350}},
	{"I need a piece man, where can i buy a gun?",{298.8676,-40.6517,1001.8156}},
	{"A ghost has been seen in the Graveyard!",{811.2281,-1098.3167,26.2063}},
	{"A little spinning UFO!",{-218.4164,1405.5988,28.0734}},
	{"Some rumors say that Big Foot is living somewhere in a secret cave!",{-410.7504,1334.7590,13.3469}},
	{"New ZIP store opens soon!",{-2035.7490,336.8936,35.4719}},
	{"Woozie lived in Chinatown!",{-2181.8074,713.7638,54.1912}},
	{"You should cut your hair!",{414.1041,-49.3694,1002.1984}},
	{"Taste The Cock!",{380.2898,-9.8332,1002.9757}},
	{"What does LC stands for?",{-827.9551,521.7527,1357.4016}},
	{"An Army Ship with 2 numbers!",{-1290.3600,491.0156,11.4953}},
	{"The cells in SFPD are small! Really small...",{226.0592,121.4767,999.3571}},
	{"Self-Defence is good, what about learning Kung Foo?",{774.1239,-60.2343,1001.0184}},
	{"Welding & Weddings!",{2005.9048,2315.1206,11.1203}},
	{"PIER 69!",{-1679.3331,1378.6428,13.1284}},
	{"Bait-Shop!",{-1353.1823,2057.6831,53.4172}},
	{"I wish they had McDonald's here, do they have burgers anywhere?",{-2350.3508,1008.9117,56.2219}},
	{"Have you ever competed in Retards Party race?",{-2707.6765,378.0910,12.2795}},
	{"A lake in a garden near a bridge!@#!%%^",{-2819.4734,1081.5220,28.0422}},
	{"The Pleasure Domes!",{-2670.3018,1410.4170,913.0240}},
	{"Sinister Zombie ,Virus Research ,Corporation!",{-1943.7085,702.1638,46.8625}},
	{"Where can you find blood? I mean clothes...",{205.9059,-8.2650,1005.5109}},
	{"Help EMERGENCY needed!",{2030.0952,-1410.2573,17.2989}},
	{"FIRE! FIRE! FIRE!",{-2049.7595,75.1570,28.6906}},
	{"Learn to drive!",{-2034.6075,-115.4128,1035.4719}},
	{"Area 69 is a very secured place!",{299.4015, 1818.5774, 1.7000}},
	{"Have you ever seen the big ear?",{-347.9887, 1580.4646, 75.8000}},
	{"Your one stop shop!",{2013.7985, 2478.5601, 11.3000}},
	{"Rockstar North is a huge rock!",{2565.3042, -643.1229, 136.3000}},
	{"What are adult toys?",{1942.3889, -2132.8684, 13.3000}},
	{"A pretty small island!",{-1509.0162, 1370.6704, 2.6000}},
	{"The highest tower of San Fierro!",{-1753.5201, 885.7187, 295.29000}},
	{"We'll dump your load!",{-2198.9526, -415.5975, 50.2900}},
	{"Where does mountain deathmactch take place?",{-2490.1785, -715.6370, 138.790}},
	{"Parking lot near 5 big towers? Where is that?",{-2147.1392, -863.5040, 31.8000}},
	{"There are many tunnels on the way to Chilliad!",{-2052.6250, 150.4688, 30.2375}},
	{"Star Fish!?",{2629.9167,1824.4089,11.0234}},
	{"Motel 26 32?",{-23.9273, -2528.9783, 36.3000}},
	{"A yard that is full of junk!",{-1913.8904, -1672.7314, 22.5000}},
    {"A bridge conntects between the two parts of San Fierro Airport!",{-1613.5491, -497.9952, 22.2000}},
	{"Tune your lowrider!",{2645.8977,-2051.7266,13.6334}},
	{"Wang dealer sells some fast cars!",{-1952.6089,305.8391,41.0471}}
};

new EasterPickup[sizeof(EasterEgg)];
new MyEggs[MAX_PLAYERS][sizeof(EasterEgg)];

// Drift Code

#define DRIFT_MINKAT 10.0
#define DRIFT_MAXKAT 90.0
#define DRIFT_SPEED 25.0

/////////////////
#define COLOR_Label 0xFFFFFFFF
#define COLOR_LabelOut 0x00000040
#define COLOR_ValueOut 0xFFFFFF40
#define COLOR_Value 0x000000FF

#define Label_X 19
#define Value_X 20
#define TD_Y 150
/////////////////////////////////////
//new CheckStatusTimer;
new DriftTimer[MAX_PLAYERS];
new TimerA[MAX_PLAYERS],TimerC[MAX_PLAYERS];
new __loading[MAX_PLAYERS][200];
//TimerB,;

new DriftPointsNow[MAX_PLAYERS];
new TDriftPointsNow[MAX_PLAYERS];
new PlayerDriftCancellation[MAX_PLAYERS];
new Float:ppos[MAX_PLAYERS][3];
enum Float:Posss { Float:sXX,Float:sYY,Float:sZZ };
new Float:SavedPos[MAX_PLAYERS][Posss];

new bool:DriftMode[MAX_PLAYERS]=false;
new DriftBonus[MAX_PLAYERS]=1;
new Float:HealthInit[MAX_PLAYERS]=1000.0;
//new bool:AutoFixBool[MAX_PLAYERS]=true;

new Text:TDDrift[MAX_PLAYERS];
new TimeLeft[MAX_PLAYERS];
new eDriftTimer[MAX_PLAYERS];
//new Text:TDValueCash[MAX_PLAYERS];


//forward AngleUpdate(g);


//forward AutoFix();
new bool:TDrif[MAX_PLAYERS] = false;

new DriftRecord[MAX_PLAYERS];
new DriftName[MAX_PLAYERS][34];
new DriftRecordName[MAX_PLAYERS][24];
new DriftVehicle[MAX_PLAYERS];
new DriftID[MAX_PLAYERS];
new Float:DriftPos[MAX_PLAYERS][4];
new dveh[] = {
411,
562,
560,
506,
536,
567,
405,
439,
475,
602
};

#define _@NADA 0 // Nothing
#define _@NOS 1 // NOS
#define _@SSB 2 // Normal Speed Booster
#define _@DSSBF 3 // Directional Speed Booster Forward
#define _@DSSBB 4 // Directional Speed Booster Behind
#define _@DSSBL 5 // Directional Speed Booster Left
#define _@DSSBR 6 // Directional Speed Booster Right
#define _@CColor 7 // Car Colour Change
#define _@VJump 8 // Vehicle Jump
#define _@SpinX 9 // vehicle Spin X
#define _@SpinY 10 // Vehicle Spin Y
#define _@SpinZ 11 // Vehicle Spin Z
#define _@VFlip 12 // Vehicle Flip
#define _@V90 13 // Vehicle 90 degree turn
#define _@V180 14 // Vehicle 180 degree turn
#define _@InstantStop 15 // Vehicle 180 degree turn

#define _@Ctrl 16 // _@velocity Controls ^ +1

#define _@FIREKEY 0
#define _@SFIREKEY 1
#define _@SUBKEY 2
#define _@HORNKEY 3
#define _@YESKEY 4
#define _@NOKEY 5
#define _@LOOKRIGHTKEY 6
#define _@LOOKLEFTKEY 7

#define _@State 8 // _@velocity Control State

#define _@CKBMsgBox 1443
#define _@Dialog 1444
#define _@ControlSelectDialog 1445

new B@Status[MAX_PLAYERS][_@State]; // PlayerID -> Which control for blinded key
new Float:B@Value[MAX_PLAYERS][_@Ctrl]; // PlayerID -> Value for each controls
new _@tmp[MAX_PLAYERS]; // tmp variable

// House System
new spawnZones[12];


#define DUEL 144

//------------------------------------------------------------------------------
//DM
new dm[MAX_PLAYERS];
new DMw[MAX_PLAYERS][2];
new bool:dmlock;
//Duel
new DuelInvitation[MAX_PLAYERS] = -1;
new DuelWeapon[MAX_PLAYERS][2];
new DuelSpectating[MAX_PLAYERS] = -1;
new DuelWorld[MAX_PLAYERS];
new DuelTimer[MAX_PLAYERS];
new DuelTicks[MAX_PLAYERS];
new DuelPlayerSign[MAX_PLAYERS][97];
new bool:IsDueling[MAX_PLAYERS];
new bool:DuelDisable[MAX_PLAYERS];
new bool:DuelIgnored[MAX_PLAYERS][MAX_PLAYERS];
new bool:DuelWaiting[MAX_PLAYERS];
new bool:DuelStarting[MAX_PLAYERS];
new bool:DuelArenaCreated[MAX_PLAYERS];
new bool:gPlayerSpawned[MAX_PLAYERS];

new const WeaponNames[][20] = {
{"Unarmed"},
{"Brass Knuckles"},
{"Golf Club"},
{"Night Stick"},
{"Knife"},
{"Bat"},
{"Shovel"},
{"Pool Cue"},
{"Katana"},
{"Chainsaw"},
{"Dildo"},
{"Vibrator1"},
{"Vibrator2"},
{"Vibrator3"},
{"Flowers"},
{"Cane"},
{"Grenade"},
{"Tear Gas"},
{"Molotov"},
{"N/A"},//19
{"N/A"},//20
{"N/A"},//21
{"Pistol"},
{"Silencer"},
{"Deagle"},
{"Shotgun"},
{"Sawnoff"},
{"Spas12"},
{"Mac-10"},
{"Mp5"},
{"AK-47"},
{"M4"},
{"Tec-9"},
{"Rifle"},
{"Sniper"},
{"RPG"},
{"HeatSeeker"},
{"Flamethrower"},
{"Minigun"},
{"Satchel"},
{"Detonator"},
{"Spraycan"},
{"Extinguisher"},
{"Camera"},
{"Nightvision"},
{"Infrared"},
{"Parachute"},
{"N/A"},//47
{"N/A"},//48
{"Vehicle Collision"},//49
{"HeliKill"},//50
{"Explosion"},//51
{"N/A"},//52
{"N/A"},//53
{"Long Fall"}//54
};


#define DEATH_WORD_SIZE 130
new const DeathWords[130][16] = {
{"Killed"},
{"Murked"},
{"Whacked"},
{"Raped"},
{"Molested"},
{"Terminated"},
{"Bopped"},
{"Machined"},
{"Armied"},
{"Sprayed"},
{"Cooked"},
{"Baked"},
{"Riddled"},
{"Fucked Up"},
{"Totaled"},
{"Ended"},
{"2nd Amendmented"},
{"Punctuated"},
{"Murdered"},
{"Smoked"},
{"Eliminated"},
{"Deaded"},
{"Decommissioned"},
{"Decapitated"},
{"Ventilated"},
{"Annihilated"},
{"Plugged"},
{"Clipped"},
{"Cut Down"},
{"Capped"},
{"3rd Worlded"},
{"Clocked"},
{"Blasted"},
{"K.O.'d"},
{"Drilled"},
{"Destroyed"},
{"Buried"},
{"Sunk"},
{"Struck Down"},
{"Juiced"},
{"Nailed"},
{"Hammered"},
{"Mopped"},
{"Popped"},
{"Clapped"},
{"Dropped"},
{"Spanked"},
{"Smashed"},
{"Exterminated"},
{"Layed Out"},
{"Banged"},
{"Mashed"},
{"Mangled"},
{"Obliteratd"},
{"Sluaghtered"},
{"Wrecked"},
{"Devastated"},
{"Demolished"},
{"Ravaged"},
{"Overwhelmed"},
{"Blighted"},
{"Eradicated"},
{"Devoured"},
{"Gutted"},
{"Guillotined"},
{"Crucified"},
{"Wasted"},
{"Plastered"},
{"Shattered"},
{"Stupefied"},
{"Disposed Of"},
{"Finished"},
{"Consumed"},
{"Assassinated"},
{"Extirpated"},
{"Expunged"},
{"Neutralized"},
{"Nullified"},
{"Squashed"},
{"Trashed"},
{"Overcame"},
{"Subdued"},
{"Conquered"},
{"Dominated"},
{"Put Down"},
{"Trampled"},
{"Vanquished"},
{"Bested"},
{"Bewildered"},
{"Dumbfounded"},
{"Embarrassed"},
{"Grinded"},
{"Violated"},
{"Pounded"},
{"Stepped On"},
{"Stomped"},
{"Hitler'd"},
{"Flattened"},
{"Blotted Out"},
{"Smothered"},
{"Doused"},
{"Quenched"},
{"Scrubbed"},
{"Deleted"},
{"Stifled"},
{"Corked"},
{"Gagged"},
{"Hushed"},
{"Silenced"},
{"Muffled"},
{"Shit On"},
{"Shit All Over"},
{"Poo'd On"},
{"Pooted On"},
{"Shit Canned"},
{"Petrified"},
{"Torpedoed"},
{"Putrefied"},
{"Disintegrated"},
{"Atomized"},
{"Dismantled"},
{"Pulverized"},
{"Fragged"},
{"Grated"},
{"Excommunicated"},
{"Decimated"},
{"Waxed"},
{"Vaporized"},
{"Withered"},
{"Executed"}
};

new const Float:DuelPos[14][4] = {
{-1255.13, -128.20, 14.14, 134.62}, //[NB]90NINE - player pos 1
{-1324.64, -198.12, 14.14, 314.46}, //[NB]90NINE - player pos 2
{-1265.41, -217.85, 27.30, 1.21}, //[NB]90NINE - spec
{-1297.86, -217.78, 27.30, 1.13}, //[NB]90NINE - spec
{-1332.31, -217.97, 27.30, 0.87}, //[NB]90NINE - spec
{-1344.07, -189.63, 27.30, 271.97}, //[NB]90NINE - spec
{-1344.16, -155.62, 27.30, 271.64}, //[NB]90NINE - spec
{-1344.18, -121.96, 27.30, 269.63}, //[NB]90NINE - spec
{-1315.27, -109.25, 27.30, 180.39}, //[NB]90NINE - spec
{-1281.66, -109.07, 27.30, 178.39}, //[NB]90NINE - spec
{-1248.61, -109.27, 27.30, 181.48}, //[NB]90NINE - spec
{-1235.64, -138.54, 27.30, 91.49}, //[NB]90NINE - spec
{-1235.64, -172.01, 27.30, 89.74}, //[NB]90NINE - spec
{-1235.54, -204.40, 27.30, 91.41} //[NB]90NINE - spec
};

new const DuelBillboards[10] = {7906,7907,7908,7909,7910,7911,7912,7913,7914,7915};

new const Float:DuelObj[12][7] = {
{4563.0,-1167.214233,-83.028252,-3.723772,90.0000,0.0000,270.0000},
{4563.0,-1370.386719,-41.803055,-3.723772,90.0000,0.0000,0.0000},
{4563.0,-1412.908325,-244.302933,-3.723772,90.0000,0.0000,90.0000},
{4563.0,-1209.404419,-244.302933,-3.723772,90.0000,0.0000,180.0000},
{4563.0,-1391.663452,-194.651978,41.150978,90.0000,0.0000,180.0000},
{4563.0,-1260.758179,-263.823212,41.150978,90.0000,0.0000,270.0000},
{4563.0,-1190.042114,-143.623566,41.150978,90.0000,0.0000,0.0000},
{4563.0,-1329.769531,-61.722466,41.150978,90.0000,0.0000,90.0000},
{4563.0,-1333.302368,-101.820313,88.059994,270.0000,0.0000,180.0000},
{4563.0,-1283.800171,-101.820313,88.059994,270.0000,0.0000,180.0000},
{4563.0,-1234.416016,-101.820313,88.059994,270.0000,0.0000,180.0000},
{8664.0,-1282.968994,-182.390350,13.019511,0.0000,0.0000,0.0000}//7474
};

new const Float:DuelDynamicObj[97][6] = {
{-1281.567505,-214.254700,16.302399,0.0000,0.0000,180.0000},
{-1298.272095,-214.254700,16.302399,0.0000,0.0000,180.0000},
{-1315.022827,-214.254700,16.302399,0.0000,0.0000,180.0000},
{-1331.747559,-214.254700,16.302399,0.0000,0.0000,180.0000},
{-1264.841309,-214.254700,16.302399,0.0000,0.0000,180.0000},
{-1248.064819,-214.254700,16.302399,0.0000,0.0000,180.0000},
{-1239.484375,-205.380341,16.302399,0.0000,0.0000,270.0000},
{-1239.484375,-172.032623,16.302399,0.0000,0.0000,270.0000},
{-1239.484375,-155.333527,16.302399,0.0000,0.0000,270.0000},
{-1239.484375,-138.609192,16.302399,0.0000,0.0000,270.0000},
{-1239.484375,-121.834396,16.302399,0.0000,0.0000,270.0000},
{-1248.064819,-113.180450,16.302399,0.0000,0.0000,0.0000},
{-1264.768921,-113.180450,16.302399,0.0000,0.0000,0.0000},
{-1281.421265,-113.180450,16.302399,0.0000,0.0000,0.0000},
{-1298.271606,-113.180450,16.302399,0.0000,0.0000,0.0000},
{-1314.975708,-113.180450,16.302399,0.0000,0.0000,0.0000},
{-1331.701904,-113.180450,16.302399,0.0000,0.0000,0.0000},
{-1340.512085,-205.380341,16.302399,0.0000,0.0000,90.0000},
{-1340.512085,-188.606140,16.302399,0.0000,0.0000,90.0000},
{-1340.512085,-171.956421,16.302399,0.0000,0.0000,90.0000},
{-1340.512085,-155.257629,16.302399,0.0000,0.0000,90.0000},
{-1340.512085,-138.632599,16.302399,0.0000,0.0000,90.0000},
{-1340.512085,-121.957748,16.302399,0.0000,0.0000,90.0000},
{-1239.463379,-205.342636,22.907461,0.0000,0.0000,270.0000},
{-1239.463379,-188.743515,22.907461,0.0000,0.0000,270.0000},
{-1239.463379,-172.094101,22.907461,0.0000,0.0000,270.0000},
{-1239.463379,-155.394150,22.907461,0.0000,0.0000,270.0000},
{-1239.463379,-138.694565,22.907461,0.0000,0.0000,270.0000},
{-1239.463379,-121.969734,22.907461,0.0000,0.0000,270.0000},
{-1248.068115,-113.119621,22.907461,0.0000,0.0000,0.0000},
{-1264.722656,-113.119621,22.907461,0.0000,0.0000,0.0000},
{-1281.427246,-113.119621,22.907461,0.0000,0.0000,0.0000},
{-1298.179932,-113.119621,22.907461,0.0000,0.0000,0.0000},
{-1314.932129,-113.119621,22.907461,0.0000,0.0000,0.0000},
{-1331.634766,-113.119621,22.907461,0.0000,0.0000,0.0000},
{-1340.535400,-121.919930,22.907461,0.0000,0.0000,90.0000},
{-1340.535400,-138.519196,22.907461,0.0000,0.0000,90.0000},
{-1340.535400,-155.168976,22.907461,0.0000,0.0000,90.0000},
{-1340.535400,-171.918549,22.907461,0.0000,0.0000,90.0000},
{-1340.535400,-188.568451,22.907461,0.0000,0.0000,90.0000},
{-1340.535400,-205.418365,22.907461,0.0000,0.0000,90.0000},
{-1331.858276,-214.292664,22.907461,0.0000,0.0000,180.0000},
{-1315.029541,-214.292664,22.907461,0.0000,0.0000,180.0000},
{-1298.352905,-214.292664,22.907461,0.0000,0.0000,180.0000},
{-1281.626221,-214.292664,22.907461,0.0000,0.0000,180.0000},
{-1264.875000,-214.292664,22.907461,0.0000,0.0000,180.0000},
{-1248.146606,-214.292664,22.907461,0.0000,0.0000,180.0000},
{-1239.484375,-205.380341,29.527353,0.0000,0.0000,270.0000},
{-1239.484375,-188.705994,16.302399,0.0000,0.0000,270.0000},
{-1239.463379,-205.467606,36.007622,0.0000,0.0000,270.0000},
{-1239.484375,-188.705994,29.527353,0.0000,0.0000,270.0000},
{-1239.484375,-172.082245,29.527353,0.0000,0.0000,270.0000},
{-1239.484375,-155.383026,29.527353,0.0000,0.0000,270.0000},
{-1239.484375,-138.684174,29.527353,0.0000,0.0000,270.0000},
{-1239.484375,-122.033989,29.527353,0.0000,0.0000,270.0000},
{-1248.062378,-113.108978,29.527353,0.0000,0.0000,0.0000},
{-1264.740479,-113.108978,29.527353,0.0000,0.0000,0.0000},
{-1281.492188,-113.108978,29.527353,0.0000,0.0000,0.0000},
{-1298.191650,-113.108978,29.527353,0.0000,0.0000,0.0000},
{-1314.970337,-113.108978,29.527353,0.0000,0.0000,0.0000},
{-1331.675415,-113.108978,29.527353,0.0000,0.0000,0.0000},
{-1340.551514,-121.909256,29.527353,0.0000,0.0000,90.0000},
{-1340.551514,-138.483597,29.527353,0.0000,0.0000,90.0000},
{-1340.551514,-155.183365,29.527353,0.0000,0.0000,90.0000},
{-1340.551514,-171.958359,29.527353,0.0000,0.0000,90.0000},
{-1340.551514,-188.558029,29.527353,0.0000,0.0000,90.0000},
{-1340.551514,-205.383072,29.527353,0.0000,0.0000,90.0000},
{-1331.893066,-214.305893,29.527353,0.0000,0.0000,180.0000},
{-1314.990723,-214.305893,29.527353,0.0000,0.0000,180.0000},
{-1298.287109,-214.305893,29.527353,0.0000,0.0000,180.0000},
{-1281.660278,-214.305893,29.527353,0.0000,0.0000,180.0000},
{-1264.806519,-214.305893,29.527353,0.0000,0.0000,180.0000},
{-1248.178711,-214.305893,29.527353,0.0000,0.0000,180.0000},
{-1239.463379,-188.768509,36.007622,0.0000,0.0000,270.0000},
{-1239.463379,-172.194016,36.007622,0.0000,0.0000,270.0000},
{-1239.463379,-155.444992,36.007622,0.0000,0.0000,270.0000},
{-1239.463379,-138.770950,36.007622,0.0000,0.0000,270.0000},
{-1239.363281,-121.896179,36.007622,0.0000,0.0000,270.0000},
{-1247.971680,-113.045883,36.007622,0.0000,0.0000,0.0000},
{-1264.746460,-113.045883,36.007622,0.0000,0.0000,0.0000},
{-1281.375732,-113.045883,36.007622,0.0000,0.0000,0.0000},
{-1298.128906,-113.045883,36.007622,0.0000,0.0000,0.0000},
{-1314.929199,-113.045883,36.007622,0.0000,0.0000,0.0000},
{-1331.756470,-113.045883,36.007622,0.0000,0.0000,0.0000},
{-1340.685791,-121.796143,36.007622,0.0000,0.0000,90.0000},
{-1340.685791,-138.371277,36.007622,0.0000,0.0000,90.0000},
{-1340.685791,-155.144745,36.007622,0.0000,0.0000,90.0000},
{-1340.685791,-171.918945,36.007622,0.0000,0.0000,90.0000},
{-1340.685791,-188.493378,36.007622,0.0000,0.0000,90.0000},
{-1340.685791,-205.317871,36.007622,0.0000,0.0000,90.0000},
{-1340.660767,-205.567810,36.007622,0.0000,0.0000,90.0000},
{-1332.002319,-214.392548,36.007622,0.0000,0.0000,180.0000},
{-1315.151978,-214.392548,36.007622,0.0000,0.0000,180.0000},
{-1298.296265,-214.392548,36.007622,0.0000,0.0000,180.0000},
{-1281.693237,-214.392548,36.007622,0.0000,0.0000,180.0000},
{-1264.865723,-214.392548,36.007622,0.0000,0.0000,180.0000},
{-1248.036987,-214.392548,36.007622,0.0000,0.0000,180.0000}
};

#define COLOR_MINIGAME 0xADFF2FAA
new pDuelObj[MAX_PLAYERS][12+97];
new DynamicVehicle[5];

new DCC_Channel:DCGen;
new DCC_Channel:DCLookups;
new DCC_Channel:DCReports;
new DCC_Channel:DCAdmin;

public OnGameModeInit()
{
	planelist = LoadModelSelectionMenu("planes.txt");
	skinlist = LoadModelSelectionMenu("skins.txt");
	bikelist = LoadModelSelectionMenu("bikes.txt");
	
	Server[TotalReports] = 0;
	Reports[0] = TextDrawCreate(242.000000, 357.000000, "~b~Reports");
	TextDrawFont(Reports[0], TEXT_DRAW_FONT_3);
	TextDrawLetterSize(Reports[0], 0.412500, 1.300000);
	TextDrawTextSize(Reports[0], 400.000000, 17.000000);
	TextDrawSetOutline(Reports[0], 1);
	TextDrawSetShadow(Reports[0], 0);
	TextDrawAlignment(Reports[0], TEXT_DRAW_ALIGN_CENTER);
	TextDrawColour(Reports[0], -1);
	TextDrawBackgroundColour(Reports[0], 255);
	TextDrawBoxColour(Reports[0], 50);
	TextDrawUseBox(Reports[0], false);
	TextDrawSetProportional(Reports[0], true);
	TextDrawSetSelectable(Reports[0], false);

	Reports[1] = TextDrawCreate(212.000000, 369.000000, "No ~p~players~w~ have been reported yet. ~p~You can use /cw to help find cheaters!");
	TextDrawFont(Reports[1], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(Reports[1], 0.191667, 1.500000);
	TextDrawTextSize(Reports[1], 458.000000, 17.000000);
	TextDrawSetOutline(Reports[1], 1);
	TextDrawSetShadow(Reports[1], 0);
	TextDrawAlignment(Reports[1], TEXT_DRAW_ALIGN_LEFT);
	TextDrawColour(Reports[1], -1);
	TextDrawBackgroundColour(Reports[1], 255);
	TextDrawBoxColour(Reports[1], 50);
	TextDrawUseBox(Reports[1], true);
	TextDrawSetProportional(Reports[1], true);
	TextDrawSetSelectable(Reports[1], false);
	// Bike Game
	Server[bikeGameCP] = CreateDynamicCP(-1677.3568,32.0751,3.5547, 3, -1, -1,-1,30,-1,1);
 	CreateDynamicMapIcon(-1677.3568,32.0751,3.5547, 19,COLOR_WHITE); //BikeGame

	DCGen = DCC_FindChannelById("1198394490717749378");
	DCLookups = DCC_FindChannelById("1200120686325272587");
	DCReports = DCC_FindChannelById("1200197178245779607");
	DCAdmin = DCC_FindChannelById("1198674686578524251");
    
	CreateDynamicRectangle(-1528.271362,398.835998,-1228.475830,491.694488);
	CreateDynamicRectangle(-1695.292358,644.827209,-1567.198486,695.109069);
	CreateDynamicRectangle(-2659.591308,1304.823974,-2599.672607,1417.265991);
	CreateDynamicRectangle(-1745.551513,1174.610961,-1657.159545,1221.689941);
	CreateDynamicRectangle(-2067.579589,117.212997,-2015.840209,203.983001);
	CreateDynamicRectangle(-2599.689208,296.519989,-2563.742187,340.742004);
	CreateDynamicRectangle(-2719.048095,81.081596,-2697.038574,151.679992);
	CreateDynamicRectangle(-2069.932861,1163.089965,-1980.824218,1203.790039);
	CreateDynamicRectangle(-2704.131591,244.600997,-2651.127441,283.545013);
	CreateDynamicRectangle(-2740.468994,569.666015,-2598.237548,675.705017);
	CreateDynamicRectangle(-2497.979003,-206.210006,-2467.033935,-153.949996);
	CreateDynamicRectangle(-2543.523681,-45.717998,-2505.502441,14.476300);

	spawnZones[0] = GangZoneCreate(-1528.271362,398.835998,-1228.475830,491.694488);
	spawnZones[1] = GangZoneCreate(-1695.292358,644.827209,-1567.198486,695.109069);
	spawnZones[2] = GangZoneCreate(-2659.591308,1304.823974,-2599.672607,1417.265991);
	spawnZones[3] = GangZoneCreate(-1745.551513,1174.610961,-1657.159545,1221.689941);
	spawnZones[4] = GangZoneCreate(-2067.579589,117.212997,-2015.840209,203.983001);
	spawnZones[5] = GangZoneCreate(-2599.689208,296.519989,-2563.742187,340.742004);
	spawnZones[6] = GangZoneCreate(-2719.048095,81.081596,-2697.038574,151.679992);
	spawnZones[7] = GangZoneCreate(-2069.932861,1163.089965,-1980.824218,1203.790039);
	spawnZones[8] = GangZoneCreate(-2704.131591,244.600997,-2651.127441,283.545013);
	spawnZones[9] = GangZoneCreate(-2740.468994,569.666015,-2598.237548,675.705017);
	spawnZones[10] = GangZoneCreate(-2497.979003,-206.210006,-2467.033935,-153.949996);
	spawnZones[11] = GangZoneCreate(-2543.523681,-45.717998,-2505.502441,14.476300);
	// min values cannot be larger than max values -- this is why they bug!

	CreateDynamicMapIcon(1401.9124,1069.3615,10.8203, 51,COLOR_WHITE); //Trucking
	CreateDynamicMapIcon(-520.6759,-487.2758,25.5234, 51,COLOR_WHITE); //Trucking




	for(new Egg=0;Egg < sizeof(EasterEgg); Egg++)
	{
		switch(random(2))
		{
          case 0:  EasterPickup[Egg] = CreateDynamicPickup(19342, 15, EasterEgg[Egg][Epos][0], EasterEgg[Egg][Epos][1], EasterEgg[Egg][Epos][2],0, 0);
		  case 1:  EasterPickup[Egg] = CreateDynamicPickup(19343, 15, EasterEgg[Egg][Epos][0], EasterEgg[Egg][Epos][1], EasterEgg[Egg][Epos][2],0, 0);
		}
 	}

	for(new i=0; i< MAX_PLAYERS; i++)
	{

	
	    TogglePlayerClock(i, true);
	
		RemoveBuildingForPlayer(i, 10983, -2076.6484, 222.8516, 31.2188, 0.25);
		RemoveBuildingForPlayer(i, 11143, -2076.6484, 222.8516, 31.2188, 0.25);
		RemoveBuildingForPlayer(i, 11339, -2079.9531, 159.2031, 30.8672, 0.25);
		RemoveBuildingForPlayer(i, 11340, -2079.9531, 159.2031, 30.8672, 0.25);
		RemoveBuildingForPlayer(i, 11279, -2038.7500, 150.7109, 31.1953, 0.25);
		RemoveBuildingForPlayer(i, 11387, -2038.7500, 150.7109, 31.1953, 0.25);
		
		RemoveBuildingForPlayer(i, 10812, -1546.2969, -656.2188, 25.0781, 0.25);
		RemoveBuildingForPlayer(i, 10814, -1146.5547, -145.3047, 17.0781, 0.25);
		RemoveBuildingForPlayer(i, 3814, -1272.0781, -660.3281, 19.7656, 0.25);
		RemoveBuildingForPlayer(i, 3814, -1334.4766, -660.3281, 19.7656, 0.25);
		RemoveBuildingForPlayer(i, 3814, -1396.8750, -660.3281, 19.7656, 0.25);
		RemoveBuildingForPlayer(i, 3814, -1459.2734, -660.3281, 19.7656, 0.25);
		RemoveBuildingForPlayer(i, 11223, -2049.1719, 250.3203, 33.0781, 0.25);
		RemoveBuildingForPlayer(i, 3815, -1272.0781, -660.3281, 19.7656, 0.25);
		RemoveBuildingForPlayer(i, 3815, -1334.4766, -660.3281, 19.7656, 0.25);
		RemoveBuildingForPlayer(i, 3815, -1396.8750, -660.3281, 19.7656, 0.25);
		RemoveBuildingForPlayer(i, 3815, -1459.2734, -660.3281, 19.7656, 0.25);
		RemoveBuildingForPlayer(i, 3865, -2063.2422, 258.7500, 35.7422, 0.25);
		RemoveBuildingForPlayer(i, 3869, -2123.2891, 269.5313, 41.8516, 0.25);
		RemoveBuildingForPlayer(i, 3869, -2126.2109, 231.9766, 41.6875, 0.25);
		RemoveBuildingForPlayer(i, 3869, -2116.6797, 131.0078, 42.1484, 0.25);
		RemoveBuildingForPlayer(i, 3865, -2063.0156, 247.9453, 35.7422, 0.25);
		RemoveBuildingForPlayer(i, 3865, -2057.7500, 249.9531, 35.5938, 0.25);
		RemoveBuildingForPlayer(i, 3865, -2057.7031, 229.8047, 35.3516, 0.25);
		RemoveBuildingForPlayer(i, 3865, -2059.5313, 256.5234, 37.0078, 0.25);
		RemoveBuildingForPlayer(i, 3888, -2128.1797, 171.4609, 42.4297, 0.25);
		RemoveBuildingForPlayer(i, 3888, -2066.3594, 301.9141, 42.1719, 0.25);
		RemoveBuildingForPlayer(i, 3868, -2120.7656, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3868, -2103.3281, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3868, -2032.2891, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3868, -2022.0859, 347.1328, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3868, -2022.0859, 364.5781, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3868, -2049.7344, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 10811, -1546.2969, -656.2188, 25.0781, 0.25);
		RemoveBuildingForPlayer(i, 1278, -1365.1563, -643.6875, 25.3359, 0.25);
		RemoveBuildingForPlayer(i, 3887, -2066.3594, 301.9141, 42.1719, 0.25);
		RemoveBuildingForPlayer(i, 3867, -2120.7656, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3867, -2103.3281, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3867, -2049.7344, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3867, -2032.2891, 336.8672, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3867, -2022.0859, 347.1328, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3867, -2022.0859, 364.5781, 49.1563, 0.25);
		RemoveBuildingForPlayer(i, 3887, -2128.1797, 171.4609, 42.4297, 0.25);
		RemoveBuildingForPlayer(i, 3866, -2116.6797, 131.0078, 42.1484, 0.25);
		RemoveBuildingForPlayer(i, 3864, -2082.5391, 153.5469, 40.1016, 0.25);
		RemoveBuildingForPlayer(i, 3864, -2111.8828, 172.4688, 40.1953, 0.25);
		RemoveBuildingForPlayer(i, 3872, -2116.7500, 177.0781, 40.9844, 0.25);
		RemoveBuildingForPlayer(i, 3872, -2107.0313, 226.0391, 40.8438, 0.25);
		RemoveBuildingForPlayer(i, 10984, -2126.1563, 238.6172, 35.2656, 0.25);
		RemoveBuildingForPlayer(i, 3864, -2102.2109, 230.7031, 40.0547, 0.25);
		RemoveBuildingForPlayer(i, 3866, -2126.2109, 231.9766, 41.6875, 0.25);
		RemoveBuildingForPlayer(i, 10986, -2130.0547, 275.5625, 35.3750, 0.25);
		RemoveBuildingForPlayer(i, 3866, -2123.2891, 269.5313, 41.8516, 0.25);
		RemoveBuildingForPlayer(i, 3864, -2113.3125, 268.5078, 40.5703, 0.25);
		RemoveBuildingForPlayer(i, 3872, -2118.1328, 263.8438, 41.3594, 0.25);
		RemoveBuildingForPlayer(i, 10985, -2099.2734, 292.9141, 35.0703, 0.25);
		RemoveBuildingForPlayer(i, 3864, -2059.3438, 205.5313, 40.4688, 0.25);
		RemoveBuildingForPlayer(i, 3872, -2048.4531, 265.0938, 41.6563, 0.25);
		RemoveBuildingForPlayer(i, 3864, -2041.7500, 265.1016, 40.8672, 0.25);
		RemoveBuildingForPlayer(i, 966, -1572.2031, 658.8359, 6.0781, 0.25);
		RemoveBuildingForPlayer(i, 967, -1572.7031, 657.6016, 6.0781, 0.25);
		
		
		building[0] = CreatePlayerObject(i,11340, -2079.95, 159.20, 30.87,    0.00, 0.00, 0.00);
		building[1] = CreatePlayerObject(i,10983, -2076.65, 222.85, 31.22,   0.00, 0.00, 0.00);
		SetPlayerObjectMaterial(i,building[0], 0, 10972, "groundbit_sfse", "desgreengrass", 0);
		SetPlayerObjectMaterial(i,building[1], 1, 10972, "groundbit_sfse", "desgreengrass", 0);
		building[2] = CreatePlayerObject(i,11387, -2038.75, 150.71, 31.20,   0.00, 0.00, 0.00);
		SetPlayerObjectMaterial(i,building[2], 12, 3845, "boxhses_sfsx", "shingles1", 0);
		SetPlayerObjectMaterial(i,building[2], 0, 3845, "boxhses_sfsx", "shingles1", 0);
		SetPlayerObjectMaterial(i,building[2], 6, 11139, "firehouse_sfse", "ws_tunnelwall2", 0);
		SetPlayerObjectMaterial(i,building[2], 11, 5848, "mainlcawn", "fakestone1_LA", 0);
		HO2[i][ID]=-1;

	}
	

	Server[ptp_president] = INVALID_PLAYER_ID;
	TPsystem = false;
	RaceNOS = true;
	typing = false;

	SQL = mysql_connect(SQL_HOST, SQL_USER, SQL_PASS, SQL_DB);
    if(mysql_errno() != 0)
	print("[!] MySQL-ERROR: Could not connect to database!"); else print("[!] MySQL: Connected to the database!");
	for(new x=0; x < sizeof cpHelpMsg; x++)
	{
		cpV[x] = CreateDynamicPickup(19131,1,cpHelpMsg[x][0],cpHelpMsg[x][1],cpHelpMsg[x][2],0,0,-1,100);
	}

	SetTimer("PGodTimer",1000,true);
	EnableStuntBonusForAll(true);
	SetGameModeText("Anything and Everything");

	Server[box] = 0;
	Server[boxtype] = 0;


	LoadProperties(); 

	helislist = LoadModelSelectionMenu("helis.txt");
	
	new pName[MAX_PLAYER_NAME];
	


	for(new i;i<MAX_PLAYERS;i++)
	{
		//pms[i] = true;
 		Players[i][PMs] = true;
		Players[i][AdminLvl] = 0;
		Players[i][Minigame] = 0;
		Players[i][LastCar] = -1;
		Players[i][PlayTime] = 0;
		Players[i][Logged] = false;
		Players[i][Registered] = false;
		Players[i][Spawned] = false;
		Players[i][Money] = 0;
		Players[i][Deaths] = 0;
		Players[i][Skin] = -1;
		Players[i][Color] = 0;
		Players[i][Muted] = false;
		Players[i][God] = false;
		Players[i][VIP] = 0;
		Players[i][Banned] = false;
		Players[i][RacesWon] = 0;
		Players[i][RacesJoined] = 0;
		Players[i][TDMJoined] = false;
		Players[i][KSpree] = 0;
		Players[i][AC_HealthAlerts] = 0;
		Players[i][AC_JackAlerts] = 0;
		Players[i][AC_MoneyAlerts] = 0;
		Players[i][AC_ArmourAlerts] = 0;
		Players[i][Spam] = 0;
		Players[i][Token]=0;
		isNeonON[i]=false;
		cNeon[i]=-1;
		TokenUsing[i]=false;
		TokenUltimate[i]=false;
		AllowedVehicle[i]=false;
		Players[i][MyCar] = 0;



		WeaponData[i] = TextDrawCreate(322.000000, 309.000000," "); // Weapon Data
		TextDrawAlignment(WeaponData[i], TEXT_DRAW_ALIGN_CENTER);
		TextDrawColour(WeaponData[i], 0x90CC50FF);
		TextDrawFont(WeaponData[i], TEXT_DRAW_FONT_3);
		TextDrawLetterSize(WeaponData[i], 0.3, 1.1);//0.6,1.4
		TextDrawSetOutline(WeaponData[i], 1);
		TextDrawTextSize(WeaponData[i], 0.0, 250.0);


		GetPlayerName(i, pName, MAX_PLAYER_NAME);
		
		for(new propid; propid < PropertiesAmount; propid++)
		{
			if(PropInfo[propid][PropIsBought] == 1)
			{
   				if(strcmp(PropInfo[propid][PropOwner], pName, true)==0)
				{
					    Players[i][Earnings] += PropInfo[propid][PropEarning];
					    PlayerProps[i]++;
				}
			}
		}

	}



	SetTimer("RandomMessages",420000,true);
	GameTimerEx = SetTimer("RandomGame",GameTimer * 60000,true);
    SetTimer("Anticheat_Update",60000,true);
    SetTimer("RandomMinigame",300000,true);

	UsePlayerPedAnims();

	foreach(new i : Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        SpeedBoostDisabled[i] = false;
		}
	}
	print("[!] Speedboost disabled for all players per default.");

	RXDM[0] = TextDrawCreate(723.000000, 428.000000, " BG");
	TextDrawBackgroundColour(RXDM[0], 255);
	TextDrawFont(RXDM[0], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(RXDM[0], 0.500000, 1.000000);
	TextDrawColour(RXDM[0], 0xFFFFFF80);
	TextDrawSetOutline(RXDM[0], 0);
	TextDrawSetProportional(RXDM[0], true);
	TextDrawSetShadow(RXDM[0], 1);
	TextDrawUseBox(RXDM[0], true);
	TextDrawBoxColour(RXDM[0], 255);
	TextDrawTextSize(RXDM[0], -82.000000, 1.000000);
	TextDrawSetSelectable(RXDM[0], false);

	RXDM[1] = TextDrawCreate(554.000000, 430.000000, "RXDM - Revolution X ~n~www.revolutionxsamp.com");
	TextDrawBackgroundColour(RXDM[1], -1);
	TextDrawFont(RXDM[1], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(RXDM[1], 0.170000, 0.899999);
	TextDrawColour(RXDM[1], 255);
	TextDrawSetOutline(RXDM[1], 1);
	TextDrawSetProportional(RXDM[1], true);
	TextDrawSetSelectable(RXDM[1], false);

	RXDM[2] = TextDrawCreate(523.000000, 426.000000, "Star");
	TextDrawBackgroundColour(RXDM[2], 255);
	TextDrawFont(RXDM[2], TEXT_DRAW_FONT_0);
	TextDrawLetterSize(RXDM[2], 0.500000, 1.000000);
	TextDrawColour(RXDM[2], -1);
	TextDrawSetOutline(RXDM[2], 0);
	TextDrawSetProportional(RXDM[2], true);
	TextDrawSetShadow(RXDM[2], 1);
	TextDrawUseBox(RXDM[2], true);
	TextDrawBoxColour(RXDM[2], 255);
	TextDrawTextSize(RXDM[2], 30.000000, 30.000000);
	TextDrawSetSelectable(RXDM[2], false);
	TextDrawSetPreviewModel(RXDM[2], 1247);
	
	RXDM[3] = TextDrawCreate(258.000000, 429.000000, "~p~No messages to show right now.");
	TextDrawBackgroundColour(RXDM[3], 255);
	TextDrawFont(RXDM[3], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(RXDM[3], 0.200000, 1.099998);
	TextDrawColour(RXDM[3], -1);
	TextDrawSetOutline(RXDM[3], 0);
	TextDrawSetProportional(RXDM[3], false);
	TextDrawSetShadow(RXDM[3], 1);
	TextDrawSetSelectable(RXDM[3], false);

	RXDM[4] = TextDrawCreate(294.000000, 437.000000, "~g~/rules   ~h~/teles   ~h~/cmds   ~h~/credits   ~h~/stunts   ~h~/help");
	TextDrawBackgroundColour(RXDM[4], 255);
	TextDrawFont(RXDM[4], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(RXDM[4], 0.200000, 1.099998);
	TextDrawColour(RXDM[4], -16776961);
	TextDrawSetOutline(RXDM[4], 0);
	TextDrawSetProportional(RXDM[4], true);
	TextDrawSetShadow(RXDM[4], 1);
	TextDrawSetSelectable(RXDM[4], false);

	RXDM[5] = TextDrawCreate(8.000000, 430.000000, "~b~~h~Tr~h~iv~h~ia: ~y~NickName ~h~ is the~h~ best racer~w~! (~r~9999 ~h~records~w~)");
	TextDrawBackgroundColour(RXDM[5], 255);
	TextDrawFont(RXDM[5], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(RXDM[5], 0.200000, 1.099997);
	TextDrawColour(RXDM[5], -1);
	TextDrawSetOutline(RXDM[5], 0);
	TextDrawSetProportional(RXDM[5], true);
	TextDrawSetShadow(RXDM[5], 1);
	TextDrawSetSelectable(RXDM[5], false);
	
	RXDM[6] = TextDrawCreate(183.000000, 408.000000, "~p~JustinHD~w~ was reported by ~p~ATMPANZEHIR~w~ for cheats");
	TextDrawBackgroundColour(RXDM[6], 255);
	TextDrawFont(RXDM[6], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(RXDM[6], 0.310000, 1.200000);
	TextDrawColour(RXDM[6], -1);
	TextDrawSetOutline(RXDM[6], 0);
	TextDrawSetProportional(RXDM[6], true);
	TextDrawSetShadow(RXDM[6], 1);

	for(new i; i < MAX_PLAYERS; i ++)
	{
		if(IsPlayerConnected(i))
		{
			//TextDrawShowForPlayer(i, RXDM[0]);
			TextDrawShowForPlayer(i, RXDM[1]);
			//TextDrawShowForPlayer(i, RXDM[2]);
			TextDrawShowForPlayer(i, RXDM[3]);
			TextDrawShowForPlayer(i, RXDM[4]);
			TextDrawShowForPlayer(i, RXDM[5]);
		}
	}

    print("[!] Textdraws: Successfully loaded TextDraws.");
	printf("[!] RaceServ: RXv5 race system loaded successfully.");


	racenotify = TextDrawCreate(489.000000, 120.000000, " ");
	TextDrawAlignment(racenotify, TEXT_DRAW_ALIGN_CENTER);
	TextDrawColour(racenotify, COLOR_LIME);
	TextDrawFont(racenotify, TEXT_DRAW_FONT_3);
	TextDrawLetterSize(racenotify, 0.3, 1.1);//0.6,1.4
	TextDrawSetOutline(racenotify, 1);
	TextDrawTextSize(racenotify, 0.0, 250.0);
	RaceRotation = true;
	raceRotTimerEx = SetTimer("Race_Rotation",raceRotTimer * 60000,true);


	AddPlayerClass(280,-1616.6124,677.5044,7.1875,209.7432,WEAPON_NITESTICK,1,WEAPON_COLT45,300,WEAPON_AK47,300); // policespawn
    AddPlayerClass(281,-1616.6124,677.5044,7.1875,209.7432,WEAPON_NITESTICK,1,WEAPON_COLT45,300,WEAPON_AK47,300); // policespawn
    AddPlayerClass(282,-1616.6124,677.5044,7.1875,209.7432,WEAPON_NITESTICK,1,WEAPON_COLT45,300,WEAPON_AK47,300); // policespawn
    AddPlayerClass(283,-1616.6124,677.5044,7.1875,209.7432,WEAPON_NITESTICK,1,WEAPON_COLT45,300,WEAPON_AK47,300); // policespawn
    AddPlayerClass(284,-1616.6124,677.5044,7.1875,209.7432,WEAPON_NITESTICK,1,WEAPON_COLT45,300,WEAPON_AK47,300); // policespawn
    AddPlayerClass(288,-1616.6124,677.5044,7.1875,209.7432,WEAPON_NITESTICK,1,WEAPON_COLT45,300,WEAPON_AK47,300); // policespawn
    AddPlayerClass(285,-1616.6124,677.5044,7.1875,209.7432,WEAPON_NITESTICK,1,WEAPON_COLT45,300,WEAPON_AK47,300); // policespawn
    AddPlayerClass(249,-2625.2842,1406.5404,7.1016,184.6066,WEAPON_CHAINSAW,1,WEAPON_DEAGLE,300,WEAPON_UZI,150); // pimpspawn
    AddPlayerClass(5,-2625.2842,1406.5404,7.1016,184.6066,WEAPON_CHAINSAW,1,WEAPON_DEAGLE,300,WEAPON_UZI,150); // pimpspawn
    AddPlayerClass(24,-2625.2842,1406.5404,7.1016,184.6066,WEAPON_CHAINSAW,1,WEAPON_DEAGLE,300,WEAPON_UZI,150); // pimpspawn
    AddPlayerClass(82,-2625.2842,1406.5404,7.1016,184.6066,WEAPON_CHAINSAW,1,WEAPON_DEAGLE,300,WEAPON_UZI,150); // pimpspawn
    AddPlayerClass(73,-1712.0566,1203.2703,25.1244,186.4160,WEAPON_SILENCED,300,WEAPON_SNIPER,300,WEAPON:0,0); // sniper spawn
    AddPlayerClass(48,-1712.0566,1203.2703,25.1244,186.4160,WEAPON_SILENCED,300,WEAPON_SNIPER,300,WEAPON:0,0); // sniper spawn
    AddPlayerClass(101,-1712.0566,1203.2703,25.1244,186.4160,WEAPON_SILENCED,300,WEAPON_SNIPER,300,WEAPON:0,0); // sniper spawn
    AddPlayerClass(112,-1712.0566,1203.2703,25.1244,186.4160,WEAPON_SILENCED,300,WEAPON_SNIPER,300,WEAPON:0,0); // sniper spawn
    AddPlayerClass(21,-2585.1780,311.7090,4.8516,49.5607,WEAPON_DEAGLE,300,WEAPON_UZI,300,WEAPON_SNIPER,100); // hitman
	AddPlayerClass(274,-1616.6124,677.5044,7.1875,209.7432,WEAPON_SHOTGUN,1,WEAPON_MP5,300,WEAPON_DEAGLE,300); // medic
    AddPlayerClass(275,-1616.6124,677.5044,7.1875,209.7432,WEAPON_SHOTGUN,1,WEAPON_MP5,300,WEAPON_DEAGLE,300); // medic
    AddPlayerClass(276,-1616.6124,677.5044,7.1875,209.7432,WEAPON_SHOTGUN,1,WEAPON_MP5,300,WEAPON_DEAGLE,300); // medic
    
    print("[!] Classes: Successfully loaded RX classes/teams");

	// Rx Vehicles v5
	
 	firststatic = AddStaticVehicleEx(579,-2618.4875,1353.6960,7.0679,271.7890,126,126,60); // pimpcar
	dVehicles[0] = AddStaticVehicle(455,1411.2616,976.1310,11.2510,2.4095,0,1); // delivery0
	dVehicles[1] = AddStaticVehicle(455,1403.0361,977.0081,11.2553,1.2776,0,1); // delivery1
	dVehicles[2] = AddStaticVehicle(455,1445.6830,977.6710,11.2532,358.2484,0,1); // delivery1
	dVehicles[3] = AddStaticVehicle(455,1432.0626,976.3712,11.2553,3.1026,0,1); // delivery1
	dVehicles[4] = AddStaticVehicle(455,1423.2781,1045.3066,11.2570,90.3940,0,1); // delivery1
	dVehicles[5] = AddStaticVehicle(455,1425.1954,1039.0480,10.7360,88.8729,0,1); // delivery1
	dVehicles[6] = AddStaticVehicle(455,1423.8135,1029.6747,10.8501,87.7517,0,1); // delivery1
	dVehicles[7] = AddStaticVehicle(455,1423.4082,1085.4518,11.2570,89.7389,0,1); // delivery1

	// COUNTRY DELIVERY dVehicles 499

	dVehicles[8] = AddStaticVehicle(499,-519.8334,-498.1342,25.1969,1.0479,94,53); // truck1
	dVehicles[9] = AddStaticVehicle(499,-528.9913,-498.1117,25.2007,359.6076,94,53); // truck2
	dVehicles[10] = AddStaticVehicle(499,-556.8806,-496.8745,25.3044,359.1623,94,53); // truck3
	AddStaticVehicleEx(579,-2620.9607,1341.6958,7.1191,223.5627,126,126,60); // pimpcar
    AddStaticVehicleEx(417,-1414.2445,519.1105,18.3082,268.0354,0,0,60); // leviathan
    AddStaticVehicleEx(597,-1605.1128,651.6899,6.9582,359.4504,0,1,60); // police
	AddStaticVehicleEx(597,-1610.6343,652.1906,6.9583,358.3960,0,1,60); // police
    AddStaticVehicleEx(487,-1680.5757,705.9107,30.8008,359.4729,60,101,60); // maverick
	AddStaticVehicleEx(522,1866.0005,-1446.1176,13.0945,358.0006,38,74,60); // nrg
	AddStaticVehicleEx(481,1872.7504,-1446.2303,13.0520,5.4977,3,3,60); // bmx
	AddStaticVehicleEx(521,1863.6406,-1363.1459,13.0612,212.9499,85,13,60); // fcr
    AddStaticVehicleEx(470,-1528.1387,409.0038,7.1808,91.5808,43,0,60); // patriot
	AddStaticVehicleEx(422,-1675.9728,436.6396,7.1711,224.0613,97,25,60); // bobcat
    AddStaticVehicleEx(587,1245.4951,-2043.7368,59.5684,268.0296,40,1,60); // euros
	AddStaticVehicleEx(480,1278.0035,-2042.5051,58.7897,89.7692,95,95,60); // comet
	AddStaticVehicleEx(568,-276.4939,1556.1978,75.2269,135.7511,9,39,60); // bandito
	AddStaticVehicleEx(415,-271.8944,1550.7366,75.1317,134.7738,80,80,60); // cheetah
    AddStaticVehicleEx(593,-1563.5693,-263.7026,14.6097,32.7730,68,8,60); // dodo
	AddStaticVehicleEx(487,-1226.4938,-7.0584,14.6378,134.2818,26,57,60); // maverick
	AddStaticVehicleEx(597,-1587.7092,673.3918,6.9564,181.8018,0,1,60); // sfpd
	AddStaticVehicleEx(597,-1599.7990,651.7153,6.9578,1.1948,0,1,60); // sfpd
	AddStaticVehicleEx(597,-1573.0752,730.3929,-5.4732,92.2271,0,1,60); // sfpd
	AddStaticVehicleEx(597,-1588.0973,747.9778,-5.4731,179.3057,0,1,60); // sfpd
	AddStaticVehicleEx(597,-1600.0082,692.4161,-5.4744,179.3944,0,1,60); // sfpd
	AddStaticVehicleEx(541,-1393.3860,-191.7605,13.7682,255.9360,58,8,60); // bullet
	AddStaticVehicleEx(487,-1190.5870,29.0926,14.3634,132.7979,29,42,60); // mav
	AddStaticVehicleEx(597,-1599.5504,672.6142,6.9722,181.58,0,1,60);
	AddStaticVehicleEx(597,-1587.7330,651.0314,6.9647,358.4500,0,1,60);
	AddStaticVehicleEx(597,-1616.0764,652.7162,6.9722,0.0765,0,1,60);
	AddStaticVehicleEx(411,-1317.1339,-292.4745,13.8586,26.3902,92,81,60);
	AddStaticVehicleEx(411,-1364.4171,-245.4528,13.8503,312.5130,55,31,60);
	AddStaticVehicleEx(522,-1365.4755,-249.4127,13.7011,225.7325,45,96,60);
	AddStaticVehicleEx(433,-1317.6401,440.4205,7.6240,176.0141,43,0,60);
	AddStaticVehicleEx(433,-1330.7244,441.1479,7.6210,128.8932,43,0,60);
	AddStaticVehicleEx(470,-1361.7655,455.1871,7.1785,359.3832,43,0,60);
	AddStaticVehicleEx(470,-1367.7064,454.7260,7.1842,358.1050,43,0,60);
	AddStaticVehicleEx(470,-1370.4028,479.0324,7.1790,354.5779,43,0,60);
	AddStaticVehicleEx(470,-1362.1047,479.1191,7.1750,355.4796,43,0,60);
	AddStaticVehicleEx(593,-1455.8909,501.9273,18.7234,269.4907,58,8,60);
	AddStaticVehicleEx(522,-2617.3604,1379.5253,6.7094,91.0565,17,120,60);
	AddStaticVehicleEx(522,-2647.0376,1378.9785,6.7172,89.6500,17,120,60);
	AddStaticVehicleEx(579,-2645.1802,1365.4087,7.0959,272.4432,126,126,60);
	AddStaticVehicleEx(579,-2617.9841,1367.8558,6.9926,273.6891,126,126,60);
	AddStaticVehicleEx(579,-2608.8940,1347.5323,7.1240,213.9725,126,126,60);
	AddStaticVehicleEx(422,-1722.5538,-119.2409,3.5343,316.8209,97,25,60);
	AddStaticVehicleEx(487,-1676.2349,1210.2446,33.1203,303.6059,0,0,60);
	AddStaticVehicleEx(521,-1699.7905,1195.9506,24.3546,91.6164,34,20,60);
	AddStaticVehicleEx(521,-1720.6904,1195.8273,24.5227,90.9662,34,20,60);
	AddStaticVehicleEx(521,-1729.0825,1178.8483,24.5434,89.3573,34,20,60);
	AddStaticVehicleEx(422,-2035.4010,139.4517,28.8245,267.6820,101,25,60);
	AddStaticVehicleEx(562,-2711.1909,110.3273,3.9128,179.8410,72,72,60);
	AddStaticVehicleEx(562,-2711.5186,140.8459,3.9121,181.1604,72,72,60);
	AddStaticVehicleEx(562,-2692.3538,143.5672,3.9952,260.3889,72,72,60);
	AddStaticVehicleEx(555,-2017.4114,1185.6774,45.0524,266.6762,124,124,60);
	AddStaticVehicleEx(555,-2047.6533,1185.9857,45.0518,270.1909,124,124,60);
	AddStaticVehicleEx(555,-2050.2058,1158.2484,45.1297,169.6629,124,124,60);
	AddStaticVehicleEx(555,-2027.3516,1167.8311,45.0517,89.1675,124,124,60);
	AddStaticVehicleEx(466,-2688.6221,268.2414,4.0780,179.7544,6,6,60);
	AddStaticVehicleEx(466,-2691.7817,267.8560,4.0778,180.6108,6,6,60);
	AddStaticVehicleEx(466,-2664.9775,268.1788,4.0802,1.4688,6,6,60);
	AddStaticVehicleEx(466,-2661.4736,268.1094,4.0646,359.2143,6,6,60);
	AddStaticVehicleEx(522,-2045.3123,129.3654,28.3753,177.1688,119,67,60);
	AddStaticVehicleEx(587,-2034.1458,168.1491,28.5609,84.7041,22,22,60);
	AddStaticVehicleEx(406,-2062.4341,229.4171,37.2546,5.0382,1,1,60);
	AddStaticVehicleEx(428,-2585.7129,304.2542,4.9805,90.6046,4,75,60);
	AddStaticVehicleEx(415,-2585.5957,332.1286,4.6231,89.7205,105,105,60);
	AddStaticVehicleEx(415,-2586.2407,325.2163,4.6232,90.8791,105,105,60);
 	DynamicVehicle[0] = AddStaticVehicleEx(432,-531.2067,2583.2339,53.4267,180.8746,43,0,60);
	AddStaticVehicleEx(541,-538.9554,2570.7512,53.0398,270.3815,58,8,60);
	AddStaticVehicleEx(411,-520.4132,2577.1094,53.1412,270.8767,64,1,60);
	DynamicVehicle[1] = AddStaticVehicleEx(520,-574.0491,2594.8032,66.7163,265.6155,6,6,60);
    AddStaticVehicleEx(521,-2634.1628,934.0182,71.5249,209.4538,6,6,60);
    AddStaticVehicleEx(541,-1639.2192,673.6496,6.8123,1.4336,58,8,60); // bullet
	AddStaticVehicleEx(541,-1329.4565,-370.7014,13.7733,96.9065,58,8,60); // bullet
	AddStaticVehicleEx(409,-1515.4874,676.7874,6.9852,357.6958,1,1,60); // stretch
	AddStaticVehicleEx(451,-2024.0322,125.7576,28.7772,2.1620,59,86,60); // turismo
	AddStaticVehicleEx(419,-2486.6633,-168.9329,25.4148,88.9666,13,76,60); // esper
	AddStaticVehicleEx(419,-2486.7339,-174.4148,25.4147,88.9113,13,76,60); // esper
	AddStaticVehicleEx(419,-2487.1584,-180.1714,25.4148,90.3573,13,76,60); // esper
    AddStaticVehicleEx(483,-2514.6997,-1.5228,25.6082,265.4822,1,5,60); // camper
	AddStaticVehicleEx(483,-2515.3040,-34.4798,25.6079,267.4291,1,5,60); // camper
	AddStaticVehicleEx(483,-2531.9741,-36.2408,25.6095,314.9733,1,5,60); // camper

	AddStaticVehicle(495,306.9570,-1482.2303,24.8400,233.1085,155,155); // sandking1
	AddStaticVehicle(495,303.6547,-1486.7198,24.8145,233.0019,155,155); // sandking2
	AddStaticVehicle(495,300.3892,-1491.0708,24.8689,237.7599,155,155); // sandking3
	AddStaticVehicle(495,304.0120,-1499.4072,25.0198,235.3791,155,155); // sandking4
	AddStaticVehicle(495,300.1040,-1503.9828,25.0158,235.4641,155,155); // sandking5
	AddStaticVehicle(495,296.9784,-1508.8123,25.0416,235.3090,155,155); // sandking6
	AddStaticVehicle(495,293.7943,-1513.0653,25.0345,233.2047,155,155); // sandking7
	AddStaticVehicle(495,291.0664,-1517.5304,24.8016,239.5581,155,155); // sandking8
	AddStaticVehicle(495,287.7104,-1522.5862,24.8020,235.9923,155,155); // sandking9
	AddStaticVehicle(495,284.8776,-1526.6753,24.8158,240.8037,155,155); // sandking10
	AddStaticVehicle(495,281.7808,-1531.7882,24.8000,234.2768,155,155); // sandking11
	AddStaticVehicle(495,278.8519,-1535.7600,25.0218,235.9693,155,155); // sandking12
	AddStaticVehicle(495,297.9742,-1536.1544,25.0150,54.3853,155,155); // sandking13
	AddStaticVehicle(495,294.2304,-1540.3475,25.0162,54.9790,155,155); // sandking14

    AddStaticVehicle(495,291.3814,-1544.9767,25.0251,54.4217,155,155); // sandking15

	AddStaticVehicle(411,-2671.1235,600.7049,14.1809,181.9188,68,68); // infernus
	AddStaticVehicle(522,-2708.3818,590.2873,14.0254,304.0859,8,82); // nrg
	AddStaticVehicle(522,-2709.3315,593.4441,14.0255,291.5822,8,82); // nrg
	AddStaticVehicle(522,-2710.1287,596.5121,14.0241,307.0720,8,82); // nrg
	AddStaticVehicle(522,-2710.4766,601.4484,14.0258,307.8447,8,82); // nrg

	AddStaticVehicle(522,-2340.5168,-1675.6548,483.9260,355.1017,3,8); // nrg MC
	AddStaticVehicle(522,-2336.3188,-1678.0830,483.4767,337.8435,3,8); // nrg
	AddStaticVehicle(522,-2331.8174,-1680.3480,482.9688,325.6906,3,8); // nrg
    new tmpveh;
    // minigame vehicles
    tmpveh = AddStaticVehicleEx(470,221.5429,1919.9437,17.6327,183.6484,43,0,60); // patriot
    SetVehicleVirtualWorld(tmpveh,100);
	tmpveh = AddStaticVehicleEx(470,202.8172,1920.3741,17.6340,180.8207,43,0,60); // patriot
	SetVehicleVirtualWorld(tmpveh,100);
	tmpveh = AddStaticVehicleEx(470,193.2583,1919.8851,17.6313,181.9196,43,0,60); // patriot
	SetVehicleVirtualWorld(tmpveh,100);
	tmpveh = AddStaticVehicleEx(548,196.8907,1889.9961,19.3370,269.1864,1,1,60); // cargobob
	SetVehicleVirtualWorld(tmpveh,100);
	tmpveh = AddStaticVehicleEx(470,390.9443,2540.7163,16.5330,180.8130,43,0,60); // cargobob
	SetVehicleVirtualWorld(tmpveh,100);
	tmpveh = AddStaticVehicleEx(470,379.2018,2537.1709,16.5372,180.0072,43,0,60); // cargobob
	SetVehicleVirtualWorld(tmpveh,100);
	tmpveh = AddStaticVehicleEx(548,366.3601,2537.4761,18.2193,178.7667,1,1,60); // cargobob
	SetVehicleVirtualWorld(tmpveh,100);

	tmpveh = AddStaticVehicleEx(406,837.5032,835.9095,13.8524,13.0961,1,1,60); // dump
	SetVehicleVirtualWorld(tmpveh,19);

	tmpveh = AddStaticVehicleEx(452,-2319.4546,1414.3635,-0.2851,344.3549,1,5,60); // speeder
	SetVehicleVirtualWorld(tmpveh,19);
	tmpveh = AddStaticVehicleEx(452,-2327.1018,1414.6024,-0.4273,0.6293,1,5,60); // speeder
	SetVehicleVirtualWorld(tmpveh,19);

	tmpveh = AddStaticVehicle(432,373.6681,2539.5071,16.5697,178.3845,43,0); // rhino
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(432,359.9233,2541.5461,16.6771,178.6910,43,0); // rhino
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(432,325.5703,2544.7290,16.8192,177.2681,43,0); // rhino
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(432,291.6320,2549.3630,16.8321,179.1687,43,0); // rhino
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(432,208.6177,2631.9705,16.4944,224.6321,43,0); // rhino
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(29,205.7786,2647.7473,16.4877,218.0557,0,0); // spawn1
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(432,251.5705,2538.3928,16.8160,179.6736,43,0); // rhino
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(29,263.4238,2549.8994,16.8125,159.9561,0,0); // rhino
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(29,299.8577,2554.8755,16.8179,167.7896,0,0); // spawn
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(29,317.2473,2554.0605,16.8098,186.9031,0,0); // spawn
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(29,401.8852,2550.6406,16.4425,133.3226,0,0); // spawn
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(425,429.8305,2503.4944,17.1325,89.7644,6,6); // hunter
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(520,417.9825,2450.9741,17.4375,25.5387,6,6); // hydra
	SetVehicleVirtualWorld(tmpveh,500);
	tmpveh = AddStaticVehicle(520,392.7884,2444.7505,17.4457,343.5292,6,6); // hydra
	SetVehicleVirtualWorld(tmpveh,500);

	printf("[!] Vehicles: Successfully loaded vehicles (Last vehicle id is %d", tmpveh);

	laststatic = AddStaticVehicleEx(567,1840.6895,-1866.6567,13.1621,122.8723,88,64,60); // lowrider


   	CreateDynamicPickup(1242,15,-1639.3096,648.7068,7.1875,0,0,-1,100);
   	CreateDynamicPickup(1242,15,-1336.1764,450.4336,7.1875,0,0,-1,100);
 	CreateDynamicPickup(1242,15,-2619.4678,1416.4559,7.0938,0,0,-1,100);
   	CreateDynamicPickup(1242,15,-1696.4263,1203.3446,24.4367,0,0,-1,100);
   	CreateDynamicPickup(1242,15,-2026.6128,156.7185,29.0438,0,0,-1,100);
   	CreateDynamicPickup(1242,15,-2582.3040,325.1071,5.1797,0,0,-1,100);
   	CreateDynamicPickup(1242,15,-2719.9841,127.6854,7.0391,0,0,-1,100);
   	CreateDynamicPickup(1242,15,-2023.1393,1192.7888,45.4546,0,0,-1,100);
   	CreateDynamicPickup(321,15,-2687.4905,604.2843,14.4545,0,0,-1,100); //sniper - medic

	// RevolutionX Auto Object Loader v1
	DB_StreamObjects("PoliceExtras1");
	DB_StreamObjects("SFAExtras1");
	DB_StreamObjects("DAStunts1");
	DB_StreamObjects("GasRep1");
	DB_StreamObjects("ArmySpawn1");
	DB_StreamObjects("ArmySpawn2");
	DB_StreamObjects("SFAStuff");
	BuildObjects();
	
	AutoNewsChange(random(5));
	return 1;
}

public OnGameModeExit()
{
    printf("Serv Closed: Server is restarting/closing down.");
	SaveSettings();
	SaveProperties();
    for(new wid=0; wid<MAX_WEAPONS_DROPPED; wid++)
    {
       WeaponsDropped[wid][Pickupid]=-1;
       WeaponsDropped[wid][Model]=0;
       WeaponsDropped[wid][Ammo]=0;
       WeaponsDropped[wid][Ocuppied] = false;
    }


	for(new Egg=0;Egg < sizeof(EasterEgg); Egg++) DestroyDynamicPickup(EasterPickup[Egg]);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if (AnnText[i] != PlayerText:INVALID_TEXT_DRAW) PlayerTextDrawDestroy(i,AnnText[i]);
	}

	for(new playerid=0; playerid<MAX_PLAYERS; playerid++)
 	{
		for(new i=0; i<=HO2[playerid][ID]; i++)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, i))
			{
				HO2[playerid][eXist][i]=false;
				RemovePlayerAttachedObject(playerid, i);
			}
		}
		HO2[playerid][ID]=-1;
		//DestroyAllDynamicMapIcons();
	}


	TextDrawHideForAll(RXDM[0]);
	TextDrawDestroy(RXDM[0]);
	TextDrawHideForAll(RXDM[1]);
	TextDrawDestroy(RXDM[1]);
	TextDrawHideForAll(RXDM[2]);
	TextDrawDestroy(RXDM[2]);
	TextDrawHideForAll(RXDM[4]);
	TextDrawDestroy(RXDM[4]);
	TextDrawHideForAll(RXDM[5]);
	TextDrawDestroy(RXDM[5]);

	//SaveServerConfig();
	SendClientMessageToAll(COLOR_RED,"** The server is restarting, you have been kicked.");
	SendClientMessageToAll(COLOR_RED,"** Add The Server To your favourites. IP: 15.204.209.239:7777");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && Players[i][Logged] == true)
	    {
	        Save(i);
			TextDrawDestroy(WeaponData[i]);
	        Kick(i);
			printf("Server restart: players were kicked.");
   		}
		if(IsPlayerConnected(i) && isNeonON[i]==true )
		{
			RemoveNeon(i);
		}
		DestroyObject(fFPS[i]);
		DestroyObject(vFPS[i]);
		FPS_bool[i] = false;
   	}
	mysql_close();
	for(new x=0; x < MAX_VEHICLES; x++) DestroyVehicleEx(x);
	printf("-SERV: Closed-: RX-RACE-SYSTEM unloaded.");
	TextDrawHideForAll(racenotify);
	TextDrawDestroy(racenotify);
	
	return 1;
}



public OnPlayerRequestSpawn(playerid)
{
	if(Players[playerid][Registered] == true && Players[playerid][Logged] == false)
	{
	    GameTextForPlayer(playerid,"~g~You are not logged in!~n~~w~/login <password>",1200,3);
	    return 0;
	}

    // Lets try different spawns!
    new rspawn;
	switch(Players[playerid][Class])
	{
	    case 0 .. 6:
	    {
	        rspawn = random(2);
	        switch(rspawn)
	        {
	            case 0: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-1616.6124,677.5044,7.1875,209.7432,WEAPON:3,1,WEAPON:22,300,WEAPON:30,300);
	            case 1: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-1575.5916,679.5211,7.1875,148.9559,WEAPON:3,1,WEAPON:22,300,WEAPON:30,300);
	            case 2: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-1638.3148,661.4954,7.1875,274.6038,WEAPON:3,1,WEAPON:22,300,WEAPON:30,300);
	        }
	        
	    }
	    
	    case 7:
	    {
			rspawn = random(2);
			switch(rspawn)
			{
				case 0: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-1311.6315,479.3503,7.1875,146.8162,WEAPON:24,300,WEAPON:29,300,WEAPON:31,300);
				case 1: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-1390.1460,495.5077,18.2344,49.9953,WEAPON:24,300,WEAPON:29,300,WEAPON:31,300);
				case 2: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-1348.9432,455.6367,7.1875,312.3412,WEAPON:24,300,WEAPON:29,300,WEAPON:31,300);
			}
		}
		
		case 8:
		{
		    rspawn = random(2);
			switch(rspawn)
			{
				case 0: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-2660.5784,633.8297,14.4531,173.6633,WEAPON_SHOTGUN,1,WEAPON_MP5,300,WEAPON_DEAGLE,300);
				case 1: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-2697.7148,622.6210,14.4531,235.7038,WEAPON_SHOTGUN,1,WEAPON_MP5,300,WEAPON_DEAGLE,300);
				case 2: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-2695.3955,589.0006,14.4531,288.0310,WEAPON_SHOTGUN,1,WEAPON_MP5,300,WEAPON_DEAGLE,300);
			}
		}

		case 16:
		{
			rspawn = random(2);	
			switch(rspawn)
			{
				case 0: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-2660.5784,633.8297,14.4531,173.6633,WEAPON_SHOTGUN,1,WEAPON_MP5,300,WEAPON_DEAGLE,300);
				case 1: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-2697.7148,622.6210,14.4531,235.7038,WEAPON_SHOTGUN,1,WEAPON_MP5,300,WEAPON_DEAGLE,300);
				case 2: SetSpawnInfo(playerid,GetPlayerTeam(playerid), GetPlayerSkin(playerid) ,-2695.3955,589.0006,14.4531,288.0310,WEAPON_SHOTGUN,1,WEAPON_MP5,300,WEAPON_DEAGLE,300);
			}		
		}
	}

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	Players[playerid][Spawned] = true;
	PlayerPlaySound(playerid,1098,0,0,0);
	StopAudioStreamForPlayer(playerid);
	
	return 1;
}


public OnPlayerSpawn(playerid)
{
    Players[playerid][canrocket] = true;
    Players[playerid][canhealme] = true;
	SetPlayerTime(playerid, Players[playerid][mytime], 0 );
	for(new i=0;i<12;i++) GangZoneStopFlashForPlayer(playerid,i);
	if(IsPlayerNPC(playerid)) 
	{
 		new npcname[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, npcname, sizeof(npcname));
	    if(!strcmp(npcname, "Amanda", true))
	    {
     		new car;
     		car = CreateVehicle(451,0,0,0,0,12,6,0);
	      	PutPlayerInVehicle(playerid, car, 0);
	      	SetPlayerSkin(playerid, 12);
	      	SetPlayerColor(playerid, COLOR_PINK);
			format(xstring,sizeof xstring,"NPC Amanda [ID:%d]",playerid);
	      	Players[playerid][MyLabel] = CreateDynamic3DTextLabel(xstring, COLOR_PINK ,0,0,0.3,100,playerid);
	    }
	    
	    if(!strcmp(npcname, "NOOBZIR", true))
	    {
     		new car;
     		car = CreateVehicle(449,0,0,0,0,6,6,0);
	      	PutPlayerInVehicle(playerid, car, 0);
	      	SetPlayerSkin(playerid, 12);
	      	SetPlayerColor(playerid, COLOR_PINK);
			format(xstring,sizeof xstring,"NPC NOOBZIR [ID:%d]",playerid);
	      	Players[playerid][MyLabel] = CreateDynamic3DTextLabel(xstring, COLOR_PINK ,0,0,0.3,100,playerid);
	    }

		if(!strcmp(npcname,"HeliTours",true))
		{
			new v = CreateVehicle(487, 0.0, 0.0, 5.0, 0.0, 3, 3, -1);
			PutPlayerInVehicle(playerid,v,0);
			SetPlayerColor(playerid,0xFFFFFF00);
			format(xstring,sizeof xstring,"NPC HeliTours [ID:%d]",playerid);
	      	Players[playerid][MyLabel] = CreateDynamic3DTextLabel(xstring, COLOR_PINK ,0,0,0.3,100,playerid);
			format(xstring,sizeof xstring,"NPC %s (ID:%d) has joined {FFFF00}RevolutionX",npcname,playerid);
			SendClientMessageToAll(COLOR_ORANGE,xstring);
		}
		
		if(!strcmp(npcname,"BoatDriver",true))
		{
			new v = CreateVehicle(493, 0.0, 0.0, 5.0, 0.0, 3, 3, -1);
			PutPlayerInVehicle(playerid,v,0);
			SetPlayerColor(playerid,0xFFFFFF00);
			format(xstring,sizeof xstring,"NPC BoatDriver [ID:%d]",playerid);
	      	Players[playerid][MyLabel] = CreateDynamic3DTextLabel(xstring, COLOR_PINK ,0,0,0.3,100,playerid);
			format(xstring,sizeof xstring,"NPC %s (ID:%d) has joined {FFFF00}RevolutionX",npcname,playerid);
			SendClientMessageToAll(COLOR_ORANGE,xstring);
		}
		
		if(!strcmp(npcname,"Grant",true))
		{
		    SetPlayerSkin(playerid,79);
			SetPlayerColor(playerid,0xFFFFFF00);
			format(xstring,sizeof xstring,"NPC Grant [ID:%d]",playerid);
	      	Players[playerid][MyLabel] = CreateDynamic3DTextLabel(xstring, COLOR_PINK ,0,0,0.3,100,playerid);
			format(xstring,sizeof xstring,"NPC %s (ID:%d) has joined {FFFF00}RevolutionX",npcname,playerid);
			SendClientMessageToAll(COLOR_ORANGE,xstring);
			//SpawnPlayer(playerid);
		}
		

		
		if(!strcmp(npcname,"Pirate",true))
		{
			SetPlayerColor(playerid,0xFFFFFF00);
			format(xstring,sizeof xstring,"NPC Tom [ID:%d]",playerid);
	      	Players[playerid][MyLabel] = CreateDynamic3DTextLabel(xstring, COLOR_PINK ,0,0,0.3,100,playerid);
			format(xstring,sizeof xstring,"NPC %s (ID:%d) has joined {FFFF00}RevolutionX",npcname,playerid);
			SendClientMessageToAll(COLOR_ORANGE,xstring);
		}

	    return 1;
	}
	
	for(new i=0; i<=HO2[playerid][ID]; i++)
	{
		HO2[playerid][eXist][i]=HO2[playerid][eXist][i];
		if(HO2[playerid][eXist]==true)
		{
			SetPlayerAttachedObject(playerid,i,HO[playerid][i][modelID],HO[playerid][i][bone],HO[playerid][i][oX],HO[playerid][i][oY],HO[playerid][i][oZ],HO[playerid][i][rX],HO[playerid][i][rY],HO[playerid][i][rZ],HO[playerid][i][sX],HO[playerid][i][sY],HO[playerid][i][sZ]);
		}
	}

    Players[playerid][allowmg] = false;
	TextDrawHideForPlayer(playerid,WeaponData[playerid]);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);

	SetPlayerTeam(playerid,playerid);
	ResetPlayerWeapons(playerid);

	GivePlayerWeapon(playerid,WEAPON:weapons[playerid][0],500);
	GivePlayerWeapon(playerid,WEAPON:weapons[playerid][1],500);
	GivePlayerWeapon(playerid,WEAPON:weapons[playerid][2],500);
	if(Players[playerid][Skin] != -1) SetPlayerSkin(playerid, Players[playerid][Skin]);
	if(Players[playerid][favwpn] != 0) GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],300);
	gPlayerSpawned[playerid] = true;
	

	
	if(dm[playerid] != -1 && dmlock == false && DuelStarting[playerid] == false)
	{
		SetPlayerVirtualWorld(playerid, 145 + dm[playerid]);
		SetPlayerInterior(playerid, 0);
		ResetPlayerWeapons(playerid);
		SetPlayerTeam(playerid, playerid);	
		SetMinigame(playerid,145);
		if(dm[playerid] == 1)
		{
			GivePlayerWeapon(playerid, WEAPON_DEAGLE, 9900);
			GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 9900);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid,0xB0E0E6FF, "? Auto spawned in Deathmatch 1. If you want exit from dm use /leavedm");
			SetPlayerPos(playerid, 305.6879, 2469.3713, 16.4738);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);	
			return 1;
			
		}
		if(dm[playerid] == 2)
		{
			GivePlayerWeapon(playerid, WEAPON_DEAGLE, 9900);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid,0xB0E0E6FF, "? Auto spawned in Deathmatch 2. If you want exit from dm use /leavedm");	
			SetPlayerPos(playerid, -2719.7667, 651.2858, 66.0938);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);	
			return 1;
			
		
		}
		if(dm[playerid] == 3)
		{
			GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, 9900);
			GivePlayerWeapon(playerid, WEAPON_SILENCED, 9900);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid,0xB0E0E6FF, "? Auto spawned in Deathmatch 3. If you want exit from dm use /leavedm");	
			SetPlayerPos(playerid, 1559.869, 1269.8248, 10.8125);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);	
			return 1;
		}
		if(dm[playerid] == 4)
		{
			GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 9900);
			GivePlayerWeapon(playerid, WEAPON_SNIPER, 9900);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid,0xB0E0E6FF, "? Auto spawned in Deathmatch 4. If you want exit from dm use /leavedm");	
			SetPlayerPos(playerid, -1570.563, -262.0246, 14.1484);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);	
			return 1;
			
		}
		if(dm[playerid] == 5)
		{
			GivePlayerWeapon(playerid, WEAPON_DEAGLE, 9900);
			GivePlayerWeapon(playerid, WEAPON_SNIPER, 9900);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid,0xB0E0E6FF, "? Auto spawned in Deathmatch 5. If you want exit from dm use /leavedm");	
			SetPlayerPos(playerid, -2124.9307, -265.0076, 35.3203);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);	
			return 1;
			
		}
		if(dm[playerid] == 6)
		{
			GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 9900);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid,0xB0E0E6FF, "? Auto spawned in Deathmatch 6. If you want exit from dm use /leavedm");	
			SetPlayerPos(playerid, 1640.3093, -1078.3534, 23.8983);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);	
			return 1;
		}
		if(dm[playerid] == 7)
		{
			GivePlayerWeapon(playerid, WEAPON:26, 9900);
			GivePlayerWeapon(playerid, WEAPON:28, 9900);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid,0xB0E0E6FF, "? Auto spawned in Deathmatch 7. If you want exit from dm use /leavedm");	
			SetPlayerPos(playerid, 1640.3093, -1078.3534, 23.8983);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);	
			return 1;
		}
		if(dm[playerid] == 8)
		{
			GivePlayerWeapon(playerid, WEAPON:26, 9900);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid,0xB0E0E6FF, "? Auto spawned in Deathmatch 8. If you want exit from dm use /leavedm");	
			SetPlayerPos(playerid, 1640.3093, -1078.3534, 23.8983);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);	
			return 1;
		}
		if(dm[playerid] == 9)
		{
			GivePlayerWeapon(playerid, WEAPON:28, 9900);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid,0xB0E0E6FF, "? Auto spawned in Deathmatch 9. If you want exit from dm use /leavedm");	
			SetPlayerPos(playerid, 1640.3093, -1078.3534, 23.8983);
			SetPlayerHealth(playerid, 100.0);
			SetPlayerArmour(playerid, 100.0);	
			return 1;
		}
		SetPlayerVirtualWorld(playerid, 145 + dm[playerid]);
		return 1;
	}
 	Players[playerid][Minigame] = 0;




    if(Players[playerid][TDMJoined] == true)
    {
        new spawn = random(2);
        new tid = GetPlayerTeam(playerid);
        SetPlayerVirtualWorld(playerid,100);
  		if(tid == 1)
		{
			SetPlayerTeam(playerid,1);
			switch(spawn)
			{
			    case 0:
			    {
			        SetPlayerPos(playerid,163.6733,1841.8462,17.6406);
			    }

			    case 1:
			    {
			        SetPlayerPos(playerid,173.5843,1929.2157,18.2444);
			    }

			    case 2:
			    {
			        SetPlayerPos(playerid,214.8010,1864.4788,13.1406);
			    }
			}
			GameTextForPlayer(playerid,"~w~Team 1~n~~r~Respawn!",500,3);
			SetPlayerColor(playerid,COLOR_WHITE);
		}
		else
		{
			SetPlayerTeam(playerid,2);
			switch(spawn)
			{
   				case 0:
			    {
       				SetPlayerPos(playerid,402.3022,2535.3342,16.5454);
			    }

				case 1:
    			{
       				SetPlayerPos(playerid,377.3483,2477.2964,16.4844);
			    }

				case 2:
				{
    				SetPlayerPos(playerid,434.4670,2505.2729,16.4922);
				}

		    }
			GameTextForPlayer(playerid,"~w~Team 2~n~~r~Respawn!",500,3);
			SetPlayerColor(playerid,COLOR_RED);
		}
 		TogglePlayerControllable(playerid,true);
		SetPlayerArmour(playerid,100);
		return 1;
    }

    if(Players[playerid][VIP] >= 1)
	{
		SetPlayerArmour(playerid,100);
		GivePlayerWeapon(playerid,WEAPON:9,1);
	}

	else if(ReturnPlayerArmour(playerid) >= 100.0)
	{
		format(xstring, sizeof(xstring), "- AC Warning: Player %p (id:%d) might have spawned with illegal armour.",playerid,playerid);
		SendMessageToAdminsEx(COLOR_AC,1,xstring);
	}

 	TogglePlayerControllable(playerid,true);

	if(Players[playerid][Skin] != -1) SetPlayerSkin(playerid, Players[playerid][Skin]);
	if(GetPVarInt(playerid, "IsAnimsPreloaded") == 0)
	{
	    ApplyAnimation(playerid, "CRACK", "null", 0.0, false, false, false, false, 0);
    	SetPVarInt(playerid, "IsAnimsPreloaded", 1);
    }
    
    SetMyColor(playerid);
    
    // Spawn protection
    if(Players[playerid][SpawnProtect] == false)
    {
	   	Players[playerid][SpawnProtect] = true;
		SetTimerEx("DisableSpawnProtection",3000,false,"d",playerid);
		SetPlayerChatBubble(playerid,"Spawn Protection ON",COLOR_WHITE,100,5000); //2 mins
	}
   	return 1;
}

forward DisableSpawnProtection(playerid);
public DisableSpawnProtection(playerid)
{
	Players[playerid][SpawnProtect] = false;
	SetPlayerChatBubble(playerid,"Spawn Protection OFF",COLOR_WHITE,100,5000); //2 mins
	SetPlayerHealth(playerid, 100);
}

public OnPlayerRequestClass(playerid, classid)
{
	SetPlayerPos(playerid,824.4836,-1870.8888,12.8672);
	SetPlayerCameraPos(playerid,830.2847,-1868.0452,12.8672);
	SetPlayerCameraLookAt(playerid,824.4836,-1870.8888,12.8672);
	SetPlayerInterior(playerid,0);
	SetPlayerFacingAngle(playerid,293.6875);

	switch (classid)
	{
		case 0:
        {
	        GameTextForPlayer(playerid,"~b~Cop",500,6);
	        SetPlayerColor(playerid,COLOR_LIGHTBLUE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 0;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
    	case 1:
        {
	        GameTextForPlayer(playerid,"~b~Cop",500,6);
	        SetPlayerColor(playerid,COLOR_LIGHTBLUE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 1;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
    	case 2:
        {
	        GameTextForPlayer(playerid,"~b~Cop",500,6);
	        SetPlayerColor(playerid,COLOR_LIGHTBLUE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 2;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
    	case 3:
        {
	        GameTextForPlayer(playerid,"~b~Cop",500,6);
	        SetPlayerColor(playerid,COLOR_LIGHTBLUE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 3;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
    	case 4:
        {
	        GameTextForPlayer(playerid,"~b~Cop",500,6);
	        SetPlayerColor(playerid,COLOR_LIGHTBLUE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 4;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
    	case 5:
        {
	        GameTextForPlayer(playerid,"~b~Cop",500,6);
	        SetPlayerColor(playerid,COLOR_LIGHTBLUE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 5;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
   		case 6:
        {
	        GameTextForPlayer(playerid,"~b~Cop",500,6);
	        SetPlayerColor(playerid,COLOR_LIGHTBLUE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 6;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
     	case 7:
        {
	        GameTextForPlayer(playerid,"~g~Pimp",500,6);
	        SetPlayerColor(playerid,COLOR_PINK);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 7;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
    	case 8:
        {
	        GameTextForPlayer(playerid,"~p~Pimp",500,6);
	        SetPlayerColor(playerid,COLOR_PINK);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 8;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }

    	case 9:
        {
	        GameTextForPlayer(playerid,"~p~Pimp",500,6);
	        SetPlayerColor(playerid,COLOR_PINK);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 9;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
        
		case 10:
        {
	        GameTextForPlayer(playerid,"~p~Pimp",500,6);
	        SetPlayerColor(playerid,COLOR_PINK);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 10;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }

		case 11:
        {
	        GameTextForPlayer(playerid,"~w~Sniper",500,6);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 11;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
        
 		case 12:
        {
	        GameTextForPlayer(playerid,"~w~Sniper",500,6);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 12;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
        
 		case 13:
        {
	        GameTextForPlayer(playerid,"~w~Sniper",500,6);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 13;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
        
 		case 14:
        {
	        GameTextForPlayer(playerid,"~w~Sniper",500,6);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 14;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }
        
 		case 15:
        {
	        GameTextForPlayer(playerid,"~r~Hitman",500,6);
	        SetPlayerColor(playerid,COLOR_RED);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 15;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
        }

		case 16 .. 18:
		{
			GameTextForPlayer(playerid,"~g~Medic",500,6);
	        SetPlayerColor(playerid,COLOR_GREEN);
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	        Players[playerid][Class] = 16;
			TD_GetPlayerWeaponData(playerid,Players[playerid][Class]);
		}
	
	


	}
	return 1;
}

TD_GetPlayerWeaponData(playerid,classid)
{
	new str[128];
	switch(classid)
	{
		case 0:
		{
			weapons[playerid][0] 	= 	3	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	22	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	28	;
			ammo[playerid][2] 	= 	300	;
		}
		case 1:
		{
			weapons[playerid][0] 	= 	3	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	29	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	31	;
			ammo[playerid][2] 	= 	300	;
		}
		case 2:
		{
			weapons[playerid][0] 	= 	3	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	24	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	25	;
			ammo[playerid][2] 	= 	300	;
		}
		case 3:
		{
			weapons[playerid][0] 	= 	3	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	29	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	30	;
			ammo[playerid][2] 	= 	300	;
		}
		case 4:
		{
			weapons[playerid][0] 	= 	3	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	32	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	26	;
			ammo[playerid][2] 	= 	300	;
		}
		case 5:
		{
			weapons[playerid][0] 	= 	3	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	24	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	29	;
			ammo[playerid][2] 	= 	300	;
		}
		case 6:
		{
			weapons[playerid][0] 	= 	3	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	22	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	26	;
			ammo[playerid][2] 	= 	300	;
		}
		case 7:
		{
			weapons[playerid][0] 	= 	9	;
			ammo[playerid][0] 	= 	300	;
			weapons[playerid][1] 	= 	24	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	=  28	;
			ammo[playerid][2] 	= 	300	;
		}
		case 8:
		{
			weapons[playerid][0] 	= 	9	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	24	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	28	;
			ammo[playerid][2] 	= 	150	;
		}
		case 9: //23,300,34,300,0,0
		{
			weapons[playerid][0] 	= 	9	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	24	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	28	;
			ammo[playerid][2] 	= 	150	;
		}
		case 10: //5,1,24,300,28,50
		{
			weapons[playerid][0] 	= 	9	;
			ammo[playerid][0] 	= 	1	;
			weapons[playerid][1] 	= 	24	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	28	;
			ammo[playerid][2] 	= 	150	;
		}
		case 11: //24,300,28,300,34,100
		{
			weapons[playerid][0] 	= 	23	;
			ammo[playerid][0] 	= 	300	;
			weapons[playerid][1] 	= 	34	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	0	;
			ammo[playerid][2] 	= 	0	;
		}
		case 12: //10,1,22,350,27,50
		{
			weapons[playerid][0] 	= 	23	;
			ammo[playerid][0] 	= 	300	;
			weapons[playerid][1] 	= 	34	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	0	;
			ammo[playerid][2] 	= 	0	;
		}
		case 13: //10,1,22,350,27,50
		{
			weapons[playerid][0] 	= 	23	;
			ammo[playerid][0] 	= 	300	;
			weapons[playerid][1] 	= 	34	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	0	;
			ammo[playerid][2] 	= 	0	;
		}
		case 14: //10,1,22,350,27,50
		{
			weapons[playerid][0] 	= 	23	;
			ammo[playerid][0] 	= 	300	;
			weapons[playerid][1] 	= 	34	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	0	;
			ammo[playerid][2] 	= 	0	;
		}
		case 15: //10,1,22,350,27,50
		{
			weapons[playerid][0] 	= 	28	;
			ammo[playerid][0] 	= 	300	;
			weapons[playerid][1] 	= 	24	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	34	;
			ammo[playerid][2] 	= 	300	;
		}
		
		case 16: //10,1,22,350,27,50
		{
			weapons[playerid][0] 	= 	25	;
			ammo[playerid][0] 	= 	300	;
			weapons[playerid][1] 	= 	29	;
			ammo[playerid][1] 	= 	300	;
			weapons[playerid][2] 	= 	24	;
			ammo[playerid][2] 	= 	300	;
		}
	}
	format(str,sizeof str,"~w~Weapons:");
	for(new i = 0; i< 3; i++)
	{
		format(str,sizeof str,"%s~n~%d) %W - %d Ammo",str,i+1,weapons[playerid][i],ammo[playerid][i]);
	}
	TextDrawSetString(WeaponData[playerid],str);
	TextDrawShowForPlayer(playerid,WeaponData[playerid]);
}


public OnPlayerConnect(playerid)
{
	Players[playerid][ReportsTD] = false;
    GetPlayerIp(playerid, g_pIP[playerid], 16);
    g_ConnectionDate[playerid] = gettime();
    g_DialogPage[playerid] = 0;
    g_Target[playerid][0] = '\0';
	SetPlayerColor(playerid,COLOR_WHITE);
	if(GetPlayerCountExNPC() > Server[precord])
	{
		Server[precord] = GetPlayerCountExNPC();
		// new record
	}

	TogglePlayerClock(playerid, true);
	SetPlayerTime(playerid, 10, 0);
	Players[playerid][DeliveryTotal] = 0;
	Players[playerid][mgVariable] = 0;
	Players[playerid][DeliveryID] = -1;
	Players[playerid][Delivery] = false;
	GetPlayerName(playerid, NickName[playerid], 24);
	CreateTextTT(playerid);
	MyLastTT[playerid] = 0;
	//rsplitCP[playerid] = 0;
	MyLastTT[playerid] = 0;
	TT_ID[playerid] = -1;
	RaceCheckpoint[playerid] = -1;
	dm[playerid]=-1;
	gPlayerSpawned[playerid] = false;
    DuelInvitation[playerid] = -1;
	DuelWeapon[playerid][0] = 0;
	DuelWeapon[playerid][1] = 0;
	DuelSpectating[playerid] = -1;
 	IsDueling[playerid] = false;
	DuelDisable[playerid] = false;
	DuelWaiting[playerid] = false;
	DuelArenaCreated[playerid] = false;
	DuelStarting[playerid] = false;
	
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(DuelIgnored[i][playerid] == true)
	    {
			DuelIgnored[i][playerid] = false;
		}
	}
	Players[playerid][allowmg] = false;
	GameTextForPlayer(playerid,"~w~Revolution~b~X~n~~w~DM/Stunt/Race/Fun~n~~n~revolutionxsamp.com~n~Join our /discord",3000,3);
	
	
	GangZoneShowForPlayer(playerid,spawnZones[0],0xFF000088);
    GangZoneShowForPlayer(playerid,spawnZones[1],0xFF000088);
    GangZoneShowForPlayer(playerid,spawnZones[2],0xFF000088);
    GangZoneShowForPlayer(playerid,spawnZones[3],0xFF000088);
    GangZoneShowForPlayer(playerid,spawnZones[4],0xFF000088); // worker
    GangZoneShowForPlayer(playerid,spawnZones[5],0xFF000088); // HITMAN
    GangZoneShowForPlayer(playerid,spawnZones[6],0xFF000088); //pornstar
    GangZoneShowForPlayer(playerid,spawnZones[7],0xFF000088); //old
    GangZoneShowForPlayer(playerid,spawnZones[8],0xFF000088);
    GangZoneShowForPlayer(playerid,spawnZones[9],0xFF000088); //medic
    GangZoneShowForPlayer(playerid,spawnZones[10],0xFF000088);
    GangZoneShowForPlayer(playerid,spawnZones[11],0xFF000088);

	_B@ResetKey(playerid);
	_B@ResetValue(playerid);

	TDrif[playerid] = false;
	TDriftPointsNow[playerid] = 0; PlayerDriftCancellation[playerid] = 0;
	DriftBonus[playerid]=1;
	DriftPointsNow[playerid] = 0;
	TimeLeft[playerid] = 180;
	DriftID[playerid] = -1;

	for(new x=0; x< sizeof(EasterEgg);x++) MyEggs[playerid][x]=0;
	AnnText[playerid] = CreatePlayerTextDraw(playerid,320.000000, 150.000000,"_");
	PlayerTextDrawAlignment(playerid,AnnText[playerid],TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,AnnText[playerid],0x00000033);
	PlayerTextDrawFont(playerid,AnnText[playerid],TEXT_DRAW_FONT_3);
	PlayerTextDrawLetterSize(playerid,AnnText[playerid],0.450000, 1.500000);//0.299999,1.000000
	PlayerTextDrawColour(playerid,AnnText[playerid],0xffffffff);
	PlayerTextDrawSetOutline(playerid,AnnText[playerid],1);
	PlayerTextDrawSetProportional(playerid,AnnText[playerid],true);
	PlayerTextDrawSetShadow(playerid,AnnText[playerid],1);
	//TextDrawShowForPlayer(playerid, RXDM[0]);
	TextDrawShowForPlayer(playerid, RXDM[1]);
	//TextDrawShowForPlayer(playerid, RXDM[2]);
	TextDrawShowForPlayer(playerid, RXDM[3]);
	TextDrawShowForPlayer(playerid, RXDM[4]);
	TextDrawShowForPlayer(playerid, RXDM[5]);

	Players[playerid][myramp] = 0;
	

	RemoveBuildingForPlayer(playerid, 1302, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1209, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 955, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 956, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1775, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1776, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1977, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 10983, -2076.6484, 222.8516, 31.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 11143, -2076.6484, 222.8516, 31.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 11339, -2079.9531, 159.2031, 30.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 11340, -2079.9531, 159.2031, 30.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 11279, -2038.7500, 150.7109, 31.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 11387, -2038.7500, 150.7109, 31.1953, 0.25);
	//RemoveBuildingForPlayer(playerid, 13756, 1349.2969, -809.1406, 68.8828, 0.25);
	
	RemoveBuildingForPlayer(playerid, 10812, -1546.2969, -656.2188, 25.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 10814, -1146.5547, -145.3047, 17.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3814, -1272.0781, -660.3281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3814, -1334.4766, -660.3281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3814, -1396.8750, -660.3281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3814, -1459.2734, -660.3281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 11223, -2049.1719, 250.3203, 33.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3815, -1272.0781, -660.3281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3815, -1334.4766, -660.3281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3815, -1396.8750, -660.3281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3815, -1459.2734, -660.3281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3865, -2063.2422, 258.7500, 35.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 3869, -2123.2891, 269.5313, 41.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 3869, -2126.2109, 231.9766, 41.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3869, -2116.6797, 131.0078, 42.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3865, -2063.0156, 247.9453, 35.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 3865, -2057.7500, 249.9531, 35.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 3865, -2057.7031, 229.8047, 35.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 3865, -2059.5313, 256.5234, 37.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3888, -2128.1797, 171.4609, 42.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3888, -2066.3594, 301.9141, 42.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2120.7656, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2103.3281, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2032.2891, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2022.0859, 347.1328, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2022.0859, 364.5781, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3868, -2049.7344, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 10811, -1546.2969, -656.2188, 25.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -1365.1563, -643.6875, 25.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 3887, -2066.3594, 301.9141, 42.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2120.7656, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2103.3281, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2049.7344, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2032.2891, 336.8672, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2022.0859, 347.1328, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3867, -2022.0859, 364.5781, 49.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3887, -2128.1797, 171.4609, 42.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3866, -2116.6797, 131.0078, 42.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3864, -2082.5391, 153.5469, 40.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 3864, -2111.8828, 172.4688, 40.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 3872, -2116.7500, 177.0781, 40.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3872, -2107.0313, 226.0391, 40.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 10984, -2126.1563, 238.6172, 35.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3864, -2102.2109, 230.7031, 40.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3866, -2126.2109, 231.9766, 41.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 10986, -2130.0547, 275.5625, 35.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 3866, -2123.2891, 269.5313, 41.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 3864, -2113.3125, 268.5078, 40.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 3872, -2118.1328, 263.8438, 41.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 10985, -2099.2734, 292.9141, 35.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3864, -2059.3438, 205.5313, 40.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3872, -2048.4531, 265.0938, 41.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 3864, -2041.7500, 265.1016, 40.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 966, -1572.2031, 658.8359, 6.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 967, -1572.7031, 657.6016, 6.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 11281, -1680.6016, 417.9453, 8.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 11294, -1708.1875, 376.8359, 11.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 11296, -1718.9375, 388.0859, 11.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 11295, -1718.9375, 388.0859, 11.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 11292, -1710.7891, 402.5313, 7.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 11293, -1708.1875, 376.8359, 11.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1685.9688, 409.6406, 6.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 10789, -1680.6016, 417.9453, 8.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1679.3594, 403.0547, 6.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1681.8281, 413.7813, 6.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1532, -1677.0078, 431.9297, 6.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1675.2188, 407.1953, 6.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1676.5156, 419.1172, 6.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1669.9063, 412.5313, 6.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1672.1328, 423.5000, 6.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 1686, -1665.5234, 416.9141, 6.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 11417, -1650.6328, 423.1641, 11.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 10814, -1146.5547, -145.3047, 17.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 10840, -1666.1250, -62.0781, 10.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 10843, -1711.4688, -107.5703, 10.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 3814, -1178.1016, -114.8281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3814, -1217.1406, -67.1719, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 10892, -1711.4688, -107.5703, 10.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 10910, -1681.1094, -24.6797, 5.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 10911, -1711.2031, -47.7109, 5.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 10912, -1666.1250, -62.0781, 10.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 10913, -1731.6563, -18.6719, 8.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 10914, -1706.4766, 13.0156, 7.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3815, -1178.1016, -114.8281, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 3815, -1217.1406, -67.1719, 19.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 10845, -1711.2031, -47.7109, 5.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 10847, -1731.6563, -18.6719, 8.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 10844, -1681.1094, -24.6797, 5.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 10831, -1706.4766, 13.0156, 7.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 10832, -1737.9453, 37.5391, 4.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 9870, -2655.2422, 1372.8594, 17.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 9618, -2655.2422, 1372.8594, 17.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 9817, -2655.2422, 1372.8594, 17.7266, 0.25);

	
	// Desert Airport RemoveFromBanList
	
	RemoveBuildingForPlayer(playerid, 3345, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3368, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 230.5234, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3369, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 284.2656, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3367, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16600, 435.6250, 2532.0859, 20.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 16707, 302.2188, 2693.5703, 19.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 108.0469, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 161.7891, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 188.6563, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 134.9141, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 215.5313, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 242.3984, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 269.2656, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 296.1406, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 123.0469, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 176.7891, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 230.5234, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 284.2656, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 149.9141, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 176.7891, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 230.5234, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 203.6563, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 257.3984, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3271, 284.2656, 2641.4844, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16675, 302.2188, 2693.5703, 19.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 323.0078, 2411.3828, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3269, 349.8750, 2438.2500, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 352.7734, 2444.4063, 15.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 346.8984, 2435.5547, 16.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 345.2422, 2432.1328, 16.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 346.4141, 2445.2969, 15.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 357.5938, 2449.6172, 15.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 864, 364.2266, 2450.7578, 15.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 338.0078, 2587.7422, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 3270, 311.1328, 2614.6172, 15.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 410.8281, 2528.5703, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 409.8047, 2529.6328, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 408.7188, 2530.7656, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 407.1563, 2530.4688, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, 400.1172, 2543.5703, 15.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, 407.8828, 2532.0078, 16.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 16601, 435.6250, 2532.0859, 20.1797, 0.25);

	
		
	
	Players[playerid][vehDuel] = false;
	Players[playerid][VehRequest] = INVALID_PLAYER_ID;
	Players[playerid][fake_kill_warns] = 0;
	

	building[0] = CreatePlayerObject(playerid,11340, -2079.95, 159.20, 30.87,    0.00, 0.00, 0.00);
	building[1] = CreatePlayerObject(playerid,10983, -2076.65, 222.85, 31.22,   0.00, 0.00, 0.00);
	SetPlayerObjectMaterial(playerid,building[0], 0, 10972, "groundbit_sfse", "desgreengrass", 0);
	SetPlayerObjectMaterial(playerid,building[1], 1, 10972, "groundbit_sfse", "desgreengrass", 0);
	building[2] = CreatePlayerObject(playerid,11387, -2038.75, 150.71, 31.20,   0.00, 0.00, 0.00);
	SetPlayerObjectMaterial(playerid,building[2], 12, 3845, "boxhses_sfsx", "shingles1", 0);
	SetPlayerObjectMaterial(playerid,building[2], 0, 3845, "boxhses_sfsx", "shingles1", 0);
	SetPlayerObjectMaterial(playerid,building[2], 6, 11139, "firehouse_sfse", "ws_tunnelwall2", 0);
	SetPlayerObjectMaterial(playerid,building[2], 11, 5848, "mainlcawn", "fakestone1_LA", 0);
	for(new i=0; i<=HO2[playerid][ID]; i++)
	{
		HO2[playerid][eXist][i]=false;
	}
	HO2[playerid][ID]=-1;

	PlayerPlaySound(playerid,1097,0,0,0);
	Players[playerid][score] = 0;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		CanTP[i][playerid] = false;
		CanTP[playerid][i] = false;
	}
	//pms[playerid] = true;
	if(IsValidDynamic3DTextLabel(racelabel[playerid]))  DestroyDynamic3DTextLabel(racelabel[playerid]);

	SetPlayerVirtualWorld(playerid,0);
	SendDeathMessage(INVALID_PLAYER_ID,playerid,200);

	ResetVariables(playerid); // The reseting has moved here.

	BuildInitial(playerid);

	new ip[16];
	GetPlayerIp(playerid,ip,sizeof ip);

	static
		s_iJoinSeq,
		s_szIP[16]
	;
	GetPlayerIp(playerid, s_szIP, sizeof(s_szIP));


	SetPVarString(playerid,"IP",ip);

	strdel(Players[playerid][IP],0,16);


	SpeedBoostMultiplier[playerid] = 1.5;
	SpeedBoostDisabled[playerid] = false;

	if(!IsPlayerNPC(playerid))
	{
		new name[21];
		GetPlayerName(playerid,name,sizeof name);
		
		for(new propid; propid < PropertiesAmount; propid++)
		{
			if(PropInfo[propid][PropIsBought] == 1)
			{
	  			if(strcmp(PropInfo[propid][PropOwner],name, true) == 0)
				{
	   				Players[playerid][Earnings] += PropInfo[propid][PropEarning];
				    PlayerProps[playerid]++;
				}
			}
		}


		g_eaJoinLog[s_iJoinSeq][e_iIP] = s_szIP[0] = IpToInt(s_szIP);
		g_eaJoinLog[s_iJoinSeq][e_iTimeStamp] = GetTickCount();

		s_iJoinSeq = ++s_iJoinSeq % MAX_JOIN_LOGS;

		s_szIP[1] = s_szIP[2] = 0;

		for(new i = 0; i < (MAX_JOIN_LOGS - 1); ++i)
		{
			if(g_eaJoinLog[i][e_iIP] != s_szIP[0]) {
				continue;
			}
			s_szIP[3] = GetTickCount();

			if(floatround(floatabs(s_szIP[3] - g_eaJoinLog[i][e_iTimeStamp])) < MAX_THRESHOLD) {
				if(floatround(floatabs(s_szIP[3] - g_eaJoinLog[i + 1][e_iTimeStamp])) < MAX_THRESHOLD) {
					s_szIP[2] += floatround(floatabs(g_eaJoinLog[i][e_iTimeStamp] - g_eaJoinLog[i + 1][e_iTimeStamp]));
					s_szIP[1] += 1;
				}
			}
		}

        OnPlayerFloodControl(playerid, s_szIP[1], s_szIP[2]);

		

		format(Players[playerid][IP],sizeof ip,"%s",ip);
		
		


		if(IsPlayerNPC(playerid))
		{
			if(strcmp(ip,"15.204.209.239") != 0)
			{
				Kick(playerid);
				print("Kicked bot for possible attack");
				return 1;
			}
		}





		format(xstring,sizeof xstring,"%s (ID:%d) joined {FFDD00}RevolutionX DM/Stunt/Race/Fun!",name,playerid);
		SendClientMessageToAll(COLOR_ORANGE,xstring);
		format(xstring,sizeof xstring,":small_blue_diamond: %s (ID:%d) joined RevolutionX DM/Stunt/Race/Fun!",name,playerid);
 		DCC_SendChannelMessage(DCGen,xstring);
		
        format(xstring,sizeof xstring,">>>{FFFFFF} Welcome to RevolutionX v%s, %s !",SERVERVERSION, name);
        SendClientMessage(playerid,COLOR_ORANGE, xstring);
        SendClientMessage(playerid,COLOR_ORANGE,">>>{FFFFFF} Website: http://revolutionxsamp.com || Discord: http://discord.gg/mCznbcV3va");
		SendClientMessage(playerid,COLOR_ORANGE,">>>{FFFFFF} You can spawn a car with /car. To see our stunts and teleports, type /teles");
       // SendClientMessage(playerid,COLOR_ORANGE,">>>{FFFFFF} SPECIAL PROMOTION: Donate to the Server and get the Professional Member Status!");

		/* start testgeolite
		
        new country[256], city[256], isp[256];
        GetPlayerCountry(playerid, country, sizeof(country));
        GetPlayerISP(playerid, isp, sizeof(isp));
        GetPlayerCity(playerid, city, sizeof(city));
        format(xstring, sizeof(xstring), "14 (NEW) GEOLITE-LOOKUP Name: %s (%d): Country: %s | ISP: %s | City: %s", name , playerid, country, isp, city);
		IRC_GroupSay(gGroupID,IRC_ADMIN,xstring);
		
		 end testgeolite*/

		new data[4][50]; //The data strings
		format(xstring, sizeof(xstring), "SELECT `AdminName`, `Reason`, `IPAddress` FROM `bans` WHERE `IPAddress` = '%s' OR `Username` = '%s'", ip,name); //Selects the line where the playername is the player
		mysql_query(SQL,xstring);
		if(cache_num_rows() > 0) // banned!
		{
		    if(Server[banonevade] == false)
		    {
			
				cache_get_value_name(0,"AdminName",data[0]);
				cache_get_value_name(0,"Reason",data[1]);
				cache_get_value_name(0,"IPAddress",data[2]);
				SendClientMessage(playerid,COLOR_RED,"** You have been kicked (You Are Banned)");
				format(xstring,sizeof xstring,"** You were banned by Admin %s\n",data[0]);
				SendClientMessage(playerid,COLOR_RED,xstring);
				format(xstring,sizeof xstring,"Reason: %s",data[1]);
				SendClientMessage(playerid,COLOR_RED,xstring);
				SendClientMessage(playerid,COLOR_RED,"** You can appeal your ban at http://revolutionxsamp.com");
	   			format(xstring,sizeof xstring,"[Anti-Cheat] %s (ID:%d) was kicked for ban evasion.",name,playerid);
	   			SendMessageToAdmins(playerid,1,COLOR_AC,xstring);
	     		Kick(playerid);
	     		return 1;
     		}
     		else
     		{
				cache_get_value_name(0,"AdminName",data[0]);
				cache_get_value_name(0,"Reason",data[1]);
				cache_get_value_name(0,"IPAddress",data[2]);
				SendClientMessage(playerid,COLOR_RED,"** You have been banned (Ban Evasion)");
				format(xstring,sizeof xstring,"** You were banned by Admin %s\n",data[0]);
				SendClientMessage(playerid,COLOR_RED,xstring);
				format(xstring,sizeof xstring,"Reason: %s",data[1]);
				SendClientMessage(playerid,COLOR_RED,xstring);
				SendClientMessage(playerid,COLOR_RED,"** You can appeal your ban at http://revolutionxsamp.com");
	   			format(xstring,sizeof xstring,"[Anti-Cheat] %s (ID:%d) was kicked for ban evasion (With a New IP)",name,playerid);
	   			SendMessageToAdmins(playerid,1,COLOR_AC,xstring);
	     		Kick(playerid);
				if(Players[playerid][Registered] == true) Players[playerid][Banned] = true;
				AddPlayerBan(playerid,"Evade","AutoBan");
				BanEx(playerid,"Evader");
				return 1;
     		}
		}

		format(xstring, sizeof(xstring), "SELECT * FROM `ips` WHERE `Username` = '%s' AND `IPAddress` = '%s'", name, ip); //Check
		mysql_query(SQL,xstring);
		if(cache_num_rows() == 0)
		{
			format(xstring, sizeof(xstring), "INSERT INTO `ips` (`Username`, `IPAddress`) VALUES ('%s','%s')",name,ip);
			mysql_query(SQL,xstring);
		}


		format(xstring,sizeof xstring,"api.ipinfodb.com/v3/ip-city/?key=%s&ip=%s",IPAPI_KEY,ip);
		HTTP(playerid,HTTP_GET,xstring,"","IPInfoDB_Connect");
		

		format(xstring, sizeof(xstring), "SELECT * FROM `users` WHERE `Name` = '%s'", name);
		mysql_query(SQL,xstring);
		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* You are not registered! Type /register to register.");
		Players[playerid][Registered] = true;
		format(xstring, sizeof(xstring), "SELECT * FROM `users` WHERE `Name` = '%s' AND `IPAddress` = '%s'", name, ip);
	 	mysql_query(SQL,xstring);
	 	
		if(cache_num_rows() != 0)
		{
			Login(playerid);

			switch(Players[playerid][AdminLvl])
			{

				case 0:
				{
					format(xstring,sizeof xstring,"* Welcome back, %p (userID %d)",playerid, Players[playerid][userID]);
					SendClientMessage(playerid,COLOR_ORANGE,xstring);
				}

			    case 1 .. 6:
			    {
					format(xstring,sizeof xstring,"Admin %s automatically logged in. (Level %d)",name,Players[playerid][AdminLvl]);
     				SendMessageToAdmins(playerid,9,COLOR_AMSG,xstring);
					format(xstring,sizeof xstring,"* Welcome back, Admin %s (Level %d - userID %d)",name,Players[playerid][AdminLvl], Players[playerid][userID]);
					SendClientMessage(playerid,COLOR_ORANGE,xstring);
					format(xstring,sizeof xstring,"Admin Info:{FFFFFF} You have %d objects on the server. You can stream them with /camo, or delete them with /damo",GetTotalCreatedObjects(playerid));
					SendClientMessage(playerid,COLOR_ORANGE,xstring);
			    }
			    
			  	case 7 .. 8:
			    {
					format(xstring,sizeof xstring,"High Admin %s automatically logged in. (Level %d)",name,Players[playerid][AdminLvl]);
     				SendMessageToAdmins(playerid,9,COLOR_AMSG,xstring);
					format(xstring,sizeof xstring,"* Welcome back, High Admin %s (Level %d - userID %d)",name,Players[playerid][AdminLvl], Players[playerid][userID]);
					SendClientMessage(playerid,COLOR_ORANGE,xstring);
					format(xstring,sizeof xstring,"Admin Info:{FFFFFF} You have %d objects on the server. You can stream them with /camo, or delete them with /damo",GetTotalCreatedObjects(playerid));
					SendClientMessage(playerid,COLOR_ORANGE,xstring);
			    }

			    case 9:
			    {
					format(xstring,sizeof xstring,"Management %s automatically logged in. (Level %d)",name,Players[playerid][AdminLvl]);
     				SendMessageToAdmins(playerid,9,COLOR_AMSG,xstring);
					format(xstring,sizeof xstring,"* Welcome back, Management %s (Level %d - userID %d)",name,Players[playerid][AdminLvl], Players[playerid][userID]);
					SendClientMessage(playerid,COLOR_ORANGE,xstring);
					SendClientMessage(playerid,COLOR_PURPLE,"* Management Info:{FFFFFF} You can manage the server with /cpanel");
					format(xstring,sizeof xstring,"Admin Info:{FFFFFF} You have %d objects on the server. You can stream them with /camo, or delete them with /damo",GetTotalCreatedObjects(playerid));
					SendClientMessage(playerid,COLOR_ORANGE,xstring);
			    }

			    case 10:
			    {
					format(xstring,sizeof xstring,"* Welcome back, Server Owner %s (Level %d - userID %d)",name,Players[playerid][AdminLvl], Players[playerid][userID]);
					SendClientMessage(playerid,COLOR_ORANGE,xstring);
					SendClientMessage(playerid,COLOR_PURPLE,"Management Info:{FFFFFF} You can manage the server with /cpanel");
					format(xstring,sizeof xstring,"Admin Info:{FFFFFF} You have %d objects on the server. You can stream them with /camo, or delete them with /damo",GetTotalCreatedObjects(playerid));
					SendClientMessage(playerid,COLOR_ORANGE,xstring);
			    }
			}


		}
		else
		{
			SendClientMessage(playerid,COLOR_WHITE,"* Automatic Login {FF0000}Failed.");
			ShowPlayerDialog(playerid,100,DIALOG_STYLE_PASSWORD,"Login","Type your password below.","Login","");

		}
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	if(Players[playerid][Minigame] == 800)
	{
		// CTC CheckPlayerState
		if(CTFMembers == 1)
		{
			CTFLoaded = false;	
			ActiveCTF = false;
			CTFToken = 50;
			CTFMembers = 0;
			
			SendClientMessageToAll(COLOR_GREY,"* CTF has closed because the last player left the server.");
		}		
	}	
	
	Players[playerid][ReportsTD] = true;
	TextDrawHideForPlayer(playerid,Reports[0]);
	TextDrawHideForPlayer(playerid,Reports[0]);
	Players[playerid][DeliveryCP] = -1;
	for(new x = 1; x<9; x++)
	{
		if(IsValidDynamicPickup(PMG_Pickups[playerid][x])) DestroyDynamicPickup(PMG_Pickups[playerid][x]);
	}
	/*
	new ip[16];
	GetPlayerIp(playerid,ip,sizeof ip);
    format(xstring, sizeof(xstring), "INSERT INTO iplogger (Name, IP, Connected, Disconnected) VALUES ('%s', '%s', FROM_UNIXTIME(%d), NOW())", ReturnName(playerid),g_pIP[playerid],g_ConnectionDate[playerid]);
    mysql_query(SQL,xstring);
    */
	if(RaceRotation == false && GetAdminCount() == 1)
	{
		RaceRotation = true;
	}

    if(Reconnecting[playerid] == true)
    {
        new string[64];
        format(string, sizeof(string), "unbanip %s", ReconnectIP[playerid]);
        SendRconCommand(string);
        Reconnecting[playerid] = false;
    }
    
	if(IsVIP(playerid))
	{
	    // Delete any VIP Objects
		new count;
		count = CountDynamicObjects();
		for(new a = 0; a <= count; a++)
		{
			if(Players[playerid][userID] == Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) )
			{
				DestroyDynamicObject(a);
			}
		}
	}

	if(IsValidDynamicCP(Players[playerid][DeliveryCP])) DestroyDynamicCP(Players[playerid][DeliveryCP]);
	if(IsDueling[playerid] == true){Duel_End(DuelInvitation[playerid],playerid,0);}
	TextDrawHideForPlayer(playerid, RXDM[6]);
	MyLastTT[playerid] = 0;
	//rsplitCP[playerid] = 0;
	DeleteTextTT(playerid);
	MyLastTT[playerid] = 0;
	TT_ID[playerid] = -1;
	RaceCheckpoint[playerid] = -1;
	gPlayerSpawned[playerid] = false;
    DuelInvitation[playerid] = -1;
	DuelWeapon[playerid][0] = 0;
	DuelWeapon[playerid][1] = 0;
	DuelSpectating[playerid] = -1;
 	IsDueling[playerid] = false;
	DuelDisable[playerid] = false;
	DuelWaiting[playerid] = false;
	DuelArenaCreated[playerid] = false;
	DuelStarting[playerid] = false;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(DuelIgnored[i][playerid] == true)
	    {
			DuelIgnored[i][playerid] = false;
		}
	}

	Players[playerid][allowmg] = false;
	if(TDrif[playerid] == true)
	{
		TDrif[playerid] = false;
		DestroyTextDraws(playerid);
		TDriftPointsNow[playerid] = 0; PlayerDriftCancellation[playerid] = 0;
		TextDrawHideForPlayer(playerid,TDDrift[playerid]);
		DriftBonus[playerid]=1;
		TextDrawSetString(TDDrift[playerid]," ");
		DriftPointsNow[playerid] = 0;
		TextDrawHideForPlayer(playerid,TDDrift[playerid]);
		KillTimer(eDriftTimer[playerid]);
		KillTimer(TimerA[playerid]);
		KillTimer(TimerC[playerid]);
		TimeLeft[playerid] = 180;
		DriftID[playerid] = -1;
	}

	for(new x=0; x< sizeof(EasterEgg);x++) MyEggs[playerid][x]=0;
 	PlayerTextDrawDestroy(playerid,AnnText[playerid]);

	TextDrawHideForPlayer(playerid, RXDM[0]);
	TextDrawHideForPlayer(playerid, RXDM[1]);
	TextDrawHideForPlayer(playerid, RXDM[2]);
	TextDrawHideForPlayer(playerid, RXDM[4]);
	TextDrawHideForPlayer(playerid, RXDM[5]);

	Players[playerid][DeathCount] = 0;
    Players[playerid][LastDeathTime] = 0;
    
   	DestroyPlayerObject(playerid, building[0]);
	DestroyPlayerObject(playerid, building[1]);
	DestroyPlayerObject(playerid, building[2]);
	for(new i=0; i<=HO2[playerid][ID]; i++)
	{
		HO2[playerid][eXist][i]=false;
	}
	HO2[playerid][ID]=-1;

	if(playerid == Server[ptp_president])
	{
 		Server[ptp_president] = INVALID_PLAYER_ID;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
  			if(IsPlayerConnected(i) && Players[i][Minigame] == 21)
	    	{
      			SetPlayerVirtualWorld(i,0);
	        	SpawnPlayer(i);
				Players[i][Minigame] = 0;
		    }
		}
		SendClientMessageToAll(COLOR_AMSG,"** Protect The President Ended (President Left)");
	}

	foreach(new i : Player)
	{
		CanTP[i][playerid] = false;
		CanTP[playerid][i] = false;
		
		if(gSpectateID[i] == playerid && IsPlayerConnected(i))
		{
 			TogglePlayerSpectating(i, false);
			GameTextForPlayer(i,"~r~SPEC MODE DISABLED~n~~W~PLAYER LEFT",1500,3);
			gSpectateID[i] = INVALID_PLAYER_ID;
			gSpectateType[i] = ADMIN_SPEC_TYPE_NONE;
			SetCameraBehindPlayer(i);
		}
	}
	if(IsValidDynamic3DTextLabel(racelabel[playerid]))  DestroyDynamic3DTextLabel(racelabel[playerid]);
	SendDeathMessage(INVALID_PLAYER_ID,playerid,201);
	if(Players[playerid][Logged] == true) Save(playerid);


	switch(reason)
	{
		case 0:
		{
			format(xstring,sizeof xstring,"player %p (ID:%d) has left (Crash)",playerid,playerid);
			SendMessageToAdminsEx(COLOR_GREY,1,xstring);
			format(xstring,sizeof xstring,":small_orange_diamond: player %p (ID:%d) has left (Crash)",playerid,playerid);
			DCC_SendChannelMessage(DCGen,xstring);
		}
		case 1:
		{
			format(xstring,sizeof xstring,"player %p (ID:%d) has left",playerid,playerid);
			SendMessageToAdminsEx(COLOR_GREY,1,xstring);
			format(xstring,sizeof xstring,":small_orange_diamond: player %p (ID:%d) has left",playerid,playerid);
			DCC_SendChannelMessage(DCGen,xstring);
		}
		case 2:
		{
			format(xstring,sizeof xstring,"player %p (ID:%d) has left (Kick/Ban)",playerid,playerid);
			SendMessageToAdminsEx(COLOR_GREY,1,xstring);
			format(xstring,sizeof xstring,":small_orange_diamond: player %p (ID:%d) has left (Kick/Ban)",playerid,playerid);
			DCC_SendChannelMessage(DCGen,xstring);
		}
	}

	if(IsPlayerConnected(playerid) && isNeonON[playerid]==true )
	{
		RemoveNeon(playerid);
	}
 	StopPlayerHoldingObject(playerid);

	if(IsValidDynamic3DTextLabel(Players[playerid][MyLabel])) DestroyDynamic3DTextLabel(Players[playerid][MyLabel]);

	gSpectateID[playerid] = INVALID_PLAYER_ID;
	gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;


	Players[playerid][PMs] = true;
	Players[playerid][AdminLvl] = 0;
	Players[playerid][Minigame] = 0;
	Players[playerid][LastCar] = -1;
	Players[playerid][PlayTime] = 0;
	Players[playerid][Logged] = false;
	Players[playerid][Registered] = false;
	Players[playerid][Spawned] = false;
	Players[playerid][Money] = 0;
	Players[playerid][Deaths] = 0;
	Players[playerid][Skin] = -1;
	Players[playerid][Color] = 0;
	Players[playerid][Muted] = false;
	Players[playerid][God] = false;
	Players[playerid][VIP] = 0;
	Players[playerid][Banned] = false;
	Players[playerid][RacesWon] = 0;
	Players[playerid][RacesJoined] = 0;
	Players[playerid][TDMJoined] = false;
	Players[playerid][KSpree] = 0;
	Players[playerid][AC_JackAlerts] = 0;
	Players[playerid][AC_HealthAlerts] = 0;
	Players[playerid][AC_MoneyAlerts] = 0;
	Players[playerid][AC_ArmourAlerts] = 0;

	if(Players[playerid][AmRacing] == true)
	{
		TotalRacers--;
		TotalRacersCur--;
	}
	Players[playerid][AmRacing] = false;
	MyCurrentCP[playerid] = -1;
	Players[playerid][MyRank] = -1;
	Players[playerid][AmBuilding] = false;
	BuildInitial(playerid);

	Players[playerid][Spam] = 0;

	Players[playerid][autofix] = true;
	KillTimer(UltimateTimer[playerid]);
	TokenUsing[playerid]=false;
	TokenUltimate[playerid]=false;
	AllowedVehicle[playerid]=false;
	Players[playerid][Token]=0;
	MJ_Value[playerid][0] = 0.10;
	MJ_Value[playerid][1] = 2.0;
	// vehicle fps
	FPS_bool[playerid]=false;
	DestroyObject(fFPS[playerid]);
	DestroyObject(vFPS[playerid]);

	new id = Players[playerid][dueling];
 	Players[playerid][dueling] = INVALID_PLAYER_ID;
 	if(IsPlayerConnected(id)) Players[id][dueling] = INVALID_PLAYER_ID;

	if(SVLoaded == true || SVStarted == true)
	{
		Players[playerid][Minigame] = 0;
		SVPlayers--;
	}


	return 1;
}

forward RandomGame();
public RandomGame()
{
	tword = "R";
	typing = true;
	new xCharacters[][] = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
 	"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m","n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
  	"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "~", "!", ".", "$","^", "&","*","(",")"};
	new xLength = (random(10) + 6);
	tCash = (random(10000) + 5000);
	tScore = (random(3)+1);
	ttoken = (random(10)+2);
	Loop(x, xLength) format(tword, sizeof(tword), "%s%s", tword, xCharacters[random(sizeof(xCharacters))][0]);
	format(xstring,sizeof xstring,"<RX-GAME>{FFFFFF} Type {CFF55F}%s {FFFFFF}to win reaction test",tword);
	SendClientMessageToAll(0x00FFFFFF, xstring);
	return 1;
}

forward StopSpec(playerid);
public StopSpec(playerid)
{
	TogglePlayerSpectating(playerid, false);
	gSpectateID[playerid] = INVALID_PLAYER_ID;
	gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerInterior(playerid,0);
}

public OnPlayerDeath(playerid, killerid, reason)
{
	ResetPlayerWeapons(playerid);
	//revises 2/2/14

	gPlayerSpawned[playerid] = false;
	if(IsDueling[playerid] == true)
	{
		if(killerid == DuelInvitation[playerid]){Duel_End(killerid,playerid,1);}
		else if(killerid == INVALID_PLAYER_ID || reason == 54){Duel_End(DuelInvitation[playerid],playerid,1);}
		else if(killerid != DuelInvitation[playerid]){Duel_End(playerid,DuelInvitation[playerid],2);}
		else {Duel_End(playerid,DuelInvitation[playerid],3);}
	}
	
	if(reason == 255)
	{
	    if(Players[playerid][Minigame] == 1020)
	    {
	        Players[playerid][Minigame] = 0;
   			format(xstring,sizeof xstring,"*!* %p (ID:%d) left the Survival Minigame! (Died)",playerid,playerid);
			SendClientMessageToAll(COLOR_YELLOW,xstring);
			SVPlayers--;
			if(SVPlayers == 1)
			{
				foreach(new i : Player)
				{
				    if(Players[i][Minigame] == 1020)
				    {
				        // Winner
            			format(xstring,sizeof xstring,"*!* %p (ID:%d) won the Survival Minigame! (Last One Alive)",killerid,killerid);
						SendClientMessageToAll(COLOR_YELLOW,xstring);
						SVPlayers = 0;
						SVLoaded = false;
						SVStarted = false;
						Players[i][SPoints] = 0;
						SetPlayerHealth(i,0);
						Players[i][Minigame] = 0;
						SetPlayerWeather(i,1);
				    }
				}
				
				new count;
				count = CountDynamicObjects();
				for(new a = 0; a <= count; a++)
				{
					if(Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) == 300 )
					{
						DestroyDynamicObject(a);

						// Move
		   				for(new e = 0; e < 50; e++)
						{
						    if(Moving[e][e_MovingObject_Actual] == a)
						    {
								DeleteMovingData(e);
						    }
						}
					}
				}
			}
			else
			{
				format(xstring,sizeof xstring,"*!* %p (ID:%d) left the Survival Minigame! (Died)",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
			}
	    }
	
		SendDeathMessage(INVALID_PLAYER_ID,playerid,47);
		if( DriftID[playerid] != -1 && TDrif[playerid] == true)
		{
			DriftSave(playerid);
		}
	
	
	    if(killerid == INVALID_PLAYER_ID)
		{
			//SendDeathMessage(INVALID_PLAYER_ID,playerid,47);
			if(playerid == Server[ptp_president])
			{
	  			Server[ptp_president] = INVALID_PLAYER_ID;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
	   				if(IsPlayerConnected(i) && Players[i][Minigame] == 21)
				    {
	       				SetPlayerVirtualWorld(i,0);
				        SpawnPlayer(i);
						Players[i][Minigame] = 0;
		    		}
				}
				SendClientMessageToAll(COLOR_AMSG,"** Protect The President Ended ( Suicide)");
				return 1;
			}
			
		 	if(Players[playerid][vehDuel] == true)
		    {
		        // end
		        Players[playerid][vehDuel] = false;
		        Players[Players[playerid][VehRequest]][vehDuel] = false;

		        format(xstring,sizeof xstring,"The Vehicle Duel Between %p (ID:%d) and %p (ID:%d) ended.. %p won.",playerid,playerid,Players[playerid][VehRequest],Players[playerid][VehRequest],Players[playerid][VehRequest]);
				SendClientMessageToAll(COLOR_LIME, xstring);

				Players[playerid][VehRequest] = INVALID_PLAYER_ID;
				Players[Players[playerid][VehRequest]][VehRequest] = INVALID_PLAYER_ID;

			}

		}
	    if(killerid != INVALID_PLAYER_ID)
    	{

			new Float:pxx[6];
			GetPlayerPos(killerid,pxx[0],pxx[1],pxx[2]);
			GetPlayerPos(playerid,pxx[3],pxx[4],pxx[5]);
			new Float:dis = GetDistance(pxx[0],pxx[1],pxx[2],pxx[3],pxx[4],pxx[5]);
		    if(dis >= 140.0)
		    {
		        // Too far away
				format(xstring,sizeof xstring,"~ Warning ~ %p (ID:%d) killed a player from a high distance (%0.2f Meters) .. They might be fake killing.",killerid,killerid,dis);
				SendMessageToAdminsEx(COLOR_AC,1,xstring);
				DCC_SendChannelMessage(DCAdmin,xstring);


				Players[killerid][fake_kill_warns]++;
				if(Players[killerid][fake_kill_warns] >= 8)
				{
				    // auto kick
				    format(xstring,sizeof xstring,"~ Alert ~ %p (ID:%d) killed a player from a high distance too many times. (Kicked)",killerid,killerid);
					SendMessageToAdminsEx(COLOR_AC,1,xstring);

					Players[killerid][fake_kill_warns] = 0;
				}
		    }
		    
	     	if(Players[playerid][vehDuel] == true)
		    {
		        // end
		        Players[playerid][vehDuel] = false;
		        Players[Players[playerid][VehRequest]][vehDuel] = false;

		        format(xstring,sizeof xstring,"The Vehicle Duel Between %p (ID:%d) and %p (ID:%d) ended.. %p won.",playerid,playerid,Players[playerid][VehRequest],Players[playerid][VehRequest],Players[playerid][VehRequest]);
				SendClientMessageToAll(COLOR_LIME, xstring);

				Players[playerid][VehRequest] = INVALID_PLAYER_ID;
				Players[Players[playerid][VehRequest]][VehRequest] = INVALID_PLAYER_ID;

			}

    	
			new string[121],name[21],killer[21];
			GetPlayerName(playerid,name,sizeof name);
			GetPlayerName(killerid,killer,sizeof killer);
	   		format(string,sizeof(string),"4%s died.",name);
		    
 	    	if(Players[playerid][Minigame] == 1020)
		    {
		        Players[playerid][Minigame] = 0;
	   			format(xstring,sizeof xstring,"*!* %p (ID:%d) left the Survival Minigame! (Died)",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				SVPlayers--;
				Players[killerid][SPoints]+=3;
				GameTextForPlayer(killerid,"~g~+3 Survival Points~n~Survival Level 1",800,3);
				if(SVPlayers == 1)
				{
					foreach(new i : Player)
					{
					    if(Players[i][Minigame] == 1020)
					    {
					        // Winner
	            			format(xstring,sizeof xstring,"*!* %p (ID:%d) won the Survival Minigame! (Last One Alive)",killerid,killerid);
							SendClientMessageToAll(COLOR_YELLOW,xstring);
							SVPlayers = 0;
							SVLoaded = false;
							SVStarted = false;
							SetPlayerHealth(i,0);
							Players[i][Minigame] = 0;
							Players[i][SPoints] = 0;
							SetPlayerWeather(i,1);
					    }
					}
					
					new count;
					count = CountDynamicObjects();
					for(new a = 0; a <= count; a++)
					{
						if(Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) == 300 )
						{
							DestroyDynamicObject(a);

							// Move
			   				for(new e = 0; e < 50; e++)
							{
							    if(Moving[e][e_MovingObject_Actual] == a)
							    {
									DeleteMovingData(e);
							    }
							}
						}
					}
					
				}
				else
				{
					Players[killerid][SPoints]+=3;
					GameTextForPlayer(killerid,"~g~+3 Survival Points~n~Survival Level 1",800,3);
				}
		    }

	    	if(Players[playerid][dueling] != -1)
			{
			    if(Players[playerid][dueling] == killerid)
			    {
				    Players[playerid][dueling] = -1;
				    Players[killerid][dueling] = -1;
				    SendClientMessage(playerid,COLOR_RED,"Duel End.");
				    SendClientMessage(killerid,COLOR_RED,"Duel End.");
				    SpawnPlayer(killerid);
				}
			}
			
			if(IsPlayerNPC(playerid))
			{
				format(string, sizeof(string), "%s has been banned for fake killing a NPC.",killer);
				SendClientMessage(killerid,COLOR_AC,"You have been banned. (Reason: Fake killing)");
				SendClientMessage(killerid,COLOR_AC,"To Appeal this ban, go to:");
				SendClientMessage(killerid,COLOR_AC,"http://www.revolutionxsamp.com/forum");
				SendClientMessageToAll(COLOR_AC,string);
				if(Players[playerid][Registered] == true) Players[playerid][Banned] = true;
				AddPlayerBan(playerid,"Fake Killing","AutoBan");
				BanEx2(playerid,"Fake Killing");
				return 1;
			}

			if(!IsPlayerNPC(playerid) && Server[fakekillsac] == true)
		    {
		        if(GetTickCount() - Players[playerid][LastDeathTime] < 1000 && playerid == killerid)
		        {
		            Players[playerid][DeathCount]++;
		            if(Players[playerid][DeathCount] == 3)
		            {
             			format(string, sizeof(string), "%s has been banned for fake killing.",killer);
						SendClientMessage(killerid,COLOR_AC,"You have been banned. (Reason: Fake killing)");
						SendClientMessage(killerid,COLOR_AC,"To Appeal this ban, go to:");
						SendClientMessage(killerid,COLOR_AC,"http://www.revolutionxsamp.com/forum");
						print(string);
						SendClientMessageToAll(COLOR_AC,string);
						if(Players[playerid][Registered] == true)
						{
							Players[playerid][Banned] = true;
						}
						AddPlayerBan(playerid,"Fake Killing","AutoBan");
						BanEx2(playerid,"Fake Killing");
						return 1;
		            }
		        }
		        else Players[playerid][DeathCount] = 1;
		        Players[playerid][LastDeathTime] = GetTickCount();
		    }


	    	if(Players[playerid][Minigame] == 75) Players[playerid][autofix] = true;


			if(playerid == Server[ptp_president])
			{
	  			Server[ptp_president] = INVALID_PLAYER_ID;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
	   				if(IsPlayerConnected(i) && Players[i][Minigame] == 21)
				    {
	       				SetPlayerVirtualWorld(i,0);
				        SpawnPlayer(i);
						Players[i][Minigame] = 0;
		    		}
				}
				new str2[200];
				format(str2,sizeof str2,"** Protect The President Ended ( %p Killed President %p)",killerid,playerid);
				SendClientMessageToAll(COLOR_AMSG,str2);
				return 1;
			}
			Players[playerid][Minigame] = 0;
			
		}
		


	}
	else
	{
	
	 
		if(Players[playerid][Minigame] == 1020)
  		{
    		Players[playerid][Minigame] = 0;
			format(xstring,sizeof xstring,"*!* %p (ID:%d) left the Survival Minigame! (Died)",playerid,playerid);
			SendClientMessageToAll(COLOR_YELLOW,xstring);
			SVPlayers--;
			if(SVPlayers == 1)
			{
				foreach(new i : Player)
				{
    				if(Players[i][Minigame] == 1020)
				    {
					        // Winner
  						format(xstring,sizeof xstring,"*!* %p (ID:%d) won the Survival Minigame! (Last One Alive)",killerid,killerid);
						SendClientMessageToAll(COLOR_YELLOW,xstring);
						SVPlayers = 0;
						SVLoaded = false;
						SVStarted = false;
						SetPlayerHealth(i,0);
						Players[i][Minigame] = 0;
						SetPlayerWeather(i,1);
					}
			    }
			    
		    	new count;
				count = CountDynamicObjects();
				for(new a = 0; a <= count; a++)
				{
					if(Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) == 300 )
					{
						DestroyDynamicObject(a);

								// Move
						for(new e = 0; e < 50; e++)
						{
		    				if(Moving[e][e_MovingObject_Actual] == a)
						    {
								DeleteMovingData(e);
						    }
						}

					}
	    		}
			    
			}
			else
			{
				Players[killerid][SPoints]+=3;
				GameTextForPlayer(killerid,"~g~+3 Survival Points~n~Survival Level 1",800,3);
			}

    	}

	
 		if( DriftID[playerid] != -1 && TDrif[playerid] == true)
		{
			DriftSave(playerid);
		}
	
	    if(killerid != INVALID_PLAYER_ID)
    	{
			new string[170],name[21],killer[21];
			GetPlayerName(playerid,name,sizeof name);
			GetPlayerName(killerid,killer,sizeof killer);
			
			if(Players[killerid][AdminLvl] > 0 && Players[killerid][AdminLvl] < 9 && reason == 38 && Players[playerid][AdminLvl] == 0 && Players[killerid][Minigame] == 0)
			{
	  			SendClientMessage(killerid,COLOR_AC,"<!> YOU HAVE BEEN DISARMED!! KILLING PLAYERS WITH THE MINIGUN IS AGAINST ADMIN RULES.");
	 			SendClientMessage(killerid,COLOR_AC,"<!> IF YOU CONTINUE TO DO THIS YOU WILL BE DEMOTED! (Management Have Been Notified of This Action)");
			}
			
			SendDeathMessage(killerid,playerid,reason);
			
			Players[killerid][score]++;
			SetPlayerScore(killerid,Players[killerid][score]);
		    GameTextForPlayer(playerid, "~r~WASTED", 5000, 3 );
		    GameTextForPlayer(killerid, "~g~+1 KILL", 5000, 3 );
		    
		   	if(Players[playerid][Minigame] == 0) LooseWeapons(playerid);
		   	
		   	Players[playerid][Minigame] = 0; //03EJustin
			
  			if(Players[playerid][dueling] != INVALID_PLAYER_ID)
			{
			    if(Players[playerid][dueling] == killerid)
			    {
			        Players[playerid][dueling] = INVALID_PLAYER_ID;
			        Players[killerid][dueling] = INVALID_PLAYER_ID;
				    Players[playerid][dueling] = -1;
				    Players[killerid][dueling] = -1;
				    format(xstring,sizeof xstring,"The duel has finished! [Winner: %p]",killerid);
				    SendClientMessage(playerid,COLOR_RED,xstring);
				    SendClientMessage(killerid,COLOR_RED,xstring);
					format(xstring,sizeof xstring,"DUEL: %p (ID:%d) has won a duel against %p (ID:%d)",killerid,killerid,playerid,playerid);
					SendClientMessageToAll(COLOR_RED,xstring);
				    SpawnPlayer(killerid);
				}
			}
			

			new wpn = GetPlayerWeapon(killerid);
			
			if(IsPlayerInAnyVehicle(killerid) && GetPlayerVehicleSeat(killerid) == 0)
			{
				if(!IsValidDBWeapon(wpn))
				{
				    if(reason == 50 || reason == 51) return 1;
					// Invalid Kill, Possibly shooting with some kind of cheat :) Admin should spec first
					format(string,sizeof string,"%p (id: %d) might be killing with a invalid drive-by weapon (Weapon ID: %d)",playerid,playerid,wpn);
					SendMessageToAdmins(playerid,1,COLOR_AMSG,string);
			   	}
			}			
			
			if(Players[killerid][God] == true && Players[killerid][AdminLvl] == 0)
			{
			    format(xstring,sizeof xstring,"Godmode for %p (ID:%d) has been disabled for killing a player!",killerid,killerid);
			    SendMessageToAdminsEx(COLOR_AC,1,xstring);
			    format(xstring,sizeof xstring,"Your godmode has been disabled for killing %p (ID:%d)",playerid,playerid);
			    SendClientMessage(killerid,COLOR_AC,xstring);
                Players[killerid][God] = false;
			}

	    	if(Players[playerid][Minigame] == 75) Players[playerid][autofix] = true;


			if(playerid == Server[ptp_president])
			{
	  			Server[ptp_president] = INVALID_PLAYER_ID;
				foreach(new i : Player)
				{
	   				if(Players[i][Minigame] == 21)
				    {
	       				SetPlayerVirtualWorld(i,0);
				        SpawnPlayer(i);
						Players[i][Minigame] = 0;
		    		}
				}
				SendClientMessageToAll(COLOR_AMSG,"** Protect The President Ended (President Died)");
				return 1;
			}

	 		if(Players[playerid][bounty] > 0)
	 		{
	 		    GivePlayerCash(killerid,Players[playerid][bounty]);
	 		    Players[playerid][bounty] = 0;
	 		    format(xstring,sizeof xstring,"%s (ID:%d) has claimed the bounty on %s (ID:%d)",killer,killerid,name,playerid);
	 		    SendClientMessageToAll(COLOR_LIGHTBLUE,xstring);
	 		}

			if(!IsPlayerNPC(playerid) && Server[fakekillsac] == true)
		    {
		        if(GetTickCount() - Players[playerid][LastDeathTime] < 1000)
		        {
		            if(Players[playerid][DeathCount] == 6)
		            {
             			format(xstring, sizeof(xstring), "%s has been banned for fake killing.",killer);
						SendClientMessage(killerid,COLOR_AC,"You have been banned. (Reason: Fake killing)");
						SendClientMessage(killerid,COLOR_AC,"To Appeal this ban, go to:");
						SendClientMessage(killerid,COLOR_AC,"http://www.revolutionxsamp.com/forum");
						SendClientMessageToAll(COLOR_AC,xstring);
						if(Players[killerid][Registered] == true)
						{
							Players[killerid][Banned] = true;
						}
						AddPlayerBan(playerid,"Fake Killing","AutoBan");
						BanEx2(playerid,"Fake Killing");
		            }
		            Players[playerid][DeathCount]++;
		        }
		        else Players[playerid][DeathCount] = 1;
		        Players[playerid][LastDeathTime] = GetTickCount();
		    }

			switch(wpn)
			{
			    case 38:
			    {
				    if(GetPlayerVehicleModel(killerid) == 520) return 0;
					if(IsAdmin(killerid) || IsPlayerNPC(killerid)) return 0;
					if(Players[killerid][allowmg] == true || Players[killerid][Minigame] == 30) return 1;
					format(xstring, sizeof(xstring), "%s has been banned for killing with a minigun.",killer);
					SendClientMessage(killerid,COLOR_AC,"You have been banned. (Reason: Minigun)");
					SendClientMessage(killerid,COLOR_AC,"To Appeal this ban, go to:");
					SendClientMessage(killerid,COLOR_AC,"http://www.revolutionxsamp.com/forum");
					SendClientMessageToAll(COLOR_AC,xstring);
					if(Players[killerid][Registered] == true)
					{
						Players[killerid][Banned] = true;
					}
					AddPlayerBan(killerid,"Minigun Kill","AutoBan");
					BanEx2(killerid,"Minigun Kill");
			    }

			    case 36:
			    {
	   				if(IsAdmin(killerid) || IsPlayerNPC(killerid)) return 0;
					format(xstring, sizeof(xstring), "%s has been banned for killing with a hsrpg.",killer);
					SendClientMessage(killerid,COLOR_AC,"You have been banned. (Reason: Heatseeker Kill)");
					SendClientMessage(killerid,COLOR_AC,"To Appeal this ban, go to:");
					SendClientMessage(killerid,COLOR_AC,"http://www.revolutionxsamp.com/forum");
					SendClientMessageToAll(COLOR_AC,xstring);
					if(Players[killerid][Registered] == true)
					{
						Players[killerid][Banned] = true;
					}
					AddPlayerBan(killerid,"HSRPG Kill","AutoBan");
					BanEx2(killerid,"HSRPG Kill");
			    }
			}

            if(killerid != INVALID_PLAYER_ID && 0 && GetPlayerWeapon(killerid) == WEAPON:38)
            {
               if(GetPlayerVehicleModel(killerid) == 520) return 0;
               if(IsAdmin(killerid) || IsPlayerNPC(killerid)) return 0;
               if(Players[killerid][allowmg] == true || Players[killerid][Minigame] == 30) return 1;
               format(xstring, sizeof(xstring), "%s has been banned for killing with a minigun.",killer);
			   DCC_SendChannelMessage(DCAdmin,xstring);
               SendClientMessage(killerid,COLOR_AC,"You have been banned. (Reason: Minigun)");
               SendClientMessage(killerid,COLOR_AC,"To Appeal this ban, go to:");
               SendClientMessage(killerid,COLOR_AC,"http://www.revolutionxsamp.com/forum");
               SendClientMessageToAll(COLOR_AC,xstring);
               if(Players[killerid][Registered] == true)
               {
                   Players[killerid][Banned] = true;
               }
               AddPlayerBan(killerid,"Minigun Kill","AutoBan");
               BanEx2(killerid,"Minigun Kill");
               
               
			 
			 
			 
			 
			 
			 }
			if(Players[killerid][VIP] == 0)
			{
			    SetPlayerCash(killerid, GetPlayerCash(killerid) + 250);
			}   else SetPlayerCash(killerid, GetPlayerCash(killerid) + 450);

			Players[playerid][KSpree] = 0;
			Players[playerid][Deaths]++;
			Players[killerid][score]++;

			Players[killerid][KSpree]++;
			Players[killerid][Token] += KillToken;
			Players[killerid][Expierience]+=10;			
			CheckRankForLevelUp(killerid);
			switch(Players[killerid][KSpree])
			{
			    case 5:
			    {
					GivePlayerCash(killerid,1000);
					GameTextForPlayer(killerid,"~g~Killing Spree: 5~n~+$1000",800,3);
			    }
			    
			   	case 10:
			    {
			        Players[killerid][Token]+=10;
					GivePlayerCash(killerid,2000);
					GameTextForPlayer(killerid,"~g~Killing Spree: 10~n~+$2000 | + 10 Tokens",800,3);
			    }
			    
			    case 15:
			    {
			        Players[killerid][Token]+=15;
					GivePlayerCash(killerid,3000);
					GameTextForPlayer(killerid,"~g~Killing Spree: 15~n~+$3000 | + 15 Tokens",800,3);
			    }
			    
			   	case 20:
			    {
			        Players[killerid][Token]+=20;
					GivePlayerCash(killerid,4000);
					GameTextForPlayer(killerid,"~g~Killing Spree: 20~n~+$4000 | +20 Tokens",800,3);
			    }
			}

			new string2[100];
			if( killerid != INVALID_PLAYER_ID && GetPlayerState(killerid) == PLAYER_STATE_PASSENGER && IsPlayerInAnyVehicle(killerid))
			{
				format(string,sizeof(string),"4 %s[%d] killed %s[%d] (Drive-By: %s)",killer,killerid,name,playerid,aWeaponNames[reason]);
				if(Players[killerid][autofix]==true)
				{
					Players[killerid][autofix] = false;
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(killerid,X,Y,Z);
					SetPlayerPos(killerid,X,Y+2,Z+25);
					SendClientMessage(killerid,COLOR_RED,"* Auto-Fix DISABLED. Read /rules !");
					format(string2,sizeof(string2),"* %s with AF ON",string);
					Chat_SendMessageToAdmins(COLOR_RED,1,string2[2]); // Removes the IRC color code
				}
			}
			else if( killerid != INVALID_PLAYER_ID && GetPlayerState(killerid) == PLAYER_STATE_DRIVER && IsPlayerInAnyVehicle(killerid))
			{
				//heli blade
				if(reason==50) format(string,sizeof(string),"4%s (ID:%d) killed %s (ID:%d) (Heli Blade: %s)",killer,killerid,name,playerid,aVehicleNames[GetVehicleModel(GetPlayerVehicleID(killerid)) - 400]);
				//vehicle "overdrive" Kill
				else if(reason==49) format(string,sizeof(string),"4 %s (ID:%d) killed %s (ID:%d) (Vehicle Kill: %s)",killer,killerid,name,playerid,aVehicleNames[GetVehicleModel(GetPlayerVehicleID(killerid)) - 400]);
				// Bike Drive-by as driver with bikes like nrg , sanchez , etc...
				else if(reason == 29 || reason == 28 || reason == 32) format(string,sizeof(string),"4 %s (ID:%d) killed %s (ID:%d) (%s Drive-By: %s)",killer,killerid,name,playerid,aVehicleNames[GetVehicleModel(GetPlayerVehicleID(killerid)) - 400],aWeaponNames[reason]);
    // Heli Kills with sea spallow , etc..
				else if(reason == 31) format(string,sizeof(string),"4 %s (ID:%d) killed %s (ID:%d) (Heli Kill %s: %s)",killer,killerid,name,playerid,aVehicleNames[GetVehicleModel(GetPlayerVehicleID(killerid)) - 400],aWeaponNames[reason]);
				// Explosion Kills with Hydra
				else if(reason == 51) format(string,sizeof(string),"4 %s (ID:%d) killed %s (ID:%d) (%s: %s)",killer,killerid,name,playerid,aVehicleNames[GetVehicleModel(GetPlayerVehicleID(killerid)) - 400],aWeaponNames[reason]);
				// to avoid some problems if there is bug.
				else format(string,sizeof(string),"4 %s killed %s (%s)",killer,killerid,name,playerid,aWeaponNames[reason]);

				if(Players[killerid][autofix]==true)
				{
					Players[killerid][autofix]=false;
					SetVehicleHealth(GetPlayerVehicleID(killerid),100);
					SendClientMessage(killerid,COLOR_RED,"* AutoFix DISABLED. Killing with AutoFix on is not allowed.");
					format(string2,sizeof(string2),"%s with AF ON",string);
					Chat_SendMessageToAdmins(COLOR_RED,1,string2);
				}
			}
			// player drowned , as theres no need to check if killerid is valid or not.
			else if( reason == 53 ) format(string,sizeof(string),"4 %s[%d] Drowned",killer,killerid);
			// like fell down from building and died.
			//else if( reason == 54 ) format(string,sizeof(string),"4%s sucide",killer);
			else
			{
				format(string,sizeof(string),"4%s[%d] killed %s[%d] (%s)",killer,killerid,name,playerid,aWeaponNames[reason]);
			}
			//SendDeathMessage(killerid,playerid,reason);


			if(Players[killerid][TDMJoined] == true)
			{
			    new tid = GetPlayerTeam(killerid);
				if(tid == 1)
				{
					Server[Team1Kills]++;
				}   else Server[Team2Kills]++;

				if(Server[Team1Kills] == 50)
				{
		 			foreach(new i : Player)
					{
					    if(Players[i][TDMJoined] == true)
					    {
					        SetPlayerVirtualWorld(i,0);
					        SpawnPlayer(i);
					        Players[i][TDMJoined] = false;
					    }
					}
					SendClientMessageToAll(COLOR_AMSG,"** Team deathmatch ended! (Team 1 Won)");
					Server[Team1Kills] = 0;
					return 1;
				}

				if(Server[Team2Kills] == 50)
				{
		 			foreach(new i : Player)
					{
					    if(IsPlayerConnected(i) && Players[i][TDMJoined] == true)
					    {
					        SetPlayerVirtualWorld(i,0);
					        SpawnPlayer(i);
					        Players[i][TDMJoined] = false;
					    }
					}
					SendClientMessageToAll(COLOR_AMSG,"** Team deathmatch ended! (Team 2 Won)");
					Server[Team2Kills] = 0;
					return 1;
				}
			}
		}
		
	}


	if(Players[playerid][AmRacing] == true)
	{
				if(IsValidDynamic3DTextLabel(racelabel[playerid]))  DestroyDynamic3DTextLabel(racelabel[playerid]);
				DisablePlayerRaceCheckpoint(playerid);
				RemovePlayerMapIcon(playerid, 56);
				format(xstring,sizeof xstring,"~g~Left Race~n~~w~'%s'",R_Name);
				GameTextForPlayer(playerid,xstring,1000,3);
				TotalRacers--;
				TotalRacersCur--;
				MyCurrentCP[playerid]=0;
				Players[playerid][AmRacing] = false;
				SendClientMessage(playerid,COLOR_YELLOW,"You have left the race.");
				if(TotalRacersCur==0)
				{
					for(new i=0;i<MAX_PLAYERS;i++)
					{
						if(Players[i][AmRacing] == true)
						{
							DisablePlayerRaceCheckpoint(i);
							TotalRacers--;
							TotalRacersCur--;
							MyCurrentCP[i]=0;
                            Players[i][AmRacing] = false;
							if(IsValidDynamic3DTextLabel(racelabel[i]))  DestroyDynamic3DTextLabel(racelabel[i]);
						}
					}
					bombrace = 0;
					RaceActive=false;
					RaceStart = false;
					OnRaceCD = false;
					RaceTime = 0;
					TotalRacers = 0;
					TotalRacersCur = 0;
					xx_cd = DELAY_TIME;
					TextDrawHideForAll(racenotify);
					TextDrawSetString(racenotify," ");
					lastwin = " ";
					//CreateRaceResultInfo("Last Race:", LastRaceRank,true);
					//SetTimer("Display8Seconds",10*1000,false);
					KillTimer(rTimer);
					KillTimer(eTimer);
				}
	}
	return 1;
}

stock GetDistance( Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2 )
{
	return floatround( floatsqroot( ( ( x1 - x2 ) * ( x1 - x2 ) ) + ( ( y1 - y2 ) * ( y1 - y2 ) ) + ( ( z1 - z2 ) * ( z1 - z2 ) ) ) ) ;
}

CMD:randomgame(playerid,params[])
{
	if(!IsAdmin(playerid)) return 1;
	RandomMinigame();
	return 1;
}


CMD:version(playerid,params[])
{
	if(!IsAdmin(playerid)) return 1;
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /version <playerid>");	
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* That player is not connected.");
	new ver[50];
	GetPlayerVersion(id,ver,sizeof ver);
	format(xstring,sizeof xstring,"Player %p (ID:%d) is running Version %s",id,id,ver);
	SendClientMessage(playerid,COLOR_GREEN,xstring);
	return 1;
}

CMD:dsbfp(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 4) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 4+ or above to Enable Stunt Bonusues.");
	new id;
	if(sscanf(params,"u",id))
	{
	 	SendClientMessage(playerid,COLOR_RED,"* Usage: /dsbfp <playerid>");
		SendClientMessage(playerid,COLOR_RED,"* This command will disable stunt bonuses for a player.");
		return 1;
	}	
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* That player is not connected.");
	EnableStuntBonusForPlayer(id,true);
	format(xstring,sizeof xstring,"Admin %p (ID:%d) used /dsbfp to disable stunt bonuses for %p (ID:%d)",playerid,playerid,id,id);
	SendMessageToAdminsEx(playerid,COLOR_PINK,xstring);
	format(xstring,sizeof xstring,"* You disabled stunt bonuses for %p (ID:%d). To enable, type /esbfp %d",id,id,id);
	SendClientMessage(playerid,COLOR_PINK,xstring);
	
	SendClientMessage(playerid,COLOR_PINK,"* Please note that our Anticheat will trigger if someone does stunts of $20,000 and more.");
	return 1;	
}


CMD:egmfp(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 4) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 4+ or above to Enable Stunt Bonusues.");
	new id;
	if(sscanf(params,"u",id))
	{
	 	SendClientMessage(playerid,COLOR_RED,"* Usage: /egmfp <playerid>");
		SendClientMessage(playerid,COLOR_RED,"* This commmand enable ghost mode for player");
		return 1;
	}	
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* That player is not connected.");
	TogglePlayerGhostMode(id,true);
	format(xstring,sizeof xstring,"Admin %p (ID:%d) used /egmfp to enable ghost mode for %p (ID:%d)",playerid,playerid,id,id);
	SendMessageToAdminsEx(playerid,COLOR_PINK,xstring);
	format(xstring,sizeof xstring,"You enabled ghost mode for %p (ID:%d). To disable, type /dgmfp %d",id,id,id);
	SendClientMessage(playerid,COLOR_PINK,xstring);
	return 1;	
}

CMD:dgmfp(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 4) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 4+ or above to Enable Stunt Bonusues.");
	new id;
	if(sscanf(params,"u",id))
	{
	 	SendClientMessage(playerid,COLOR_RED,"* Usage: /dgmfp <playerid>");
		SendClientMessage(playerid,COLOR_RED,"* This command disable ghost mode for player");
		return 1;
	}	
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* That player is not connected.");
	TogglePlayerGhostMode(id,false);
	format(xstring,sizeof xstring,"Admin %p (ID:%d) used /dgmfp to disable ghost mode for %p (ID:%d)",playerid,playerid,id,id);
	SendMessageToAdminsEx(playerid,COLOR_PINK,xstring);
	format(xstring,sizeof xstring,"You disabled ghost mode for %p (ID:%d). To enable, type /egmfp %d",id,id,id);
	SendClientMessage(playerid,COLOR_PINK,xstring);
	return 1;	
}

CMD:esbfp(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 4) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 4+ or above to Enable Stunt Bonusues.");
	new id;
	if(sscanf(params,"u",id))
	{
	 	SendClientMessage(playerid,COLOR_RED,"* Usage: /esbfp <playerid>");
		SendClientMessage(playerid,COLOR_RED,"* This command will enable stunt bonuses for a player.");
		return 1;
	}	
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* That player is not connected.");
	EnableStuntBonusForPlayer(id,true);
	format(xstring,sizeof xstring,"Admin %p (ID:%d) used /esbfp to enable stunt bonuses for %p (ID:%d)",playerid,playerid,id,id);
	SendMessageToAdminsEx(playerid,COLOR_PINK,xstring);
	format(xstring,sizeof xstring,"You enabled stunt bonuses for %p (ID:%d). To disable, type /dsbfp %d",id,id,id);
	SendClientMessage(playerid,COLOR_PINK,xstring);
	return 1;	
}

CMD:trt(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][ReportsTD] == true)
		{
			Players[playerid][ReportsTD] = false;
			TextDrawHideForPlayer(playerid,Reports[0]);
			TextDrawHideForPlayer(playerid,Reports[1]);
		}
		else
		{
			Players[playerid][ReportsTD] = true;
			TextDrawShowForPlayer(playerid,Reports[0]);
			TextDrawShowForPlayer(playerid,Reports[1]);
		}
	}
	return 1;
}


CMD:coq(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,1);
	SetPlayerFacingAngle(playerid,0);
	GotoPosition(playerid,452.489990,-18.179698,1001.132812,false);
	GameTextForPlayer(playerid,"~y~Teleported to~n~World of Coq",1000,3);
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;
}

CMD:diner(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerFacingAngle(playerid,180.4699);
	GotoPosition(playerid,-242.1269,-2182.0186,965.5510,false);
	GameTextForPlayer(playerid,"~y~Diner",1000,3);
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;
}

CMD:hell(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerFacingAngle(playerid,266.9883);
	GotoPosition(playerid,2307.7144,576.0588,106.5366,false);
	GameTextForPlayer(playerid,"~y~Teleported to~n~~r~Hell",1000,3);
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;
}

CMD:trucking2(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerFacingAngle(playerid,93.0752);
	GotoPosition(playerid,-520.6759,-487.2758,25.5234,true);
	GameTextForPlayer(playerid,"~w~Trucking",1000,3);
	SendClientMessage(playerid,COLOR_WHITE,"* Enter one of the trucks and type /delivery to start");
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;

}


CMD:trucking(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,0);
	SetPlayerFacingAngle(playerid,207.1591);
	GotoPosition(playerid,1398.4003,1076.6511,10.8203,true);
	GameTextForPlayer(playerid,"~w~Trucking",1000,3);
	SendClientMessage(playerid,COLOR_WHITE,"* Enter one of the trucks and type /delivery to start");
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;

}



CMD:getdist(playerid, params[])
{
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* /getdist <player>");
	new Float:pxx[6];
	GetPlayerPos(id,pxx[0],pxx[1],pxx[2]);
	GetPlayerPos(playerid,pxx[3],pxx[4],pxx[5]);
	new Float:dis = GetDistance(pxx[0],pxx[1],pxx[2],pxx[3],pxx[4],pxx[5]);

	format(xstring,sizeof xstring,"Distance: %f",dis);
	SendClientMessage(playerid,COLOR_GREY, xstring);
	return 1;
}

public ForbidWeaponDrop(weaponid)
{
	weaponid = (weaponid > 46 || weaponid < 0) ? (0) : (weaponid);
	ForbiddenWeaponsDrop[weaponid] = true;
	return 1;
}

public FreeWeaponDrop(weaponid)
{
	weaponid = (weaponid > 46 || weaponid < 0) ? (0) : (weaponid);
	ForbiddenWeaponsDrop[weaponid] = false;
	return 1;
}

public RemoveWeaponDropped(pickupid, wid)
{
	WeaponsDropped[wid][Ammo]=0;
	WeaponsDropped[wid][Pickupid]=0;
	WeaponsDropped[wid][Model]=0;
	WeaponsDropped[wid][Ocuppied] = false;
	return DestroyDynamicPickup(pickupid);
}


GetWeaponModel(weaponid)//i don't know who made this util function
{
 	 new model;

	 switch(weaponid)
	 {
	    case 1: model=331; case 2: model=333; case 3: model=334;
		case 4: model=335; case 5: model=336; case 6: model=337;
		case 7: model=338; case 8: model=339; case 9: model=341;
		case 10: model=321; case 11: model=322; case 12: model=323;
		case 13: model=324; case 14: model=325; case 15: model=326;
		case 16: model=342; case 17: model=343; case 18: model=344;
		case 22: model=346; case 23: model=347; case 24: model=348;
		case 25: model=349; case 26: model=350; case 27: model=351;
		case 28: model=352; case 29: model=353; case 30: model=355;
		case 31: model=356; case 32: model=372; case 33: model=357;
		case 34: model=358; case 35: model=359; case 36: model=360;
		case 37: model=361; case 38: model=362; case 39: model=363;
		case 41: model=365; case 42: model=366; case 46: model=371;
	 }

 	 if(model<300 || model == 0) return 0;

	 return model;
}

public LooseWeapons(playerid)
{
	new WeaponsData[13][2], Float:pos[3], pickupmodel, slot, oldslot;

	Restart:

	for(slot = oldslot; slot <= 12; slot++)
	{
	    if(oldslot == 13) ResetPlayerWeapons(playerid);
		GetPlayerWeaponData(playerid, WEAPON_SLOT:slot, WEAPON:WeaponsData[slot][0], WeaponsData[slot][1]);
		oldslot++;
		if(WeaponsData[slot][1] > 0 && !ForbiddenWeaponsDrop[WeaponsData[slot][0]]) goto Advance;
	}

	Advance:

	if(WeaponsData[slot][1] > 0)
	{
		for(new wid = 0; wid < MAX_WEAPONS_DROPPED; wid++)
		{
			if(WeaponsDropped[wid][Ocuppied] == false)
			{
				if(WeaponsData[slot][0] != 36 && WeaponsData[slot][0] != 38)
				{
					pickupmodel = GetWeaponModel(WeaponsData[slot][0]);
					GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
					WeaponsDropped[wid][Pickupid] = CreateDynamicPickup(pickupmodel, 3, floatadd(pos[0], EachPos[random(11)]), floatadd(pos[1], EachPos[random(11)]), pos[2], -1);
					WeaponsDropped[wid][Model] = WeaponsData[slot][0];
					WeaponsDropped[wid][Ammo] = WeaponsData[slot][1];
					WeaponsDropped[wid][Ocuppied] = true;
					TimerIDs[wid]=SetTimerEx("RemoveWeaponDropped",REMOVE_WEAPONS_DROPPED_TIMER,false,"ii",WeaponsDropped[wid][Pickupid],wid);
					goto Restart;
				}
			}
		}
	}
	return ResetPlayerWeapons(playerid);
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	for(new a = 1; a<=9; a++)
	{
		if(IsValidDynamicPickup(PMG_Pickups[a][playerid]) && pickupid == PMG_Pickups[a][playerid])
		{
			DestroyDynamicPickup(PMG_Pickups[playerid][a]);
			Players[playerid][mgVariable]++;
			if(Players[playerid][mgVariable] == 8)
			{
				GameTextForPlayer(playerid,"~g~~n~~n~Minigame Complete!~n~+$20000",3000,3);
				Players[playerid][mgVariable] = 0;
				GivePlayerCash(playerid,20000);
				PlayerPlaySound(playerid,1058,0,0,0);
				format(xstring,sizeof xstring,"*** %p (ID:%d) completed the Bike Minigame #1 and recieved $20000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);

			}
			else
			{
				format(xstring,sizeof xstring,"~g~~n~Collected %d/8",Players[playerid][mgVariable]);
				GameTextForPlayer(playerid,xstring,500,3);
				PlayerPlaySound(playerid,1150,0,0,0);
			}
		}
	}
	
	EasterEggPickup(playerid,pickupid);
	if(ActiveDerby == true)
	{
		for(new a=0; a < 5; a++)
		{
		    if(pickupid == DerbyPickups[a])
		    {
		        SetVehicleHealth(GetPlayerVehicleID(playerid), 1000);
		        RepairVehicle(GetPlayerVehicleID(playerid));
		        GameTextForPlayer(playerid,"~p~~h~Vehicle Repaired!",800,3);
		    }
		}
	}

    for(new wid=0; wid < MAX_WEAPONS_DROPPED; wid++)
    {
        if(pickupid == WeaponsDropped[wid][Pickupid])
        {
             if(WeaponsDropped[wid][Ammo] > 0 )
			 {
				if(DoesPlayerHasWeapon(playerid, WeaponsDropped[wid][Model] ))
				{
				    // only give them the ammo
				    new tmp,tmp2;
				    // get cur data
        			GetPlayerWeaponData(playerid, GetWeaponSlot(WEAPON:WeaponsDropped[wid][Model]), WEAPON:tmp, tmp2);
				
					SetPlayerAmmo(playerid, WEAPON:WeaponsDropped[wid][Model], tmp2 + WeaponsDropped[wid][Ammo]);
   					DestroyDynamicPickup(WeaponsDropped[wid][Pickupid]);
	 	         	WeaponsDropped[wid][Ammo]=0;
	      	     	WeaponsDropped[wid][Pickupid]=0;
	             	WeaponsDropped[wid][Model]=0;
	             	WeaponsDropped[wid][Ocuppied] = false;
	    	        KillTimer(TimerIDs[wid]);
					break;
   				}
		   		else
   				{
	     	 		GivePlayerWeapon(playerid,WEAPON:WeaponsDropped[wid][Model],WeaponsDropped[wid][Ammo]);
	         		DestroyDynamicPickup(WeaponsDropped[wid][Pickupid]);
	 	         	WeaponsDropped[wid][Ammo]=0;
	      	     	WeaponsDropped[wid][Pickupid]=0;
	             	WeaponsDropped[wid][Model]=0;
	             	WeaponsDropped[wid][Ocuppied] = false;
	    	        KillTimer(TimerIDs[wid]);
    	        }
       	    	break;
             }


        }
	}

	if(ActiveCTF == true)
	{
		for(new a=0; a < MAX_CTF_FLAGS; a++)
		{
		    if(IsValidDynamicPickup(CTF_Flags[a]))
		    {
				if(pickupid == CTF_Flags[a])
				{
				    PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
				    Players[playerid][ctfflags]++;
				    format(xstring,sizeof xstring,"~b~Flags:~w~ %d",Players[playerid][ctfflags]);
				    GameTextForPlayer(playerid,xstring,800,3);
					DestroyDynamicPickup(CTF_Flags[a]);
					DestroyDynamicMapIcon(CTFIcons[a]);
				}
			}
		}
		
		// Now we check if there is any left!
		new totalflags;
		for(new a=0; a < MAX_PLAYERS; a++)
		{
		    if(IsPlayerConnected(a) && Players[a][Minigame] == 800)
		    {
				totalflags+=Players[a][ctfflags];
		    }
		}
		
		if(totalflags == CTFFlags)
		{
		    CTFMembers = 0;
		    // end of game
		    CTFFlags = 0;
		    ActiveCTF = false;
		    CTFLoaded = false;
		    CTFToken = 50;
		    CTFInterior = 0;
			new mostflags,winnerid;
			
			// reset player data
	    	foreach(new a : Player)
			{
			    if(Players[a][Minigame] == 800)
			    {
					if(Players[a][ctfflags] > mostflags)
					{
						mostflags = Players[a][ctfflags];
						winnerid = a;
					}
			        Players[a][Minigame] = 0;
			        SetPlayerVirtualWorld(a, 0);
		   			SpawnPlayer(a);
		   			Players[a][ctfflags] = 0;
					SetPlayerInterior(a, 0);
			    }
			}
			
			format(xstring,sizeof xstring,"The CTF Game has ended [ Winner: %p collected %d flags and won %d tokens ]",winnerid,mostflags,CTFToken);
			SendClientMessageToAll(COLOR_MINIGAME,xstring);
			Players[winnerid][ctf_wins]++;

			

			KillTimer(CTFTimer);
			


			for(new a=0; a < MAX_CTF_FLAGS; a++)
			{
			    if(IsValidDynamicPickup(CTF_Flags[a]))
			    {
					DestroyDynamicPickup(CTF_Flags[a]);
					CTF_Flags[a] = 0;
				}

				if(CTFI == true)
				{
				    DestroyDynamicMapIcon(CTFIcons[a]);
				}
			}
		
			Players[winnerid][Token]+=50;
			

		}
	}


	for(new x=0; x < sizeof cpV; x++)
	{
		if(cpV[x] == pickupid)
		{
			GameTextForPlayer(playerid,"~w~Tips & Tricks~n~~g~Read /rules~y~~n~/cmds /teles /minigames /car~n~revolutionxsamp.com",4000,3);
			return 1;
		}
	}

	if(pickupid == Server[box] && !IsAdmin(playerid))
	{
		DestroyDynamicPickup(Server[box]);
	    Server[box] = 0;
	    switch(Server[boxtype])
	    {
	        case 1:
	        {
	        	GivePlayerWeapon(playerid,WEAPON_ROCKETLAUNCHER,20);
	        	GameTextForPlayer(playerid,"~g~Winner!",300,3);
	        }

	        case 2:
	        {
	            GiveToken(playerid,500);
	            GameTextForPlayer(playerid,"~g~Winner!",300,3);
	        }

	        case 3:
	        {
	            Players[playerid][VIP] = 1;
	            GameTextForPlayer(playerid,"~g~Winner!",300,3);
	            SendClientMessage(playerid,COLOR_GREEN,"* You are now a VIP Player! (Activated by Gift Box Game)");
			}
			
			case 4:
			{
			    GivePlayerCash(playerid,50000);
			    GameTextForPlayer(playerid,"~g~Winner!",300,3);
			}
	    }
	    Server[boxtype] = 0;
		format(xstring,sizeof xstring,"** Gift-Box Minigame has ended! [Winner: %p (ID:%d)]",playerid,playerid);
		SendClientMessageToAll(COLOR_ORANGE,xstring);
	}

	new propid = -1;
	for(new id; id<MAX_PROPERTIES; id++)
	{
		if(PropInfo[id][PickupNr] == pickupid)
		{
			propid = id;
            break;
		}
	}
	if(propid != -1)
	{
    	format(xstring, sizeof xstring, "~n~~w~\"%s\"~n~~b~Value: ~w~$%d~n~~b~Earning: ~w~$%d~n~~b~Owner: ~w~%s", PropInfo[propid][PropName], PropInfo[propid][PropValue], PropInfo[propid][PropEarning], PropInfo[propid][PropOwner]);
		GameTextForPlayer(playerid, xstring, 6000, 3);
		return 1;
	}

	return 1;
}

forward countdownr(Float:x,Float:y,Float:z,r);
public countdownr(Float:x,Float:y,Float:z,r)
{
	if(CountDown == 4)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i, r, x, y, z))
			{
				GameTextForPlayer(i,"~p~Countdown",1000,4);
			}
		}
	}

	CountDown--;
	if(CountDown == 0)
	{
		CountDown = -1;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i, r, x, y, z))
			{
				PlayerPlaySound(i, 3200, 0.0, 0.0, 0.0);
				GameTextForPlayer(i,"~g~GO~ r~!",1000,4);
			}
		}
		return 0;
	}
	else
	{
		new text[7]; format(text,sizeof(text),"~w~ %d",CountDown);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i, r, x, y, z))
			{
				PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				GameTextForPlayer(i,text,1000,4);
			}
		}
	}

	SetTimerEx("countdownr",1000,false,"fffd",x,y,z,r);
	return 0;
}

forward countdown();
public countdown()
{
	if(CountDown == 4) GameTextForAll("~p~Countdown",1000,4);

	CountDown--;
	if(CountDown == 0)
	{
		GameTextForAll("~g~GO~ r~!",1000,4);
		CountDown = -1;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			PlayerPlaySound(i, 3200, 0.0, 0.0, 0.0);
		}
		return 0;
	}
	else
	{
		new text[7]; format(text,sizeof(text),"~w~ %d",CountDown);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
		}
	 	GameTextForAll(text,1000,4);
	}

	SetTimer("countdown",1000,false);
	return 0;
}



forward CPUConnectTime(index, response_code, data[]);
public CPUConnectTime(index, response_code, data[])
{
    if(response_code != 200) return 1;
	format(xstring,sizeof xstring,"3Server Memory Usage:1 %s",data);
    strdel(tmpc,0,strlen(tmpc));
 	return 1;
}

/*
IRCCMD:panic(botid, channel[], user[], host[], params[])
{
    if(IRC_IsAdmin(botid, channel, user))
   	{
		new GSA,RSA;
  		GSA = random(1000);
   	    RSA = random(1000) + random(25000);
   	 	format(xstring,sizeof xstring,"0,1~~ RX-FENCE SECURITY:~~ Security Fence Refreshed with Key Code %daBx-sMa%d",GSA,RSA);
    	IRC_GroupSay(gGroupID,channel,"0,1~~ Server Lockdown Initiated.. Please wait...");
    	IRC_GroupSay(gGroupID,channel,"0,1~~ Securing Accounts.... Done. (Step 1)");

    	IRC_GroupSay(gGroupID,channel,"0,1~~ Generating Server Password.... Done. (Step 2) (Sent to Management)");
		new pass = random(99992);
		new past[18];
		format(past,sizeof past,"password %d",pass);
		SendRconCommand(past);

    	format(Security,sizeof Security,"%daBx-sMa%d",GSA,RSA);

    	IRC_GroupSay(gGroupID,channel,"0,1~~ Generating New Fence Key.... Done. (Final Step) (Sent to PANZEHIR and CJ101)");

    	format(xstring,sizeof xstring,"0,1~~ RX-FENCE SECURITY LOCKDOWN:~~ Key Code %s ~~~ Rcon Password: %d",Security,pass);
    	IRC_GroupSay(gGroupID,"CJ101",xstring);
    	IRC_GroupSay(gGroupID,"PANZEHIR",xstring);
    	IRC_GroupSay(gGroupID,"Saloun",xstring);



   	}
	return 1;
}

IRCCMD:securitycode(botid, channel[], user[], host[], params[])
{
    if(IRC_IsOwner(botid, channel, user))
   	{
        if(!strcmp(channel,IRC_CHANNEL))
	    {
	        IRC_GroupSay(gGroupID,channel,"4RX-ERROR: Wrong channel.");
			return 1;
		}
   	    format(xstring,sizeof xstring,"0,1~~ RX-FENCE SECURITY:~~ You are authorized to access the code.. Here it is: %s",Security);
   	    IRC_GroupSay(gGroupID,IRC_MANAGER, xstring);
   	}
	return 1;
}


IRCCMD:securityrefresh(botid, channel[], user[], host[], params[])
{
    if(IRC_IsOwner(botid, channel, user))
   	{
   	    new RSA, GSA;
   	    GSA = random(1000);
   	    RSA = random(1000) + random(25000);
   	    format(xstring,sizeof xstring,"0,1~~ RX-FENCE SECURITY:~~ Security Fence Refreshed with Key Code %daBx-sMa%d",GSA,RSA);
   	    IRC_GroupSay(gGroupID,channel, xstring);
   	    format(Security,sizeof Security,"%daBx-sMa%d",GSA,RSA);
   	}
	return 1;
}

IRCCMD:cpuuptime(botid,channel[], user[], host[], params[])
{
    if (IRC_IsOp(botid,channel, user))
	{
		format(tmpc,sizeof tmpc,"%s",channel);
		HTTP(0,HTTP_GET,"139.99.137.130/cputime.php","","CPUConnectTime");
	} else IRC_GroupSay(gGroupID,channel,"4Error: Access Denied");
	return 1;
}

IRCCMD:cpuusage(botid,channel[], user[], host[], params[])
{
    if (IRC_IsOp(botid,channel, user))
	{
		format(tmpc,sizeof tmpc,"%s",channel);
		HTTP(0,HTTP_GET,"139.99.137.130/memory.php","","CPUConnect");
	} else IRC_GroupSay(gGroupID,channel,"4Error: Access Denied");
	return 1;
}
*/


public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
		if(IsAdmin(playerid)) return SendClientMessage(playerid,COLOR_GREY,"** Admin, No Command Found. Type {009349}/cmds {AFAFAF}for a commands list, or type /help for help.");
		if(IsVIP(playerid)) return SendClientMessage(playerid,COLOR_GREY,"** VIP, No Command Found. Type {009349}/cmds {AFAFAF}for a commands list, or type /help for help.");
		if(IsVIPLevel2(playerid)) return SendClientMessage(playerid,COLOR_GREY,"** Pro Member, No Command Found. Type {009349}/cmds {AFAFAF}for a commands list, or type /help for help.");
        SendClientMessage(playerid,COLOR_GREY,"** No Command Found. Type {009349}/cmds {AFAFAF}for a commands list, or type /help for help.");
	} 
	return 1;
}

forward RandomMessages();
public RandomMessages()
{
    new randMSG = random(sizeof(RandomMSG));
    SendClientMessageToAll(COLOR_YELLOW, RandomMSG[randMSG]);
    
	new randomPlayer =  random(GetMaxPlayers());
	new Jackpot;
	new Registrations;

	foreach(new i : Player)
	{

		if(Players[i][Logged] == true)
	    {
	        if(Players[i][Lotto] >= 0) Jackpot += Players[i][Lotto];
	    
	        if(Players[i][VIP] == 0) Players[i][Token]+=5;
	        if(Players[i][VIP] == 1) Players[i][Token]+=19;
	        Registrations++;
	        
  			if(PlayerProps[i] > 0)
	  		{
                if(IsVIPLevel2(i)) GivePlayerCash(i, Players[i][Earnings] * 2); else GivePlayerCash(i, Players[i][Earnings]);
				format(xstring, 64, "You earned $%d from your properties!", Players[i][Earnings]);
				SendClientMessage(i,COLOR_PINK, xstring);
			}
   		}
   		
	}

	
	if(IsPlayerConnected(randomPlayer) && !IsPlayerNPC(randomPlayer) && Jackpot > 0)
	{
		// Rx Lottery
		format(xstring,sizeof xstring,"[##] JACKPOT!! [##] %p (ID:%d) won the RX-Lottery! ($%d)",randomPlayer,randomPlayer,Jackpot);
		SendClientMessageToAll(0xFF0BF468,xstring);
		PlayerPlaySound(randomPlayer, 5448, 0,0,0 );
		GivePlayerCash(randomPlayer, Jackpot);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			Players[i][Lotto] = 0;
		}
		
	}  
	else 
	{
		foreach(new i : Player) Players[i][Lotto] = 0;
		SendClientMessageToAll(0xFF0BF468,"[##] Nobody won the lottery. Another winner will be picked soon! Type /lotto to buy a ticket");
	}	

	new i = laststatic+1;
	
    foreach(i : Vehicle)
	{
		if(!IsSeatTaken(i,0) && GetVehicleVirtualWorld(i) == 0) DestroyVehicleEx(i);
	}
	
	for(new propid; propid<PropertiesAmount; propid++)
	{
	    if(PropInfo[propid][PropIsBought] == 1)
	    {
			if(PropInfo[propid][PropUnbuyableTime] > 0)	PropInfo[propid][PropUnbuyableTime]--;
		}
	}


	return 1;
}


public OnPlayerModelSelectionEx(playerid, response, extraid, modelid)
{
	if(extraid == SEARCH_MENU)
	{
		if(response)
		{
	  		new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			new Float:ang;
			GetPlayerFacingAngle(playerid,ang);
			GetXYInFrontOfPlayer(playerid,x,y,0);
   			new store = CreateDynamicObject(modelid,x+4,y,z,0,0,ang,GetPlayerVirtualWorld(playerid),-1,-1);
		    Streamer_UpdateEx(playerid,x,y,z);
		    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
			format(xstring,sizeof(xstring),"Object ID %d Created. (Model: %d)",store, modelid);
			SendClientMessage(playerid,COLOR_OBJ,xstring);
			
			return true;
		}
	}

	return true;
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid == planelist)
	{
	    if(response)
	    {
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			if(modelid == 520 || modelid == 464) return SendClientMessage(playerid,COLOR_RED,"** You cannot spawn that.");
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(modelid,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
	    }
    	return 1;
	}
	if(listid == bikelist)
	{
	    if(response)
	    {
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(modelid,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
	    }
    	return 1;
	}
	if(listid == helislist)
	{
	    if(response)
	    {
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
            if(modelid == 447 || modelid == 425) return SendClientMessage(playerid,COLOR_RED,"** You cannot spawn that.");
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(modelid,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
	    }
    	return 1;
	}
	
	if(listid == skinlist)
	{
	    if(response)
	    {
			Players[playerid][Skin] = modelid;
			SetPlayerSkin(playerid,modelid);
			Save(playerid);
	    }
    	return 1;
	}
	
	return 1;
}


forward RmInvis(playerid);
public RmInvis(playerid)
{
	foreach(new i : Player)
	{
    	SetPlayerMarkerForPlayer(i, playerid, ( GetPlayerColor( playerid ) & GetPlayerColor( playerid ) ) );
    }
	GameTextForPlayer(playerid,"~w~Visible Again",800,3);
	return 1;
}

stock Float:DistanceToPoint(Float:X1, Float:Y1, Float:Z1, Float:X2, Float:Y2, Float:Z2) return Float:floatsqroot(((X2 - X1) * (X2 - X1)) + ((Y2 - Y1) * (Y2 - Y1)) + ((Z2 - Z1) * (Z2 - Z1)));
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	switch(dialogid)
	{
		case DIALOG_BIKEGAME:
		{
			if(!response) return 0;
			for(new a = 1; a<9; a++)
			{
				PMG_Pickups[a][playerid] = CreateDynamicPickup(19606,14,BikeStuntCPS[a][0],BikeStuntCPS[a][1],BikeStuntCPS[a][2],-1,-1,playerid);
			}
			SendClientMessage(playerid,COLOR_YELLOW,"* Collect all the pickups for a reward!");
		}
		
		case 20:
		{
			if(!response) return 0;
		    if(listitem == 0) ShowPlayerDialog(playerid,21,DIALOG_STYLE_LIST,"Teleports - Airports","Los Santos Airport\nSan Fierro Airport\nLas Venturas Airport\nDesert Airport\nArea 69 Airport","Teleport","Back");
			if(listitem == 1) ShowPlayerDialog(playerid,22,DIALOG_STYLE_LIST,"Teleports - Parachuting","Parachute Jump Spot 1\nParachute Jump Spot 2\nParachute Jump Spot 3\nParachute Jump Spot 4\nParachute Jump Spot 5","Teleport","Back");
		  	if(listitem == 2) ShowPlayerDialog(playerid,8,DIALOG_STYLE_LIST,"Drifting Menu","Drift Area 1\nDrift Area 2\nDrift Area 3\nDrift Area 4\nDrift Area 5\nDrift Area 6\nDrift City by ColdX","Ok","Cancel");
			if(listitem == 3) ShowPlayerDialog(playerid,23,DIALOG_STYLE_LIST,"Teleports - Parkour","Parkour Spot 1\nParkour Spot 2\nParkour Spot 3\nParkour Spot 4","Teleport","Back");
			if(listitem == 4) ShowPlayerDialog(playerid,24,DIALOG_STYLE_LIST,"Teleports - Deathmatch Zones","Zone 1 (On top of building)\nZone 2 (Cargo Boat)\nZone 3\nZone 4\nZone 5 (Construction Site)\nZone 6 (Behind Houses)\nZone 7\nZone 8\nZone 9\n Zone 10","Teleport","Cancel");
			if(listitem == 5) ShowPlayerDialog(playerid,12,DIALOG_STYLE_LIST,"Stunts List","Twister (By Hitman)\nNrgStunt2 By Hitman\nJump by DeathMaster\nQuarry By DeathMaster\nRafinha\nImpossible Challeges (By GTAFreak)\nTripZenX 1 (easy) (By YenX)\nTripZenX 2 (normal) (By YenX)\nTripZenX 3 (hard) (By YenX)\nBMX parkour By RaveN\nRace Track By RaveN\n","Ok","Cancel");
			if(listitem == 6) ShowPlayerDialog(playerid,99,DIALOG_STYLE_LIST,"Interiors","{83BFBF}Sex Shop\nZeros RC Shop\nFour Dragons Casino\nCaligulas Casino\nRedsands Casino\nSF Garage\nWoozies Garage\nMichelles House\nGanton Bar\nWoozies House\nWorld of Coq\nGarage\nDJ ROOM\nBlastin Fools Records\nDenise's Room","Teleport","Cancel");
			if(listitem == 7) ShowPlayerDialog(playerid,801,DIALOG_STYLE_LIST,"Custom Object Sets","{D52DFF}Poolhouse\n{33CCFF}Mansion\n{00FF00}AlexM's House\n{FF9900}Playaz Mansion\n{00FFFF}CJ101's House\n{D52DFF}Maulda's Disco\n{33CCFF}Custom City 1\n{00FF00}Custom City 2\n{FF9900}Custom City 3\n{FF9900}Custom City 4\n{D52DFF}Custom City 5","Teleport","Cancel");
		}

		case 801:
		{
			//TELEMENU
			if(!response) return 0;
			switch(listitem)
			{
				case 0:
				{
					if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerInterior(playerid,0);
					SetPlayerFacingAngle(playerid,304.6841);
				 	Streamer_UpdateEx(playerid,-681.5280,364.6834,1.8331);
				  	GotoPosition(playerid,-681.5280,364.6834,1.8331,true);
				   	GameTextForPlayer(playerid,"~y~Poolhouse",500,1);
				}				
				
				case 1:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerInterior(playerid, 0);
				 	GotoPosition(playerid,-2282.3933,-999.4680,8812.8291,true);
				 	SetPlayerFacingAngle(playerid, 229.7500);
				  	GameTextForPlayer(playerid,"~p~Mansion",500,1);	
				}
				
				case 2:
				{
				   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerInterior(playerid, 0);
				 	GotoPosition(playerid,2941.0317,-2055.1846,4.1920,true);
				 	SetPlayerFacingAngle(playerid, 269.0625);
				  	GameTextForPlayer(playerid,"AlexM's~n~House",500,1);					
				}
				
				case 3:
				{
					if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerInterior(playerid, 0);
				 	GotoPosition(playerid,1242.7192,-817.2737,84.1406,true);
				 	SetPlayerFacingAngle(playerid, 291.5060);
				  	GameTextForPlayer(playerid,"~p~Playaz~n~Mansion",500,1);
				}
				
				case 4:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerInterior(playerid, 1);
				 	GotoPosition(playerid,-1541.8231,683.0339,201.7936,true);
				 	SetPlayerFacingAngle(playerid, 329.1711);
				  	GameTextForPlayer(playerid,"CJ101's~n~House",500,1);	
				}
				
				case 5:
				{
					if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerInterior(playerid,0);
				 	GotoPosition(playerid,-2549.6995,625.3061,14.5220,true);
				  	GameTextForPlayer(playerid,"~b~ Maluda's~n~ Disco",500,4);
					Streamer_Update(playerid);
					SetPlayerFacingAngle(playerid,56.3772);
					SetCameraBehindPlayer(playerid);
					format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Maluda's Dico (/maludadisco)",playerid,playerid);
					SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
				}
				
				case 6:
				{
					Streamer_UpdateEx(playerid,3507.7263,-197.1925,15.8742);
				 	GotoPosition(playerid,3507.7263,-197.1925,15.8742,true);
				 	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city",playerid,playerid);
					SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
				}
				
				case 7:
				{
					if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					Streamer_UpdateEx(playerid,-3131.8640,-2624.2654,59.2779);
				 	GotoPosition(playerid,-3131.8640,-2624.2654,59.2779,true);
				 	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city2",playerid,playerid);
					SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
				}
				
				case 8:
				{
					if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
				 	Streamer_UpdateEx(playerid,3387.0535,-1268.6613,17.2600);
				  	GotoPosition(playerid,3387.0535,-1268.6613,17.2600,true);
				  	
					format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city3",playerid,playerid);
					SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);					
				}
				
				case 9:
				{
					if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
				 	Streamer_UpdateEx(playerid,5437.6040,-2277.5217,4.6215);
				  	GotoPosition(playerid,5437.6040,-2277.5217,4.6215,true);
					format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city4",playerid,playerid);
					SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
				}
				
				case 10:
				{
					if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
				 	Streamer_UpdateEx(playerid,2390.1516,-5295.1299,6.3841);
				  	GotoPosition(playerid,2390.1516,-5295.1299,6.3841,true);
				  	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city5",playerid,playerid);
					SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
				}
			}			
		}		
		
		case 99:
		{
			switch(listitem)
			{
				case 0:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,3);
					SetPlayerFacingAngle(playerid,360);
					GotoPosition(playerid,-100.1730,-21.4457,1000.7188,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Sex Shop",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}		
				
				case 1:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,6);
					SetPlayerFacingAngle(playerid,288.3397);
					GotoPosition(playerid,-2238.3428,131.0664,1035.4141,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Zero's RC",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}				
				
				case 2:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,10);
					SetPlayerFacingAngle(playerid,88.7400);
					GotoPosition(playerid,2002.4768,1017.6772,994.4688,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Four Dragons",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}	
				
				case 3:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid,186.5700);
					GotoPosition(playerid,2229.8799,1677.7300,1008.3594,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Caligulas",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}		
				
				case 4:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,12);
					SetPlayerFacingAngle(playerid,47.6500);
					GotoPosition(playerid,1135.5100,-7.6900,1000.6797,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Redsands Casino",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}				
				
				case 5:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid,0);
					GotoPosition(playerid,-2041.23,178.39,28.84,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~SF Garage",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}		
				
				
				case 6:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid,0);
					GotoPosition(playerid,-2159.122802,641.517517,1052.381713,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Woozies",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}			
				
				case 7:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,4);
					SetPlayerFacingAngle(playerid,0);
					GotoPosition(playerid,306.19,307.81,1003.30,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Michelles",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}		
				
				case 8:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,11);
					SetPlayerFacingAngle(playerid,180);
					GotoPosition(playerid,501.9810,-69.9978,998.7578,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Ganton Bar",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}					
				
				case 9:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid,84.3497);
					GotoPosition(playerid,-2159.122802,641.517517,1052.381713,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Woozies House",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}
				
				case 10:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid,0);
					GotoPosition(playerid,452.489990,-18.179698,1001.132812,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~World of Coq",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}		
				
				case 11:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid,82.4799);
					GotoPosition(playerid,618.3831,-14.5049,1000.9219,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Garage",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}	
				
				case 12:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,3);
					SetPlayerFacingAngle(playerid,171.0816);
					GotoPosition(playerid,514.6452,-10.2434,1001.5653,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~DJ ROOM",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}	
				
				case 13:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,3);
					SetPlayerFacingAngle(playerid,0.6469);
					GotoPosition(playerid,1038.2930,-0.7766,1001.2845,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Blastin Fools",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}	
				
				case 14:
				{
				    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,10);
					SetPlayerFacingAngle(playerid,216.0609);
					GotoPosition(playerid,245.0823,305.1489,999.1484,false);
					GameTextForPlayer(playerid,"~y~Teleported to ~n~Blastin Fools",1000,3);
					PlayerPlaySound(playerid,1054,0,0,0);					
				}													
			}
		}
	}
	if(dialogid == 7777)
	{
		//ShowPlayerDialog(playerid,7777,DIALOG_STYLE_LIST,"Survival Menu","\n+ 50 Ammo (2 Points)\nInvisible For 10 Seconds\n10 Points\nAirdrop (Coming Soon)","Buy","Leave Menu");
		if(!response) return 1;
		switch(listitem)
		{
		    case 0:
		    {
		        if(Players[playerid][SPoints] >= 2)
		        {
		            new am = GetPlayerAmmo(playerid);
					new w = GetPlayerWeapon(playerid);
		            GivePlayerWeapon(playerid,WEAPON:w,am + 50);
		            GameTextForPlayer(playerid,"~g~More Ammo!",800,3);
		        }   else GameTextForPlayer(playerid,"~g~Need More ~n~Points",800,3);
		    }
		    
		    case 1:
		    {
		        if(Players[playerid][SPoints] >= 10)
		        {
         			foreach(new i : Player)
					{
				    	SetPlayerMarkerForPlayer(i, playerid, ( GetPlayerColor( playerid ) & 0xFFFFFF00 ) );
				    }
				    SetTimerEx("RmInvis",10000,false,"d",playerid);
		            GameTextForPlayer(playerid,"~w~invisible!",800,3);
		        }   else GameTextForPlayer(playerid,"~g~Need More ~n~Points",800,3);
		    }
		}
	}


	if(dialogid == 18001)
	{
		if(!response) return 1;
		if(listitem == 0)
		{
		    ShowPlayerDialog(playerid,18002,DIALOG_STYLE_LIST,"Minigames","\nwwdm\nrwdm\nmgdm\nrocketdm\nsniperdm\nsniperdm2\ngrenadedm\nmgdm2\n/deagledm\n/shotgundm\n/combatdm\n/m4dm\n/flamedm\n/hydradm\n/chainsawdm\n/chainsawdm2\n/pooldm\n/pooldm2\n/war","Play","Back");
		}
		
		if(listitem == 1)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][TDMJoined] == true) return
			SendClientMessage(playerid,-1,"* You've already joined TDM. "),
			SendClientMessage(playerid,-1,"* /changetdm to change your team! & /leavetdm to leave the TDM");
			else
			{
				if(Players[playerid][God] == true) Players[playerid][God] = false;
				TogglePlayerSpectating(playerid, true);
				SetPlayerCameraPos(playerid,163.6733,1841.8462,60.6406);
				SetPlayerArmour(playerid,100);
				SetPlayerHealth(playerid,100);
				SetPlayerCameraLookAt(playerid,163.6733,1841.8462,17.6406);
				ShowPlayerDialog(playerid,2796,DIALOG_STYLE_LIST,"RxTDM","Auto Assign\nTeam 1\nTeam 2","Select","Leave");
			/*

				*/
				SendClientMessage(playerid,-1,"* You Joined TDM! You can leave TDM any time - /leavetdm");
				SendClientMessage(playerid,-1,"* Commands: /airdrop /changeclass /tdmhelp");
			}
			new str[100],name[20];
			GetPlayerName(playerid,name,sizeof name);
			format(str,sizeof str,"[=!=] Player %s (ID:%d) has joined Team Deathmatch! (/jointdm)",name,playerid);
			SendClientMessageToAll(COLOR_AMSG,str);
		}
		
		if(listitem == 2)
		{
			if(ActiveCTF == true) return SendClientMessage(playerid,COLOR_RED,"* A CTF Is already in progress!");
			if(CTFLoaded == false) return SendClientMessage(playerid,COLOR_RED,"* A CTF is not loaded.");
			if(Players[playerid][Minigame] != 0 || Players[playerid][TDMJoined] == true) return SendClientMessage(playerid,COLOR_RED,"* You are already playing a minigame!");

			Players[playerid][Minigame] = 800;
			SendClientMessage(playerid,COLOR_WHITE,"* You joined the Capture the Flag game. You will be teleported when it starts.");
			CTFMembers++;

			format(xstring,sizeof xstring,"%p (ID:%d) has joined the CTF!",playerid,playerid);
			SendClientMessageToAll(COLOR_WHITE,xstring);
		}
		
		if(listitem == 3)
		{
			if(Server[ptp_president] == INVALID_PLAYER_ID)
			{
			    if(Players[playerid][God] == true) Players[playerid][God] = false;
			    Server[ptp_president] = playerid;
		    	new str[100],name[20];
				GetPlayerName(playerid,name,sizeof name);
				format(str,sizeof str,"[=!=] Player %s (ID:%d) has joined Protect the President! (/joinptp)",name,playerid);
				SendClientMessageToAll(COLOR_AMSG,str);
				SetPlayerVirtualWorld(playerid,300);
				SetPlayerTeam(playerid, 2);
				SetPlayerSkin(playerid,164);
				SetPlayerColor(playerid,COLOR_YELLOW);
				SetPlayerPos(playerid,1130.1890,-2037.1536,69.0078);
				Players[playerid][Minigame] = 21;
				ResetPlayerWeapons(playerid);
				GivePlayerWeapon(playerid,WEAPON_SHOTGUN,9999); // shotgun
				GivePlayerWeapon(playerid,WEAPON_DEAGLE,9999); // shotgun
			}
			else
			{
			    ShowPlayerDialog(playerid,300,DIALOG_STYLE_LIST,"Spawn as...","Attackers\nSecret Service","Spawn","Cancel");
			}
		}
	}
	
	if(dialogid == 18002)
	{
		if(!response) return 1;
		if(listitem == 0)
		{
 			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			ResetPlayerWeapons(playerid);
			new t = random(5);
			if(t == 0)
			{
				SetPlayerPos(playerid,1975.7042,1916.7916,130.9345);
				SetPlayerFacingAngle(playerid,93.5051);
			}
			if(t == 1)
			{
				SetPlayerPos(playerid,1955.4971,1908.4722,130.9375);
				SetPlayerFacingAngle(playerid,320.0238);
			}
			if(t == 2)
			{
				SetPlayerPos(playerid,1998.6490,1857.8770,122.0156);
				SetPlayerFacingAngle(playerid,28.9578);
			}
			if(t == 3)
			{
				SetPlayerPos(playerid,1998.7826,1973.4503,122.0156);
				SetPlayerFacingAngle(playerid,150.2189);
			}
			if(t == 4)
			{
				SetPlayerPos(playerid,1893.7568,1914.6062,122.0156);
				SetPlayerFacingAngle(playerid,271.7935);
			}
			SetPlayerVirtualWorld(playerid,16);
			GivePlayerWeapon(playerid,WEAPON:17,5); // tear gas
			GivePlayerWeapon(playerid,WEAPON_DEAGLE,9999); // deagle
			GivePlayerWeapon(playerid,WEAPON_SHOTGUN,9999); // shotgun
			GivePlayerWeapon(playerid,WEAPON_MP5,9999); // mp5
			GivePlayerWeapon(playerid,WEAPON_M4,9999); // m4
			GivePlayerWeapon(playerid,WEAPON_SNIPER,9999); // snipe
			Players[playerid][Minigame] = 16;
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /wwdm minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
			return 1;
		}
		
		if(listitem == 1)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			ResetPlayerWeapons(playerid);
			new t = random(4);
			if(t == 0)
			{
				SetPlayerPos(playerid,1933.4401,1628.7432,72.2578);
				SetPlayerFacingAngle(playerid,216.6230);
			}
			if(t == 1)
			{
				SetPlayerPos(playerid,1956.6954,1600.3418,72.2578);
				SetPlayerFacingAngle(playerid,37.0813);
			}
			if(t == 2)
			{
				SetPlayerPos(playerid,1904.1624,1629.2538,72.2578);
				SetPlayerFacingAngle(playerid,266.4200);
			}
			if(t == 3)
			{
				SetPlayerPos(playerid,1955.9216,1655.5416,72.2556);
				SetPlayerFacingAngle(playerid,137.3254);
			}
			SetPlayerVirtualWorld(playerid,17);
			GivePlayerWeapon(playerid,WEAPON_SAWEDOFF,9999); // Sawn-Off
			GivePlayerWeapon(playerid,WEAPON_TEC9,9999); // Tec-9
			GivePlayerWeapon(playerid,WEAPON_COLT45,9999); // pistol
			Players[playerid][Minigame] = 17;
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /rwdm minigame",playerid,playerid);
			SendClientMessageToAll(COLOR_YELLOW,xstring);
		}
		
		if(listitem == 2)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(2);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,2000.8655,1521.8943,17.0682);
			if(t == 1 || t == 2) SetPlayerPos(playerid,2000.4561,1566.0242,15.3672);
			SetPlayerVirtualWorld(playerid,50);
			GivePlayerWeapon(playerid,WEAPON_MINIGUN,9999);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 30;
			Players[playerid][allowmg] = true;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /mgdm minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
		}
		
		if(listitem == 3)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,214.0967,1870.5313,13.1406);
			if(t == 1 || t == 2) SetPlayerPos(playerid,170.0715,1853.7411,25.5000);
			if(t == 3) SetPlayerPos(playerid,166.0694,1929.3878,25.5000);
			SetPlayerVirtualWorld(playerid,2);
			GivePlayerWeapon(playerid,WEAPON_ROCKETLAUNCHER,9999);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 1;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /rocketdm minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
		}
		
		if(listitem == 4)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,23.2376,2250.5869,126.6669);
			if(t == 1 || t == 2) SetPlayerPos(playerid,-76.0519,2264.8367,124.5115);
			if(t == 3) SetPlayerPos(playerid,-213.6213,2320.8936,105.6661);
			SetPlayerVirtualWorld(playerid,5);
			GivePlayerWeapon(playerid,WEAPON_SNIPER,9999);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 4;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /sniperdm minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
		}
		
		if(listitem == 5)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,1513.1832,-1858.3608,29.7019);
			if(t == 1 || t == 2) SetPlayerPos(playerid,1432.0598,-1857.2283,30.6969);
			if(t == 3) SetPlayerPos(playerid,1540.9799,-1779.4799,33.4297);
			SetPlayerVirtualWorld(playerid,12);
			GivePlayerWeapon(playerid,WEAPON_SNIPER,9999);
			Players[playerid][Minigame] = 12;
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
		}
		
		if(listitem == 6)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			ResetPlayerWeapons(playerid);
			switch(random(2))
			{
			    case 0:
			    {
			        SetPlayerPos(playerid,2442.9958,1799.9316,16.3222);
			        SetPlayerFacingAngle(playerid,67.7923);
			    }

			    case 1:
			    {
		     		SetPlayerPos(playerid,2406.4910,1812.8901,16.3222);
			        SetPlayerFacingAngle(playerid,252.6374);
			    }

			    case 2:
			    {
			        SetPlayerPos(playerid,2423.1658,1830.8457,16.3222);
			        SetPlayerFacingAngle(playerid,187.4633);
			    }
			}
		  	SetPlayerInterior(playerid,1);
		  	SetPlayerVirtualWorld(playerid,8);
		   	GivePlayerWeapon(playerid,WEAPON_GRENADE,9999);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
		   	Players[playerid][Minigame] = 8;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
		}
		
		if(listitem == 7)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(2);
			ResetPlayerWeapons(playerid);
			switch(t)
			{
			    case 0:
			    {
			        SetPlayerPos(playerid,330.0832,1855.7122,7.8281);
			        SetPlayerFacingAngle(playerid,113.2123);
			    }

			    case 1:
				{
				    SetPlayerPos(playerid,274.8239,1866.5090,8.7578);
				    SetPlayerFacingAngle(playerid,285.8606);
				}

				case 2:
				{
				    SetPlayerPos(playerid,277.5428,1839.1570,7.8281);
				    SetPlayerFacingAngle(playerid,275.2071);
				}
			}
			SetPlayerVirtualWorld(playerid,50);
			GivePlayerWeapon(playerid,WEAPON_MINIGUN,9999);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 30;
			Players[playerid][allowmg] = true;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /mgdm2 minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
		}
		
		if(listitem == 8)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,29.5377,1350.3451,9.1719);
			if(t == 1 || t == 2) SetPlayerPos(playerid,-8.1479,1396.4989,9.1719);
			if(t == 3) SetPlayerPos(playerid,-27.2948,1379.2040,9.1719);
			SetPlayerVirtualWorld(playerid,13);
			GivePlayerWeapon(playerid,WEAPON_COLT45,9999);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 13;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /deagledm minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
		}
		
		if(listitem == 9)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,2512.1396,1153.7632,22.0232);
			if(t == 1 || t == 2) SetPlayerPos(playerid,2514.1460,1128.9349,14.2705);
			if(t == 3) SetPlayerPos(playerid,2516.8015,1123.9598,10.8203);
			SetPlayerVirtualWorld(playerid,14);
			GivePlayerWeapon(playerid,WEAPON_SHOTGSPA,9999);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 14;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /shotgundm minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
		}
		
		if(listitem == 10)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(4);
			ResetPlayerWeapons(playerid);
			if(t == 0) { SetPlayerPos(playerid,-1866.1927,-1609.8442,21.7578); SetPlayerFacingAngle(playerid,237.2476); }
			if(t == 1) { SetPlayerPos(playerid,-1847.5714,-1621.7634,21.8833); SetPlayerFacingAngle(playerid,55.8260);  }
			if(t == 2) { SetPlayerPos(playerid,-1846.5114,-1608.1266,21.7578); SetPlayerFacingAngle(playerid,138.2334); }
			if(t == 3) { SetPlayerPos(playerid,-1857.7092,-1631.4779,21.8977); SetPlayerFacingAngle(playerid,352.8454); }
			if(t == 4) { SetPlayerPos(playerid,-1868.3928,-1620.1570,21.8492); SetPlayerFacingAngle(playerid,279.2113); }
			SetPlayerVirtualWorld(playerid,15);
			GivePlayerWeapon(playerid,WEAPON_SHOTGSPA,9999);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 15;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /combatdm minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
		}
		
		if(listitem == 11)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,-684.9328,941.9778,13.6328);
			if(t == 1 || t == 2) SetPlayerPos(playerid,-691.4788,932.4764,13.6328);
			if(t == 3) SetPlayerPos(playerid,-684.6680,932.7020,13.6328);
			SetPlayerVirtualWorld(playerid,6);
			GivePlayerWeapon(playerid,WEAPON_MP5,9999);
			Players[playerid][Minigame] = 5;
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
		}
		
		if(listitem == 12)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(2);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,2000.3134,1562.9109,15.3672);
			if(t == 1 || t == 2) SetPlayerPos(playerid,2000.4041,1521.0747,17.0625);
		    SetPlayerVirtualWorld(playerid,19);
		    GivePlayerWeapon(playerid,WEAPON_FLAMETHROWER,10000);
			Players[playerid][Minigame] = 19;
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
		}
		
		if(listitem == 13)
		{
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
			SetPlayerVirtualWorld(playerid,101);
			new spawn = random(2);
			switch(spawn)
			{
			    case 0:
			    {
			        GotoPosition(playerid,371.8680,2516.9766,350.7058,true);
			        SetPlayerInterior(playerid,0);
					new car = CreateVehicle(520,371.8680,2516.9766,350.7058,83.0620,6,6,-1);
					SetVehicleVirtualWorld(car,101);
					PutPlayerInVehicle(playerid,car,0);
					SetPlayerTime(playerid,7,0);
					Players[playerid][autofix] = false;
					SendClientMessage(playerid,COLOR_RED,"* AutoFix DISABLED. [ You entered a minigame ]");
				}

		  		case 1:
			    {
			        GotoPosition(playerid,-648.5695,2079.3611,281.2600,true);
			    	SetPlayerInterior(playerid,0);
					new car = CreateVehicle(520,371.8680,2516.9766,350.7058,83.0620,6,6,-1);
					SetVehicleVirtualWorld(car,101);
					PutPlayerInVehicle(playerid,car,0);
					SetPlayerTime(playerid,7,0);
					Players[playerid][autofix] = false;
					SendClientMessage(playerid,COLOR_RED,"* AutoFix DISABLED. [ You entered a minigame ]");
				}

		  		case 2:
			    {
			        GotoPosition(playerid,590.2421,1139.8558,318.5010,true);
			        SetPlayerInterior(playerid,0);
					new car = CreateVehicle(520,371.8680,2516.9766,350.7058,83.0620,6,6,-1);
					SetVehicleVirtualWorld(car,101);
					PutPlayerInVehicle(playerid,car,0);
					SetPlayerTime(playerid,7,0);
					Players[playerid][autofix] = false;
					SendClientMessage(playerid,COLOR_RED,"* AutoFix DISABLED. [ You entered a minigame ]");

				}

		  		case 3:
			    {
			        GotoPosition(playerid,-176.5820,1580.3032,227.0999,true);
			        SetPlayerInterior(playerid,0);
					new car = CreateVehicle(520,371.8680,2516.9766,350.7058,83.0620,6,6,-1);
					SetVehicleVirtualWorld(car,101);
					PutPlayerInVehicle(playerid,car,0);
					SetPlayerTime(playerid,7,0);
					Players[playerid][autofix] = false;
					SendClientMessage(playerid,COLOR_RED,"* AutoFix DISABLED. [ You entered a minigame ]");
				}
			}
			Players[playerid][Minigame] = 26;
			Players[playerid][autofix] = false;
			SetPlayerWeather(playerid,34);
			SetPlayerTime(playerid,24,0);
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame, Type /leavedm");
		}
		
		if(listitem == 14)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,-1695.1942,408.6378,7.1797);
			if(t == 1 || t == 2) SetPlayerPos(playerid,-1671.8324,430.3507,7.1797);
			if(t == 3) SetPlayerPos(playerid,-1656.5126,420.3417,7.1797);
		    SetPlayerVirtualWorld(playerid,7);
		    GivePlayerWeapon(playerid,WEAPON_CHAINSAW,1);
			Players[playerid][Minigame] = 6;
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
		}
		
		if(listitem == 15)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,298.3846,-8.9059,1001.5156);
			if(t == 1 || t == 2) SetPlayerPos(playerid,285.2076,-22.5488,1001.5229);
			if(t == 3) SetPlayerPos(playerid,285.4024,-6.6964,1001.5156);
		    SetPlayerInterior(playerid,1);
		    SetPlayerVirtualWorld(playerid,7);
		    GivePlayerWeapon(playerid,WEAPON_CHAINSAW,1);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 7;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
		}
		
		if(listitem == 16)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,-2207.5579,28.2354,35.3203);
			if(t == 1 || t == 2) SetPlayerPos(playerid,-2198.6621,40.9012,35.3203);
			if(t == 3) SetPlayerPos(playerid,-2211.4121,69.1403,35.3279);
		    SetPlayerVirtualWorld(playerid,3);
		    GivePlayerWeapon(playerid,WEAPON_POOLSTICK,1);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 2;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /pooldm minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
		}
		
		if(listitem == 17)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
			if(Players[playerid][God] == true) Players[playerid][God] = false;
			new t = random(3);
			ResetPlayerWeapons(playerid);
			if(t == 0) SetPlayerPos(playerid,-222.9461,1397.0295,28.3595);
			if(t == 1 || t == 2) SetPlayerPos(playerid,-227.0822,1410.5557,27.7734);
			if(t == 3) SetPlayerPos(playerid,-219.5580,1403.5476,27.7734);
			GivePlayerWeapon(playerid,WEAPON_POOLSTICK,1);
		    SetPlayerInterior(playerid,18);
			SetPlayerVirtualWorld(playerid,4);
			SetPlayerArmour(playerid,100);
			SetPlayerHealth(playerid,100);
			Players[playerid][Minigame] = 3;
			SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");

			format(xstring,sizeof xstring,"%p (ID:%d) joined the /pooldm2 minigame",playerid,playerid);
			UpdateMOTD_Text(xstring);
		}
		
	}

	if(dialogid == 6010)
	{
		if(!response) return 1;
		if(listitem == 0)
		{
            ShowPlayerDialog(playerid,6011,DIALOG_STYLE_LIST,"Coming Soon","Type an Event Name","Hurry Up","");
		}
		
		if(listitem == 1)
		{
            ShowPlayerDialog(playerid,6011,DIALOG_STYLE_MSGBOX,"Menu Coming Soon","Create Parachute Drop\nCreate Deathmatch\nCreate Capture the Flag\nCreate Hunt the Beast\nAdvanced Editor","Hurry Up","");
		}
	}

	if(dialogid == 6868)
	{
	    if(!response) return 1;
	    new setID = ObjDialogIDs[listitem];
	    

		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setID` = '%s'", setID);
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, I could not find that object set!");
		new total;
		new creator[24],setname[24];

		
		cache_get_value_name(0,"setName",setname);
      	cache_get_value_name_int(0, "setID", setID);
  		cache_get_value_name_int(0, "total", total);
		cache_get_value_name(0,"sCreator",creator);

		format(xstring,sizeof xstring,"SELECT COUNT(*) FROM `objectsdata` WHERE `setid` = '%d'", setID);
		mysql_query(SQL, xstring);

		format(xstring,sizeof xstring,"Object Set %s was created by Admin %s\n\nsetID: %d\nObjects: %d" ,setname,creator,setID,total);
		ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Set Info",xstring,"OK","");

	}


	
	if(dialogid == 15002)
	{
	    if(!response) return SendClientMessage(playerid,COLOR_RED,"You did not delete your objects.");
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new cleared,count;
		count = CountDynamicObjects();
		for(new a = 0; a <= count; a++)
		{
			if(Players[playerid][userID] == Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) )
			{
   				Streamer_SetIntData(STREAMER_TYPE_OBJECT,a,E_STREAMER_EXTRA_ID,1000); // Set it to 1000 (Server owned)
				cleared++;
			}

			for(new i = 0; i < 10; i++)
			{
			    if(Moving[i][idUsed] == true && Moving[i][e_MovingObject_Actual] == a)
				{
					// Remove the moving data
                    DeleteMovingData(i);
				}
			}
		}
		if(cleared != 0)
		{
			format(xstring,sizeof(xstring),"Total of{E0E494} %d{FFFFFF} Objects Cleared (Streamed).",cleared);
			SendClientMessage(playerid,COLOR_WHITE,xstring);
			format(xstring,sizeof(xstring),"%p (ID:%d) cleared their objects. (Total %d)",playerid,playerid,cleared);
			SendMessageToAdmins(playerid,9,COLOR_LIGHTBLUE,xstring);
			PlayerPlaySound(playerid,1057,0,0,0);
		}	else return SendClientMessage(playerid,COLOR_YELLOW,"There were no objects to clear.");
	}


	if(dialogid == 15001)
	{
	    if(!response) return SendClientMessage(playerid,COLOR_RED,"You did not delete your objects.");
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new deleted,count,de;
		count = CountDynamicObjects();
		for(new a = 0; a <= count; a++)
		{
			if(Players[playerid][userID] == Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) )
			{
				DestroyDynamicObject(a);
				deleted++;
				
				// Move
   				for(new e = 0; e < 50; e++)
				{
				    if(Moving[e][e_MovingObject_Actual] == a)
				    {
						DeleteMovingData(e);
						de++;
				    }
				}
			}
		}
		new str[100];
		if(deleted != 0)
		{
			format(str,sizeof(str),"Total of{E0E494} %d{FFFFFF} Objects Deleted. (%d Moving)",deleted,de);
			SendClientMessage(playerid,COLOR_WHITE,str);
			format(str,sizeof(str),"%p (ID:%d) deleted their objects. (Total %d - Moving %d",playerid,playerid,deleted,de);
			SendMessageToAdmins(playerid,9,COLOR_LIGHTBLUE,str);
			PlayerPlaySound(playerid,1057,0,0,0);
		}	else return SendClientMessage(playerid,COLOR_YELLOW,"There were no objects to delete.");
	}

	if(dialogid == 7080)
	{
		if(response)
		{
		    // Liked
		    new likes;
		    format(xstring,sizeof xstring,"SELECT `likes` FROM `race` WHERE `racename` = '%s'",R_Name);
			mysql_query(SQL,xstring);
			cache_get_value_name_int(0, "likes", likes);
		    likes++;
	    	format(xstring, sizeof(xstring), "UPDATE `race` SET `likes` = '%d' WHERE `racename` = '%s'",likes,R_Name);
			mysql_query(SQL,xstring);
			GameTextForPlayer(playerid,"~g~RACE LIKED!",800,3);
		}
		else
		{
		    new likes;
		    format(xstring,sizeof xstring,"SELECT `likes` FROM `race` WHERE `racename` = '%s'",R_Name);
			mysql_query(SQL,xstring);
		    cache_get_value_name_int(0, "likes", likes);
		    likes--;
	    	format(xstring, sizeof(xstring), "UPDATE `race` SET `likes` = '%d' WHERE `racename` = '%s'",likes,R_Name);
			mysql_query(SQL,xstring);
			GameTextForPlayer(playerid,"~g~RACE DISLIKED!",800,3);
		}
		
	}

	if(dialogid == 5010)
	{
		if(!response) return 1;
		switch(listitem)
		{
		    case 0:
	  		{
	    	    ShowPlayerDialog(playerid,5011,DIALOG_STYLE_INPUT,"RevolutionX Derby System","Type a derby event to load.","Load","Cancel");
	    	}
	    	
	    	case 1:
	    	{
	    	    
	    	}
	    	
	    	case 2:
	    	{
	    	    // View derby list
				mysql_query(SQL,"SELECT `dName` FROM `derby`");
				new total = cache_num_rows();
				if(total == 0) return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Derbies","Could not find any derbies","OK","");
				new dname[50],c;
				for(new e=0; e < total; e++)
				{
					cache_get_value_name(e,"dName",dname);
				    c++;
				    if(c == 1)
				    {
				        format(xstring,sizeof xstring,"%s",dname);
				    }   else format(xstring,sizeof xstring,"%s\n%s",xstring,dname);
				}
				if(c == 0) return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Bans","Nothing found","OK","");
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_LIST,"Derbies",xstring,"OK","");
				
	    	}
	    	case 3:
	    	{
	    	    // View derby list
				mysql_query(SQL,"SELECT `racename` FROM `race`");
				new total = cache_num_rows();
				if(total == 0) return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Races","Could not find any races","OK","");
				new racename[50],c;
				for(new e=0; e < total; e++)
				{
					cache_get_value_name(e,"racename",racename);
				    c++;
				    if(c == 1)
				    {
				        format(xstring,sizeof xstring,"%s",racename);
				    }   else format(xstring,sizeof xstring,"%s\n%s",xstring,racename);
				}
				if(c == 0) return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Bans","Nothing found","OK","");
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_LIST,"Races",xstring,"OK","");

	    	}
	    }
	}
	
	if(dialogid == 5011)
	{
	    if(!response) return 1;
    	if(ActiveCTF == true) return SendClientMessage(playerid,COLOR_AMSG,"** A Event is already in progress, you cant load!");
		if(ActiveDerby == true) return SendClientMessage(playerid,COLOR_AMSG,"** A Derby is already in progress, you cant unload!");
		if(DerbyLoaded == true) return SendClientMessage(playerid,COLOR_AMSG,"** A Derby has already been loaded!");
		if(strlen(inputtext) == 0)
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /addderbyspawnpoint <ctf name>");
		}

 		format(xstring,sizeof xstring,"SELECT * FROM `derby` WHERE `dName` = '%s'",inputtext);
		mysql_query(SQL,xstring);

		if(cache_num_rows() > 0)
		{
			new Creator[21],ObjSet[21];

			cache_get_value_name(0,"dCreator",Creator);
			cache_get_value_name(0,"dObjectSet",ObjSet);
			cache_get_value_name_int(0,"dInterior",DerbyInterior);
			cache_get_value_name_int(0, "dVehicle", DerbyVehicle);

            if(strlen(ObjSet) > 0)
            {
                LoadDerbyMap(ObjSet);
            }

			format(xstring,sizeof xstring,"SELECT * FROM `dSpawns` WHERE `dName` = '%s'",inputtext);
			mysql_query(SQL,xstring);
			new total = cache_num_rows();


  			for(new e=0; e < total; e++)
			{
				cache_get_value_name_float(e,"dX", DerbySpawns[e][0]);
				cache_get_value_name_float(e,"dY", DerbySpawns[e][1]);
				cache_get_value_name_float(e,"dZ", DerbySpawns[e][2]);
				cache_get_value_name_float(e,"dRot", DerbySpawns[e][3]);
			}

			DerbyLoaded = true;
            DerbyPlayers = 0;

			format(xstring,sizeof xstring,">> Derby '%s' (Created by %s) loaded! /joinderby",inputtext,Creator);
			SendClientMessageToAll(COLOR_LIGHTBLUE,xstring);
			SendClientMessageToAll(COLOR_LIGHTBLUE,">> You can join this derby by using the /joinderby command");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"/startderby when players are ready!");
			
			PlaySoundForAll(1056);

		} 	else SendClientMessage(playerid,COLOR_RED,"** No such derby!");
	}

	if(dialogid == 13338 && response != 0)
	{
		if(listitem == 0) 
		{
			
			if(TT_ID[playerid] != -1) TT_Exit(playerid);
			if(SetUP_TT(playerid,MyLastTT[playerid]) == 1) TT_Announcement(playerid,TT_ID[playerid]);
			
			
			SetPlayerVirtualWorld(playerid, playerid + 5);
			TT_ChecknTeleport(playerid, MyLastTT[playerid]);
			
		
		}
		if(listitem == 1) 
		{
			new randtt = random(25);//random(GetMaxTTRaces());
			MyLastTT[playerid] = randtt;
			
			
			if(TT_ID[playerid] != -1) TT_Exit(playerid);
			if(SetUP_TT(playerid,MyLastTT[playerid]) == 1) TT_Announcement(playerid,TT_ID[playerid]);
			
			
			SetPlayerVirtualWorld(playerid, playerid + 5);
			TT_ChecknTeleport(playerid, randtt);
			
		
		}
		else 
		{
			MyLastTT[playerid] = __loading[playerid][listitem-2];
	    
			
			if(TT_ID[playerid] != -1) TT_Exit(playerid);
			if(SetUP_TT(playerid,MyLastTT[playerid]) == 1) TT_Announcement(playerid,TT_ID[playerid]);
			
			
			SetPlayerVirtualWorld(playerid, playerid + 5);
			TT_ChecknTeleport(playerid, MyLastTT[playerid]);
		}
		return 1;
	}
	if(dialogid == 7000)
	{
	    //ShowPlayerDialog(playerid,7000,DIALOG_STYLE_LIST,"Ammo Store","Pistols ($10000) \n ( Sub Machine Guns $25000) \n ( Automatic Rifle $100000 )\n ( Throwables $5000)","Next","Cancel");
	    switch(listitem)
	    {
	        case 0: ShowPlayerDialog(playerid,7001,DIALOG_STYLE_LIST,"Pistols","9mm\nSilenced 9mm\nDesert Eagle","Buy","Cancel");
	        case 1: ShowPlayerDialog(playerid,7002,DIALOG_STYLE_LIST,"Machine Guns","Micro SMG\nTec 9\nSMG","Buy","Cancel");
	        case 2: ShowPlayerDialog(playerid,7003,DIALOG_STYLE_LIST,"Automatics","AK47\nM4","Buy","Cancel");
	        case 3: ShowPlayerDialog(playerid,7004,DIALOG_STYLE_LIST,"Automatics","Grenade\nMolotov Cocktail\n","Buy","Cancel");
	    }
	}
	
	if(dialogid == 7004)
	{
	    if(!response) return 1;
     	switch(listitem)
	    {
	        case 0:
	        {
	            if(GetPlayerCash(playerid) >= 5000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_GRENADE,10);
					TakePlayerCash(playerid,5000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }

 	       	case 1:
	        {
	            if(GetPlayerCash(playerid) >= 5000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_MOLOTOV,10);
					TakePlayerCash(playerid,5000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }
		}
	}
	
	if(dialogid == 7003)
	{
	    if(!response) return 1;
     	switch(listitem)
	    {
	        case 0:
	        {
	            if(GetPlayerCash(playerid) >= 100000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_AK47,1000);
					TakePlayerCash(playerid,100000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }

 	       	case 1:
	        {
	            if(GetPlayerCash(playerid) >= 100000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_M4,1000);
					TakePlayerCash(playerid,100000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }
		}
	}


	if(dialogid == 7002)
	{
	    if(!response) return 1;
     	switch(listitem)
	    {
	        case 0:
	        {
	            if(GetPlayerCash(playerid) >= 25000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_UZI,1000);
					TakePlayerCash(playerid,25000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }

 	       	case 1:
	        {
	            if(GetPlayerCash(playerid) >= 25000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_TEC9,1000);
					TakePlayerCash(playerid,25000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }


	        case 2:
	        {
	            if(GetPlayerCash(playerid) >= 25000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_MP5,1000);
					TakePlayerCash(playerid,25000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }
		}
	}

	if(dialogid == 7001)
	{
	    if(!response) return 1;
	    switch(listitem)
	    {
	        case 0:
	        {
	            if(GetPlayerCash(playerid) >= 10000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_COLT45,1000);
					TakePlayerCash(playerid,10000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }
	        
 	       	case 1:
	        {
	            if(GetPlayerCash(playerid) >= 10000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_SILENCED,1000);
					TakePlayerCash(playerid,10000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }


	        case 2:
	        {
	            if(GetPlayerCash(playerid) >= 10000)
	            {
	            	GivePlayerWeapon(playerid,WEAPON_DEAGLE,1000);
					TakePlayerCash(playerid,10000);
					PlayerPlaySound(playerid,1054,0,0,0);
	            	GameTextForPlayer(playerid,"~w~weapon purchased!",800,3);
	            }   else GameTextForPlayer(playerid,"~r~INSUFFICIENT FUNDS!",800,3);
	        }
		}
	}

    if(dialogid == _@Dialog) // action of  cmd: key blinder .. displaying current states list like ssb/nos/dssb etc
    {
        if(response)
        {
			_@tmp[playerid] = listitem;
			new str[500];
			for(new i=0;i<_@Ctrl;i++) {
				if(i==0) format(str,sizeof str,"%s\n",_B@EchoP(i));
				else format(str,sizeof str,"%s%s\n",str,_B@EchoP(i));
			}
			ShowPlayerDialog(playerid,_@ControlSelectDialog,DIALOG_STYLE_LIST,"-Key Blinder (On-Vehicle)",str,"Ok","Cancel");
        }
        return 1;
    }
    if(dialogid == _@ControlSelectDialog) // when they click key to changew.. *** assigning control for a key. ***
    {
        if(response)
        {
			B@Status[playerid][_@tmp[playerid]] = listitem;
			format(xstring,sizeof xstring,"{8799FF}Fire Key: %s\n{8799FF}Secondary Fire Key: %s\n{8799FF}Sub-mission Key: %s\n{8799FF}Horn Key: %s\n{8799FF}Yes Key: %s\n{8799FF}No Key: %s\n{8799FF}Look Right Key: %s\n{8799FF}Look Left Key: %s",_B@EchoS(playerid,_@FIREKEY),_B@EchoS(playerid,_@SFIREKEY),_B@EchoS(playerid,_@SUBKEY),_B@EchoS(playerid,_@HORNKEY),_B@EchoS(playerid,_@YESKEY),_B@EchoS(playerid,_@NOKEY),_B@EchoS(playerid,_@LOOKRIGHTKEY),_B@EchoS(playerid,_@LOOKLEFTKEY));
			ShowPlayerDialog(playerid,_@Dialog,DIALOG_STYLE_LIST,"-Key Blinder (On-Vehicle)",xstring,"Ok","Cancel");
        }
        return 1;
    }

	if(dialogid == 3895)
	{
			if(!response) { DriftID[playerid] = -1;  return 1; }
			else
			{
					//SetPlayerPos(playerid,-2407.4141,-626.9469,132.3323);

				DriftVehicle[playerid] = dveh[listitem];
				//CrearVehiculo2(playerid, DriftVehicle[playerid]);
				new Float:angle;
				new color = random(255);
			//	new Float:X,Float:Y,Float:Z;
				//GetPlayerPos(playerid,X,Y,Z);
				GetPlayerFacingAngle(playerid,angle);
				new car = CreateVehicle(DriftVehicle[playerid],DriftPos[playerid][0],DriftPos[playerid][1],DriftPos[playerid][2],angle,color,color,0);
				SetVehicleVirtualWorld(car, GetPlayerVirtualWorld(playerid));
				PutPlayerInVehicle(playerid,car,0);
				Players[playerid][LastCar] = car;
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(playerid));
				SetVehiclePos(GetPlayerVehicleID(playerid),DriftPos[playerid][0],DriftPos[playerid][1],DriftPos[playerid][2]);
				SetVehicleZAngle(GetPlayerVehicleID(playerid),DriftPos[playerid][3]);


				//SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
				TDrif[playerid] = true;
				LoadTextDraws(playerid);
				TextDrawSetString(TDDrift[playerid]," ");
				SendClientMessage(playerid,-1,"{FF7E00}[DRIFT] Welcome To Drift Mode {00FFFF} V1 Beta, ");
				SendClientMessage(playerid,-1,"{FF7F50}[HOWTO] Here you got 3 Minutes (180 Seconds) To perform as many drift as possible to gain score");
				SendClientMessage(playerid,-1,"{E32636}[CRASH] You'll Lose all of your Current Drift Points when you Crash on Heavy");
				SendClientMessage(playerid,-1,"{7FFF00}[BONUS] You'll Get X2 | X3 | X4 | X5 Score Multiplier When you perform Continuous Drift [On Single Run]");
				SendClientMessage(playerid,-1,"{E3A857}[EXIT] You can /drift to Enter/Exit Drift Mode!");
				TDriftPointsNow[playerid] = 0; PlayerDriftCancellation[playerid] = 0;
				TextDrawShowForPlayer(playerid,TDDrift[playerid]);
				DriftBonus[playerid]=1;
				TextDrawSetString(TDDrift[playerid]," ");
				DriftPointsNow[playerid] = 0;
				Players[playerid][Minigame] = 54;
				TimeLeft[playerid] = 180;
				eDriftTimer[playerid] = SetTimerEx("CountDownDriftTimer", 1200, true, "d", playerid);
				TimerA[playerid]=SetTimerEx("AngleUpdate", 200, true, "d", playerid);
				TimerC[playerid]=SetTimerEx("CheckPlayerState", 100, true, "d", playerid);
				new str[150];
				format(str,sizeof str,"SELECT  `dPlayer`, `score` FROM `driftscore` WHERE `dID` = %d ORDER BY `driftscore`.`score` DESC",DriftID[playerid]);
				mysql_query(SQL,str);
				//mysql_store_result();
				
				//WIS
				if(cache_num_rows()!= 0)
				{
					cache_get_value_name(0,"dPlayer",DriftRecordName[playerid]);
					cache_get_value_name_int(0, "score", DriftRecord[playerid]);	
				}
				else
				{
					DriftRecordName[playerid] = "None";
					DriftRecord[playerid] = -1;
				}
				SpeedBoostDisabled[playerid] = true;
				return 1;
			}
	}
	if(dialogid == 3894)
	{
			if(!response) { DriftID[playerid] = -1;  return 1; }
			else
			{
				DriftID[playerid] = __loading[playerid][listitem];
				new str[500];


				//new str[500];//format(str,sizeof str,"");
				format(str,sizeof str,"SELECT  `dID`, `dName`, `X`, `Y`, `Z`, `A` FROM `drift` WHERE `dID` = %d",DriftID[playerid]);
				mysql_query(SQL,str);
				//mysql_store_result();
				if(cache_num_rows() == 0)
				{

					SendClientMessage(playerid, -1, "No tracks avaiable in Drift");
				}
				else
				{
					//	sscanf(line,"p<|>ds[32]ffff",DriftID[playerid],DriftName[playerid],DriftPos[playerid][0],DriftPos[playerid][1],DriftPos[playerid][2],DriftPos[playerid][3]);

					cache_get_value_name_int(0, "dID", DriftID[playerid]);
					cache_get_value_name(0,"dName",DriftName[playerid]);
					
					
					cache_get_value_name_float(0,"X", DriftPos[playerid][0]);
					cache_get_value_name_float(0,"Y", DriftPos[playerid][1]);
					cache_get_value_name_float(0,"Z", DriftPos[playerid][2]);
					cache_get_value_name_float(0,"A", DriftPos[playerid][3]);
				}
				//mysql_free_result();
				new driiilist[500],x=0;
				for(new i=0;i<sizeof dveh;i++)
				{
					if(x==0) format(driiilist,sizeof driiilist,"{7FFF00}%v",dveh[i]);
					else format(driiilist,sizeof driiilist,"%s\n{7FFF00}%v",driiilist,dveh[i]);
					x++;
				}
				ShowPlayerDialog(playerid,3895,DIALOG_STYLE_LIST,"{FFFFFF}Drift Mode  - {FF0000}v1", driiilist,"DRIFT!","Exit");
				return 1;
			}
	}


	if(dialogid == 8801)
	{
	    if(!response) return 1;
	    switch(listitem)
	    {
	        case 0:
	        {
				// Remove a member
				ShowPlayerDialog(playerid,8802,DIALOG_STYLE_INPUT,"Remove a Member","Type the ID of the member to remove.","Remove","Cancel");
	        }
	        
	        case 1:
	        {
				// invite only
				new InviteOnly;
				format(xstring,sizeof xstring,"SELECT * FROM `groups` WHERE `gName` = '%s'", Players[playerid][groupName] );
				mysql_query(SQL, xstring);
				cache_get_value_name_int(0, "InviteOnly", InviteOnly);
				if(InviteOnly == 0)
				{
					format(xstring, sizeof(xstring), "UPDATE `groups` SET `InviteOnly` = '1' WHERE `groupName` = '%s'", Players[playerid][groupName] );
					mysql_query(SQL,xstring);
     				ShowPlayerDialog(playerid,8803,DIALOG_STYLE_MSGBOX,"Group System v1.0","Your group is now invite-only.","OK","");
				}
				else
    			{
				    format(xstring, sizeof(xstring), "UPDATE `groups` SET `InviteOnly` = '0' WHERE `groupName` = '%s'", Players[playerid][groupName] );
					mysql_query(SQL,xstring);
				    ShowPlayerDialog(playerid,8803,DIALOG_STYLE_INPUT,"Group System v1.0","Your group is no longer invite-only.","OK","");
				}
			}
    		case 2:
	        {
				// delete group
  				format(xstring,sizeof xstring,"DELETE FROM `groups` WHERE `groupName` = '%s'",Players[playerid][groupName]);
  				mysql_query(SQL,xstring);
  				
  				// remove all members from the group who are ingame
				foreach(new i : Player)
				{
				    if(IsPlayerConnected(i))
				    {
				    	if(!strcmp(Players[i][groupName],Players[playerid][groupName], true) && strlen(Players[i][groupName]) > 0)
				    	{
				    	    strdel(Players[i][groupName],0,strlen(Players[i][groupName]));
							SendClientMessage(i,COLOR_LIGHTBLUE,"* You were removed from this group because the owner deleted it.");
				    	}
				    }
				}

				strdel(Players[playerid][groupName],0,strlen(Players[playerid][groupName]));
				
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Your group has been deleted.");
			}
			
			case 3:
			{
				new gCreated[10];
				format(xstring,sizeof xstring,"SELECT `Created` FROM `groups` WHERE `gName` = '%s'", Players[playerid][groupName] );
				mysql_query(SQL, xstring);
				cache_get_value_name(0,"Created",gCreated);				
				
				format(xstring,sizeof xstring,"Group %s\nFounded %s",Players[playerid][groupName],gCreated);
				ShowPlayerDialog(playerid,8803,DIALOG_STYLE_MSGBOX,"Group Management Tools",xstring,"OK","Cancel");
			}
	    }
	}
	
	if(dialogid == 8802)
	{
	    if(strlen(inputtext) == 0)
		{
		    SendClientMessage(playerid,COLOR_LIGHTBLUE,"* You did not type a username to remove.");
		    ShowPlayerDialog(playerid,8802,DIALOG_STYLE_INPUT,"Remove a Member","Type the ID of the member to remove.","Remove","Cancel");
		    return 1;
		}
		
        format(xstring, sizeof(xstring), "SELECT `groupName` FROM `users` WHERE `Name` = '%s'", inputtext);
		mysql_query(SQL,xstring);
		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_LIGHTBLUE,"* That user does not exist on the server!");
		
		new gName[21];
		
		cache_get_value_name(0,"groupName",gName);
		
		if(!strcmp(gName,Players[playerid][groupName], true))
		{
  			format(xstring, sizeof(xstring), "UPDATE `users` SET `groupName` = '%s' WHERE `Name` = '%s'", "",inputtext);
			mysql_query(SQL,xstring);
            SendClientMessage(playerid,COLOR_LIGHTBLUE,"* That member has been removed from the group.");
		}   else SendClientMessage(playerid,COLOR_LIGHTBLUE,"* That user does not belong to your group!");

	}


	if(dialogid == 1200)
	{
	    if(!response)
	    {
			SendClientMessage(playerid,COLOR_RED,"* Duel canceled");
			new with = Players[playerid][dueling];
   			Players[playerid][dueling] = -1;
		    Players[with][dueling] = -1;
		    Players[playerid][dueling] = -1;
		    Players[with][invited] = false;
			return 1;
	    }

		if(listitem == 0)
		{
		    //airport
			new id = Players[playerid][dueling];
			new str[100];
			format(str,sizeof str,"* Duel Invite Recieved from %p. Type /playduel to play.",playerid);
			SendClientMessage(id,COLOR_AMSG,str);
			SendClientMessage(playerid,COLOR_AMSG,"* Duel Invite Sent. Waiting for Reply.");
			Players[playerid][duelloc] = 1;
			Players[id][invited] = true;
			Players[id][dueling] = playerid;
		}

		if(listitem == 1)
		{
			new id = Players[playerid][dueling];
			new str[100];
			format(str,sizeof str,"* Duel Invite Recieved from %p. Type /playduel to play.",playerid);
			SendClientMessage(id,COLOR_AMSG,str);
			SendClientMessage(playerid,COLOR_AMSG,"* Duel Invite Sent. Waiting for Reply.");
			Players[playerid][duelloc] = 2;
			Players[id][invited] = true;
			Players[id][dueling] = playerid;
		}

		if(listitem == 2)
		{
			new id = Players[playerid][dueling];
			new str[100];
			format(str,sizeof str,"* Duel Invite Recieved from %p. Type /playduel to play.",playerid);
			SendClientMessage(id,COLOR_AMSG,str);
			SendClientMessage(playerid,COLOR_AMSG,"* Duel Invite Sent. Waiting for Reply.");
			Players[playerid][duelloc] = 3;
			Players[id][invited] = true;
			Players[id][dueling] = playerid;
		}

		if(listitem == 3)
		{
			new id = Players[playerid][dueling];
			new str[100];
			format(str,sizeof str,"* Duel Invite Recieved from %p. Type /playduel to play.",playerid);
			SendClientMessage(id,COLOR_AMSG,str);
			SendClientMessage(playerid,COLOR_AMSG,"* Duel Invite Sent. Waiting for Reply.");
			Players[playerid][duelloc] = 4;
			Players[id][invited] = true;
			Players[id][dueling] = playerid;
		}

		if(listitem == 4)
		{
			new id = Players[playerid][dueling];
			new str[100];
			format(str,sizeof str,"* Duel Invite Recieved from %p. Type /playduel to play.",playerid);
			SendClientMessage(id,COLOR_AMSG,str);
			SendClientMessage(playerid,COLOR_AMSG,"* Duel Invite Sent. Waiting for Reply.");
			Players[playerid][duelloc] = 5;
			Players[id][invited] = true;
			Players[id][dueling] = playerid;
		}


		if(listitem == 5)
		{
			new id = Players[playerid][dueling];
			new str[100];
			format(str,sizeof str,"* Duel Invite Recieved from %p. Type /playduel to play.",playerid);
			SendClientMessage(id,COLOR_AMSG,str);
			SendClientMessage(playerid,COLOR_AMSG,"* Duel Invite Sent. Waiting for Reply.");
			Players[playerid][duelloc] = 6;
			Players[id][invited] = true;
			Players[id][dueling] = playerid;
		}

		if(listitem == 6)
		{
			new id = Players[playerid][dueling];
			new str[100];
			format(str,sizeof str,"* Duel Invite Recieved from %p. Type /playduel to play.",playerid);
			SendClientMessage(id,COLOR_AMSG,str);
			SendClientMessage(playerid,COLOR_AMSG,"* Duel Invite Sent. Waiting for Reply.");
			Players[playerid][duelloc] = 7;
			Players[id][invited] = true;
			Players[id][dueling] = playerid;
		}

	}

	if(dialogid == 6969)
 	{
 		if(!response) return 1;
  		else
   		{
     		StopAudioStreamForPlayer(playerid);
     		switch(listitem)
      		{
				case 0: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/rapmetal.pls");
				case 1: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/classicrock.pls");
 				case 2: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/classichardrock.pls");
      			case 3: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/classicmetal.pls");
          		case 4: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/60srock.pls");
            	case 5: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/80srock.pls");
                case 6: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/90srock.pls");
                case 7: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/modernrock.pls");
                case 8: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/hardrock.pls");
                case 9: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/harderrock.pls");
                case 10: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/softrock.pls");
                case 11: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/poprock.pls");
                case 12: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/alternative90s.pls");
                case 13: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/alternative80s.pls");
                case 14: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/bluesrock.pls");
                case 15: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/rockballads.pls");
                case 16: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/hairbands.pls");
                case 17: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/beatlestribute.pls");
                case 18: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/metal.pls");
                case 19: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/heavymetal.pls");
                case 20: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/deathmetal.pls");
                case 21: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/powermetal.pls");
                case 22: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/symphonicmetal.pls");
                case 23: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/progressivemetal.pls");
                case 24: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/numetal.pls");
                case 25: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/punkrock.pls");
             	case 26: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/hardcore.pls");
                case 27: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/metalcore.pls");
                case 28: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/thrashmetal.pls");
                case 29: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/deathcore.pls");
                case 30: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/indierock.pls");
                case 31: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/poppunk.pls");
                case 32: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/progressiverock.pls");
                case 33: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/screamoemo.pls");
                case 34: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/ska.pls");
                case 35: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/jambands.pls");
                case 36: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/blackmetal.pls");
                case 37: PlayAudioStreamForPlayer(playerid,"http://listen.rockradio.com/public3/melodicdeathmetal.pls");
           	}
        }
       	return 1;
	}

	if(dialogid == 700)
	{
	    if(!response) return 1;
	    if(listitem == 0)
	    {
	        ShowPlayerDialog(playerid,701,DIALOG_STYLE_LIST,"Tuning Menu","Paintjob 1\nPaintjob 2\nPaintjob 3","Go","Cancel");
	    }

	    if(listitem == 1)
	    {
	        ShowPlayerDialog(playerid,702,DIALOG_STYLE_LIST,"Tuning Menu","Orange\nRed\nBlue\nWhite\nYellow\nGreen\nBlack","Go","Cancel");
	    }

	    if(listitem == 2)
	    {
	        ShowPlayerDialog(playerid,703,DIALOG_STYLE_LIST,"Tuning Menu","Shadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic","Go","Cancel");
	    }
	}

	if(dialogid == 703)
	{
	    if(!response) return ShowPlayerDialog(playerid,700,DIALOG_STYLE_LIST,"Tuning Menu","Paintjobs..\nColors...\nWheels..","Go","Cancel");
	    if(listitem == 0)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1073);
		}

	 	if(listitem == 1)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
		}

 		if(listitem == 2)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1075);
		}

 		if(listitem == 3)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1076);
		}

 		if(listitem == 4)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
		}

		if(listitem == 5)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
		}

 		if(listitem == 6)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1079);
		}

 		if(listitem == 7)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1080);
		}

		if(listitem == 8)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
		}

 		if(listitem == 9)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1082);
		}

 		if(listitem == 10)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1083);
		}

		if(listitem == 9)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1084);
		}

 		if(listitem == 10)
	    {
	        AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
		}
	}

	if(dialogid == 702)
	{
	    if(!response) return ShowPlayerDialog(playerid,700,DIALOG_STYLE_LIST,"Tuning Menu","Paintjobs..\nColors...\nWheels..","Go","Cancel");
	    if(listitem == 0)
	    {
     		new v = GetPlayerVehicleID(playerid);
			ChangeVehicleColours(v,6,6);
	    }

	    if(listitem == 1)
	    {
     		new v = GetPlayerVehicleID(playerid);
			ChangeVehicleColours(v,3,3);
	    }

	    if(listitem == 2)
	    {
     		new v = GetPlayerVehicleID(playerid);
			ChangeVehicleColours(v,102,102);
	    }

		if(listitem == 3)
	    {
     		new v = GetPlayerVehicleID(playerid);
			ChangeVehicleColours(v,1,1);
	    }

	    if(listitem == 4)
	    {
     		new v = GetPlayerVehicleID(playerid);
			ChangeVehicleColours(v,194,194);
	    }

	    if(listitem == 5)
	    {
     		new v = GetPlayerVehicleID(playerid);
			ChangeVehicleColours(v,229,229);
	    }

	    if(listitem == 6)
	    {
     		new v = GetPlayerVehicleID(playerid);
			ChangeVehicleColours(v,0,0);
	    }
	}

	if(dialogid == 701)
	{
	    if(!response) return ShowPlayerDialog(playerid,700,DIALOG_STYLE_LIST,"Tuning Menu","Paintjobs..\nColors...\nWheels..","Go","Cancel");
	    if(listitem == 0)
	    {
     		new veh;
			veh = GetPlayerVehicleID(playerid);
			ChangeVehiclePaintjob(veh,1);
	    }

	    if(listitem == 1)
	    {
     		new veh;
			veh = GetPlayerVehicleID(playerid);
			ChangeVehiclePaintjob(veh,2);
	    }

	    if(listitem == 2)
	    {
     		new veh;
			veh = GetPlayerVehicleID(playerid);
			ChangeVehiclePaintjob(veh,3);
	    }
	}


	if(dialogid == 300)
	{
		if(!response) return 1;

		if(listitem == 0)
		{
		    //attackers
	    	new str[100],name[20];
			GetPlayerName(playerid,name,sizeof name);
			format(str,sizeof str,"[=!=] Player %s (ID:%d) has joined Protect the President! (/joinptp)",name,playerid);
			SendClientMessageToAll(COLOR_AMSG,str);
			SetPlayerVirtualWorld(playerid,300);
			SetPlayerSkin(playerid,184);
			SetPlayerColor(playerid,COLOR_RED);
			SetPlayerPos(playerid,1356.2845,-2054.3936,56.5025);
			Players[playerid][Minigame] = 21;
			SetPlayerTeam(playerid,1);
			ResetPlayerWeapons(playerid);
			GivePlayerWeapon(playerid,WEAPON_SHOTGUN,9999); // shotgun
			GivePlayerWeapon(playerid,WEAPON_MP5,9999); // mp5
			GivePlayerWeapon(playerid,WEAPON_M4,9999); // m4
			SendClientMessage(playerid,COLOR_AMSG,"*** Kill the President. He is YELLOW on the radar.");
			return 1;
		}

		if(listitem == 1)
		{
		    //service
	    	new str[100],name[20];
			GetPlayerName(playerid,name,sizeof name);
			format(str,sizeof str,"[=!=] Player %s (ID:%d) has joined Protect the President! (/joinptp)",name,playerid);
			SendClientMessageToAll(COLOR_AMSG,str);
			SetPlayerVirtualWorld(playerid,300);
			SetPlayerSkin(playerid,165);
			SetPlayerColor(playerid,COLOR_BLUE);
			SetPlayerPos(playerid,1132.7975,-2005.0039,69.0078);
			Players[playerid][Minigame] = 21;
			SetPlayerTeam(playerid,2);
			ResetPlayerWeapons(playerid);
			GivePlayerWeapon(playerid,WEAPON_SHOTGUN,9999); // shotgun
			GivePlayerWeapon(playerid,WEAPON_MP5,9999); // mp5
			GivePlayerWeapon(playerid,WEAPON_M4,9999); // m4
			SendClientMessage(playerid,COLOR_AMSG,"*** Protect the President. He is YELLOW on the radar.");
			return 1;
		}
	}


	if(dialogid == 500)
	{
		if(!response) return 1;
 	    ShowPlayerDialog(playerid,501,DIALOG_STYLE_INPUT,"Type a message","What would you like to say","Reply","Nevermind");
		return 1;
	}

	if(dialogid == 501)
	{
		if(Players[playerid][PMs] == false && !IsAdmin(playerid))
		{
		    SendClientMessage(playerid,COLOR_RED,"** You are not allowed to send pm's right now.");
		    return 1;
		}
		new id = Players[playerid][lastpm];
	   	if(stringContainsIP(inputtext))
	    {
	        format(xstring,sizeof xstring,"[Admin AC]: Blocked PM Advertisement by %p (ID:%d)",playerid,playerid);
	        Chat_SendMessageToAdmins(COLOR_AC,1,xstring);
	        return 0;
	    }
	    if(!IsPlayerConnected(id)) return SendClientMessage(playerid,0xFF0000FF,"/pm :Invalid ID");
		if(IsPlayerNPC(id)) return SendClientMessage(playerid,COLOR_RED,"* You cannot private message NPCS.");
		new Message[230];
		format(Message,sizeof(Message),"PM To %p(%i):{FFFFFF} %s",id,id,inputtext);
	 	SendClientMessage(playerid,COLOR_ORANGE,Message);
	  	format(Message,sizeof(Message),"From %p(%i):\n\n%s",playerid,playerid,inputtext);
	   	//SendClientMessage(id,COLOR_ORANGE,Message);
	   	Players[id][lastpm] = playerid;
	   	ShowPlayerDialog(id,500,DIALOG_STYLE_MSGBOX,"New Private Message",Message,"Reply","Close");
	   	PlayerPlaySound(id,1085,0.0,0.0,0.0);
	  	if(!IsPlayerAdminLevel(playerid,1))
	   	{
		   	format(Message,sizeof(Message),"PM from %p(%d) to %p(%d): %s",playerid,playerid,id,id,inputtext);
		   	SendMessageToAdmins(playerid,2,COLOR_AMSG,Message);
	   	}
	    PlayerPlaySound(playerid,1054,0,0,0);
	   	PlayerPlaySound(id,1054,0,0,0);
		return 1;

	}

	if(dialogid == 100)
	{
		//login
		if(!response) return 1;
		if(!strlen(inputtext)) return ShowPlayerDialog(playerid,100,DIALOG_STYLE_INPUT,"Login","Type your password below.","Login","");
		if(Players[playerid][Logged] == true) return SendClientMessage(playerid,COLOR_RED,"You are already logged in.");
		new str[150];
		format(str, sizeof(str), "SELECT * FROM `users` WHERE `Name` = '%p' AND `Password` = md5('%s')",playerid,inputtext);
		mysql_query(SQL,str); //Queries the result
		if(cache_num_rows() != 0) // login!
		{
			Login(playerid);
			SetMyColor(playerid);
			SendClientMessage(playerid,COLOR_GREEN,"ACCOUNT: Successfully Logged In");
  		}
	  	else
	  	{
		  	SendClientMessage(playerid,COLOR_RED,"* Invalid Password! Try Again!");
            ShowPlayerDialog(playerid,100,DIALOG_STYLE_INPUT,"Login","Type your password below.","Login","");
		}
		return 1;
	}


	if(dialogid == 28)
	{
	    // colors
	    if(!response) return 1;
	    if(listitem == 0)
	    {
    		SetPlayerColor(playerid,COLOR_RED);
			SendClientMessage(playerid,COLOR_RED,"Color Changed.");
			Players[playerid][Color] = 1;
	    }

	    if(listitem == 1)
	    {
    		SetPlayerColor(playerid,COLOR_BLUE);
			SendClientMessage(playerid,COLOR_BLUE,"Color Changed.");
			Players[playerid][Color] = 2;
	    }

	    if(listitem == 2)
	    {
    		SetPlayerColor(playerid,COLOR_YELLOW);
			SendClientMessage(playerid,COLOR_YELLOW,"Color Changed.");
 			Players[playerid][Color] = 3;
	    }

		if(listitem == 3)
		{
 			SetPlayerColor(playerid,COLOR_PURPLE);
			SendClientMessage(playerid,COLOR_PURPLE,"Color Changed.");
			Players[playerid][Color] = 4;
		}

		if(listitem == 4)
		{
 			SetPlayerColor(playerid,COLOR_ORANGE);
			SendClientMessage(playerid,COLOR_ORANGE,"Color Changed.");
			Players[playerid][Color] = 5;
		}

		if(listitem == 5)
		{
 			SetPlayerColor(playerid,COLOR_WHITE);
			SendClientMessage(playerid,COLOR_WHITE,"Color Changed.");
			Players[playerid][Color] = 6;
		}

		if(listitem == 6)
		{
 			SetPlayerColor(playerid,COLOR_GREEN);
			SendClientMessage(playerid,COLOR_GREEN,"Color Changed.");
			Players[playerid][Color] = 7;
		}

		if(listitem == 7)
		{
 			SetPlayerColor(playerid,COLOR_AQUA);
			SendClientMessage(playerid,COLOR_AQUA,"Color Changed.");
    		Players[playerid][Color] = 8;
		}

		if(listitem == 8)
		{
 			SetPlayerColor(playerid,COLOR_DYELLOW);
			SendClientMessage(playerid,COLOR_DYELLOW,"Color Changed.");
 			Players[playerid][Color] = 9;
		}

		if(listitem == 9)
		{
 			SetPlayerColor(playerid,COLOR_BYELLOW);
			SendClientMessage(playerid,COLOR_BYELLOW,"Color Changed.");
			Players[playerid][Color] = 10;
		}

		if(listitem == 10)
		{
 			SetPlayerColor(playerid,COLOR_BBLUE);
			SendClientMessage(playerid,COLOR_BBLUE,"Color Changed.");
			Players[playerid][Color] = 11;
		}

		if(listitem == 11)
		{
 			SetPlayerColor(playerid,COLOR_LIGHTBLUE);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"Color Changed.");
			Players[playerid][Color] = 12;
		}

		if(listitem == 12)
		{
 			SetPlayerColor(playerid,COLOR_PINK);
			SendClientMessage(playerid,COLOR_PINK,"Color Changed.");
			Players[playerid][Color] = 13;
		}

		if(listitem == 13)
		{
 			SetPlayerColor(playerid,COLOR_BROWN);
			SendClientMessage(playerid,COLOR_BROWN,"Color Changed.");
			Players[playerid][Color] = 14;
		}

		if(listitem == 14)
		{
 			SetPlayerColor(playerid,COLOR_GREY);
			SendClientMessage(playerid,COLOR_GREY,"Color Changed.");
			Players[playerid][Color] = 15;
		}

		if(listitem == 15)
		{
 			SetPlayerColor(playerid,COLOR_LIME);
			SendClientMessage(playerid,COLOR_LIME,"Color Changed.");
			Players[playerid][Color] = 16;
		}

		return 1;
	}

	if(dialogid == 301)
	{
	    if(!response) return 1;
	    if(strlen(inputtext) > 0)
	    {
	        if(inputtext[0] == '0' && inputtext[1] == 'x')
	        {
		    	format(Players[playerid][Color],21,"%d",inputtext);
				SendClientMessage(playerid,COLOR_GREY,"CUSTOM COLOR SET.");
			}   else SendClientMessage(playerid,COLOR_GREY,"invalid color code");
		}   else SendClientMessage(playerid,COLOR_GREY,"invalid color code");

	}

	if(dialogid == 51)
	{
		if(!response) return 1;
		if(listitem == 0)
		{
			if(Players[playerid][AdminMsgs] == true)
			{
   				Players[playerid][AdminMsgs] = false;
			    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","Admin Messages are OFF.\nNote that this may affect your ability to work as a admin,\nsuch as finding evaders,etc.\nThe recommended setting is ON.","Ok","");
			}
			else
			{
				Players[playerid][AdminMsgs] = true;
			    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","Admin Messages are ON.\nAdmin messages are to help you well - be a admin!","Ok","");
			}
			return 1;
		}

		if(listitem == 1)
		{
			if(Players[playerid][AutoGM] == true)
			{
		    	Players[playerid][AutoGM] = false;
		    	ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Auto GodMode","Auto GodMode is OFF.","Ok","");

			}
			else
			{
				Players[playerid][AutoGM] = true;
		    	ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Auto GodMode","Auto GodMode is ON.","Ok","");
			}
			return 1;
		}

		if(listitem == 2)
		{
			if(Players[playerid][IPLookups] == true)
			{
		    	Players[playerid][IPLookups] = false;
		    	ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"IP Lookups","IP Lookups are OFF.\nNote that this may affect your ability to work as a admin,\nsuch as finding evaders,etc.\nThe recommended setting is ON.","Ok","");
			}
			else
			{
				Players[playerid][IPLookups] = true;
		    	ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","IP Lookups are ON.","Ok","");

			}
			return 1;
		}

		if(listitem == 3)
		{
		    ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Admin Chat Type","Classic (Blue)\nClassic (Red)\nClassic (Orange)\nProfessional\n Light Blue","Ok","");
		}
		if(listitem == 4)
		{
		    ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Reaction Game Timer","{00FFFF}Enter the Value in terms of Minutes\n{DC143C}Example: 3 -> 3 Minutes\n {94812B}Default: 3 Minutes","Ok","");
		}
		if(listitem == 5)
		{
		    ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"Admin Chat Type","{00FFFF}Enter the Value in terms of Minutes\n{DC143C}Example: 10 -> 10 Minutes\n {94812B}Default: 10 Minutes","Ok","");
		}
		if(listitem == 6)
		{
			if(RaceRotation == true)
			{
				RaceRotation = false;
				ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Toggle Race Rotation","*** {00FFFF}Race Rotation {DC143C}Disabled!","Ok","");
			}
			else
			{
				RaceRotation = true;
				ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Toggle Race Rotation","*** {00FFFF}Race Rotation {7FFF00}Enabled!","Ok","");
			}
			return 1;
		}
		if(listitem == 7)
		{
		    if(IsPlayerAdminLevel(playerid,1))
			{
				if(Players[playerid][readpms] == true)
				{
				    Players[playerid][readpms] = false;
				    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","you can no longer read pms","Ok","");
				}
				else
				{
					Players[playerid][readpms] = true;
				    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","you can read pms","Ok","");

				}
			} else SendClientMessage(playerid,COLOR_RED,"* You must be level 1 or higher to do this.");
		}
		if(listitem == 8)
		{
		    if(IsPlayerAdminLevel(playerid,1))
			{
				if(Players[playerid][readteles] == true)
				{
				    Players[playerid][readteles] = false;
				    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","you can no longer read teles","Ok","");
				}
				else
				{
					Players[playerid][readteles] = true;
				    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","you can read teles","Ok","");
				}
			} else SendClientMessage(playerid,COLOR_RED,"* You must be level 1 or higher to do this.");
			return 1;
		}

		//return 1;
	}

	if(dialogid == 64)
	{
	    if(response)
	    {
			if(!IsNumeric2(inputtext)) return SendClientMessage(playerid,COLOR_RED,"** Incorrect Format! Use Numeric form !");
			if(strval(inputtext) <= 0 ) return SendClientMessage(playerid,COLOR_RED,"** Incorrect Format! You Can't use ZERO Dork! Valid: 1 - XXX");
			GameTimer = strval(inputtext);
			KillTimer(GameTimerEx);
			GameTimerEx = SetTimer("RandomGame",GameTimer * 60000,true);
			if(IsAdmin(playerid))
			{
				new str2[500];
				format(str2,sizeof str2, "Toggle Admin Warnings/Messages %s\nToggle Auto GodMode %s\nToggle Connect IP Lookups %s\nChange Admin Chat Type\nReaction Game Timer: {FFD700}%d Minutes\nRace Rotation Timer: {FFD700}%d Minutes\nRace Rotation: %s\nPM Reading %s",
				(Players[playerid][AdminMsgs] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
				(Players[playerid][AutoGM] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
				(Players[playerid][IPLookups] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
				GameTimer,
				raceRotTimer,
				(RaceRotation == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
				(Players[playerid][readpms] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)")
				);
				format(str2,sizeof str2,"%s\nTeleport Reading(/tp) %s",str2,
				(Players[playerid][readteles] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)")
				);
				ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"Admin Settings",str2,"Ok","Cancel");
		
				return 1;
			}
		}
		return 1;
	}
	if(dialogid == 65)
	{
	    if(response)
	    {
			if(!IsNumeric2(inputtext)) return SendClientMessage(playerid,COLOR_RED,"** Incorrect Format! Use Numeric form !");
			if(strval(inputtext) <= 0 ) return SendClientMessage(playerid,COLOR_RED,"** Incorrect Format! You Can't use ZERO Dork! Valid: 1 - XXX");
			raceRotTimer = strval(inputtext);
			KillTimer(raceRotTimerEx);
			raceRotTimerEx = SetTimer("Race_Rotation",raceRotTimer * 60000,true);
			if(IsAdmin(playerid))
			{
				new str2[500];
				format(str2,sizeof str2, "Toggle Admin Warnings/Messages %s\nToggle Auto GodMode %s\nToggle Connect IP Lookups %s\nChange Admin Chat Type\nReaction Game Timer: {FFD700}%d Minutes\nRace Rotation Timer: {FFD700}%d Minutes\nRace Rotation: %s\nPM Reading %s",
				(Players[playerid][AdminMsgs] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
				(Players[playerid][AutoGM] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
				(Players[playerid][IPLookups] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
				GameTimer,
				raceRotTimer,
				(RaceRotation == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
				(Players[playerid][readpms] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)")
				);
				format(str2,sizeof str2,"%s\nTeleport Reading(/tp) %s",str2,
				(Players[playerid][readteles] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)")
				);
				ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"Admin Settings",str2,"Ok","Cancel");
		
				return 1;
			}
		}
		return 1;
	}

	if(dialogid == 63)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            Players[playerid][AdminChat] = 0;
	            SendClientMessage(playerid,COLOR_AMSG,"** Classic Chat activated (Blue)");

	        }

         	if(listitem == 1)
	        {
	            Players[playerid][AdminChat] = 1;
	            SendClientMessage(playerid,COLOR_AMSG,"** Classic Chat activated (Red)");

	        }

         	if(listitem == 2)
	        {
	            Players[playerid][AdminChat] = 2;
	            SendClientMessage(playerid,COLOR_AMSG,"** Classic Chat activated (Orange)");
	
	        }

         	if(listitem == 3)
	        {
	            Players[playerid][AdminChat] = 3;
	            SendClientMessage(playerid,COLOR_AMSG,"** Professional Chat activated");

	        }
	        
	        if(listitem == 4)
	        {
	            Players[playerid][AdminChat] = 4;
	            SendClientMessage(playerid,COLOR_AMSG,"** Classic Chat activated (Light Blue)");
	        }
	    }
	}

	if(dialogid == 47)
	{
		//ShowPlayerDialog(playerid,47,DIALOG_STYLE_LIST,"Admin Objects - By Catagory","Stunt Objects\nComing soon\nComing Soon\nComing Soon\nComing Soon\nBeach Objects","Go","Cancel");
		if(response)
		{
		    if(listitem == 0)
		    {
		        // stunt objects
		        // use 50, last used 49
		        ShowPlayerDialog(playerid,48,DIALOG_STYLE_LIST,"Admin Objects - Stunt Directory","Basic Ramp\nRamp 2\nRamp 3\nLoop\nSmall Loop\nLoop 8 Object\nCrate Ramp\nAirport Ramps","Place","Back");
		    }

      		if(listitem == 1)
		    {
		        ShowPlayerDialog(playerid,55,DIALOG_STYLE_LIST,"Admin Objects - Sea and Beach","Starfish\nClam\nBeach Ball\nFish 1\nFish 2\nFish 3\nJellyfish\nDolphin\nShark\nCoastguard House\nBeach Towel 1\nBeach Towel 2\nSurfboard","Place","Back");
		    }

    		if(listitem == 2)
		    {
		        ShowPlayerDialog(playerid,56,DIALOG_STYLE_LIST,"Admin Objects - Ships, Docks, and Piers","Submarine\nWalkway\nBarrier\nCrane\nDock with Stairs\nDock walkway\nDock walkway 2","Place","Back");
		    }
		}
		return 1;

	}


	if(dialogid == 57)
	{
	    if(response)
	    {
	        //ShowPlayerDialog(playerid,57,DIALOG_STYLE_LIST,"Fighting Styles","Boxing\nGrab Kick\nElbow\nKung Fu\nKnee Head\nNormal","Select","Cancel");
	        if(listitem == 0)
	        {
        		GameTextForPlayer(playerid,"~r~Boxing ~n~ Fighting Style",900,3);
				SetPlayerFightingStyle(playerid,FIGHT_STYLE_BOXING);
	        }

	        if(listitem == 1)
	        {
	        	GameTextForPlayer(playerid,"~r~GrabKick ~n~ Fighting Style",900,3);
				SetPlayerFightingStyle(playerid,FIGHT_STYLE_GRABKICK);
	        }

			if(listitem == 2)
			{
				GameTextForPlayer(playerid,"~r~Elbow ~n~ Fighting Style",900,3);
    			SetPlayerFightingStyle(playerid,FIGHT_STYLE_ELBOW);
			}

			if(listitem == 3)
			{
  				GameTextForPlayer(playerid,"~r~Kungfu ~n~ Fighting Style",900,3);
				SetPlayerFightingStyle(playerid,FIGHT_STYLE_KUNGFU);
			}

			if(listitem == 4)
			{
  				GameTextForPlayer(playerid,"~r~KneeHead ~n~ Fighting Style",900,3);
				SetPlayerFightingStyle(playerid,FIGHT_STYLE_KNEEHEAD);
			}

			if(listitem == 5)
			{
  				GameTextForPlayer(playerid,"~r~Normal ~n~ Fighting Style",900,3);
				SetPlayerFightingStyle(playerid,FIGHT_STYLE_NORMAL);
			}

	    }
	}


	if(dialogid == 42)
	{
	    if(listitem == 0)
	    {
			if(response)
			{
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"RevolutionX Help","Welcome to RevolutionX DM/Stunt/Race/Fun.\nRevolutionX is about DMing, Stunting, and freeroaming! Do whatever, but follow the rules.\nWe were founded in 2007, and have been running since. We have been giving our players what they want,\not what we want.\n\nWebsite:revolutionxsamp.com","Ok","Cancel");
			}
		}

		if(listitem == 1)
		{
			if(response)
			{
				//thelp		
				ShowPlayerDialog(playerid,11,DIALOG_STYLE_MSGBOX,"Rx Token Help","{808080}RxToken {FFFFFF}is one of the feature in Revolution-X where you can earn/use tokens.\n~~~ {FFD700}Earning Token{FFFFFF} ~~~\n	- + Tokens per kill\n	- + Tokens per Money Bag Find\n	- + Tokens per Race Wins\n~~~ {FF4500}Using Token{FFFFFF} ~~~\n	COMMAND: /token, /buytokens\n	- Buy Dynamic Weapons\n	- Buy Dynamic vehicles with Limited one Spawn\n	- Buy Dynamic vehicles with Unlimited Spawn for some minutes","Ok","Cancel");		
			}
		}

		if(listitem == 2)
		{
			//viphelp
			if(response) ShowPlayerDialog(playerid,17,DIALOG_STYLE_MSGBOX,"RevolutionX VIP","Please check our forums, VIP Applications Board for requirements!","Ok","Cancel");
		}

		if(listitem == 3)
		{
			// TELES
			if(response)
			{
			    ShowPlayerDialog(playerid,20,DIALOG_STYLE_LIST,"Teleports","{6495ED}Airports\n{7CFC00}Parachuting Spots\n{ff00e6}Drift Zones\n{83BFBF}Parkour Spots\n{FF9900}Deathmatch Zones\n{10F441}Stunts","Go","Cancel");
				SendClientMessage(playerid,COLOR_ORANGE,"** For more teleports, type /teles2. **");
				SendClientMessage(playerid,COLOR_ORANGE,"** You can also type /tpos to teleport to a position ***");				
			}
		}
		
		if(listitem == 4)
		{
		    ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"RevolutionX Vehicle Commands","Vehicle Help:\n/v <vehicle name> - Spawn a vehicle\n/setmycar <vehicle name> - Sets your custom vehicle\n/car - Spawns your custom car\n/cc <color1> <color2> - Paints your vehicle\n/hy - Adds hydraulics to your vehicle\n/savecar <carname> - Saves your car for later use\n/loadcar <carname> - Loads a saved vehicle\n/ssb <Amount> - sets your speed boost multipliyer\n/kb - View and change your vehicle key events","OK","");
		}
		
		if(listitem == 5)
		{
			ShowPlayerDialog(playerid,2000,DIALOG_STYLE_MSGBOX,"** Easter Egg Help","In the server, you can collect easter eggs! When you collect them all, you get a reward!\n\n> /myeggs = Shows how many eggs you collected\n> /egghint = Gives you a hint on how to find eggs","OK","");
		}
		
		if(listitem == 6)
		{
		    ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"IRC Help","If you want to talk to us outside the server, or talk to people in the server while you are not ingame, you can join our IRC channel:\n\n================================\nServer: irc.tl\nChannel(s): #rxdm, #rxdm-chat","OK","");
		}
		
		return 1;
	}

	if(dialogid == 37)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
				for(new i=0;i<MAX_PLAYERS;i++)
				{
					if(!IsPlayerConnected(i)) continue;
					SendClientMessage(i,COLOR_RED,"SERVER RESTART. RE-JOIN!");
					Kick(i);
				}
				SendRconCommand("gmx");
	        }

	        if(listitem == 1)
	        {
	            SendRconCommand("exit");
	        }

			if(listitem == 2)
			{
			    SendClientMessage(playerid,COLOR_ORANGE,"Properties Reloaded");
			    SaveProperties();
       			LoadProperties();
			}

			if(listitem == 3)
			{
			    SendClientMessage(playerid,COLOR_ORANGE,"Properties Saved");
			    SaveProperties();
			}

			if(listitem == 4)
			{
			    ShowPlayerDialog(playerid,38,DIALOG_STYLE_INPUT,"Add Property","Type a name.","Ok","Cancel");
			}

			if(listitem == 5)
			{
			    ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"Limit Ping","Type a limit (number)","Set","Cancel");
			}

			if(listitem == 6)
			{
			    //SaveServerConfig();
                SendClientMessage(playerid,COLOR_AMSG,"Config File Saved.");
			}

			if(listitem == 7)
			{
			    new x = CountFileLines("/logs/reports.txt");
				new str[50];
				format(str,sizeof str,"Server Process: Cleaned %d Reports.",x);
				SendClientMessage(playerid,COLOR_AMSG,str);
				fremove("/logs/reports.txt");
				fcreate("/logs/reports.txt");
			}

			if(listitem == 8)
			{
				 ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT,"Virtual RCON Console","Type a command.","Send","Back");
			}

			if(listitem == 9)
			{
       			ShowPlayerDialog(playerid,45,DIALOG_STYLE_INPUT,"Ban a IP","Type a IP Address to ban from the server.","Ok","Cancel");
			}

			if(listitem == 10)
			{
				ShowPlayerDialog(playerid,46,DIALOG_STYLE_INPUT,"Unban a IP","Type a IP Address to unban from the server.","Ok","Cancel");
			}

			if(listitem == 11)
			{
			    SendClientMessage(playerid,COLOR_YELLOW,"*** RevolutionX Dynamic Teleports feature have been removed.");
			    SendClientMessage(playerid,COLOR_YELLOW,"*** Message Saloun or CJ101 if you want your teleport added ingame.");
			}

			if(listitem == 12)
			{
   				new x = CountFileLines("/logs/reports.txt");
				new str[50];
				format(str,sizeof str,"** We have %d reports in our reports.txt file",x);
				SendClientMessage(playerid,COLOR_AMSG,str);
			}

			if(listitem == 13)
   			{
   			    // new stats
			    ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"RevolutionX Detailed Stats","This feature was removed","OK","");
			}

			if(listitem == 14)
			{
            	mysql_query(SQL,"SELECT `IPAddress` FROM bans WHERE banID=(SELECT max(banID) from bans)");
				new ip[17];
            	if(cache_num_rows() == 0) return ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"RevolutionX","Error: I Couldn't select the last ban.","OK","");
            	cache_get_value_name(0,"IPAddress",ip);
				new str[100];
				format(str,sizeof str,"DELETE * FROM `bans` WHERE banID=(SELECT max(banID) from bans)");
				mysql_query(SQL,str);
				format(str,sizeof str,"unbanip %s",ip);
				SendRconCommand(str);
                ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"RevolutionX","Success, i unbanned the last banned player.","OK","");
			}
			
			if(listitem == 15)
			{
			    // Reconnect IRC Bots
				ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"RevolutionX","IRC HAS BEEN REMOVED","OK","");
			}
	    }
		return 1;
	}

	if(dialogid == 46)
	{
		if(response)
		{
 			if(!IsIP(inputtext)) return SendClientMessage(playerid,COLOR_GREY,"[V-RCON CONSOLE:] That is not a valid IP Address.");
			new str[100];
			format(str,sizeof str,"unbanip %s",inputtext);
			SendRconCommand(str);
			SendClientMessage(playerid,COLOR_GREY,"[V-RCON CONSOLE:] IP Address UnBanned.");
		} 	else  ShowPlayerDialog(playerid,37,DIALOG_STYLE_LIST,"Server Control Panel","Restart\nShut Down\nReload Properties\nSave Properties\nAdd Property\nLimit Ping\nSave Config File\nClean Reports File\nSend RCON Command\nBan a IP Address\nUnban a IP Address\nSave Dynamic Teles","Ok","");
		return 1;
	}

	if(dialogid == 45)
	{
		if(response)
		{
 			if(!IsIP(inputtext)) return SendClientMessage(playerid,COLOR_GREY,"[V-RCON CONSOLE:] That is not a valid IP Address.");
			new str[100];
			format(str,sizeof str,"banip %s",inputtext);
			SendRconCommand(str);
			SendClientMessage(playerid,COLOR_GREY,"[V-RCON CONSOLE:] IP Address Banned.");
		} 	else  ShowPlayerDialog(playerid,37,DIALOG_STYLE_LIST,"Server Control Panel","Restart\nShut Down\nReload Properties\nSave Properties\nAdd Property\nLimit Ping\nSave Config File\nClean Reports File\nSend RCON Command\nBan a IP Address\nUnban a IP Address\nSave Dynamic Teles","Ok","");
	}

	if(dialogid == 40)
	{
	    if(response)
	    {
			if(strlen(inputtext) > 0)
			{
		        SendRconCommand(inputtext);
		        SendClientMessage(playerid,COLOR_GREY,"[V-RCON CONSOLE:] Command Recieved.");
	        }   else SendClientMessage(playerid,COLOR_GREY,"[V-RCON CONSOLE:] Command Could not be proccessed (no data).");
	    }   else  ShowPlayerDialog(playerid,37,DIALOG_STYLE_LIST,"Server Control Panel","Restart\nShut Down\nReload Properties\nSave Properties\nAdd Property\nLimit Ping\nSave Config File\nClean Reports File\nSend RCON Command\nBan a IP Address\nUnban a IP Address\nSave Dynamic Teles","Ok","");
	}

	if(dialogid == 39)
	{
    	SendClientMessage(playerid,COLOR_AMSG,"Sorry, this feature has been removed.");
	}

	if(dialogid == 38)
	{
		if(response)
		{
		    if(strlen(inputtext) > 0)
		    {
		    	new Float:px,Float:py,Float:pz;
				GetPlayerPos(playerid,px,py,pz);
				AddProperty(inputtext,50000,2000,px,py,pz);
				new str[100];
				format(str,sizeof str,"* Added a new property! (Properties: %d)",PropertiesAmount);
				SendClientMessage(playerid,COLOR_AMSG,str);
		    }
		}
		else
		{
		     ShowPlayerDialog(playerid,37,DIALOG_STYLE_LIST,"Server Control Panel","Restart\nShut Down\nReload Properties\nSave Properties\nAdd Property\nLimit Ping\nSave Config File\nClean Reports File\nSend RCON Command\nBan a IP Address\nUnban a IP Address","Ok","");
		}
	}

 	if(dialogid == NeonDiag)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0..11: AddNeon(playerid,listitem);
				default: RemoveNeon(playerid);
			}
		}
	}
	if(dialogid==bandanaDIAG)
    {
    	if(response)
    	{
	        if(listitem==0)
	        {
	            SetPlayerAttachedObject( playerid, 0, 18917, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==1)
	        {
	            SetPlayerAttachedObject( playerid, 0, 18913, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==2)
			{
	            SetPlayerAttachedObject( playerid, 0, 18916, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==3)
	        {
	            SetPlayerAttachedObject(playerid, 0, 18915, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==4)
	        {
	            SetPlayerAttachedObject(playerid, 0, 18912 , 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==5)
	        {
	            SetPlayerAttachedObject(playerid, 0, 18911 , 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==6)
	        {
	            SetPlayerAttachedObject( playerid, 0, 18914, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==7)
	        {
	        	SetPlayerAttachedObject(playerid, 0, 18918, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==8)
			{
	        	SetPlayerAttachedObject(playerid, 0, 18920 , 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==9)
	        {
	        	SetPlayerAttachedObject(playerid, 0, 18919 , 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
	        }
	        if(listitem==10) for(new i;i<5;i++) RemovePlayerAttachedObject(playerid,i);
		}
    	return 1;
	}
	if(dialogid == GlassesDIAG)
	{
		if(response)
		{
		    if(listitem == 0)
		    {
		        SetPlayerAttachedObject(playerid,1,19006,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 1)
		    {
		        SetPlayerAttachedObject(playerid,1,19007,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 2)
		    {
		        SetPlayerAttachedObject(playerid,1,19008,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 3)
		    {
		        SetPlayerAttachedObject(playerid,1,19009,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 4)
		    {
		        SetPlayerAttachedObject(playerid,1,19010,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 5)
		    {
		        SetPlayerAttachedObject(playerid,1,19011,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 6)
		    {
		        SetPlayerAttachedObject(playerid,1,19012,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 7)
		    {
		        SetPlayerAttachedObject(playerid,1,19013,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 8)
		    {
		        SetPlayerAttachedObject(playerid,1,19014,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 9)
		    {
		        SetPlayerAttachedObject(playerid,1,19015,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 10)
		    {
		        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		    }
		    if(listitem == 11)
		    {
		        ShowPlayerDialog(playerid,GlassesDIAG2,DIALOG_STYLE_LIST,"Glasses","Glasses Type 11 \nGlasses Type 12 \nGlasses Type 13 \nGlasses Type 14 \nGlasses Type 15 \nGlasses Type 16 \nGlasses Type 17 \nGlasses Type 18 \nGlasses Type 19 \nGlasses Type 20\nRemove Glasses  \nNext Page","Select","Close");
		    }
		}
		return 1;
	}
	if(dialogid == GlassesDIAG2)
	{
	    if(response)
	    {
		    if(listitem == 0)
		    {
		        SetPlayerAttachedObject(playerid,1,19016,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 1)
		    {
		        SetPlayerAttachedObject(playerid,1,19017,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 2)
		    {
		        SetPlayerAttachedObject(playerid,1,19018,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 3)
		    {
		        SetPlayerAttachedObject(playerid,1,19019,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 4)
		    {
		        SetPlayerAttachedObject(playerid,1,19020,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 5)
		    {
		        SetPlayerAttachedObject(playerid,1,19021,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 6)
		    {
		        SetPlayerAttachedObject(playerid,1,19022,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 7)
		    {
		        SetPlayerAttachedObject(playerid,1,19023,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 8)
		    {
		        SetPlayerAttachedObject(playerid,1,19024,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 9)
		    {
		        SetPlayerAttachedObject(playerid,1,19025,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 10)
		    {
		        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		    }
		    if(listitem == 11)
		    {
		        ShowPlayerDialog(playerid,GlassesDIAG3,DIALOG_STYLE_LIST,"Glasses","Glasses Type 21 \nGlasses Type 22 \nGlasses Type 23 \nGlasses Type 24 \nGlasses Type 25 \nGlasses Type 26 \nGlasses Type 27 \nGlasses Type 28 \nGlasses Type 29 \nGlasses Type 30\nRemove Glasses ","Select","Close");
		    }
		}
		return 1;
	}
	if(dialogid == GlassesDIAG3)
	{
	    if(response)
	    {
		    if(listitem == 0)
		    {
		        SetPlayerAttachedObject(playerid,1,19026,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 1)
		    {
		        SetPlayerAttachedObject(playerid,1,19027,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 2)
		    {
		        SetPlayerAttachedObject(playerid,1,19028,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 3)
		    {
		        SetPlayerAttachedObject(playerid,1,19029,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 4)
		    {
		        SetPlayerAttachedObject(playerid,1,19030,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 5)
		    {
		        SetPlayerAttachedObject(playerid,1,19031,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 6)
		    {
		        SetPlayerAttachedObject(playerid,1,19032,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 7)
		    {
		        SetPlayerAttachedObject(playerid,1,19033,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 8)
		    {
		        SetPlayerAttachedObject(playerid,1,19034,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 9)
		    {
		        SetPlayerAttachedObject(playerid,1,19035,2,0.1,0.04,0.0,60.0,85.0,25.0,1.0,1.0,1.0);
		    }
		    if(listitem == 10)
		    {
		        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		    }
		}
		return 1;
	}

	if(dialogid == 27) // ks buying
	{
	    if(!response) return 0;
	    if(listitem == 0)
	    {
	        if(Players[playerid][KSpree] >=2)
	        {
	            Players[playerid][KSpree]-=2;
	            GivePlayerCash(playerid,100);
	            SendClientMessage(playerid,COLOR_WHITE,"** Trade-In Complete.");
	        }
	    }

     	if(listitem == 1)
	    {
	        if(Players[playerid][KSpree] >=4)
	        {
	            Players[playerid][KSpree]-=4;
	            GivePlayerCash(playerid,500);
	            SendClientMessage(playerid,COLOR_WHITE,"** Trade-In Complete.");
	        }
	    }

    	if(listitem == 2)
	    {
	        if(Players[playerid][KSpree] >=8)
	        {
	            Players[playerid][KSpree]-=8;
	            GivePlayerCash(playerid,1000);
	            SendClientMessage(playerid,COLOR_WHITE,"** Trade-In Complete.");
	        }
	    }

    	if(listitem == 3)
	    {
	        if(Players[playerid][KSpree] >=15)
	        {
	            Players[playerid][KSpree]-=15;
	            GivePlayerCash(playerid,2090);
	            SendClientMessage(playerid,COLOR_WHITE,"** Trade-In Complete.");
	        }
	    }

    	if(listitem == 3)
	    {
	        if(Players[playerid][KSpree] >=5)
	        {
	            Players[playerid][KSpree]-=5;
				new wpn = GetPlayerWeapon(playerid);
				GivePlayerWeapon(playerid,WEAPON:wpn,500);
	            SendClientMessage(playerid,COLOR_WHITE,"** Trade-In Complete.");
	        }
	    }
	}

	if(dialogid == 24) // dm zones
	{
	    if(!response) return ShowPlayerDialog(playerid,20,DIALOG_STYLE_LIST,"Teleports","Airports\nParachuting Spots\nDrift Zones\nParkour Spots","Go","Cancel");
		if(listitem == 0)
		{
			SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0: GotoPosition(playerid,-1482.6298,845.3130,26.6625,true);
				case 1: GotoPosition(playerid,-1481.8518,993.8530,26.6625,true);

			}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 1",800,3);
		}

		if(listitem == 1)
		{
			SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0: GotoPosition(playerid,-1468.3823,1487.9633,8.2501,true);
				case 1: GotoPosition(playerid,-1367.9402,1490.1344,11.0391,true);
	   		}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 1",800,3);
		}

		if(listitem == 2)
		{
		    SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0:
			    {
		    		GotoPosition(playerid,2042.0128,2191.8147,10.8203,true);
			    }

			    case 1:
			    {
			        GotoPosition(playerid,2042.0128,2191.8147,10.8203,true);
			    }

			}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 3",800,3);
		}

		if(listitem == 3)
		{
			SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0:
			    {
		    		GotoPosition(playerid,2486.9504,1877.8468,10.0595,true);
			    }

			    case 1:
			    {
			        GotoPosition(playerid,2426.2048,1935.5645,6.0156,true);
			    }

			}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 4",800,3);
		}

		if(listitem == 4)
		{
			SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0:
			    {
		    		GotoPosition(playerid,-2315.0405,-83.8641,35.3203,true);
			    }

			    case 1:
			    {
			        GotoPosition(playerid,-2359.4622,-117.7212,35.3203,true);
			    }

			}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 5",800,3);
		}

		if(listitem == 5)
		{
			SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0:
			    {
		    		GotoPosition(playerid,-2776.9763,192.7936,7.1952,true);
			    }

			    case 1:
			    {
			        GotoPosition(playerid,-2749.7124,201.4759,7.0677,true);
			    }

			}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 6",800,3);
		}

		if(listitem == 6)
		{
			SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0:
			    {
		    		GotoPosition(playerid,-1825.6616,554.2018,234.8874,true);
			    }

			    case 1:
			    {
			        GotoPosition(playerid,-1788.6543,546.2272,234.8874,true);
			    }

			}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 7",800,3);
		}

		if(listitem == 7)
		{
			SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0:
			    {
		    		GotoPosition(playerid,-1912.7390,876.3095,35.2638,true);
			    }

			    case 1:
			    {
			        GotoPosition(playerid,-1980.2432,881.6850,45.2031,true);
			    }

			}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 8",800,3);
		}

		if(listitem == 8)
		{
			SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0:
			    {
		    		GotoPosition(playerid,-2498.4802,1214.9767,37.4283,true);
			    }

			    case 1:
			    {
			        GotoPosition(playerid,-2566.5349,1220.2909,41.2109,true);
			    }

			}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 9",800,3);
		}

		if(listitem == 9)
		{
			SetPlayerInterior(playerid,0);
			switch(random(1))
			{
			    case 0:
			    {
		    		GotoPosition(playerid,-2809.2957,1188.5549,20.7655,true);
			    }

			    case 1:
			    {
			        GotoPosition(playerid,-2798.7092,1108.9176,28.3624,true);
			    }

			}
			GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 10",800,3);
		}
	}

	if(dialogid == 23) // parkour
	{
	    if(!response) return ShowPlayerDialog(playerid,20,DIALOG_STYLE_LIST,"Teleports","Airports\nParachuting Spots\nDrift Zones\nParkour Spots","Go","Cancel");
		if(listitem == 0)
		{
			SetPlayerInterior(playerid,0);
		 	Streamer_UpdateEx(playerid,-2366.8347,1124.8115,65.2344);
		  	GotoPosition(playerid,-2366.8347,1124.8115,65.2344,true);
		   	GameTextForPlayer(playerid,"~w~Parkour",500,1);
		}

		if(listitem == 1)
		{
			SetPlayerInterior(playerid,0);
		 	Streamer_UpdateEx(playerid,-2431.5259,1244.9174,41.9446);
		  	GotoPosition(playerid,-2431.5259,1244.9174,41.9446,true);
		   	GameTextForPlayer(playerid,"~w~Parkour",500,1);
		}

		if(listitem == 2)
		{
			SetPlayerInterior(playerid,0);
		 	Streamer_UpdateEx(playerid,-2782.9182,26.4002,13.9262);
		  	GotoPosition(playerid,-2782.9182,26.4002,13.9262,true);
		   	GameTextForPlayer(playerid,"~w~Parkour",500,1);
		}

		if(listitem == 3)
		{
			SetPlayerInterior(playerid,0);
		 	Streamer_UpdateEx(playerid,1835.3306,-1995.4010,18.8867);
		  	GotoPosition(playerid,1835.3306,-1995.4010,18.8867,true);
		   	GameTextForPlayer(playerid,"~w~Parkour",500,1);
		}

	}

	if(dialogid == 22) // paraspots
	{
 		if(!response) return ShowPlayerDialog(playerid,20,DIALOG_STYLE_LIST,"Teleports","Airports\nParachuting Spots\nDrift Zones\nParkour Spots","Go","Cancel");
		if(listitem == 0)
		{
			SetPlayerInterior(playerid,0);
		 	Streamer_UpdateEx(playerid,1387.5466,-1198.5917,202.4453);
		  	GotoPosition(playerid,1387.5466,-1198.5917,202.4453,true);
		   	GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
	   	}

		if(listitem == 1)
		{
			SetPlayerInterior(playerid,0);
		 	Streamer_UpdateEx(playerid,1546.8486,-1354.4666,329.4791);
		  	GotoPosition(playerid,1546.8486,-1354.4666,329.4791,true);
		   	GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
		}

		if(listitem == 2)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPlayerPos(playerid,x,y,z+150);
		   	GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
		}

		if(listitem == 3)
		{
			SetPlayerInterior(playerid,0);
		  	GotoPosition(playerid,2399.3916,1878.0149,77.4118,true);
		   	GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
		}

		if(listitem == 4)
		{
			SetPlayerInterior(playerid,0);
	  		GotoPosition(playerid,2269.0205,1669.6494,94.9219,true);
	   		GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
		}
		return 1;
	}

	if(dialogid == 21) // teles airports
	{
 		if(!response) return ShowPlayerDialog(playerid,20,DIALOG_STYLE_LIST,"Teleports","Airports\nParachuting Spots\nDrift Zones\nParkour Spots","Go","Cancel");
	    if(listitem == 0)
	    {
			SetPlayerInterior(playerid,0);
		 	Streamer_UpdateEx(playerid,1884.8534,-2403.3452,13.5547);
		  	GotoPosition(playerid,1884.8534,-2403.3452,13.5547,true);
		   	GameTextForPlayer(playerid,"Los Santos~n~Airport",500,1);
	    }

	    if(listitem == 1)
	    {
			SetPlayerInterior(playerid,0);
			switch(random(2))
			{
				case 0:
				{
					Streamer_UpdateEx(playerid,-1366.4353,-162.1287,14.1484);
					GotoPosition(playerid,-1366.4353,-162.1287,14.1484,true);
				}
				case 1:
				{
					Streamer_UpdateEx(playerid,-1270.9502,-246.3339,14.1484);
					GotoPosition(playerid,-1270.9502,-246.3339,14.1484,true);
				}
				case 2:
				{
					Streamer_UpdateEx(playerid,-1223.3303,-158.3489,14.1484);
					GotoPosition(playerid,-1223.3303,-158.3489,14.1484,true);
				}
			}
		 	GameTextForPlayer(playerid,"San Fierro~n~Airport",500,1);
	    }

	    if(listitem == 2)
	    {
			SetPlayerInterior(playerid,0);
		 	Streamer_UpdateEx(playerid,1333.1053,1570.5355,10.8203);
		  	GotoPosition(playerid,1333.1053,1570.5355,10.8203,true);
		   	GameTextForPlayer(playerid,"Las Venturas~n~Airport",500,1);
	    }

	    if(listitem == 3)
	    {
			SetPlayerInterior(playerid,0);
		 	GotoPosition(playerid,358.1046,2532.2922,16.7002,true);
		  	GameTextForPlayer(playerid,"Desert~n~Airport",500,1);
	    }

	    if(listitem == 4)
	    {
			SetPlayerInterior(playerid,0);
		 	GotoPosition(playerid,247.7753,1853.3970,8.7633,true);
		  	GameTextForPlayer(playerid,"Area69",500,1);
	    }
	}

 	if(dialogid == 12) // Stunts
    {
		switch(listitem)
		{
			case 0:		
			{
	            if(!response) return 1;
	            SetPlayerInterior(playerid,0);
	            Streamer_UpdateEx(playerid,368.4459,-82.6198,566.7846);
			    GotoPosition(playerid,368.4459,-82.6198,566.7846,true);
			    GameTextForPlayer(playerid,"~g~ Twister By [_]Hitman",500,1);
			    return 1;
    		}	

			case 1:
			{
				if(!response) return 1;
	      		SetPlayerInterior(playerid,0);
	      		Streamer_UpdateEx(playerid,-1336.3647,-2035.6841,12.3394);
			    GotoPosition(playerid,-1336.3647,-2035.6841,12.3394,true);
			    GameTextForPlayer(playerid,"~g~NRG Stunt2~n~By [Hitman]",500,1);
			}
			
			case 2:
			{
				if(!response) return 1;
	            SetPlayerInterior(playerid,0);
	            Streamer_UpdateEx(playerid,2640.0513,-1767.6317,865.3845);
			    GotoPosition(playerid,2640.0513,-1767.6317,865.3845,true);
			    GameTextForPlayer(playerid,"~g~ Jump By DeathMaster",500,1);
			}
			
			case 3:
			{
				if(!response) return 1;
	      	    SetPlayerInterior(playerid,0);	
				SetPlayerFacingAngle(playerid,103.5322);
			    Streamer_UpdateEx(playerid,851.0426,852.5735,13.0234);
			    GotoPosition(playerid,851.0426,852.5735,13.0234,true);
			    GameTextForPlayer(playerid,"~w~QuarryStunt~n~By [SG]DeathMaster",500,1);
				return 1;
			}
			
			case 4:
			{
				if(!response) return 1;
	  			SetPlayerInterior(playerid,0);
			    Streamer_UpdateEx(playerid,1126.6378,3711.8530,2.4785);
			    GotoPosition(playerid,1126.6378,3711.8530,2.4785,true);
			    GameTextForPlayer(playerid,"~g~ Rafinha~n~~w~!!!",500,1);
			}
			
			case 5:
			{
				if(!response) return 1;
	  			SetPlayerInterior(playerid,0);
			    Streamer_UpdateEx(playerid,3383.6794,-2611.3921,886.7832);
			    GotoPosition(playerid,3383.6794,-2611.3921,886.7832,true);
			    GameTextForPlayer(playerid,"~g~ Impossible Challenges~n~~w~By GTAFREAK!!!",500,1);
			}
			
			
			case 6:
			{
				if(!response) return 1;
	  			SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid,175.4482);
			    Streamer_UpdateEx(playerid,2589.7759,-2187.3394,-0.4917);
			    GotoPosition(playerid,2589.7759,-2187.3394,-0.4917,true);
			    GameTextForPlayer(playerid,"~g~ TripXenx1",500,1);	
			}
			
			case 7:
			{
				if(!response) return 1;
	  			SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid,90.6116);
			    Streamer_UpdateEx(playerid,-2751.5259,1470.8586,3.5555);
			    GotoPosition(playerid,-2751.5259,1470.8586,3.5555,true);
			    GameTextForPlayer(playerid,"~g~ TripXenx2",500,1);	
			}	
			
			case 8:
			{
				if(!response) return 1;
	  			SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid,87.0123);
			    Streamer_UpdateEx(playerid,2106.2336,-2707.1873,13.2739);
			    GotoPosition(playerid,2106.2336,-2707.1873,13.2739,true);
			    GameTextForPlayer(playerid,"~g~ TripXenx3",500,1);	
			}
			
			case 9:
			{
				if(!response) return 1;
	  			SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid,3.5914);
			    Streamer_UpdateEx(playerid,1085.2556,1178.9792,617.2339);
			    GotoPosition(playerid,1085.2556,1178.9792,618.2339,true);
			    GameTextForPlayer(playerid,"~g~ BMX Stunt",500,1);	
			}
			
			case 10:
			{
				if(!response) return 1;
	  			SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid,2.2142);
			    Streamer_UpdateEx(playerid,3945.7947,1597.0907,10.9115);
			    GotoPosition(playerid,3945.7947,1597.0907,11.9115,true);
			    GameTextForPlayer(playerid,"~g~ Race Track",500,1);	
			}
		}
    }

	if(dialogid == 7) // Helis
    {
		if( Players[playerid][AmRacing] == true)
		{
			//rv1			
			if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
			if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			new Float:Zz;
			GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
			new PlayersVehicle;
			if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
			{
			    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
				GetXYInFrontOfPlayer(playerid, x, y, 8);
				PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
			}
			else
			{
				GetXYInFrontOfPlayer(playerid, x, y, 5);
				PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
			}
			SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
			LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,PlayersVehicle, 0);
			format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);
	
			SendClientMessage(playerid, COLOR_YELLOW,xstring);
			return 1;
		}
  		if( DriftID[playerid] != -1 && TDrif[playerid] == true)
		{
			return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
		}
    
   		if(listitem == 0)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(548,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 1)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(417,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 2)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(487,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

        if(listitem == 3)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(488,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

  		if(listitem == 4)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(497,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

        if(listitem == 5)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(563,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

		if(listitem == 6)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(469,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

    }

    if(dialogid == 5) // Planes
    {
		if( Players[playerid][AmRacing] == true)
		{
			// RV 2		
			if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
			if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			new Float:Zz;
			GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
			new PlayersVehicle;
			if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
			{
			    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
				GetXYInFrontOfPlayer(playerid, x, y, 8);
				PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
			}
			else
			{
				GetXYInFrontOfPlayer(playerid, x, y, 5);
				PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
			}
			SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
			LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,PlayersVehicle, 0);
			format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);
	
			SendClientMessage(playerid, COLOR_YELLOW,xstring);
			return 1;	
		}
  		if( DriftID[playerid] != -1 && TDrif[playerid] == true)
		{
			return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
		}
    
        if(listitem == 0)
        {
        	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(592,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 1)
        {
        	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(577,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
           	SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 2)
        {
        	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(511,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 3)
        {
			if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(512,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 4)
        {
        	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(593,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 5)
        {
         	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(553,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 6)
        {
        	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(476,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 7)
        {
        	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(519,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 8)
        {
        	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(460,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 9)
        {
        	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(513,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
        }
   	}


	if(dialogid == 3) // Cars
    {
		if( Players[playerid][AmRacing] == true) 
		{
			if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
			if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			new Float:Zz;
			GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
			new PlayersVehicle;
			if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
			{
			    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
				GetXYInFrontOfPlayer(playerid, x, y, 8);
				PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
			}
			else
			{
				GetXYInFrontOfPlayer(playerid, x, y, 5);
				PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
			}
			SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
			LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,PlayersVehicle, 0);
			format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);
	
			SendClientMessage(playerid, COLOR_YELLOW,xstring);		
			return 1;	
		}
  		if( DriftID[playerid] != -1 && TDrif[playerid] == true)
		{
			return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
		}
    
		if(listitem == 0)
        {
        	if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(411,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
			return 1;
        }

        if(listitem == 1)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(541,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 2)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(480,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

        if(listitem == 3)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(451,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

        if(listitem == 4)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(602,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 5)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(587,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

        if(listitem == 6)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(402,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
            SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 7)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(415,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}


		if(listitem == 8)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(494,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 9)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(502,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 10)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(503,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 11)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(562,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 12)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(533,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 13)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(439,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 14)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(555,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 15)
        {
        	if(!response) return 1;
        	if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(424,X,Y,Z,angle,color,color,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,car,0);
			SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 16)
		{
		    // previon
			if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(436,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
			return 1;
		}

		if(listitem == 17)
		{
		    //admiral
			if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(445,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
		}

		if(listitem == 18)
		{
			if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(458,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
		}

		if(listitem == 19)
		{
			if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(466,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
		}

		if(listitem == 20)
		{
			if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(474,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
		}

		if(listitem == 21)
		{
			if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(496,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
		}

		if(listitem == 22)
		{
			if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(500,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
		}

	}

	if(dialogid == 6) // Boats
    {
		if(listitem == 0)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(472,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}


        if(listitem == 1)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(473,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

  		if(listitem == 2)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(493,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

		if(listitem == 3)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(595,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

		if(listitem == 4)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(484,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

		if(listitem == 5)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(430,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

		if(listitem == 6)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(453,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

		if(listitem == 7)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(452,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

		if(listitem == 8)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(446,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}

		if(listitem == 9)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(454,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
            SetPVarInt(playerid,"CallCar",car);
  		}
    }


	if(dialogid == 4) // bikes
    {
    	if(listitem == 0)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(509,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

   		if(listitem == 1)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(481,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 2)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(510,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 3)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(462,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 4)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(448,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 5)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(581,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 6)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(522,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 7)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(461,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 8)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(521,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 9)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(523,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 10)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(463,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

	  	if(listitem == 11)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(586,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 12)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(468,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}

  		if(listitem == 13)
        {
       		if(!response) return 1;
            if(IsPlayerInAnyVehicle(playerid)) DestroyVehicleEx(GetPlayerVehicleID(playerid));
  			new Float:angle;
  			new color = random(125);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,angle);
			new car = CreateVehicle(471,X,Y,Z,angle,color,color,0);
			PutPlayerInVehicle(playerid,car,0);
			if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
  		}
    }

 	if(dialogid == 8) // drift menu
    {
    	if(!response) return 0;
        if(listitem == 0) // player help
        {
    		SetPlayerInterior(playerid,0);
		 	GotoPosition(playerid,-282.5566,1528.6976,75.3594,true);
		  	GameTextForPlayer(playerid,"Drift",500,1);
		}

		if(listitem == 1)
		{
			SetPlayerInterior(playerid,0);
		 	GotoPosition(playerid,1259.6141,-2055.6667,59.4494,true);
		  	GameTextForPlayer(playerid,"Drift",500,1);
	  	}

	  	if(listitem == 2)
	  	{
	  		SetPlayerInterior(playerid,0);
		 	GotoPosition(playerid,-2409.5212,-601.2294,132.6484,true);
		  	GameTextForPlayer(playerid,"Drift",500,1);
	  	}

	  	if(listitem == 3)
	  	{
   			SetPlayerInterior(playerid,0);
		 	GotoPosition(playerid,-473.0369,1875.3160,82.8898,true);
		  	GameTextForPlayer(playerid,"Drift",500,1);
	  	}

	  	if(listitem == 4)
	  	{
   			SetPlayerInterior(playerid,0);
		 	GotoPosition(playerid,-983.3124,-410.6667,36.2641,true);
		  	GameTextForPlayer(playerid,"Drift",500,1);
		}

	  	if(listitem == 5)
	  	{
	  		SetPlayerInterior(playerid,0);
		 	GotoPosition(playerid,-1505.5842,-1245.5162,100.8578,true);
		  	GameTextForPlayer(playerid,"Drift",500,1);
	  	}
	
		if(listitem == 6)
		{
			if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
			SetPlayerInterior(playerid,0);
			Streamer_UpdateEx(playerid,-2202.8438,-4165.2114,16.4755);
		 	GotoPosition(playerid,-2202.8438,-4165.2114,16.4755,true);
		  	GameTextForPlayer(playerid,"~g~DriftCity~n~~w~by ColdXX",500,1);			
		}

	}

	// token menu
	if(dialogid == 2799)
	{
		if(response)
		{
			switch (listitem)
			{
				case 0: ShowPlayerDialog(playerid,2798,DIALOG_STYLE_LIST,"Tokens Weapons - 500 Tokens","RPG\nSniper\nC4(Satchel)\nTear Gas\nGrenade\nFlamethrower\nMolotov","Select","Close");
				case 1: ShowPlayerDialog(playerid,2797,DIALOG_STYLE_LIST,"Tokens Vehicles","Hydra(Limited) - 5000 Tokens\nHydra(Unlimited) - 10000 Tokens\nHunter(Limited) - 5000 Tokens\nHunter(Ultimated) - 10000 Tokens\nRhino(Limited) - 5000 Tokens\nRhino(Ultimated) - 10000 Tokens","Select","Close");
				case 2: ShowPlayerDialog(playerid,2797,DIALOG_STYLE_LIST,"Tokens PowerUps","Super Jump(Foot)\nSuper Jump(Vehicle)\nJet Packs","Select","Close");
			}
		}
	}
	// token weapon
	if(dialogid == 2798)
	{
		if(response)
		{
			TokenUsing[playerid]=true;
			switch (listitem)
			{
				case 0:
				{
					Token_Weapons(playerid,35);
				}
				case 1: Token_Weapons(playerid,34);
				case 2: Token_Weapons(playerid,39);
				case 3: Token_Weapons(playerid,17);
				case 4: Token_Weapons(playerid,16);
				case 5: Token_Weapons(playerid,37);
				case 6: Token_Weapons(playerid,18);
			}
		}
		else TokenUsing[playerid]=false;
	}
	// Token Vehicle
	if(dialogid == 2797)
	{
		if(response)
		{
			TokenUsing[playerid]=true;
			switch (listitem)
			{
				case 0:
				{
					if(Players[playerid][Token] >= 5000) Token_Vehicle(playerid,5000,520,-1,false);
					else
					{
						SendClientMessage(playerid,COLOR_RED,"* You need least 5000 Tokens to use this dyanmic vehicle");
						return TokenUsing[playerid]=false;
					}
				}
				case 1:
				{
					if(Players[playerid][Token] < 10000 && TokenUltimate[playerid]==false) { TokenUsing[playerid]=false; return SendClientMessage(playerid,COLOR_RED,"* You need least 10000 Tokens to use this dyanmic vehicle"); }
					if(TokenUltimate[playerid]==false)
					{
						KillTimer(UltimateTimer[playerid]);
						Players[playerid][Token]-=10000;
						GameTextForPlayer(playerid,"~r~-10000 Tokens",500,3);
						format(xstring,sizeof(xstring),"* %p[%d] has Swapped 10000 Tokens for Vehicle: %v[%d] - Ultimited 3Minutes",playerid,playerid,520,520);
						Chat_SendMessageToAdmins(COLOR_AMSG,1,xstring);
					}
					Token_Vehicle(playerid,5000,520,3,true);
				}
				case 2:
				{
					if(Players[playerid][Token] >= 5000) Token_Vehicle(playerid,5000,425,-1,false);
					else
					{
						SendClientMessage(playerid,COLOR_RED,"* You need least 5000 Tokens to use this dyanmic vehicle");
						return TokenUsing[playerid]=false;
					}
				}
				case 3:
				{
					if(Players[playerid][Token] < 10000 && TokenUltimate[playerid]==false) { TokenUsing[playerid]=false; return SendClientMessage(playerid,COLOR_RED,"* You need least 10000 Tokens to use this dyanmic vehicle"); }
					if(TokenUltimate[playerid]==false)
					{
						KillTimer(UltimateTimer[playerid]);
						Players[playerid][Token]-=10000;
						GameTextForPlayer(playerid,"~r~-10000 Tokens",500,3);
						format(xstring,sizeof(xstring),"* %p[%d] has Swapped 10000 Tokens for Vehicle: %v[%d] - Ultimited 3Minutes",playerid,playerid,425,425);
						Chat_SendMessageToAdmins(COLOR_AMSG,1,xstring);
					}
					Token_Vehicle(playerid,5000,425,3,true);
				}
				case 4:
				{
					if(Players[playerid][Token] >= 5000) Token_Vehicle(playerid,5000,432,-1,false);
					else
					{
						SendClientMessage(playerid,COLOR_RED,"* You need least 5000 Tokens to use this dyanmic vehicle");
						return TokenUsing[playerid]=false;
					}
				}
				case 5:
				{
					if(Players[playerid][Token] < 10000 && TokenUltimate[playerid]==false) { TokenUsing[playerid]=false; return SendClientMessage(playerid,COLOR_RED,"* You need least 10000 Tokens to use this dyanmic vehicle"); }
					if(TokenUltimate[playerid]==false)
					{
						KillTimer(UltimateTimer[playerid]);
						Players[playerid][Token]-=10000;
						GameTextForPlayer(playerid,"~r~-10000 Tokens",500,3);
						format(xstring,sizeof(xstring),"* %p[%d] has Swapped 10000 Tokens for Vehicle: %v[%d] - Ultimited 3Minutes",playerid,playerid,432,432);
						Chat_SendMessageToAdmins(COLOR_AMSG,1,xstring);
					}
					Token_Vehicle(playerid,5000,432,3,true);
				}
			}
		}
		else TokenUsing[playerid]=false;
	}

	if(dialogid == 3000)
	{
		if(!response) return 1;
		switch(listitem)
		{
			case 0:
			{
			    //security
			    Players[playerid][Minigame] = 50;
			    SetPlayerVirtualWorld(playerid,50);
			    ResetPlayerWeapons(playerid);
			    GivePlayerWeapon(playerid,WEAPON:3,1);
			    GivePlayerWeapon(playerid,WEAPON:25,1000);
			    GivePlayerWeapon(playerid,WEAPON:29,8000);
			    SetPlayerTeam(playerid,1);
			    SetPlayerInterior(playerid,1);
			    SetPlayerPos(playerid,2152.6597,1598.7529,1006.1791);
			    GameTextForPlayer(playerid,"~g~Stop the Robbers!",1000,3);

			}

			case 1:
			{
			    //robbers
			    Players[playerid][Minigame] = 50;
			    SetPlayerVirtualWorld(playerid,50);
			    ResetPlayerWeapons(playerid);
			    GivePlayerWeapon(playerid,WEAPON:3,1);
			    GivePlayerWeapon(playerid,WEAPON:25,1000);
			    GivePlayerWeapon(playerid,WEAPON:30,8000);
			    SetPlayerTeam(playerid,2);
			    SetPlayerPos(playerid,2171.2361,1669.4611,10.8203);
			    GameTextForPlayer(playerid,"~g~Steal Money!",1000,3);
			}

		}

	}

	if(dialogid == 2796)
	{
		if(response)
		{
			new spawn = random(2);
			switch(listitem)
			{
				case 0:
				{
					new auto_assign = AutoAssign();//(playerid);
					switch(auto_assign)
					{
						case 1:
						{
							SetCameraBehindPlayer(playerid);
							TogglePlayerSpectating(playerid, false);
							SetPlayerVirtualWorld(playerid,100);
							Players[playerid][TDMJoined] = true;
							SetPlayerTeam(playerid,1);
							switch(spawn)
							{
								case 0:
								{
									SetPlayerPos(playerid,163.6733,1841.8462,17.6406);
								}

								case 1:
								{
									SetPlayerPos(playerid,173.5843,1929.2157,18.2444);
								}

								case 2:
								{
									SetPlayerPos(playerid,214.8010,1864.4788,13.1406);
								}
							}
							GameTextForPlayer(playerid,"~w~Team 1",500,3);
							SetPlayerColor(playerid,COLOR_WHITE);
							ResetPlayerWeapons(playerid);
							GivePlayerWeapon(playerid,WEAPON:16,5);
							GivePlayerWeapon(playerid,WEAPON:29,300);
							GivePlayerWeapon(playerid,WEAPON:31,500);
							switch(Players[playerid][favwpn])
							{
							    case 0:
							    {
									// do nothing
								}
						 		case 1..15:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],600);
							  	case 16,17,18:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],10);
								case 22 .. 33:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],800);
								case 34,35:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],20);
								case 37,38:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],10000);
								default: GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],300);
							}
						}
						case 2:
						{
							SetCameraBehindPlayer(playerid);
							TogglePlayerSpectating(playerid, false);
							SetPlayerVirtualWorld(playerid,100);
							Players[playerid][TDMJoined] = true;
							SetPlayerTeam(playerid,2);
							switch(spawn)
							{
								case 0:
								{
									SetPlayerPos(playerid,402.3022,2535.3342,16.5454);
								}

								case 1:
								{
									SetPlayerPos(playerid,377.3483,2477.2964,16.4844);
								}

								case 2:
								{
									SetPlayerPos(playerid,434.4670,2505.2729,16.4922);
								}

							}
							GameTextForPlayer(playerid,"~w~Team 2",500,3);
							SetPlayerColor(playerid,COLOR_RED);
							/*ResetPlayerWeapons(playerid);
							GivePlayerWeapon(playerid,16,5);
							GivePlayerWeapon(playerid,29,300);
							GivePlayerWeapon(playerid,31,500);*/
						}
					}
				}
				case 1:
				{
					SetCameraBehindPlayer(playerid);
					TogglePlayerSpectating(playerid, false);
					SetPlayerVirtualWorld(playerid,100);
					Players[playerid][TDMJoined] = true;
					SetPlayerTeam(playerid,1);
					switch(spawn)
					{
						case 0:
						{
							SetPlayerPos(playerid,163.6733,1841.8462,17.6406);
						}

						case 1:
						{
							SetPlayerPos(playerid,173.5843,1929.2157,18.2444);
						}

						case 2:
						{
							SetPlayerPos(playerid,214.8010,1864.4788,13.1406);
						}
					}
					GameTextForPlayer(playerid,"~w~Team 1",500,3);
					SetPlayerColor(playerid,COLOR_WHITE);
					/*ResetPlayerWeapons(playerid);
					GivePlayerWeapon(playerid,16,5);
					GivePlayerWeapon(playerid,29,300);
					GivePlayerWeapon(playerid,31,500);*/
				}
				case 2:
				{
					SetCameraBehindPlayer(playerid);
					TogglePlayerSpectating(playerid, false);
					SetPlayerVirtualWorld(playerid,100);
					Players[playerid][TDMJoined] = true;
					SetPlayerTeam(playerid,2);
					switch(spawn)
					{
						case 0:
						{
							SetPlayerPos(playerid,402.3022,2535.3342,16.5454);
						}

						case 1:
						{
							SetPlayerPos(playerid,377.3483,2477.2964,16.4844);
						}

						case 2:
						{
							SetPlayerPos(playerid,434.4670,2505.2729,16.4922);
						}

					}
					GameTextForPlayer(playerid,"~w~Team 2",500,3);
					SetPlayerColor(playerid,COLOR_RED);
					/*ResetPlayerWeapons(playerid);
					GivePlayerWeapon(playerid,16,5);
					GivePlayerWeapon(playerid,29,300);
					GivePlayerWeapon(playerid,31,500);*/
				}
				default:
				{
					TogglePlayerSpectating(playerid, false);
					SetPlayerVirtualWorld(playerid,0);
					SetCameraBehindPlayer(playerid);
					Players[playerid][TDMJoined] = false;
					SpawnPlayer(playerid);
					GameTextForPlayer(playerid,"~g~Left ~r~[ERROR]",500,3);

				}

			}
		}
		else
		{
			TogglePlayerSpectating(playerid, false);
			SetPlayerVirtualWorld(playerid,0);
			SetCameraBehindPlayer(playerid);
			Players[playerid][TDMJoined] = false;
			SpawnPlayer(playerid);
			GameTextForPlayer(playerid,"~g~Left",500,3);
		}
	}
	return 1;
}

/* ******************************************************************************

								REVOLUTIONX COMMMANDS
****************************************************************************** */

CMD:delivery(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"[MINIGAMES]{FFFFFF} You are in a minigame. Leave it first.");
	if(Players[playerid][Delivery] == true) return SendClientMessage(playerid,COLOR_RED,"[MINIGAMES]{FFFFFF} You are already doing a delivery. /stopdelivery");

	if(IsPlayerInDeliveryVehicle(playerid))
	{
		Players[playerid][Delivery] = true;

		GameTextForPlayer(playerid,"~g~Delivery Started",1500,3);
		new aModel = GetVehicleModel(GetPlayerVehicleID(playerid));
		// 455 - LV // 499 -
		if(aModel == 499)
		{
			new point = random(sizeof CuntDeliveries);
			Players[playerid][DeliveryCP] = CreateDynamicCP(CuntDeliveries[point][0],CuntDeliveries[point][1],CuntDeliveries[point][2], 7, -1, -1,playerid,5000,-1,1);
			switch(point)
			{
				case 0:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Logs to the Campsite");
					// 30 - 50 IDS for Country
					Players[playerid][DeliveryID] = 30;
				}

				case 1:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Hay to the Farmer");
					Players[playerid][DeliveryID] = 31;
				}

				case 2:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Explosives to the Trailer Park");
					Players[playerid][DeliveryID] = 32;
				}

				case 3:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the parts to the Factory");
					Players[playerid][DeliveryID] = 33;
				}

				case 4:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Blankets to the Motel");
					Players[playerid][DeliveryID] = 34;
				}

				case 5:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Lottery Tickets to 69c Store");
					Players[playerid][DeliveryID] = 35;
				}

				case 6:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the gas to the Gas Station");
					Players[playerid][DeliveryID] = 36;
				}

				case 7:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the beer to the Liqour Store");
					Players[playerid][DeliveryID] = 37;
				}

				case 8:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the fake money to the Loan Store");
					Players[playerid][DeliveryID] = 38;
				}
			}
		}


		if(aModel == 455)
		{
			new point = random(sizeof LVDeliveries);
			Players[playerid][DeliveryCP] = CreateDynamicCP(LVDeliveries[point][0],LVDeliveries[point][1],LVDeliveries[point][2], 7, -1, -1,playerid,5000,-1,1);
			switch(point)
			{
				case 0:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Fake Chips to the Casino");
					Players[playerid][DeliveryID] = 1;
				}

				case 1:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Used Sex Toys to the Sex Shop");
					Players[playerid][DeliveryID] = 2;
				}

				case 2:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Condoms to the Strip Club");
					Players[playerid][DeliveryID] = 3;
				}

				case 3:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Gun Supplies to Ammunation");
					Players[playerid][DeliveryID] = 4;
				}

				case 4:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Police Batons to the Police Station");
					Players[playerid][DeliveryID] = 5;
				}

				case 5:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the CD's to the Music Store");
					Players[playerid][DeliveryID] = 6;
				}

				case 6:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Vibrators to the Sex Shop");
					Players[playerid][DeliveryID] = 7;
				}

				case 7:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Medical Supplies to the LV Hospital");
					Players[playerid][DeliveryID] = 8;
				}

				case 8:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Textbooks to the College");
					Players[playerid][DeliveryID] = 9;
				}

				case 9:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Boxes to the Burger Shot");
					Players[playerid][DeliveryID] = 10;
				}

				case 10:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Jerry Cans to the Gas Station");
					Players[playerid][DeliveryID] = 11;
				}

				case 11:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Paint Cans to the Pay and Spray");
					Players[playerid][DeliveryID] = 12;
				}

				case 12:
				{
					SendClientMessage(playerid,COLOR_GREEN,"*** Deliver the Boxes to the 24/7");
					Players[playerid][DeliveryID] = 13;
				}
			}
		}
	}	else SendClientMessage(playerid,COLOR_RED,"* This vehicle cannot be used for deliveries. Head to /trucking to get one.");
	return 1;
}

CMD:michelles(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"[MINIGAMES]{FFFFFF} You cant use this command right now. /leavedm");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid,4);
	SetPlayerFacingAngle(playerid,0);
	GotoPosition(playerid,306.19,307.81,1003.30,false);
	GameTextForPlayer(playerid,"~y~Michelles House",1000,3);
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;
}

CMD:rmbuilding(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		new dModel,Float:rng;
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		if(sscanf(params,"df",dModel,rng)) return SendClientMessage(playerid,COLOR_RED,"* /rmbuilding <model> <range>");
  		for(new i = 0; i <= MAX_PLAYERS; i++)
    	{
    		RemoveBuildingForPlayer(i,dModel,x,y,z,rng);
    	}
    	
		
		SendClientMessage(playerid,COLOR_GREY,"* Done");
	}
	return 1;
}


CMD:vehicleduel(playerid, params[])
{
	// accept
	if(Players[playerid][VehRequest] != INVALID_PLAYER_ID)
	{
		if(!IsPlayerConnected(Players[playerid][VehRequest]))
		{
		    SendClientMessage(playerid,COLOR_LIME,"* Your duel expired. (Other player left)");
		    Players[playerid][vehDuel] = false;
	     	Players[Players[playerid][VehRequest]][vehDuel] = false;
		}

	    TogglePlayerControllable(playerid, false);
	    TogglePlayerControllable(Players[playerid][VehRequest], false);
	    SetTimerEx("VehDuelStart",5000,false,"dd",playerid,Players[playerid][VehRequest]);

 	   	format(xstring,sizeof xstring,"A Vehicle Duel between %p (ID:%d) and %p (ID:%d) has started.",playerid,playerid,Players[playerid][vehDuel],Players[playerid][vehDuel]);
	    SendClientMessageToAll(COLOR_LIME, xstring);

		GameTextForPlayer(playerid,"~g~Duel Starting...",5000,3);
	    GameTextForPlayer(Players[playerid][VehRequest],"~g~Duel Starting...",5000,3);

	    Players[Players[playerid][VehRequest]][vehDuel] = true;
	    return 1;
	}


	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"** Usage: /vehicleduel <Player>");
	if(IsPlayerConnected(id))
	{
	    if(playerid == id) return SendClientMessage(playerid,COLOR_RED,"* You can't duel yourself.");
	    if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,COLOR_RED,"** That player is not in a vehicle.");
        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"** You are not in a vehicle.");
	    if(Players[id][vehDuel] == true) return SendClientMessage(playerid,COLOR_RED,"** That player is already in a vehicle duel.");


	    Players[playerid][VehRequest] = id;
	    Players[id][VehRequest] = playerid;
	    Players[playerid][vehDuel] = true;

	    format(xstring,sizeof xstring,"%p (ID:%d) challenged you to a Vehicle Duel! Type /vehicleduel to accept.",playerid,playerid);
	    SendClientMessage(id,COLOR_LIME, xstring);

	    format(xstring,sizeof xstring,"You challenged %p (ID:%d) to a vehicle duel! They have 1 minute to respond.",id,id);
	    SendClientMessage(playerid,COLOR_LIME, xstring);

	    SetTimerEx("VehExpire",60000,false,"dd",playerid,id);


	}
	return 1;
}

forward VehExpire(playerid,id);
public VehExpire(playerid,id)
{
	Players[playerid][vehDuel] = false;
	Players[id][vehDuel] = false;

 	SendClientMessage(playerid,COLOR_LIME, "* Vehicle Duel Expired.");
 	SendClientMessage(id,COLOR_LIME, "* Vehicle Duel Expired.");
	return 1;
}

CMD:maprecord(playerid, params[])
{
	format(xstring,sizeof(xstring),"* ANTICHEAT: %p (ID:%d) has been kicked for trying to use MapPiratePlus.asi",playerid,playerid);
	SendClientMessageToAll(COLOR_AC,xstring);
	SendClientMessage(playerid,COLOR_AC,"*** You thought you could copy our MAPS? Don't think so. If this is a false warning, you can rejoin.");
	Kick(playerid);
	return 1;
}

CMD:mysqlq(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{

		mysql_query(SQL,params);
		new r = cache_affected_rows();
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) sent mysql query: %s",playerid,playerid,params);
		SendMessageToAdminsEx(COLOR_ORANGE,8,xstring);
		format(xstring,sizeof xstring,"MYSQL QUERY-RESULT: %d",r);
		SendClientMessage(playerid,COLOR_ORANGE,xstring);
	}   else SendClientMessage(playerid,COLOR_RED,"Sorry, only management (admins) can work with MYSQL.");
	return 1;
}

CMD:restore(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
	    BuildObjects();
		format(xstring,sizeof xstring,"Admin %p (ID:%d) restored 8,000 OnGameModeInit Objects",playerid,playerid);
		SendMessageToAdminsEx(COLOR_ORANGE,1,xstring);
	}   else SendClientMessage(playerid,COLOR_RED,"Sorry, only management (admins) can do this.");
	return 1;
}

CMD:search(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new items, arrSearch[125];

		if (isnull(params)) return SendClientMessage(playerid, -1, "/search [params]");

		for(new i; i < sizeof(ObjectList) && items < sizeof(arrSearch); i ++)
		{
			if(strfind(ObjectList[i][oName], params, true) != -1)
			{
		 		arrSearch[items ++] = ObjectList[i][oID];
			}
		}

		ShowModelSelectionMenuEx(playerid, arrSearch, items, "Search Results", SEARCH_MENU, 0.0, 0.0, 90.0);
	}
	return true;
}


stock GetPlayerClosestStreamedObject(playeride)
{
    new pid = -1, Float:distance = 100.0, Float:tmp[7];
    GetPlayerPos(playeride,tmp[0],tmp[1],tmp[2]);
    for(new i = 0; i <= CountDynamicObjects(); i++)
    {
		if(IsValidDynamicObject(i))
		{
		    GetDynamicObjectPos(i,tmp[3],tmp[4],tmp[5]);
        	tmp[6] = GetDistanceBetweenCoords(tmp[0],tmp[1],tmp[2],tmp[3],tmp[4],tmp[5]);
        	if(distance < tmp[6]) continue;
        	distance = tmp[6];
			pid = i;
		}
    }
    return pid;
}


GetUserIDName(user)
{
	new name[21] = "Nothing";
    for(new i = 0; i <= MAX_PLAYERS; i++)
    {
		if(IsPlayerConnected(i) && Players[i][userID] == user)
		{
		    GetPlayerName(i,name,sizeof name);
			return name;
		}
    }
    
    // Else check the mysql Tables
	format(xstring,sizeof xstring,"SELECT `Name` FROM `users` WHERE `userID` = '%d'",user);
	mysql_query(SQL,xstring);
	if(cache_num_rows() > 0)
	{
		cache_get_value_name(0,"Name",name);
    }
    return name;
}


stock GetPlayerClosestPlayer(playerid,bool:NPC = true)
{
    new pid = INVALID_PLAYER_ID,
        Float:distance = 100.0,
        Float:tmp[7];
    GetPlayerPos(playerid,tmp[0],tmp[1],tmp[2]);
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(i == playerid) continue;
        if(!IsPlayerConnected(i)) continue;
        if(NPC == false) if(IsPlayerNPC(i)) continue;
        GetPlayerPos(i,tmp[3],tmp[4],tmp[5]);
        tmp[6] = GetDistanceBetweenCoords(tmp[0],tmp[1],tmp[2],tmp[3],tmp[4],tmp[5]);
        if(distance < tmp[6]) continue;
        distance = tmp[6];
        pid = i;
    }
    return pid;
}


CMD:trytofixctf(playerid, params[])
{
	ActiveCTF = false;
	return 1;
}
	

CMD:nearestplayer(playerid,params[]) return cmd_np(playerid,params);
CMD:np(playerid, params[])
{
	new nearid = GetPlayerClosestPlayer(playerid);
	if(nearid == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"* Sorry, I cannot find any players near you.");
	format(xstring,sizeof xstring,"The nearest player is %p (ID:%d)",nearid,nearid);
	SendClientMessage(playerid,COLOR_AMSG,xstring);
	return 1;
}

CMD:nos(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && !IsPlayerInInvalidNosVehicle(playerid))
	{
		new v = GetPlayerVehicleID(playerid);
	 	AddVehicleComponent(v, 1010);
	 	GameTextForPlayer(playerid,"~r~nos added!",800,3);
 	}   else SendClientMessage(playerid,COLOR_RED,"That vehicle does not allow for NOS.");
	return 1;
}

CMD:rafinha(playerid, params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,1126.6378,3711.8530,2.4785,true);
  	GameTextForPlayer(playerid,"~y~ Rafinha ~g~STUNT",500,4);
	return 1;
}

CMD:skydive(playerid, params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid, -5.79980469,7534.39941406,3044.20009766,false);
  	GameTextForPlayer(playerid,"~y~ skydive ~g~STUNT",500,4);
	GivePlayerWeapon(playerid, WEAPON:46, 1);
	return 1;
}
CMD:ic(playerid, params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,3383.6794,-2611.3921,886.7832,true);
  	GameTextForPlayer(playerid,"~y~ Impossible Challenge~n~ ~g~By GTAFREAK",500,4);
	return 1;
}
CMD:rv(playerid, params[])
{
		if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
		if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		new Float:Zz;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
		new PlayersVehicle;
		if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
		{
		    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
			GetXYInFrontOfPlayer(playerid, x, y, 8);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		else
		{
			GetXYInFrontOfPlayer(playerid, x, y, 5);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid,PlayersVehicle, 0);
		format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);

		SendClientMessage(playerid, COLOR_YELLOW,xstring);
		return 1;
}
CMD:lcp(playerid, params[])
{
	if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
	if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
	if(MyCurrentCP[playerid]-1 == -1) return SendClientMessage(playerid, COLOR_YELLOW, "You can not LCP at this TIME!");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,CPs[MyCurrentCP[playerid]-1][0],CPs[MyCurrentCP[playerid]-1][1],CPs[MyCurrentCP[playerid]-1][2],true);
  	GameTextForPlayer(playerid,"~y~ TELEPORTED ~g~LAST CHECKPOINT",500,4);
	return 1;
}

CMD:lastcheckpoint(playerid,params[]) return cmd_lcp(playerid,params);
CMD:quickstart(playerid, params[])
{
		if(!IsAdmin(playerid)) return 0;
		if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
		if(OnRaceCD == true) return SendClientMessage(playerid,COLOR_RED,"Unable to QS at this time: Race Countdown in progress.");
		if(RaceStart == true) return SendClientMessage(playerid,COLOR_RED,"Unable to QS at this time: RACE in progress.");
		if(RaceActive == true && xx_cd > 5)
		{
		    xx_cd = 5;
			format(xstring, sizeof(xstring), "* Admin %p (ID:%d) has started the race!", playerid, playerid);
	    	SendClientMessageToAll(COLOR_LIME, xstring);
		}
		return 1;
}
CMD:gipv(playerid,params[]) return cmd_ps(playerid,params);
CMD:qs(playerid,params[]) return cmd_quickstart(playerid,params);
CMD:spinvehicle(playerid,params[])
{
	new id;
	if(!IsAdmin(playerid)) return 0;
	if(sscanf(params,"u",id)) {
		if(IsPlayerInAnyVehicle(playerid))
        SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 2.0, 2.0, 2.0);
	}
	else
	{
		if(IsPlayerInAnyVehicle(playerid))
        SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 2.0, 2.0, 2.0);
		else return SendClientMessage(playerid,COLOR_RED,"* * Player not in any vehicle!");

	}
	return 1;
}


CMD:spinvehiclex(playerid,params[])
{
	new id;
	if(!IsAdmin(playerid)) return 0;
	if(sscanf(params,"u",id)) {
		if(IsPlayerInAnyVehicle(playerid))
        SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 2.0, 0.0, 0.0);
	}
	else
	{
		if(IsPlayerInAnyVehicle(playerid))
        SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 2.0, 0.0, 0.0);
		else return SendClientMessage(playerid,COLOR_RED,"* * Player not in any vehicle!");

	}
	return 1;
}
CMD:spinvehicley(playerid,params[])
{
	new id;
	if(!IsAdmin(playerid)) return 0;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"You must be the driver of a vehicle!");
	if(sscanf(params,"u",id)) {
		if(IsPlayerInAnyVehicle(playerid))
        SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 0.0, 2.0, 0.0);
	}
	else
	{
		if(IsPlayerInAnyVehicle(playerid))
        SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 0.0, 2.0, 0.0);
		else return SendClientMessage(playerid,COLOR_RED,"* * Player not in any vehicle!");

	}
	return 1;
}
CMD:spinvehiclez(playerid,params[])
{
	new id;
	if(!IsAdmin(playerid)) return 0;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"You must be the driver of a vehicle!");
	if(sscanf(params,"u",id)) {
		if(IsPlayerInAnyVehicle(playerid))
        SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 2.0);
	}
	else
	{
		if(IsPlayerInAnyVehicle(playerid))
        SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 2.0);
		else return SendClientMessage(playerid,COLOR_RED,"* * Player not in any vehicle!");

	}
	return 1;
}

CMD:defaultmegajump(playerid,params[]) return cmd_dfmj(playerid,params);
CMD:dfmj(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 2) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this");
	MJ_Value[playerid][0] = 0.10;
	MJ_Value[playerid][1] = 2.0;
	SendClientMessage(playerid,COLOR_AMSG,"* Your default megajump values have been set. (Height: 2,  Value: 0.2)");
	return 1;
}


CMD:megajump(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 2) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this");
	if(megajump[playerid] == false)
	{
		MJ_Value[playerid][0] = 0.10;
		MJ_Value[playerid][1] = 2.0;
	    megajump[playerid] = true;
    	format(xstring,sizeof xstring,"Admin %p enabled Mega Jump!",playerid);
		SendClientMessage(playerid,COLOR_SYSTEM,xstring);
	}
	else
	{
		MJ_Value[playerid][0] = 0.10;
		MJ_Value[playerid][1] = 2.0;
 		megajump[playerid] = false;
    	format(xstring,sizeof xstring,"Admin %p disabled Mega Jump!",playerid);
		SendClientMessage(playerid,COLOR_SYSTEM,xstring);
	}
	return 1;
}

CMD:mj(playerid,params[]) return cmd_megajump(playerid,params);
CMD:enableallmegajump(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 2) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this");
	for(new i=0;i<MAX_PLAYERS;i++) megajump[i] = true;
	format(xstring,sizeof xstring,"** Admin %p (ID:%d) enabled mega jump for everyone!",playerid,playerid);
	SendClientMessageToAll(COLOR_SYSTEM,xstring);
	format(xstring,sizeof xstring,"** You can now use /mjv and /mjh to set your megajump height/value.",playerid,playerid);
	SendClientMessageToAll(COLOR_SYSTEM,xstring);
	return 1;
}
CMD:eamj(playerid,params[]) return cmd_enableallmegajump(playerid,params);
CMD:disableallmegajump(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 2) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this");
	for(new i=0;i<MAX_PLAYERS;i++) megajump[i] = false;
	format(xstring,sizeof xstring,"** Admin %p (ID:%d) disabled mega jump for everyone!",playerid,playerid);
	SendClientMessageToAll(COLOR_SYSTEM,xstring);
	return 1;
}
CMD:damj(playerid,params[]) return cmd_disableallmegajump(playerid,params);
CMD:mjh(playerid,params[])
{
	new Float:value;
	if(sscanf(params,"f",value)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /mjh <value>");
	MJ_Value[playerid][1] = value;
	format(xstring,sizeof xstring,"* Your Megajump Height value Changed to %.02f",value);
	SendClientMessage(playerid,COLOR_SYSTEM,xstring);
	return 1;
}
CMD:emj(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 2) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this");
	new value;
	if(sscanf(params,"u",value)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /emj <playerid>");
	if(!IsPlayerConnected(value)) return SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	megajump[value] = true;
	format(xstring,sizeof xstring,"Admin %p (ID:%d) %s megajump for %p (ID:%d).",playerid,playerid,(megajump[value] == true)?("Enabled"):("Disabled"),value,value);
	SendMessageToAdminsEx(COLOR_SYSTEM,1,xstring);
	format(xstring,sizeof xstring,"Admin %p (ID:%d) has %s megajump for you.",playerid,playerid,(megajump[value] == true)?("Enabled"):("Disabled"));
	SendClientMessage(value,COLOR_SYSTEM,xstring);
	return 1;
}
CMD:dmj(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 2) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this");
	new value;
	if(sscanf(params,"u",value)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /dmj <playerid>");
	if(!IsPlayerConnected(value)) return SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	megajump[value] = false;
	format(xstring,sizeof xstring,"Admin %p (ID:%d) %s megajump for %p (ID:%d).",playerid,playerid,(megajump[value] == true)?("Enabled"):("Disabled"),value,value);
	SendMessageToAdminsEx(COLOR_SYSTEM,1,xstring);
	format(xstring,sizeof xstring,"Admin %p (ID:%d) has %s megajump for you.",playerid,playerid,(megajump[value] == true)?("Enabled"):("Disabled"));
	SendClientMessage(value,COLOR_SYSTEM,xstring);
	return 1;
}
CMD:enablemegajump(playerid,params[]) cmd_emj(playerid,params);
CMD:disablemegajump(playerid,params[]) cmd_dmj(playerid,params);
CMD:mjv(playerid,params[])
{
	new Float:value;
	if(sscanf(params,"f",value)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /mjv <value>");
	MJ_Value[playerid][0] = value;
	format(xstring,sizeof xstring,"* Your Megajump Speed value Changed to %.02f",value);
	SendClientMessage(playerid,COLOR_SYSTEM,xstring);
	return 1;
}
public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)
{
    if(Players[playerid][Minigame] == 900) return 0;
    
   	if(PRESSED(KEY_NO) && Players[playerid][Minigame] == 1020)
	{
	    ShowPlayerDialog(playerid,7777,DIALOG_STYLE_LIST,"Survival Menu","\n+ 50 Ammo (2 Points)\nInvisible For 10 Seconds (10 Points)\nAirdrop (Coming Soon)","Buy","Leave Menu");
		return 1;
	}
    
	if(PRESSED(KEY_FIRE) && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(Players[playerid][rockets] == true)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			GetXYInFrontOfPlayer(playerid, x, y, 35);
			CreateExplosion(x,y,z,Players[playerid][explosions],Players[playerid][explosionsr]);
		}

		if(RaceActive == true && Players[playerid][AmRacing] == true && bombrace == 1)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			GetXYInFrontOfPlayer(playerid, x, y, 18);
			CreateExplosion(x,y,z,11,3);
		}
		return _B@Action(playerid,B@Status[playerid][_@FIREKEY]);
	}

	if(newkeys & KEY_FIRE)
	{
		if(RaceActive == true && RaceNOS == false && Players[playerid][AmRacing] == true) return 1;
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && !IsPlayerInInvalidNosVehicle(playerid))
	    {
	        new v = GetPlayerVehicleID(playerid);
	        AddVehicleComponent(v, 1010);
	    }
		return 1;
	}
	
	if(newkeys & KEY_SPRINT && gSpectateID[playerid] != INVALID_PLAYER_ID)
	{
		TogglePlayerSpectating(playerid, false);
		format(xstring,sizeof xstring,"~r~No longer specing~n~~w~%s (%p)",gSpectateID[playerid],gSpectateID[playerid]);
		GameTextForPlayer(playerid,xstring,1500,3);
		gSpectateID[playerid] = INVALID_PLAYER_ID;
		gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	
	if (Players[playerid][TDMJoined] == false)
	{
		if(PRESSED(KEY_ACTION) && B@Status[playerid][_@SFIREKEY] != 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			return _B@Action(playerid,B@Status[playerid][_@SFIREKEY]);
		}
		if(PRESSED(KEY_CROUCH) && B@Status[playerid][_@HORNKEY] != 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			return _B@Action(playerid,B@Status[playerid][_@HORNKEY]);
		}
		if(PRESSED(KEY_SUBMISSION) && B@Status[playerid][_@SUBKEY] != 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			return _B@Action(playerid,B@Status[playerid][_@SUBKEY]);
		}
		if(PRESSED(KEY_LOOK_RIGHT) && B@Status[playerid][_@LOOKRIGHTKEY] != 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			return _B@Action(playerid,B@Status[playerid][_@LOOKRIGHTKEY]);
		}
		if(PRESSED(KEY_LOOK_LEFT) && B@Status[playerid][_@LOOKLEFTKEY] != 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			return _B@Action(playerid,B@Status[playerid][_@LOOKLEFTKEY]);
		}
		if(PRESSED(KEY_YES) && B@Status[playerid][_@YESKEY] != 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			return _B@Action(playerid,B@Status[playerid][_@YESKEY]);
		}
		if(PRESSED(KEY_NO) && B@Status[playerid][_@NOKEY] != 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			return _B@Action(playerid,B@Status[playerid][_@NOKEY]);
		}
	}

	if (newkeys & KEY_CROUCH && Players[playerid][TDMJoined] == false)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && SpeedBoostDisabled[playerid] == false)
		{
 			new Float:vx, Float:vy, Float:vz;
			GetVehicleVelocity(GetPlayerVehicleID(playerid), vx, vy, vz);
			if (floatabs(vx) < 3 && floatabs(vy) < 3 && floatabs(vz) < 3)
  			{
   				SetVehicleVelocity(GetPlayerVehicleID(playerid), vx * SpeedBoostMultiplier[playerid], vy * SpeedBoostMultiplier[playerid], vz * SpeedBoostMultiplier[playerid]);
    		}

		}
		return 1;
	}
	if( megajump[playerid] == true && (((newkeys & (KEY_JUMP)) == (KEY_JUMP)) && ((oldkeys & (KEY_JUMP)) != (KEY_JUMP))) )
	{
		 MegaJump(playerid, MJ_Value[playerid][0],MJ_Value[playerid][1]);
	}
	return 1;
}

stock IsBike(veh)
{
	new Bike = GetVehicleModel(veh);
	switch(Bike)
	{
	  case 509,481,462,522,471,586: return 1;
	}
	return 0;
}


public OnPlayerStateChange(playerid, PLAYER_STATE:newstate, PLAYER_STATE:oldstate)
{
	if(oldstate == PLAYER_STATE_DRIVER)
 	{
 		if(newstate == PLAYER_STATE_ONFOOT)
      	{

            for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i) && gSpectateID[i] == playerid)
			    {
					// Fix the Camera!
					TogglePlayerSpectating(i, true);
					PlayerSpectatePlayer(i, playerid);
					gSpectateType[i] = ADMIN_SPEC_TYPE_PLAYER;

			    }
			}
      	
       		if(Players[playerid][afob] == true)
         	{
          		PutPlayerInVehicle(playerid, GetPVarInt(playerid,"CallCar"), 0);
          	}
     	}
  	}
  	
  	
	if(oldstate == PLAYER_STATE_ONFOOT)
 	{
 		if(newstate == PLAYER_STATE_DRIVER)
      	{
       		for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i) && gSpectateID[i] == playerid)
			    {
					// Fix the Camera!
					TogglePlayerSpectating(i, true);
					PlayerSpectateVehicle(i,GetPlayerVehicleID(playerid));
					gSpectateType[i] = ADMIN_SPEC_TYPE_VEHICLE;
			    }
			}
		}
   	}

	return 1;
}

forward ResetSpam(playerid);
public ResetSpam(playerid)
{
 	Players[playerid][Spam] = 0;
	return 1;
}

public OnPlayerText(playerid, text[])
{
	Players[playerid][Spam]++;
	if(Players[playerid][Spam] == 1) SetTimerEx("ResetSpam", 2500, false, "d", playerid);
	
	if(Players[playerid][Muted] == true)
	{
	    if(Players[playerid][Spam] >= 10) return 0;
		GameTextForPlayer(playerid,"`~r~You cannot talk as you are muted",300,3);
  		return 0;
  	}

	if(Players[playerid][Spam] >= 6 && Players[playerid][Muted] == false)
	{
		SendClientMessage(playerid,COLOR_AC, "Anti-Spam: You have been Muted for spamming.");
		format(xstring, sizeof(xstring), "Anti-Spam: %p (ID:%d) Muted for spamming.",playerid, playerid);
		Chat_SendMessageToAdmins(COLOR_AC,1,xstring);
		DCC_SendChannelMessage(DCAdmin,xstring);
		Players[playerid][MuteTimer] = SetTimerEx("UnmutePlayer_Timer",60000,false,"d",playerid);
  		Players[playerid][MutedBy] = 500; // System
		Players[playerid][Muted] = true;
		return 0;
	}

	if(!strcmp(text, tword, false) && typing == true)
	{
		format(xstring,sizeof xstring,"<RX-GAME> {58CC00}%p{FFFFFF} won and recieved {D7FFB8}%i {FFFFFF}Tokens, {D7FFB8}+%i{FFFFFF} Score and {D7FFB8}+%i{FFFFFF} Cash.",playerid,ttoken,tScore,tCash);
		SendClientMessageToAll(COLOR_AQUA,xstring);
		GiveToken(playerid,ttoken);
		Players[playerid][score] += tScore;
		GivePlayerCash(playerid,tCash);
		SetPlayerScore(playerid,Players[playerid][score]);
		typing = false;
		new Float:h;
		GetPlayerHealth(playerid,h);
		SetPlayerHealth(playerid,h+10);
	}

 	if(stringContainsIP(text) && !IsAdmin(playerid))
    {
        format(xstring,sizeof xstring,"* AC Alert: Blocked Advertisement by %p (ID:%d)",playerid,playerid);
        Chat_SendMessageToAdmins(COLOR_AC,1,xstring);
		DCC_SendChannelMessage(DCAdmin,xstring);
        if(Players[playerid][Spam] >= 4)
		{
			SendClientMessage(playerid,COLOR_AC, "Anti-Spam: You have been kicked for advertising.");
			format(xstring, sizeof(xstring), "# Anti-Spam: %p (ID:%d) kicked for advertising.",playerid, playerid);
			Chat_SendMessageToAdmins(COLOR_AC,1,xstring);
			format(xstring, sizeof(xstring), "# MSG: %p (ID:%d) %s",playerid, playerid,text);
			Chat_SendMessageToAdmins(COLOR_AC,1,xstring);
			
 			format(xstring,sizeof xstring,"INSERT INTO `kicklog` (`Username`, `Reason`, `KickedBy`) VALUES ('%p','%s','%s')",playerid,"Spam","AutoKick");
  			mysql_query(SQL,xstring);
  			
  			Kick2(playerid);
			return 0;
		}
        return 0;
    }
    
	if(Players[playerid][Spam] >= 15 && Players[playerid][Muted] == false)
	{
		SendClientMessage(playerid,COLOR_AC, "Anti-Spam: You have been kicked for being a possible spambot.");
		format(xstring, sizeof(xstring), "Anti-Spam: %p (ID:%d) kicked for possible spambot.",playerid, playerid);
		Chat_SendMessageToAdmins(COLOR_AC,1,xstring);
		Players[playerid][Spam] = 0;
		Kick2(playerid);
		return 0;
	}

	if(text[0] == '*' && Players[playerid][Minigame] != 0)
	{
		format(xstring,sizeof(xstring),"[Minigame %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		foreach(new i : Player)
		{
			if(Players[i][Minigame] == Players[playerid][Minigame])
			{
			    SendClientMessage(i,COLOR_ORANGE,xstring);
			}
		}
		return 0;
	}
	
	if(text[0] == '#')
	{
	    if(strlen(Players[playerid][groupName]) == 0) return SendClientMessage(playerid,COLOR_RED,"* You are not in a group!");
		format(xstring,sizeof(xstring),"[Group %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		foreach(new i : Player)
		{
		    if(!strcmp(Players[i][groupName], Players[playerid][groupName], true) && IsPlayerConnected(i))
			{
			    SendClientMessage(i,COLOR_ORANGE,xstring);
			}
		}
		return 0;
	}

	if(text[0] == '$' && (Players[playerid][VIP] == 1 || IsAdmin(playerid)))
	{
		if(IsAdmin(playerid)) format(xstring,sizeof(xstring),"[Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		else format(xstring,sizeof(xstring),"[VIP %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		foreach(new i : Player)
		{
			if((IsVIP(i) || IsAdmin(i)) && IsPlayerConnected(i))
			{
   				SendClientMessage(i,0xA3B394FF,xstring);
			}
		}
		return 0;
	}


	if(text[0] == '~')
	{
		format(xstring,sizeof xstring,"* Message from %p (ID:%d) to IRC #rxdm: %s",playerid,playerid,text[1]);
		SendMessageToAdmins_PM(playerid,1,COLOR_PURPLE,xstring);
		format(xstring,sizeof xstring,"Message sent to IRC : %s",text[1]);
	    SendClientMessage(playerid,COLOR_AMSG,xstring);
		return 0;
	}

	if(text[0] == '!' && Players[playerid][AdminLvl] >= 9)
	{

		format(xstring,sizeof(xstring),"[Management %p (ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		
		foreach(new i : Player)
		{
			if(Players[i][AdminLvl] >= 9)
			{
				SendClientMessage(i,0xFF0077FF,xstring);
			}
		}
		return 0;
	}

	if(text[0] == '@' && Players[playerid][AdminLvl] > 0)
	{
		switch(Players[playerid][AdminLvl])
		{
		    case 10:
			{
				format(xstring,sizeof(xstring),"**[Owner %p(ID:%d)]:** %s",playerid,playerid,text[1]);
				DCC_SendChannelMessage(DCAdmin,xstring);
				foreach(new i : Player)
				{
					if(Players[i][AdminLvl] > 0)
			  		{
			  		    switch(Players[i][AdminChat])
			  		    {
			  		        case 0:
							{
		    					format(xstring,sizeof(xstring),"{ Server Owner %p: %s }",playerid,text[1]);
		    					SendClientMessage(i,COLOR_ORANGE,xstring);
							}

							case 1:
							{
								format(xstring,sizeof(xstring),"[Server Owner %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}

							case 2:
							{
								format(xstring,sizeof(xstring),"[Server Owner %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_ORANGE,xstring);
							}

							case 3:
							{
								format(xstring,sizeof(xstring),"Server Owner %p [ID:%d]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}
							
							case 4:
							{
								format(xstring,sizeof(xstring),"[Server Owner %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_LIGHTBLUE,xstring);
							}

			  		    }
				    }
				}
			}
		    case 9:
		    {
				format(xstring,sizeof(xstring),"**[Management %p(ID:%d)]:** %s",playerid,playerid,text[1]);
				DCC_SendChannelMessage(DCAdmin,xstring);
				foreach(new i : Player)
				{
					if(Players[i][AdminLvl] > 0)
			  		{
			  		    switch(Players[i][AdminChat])
			  		    {
			  		        case 0:
							{
		    					format(xstring,sizeof(xstring),"[Management %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_ACHAT,xstring);
							}

							case 1:
							{
								format(xstring,sizeof(xstring),"[Management %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}

							case 2:
							{
								format(xstring,sizeof(xstring),"[Management %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_ORANGE,xstring);
							}

							case 3:
							{
								format(xstring,sizeof(xstring),"Management %p [ID:%d]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}
							
							case 4:
							{
								format(xstring,sizeof(xstring),"[Management %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_LIGHTBLUE,xstring);
							}
			  		    }
				    }
				}
			}
			case 8:
		    {
				format(xstring,sizeof(xstring),"**[Head Admin %p(ID:%d)]:** %s",playerid,playerid,text[1]);
				DCC_SendChannelMessage(DCAdmin,xstring);
				foreach(new i : Player)
				{
					if(Players[i][AdminLvl] > 0)
			  		{
			  		    switch(Players[i][AdminChat])
			  		    {
			  		        case 0:
							{
		    					format(xstring,sizeof(xstring),"[Head Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_ACHAT,xstring);
							}

							case 1:
							{
								format(xstring,sizeof(xstring),"[Head Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}

							case 2:
							{
								format(xstring,sizeof(xstring),"[Head Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_ORANGE,xstring);
							}

							case 3:
							{
								format(xstring,sizeof(xstring),"Head Admin %p [ID:%d]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}

							case 4:
							{
								format(xstring,sizeof(xstring),"[Head Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_LIGHTBLUE,xstring);
							}

			  		    }
				    }
				}
			}
   			case 7:
		    {
				format(xstring,sizeof(xstring),"**[Lead Admin %p(ID:%d)]:** %s",playerid,playerid,text[1]);
				DCC_SendChannelMessage(DCAdmin,xstring);
				foreach(new i : Player)
				{
					if(IsPlayerConnected(i) && Players[i][AdminLvl] > 0)
			  		{
			  		    switch(Players[i][AdminChat])
			  		    {
			  		        case 0:
							{
		    					format(xstring,sizeof(xstring),"[Lead Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_ACHAT,xstring);
							}

							case 1:
							{
								format(xstring,sizeof(xstring),"[Lead Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}

							case 2:
							{
								format(xstring,sizeof(xstring),"[Lead Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_ORANGE,xstring);
							}

							case 3:
							{
								format(xstring,sizeof(xstring),"Lead Admin %p [ID:%d]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}
							
							case 4:
							{
								format(xstring,sizeof(xstring),"[Lead Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_LIGHTBLUE,xstring);
							}
							
			  		    }
				    }
				}
			}
		    case 1 .. 6:
			{
				format(xstring,sizeof(xstring),"**[Admin %p(ID:%d)]:** %s",playerid,playerid,text[1]);
				DCC_SendChannelMessage(DCAdmin,xstring);
				foreach(new i : Player)
				{
					if(IsPlayerConnected(i) && Players[i][AdminLvl] > 0)
			  		{
			  		    switch(Players[i][AdminChat])
			  		    {
			  		        case 0:
							{
		    					format(xstring,sizeof(xstring),"[Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_ACHAT,xstring);
							}

							case 1:
							{
								format(xstring,sizeof(xstring),"[Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}

							case 2:
							{
								format(xstring,sizeof(xstring),"[Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_ORANGE,xstring);
							}

							case 3:
							{
								format(xstring,sizeof(xstring),"Admin %p [ID:%d]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_RED,xstring);
							}
							
							case 4:
							{
								format(xstring,sizeof(xstring),"[Admin %p(ID:%d)]:{FFFFFF} %s",playerid,playerid,text[1]);
		    					SendClientMessage(i,COLOR_LIGHTBLUE,xstring);
							}
			  		    }
				    }
				}
			}
		}
		return 0;
	}

	format(xstring,sizeof xstring,"%p [%d]:{FFFFFF} %s",playerid,playerid,text);
	SendClientMessageToAll(GetPlayerColor(playerid), xstring);

	format(xstring,sizeof xstring,":speech_balloon: **%p [%d]:** %s",playerid,playerid,text);
	DCC_SendChannelMessage(DCGen,xstring);
	return 0;
}



public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	SetCameraBehindPlayer(playerid);
	if(isNeonON[playerid]==true)
	SetTimerEx("AddNeon",3000,false,"ud",playerid,cNeon[playerid]);
	if(AllowedVehicle[playerid]==false  && !IsPlayerAdminLevel(playerid,2)  )
	{
		switch(GetVehicleModel(vehicleid))
		{
			case 520,425,432:
			{
			    if(Players[playerid][Minigame] != 75)
			    {
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid,X,Y,Z);
					SetPlayerPos(playerid,X,Y+2,Z+5);
					SendClientMessage(playerid,COLOR_RED,"* You can only enter into this vehicle by using /token  !");
					return 0;
				}
			}

		}
	}
    return 1;
}


public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(Players[playerid][Minigame] == 900) return 0; // Cannot exit
 	new bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
  	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
   	SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,lights,alarm,false,bonnet,boot,objective);
	SetCameraBehindPlayer(playerid);
	if(isNeonON[playerid]==true) RemoveNeon(playerid);

	if(Players[playerid][afob] == true)
	{
		Players[playerid][afob] = false;
		SendClientMessage(playerid,COLOR_GREY,"** AFOB Disabled (You left the bike)");
	}

	if(AllowedVehicle[playerid]==false)
	{
		switch(GetVehicleModel(vehicleid))
		{
			case 520,425,432: DestroyVehicleEx(GetPlayerVehicleID(playerid));
		}
	}
    return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
    foreach(new i : Player)
	{
		if(gSpectateID[i] == playerid && GetPlayerState(i) == PLAYER_STATE_SPECTATING)
		{
		    SetPlayerInterior(i,newinteriorid);
		}
	}
	return 1;
}

new Float:oPos[3],Float:kLibPos[3];
forward PGodTimer();
public PGodTimer()
{
	foreach(new i : Player)
	{
		if(!IsPlayerNPC(i))
	    {
	    	if(IsPlayerInAnyVehicle(i) && Players[i][autofix]==true)
			{
				SetVehicleHealth(GetPlayerVehicleID(i),999999);
				RepairVehicle(GetPlayerVehicleID(i));
			}

		

			if(Players[i][God] == true || Players[i][SpawnProtect] == true) SetPlayerHealth(i,999);
			
			if(GetPlayerCameraMode(i) == CAM_MODE_AIMWEAPON)
			{
				GetPlayerCameraPos(i, kLibPos[0], kLibPos[1], kLibPos[2]);
				if ( kLibPos[2] < -50000.0 || kLibPos[2] > 50000.0 )
				{
				    Players[i][crashwarns]++;
					format(xstring,sizeof(xstring),"AC Alert (Crashing Players): %p (ID: %d) Tried to Crash player By Sending Invalid CameraZ... Check before kick! (Value %0.2f)",i,i,kLibPos[2]);
					Chat_SendMessageToAdmins(COLOR_RED,1,xstring);
					
					if(Players[i][crashwarns] >= 3)
					{
					 	format(xstring,sizeof(xstring),"AC Alert (Crashing Players): %p (ID: %d) Tried to Crash player By Sending Invalid CameraZ. (BANNED)",i,i);
						Chat_SendMessageToAdmins(COLOR_RED,1,xstring);
					
						AddPlayerBan(i,"Trying to Crash Server","AutoBan");
						BanEx2(i,"Cheating - CrashPlayer");
						PlaySoundForAdmins(1056);
					}
					
					return 0;
				}
			}
			
			
			if(gSpectateID[i] != INVALID_PLAYER_ID && gSpectateID[i] != 200)
			{
			    new Float:health,Float:armour;
			    GetPlayerHealth(gSpectateID[i], health);
			    GetPlayerArmour(gSpectateID[i], armour);
			    format(xstring,sizeof xstring,"~w~~n~~n~~n~~n~~n~~n~Specing %p~n~~b~Health:~w~ %0.1f | Armour: %0.1f~n~Ammo :%d",gSpectateID[i], health, armour, GetPlayerAmmo(gSpectateID[i]));
			    GameTextForPlayer(i,xstring,1000,3);
			    
			}
		}
	}
	
	for(new a = 0; a < 10; a++)
	{
	    if(Moving[a][idUsed] == true)
		{
			// Determine if the object needs to be updated
			GetDynamicObjectPos(Moving[a][e_MovingObject_Actual],oPos[0],oPos[1],oPos[2]);
			if(oPos[2] >= Moving[a][MovingToZ])
			{
			    // Send it back down
			    MoveDynamicObject(Moving[a][e_MovingObject_Actual],Moving[a][ReturnPosX],Moving[a][ReturnPosY],Moving[a][ReturnPosZ],Moving[a][e_MovingObject_Speed]);
			}
			else if(oPos[2] <= Moving[a][ReturnPosZ])
			{
			    MoveDynamicObject(Moving[a][e_MovingObject_Actual],Moving[a][MovingToX],Moving[a][MovingToY],Moving[a][MovingToZ],Moving[a][e_MovingObject_Speed]);
			}
		}
	}

	return 1;
}


forward DerbyTimer();
public DerbyTimer()
{
	new Float:x,Float:y,Float:z,Float:vhealth;

	foreach(new i : Player)
	{
		if(IsPlayerConnected(i) && Players[i][Minigame] == 900)
		{
			// Run Derby Code
   			GetPlayerPos(i,x,y,z);
		    GetVehicleHealth(GetPlayerVehicleID(i), vhealth);
			if(z <= DerbyZ && ActiveDerby == false || vhealth <= 250 && ActiveDerby == false)
			{
			    // Respawn, the derby hasn't actually started
				DestroyVehicle(i);
				new r;
				SetPlayerVirtualWorld(i,205);
				Streamer_UpdateEx(i, DerbySpawns[r][0],DerbySpawns[r][1],DerbySpawns[r][2]);
				r = random(2);
				GotoPosition(i,DerbySpawns[r][0],DerbySpawns[r][1],DerbySpawns[r][2],true);
			 	SetPlayerInterior(i,0);

				new car = CreateVehicle(DerbyVehicle,DerbySpawns[r][0],DerbySpawns[r][1],DerbySpawns[r][2] + 5,DerbySpawns[r][3] + 1,6,6,-1);
				SetVehicleVirtualWorld(car,205);
				PutPlayerInVehicle(i,car,0);
			}
   			else if(z <= DerbyZ && ActiveDerby == true || vhealth <= 25 && ActiveDerby == true)
		    {
      			// They fell, exit the derby
				Players[i][Minigame] = 0;
 			    SetPlayerHealth(i, 0);
  				GameTextForPlayer(i,"~g~YOU FELL",1000,3);
    			DestroyVehicle(i);
     			DerbyPlayers--;
       			format(xstring,sizeof xstring,"%p (ID:%d) eliminated from derby! (%d players left)",i,i,DerbyPlayers);
	  			SendMessageToMinigame(COLOR_LIGHTBLUE,900,xstring);
				if(DerbyPlayers == 1)
				{
					// game end
	    			ActiveDerby = false;
	 		    	DerbyLoaded = false;
	 		    	DerbyPlayers = 0;
					DerbyZ = 0;
					new winnerid;
					for(new p = 0; p < MAX_PLAYERS; p++)
					{
						if(Players[p][Minigame] == 900)
						{
			    			Players[p][Minigame] = 0;
			    			winnerid = p;
			    			SetPlayerHealth(p, 0);
						}
					}
					
					for(new e=0; e < 5; e++)
					{
					    if(IsValidDynamicPickup(DerbyPickups[e]))
					    {
					        DestroyDynamicPickup(DerbyPickups[e]);
					    }
					}

					
					format(xstring,sizeof xstring,"%p (ID:%d) won the derby!",winnerid,winnerid);
					SendClientMessageToAll(COLOR_LIGHTBLUE,xstring);
					KillTimer(DerbyTime);
					
					// Just to make sure
					for(new v = 0; v < MAX_VEHICLES; v++)
					{
						if(GetVehicleVirtualWorld(v) == 205) DestroyVehicle(v);
					}
				}
			}
		}
	}
	return 1;
}


forward Unjailplayer_Timer(playerid);
public Unjailplayer_Timer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		format(xstring,sizeof xstring,"UnJail: %p was unjailed as the jail time ended.", playerid);
		SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
		Players[playerid][Minigame] = 0;
		SpawnPlayer(playerid);
		SendClientMessage(playerid,COLOR_ORANGE,"* You have been unjailed by the system. Behave yourself.");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	}
	return 1;
}


forward UnmutePlayer_Timer(playerid);
public UnmutePlayer_Timer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(Players[playerid][MutedBy] == 500 || !IsPlayerConnected(Players[playerid][MutedBy]))
		{
		    // The player was muted by System, or the admin has left
			format(xstring,sizeof xstring,"Unmute: %p was unmuted as the mute time ended. (Muted by System)",playerid);
			SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
			Players[playerid][Muted] = false;
			SendClientMessage(playerid,COLOR_ORANGE,"* You have been unmuted by the system. Behave yourself.");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
		else
		{
			format(xstring,sizeof xstring,"Unmute: %p was unmuted as the mute time ended. (Muted by %p)",playerid,Players[playerid][MutedBy]);
			SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
			Players[playerid][Muted] = false;
			SendClientMessage(playerid,COLOR_ORANGE,"* You have been unmuted by the system. Behave yourself.");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
	}
	
	KillTimer(Players[playerid][MuteTimer]);
	Players[playerid][MutedBy] = -1;
	Players[playerid][Muted] = false;
	Players[playerid][Spam] = 0;
	return 1;
}


/* ---------------------------- Anticheat Code --------------------------- */

public Streamer_OnPluginError(const error[])
{
	printf("Streamer.so Error: %s",error);
	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
    if(issuerid != INVALID_PLAYER_ID) // If not self-inflicted
    {
    	if(Players[playerid][Minigame] == 250 && bodypart == 9)
	    {
	        GameTextForPlayer(issuerid,"~r~headshot!",500,3);
	        SetPlayerHealth(playerid, 0);
	        return 1;
	    }
	    
	    if(Players[playerid][Minigame] == 201)
	    {
	        SetPlayerHealth(playerid, 0);
	    }
	    
	}
	return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, BULLET_HIT_TYPE:hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    if( hittype != BULLET_HIT_TYPE_NONE )
    {
        if( !( -1000.0 <= fX <= 1000.0 ) || !( -1000.0 <= fY <= 1000.0 ) || !( -1000.0 <= fZ <= 1000.0 ) ) 
        {
		
			format(xstring,sizeof(xstring),"AC Alert (Crashing Players): %p (%d) Tried to Crash player By Sending Invalid Data. (DeSynchronized)",playerid,playerid);
			DCC_SendChannelMessage(DCGen,xstring);
			format(xstring,sizeof(xstring),"%p[%d] Tried to Crash player By Sending Invalid Data. (DeSynchronized)",playerid,playerid);
			DCC_SendChannelMessage(DCGen,xstring);
			format(xstring,sizeof(xstring),"Data Sets: X: %f Y: %f Z: %f",fX,fY,fZ);
			DCC_SendChannelMessage(DCGen,xstring);
			PlaySoundForAdmins(1056);

			return 0;
        }
    }


	if(IsPlayerInAnyDynamicArea(playerid) && weaponid == 35)
	{
 		// Rocket near spawn
		format(xstring, sizeof(xstring), "AC Alert (Possible Spawnkill): Player %p (id:%d) rocket was removed near spawn",playerid,playerid);
		SendMessageToAdminsEx(COLOR_AC,1,xstring);
		format(xstring, sizeof(xstring), "Avoid Spawnkill: Player %p (id:%d) rocket was removed near spawn",playerid,playerid);
		DCC_SendChannelMessage(DCGen,xstring);
		PlaySoundForAdmins(1056);
		ResetPlayerWeapons(playerid);
		return 0;
	}
	
	if(IsPlayerInAnyDynamicArea(playerid) && weaponid == 38)
	{
 		// Rocket near spawn
		format(xstring, sizeof(xstring), "AC Alert (Possible Spawnkill): Player %p (id:%d) minigun was removed near spawn",playerid,playerid);
		SendMessageToAdminsEx(COLOR_AC,1,xstring);
		//format(xstring, sizeof(xstring), "0,4Avoid Spawnkill: Player %p (id:%d) minigun was removed near spawn",playerid,playerid);
		//IRC_GroupSay(gGroupID,IRC_ALERTS,xstring);
		PlaySoundForAdmins(1056);
  		ResetPlayerWeapons(playerid);
  		return 0;
	}
	
    return 1;
}

forward OnPlayerFloodControl(playerid, iCount, iTimeSpan);
public OnPlayerFloodControl(playerid, iCount, iTimeSpan)
{
	if(iCount > 4 && iTimeSpan < 8000)
	{
  		AddPlayerBan(playerid,"Bot Spam Attack","AutoBan");
		BanEx(playerid,"Bot Spam Attack");
		format(xstring,sizeof(xstring),"* %p (ID:%d) has been banned for flooding the server with bots.",playerid,playerid);
		SendClientMessageToAll(COLOR_AC,xstring);
		DCC_SendChannelMessage(DCGen,xstring);
		if(Players[playerid][Registered] == true)
 		{
	 		Players[playerid][Banned] = true;
		}
	}
}

/*

To fix
public OnPlayerShootDynamicObject(playerid, weaponid, STREAMER_TAG_OBJECT objectid, Float:x, Float:y, Float:z)
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		for(new a = 0; a < MAX_A_OBJECTS; a++)
		{
			if(IsPlayerConnected(p) && AdminObjData[p][a][Create] == objectid && AdminObjData[p][a][Shootable] == true)
			{
				// Found the object
 				AdminObjData[p][a][Health] -= 10.0;
				format(xstring,sizeof xstring,"Object Health: %0.2f",AdminObjData[p][a][Health]);
				GameTextForPlayer(playerid,xstring,300,3);
				if(AdminObjData[p][a][Health] <= 0)
				{
				    // RIP Object see you later
				    DestroyAdminObject(p,a);
				    AdminObjData[p][a][Health] = 100;
				}
			}
		}
	}
	return 1;
}
*/


forward Anticheat_Update();
public Anticheat_Update()
{
	foreach(new i : Vehicle)
	{
		if(!IsSeatTaken(i,0) && GetVehicleVirtualWorld(i) == 0) DestroyVehicleEx(i);
	}

	
	AutoNewsChange(random(5));

	Server[Uptime]++;


	new weapon;
	
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i) && Players[i][Spawned] == true)
	    {
	    	if(Players[i][Logged] == true) Players[i][PlayTime] += 1;

			if(IsPlayerInAnyVehicle(i))
			{
			    if(GetPlayerVirtualWorld(i) != GetVehicleVirtualWorld(GetPlayerVehicleID(i)))
			    {
					// Vehicle Virtual World Error
					format(xstring, sizeof(xstring), "AC Alert (Bugged Player): %p (ID:%d) vehicle is not in the correct virtual world.",i,i);
	  				SendMessageToAdminsEx(COLOR_RED,1,xstring);
					DCC_SendChannelMessage(DCAdmin,xstring);
					PlaySoundForAdmins(1056);
			    }
			    
			}
			
			
			if((GetPlayerMoney(i) - Players[i][Money]) > 600000)
   			{
      			Players[i][AC_MoneyAlerts]+=1;
				format(xstring, sizeof(xstring), "- AC Warning: Player %p (id:%d) has money cheats. ($%d) (Alert %d/5)",i,i,GetPlayerMoney(i),Players[i][AC_MoneyAlerts]);
  				SendMessageToAdminsEx(COLOR_AC,1,xstring);
				DCC_SendChannelMessage(DCAdmin,xstring);
				PlaySoundForAdmins(1056);
				if(Players[i][AC_MoneyAlerts] == 5)
				{
				    AddPlayerBan(i,"Money","AutoBan");
					format(xstring,sizeof(xstring),"*-AC Ban- System has banned %p for money cheats.",i);
					SendMessageToAdminsEx(COLOR_AC,1,xstring);
   					SendClientMessage(i,COLOR_AC,"* You have been from RevolutionX by AntiCheat (System) ");
     				SendClientMessage(i,COLOR_AC,"* Reason of the ban: Money/Cash cheats");
   					SendClientMessage(i,COLOR_AC,"* If you think you have been unfairly banned. Post a ban appeal on revolutionxsamp.com");
					if(Players[i][Registered] == true)	Players[i][Banned] = true;
					AddPlayerBan(i,"Money","AutoBan");
					BanEx2(i,"Cheating - Money");
					PlaySoundForAdmins(1056);
					Players[i][AC_MoneyAlerts] = 0;
					return 1;
				}
			 	return 1;
			}

			// Weapon Anticheat Calls
			if(GetPlayerState(i) != PLAYER_STATE_SPECTATING)
			{
		    	switch(weapon)
				{
				    case 38:
					{
					    if(IsAdmin(i)) return 1;
					    if(Players[i][allowmg] == true) return 1;
						AddPlayerBan(i,"Minigun","AutoBan");
						SendClientMessage(i,COLOR_AC,"** You Have Been Banned By The Anticheat **");
						SendClientMessage(i,COLOR_AC,"** Reason Banned: Weapon Cheats");
						SendClientMessage(i,COLOR_AC,"** To appeal this ban, go to revolutionxsamp.com/forums **");
						format(xstring,sizeof(xstring),"* ANTICHEAT: %p (ID:%d) has been banned for using Weapon Cheats.",i,i);
						SendClientMessageToAll(COLOR_AC,xstring);
						DCC_SendChannelMessage(DCAdmin,xstring);
						if(Players[i][Logged] == true)
				 		{
			 				Players[i][Banned] = true;
						 	Save(i);
						}
						BanEx2(i,"Cheating - Weapon (MG)");
						PlaySoundForAdmins(1056);
					}

					case 36:
					{
					    if(IsAdmin(i)) return 1;
						//AutoKickNew(i,"Weapon Hack HSRPG");
						AddPlayerBan(i,"HSRPG","AutoBan");
						SendClientMessage(i,COLOR_AC,"** You Have Been Banned By The Anticheat **");
						SendClientMessage(i,COLOR_AC,"** Reason Banned: Weapon Cheats");
						SendClientMessage(i,COLOR_AC,"** To appeal this ban, go to revolutionxsamp.com/forums **");
						format(xstring,sizeof(xstring),"* ANTICHEAT: %p (ID:%d) has been banned for using Weapon Cheats.",i,i);
	  					SendClientMessageToAll(COLOR_AC,xstring);
						DCC_SendChannelMessage(DCAdmin,xstring);
						if(Players[i][Logged] == true)
				 		{
					 		Players[i][Banned] = true;
						 	Save(i);
						}
						BanEx2(i,"Cheating - Weapon (HSRPG)");
						PlaySoundForAdmins(1056);
					}

					case 44,45:
					{
						if(IsAdmin(i)) return 1;
						//AutoKickNew(i,"Weapon Hack HSRPG");
						AddPlayerBan(i,"HSRPG","AutoBan");
						SendClientMessage(i,COLOR_AC,"** You Have Been Banned By The Anticheat **");
						SendClientMessage(i,COLOR_AC,"** Reason Banned: Weapon Cheats");
						SendClientMessage(i,COLOR_AC,"** To appeal this ban, go to revolutionxsamp.com/forums **");
						format(xstring,sizeof(xstring),"* ANTICHEAT: %p (ID:%d) has been banned for using Weapon Cheats.",i,i);
	  					SendClientMessageToAll(COLOR_AC,xstring);
						DCC_SendChannelMessage(DCAdmin,xstring);
						if(Players[i][Logged] == true)
				 		{
					 		Players[i][Banned] = true;
						 	Save(i);
						}
						BanEx2(i,"Cheating - Weapon (Goggles)");
						PlaySoundForAdmins(1056);
					}
				}
				

	    		if(GetPlayerAmmo(i) < 0 && !IsPlayerInAnyVehicle(i) && Players[i][Minigame] == 0)
	    		{
					format(xstring, sizeof(xstring), "- AC Warning: Player %p (id:%d) has negative ammo (%d)",i,i,GetPlayerAmmo(i));
					SendMessageToAdminsEx(COLOR_AC,1,xstring);
					DCC_SendChannelMessage(DCAdmin,xstring);
					PlaySoundForAdmins(1056);
	    		}
	    	}
    		
		}
	}
	return 1;
}


static stock IpToInt(const s_szIP[]) {
	new
		aiBytes[1],
		iPos = 0
	;
	aiBytes{0} = strval(s_szIP[iPos]);
	while(iPos < 15 && s_szIP[iPos++] != '.') {}
	aiBytes{1} = strval(s_szIP[iPos]);
	while(iPos < 15 && s_szIP[iPos++] != '.') {}
	aiBytes{2} = strval(s_szIP[iPos]);
	while(iPos < 15 && s_szIP[iPos++] != '.') {}
	aiBytes{3} = strval(s_szIP[iPos]);

	return aiBytes[0];
}

stock AddPlayerBan(playerid,const reason[],const adminname[])
{
	new ip[16];
	GetPlayerIp(playerid,ip,sizeof ip);
	//mysql_real_escape_string(name,name);
	//mysql_real_escape_string(reason,reason);
	format(xstring, sizeof(xstring), "INSERT INTO `bans` (`Username`, `Reason`, `AdminName`, `DateBanned`, `IPAddress`) VALUES ('%p', '%s', '%s', CURRENT_DATE(), '%s')", playerid, reason, adminname, ip); //Insert string
	mysql_query(SQL,xstring);
	return 1;
}

stock AddProxy(ip[],name[])
{
	format(xstring, sizeof(xstring), "INSERT INTO `bans` (`Username`, `Reason`, `AdminName`, `DateBanned`, `IPAddress`) VALUES ('%s', '%s', '%s', CURRENT_DATE(), '%s')", "VPN","VPN",name,ip); //Insert string
	mysql_query(SQL,xstring);
	return 1;
}

stock GetPlayerMostRacesWon()
{
	new most = GetMaxPlayers();
	new currmax,currid=-1;
	for(new i = 0; i < most; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(i == 0)
			{
				currmax = Players[i][RacesWon];
				currid = i;
			}
			else
			{
			    if(Players[i][RacesWon] > currmax)
				{
				    currmax = Players[i][RacesWon];
				    currid = i;
				}
			}
		}
	}
	return currid;
}

stock GetPlayerMostCash()
{
	new most = GetMaxPlayers();
	new currmax,currid=-1;
	for(new i = 0; i < most; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(i == 0)
			{
				currmax = Players[i][Money];
				currid = i;
			}
			else
			{
			    if(Players[i][Money] > currmax)
				{
				    currmax = Players[i][Money];
				    currid = i;
				}
			}
		}
	}
	return currid;
}

stock GetPlayerMostCTF()
{
	new most = GetMaxPlayers();
	new currmax,currid=-1;
	for(new i = 0; i < most; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(i == 0)
			{
				currmax = Players[i][ctf_wins];
				currid = i;
			}
			else
			{
			    if(Players[i][ctf_wins] > currmax)
				{
				    currmax = Players[i][ctf_wins];
				    currid = i;
				}
			}
		}
	}
	return currid;
}


stock GetPlayerMostScore()
{
	new most = GetMaxPlayers();
	new currmax,currid=-1;
	for(new i = 0; i < most; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(i == 0)
			{
				currmax = Players[i][score];
				currid = i;
			}
			else
			{
			    if(Players[i][score] > currmax)
				{
				    currmax = Players[i][score];
				    currid = i;
				}
			}
		}
	}
	return currid;
}


stock GetVehicleCount()
{
	new count;
	for(new v = 1; v < MAX_VEHICLES; v++)
	{
		if(IsVehicleSpawned(v)) count++;
	}
	return count;
}

stock GetPlayerCountExNPC()
{
	new count;
	for(new v = 0; v < MAX_PLAYERS; v++)
	{
		if(IsPlayerConnected(v) && !IsPlayerNPC(v)) count++;
	}
	return count;
}


stock GetPlayerCount()
{
	new count;
	foreach(new i : Player)
	{
		count++;
	}
	return count;
}



stock GetWeaponIDFromName(const WeaponName[])
{
	if(strfind("molotov",WeaponName,true)!=-1) return 18;
	for(new i = 0; i <= 46; i++)
	{
		switch(i)
		{
			case 0,19,20,21,44,45: continue;
			default:
			{
				new name[32]; GetWeaponName(WEAPON:i,name,32);
				if(strfind(name,WeaponName,true) != -1) return i;
			}
		}
	}
	return -1;
}

stock IsValidWeapon(weaponid)
{
    if (weaponid > 0 && weaponid < 19 || weaponid > 21 && weaponid < 47) return 1;
    return 0;
}

IsBoat(vehicleid)
{
	new IsPlanes[10] =
    {
	    430,446,452,453,454,472,473,484,493,595
	};

	for(new i = 0; i <= 9; i++)
        {
            if(GetVehicleModel(vehicleid) == IsPlanes[i])
            {
                return true;
            }
        }
    return false;
}

IsPlane(vehicleid)
{
	new IsPlanes[14] =
    {
        592,577,511,512,593,520,553,464,476,519,
        460,513,539
	};

	for(new i = 0; i < 14; i++)
        {
            if(GetVehicleModel(vehicleid) == IsPlanes[i])
            {
                return true;
            }
        }
    return false;
}

stock IsInCar(playerid)
{
	new vehm;
	vehm = GetVehicleModel(GetPlayerVehicleID(playerid));
	switch(vehm)
	{
		case 548,469,447,563,497,488,487,417,425: return true;
	}
	return false;
}

stock IsVIP(playerid)
{
	if(Players[playerid][VIP] == 1) return true;
	//if(Players[playerid][VIP] > 1) return true;
	return false;
}

stock IsVIPLevel2(playerid)
{
	if(Players[playerid][VIP] == 2 ) return true;
	return false;
}

stock Login(playerid)
{
	new ip[16];
	new banned;
	new v,am;
	new tmpip[21];
	format(xstring, sizeof(xstring), "SELECT * FROM `users` WHERE `Name` = '%p' LIMIT 1", playerid);
	mysql_query(SQL,xstring);

	cache_get_value_name_int(0, "Rank", Players[playerid][Rank]);
	cache_get_value_name_int(0, "Exp", Players[playerid][Expierience]);
	cache_get_value_name_int(0, "MGKills", Players[playerid][Kills]);	
	cache_get_value_name_int(0, "Kills", Players[playerid][Kills]);	
	cache_get_value_name_int(0, "score", Players[playerid][score]);	
	cache_get_value_name_int(0, "Deaths", Players[playerid][Deaths]);	
	cache_get_value_name_int(0, "AdminLvl", Players[playerid][AdminLvl]);	
	cache_get_value_name_int(0, "Color", Players[playerid][Color]);	

	if(IsValidDynamic3DTextLabel(Players[playerid][MyLabel])) DestroyDynamic3DTextLabel(Players[playerid][MyLabel]);
	new tmptext[24];
	format(tmptext,sizeof tmptext,"Rank %d",Players[playerid][Rank]);
	Players[playerid][MyLabel] = CreateDynamic3DTextLabel(tmptext, COLOR_PINK ,0,0,0.5,100,playerid);	
	
	SetMyColor(playerid);
	
	cache_get_value_name_int(0, "Skin", Players[playerid][Skin]);
	cache_get_value_name_int(0, "RacesWon", Players[playerid][RacesWon]);
	cache_get_value_name_int(0, "RacesJoined", Players[playerid][RacesJoined]);	
	cache_get_value_name_int(0, "Money", Players[playerid][Money]);	
	
	cache_get_value_name_int(0, "TimeIngame", Players[playerid][PlayTime]);	
	cache_get_value_name_int(0, "Banned", banned);	
	cache_get_value_name_int(0, "VIP", v);	

	cache_get_value_name_int(0, "Token", Players[playerid][Token]);	
	cache_get_value_name_int(0, "AdminMsgs", am);	
	cache_get_value_name_int(0, "banked", Players[playerid][banked]);	
	cache_get_value_name_int(0, "favwpn", Players[playerid][favwpn]);	
	cache_get_value_name_int(0, "MyCar", Players[playerid][MyCar]);	


	cache_get_value_name(0,"IPAddress",tmpip);
	cache_get_value_name_int(0, "userID", Players[playerid][userID]);	
	cache_get_value_name_int(0, "oranges", Players[playerid][oranges]);	
	cache_get_value_name_int(0, "apples", Players[playerid][apples]);	
	cache_get_value_name_int(0, "MyCar", Players[playerid][MyCar]);	

	SetPlayerCash(playerid,Players[playerid][Money]);

	if(v == 1) Players[playerid][VIP] = true; else Players[playerid][VIP] = false;
	if(am == 1) Players[playerid][AdminMsgs] = true; else Players[playerid][AdminMsgs] = false;

	cache_get_value_name(0,"groupName",Players[playerid][groupName]);

	new inta;
	cache_get_value_name_int(0, "xmas", inta);	
	if(inta == 1) { Players[playerid][xmas] = true; } else { Players[playerid][xmas] = false; }


	cache_get_value_name_int(0, "fs", Players[playerid][fs]);	
	cache_get_value_name_int(0, "ctfWins", Players[playerid][ctf_wins]);	
	cache_get_value_name_int(0, "deliveryTotal", Players[playerid][DeliveryTotal]);	

	SetPlayerFightingStyle(playerid, FIGHT_STYLE:Players[playerid][fs]);
	



	SetPlayerScore(playerid,Players[playerid][score]);

	GetPVarString(playerid,"IP",ip,16);

	if(banned == 1)
	{
		SendClientMessage(playerid,COLOR_RED,"** You have been kicked for ban evasion. (Account Banned)");
		if(strcmp(tmpip,ip))
		{
		    // auto reban
		    AddPlayerBan(playerid,"Account Evasion","AutoBan");
	    	format(xstring,sizeof xstring,"%p (ID:%d) was kicked and re-banned for ban evasion.",playerid,playerid);
	    	SendMessageToAdminsEx(COLOR_AC,1,xstring);
		}
		Kick2(playerid);
		return 1;
	}

	format(xstring, sizeof(xstring), "UPDATE `users` SET `IPAddress` = '%s' WHERE `Name` = '%p'",ip,playerid);
	mysql_query(SQL,xstring); //queries
	Players[playerid][Logged] = true;


	if(Players[playerid][AdminLvl] > 10) Players[playerid][AdminLvl] = 0;


	if(Players[playerid][VIP] ==  1)
	{
		if(IsValidDynamic3DTextLabel(Players[playerid][MyLabel])) DestroyDynamic3DTextLabel(Players[playerid][MyLabel]);
		Players[playerid][MyLabel] = CreateDynamic3DTextLabel("V.I.P", GetPlayerColor(playerid) ,0,0,0.3,100,playerid);
	}

	if(IsAdmin(playerid))
	{
		TextDrawShowForPlayer(playerid,Reports[0]);		
		TextDrawShowForPlayer(playerid,Reports[1]);		
		
		format(xstring, sizeof(xstring), "SELECT `IPLookups`, `AutoGM`, `AdminChat`,`explosions`,`readpms`,`readteles` FROM `adminsettings` WHERE `Name` = '%p'", playerid);
		mysql_query(SQL,xstring);
		if(cache_num_rows() == 0)
		{
            format(xstring, sizeof(xstring), "INSERT INTO `adminsettings` (`Name`) VALUES ('%p')",playerid);
			mysql_query(SQL,xstring);
		}
		else
		{
			new value;
			cache_get_value_name_int(0, "IPLookups", value);	
			if(value == 0) Players[playerid][IPLookups] = false; else Players[playerid][IPLookups] = true;
			cache_get_value_name_int(0, "AutoGM", value);	
			if(value == 0) Players[playerid][AutoGM] = false; else Players[playerid][AutoGM] = true;
			cache_get_value_name_int(0, "AdminChat", value);	
			if(value == 0) Players[playerid][AdminChat] = false; else Players[playerid][AdminChat] = true;

			cache_get_value_name_int(0, "explosions", Players[playerid][explosions]);


			cache_get_value_name_int(0, "readpms", value);	
			if(value == 0) Players[playerid][readpms] = false; else Players[playerid][readpms] = true;

			cache_get_value_name_int(0, "readteles", value);	
			if(value == 0) Players[playerid][readteles] = false; else Players[playerid][readteles] = true;
		}

		
		SendClientMessage(playerid,COLOR_AMSG,"* Don't forget, you can change your Admin Settings with /as");
	}

	if(IsAdmin(playerid) && Players[playerid][AutoGM] == true)
	{

		SendClientMessage(playerid,COLOR_AMSG,"* Auto-Admin GodMode Turned On. (You set it to automatically enable)");
		Players[playerid][God] = true;
	}
	LoadKeys(playerid);
 	LoadEasterEggs(playerid);
	return 1;
}

stock LoadKeys(playerid)
{
	new id = GetUserID(playerid);
	if(id == -1) return 1;
	format(xstring, sizeof(xstring), "SELECT `keys` FROM `users` WHERE `userID` = %d", id);
	mysql_query(SQL,xstring);
	if(cache_num_rows() != 0)
	{
		new keys[50];
		cache_get_value_name(0,"keys",keys);
		sscanf(keys,"p<,>dddddddd",B@Status[playerid][_@FIREKEY],B@Status[playerid][_@SFIREKEY],B@Status[playerid][_@SUBKEY],B@Status[playerid][_@HORNKEY],B@Status[playerid][_@YESKEY],B@Status[playerid][_@NOKEY],B@Status[playerid][_@LOOKRIGHTKEY],B@Status[playerid][_@LOOKLEFTKEY]);
	}
	return 1;
}
stock SaveKeys(playerid)
{
	new id = GetUserID(playerid);
	if(id == -1) return 1;
	format(xstring, sizeof(xstring), "UPDATE `users` SET `keys` = '%d,%d,%d,%d,%d,%d,%d,%d' WHERE `userID` = %d",B@Status[playerid][_@FIREKEY],B@Status[playerid][_@SFIREKEY],B@Status[playerid][_@SUBKEY],B@Status[playerid][_@HORNKEY],B@Status[playerid][_@YESKEY],B@Status[playerid][_@NOKEY],B@Status[playerid][_@LOOKRIGHTKEY],B@Status[playerid][_@LOOKLEFTKEY],id);
	mysql_query(SQL,xstring);
	return 1;
}


stock SaveSettings()
{
	format(xstring, sizeof(xstring), "UPDATE `adminsettings` SET `record` = '%d' WHERE `Name` = 'System'",Server[precord]);
	mysql_query(SQL,xstring);
	return 1;
}

stock Save(playerid)
{
	if(Players[playerid][Logged] == true)
	{
		new ip[16];
		GetPVarString(playerid,"IP",ip,16);
	   	format(xstring, sizeof(xstring), "UPDATE `users` SET `score` = '%d',`Deaths` = '%d', `Money` = '%d',`AdminLvl` = '%d',`Color` = '%d', `oranges` = '%d', `apples` = '%d' WHERE `Name` = '%p'", Players[playerid][score],Players[playerid][Deaths],Players[playerid][Money],Players[playerid][AdminLvl],Players[playerid][Color],Players[playerid][oranges],Players[playerid][apples],playerid);
	 	mysql_query(SQL,xstring);
		format(xstring, sizeof(xstring), "UPDATE `users` SET `Skin` = '%d',`RacesWon` = '%d',`RacesJoined` = '%d', `AdminMsgs` = '%d', `MyCar` = '%d', `groupName` = '%s',`Rank` = '%d',`Exp`='%d' WHERE `Name` = '%p'", Players[playerid][Skin],Players[playerid][RacesWon],Players[playerid][RacesJoined],Players[playerid][AdminMsgs],Players[playerid][MyCar],Players[playerid][groupName],Players[playerid][Rank],Players[playerid][Expierience],playerid);
 		mysql_query(SQL,xstring);

	   	format(xstring, sizeof(xstring), "UPDATE `users` SET `IPAddress` = '%s', `TimeIngame` = '%d', `VIP` = '%d', `Token` = '%d', `LastOnline` = CURDATE(), `banked` = '%d', `favwpn` = '%d' WHERE `Name` = '%p'",ip,Players[playerid][PlayTime],Players[playerid][VIP],Players[playerid][Token],Players[playerid][banked],Players[playerid][favwpn],playerid);
	   	mysql_query(SQL,xstring);

		format(xstring, sizeof(xstring), "UPDATE `adminsettings` SET `IPLookups` = '%d', `AutoGM` = '%d', `AdminChat` = '%d', `Explosions` = '%d', `readpms` = '%d', `readteles` = '%d' WHERE `Name` = '%p'",Players[playerid][IPLookups],Players[playerid][AutoGM],Players[playerid][AdminChat],Players[playerid][explosions],Players[playerid][readpms],Players[playerid][readteles],playerid);
	   	mysql_query(SQL,xstring);

		new hash[71];
		GPCI(playerid,hash,sizeof hash);
 		format(xstring, sizeof(xstring), "UPDATE `users` SET `hash` = '%s',`xmas` = '%d',`fs` = '%d',`deliveryTotal`='%d' WHERE `Name` = '%p'",hash,Players[playerid][xmas],Players[playerid][fs],Players[playerid][DeliveryTotal],playerid);
	   	mysql_query(SQL,xstring);



		SaveKeys(playerid);
	}

}

stock IntToBool(inta)
{
	new boola[6];
	if(inta == 0) format(boola,sizeof boola,"FALSE");
	if(inta == 1) format(boola,sizeof boola,"TRUE");
	return boola;
}

stock IntBool(bool:thebool)
{
	if(thebool == true) return 1;
	return 0;
}


forward GotoPosition(playerid,Float:X,Float:Y,Float:Z,bool:bringcar);
public GotoPosition(playerid,Float:X,Float:Y,Float:Z,bool:bringcar)
{

	if( DriftID[playerid] != -1 && TDrif[playerid] == true)
	{
			return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
	}

	if(Players[playerid][TDMJoined]==true) return SendClientMessage(playerid, COLOR_RED,"* You can't use this COMMAND in TDM");
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && bringcar == true)
	{
		if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(playerid));
		new myveh = GetPlayerVehicleID(playerid);
		new Float: ang;
		SetVehicleZAngle(myveh,ang);
		SetVehiclePos(GetPlayerVehicleID(playerid),X,Y,Z);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid,0);
	}
	else
	{
		SetPlayerPos(playerid,X,Y,Z);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid,0);
	}	
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
    new pip[16];
    if(!success)
    {
    	foreach(new i : Player)
        {
            if(IsPlayerConnected(i))
            {
	            GetPlayerIp(i, pip, sizeof(pip));
	            if(!strcmp(ip, pip, true))
	            {
					if(!IsPlayerAdminLevel(i,9))
					{
						format(xstring,sizeof xstring,"* AC-AUTOBAN: %p (ID:%d) was banned for a rcon attempt. (Triped Password %s)",i,i,password);
						SendMessageToAdminsEx(COLOR_AC,9,xstring);
						if(Players[i][Registered] == true) Players[i][Banned] = true;
						AddPlayerBan(i,"Rcon","AutoBan");
						BanEx2(i,"RconAttempts");

					}
					return 1;
				}
			}
    	}
    }
    else
    {
   		foreach(new i : Player)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true))
            {
				format(xstring,sizeof xstring,"Admin %p (ID:%d) Logged in through RCON",i,i);
				print(xstring);
				SendMessageToAdmins(i,9,COLOR_RED,xstring);
				return 1;
            }
        }
    }
    return 1;
}

/* ---------------------------- IPINFO Server Api -------------------------- */



// Sadly, we still need these. HTTP functions do not allow us to pass extra values.
forward IPInfoDB(index, response_code, data[]);
public IPInfoDB(index, response_code, data[])
{
    if(response_code == 200)
    {	
		// Retired
    }
}

forward IPInfoDB_Admin(index, response_code, data[]);
public IPInfoDB_Admin(index, response_code, data[])
{
    if(response_code == 200)
    {
		strdel(data,0,4);
		new data2[9][60];
		split(data,data2, ';');
		new str[150];
		format(str,sizeof str,"Country: %s (%s) - City: %s (GMT %s)\n",data2[2],data2[1],data2[4],data2[8]);
		//SendClientMessage(index,COLOR_GREY,str);
		format(str,sizeof str,"%sState: %s - Zip: %s\n",str,data2[3],data2[5]);
		//SendClientMessage(index,COLOR_GREY,str);
		format(str,sizeof str,"%sLatitude: %s - Longitude: %s",str,data2[6],data2[7]);
		//SendClientMessage(index,COLOR_GREY,str);
		PlayerPlaySound(index,1057,0.0,0.0,0.0);

  		ShowPlayerDialog(index,33,DIALOG_STYLE_MSGBOX,"Tracking Results:",str,"Ok","");
    }   else ShowPlayerDialog(index,33,DIALOG_STYLE_MSGBOX,"Tracking Results:","Error Connecting to Tracking Service.\nTry again.","Ok","");
}


forward IPInfoDB_Connect(index, response_code, data[]);
public IPInfoDB_Connect(index, response_code, data[])
{
	strdel(data,0,4);
	new data2[4][55];
	split(data,data2, ';');
	new ip[16];
	GetPlayerIp(index, ip, sizeof ip);
    if(response_code == 200)
    {
		if(strlen(data[2]) > 0)
		{

		    if(strlen(data2[3]) > 1)
		    {
		        format(xstring,sizeof xstring,"ip-lookup: %p ( ID:%d | IP: %s) is from %s (%s)",index,index,ip,data2[2],data2[3]);
		       	SendMessageToAdminsEx_Lookup(COLOR_AMSG,1,xstring);
			
			
				format(xstring,sizeof xstring,":white_small_square:  %p (ID:%d) [ IP Address %s :white_small_square:  State: %s :white_small_square:  Country: %s]",index,index,ip,data2[3],data2[2]);	
				DCC_SendChannelMessage(DCLookups,xstring);			
		       	
  				new hash[71];
				GPCI(index,hash,sizeof hash);
				format(xstring,sizeof xstring,"hash-lookup: %p (ID:%d) - %s ",index,index,hash);
				DCC_SendChannelMessage(DCLookups,xstring);		
		    }
		    else
		    {
		        format(xstring,sizeof xstring,"ip-lookup: %p ( ID:%d | IP: %s) is from %s",index,index,ip,data2[2]);
                SendMessageToAdminsEx_Lookup(COLOR_AMSG,1,xstring);
                
				format(xstring,sizeof xstring,":white_small_square:  %p (ID:%d) [ IP Address %s :white_small_square:  Country: %s]",index,index,ip,data2[2]);	
				DCC_SendChannelMessage(DCLookups,xstring);	

  

  				new hash[71];
				GPCI(index,hash,sizeof hash);
				format(xstring,sizeof xstring,"hash-lookup: %p (ID:%d) - %s ",index,index,hash);
				DCC_SendChannelMessage(DCLookups,xstring);		
		    }
		}
	}
}




forward OnDnsLookup(index, response_code, data[]);
public OnDnsLookup(index, response_code, data[])
{
    if(response_code == 200)
    {
		SendClientMessage(index,COLOR_AMSG,data);
    }   else ShowPlayerDialog(index,33,DIALOG_STYLE_MSGBOX,"Tracking Results:","Error Connecting to Tracking Service.\nTry again.","Ok","");
}

forward OnDnsLookup_Connect(index, response_code, data[]);
public OnDnsLookup_Connect(index, response_code, data[])
{
    if(response_code == 200)
    {
	
    }
    return 1;
}


forward OnIRCDnsLookup(index, response_code, data[]);
public OnIRCDnsLookup(index, response_code, data[])
{
    if(response_code == 200)
    {
		
    }
	return 1;
}
forward OnHostLookup(index, response_code, data[]);
public OnHostLookup(index, response_code, data[])
{
    if(response_code == 200)
    {
	
    }	
	return 1;
	
}
forward OnHostnameLookup(index, response_code, data[]);
public OnHostnameLookup(index, response_code, data[])
{
    if(response_code == 200)
    {

    }
	return 1;
}

/* ----------------------------- IRC Code ----------------------------------- */

IsValidDBWeapon(dbw)
{
	switch(dbw)
	{
	    case 28,25,32: return true;
	}
	return false;
}


DCMD:players(user,channel,params[])
{
	new pstring[128];
	new t = 0;
	foreach(new i: Player)
	{
		if(t == 0) format(pstring,sizeof pstring,"%p",i);
		else format(pstring,sizeof pstring,"%s,%p",pstring,i);
		t++;
	}	
	
	if(t == 0) return DCC_SendChannelMessage(channel,"There are **no** players online right now.");
	
	DCC_SendChannelMessage(channel,pstring);
	return 1;
}

DCMD:stats(user,channel,params[])
{
	new tmp[24];
   	if(sscanf(params, "s[24]",tmp)) return DCC_SendChannelMessage(DCGen,"!stats <username>");
 	format(xstring, sizeof(xstring), "SELECT `score`,`Deaths`, `Kills`, `AdminLvl`, `Color`, `Skin`, `RacesWon`, `RacesJoined`, `Money`, `TimeIngame`, `Banned`, `VIP`, `Token`, `AdminMsgs`, `MGKills`, `banked`, `favwpn`,`MyCar`,`IPAddress`,`userID`,`LastOnline`,`apples`,`oranges`,`DateRegistered`,`deliveryTotal` FROM `users` WHERE `Name` = '%s' LIMIT 1", tmp); //Checks if the players IP is the same, if so it will auto login :)
	mysql_query(SQL,xstring);
	if(cache_num_rows() > 0)
	{
		new d[25],ip[24],laston[50];
		cache_get_value_name_int(0, "score", d[0]);	
		cache_get_value_name_int(0, "Rank",d[23]);
		cache_get_value_name_int(0, "Deaths", d[1]);
		cache_get_value_name_int(0, "Kills", d[2]);		
		cache_get_value_name_int(0, "AdminLvl", d[3]);	
		cache_get_value_name_int(0, "Color",d[4]);	
			
		cache_get_value_name_int(0, "Skin", d[5]);
		cache_get_value_name_int(0, "RacesWon", d[6]);
		cache_get_value_name_int(0, "RacesJoined", d[7]);	
		cache_get_value_name_int(0, "Money", d[8]);	
			
		cache_get_value_name_int(0, "TimeIngame", d[9]);	
		cache_get_value_name_int(0, "Banned", d[10]);	
		cache_get_value_name_int(0, "VIP", d[11]);	
		
		cache_get_value_name_int(0, "Token", d[12]);	
		cache_get_value_name_int(0, "AdminMsgs", d[13]);	
		cache_get_value_name_int(0, "MGKills", d[14]);	
		cache_get_value_name_int(0, "banked", d[15]);	
		cache_get_value_name_int(0, "favwpn", d[16]);	
		cache_get_value_name_int(0, "MyCar", d[17]);	
		cache_get_value_name(0,"IPAddress",ip);
		cache_get_value_name(0,"LastOnline",laston);
		cache_get_value_name_int(0, "userID", d[18]);	
		cache_get_value_name_int(0, "oranges", d[19]);	
		cache_get_value_name_int(0, "apples", d[20]);
		new dreg[22];	
		cache_get_value_name(0,"DateRegistered",dreg);
		cache_get_value_name_int(0, "DeliveryTotal", d[21]);				
			
		format(xstring,sizeof xstring,"**%s (userID %d)** [Last Online: %s] [Date Registered: %s]",tmp,d[18],laston,dreg);
   		DCC_SendChannelMessage(channel,xstring);
		format(xstring,sizeof xstring,"Score: %d * Deaths: %d * Kills: %d * Level: %d * VIP: %d * Hours Played: %d",d[0],d[1],d[2],d[3],d[11],d[9]/ 60);
   		DCC_SendChannelMessage(channel,xstring);
		format(xstring,sizeof xstring,"Color: %d * Skin: %d * Races Won: %d * Races Joined: %d * Rank: %d/10",d[4],d[5],d[6],d[7],d[23]);
   		DCC_SendChannelMessage(channel,xstring);
		format(xstring,sizeof xstring,"Oranges: %d * Apples: %d * Tokens: %d * Money: %d * Total Deliveries: %d",d[19],d[20],d[12],d[8],d[21]);
   		DCC_SendChannelMessage(channel,xstring);
	}	
	return 1;
}

DCMD:uptime(user, channel, params[])
{
	if(Server[Uptime] > 1440)
	{
		format(xstring,sizeof(xstring),"**Uptime:** %d Hours ~ %d Days",Server[Uptime]/60,Server[Uptime]/1440);
		DCC_SendChannelMessage(channel,xstring);
	}
	else
	{
		format(xstring,sizeof(xstring),"**Uptime:** %d Hours ( %d Minutes )",Server[Uptime]/60,Server[Uptime]);
		DCC_SendChannelMessage(channel,xstring);
	}
	return 1;	
}	
	
DCMD:tp(user, channel, params[])
{
	new str[112];
	new total = GetPlayerCountExNPC();
	format(str,sizeof(str),"We currently have **%d** players in-game!",total);
	DCC_SendChannelMessage(channel,str);
    return 1;
}


CMD:uptime(playerid, params[])
{
	if(Server[Uptime] > 1440)
	{
		format(xstring,sizeof(xstring),"Uptime: %d Hours ~ %d Days",Server[Uptime]/60,Server[Uptime]/1440);
		SendClientMessage(playerid,-1,xstring);
	}
	else
	{
		format(xstring,sizeof(xstring),"Uptime: %d Hours ( %d Minutes )",Server[Uptime]/60,Server[Uptime]);
		SendClientMessage(playerid,-1,xstring);
	}
	return 1;
}


/* -------------------------- Player House Commands ------------------------- */

/* -------------------------- Player Minigame Commands ----------------------- */

CMD:joinptp(playerid, params[])
{
	if(Server[ptp_president] == INVALID_PLAYER_ID)
	{
	    if(Players[playerid][God] == true) Players[playerid][God] = false;
	    Server[ptp_president] = playerid;
		format(xstring,sizeof xstring,"[=!=] Player %p (ID:%d) has joined Protect the President! (/joinptp)",playerid,playerid);
		SendClientMessageToAll(COLOR_AMSG,xstring);
		SetPlayerVirtualWorld(playerid,300);
		SetPlayerTeam(playerid, 2);
		SetPlayerSkin(playerid,164);
		SetPlayerColor(playerid,COLOR_YELLOW);
		SetPlayerPos(playerid,1130.1890,-2037.1536,69.0078);
		Players[playerid][Minigame] = 21;
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,WEAPON:25,9999); // shotgun
		GivePlayerWeapon(playerid,WEAPON:24,9999); // shotgun
	}
	else
	{
	    ShowPlayerDialog(playerid,300,DIALOG_STYLE_LIST,"Spawn as...","Attackers\nSecret Service","Spawn","Cancel");
	}
    return 1;
}

CMD:leaveptp(playerid, params[])
{
	if(Players[playerid][Minigame] != 21) return SendClientMessage(playerid,-1,"* You've never joined Protect the President. ");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	Players[playerid][Minigame] = 0;
	SpawnPlayer(playerid);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerInterior(playerid,0);
	Players[playerid][Minigame] = 0;
	if(playerid == Server[ptp_president])
	{
 		Server[ptp_president] = INVALID_PLAYER_ID;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
  			if(IsPlayerConnected(i) && Players[i][Minigame] == 21)
	    	{
      			SetPlayerVirtualWorld(i,0);
	        	SpawnPlayer(i);
				Players[i][Minigame] = 0;
		    }
		}
		SendClientMessageToAll(COLOR_AMSG,"** Protect The President Ended (President Left)");
	}
	return 1;
}
CMD:minigames(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	ShowPlayerDialog(playerid,18001,DIALOG_STYLE_LIST,"Minigames","Classic Minigames ...\n Team Deathmatch\nProtect the President","OK","");
	return 1;
}


CMD:hydradm(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	SetPlayerVirtualWorld(playerid,101);
	new spawn = random(2);
	switch(spawn)
	{
	    case 0:
	    {
	        GotoPosition(playerid,371.8680,2516.9766,350.7058,true);
	        SetPlayerInterior(playerid,0);
			new car = CreateVehicle(520,371.8680,2516.9766,350.7058,83.0620,6,6,-1);
			SetVehicleVirtualWorld(car,101);
			PutPlayerInVehicle(playerid,car,0);
			SetPlayerTime(playerid,7,0);
			Players[playerid][autofix] = false;
			SendClientMessage(playerid,COLOR_RED,"* AutoFix DISABLED. [ You entered a minigame ]");
		}

  		case 1:
	    {
	        GotoPosition(playerid,-648.5695,2079.3611,281.2600,true);
	    	SetPlayerInterior(playerid,0);
			new car = CreateVehicle(520,371.8680,2516.9766,350.7058,83.0620,6,6,-1);
			SetVehicleVirtualWorld(car,101);
			PutPlayerInVehicle(playerid,car,0);
			SetPlayerTime(playerid,7,0);
			Players[playerid][autofix] = false;
			SendClientMessage(playerid,COLOR_RED,"* AutoFix DISABLED. [ You entered a minigame ]");
		}

  		case 2:
	    {
	        GotoPosition(playerid,590.2421,1139.8558,318.5010,true);
	        SetPlayerInterior(playerid,0);
			new car = CreateVehicle(520,371.8680,2516.9766,350.7058,83.0620,6,6,-1);
			SetVehicleVirtualWorld(car,101);
			PutPlayerInVehicle(playerid,car,0);
			SetPlayerTime(playerid,7,0);
			Players[playerid][autofix] = false;
			SendClientMessage(playerid,COLOR_RED,"* AutoFix DISABLED. [ You entered a minigame ]");

		}

  		case 3:
	    {
	        GotoPosition(playerid,-176.5820,1580.3032,227.0999,true);
	        SetPlayerInterior(playerid,0);
			new car = CreateVehicle(520,371.8680,2516.9766,350.7058,83.0620,6,6,-1);
			SetVehicleVirtualWorld(car,101);
			PutPlayerInVehicle(playerid,car,0);
			SetPlayerTime(playerid,7,0);
			Players[playerid][autofix] = false;
			SendClientMessage(playerid,COLOR_RED,"* AutoFix DISABLED. [ You entered a minigame ]");
		}
	}
	Players[playerid][Minigame] = 26;
	Players[playerid][autofix] = false;
	SetPlayerWeather(playerid,34);
	SetPlayerTime(playerid,24,0);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame, Type /leavedm");
	return 1;
}

CMD:m4dm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,-684.9328,941.9778,13.6328);
	if(t == 1 || t == 2) SetPlayerPos(playerid,-691.4788,932.4764,13.6328);
	if(t == 3) SetPlayerPos(playerid,-684.6680,932.7020,13.6328);
	SetPlayerVirtualWorld(playerid,6);
	GivePlayerWeapon(playerid,WEAPON:31,9999);
	Players[playerid][Minigame] = 5;
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}

CMD:dildoparty(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(2);
	ResetPlayerWeapons(playerid);
	switch(t)
	{
	    case 0:
	    {
	        SetPlayerPos(playerid, 2567.7358,2394.2847,17.8203);
	        SetPlayerFacingAngle(playerid, 249.5836);
	    }
	    
	    case 1:
	    {
	        SetPlayerPos(playerid,2572.0579,2367.8931,17.8203);
	        SetPlayerFacingAngle(playerid, 318.2043);
	    }
	    
	    case 2:
	    {
     		SetPlayerPos(playerid,2614.6963,2404.3298,17.8203);
	        SetPlayerFacingAngle(playerid, 120.1992);
	    }
	}
	SetCameraBehindPlayer(playerid);
	SetPlayerVirtualWorld(playerid,23);
	GivePlayerWeapon(playerid,WEAPON:10,1);
	Players[playerid][Minigame] = 201;
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}


CMD:dildodm2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(1);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,-1226.5673,52.0607,14.2328);
	if(t == 1) SetPlayerPos(playerid,-1231.8896,53.5755,14.2328);
	SetPlayerVirtualWorld(playerid,23);
	GivePlayerWeapon(playerid,WEAPON:10,1);
	Players[playerid][Minigame] = 23;
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}

CMD:chainsawdm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,-1695.1942,408.6378,7.1797);
	if(t == 1 || t == 2) SetPlayerPos(playerid,-1671.8324,430.3507,7.1797);
	if(t == 3) SetPlayerPos(playerid,-1656.5126,420.3417,7.1797);
    SetPlayerVirtualWorld(playerid,7);
    GivePlayerWeapon(playerid,WEAPON:9,1);
	Players[playerid][Minigame] = 6;
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}

CMD:flamedm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(2);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,2000.3134,1562.9109,15.3672);
	if(t == 1 || t == 2) SetPlayerPos(playerid,2000.4041,1521.0747,17.0625);
    SetPlayerVirtualWorld(playerid,19);
    GivePlayerWeapon(playerid,WEAPON:37,10000);
	Players[playerid][Minigame] = 19;
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}

CMD:dildodm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(2);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,-1872.9863,814.3130,112.5469);
	if(t == 1 || t == 2) SetPlayerPos(playerid,-1852.1776,794.8792,112.5469);
    SetPlayerVirtualWorld(playerid,20);
    GivePlayerWeapon(playerid,WEAPON:10,1);
	Players[playerid][Minigame] = 20;
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}
CMD:chainsawdm2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,298.3846,-8.9059,1001.5156);
	if(t == 1 || t == 2) SetPlayerPos(playerid,285.2076,-22.5488,1001.5229);
	if(t == 3) SetPlayerPos(playerid,285.4024,-6.6964,1001.5156);
    SetPlayerInterior(playerid,1);
    SetPlayerVirtualWorld(playerid,7);
    GivePlayerWeapon(playerid,WEAPON:9,1);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 7;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}


CMD:grenadedm2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	ResetPlayerWeapons(playerid);
	switch(random(2))
	{
	    case 0:
	    {
	        SetPlayerPos(playerid,2442.9958,1799.9316,16.3222);
	        SetPlayerFacingAngle(playerid,67.7923);
	    }
	    
	    case 1:
	    {
     		SetPlayerPos(playerid,2406.4910,1812.8901,16.3222);
	        SetPlayerFacingAngle(playerid,252.6374);
	    }
	    
	    case 2:
	    {
	        SetPlayerPos(playerid,2423.1658,1830.8457,16.3222);
	        SetPlayerFacingAngle(playerid,187.4633);
	    }
	}
  	SetPlayerInterior(playerid,1);
  	SetPlayerVirtualWorld(playerid,8);
   	GivePlayerWeapon(playerid,WEAPON:16,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
   	Players[playerid][Minigame] = 8;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}


CMD:grenadedm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	ResetPlayerWeapons(playerid);
 	SetPlayerPos(playerid,298.3846,-8.9059,1001.5156);
  	SetPlayerInterior(playerid,1);
  	SetPlayerVirtualWorld(playerid,8);
   	GivePlayerWeapon(playerid,WEAPON:16,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
   	Players[playerid][Minigame] = 8;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}


CMD:sniperdm2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,1513.1832,-1858.3608,29.7019);
	if(t == 1 || t == 2) SetPlayerPos(playerid,1432.0598,-1857.2283,30.6969);
	if(t == 3) SetPlayerPos(playerid,1540.9799,-1779.4799,33.4297);
	SetPlayerVirtualWorld(playerid,12);
	GivePlayerWeapon(playerid,WEAPON:34,9999);
	Players[playerid][Minigame] = 12;
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}


CMD:prodm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) { SetPlayerPos(playerid,-146.9014,892.1842,18.7273); SetPlayerFacingAngle(playerid,293.8031); }
	if(t == 1 || t == 2) { SetPlayerPos(playerid,-104.2345,918.3964,20.4793); SetPlayerFacingAngle(playerid, 139.0149); }
	if(t == 3) { SetPlayerPos(playerid,-82.4568,893.3167,21.5662); SetPlayerFacingAngle(playerid,75.4077); }
	SetPlayerVirtualWorld(playerid,13);
	GivePlayerWeapon(playerid,WEAPON:24,9999);
	GivePlayerWeapon(playerid,WEAPON:25,9999);
	GivePlayerWeapon(playerid,WEAPON:31,9999);
	GivePlayerWeapon(playerid,WEAPON:34,9999);
	SetPlayerHealth(playerid,10);
	SetPlayerArmour(playerid,0);
	Players[playerid][Minigame] = 13;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /prodm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}


CMD:hsdm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) { SetPlayerPos(playerid,-831.7410,1435.4257,13.7558); SetPlayerFacingAngle(playerid,269.1467); }
	if(t == 1 || t == 2) { SetPlayerPos(playerid,-796.9093,1451.5051,13.9453); SetPlayerFacingAngle(playerid, 166.6858); }
	if(t == 3) { SetPlayerPos(playerid,-771.6833,1440.0367,13.7931); SetPlayerFacingAngle(playerid,95.2451); }
	SetPlayerVirtualWorld(playerid,13);
	GivePlayerWeapon(playerid,WEAPON:24,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 250;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /hsdm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}

CMD:deagledm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,29.5377,1350.3451,9.1719);
	if(t == 1 || t == 2) SetPlayerPos(playerid,-8.1479,1396.4989,9.1719);
	if(t == 3) SetPlayerPos(playerid,-27.2948,1379.2040,9.1719);
	SetPlayerVirtualWorld(playerid,13);
	GivePlayerWeapon(playerid,WEAPON:24,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 13;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /deagledm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}

CMD:shotgundm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,2512.1396,1153.7632,22.0232);
	if(t == 1 || t == 2) SetPlayerPos(playerid,2514.1460,1128.9349,14.2705);
	if(t == 3) SetPlayerPos(playerid,2516.8015,1123.9598,10.8203);
	SetPlayerVirtualWorld(playerid,14);
	GivePlayerWeapon(playerid,WEAPON:27,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 14;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /shotgundm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}
CMD:combatdm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(4);
	ResetPlayerWeapons(playerid);
	if(t == 0) { SetPlayerPos(playerid,-1866.1927,-1609.8442,21.7578); SetPlayerFacingAngle(playerid,237.2476); }
	if(t == 1) { SetPlayerPos(playerid,-1847.5714,-1621.7634,21.8833); SetPlayerFacingAngle(playerid,55.8260);  }
	if(t == 2) { SetPlayerPos(playerid,-1846.5114,-1608.1266,21.7578); SetPlayerFacingAngle(playerid,138.2334); }
	if(t == 3) { SetPlayerPos(playerid,-1857.7092,-1631.4779,21.8977); SetPlayerFacingAngle(playerid,352.8454); }
	if(t == 4) { SetPlayerPos(playerid,-1868.3928,-1620.1570,21.8492); SetPlayerFacingAngle(playerid,279.2113); }
	SetPlayerVirtualWorld(playerid,15);
	GivePlayerWeapon(playerid,WEAPON:27,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 15;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /combatdm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}

CMD:rocketdm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,214.0967,1870.5313,13.1406);
	if(t == 1 || t == 2) SetPlayerPos(playerid,170.0715,1853.7411,25.5000);
	if(t == 3) SetPlayerPos(playerid,166.0694,1929.3878,25.5000);
	SetPlayerVirtualWorld(playerid,2);
	GivePlayerWeapon(playerid,WEAPON:35,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 1;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /rocketdm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}

CMD:mgdm(playerid,params[])
{
	
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(2);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,2000.8655,1521.8943,17.0682);
	if(t == 1 || t == 2) SetPlayerPos(playerid,2000.4561,1566.0242,15.3672);
	SetPlayerVirtualWorld(playerid,50);
	GivePlayerWeapon(playerid,WEAPON:38,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 30;
	Players[playerid][allowmg] = true;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /mgdm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}

CMD:mgdm2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(2);
	ResetPlayerWeapons(playerid);
	switch(t)
	{
	    case 0:
	    {
	        SetPlayerPos(playerid,330.0832,1855.7122,7.8281);
	        SetPlayerFacingAngle(playerid,113.2123);
	    }

	    case 1:
		{
		    SetPlayerPos(playerid,274.8239,1866.5090,8.7578);
		    SetPlayerFacingAngle(playerid,285.8606);
		}

		case 2:
		{
		    SetPlayerPos(playerid,277.5428,1839.1570,7.8281);
		    SetPlayerFacingAngle(playerid,275.2071);
		}
	}
	SetPlayerVirtualWorld(playerid,50);
	GivePlayerWeapon(playerid,WEAPON:38,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 30;
	Players[playerid][allowmg] = true;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /mgdm2 minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}


CMD:mgdm3(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(2);
	ResetPlayerWeapons(playerid);
	switch(t)
	{
	    case 0:
	    {
	        SetPlayerPos(playerid,945.8981,2175.0662,1011.0303);
	        SetPlayerFacingAngle(playerid,188.7734);
	    }

	    case 1:
		{
		    SetPlayerPos(playerid,937.7454,2118.5933,1011.0234);
		    SetPlayerFacingAngle(playerid,350.4549);
		}

		case 2:
		{
		    SetPlayerPos(playerid,961.2675,2143.5669,1011.0207);
		    SetPlayerFacingAngle(playerid,169.6599);
		}
	}
	SetPlayerInterior(playerid,1);
	SetPlayerVirtualWorld(playerid,50);
	GivePlayerWeapon(playerid,WEAPON:38,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 30;
	Players[playerid][allowmg] = true;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	return 1;
}


CMD:pooldm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,-2207.5579,28.2354,35.3203);
	if(t == 1 || t == 2) SetPlayerPos(playerid,-2198.6621,40.9012,35.3203);
	if(t == 3) SetPlayerPos(playerid,-2211.4121,69.1403,35.3279);
    SetPlayerVirtualWorld(playerid,3);
    GivePlayerWeapon(playerid,WEAPON:7,1);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 2;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /pooldm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}

CMD:jpdm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,-1674.1930,41.4015,3.5547);
	if(t == 1) SetPlayerPos(playerid,-1659.1505,79.2074,-11.2260);
	if(t == 2)	SetPlayerPos(playerid,-1619.0543,149.4873,3.5547);
	if(t == 3) SetPlayerPos(playerid,-1606.2947,132.7696,-11.2134);
    SetPlayerVirtualWorld(playerid,28);
    GivePlayerWeapon(playerid,WEAPON:28,10000);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 40;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /jpdm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}

CMD:pooldm2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,-222.9461,1397.0295,28.3595);
	if(t == 1 || t == 2) SetPlayerPos(playerid,-227.0822,1410.5557,27.7734);
	if(t == 3) SetPlayerPos(playerid,-219.5580,1403.5476,27.7734);
	GivePlayerWeapon(playerid,WEAPON:7,1);
    SetPlayerInterior(playerid,18);
	SetPlayerVirtualWorld(playerid,4);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 3;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /pooldm2 minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}

CMD:sniperdm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	new t = random(3);
	ResetPlayerWeapons(playerid);
	if(t == 0) SetPlayerPos(playerid,23.2376,2250.5869,126.6669);
	if(t == 1 || t == 2) SetPlayerPos(playerid,-76.0519,2264.8367,124.5115);
	if(t == 3) SetPlayerPos(playerid,-213.6213,2320.8936,105.6661);
	SetPlayerVirtualWorld(playerid,5);
	GivePlayerWeapon(playerid,WEAPON:34,9999);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	Players[playerid][Minigame] = 4;
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /sniperdm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}
CMD:wwdm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	ResetPlayerWeapons(playerid);
	new t = random(5);
	if(t == 0)
	{
		SetPlayerPos(playerid,1975.7042,1916.7916,130.9345);
		SetPlayerFacingAngle(playerid,93.5051);
	}
	if(t == 1)
	{
		SetPlayerPos(playerid,1955.4971,1908.4722,130.9375);
		SetPlayerFacingAngle(playerid,320.0238);
	}
	if(t == 2)
	{
		SetPlayerPos(playerid,1998.6490,1857.8770,122.0156);
		SetPlayerFacingAngle(playerid,28.9578);
	}
	if(t == 3)
	{
		SetPlayerPos(playerid,1998.7826,1973.4503,122.0156);
		SetPlayerFacingAngle(playerid,150.2189);
	}
	if(t == 4)
	{
		SetPlayerPos(playerid,1893.7568,1914.6062,122.0156);
		SetPlayerFacingAngle(playerid,271.7935);
	}
	SetPlayerVirtualWorld(playerid,16);
	GivePlayerWeapon(playerid,WEAPON:17,5); // tear gas
	GivePlayerWeapon(playerid,WEAPON:24,9999); // deagle
	GivePlayerWeapon(playerid,WEAPON:25,9999); // shotgun
	GivePlayerWeapon(playerid,WEAPON:29,9999); // mp5
	GivePlayerWeapon(playerid,WEAPON:31,9999); // m4
	GivePlayerWeapon(playerid,WEAPON:34,9999); // snipe
	Players[playerid][Minigame] = 16;
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /wwdm minigame",playerid,playerid);
	UpdateMOTD_Text(xstring);
	return 1;
}
CMD:rwdm(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][God] == true) Players[playerid][God] = false;
	ResetPlayerWeapons(playerid);
	new t = random(4);
	if(t == 0)
	{
		SetPlayerPos(playerid,1933.4401,1628.7432,72.2578);
		SetPlayerFacingAngle(playerid,216.6230);
	}
	if(t == 1)
	{
		SetPlayerPos(playerid,1956.6954,1600.3418,72.2578);
		SetPlayerFacingAngle(playerid,37.0813);
	}
	if(t == 2)
	{
		SetPlayerPos(playerid,1904.1624,1629.2538,72.2578);
		SetPlayerFacingAngle(playerid,266.4200);
	}
	if(t == 3)
	{
		SetPlayerPos(playerid,1955.9216,1655.5416,72.2556);
		SetPlayerFacingAngle(playerid,137.3254);
	}
	SetPlayerVirtualWorld(playerid,17);
	GivePlayerWeapon(playerid,WEAPON:26,9999); // Sawn-Off
	GivePlayerWeapon(playerid,WEAPON:32,9999); // Tec-9
	GivePlayerWeapon(playerid,WEAPON:22,9999); // pistol
	Players[playerid][Minigame] = 17;
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,0xADFF2FFF,"To Leave This MiniGame. Type /leavedm");
	
	format(xstring,sizeof xstring,"%p (ID:%d) joined the /rwdm minigame",playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}


stock IsNameConnected(name[])
{
	new name1[20];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        GetPlayerName(i,name1,sizeof name1);
	        if(!strcmp(name1,name)) return true;
	    }
	}
	return false;
}

public  OnPlayerEditAttachedObject(playerid, EDIT_RESPONSE:response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:rotationX, Float:rotationY, Float:rotationZ, Float:scaleX, Float:scaleY, Float:scaleZ)
{
    if(response)
    {
		HO[playerid][Epx[playerid]][modelID]=modelid;
		HO[playerid][Epx[playerid]][bone]=boneid;
		HO[playerid][Epx[playerid]][oX]=fOffsetX;
		HO[playerid][Epx[playerid]][oY]=fOffsetY;
		HO[playerid][Epx[playerid]][oZ]=fOffsetZ;
		HO[playerid][Epx[playerid]][rX]=rotationX;
		HO[playerid][Epx[playerid]][rY]=rotationZ;
		HO[playerid][Epx[playerid]][rZ]=rotationZ;
		HO[playerid][Epx[playerid]][sX]=scaleX;
		HO[playerid][Epx[playerid]][sY]=scaleY;
		HO[playerid][Epx[playerid]][sZ]=scaleZ;
		SendClientMessage(playerid, 0xFFFFFFFF, "* HO Edit - Saved!");
	}
	else
	{
		SetPlayerAttachedObject(playerid,Epx[playerid],HO[playerid][Epx[playerid]][modelID],HO[playerid][Epx[playerid]][bone],HO[playerid][Epx[playerid]][oX],HO[playerid][Epx[playerid]][oY],HO[playerid][Epx[playerid]][oZ],HO[playerid][Epx[playerid]][rX],HO[playerid][Epx[playerid]][rY],HO[playerid][Epx[playerid]][rZ],HO[playerid][Epx[playerid]][sX],HO[playerid][Epx[playerid]][sY],HO[playerid][Epx[playerid]][sZ]);
		SendClientMessage(playerid, 0xFFFFFFFF, "* HO Edit - Cancelled!");

	}
	return 1;
}

/* --------------- Player Holding Object Commands ------------------------- */


CMD:gho(playerid,params[])
{
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* /gho <playerid> - Gets other player Holding Object if they got one");
	else if (HO2[id][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	else
	{
			if(HO2[playerid][ID]!=-1)
			{
				for(new i=0; i<=HO2[playerid][ID]; i++)
				{
					HO2[playerid][eXist][i]=false;
					RemovePlayerAttachedObject(playerid, i);
				}
				HO2[playerid][ID]=-1;
			}
			HO2[playerid][ID]=HO2[id][ID];
			HO2[playerid][Allowed]=HO2[id][Allowed];
			for(new i=0; i<=HO2[id][ID]; i++)
			{
				HO2[playerid][eXist][i]=HO2[id][eXist][i];
				if(HO2[id][eXist]==true)
				{
					HO[playerid][i][modelID]=HO[id][i][modelID];
					HO[playerid][i][bone]=HO[id][i][bone];
					HO[playerid][i][slots]=HO[id][i][slots];
					HO[playerid][i][oX]=HO[id][i][oX];
					HO[playerid][i][oY]=HO[id][i][oY];
					HO[playerid][i][oZ]=HO[id][i][oZ];
					HO[playerid][i][rX]=HO[id][i][rX];
					HO[playerid][i][rY]=HO[id][i][rY];
					HO[playerid][i][rZ]=HO[id][i][rZ];
					HO[playerid][i][sX]=HO[id][i][sX];
					HO[playerid][i][sY]=HO[id][i][sY];
					HO[playerid][i][sZ]=HO[id][i][sZ];
					SetPlayerAttachedObject(playerid,i,HO[playerid][i][modelID],HO[playerid][i][bone],HO[playerid][i][oX],HO[playerid][i][oY],HO[playerid][i][oZ],HO[playerid][i][rX],HO[playerid][i][rY],HO[playerid][i][rZ],HO[playerid][i][sX],HO[playerid][i][sY],HO[playerid][i][sZ]);
				}
			}
			new str[128],Name[24];
			GetPlayerName(id,Name,sizeof Name);
			format(str,sizeof str,"* Refreshed HO(s) From %s [Total: %d]",Name,HO2[id][ID]);
			SendClientMessage(playerid,-1,str);
			GetPlayerName(playerid,Name,sizeof Name);
			format(str,sizeof str,"* %s Refreshed your HO(s) [Total: %d]",Name,HO2[id][ID]);
			SendClientMessage(id,-1,str);
			SendClientMessage(playerid,-1,"* To Remove your holding object -  /raho or /rho <ID>");
	}
	return 1;
}
CMD:rho(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id;
	if(sscanf(params,"d",id)) return SendClientMessage(playerid,COLOR_RED,"* /rho <HO ID>");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO2[playerid][ID]--;
		HO2[playerid][eXist][id]=false;
		RemovePlayerAttachedObject(playerid, id);
		new str[128];
		format(str,sizeof str,"* Removed HO ID: %d",id);
		SendClientMessage(playerid,-1,str);
	}
	return 1;
}
CMD:raho(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* [RAHO] You never created HO. /cho <bone id> <modelID> to create");
	else
	{
		for(new i=0; i<=HO2[playerid][ID]; i++)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, i))
			{
				HO2[playerid][eXist][i]=false;
				RemovePlayerAttachedObject(playerid, i);
			}
		}
		HO2[playerid][ID]=-1;
		SendClientMessage(playerid,-1,"* Cleared your HO.");
	}
	return 1;
}

CMD:myho(playerid,params[])
{
	new str[600];
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* [MYHO] You never created HO. /cho <bone id> <modelID> to create");
	format(str,sizeof str,"{009349}Your Current Holding Objects{FFFFFF}");
	format(str,sizeof str,"%s\n|{FFDD00}ID{FFFFFF} | {FFDD00}Model ID{FFFFFF} | {FFDD00}Bone{FFFFFF} |",str);
	format(str,sizeof str,"%s\n|----|----------|-------|",str);
	for(new i=0; i<=HO2[playerid][ID]; i++)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid, i))
		{
			format(str,sizeof str,"%s\n|_%d_|__%d___|__%d___|",str,i,HO[playerid][i][modelID],HO[playerid][i][bone]);
		}
	}
	ShowPlayerDialog(playerid,2800,DIALOG_STYLE_LIST,"Revolution-X Holding Object",str,"Ok","Cancel");
	return 1;
}
CMD:boneid(playerid,params[])
{
	ShowPlayerDialog(playerid,2801,DIALOG_STYLE_MSGBOX,"Revolution-X HO Bone ID List","1 - Spine\n2 - Head\n3 - Left upper arm\n4 - Right upper arm\n5 - Left hand\n6 - Right hand\n7 - Left thigh\n8 - Right thigh\n9 - Left foot\n10 - Right foot\n11 - Right calf\n12 - Left calf\n13 - Left forearm\n14 - Right forearm\n15 - Left clavicle\n16 - Right clavicle\n17 - Neck\n18 - Jaw","Ok","Close");
	return 1;
}
CMD:hohelp(playerid,params[])
{
	new str[600];
	format(str,sizeof str,"/cho <Bone ID> <Model ID/Name> - Creates Holding Object\n/hox, /hoy, /hoz <id> <Distance> - Moves your HO with xyz axis\n");
	format(str,sizeof str,"%s/hrx, /hry, /hrz <id> <Angle> - Rotates your HO with xyz angle\n/hsx, /hsy, /hsz <id> <Resize> - Resize your HO with xyz size value\n",str);
	format(str,sizeof str,"%s/rho <id> - removes your HO with respect to HO ID\n/raho - removes all HO , you current carry\n/lho - loads your HO\n/sho - saves your HO\n",str);
	format(str,sizeof str,"%s/myho - review list of your HO\n/boneid - review list of Bone ID(s)\n/gho - Gets other player HO for you.\n/cbone - To Change BONE ID",str);
	format(str,sizeof str,"%s\n/eho - To Start Editing HO with Dynamic Editor\n\nCommands to Try: /samplehos",str);
	ShowPlayerDialog(playerid,2802,DIALOG_STYLE_MSGBOX,"Revolution-X HO Help Menu",str,"Ok","Close");
	return 1;
}
CMD:sho(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new setName[24];
	if(sscanf(params,"s[24]",setName)) return SendClientMessage(playerid,COLOR_RED,"* /sho <set name>");
	else if(strlen(setName)==0||strlen(setName)>=20||strfind(setName, "|", true) != -1) return SendClientMessage(playerid,-1,"* Inapproiate Set Name.");
	else if(HO_exist(setName)) return SendClientMessage(playerid,-1,"* This HO set Already Exist, Please choose another name");
	else
	{
		HO_save(playerid,setName);
		new str[128];
		format(str,sizeof str,"* Saved \"%s\" (%d HOs)",setName,HO2[playerid][ID]+1);
		SendClientMessage(playerid,-1,str);
	}
	return 1;
}
CMD:lho(playerid,params[])
{
	new setName[24];
	if(sscanf(params,"s[24]",setName)) return SendClientMessage(playerid,COLOR_RED,"* /lho <set name>");
	else if(!HO_exist(setName)) return SendClientMessage(playerid,-1,"* This HO set doesnt Exist, Please choose another name");
	else
	{
		if (HO2[playerid][ID] !=-1) SendClientMessage(playerid,COLOR_RED,"* You have created HO. This will remove all ur previous HO");
		if(HO2[playerid][ID]!=-1)
		{
			for(new i=0; i<=HO2[playerid][ID]; i++)
			{
				HO2[playerid][eXist][i]=false;
				RemovePlayerAttachedObject(playerid, i);
			}
			HO2[playerid][ID]=-1;
		}
		HO_load(playerid,setName);

		new str[128];
		format(str,sizeof str,"* Loaded \"%s\" Saved By \"%s\" (%d HOs). /myho to view ID of everything.",setName,HO2[playerid][SavedBy],HO2[playerid][ID]+1);
		SendClientMessage(playerid,-1,str);
		SendClientMessage(playerid,-1,"* To Remove your holding object -  /raho or rho <ID>");
	}
	return 1;
}

CMD:skateboard(playerid,params[])
{
    if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	HO2[playerid][ID]+=1;
	new temp;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]=19878;
	HO[playerid][HO2[playerid][ID]][bone]=6;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone],0.374999,0,0.071999,7,0.600005,0.600005,1,1,1);
	HO2[playerid][ID]=temp;
	return 1;
}


CMD:shark(playerid,params[])
{
    if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	HO2[playerid][ID]+=1;
	new temp;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]=1608;
	HO[playerid][HO2[playerid][ID]][bone]=1;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone],0.142999,0,0,0,83.3,-3.3,1.0,1.0,1.0);
	HO2[playerid][ID]=temp;
	return 1;
}

CMD:hos(playerid,params[]) return cmd_samplehos(playerid,params);
CMD:samplehos(playerid,params[])
{
	ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"Sample Holding Objects","These holding objects have been pre-created...\nTo create your own, see /hohelp\n\n/shark /witchhat /broom\n/ballhead /pumpkin /xmashat\n/penis /helmet","ok","");
	return 1;
}

CMD:broom(playerid,params[])
{
    if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	HO2[playerid][ID]+=1;
	new temp;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]=19622;
	HO[playerid][HO2[playerid][ID]][bone]=5;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone],0.103999,0.0,-0.522,0.0,0.0,0.0,1.0,1.0,1.0);
	HO2[playerid][ID]=temp;
	return 1;
}

CMD:ballhead(playerid,params[])
{
    if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	new temp;
	HO2[playerid][ID]+=1;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]=1598;
	HO[playerid][HO2[playerid][ID]][bone]=2;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],1598,2,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
    _ResetHO_coOrdination(playerid,HO2[playerid][ID]);
	HO2[playerid][ID]=temp;
	return 1;
}

CMD:witchhat(playerid,params[])
{
    if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	new temp;
	HO2[playerid][ID]+=1;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]=19320;
	HO[playerid][HO2[playerid][ID]][bone]=2;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],19528,2,0.164,0.010999,0,0,0,0,1,1,1);
    _ResetHO_coOrdination(playerid,HO2[playerid][ID]);
	HO2[playerid][ID]=temp;
	return 1;
}


CMD:pumpkin(playerid,params[])
{
    if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	new temp;
	HO2[playerid][ID]+=1;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]=19320;
	HO[playerid][HO2[playerid][ID]][bone]=2;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],19320,2,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
    _ResetHO_coOrdination(playerid,HO2[playerid][ID]);
	HO2[playerid][ID]=temp;
	return 1;
}

CMD:xmashat(playerid,params[])
{
    if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	new temp;
	HO2[playerid][ID]+=1;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	
	HO[playerid][HO2[playerid][ID]][modelID]=19064;
	HO[playerid][HO2[playerid][ID]][bone]=2;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],19064,2,0.149,-0.001999,-0.019999,0,119.5,0,1,1,1);
    _ResetHO_coOrdination(playerid,HO2[playerid][ID]);
	HO2[playerid][ID]=temp;
	return 1;
}

CMD:penis(playerid,params[])
{
    if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	new temp;
	HO2[playerid][ID]+=1;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]=19086;
	HO[playerid][HO2[playerid][ID]][bone]=8;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],19086,1,-0.247999,-0.074999,-0.021,0.800001,88.1,94.7,1,1,1);
    _ResetHO_coOrdination(playerid,HO2[playerid][ID]);
	HO2[playerid][ID]=temp;
	return 1;
}
CMD:helmet(playerid,params[])
{
    if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	new temp;
	HO2[playerid][ID]+=1;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]=18645;
	HO[playerid][HO2[playerid][ID]][bone]=2;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],18645,2,0.043999,0,0,-5.8,87.8,106.2,1.0,1.0,1.0);
    _ResetHO_coOrdination(playerid,HO2[playerid][ID]);
	HO2[playerid][ID]=temp;
	return 1;
}

CMD:cho(playerid,params[])
{
	new s_mod,bo,temp;
	if(sscanf(params,"dd",bo,s_mod)) return SendClientMessage(playerid,COLOR_RED,"* /cho <BoneID> <Model ID>");
	else if(HO2[playerid][ID]>=9) return SendClientMessage(playerid,COLOR_RED,"* You can't create more object. Delete one of yours first by /dho <ID>");
	else if(bo==0||bo>18) return SendClientMessage(playerid,COLOR_RED,"* Invalid Bone ID. Check /boneid to view list of Bone ID");
	else
	{
		if(IsValidObjectModel(s_mod))
		{
			new str[100];
			HO2[playerid][ID]+=1;
			temp=HO2[playerid][ID];
			new i=0;
			for( i=0; i<=9; i++)
			{
				if(HO2[playerid][eXist][i]==false)
				{
					HO2[playerid][ID]=i;
					HO2[playerid][eXist][i]=true;
					break;
				}
			}
			HO[playerid][HO2[playerid][ID]][modelID]=s_mod;
			HO[playerid][HO2[playerid][ID]][bone]=bo;
			SetPlayerAttachedObject(playerid,HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone],0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
			format(str,sizeof str,"* HO ID: %d has been Created with Model %d (Bone:%d)",HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone]);
			SendClientMessage(playerid,-1,str);
			SendClientMessage(playerid,-1,"* To Remove your holding object -  /raho or rho <ID>");
			_ResetHO_coOrdination(playerid,HO2[playerid][ID]);
			HO2[playerid][ID]=temp;
			return 1;
		}
		
		if(IsValidSAMPObject(s_mod))
		{
			new str[100];
			HO2[playerid][ID]+=1;
			temp=HO2[playerid][ID];
			new i=0;
			for( i=0; i<=9; i++)
			{
				if(HO2[playerid][eXist][i]==false)
				{
					HO2[playerid][ID]=i;
					HO2[playerid][eXist][i]=true;
					break;
				}
			}
			HO[playerid][HO2[playerid][ID]][modelID]=s_mod;
			HO[playerid][HO2[playerid][ID]][bone]=bo;
			SetPlayerAttachedObject(playerid,HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone],0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0);
			format(str,sizeof str,"* HO ID: %d has been Created with Model %d (Bone:%d)",HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone]);
			SendClientMessage(playerid,-1,str);
			SendClientMessage(playerid,-1,"* To Remove your holding object -  /raho or rho <ID>");
			_ResetHO_coOrdination(playerid,HO2[playerid][ID]);
			HO2[playerid][ID]=temp;
			return 1;
		}
		
		SendClientMessage(playerid,COLOR_RED,"* Invalid Object.");
	}
	return 1;

}

CMD:hrx(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,Float:d;
	if(sscanf(params,"df",id,d)) return SendClientMessage(playerid,COLOR_RED,"* /hrx <ID> <X:Rotate Angle>>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO[playerid][id][rX] += d;
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],HO[playerid][id][bone],HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
		new str[128];
		format(str,sizeof str,"* HO ID: %d (Model ID:%d) has been Rotated X at %.2f [ Bone: %d]",id,HO[playerid][id][modelID],d,HO[playerid][id][bone]);
		SendClientMessage(playerid,-1,str);
	}
	return 1;
}
CMD:hry(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,Float:d;
	if(sscanf(params,"df",id,d)) return SendClientMessage(playerid,COLOR_RED,"* /hry <ID> <Y:Rotate Angle>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO[playerid][id][rY] += d;
		new str[128];
		format(str,sizeof str,"* HO ID: %d (Model ID:%d) has been Rotated Y at %.2f [ Bone: %d]",id,HO[playerid][id][modelID],d,HO[playerid][id][bone]);
		SendClientMessage(playerid,-1,str);
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],HO[playerid][id][bone],HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
	}
	return 1;
}
CMD:hrz(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,Float:d;
	if(sscanf(params,"df",id,d)) return SendClientMessage(playerid,COLOR_RED,"* /hrz <ID> <Z:Rotate Angle>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO[playerid][id][rZ] += d;
		new str[128];
		format(str,sizeof str,"* HO ID: %d (Model ID:%d) has been Rotated Z at %.2f [ Bone: %d]",id,HO[playerid][id][modelID],d,HO[playerid][id][bone]);
		SendClientMessage(playerid,-1,str);
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],HO[playerid][id][bone],HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
	}
	return 1;
}
CMD:hox(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,Float:d;
	if(sscanf(params,"df",id,d)) return SendClientMessage(playerid,COLOR_RED,"* /hox <ID> <X:Distance>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO[playerid][id][oX] += d;
		new str[128];
		format(str,sizeof str,"* HO ID: %d (Model ID:%d) has been Moved X at %.2f [ Bone: %d]",id,HO[playerid][id][modelID],d,HO[playerid][id][bone]);
		SendClientMessage(playerid,-1,str);
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],HO[playerid][id][bone],HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
	}
	return 1;
}
CMD:hoy(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,Float:d;
	if(sscanf(params,"df",id,d)) return SendClientMessage(playerid,COLOR_RED,"* /hoy <ID> <Y:Distance>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO[playerid][id][oY] += d;
		new str[128];
		format(str,sizeof str,"* HO ID: %d (Model ID:%d) has been Moved Y at %.2f [ Bone: %d]",id,HO[playerid][id][modelID],d,HO[playerid][id][bone]);
		SendClientMessage(playerid,-1,str);
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],HO[playerid][id][bone],HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
	}
	return 1;
}
CMD:hoz(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,Float:d;
	if(sscanf(params,"df",id,d)) return SendClientMessage(playerid,COLOR_RED,"* /hoz <ID> <Z:Distance>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO[playerid][id][oZ] += d;
		new str[128];
		format(str,sizeof str,"* HO ID: %d (Model ID:%d) has been Moved Z at %.2f [ Bone: %d]",id,HO[playerid][id][modelID],d,HO[playerid][id][bone]);
		SendClientMessage(playerid,-1,str);
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],HO[playerid][id][bone],HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
	}
	return 1;
}
CMD:hsx(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,Float:d;
	if(sscanf(params,"df",id,d)) return SendClientMessage(playerid,COLOR_RED,"* /hsx <ID> <X:Size>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO[playerid][id][sX] += d;
		new str[128];
		format(str,sizeof str,"* HO ID: %d (Model ID:%d) has been Resized X at %.2f [ Bone: %d]",id,HO[playerid][id][modelID],d,HO[playerid][id][bone]);
		SendClientMessage(playerid,-1,str);
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],HO[playerid][id][bone],HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
	}
	return 1;
}
CMD:hsy(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,Float:d;
	if(sscanf(params,"df",id,d)) return SendClientMessage(playerid,COLOR_RED,"* /hsy <ID> <Y:Size>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO[playerid][id][sY] += d;
		new str[128];
		format(str,sizeof str,"* HO ID: %d (Model ID:%d) has been Resized Y at %.2f [ Bone: %d]",id,HO[playerid][id][modelID],d,HO[playerid][id][bone]);
		SendClientMessage(playerid,-1,str);
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],HO[playerid][id][bone],HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
	}
	return 1;
}
CMD:hsz(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,Float:d;
	if(sscanf(params,"df",id,d)) return SendClientMessage(playerid,COLOR_RED,"* /hsz <ID> <Z:Size>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		HO[playerid][id][sZ] += d;
		new str[128];
		format(str,sizeof str,"* HO ID: %d (Model ID:%d) has been Resized Z at %.2f [ Bone: %d]",id,HO[playerid][id][modelID],d,HO[playerid][id][bone]);
		SendClientMessage(playerid,-1,str);
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],HO[playerid][id][bone],HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
	}
	return 1;
}
CMD:cbone(playerid,params[])
{
	if (HO2[playerid][ID] ==-1) return SendClientMessage(playerid,COLOR_RED,"* You never created HO. /cho <bone id> <modelID> to create");
	new id,bo;
	if(sscanf(params,"dd",id,bo)) return SendClientMessage(playerid,COLOR_RED,"* /cbone <ID> <new Bone ID>");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else if(bo==0||bo>15) return SendClientMessage(playerid,COLOR_RED,"* Invalid Bone ID. Check /boneid to view list of Bone ID");
	else
	{

		new str[128];
		format(str,sizeof str,"* HO ID: %d Changed Bone ID To %d From %d",id,bo,HO[playerid][id][bone]);
		HO[playerid][id][bone]=bo;
		SendClientMessage(playerid,-1,str);
		SetPlayerAttachedObject(playerid,id,HO[playerid][id][modelID],bo,HO[playerid][id][oX],HO[playerid][id][oY],HO[playerid][id][oZ],HO[playerid][id][rX],HO[playerid][id][rY],HO[playerid][id][rZ],HO[playerid][id][sX],HO[playerid][id][sY],HO[playerid][id][sZ]);
	}
	return 1;
}
CMD:eho(playerid,params[])
{
	new id;
	if(sscanf(params,"d",id)) return SendClientMessage(playerid,COLOR_RED,"* /echo <playerid> - Edits your HO with Dynamic Editor");
	else if (id>HO2[playerid][ID] || id<0) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID");
	else if(!IsPlayerAttachedObjectSlotUsed(playerid, id)) return SendClientMessage(playerid,COLOR_RED,"* Invalid HO ID"); // to avoid some future prob if occurs
	else
	{
		Epx[playerid] = id;
		EditAttachedObject(playerid, id);
		SendClientMessage(playerid, 0xFFFFFFFF, "* HO Editing Started!");
	}
	return 1;
}

CMD:dho(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,4)) return 0;
	new setName[24];
	if(sscanf(params,"s[24]",setName)) return SendClientMessage(playerid,-1,"* /dho <setname>");
	else if(!HO_exist(setName)) return SendClientMessage(playerid,-1,"* This HO set doesnt Exist, Please choose another name");
	else
	{
		HO_delete(setName);
		new str[50];
		format(str,sizeof str,"* Deleted \"%s\" HO set From `ho`",setName);
		SendClientMessage(playerid,-1,str);
	}
	return 1;
}

/* ------------------------------ PROPERTY SYSTEM 2017 -------------------------- */

CMD:addprop(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
		new pname[30],vl,ern;
		if(sscanf(params,"p<,>dds[30]",vl,ern,pname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /addprop <Value>,<Earnings>,<Prop Name>");
		}
		if(strfind(pname,"'") != -1) return SendClientMessage(playerid,COLOR_RED,"* You cannot have the following character in the name: '");
		if(strfind(pname,"'\'") != -1) return SendClientMessage(playerid,COLOR_RED,"* You cannot have the following character in the name: '\'");
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(playerid,px,py,pz);
		AddProperty(pname,vl,ern,px,py,pz);
		format(xstring,sizeof xstring,"* Added a new property! (Properties: %d)",PropertiesAmount);
		SendClientMessage(playerid,COLOR_SYSTEM,xstring);
	}
	return 1;
}


CMD:teleporttoproperty(playerid,params[])
{
	return cmd_ttp(playerid,params);
}

CMD:ttp(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,4))
	{
		new propid;
		if(sscanf(params,"d",propid))
		{
	        SendClientMessage(playerid, 0xFF0000AA, "Usage: /teleporttoproperty <Property ID>");
	        return 1;
		}
		if(strlen(PropInfo[propid][PropName]) > 0)
		{
		    //valid
		    SetPlayerPos(playerid,PropInfo[propid][PropX],PropInfo[propid][PropY],PropInfo[propid][PropZ]);
		    SendClientMessage(playerid,0x99FF66AA,"You have teleported to the property!");
		}
		else
		{
  			SendClientMessage(playerid, 0xFF0000AA, "Not a Valid Property ID!");
	        return 1;
		}
	}
	return 1;
}

CMD:myprops(playerid,params[])
{
	new propstr[800], ownerid;
 	if(PlayerProps[playerid] == 0)
 	{
  		SendClientMessage(playerid, 0xFF0000AA, "You don't own a property!");
    	return 1;
	}
	new total;
	for(new propid; propid < PropertiesAmount; propid++)
	{
		if(PropInfo[propid][PropIsBought] == 1)
		{
  			ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
			if(ownerid == playerid)
			{
				total++;
				if(total == 0)
				{
					format(propstr, sizeof propstr, "%s\tValue: $%d\tEarnings: $%d\n", PropInfo[propid][PropName], PropInfo[propid][PropValue], PropInfo[propid][PropEarning]);
				}		
				else
				{
					format(propstr, sizeof propstr, "%s%s\tValue: $%d\tEarnings: $%d\n", propstr,PropInfo[propid][PropName], PropInfo[propid][PropValue], PropInfo[propid][PropEarning]);			
				}
			}
		}
	}
	ShowPlayerDialog(playerid,20001,DIALOG_STYLE_TABLIST,"Your Properties",propstr,"OK","");
	return 1;
}

CMD:prophelp(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsAdmin(playerid))
 	{
		ShowPlayerDialog(playerid,16,DIALOG_STYLE_MSGBOX,"Property Help","You can buy a property with /buy \n You can sell a property with /sell \n Sell all your props with /sellmyprops \n For a list of all propertys you own, type /myprops \n \n Admin Commands: \n Type /spv to set a propertys value. \n Type /spe to set a propertys earnings.\nThe max propertys the server can handle is 200","Ok","Cancel");
  	}
   	else
   	{
  		ShowPlayerDialog(playerid,16,DIALOG_STYLE_MSGBOX,"Property Help","You can buy a property with /buy \n You can sell a property with /sell \n Sell all your props with /sellmyprops \n For a list of all propertys you own, type /myprops","Ok","Cancel");
   	}
   	return 1;
}

CMD:spb(playerid,params[])
{
	return cmd_setpropbuyable(playerid,params);
}

CMD:setpropbuyable(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,4))
	{
		new propid = IsPlayerNearProperty(playerid);
		if(propid != -1)
		{
			if(PropInfo[propid][PropIsBought] == 1)
			{
				format(PropInfo[propid][PropOwner], MAX_PLAYER_NAME, "Nobody");
				PropInfo[propid][PropIsBought] = 0;
				PropInfo[propid][PropUnbuyableTime] = 0;
				new query[500],tmpv;
				if(PropInfo[propid][Buyable] == false) tmpv=0; else tmpv=1;
				format(query,sizeof query,"UPDATE `property` SET `PropName`='%s',`pX`='%f',`pY`='%f',`pZ`='%f',`Value`='%d',`Earning`='%d',`Owner`='%s',`IsBought`='%d',`PropUnbuyableTime`='%d',`IsBuyable`='%d' WHERE `PropName` = '%s'",PropInfo[propid][PropName],PropInfo[propid][PropX],PropInfo[propid][PropY],PropInfo[propid][PropZ],PropInfo[propid][PropValue],PropInfo[propid][PropEarning],PropInfo[propid][PropOwner],PropInfo[propid][PropIsBought],PropInfo[propid][PropUnbuyableTime],tmpv,PropInfo[propid][PropName]);
				mysql_query(SQL,query);
			}   else SendClientMessage(playerid,COLOR_RED,"** Property already can be bought.");
		}   else SendClientMessage(playerid,COLOR_RED,"** You need to be near a property.");
	}   else SendClientMessage(playerid,COLOR_RED,"** You must be admin level 4 or higher to do this.");
	return 1;
}
CMD:setpropunbuyable(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
		new propid = IsPlayerNearProperty(playerid);
		if(propid != -1)
		{
			if(PropInfo[propid][PropIsBought] == 1)
			{
				PropInfo[propid][Buyable] = false;
			}   else SendClientMessage(playerid,COLOR_RED,"** Property must be bought to do this.");
		}   else SendClientMessage(playerid,COLOR_RED,"** You need to be near a property.");
	}   else SendClientMessage(playerid,COLOR_RED,"** You must be admin level 7 or higher to do this.");
	return 1;
}



CMD:buy(playerid,params[])
{
	new str[100];
	new propid = IsPlayerNearProperty(playerid);
	// crash #1 (switch the if's)
	if(propid == -1) return SendClientMessage(playerid, 0xFF0000AA, "You're not close enough to a property");
	if(PropInfo[propid][Buyable] == false) return SendClientMessage(playerid, 0xFF0000AA, "This property cannot be bought.");
	if(PlayerProps[playerid] == MAX_PROPERTIES_PER_PLAYER && !IsVIP(playerid) && !IsVIPLevel2(playerid) && !IsAdmin(playerid))
 	{
		SendClientMessage(playerid, COLOR_AMSG,"** You can't buy any more props. Why don't you become a VIP Player?");
		return 1;
	}
	if(PlayerProps[playerid] == 7 && IsVIP(playerid))
 	{
		format(str, sizeof str, "You already have %d properties, you can't buy more properties!", PlayerProps[playerid]);
		SendClientMessage(playerid, 0xFF0000AA, str);
		return 1;
	}
	if(PropInfo[propid][PropIsBought] == 1)
	{
		new ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
		if(ownerid == playerid)
		{
  			SendClientMessage(playerid, 0xFF0000AA, "You already own this property!");
	    	return 1;
		}
		else
		{
  			if(PropInfo[propid][PropUnbuyableTime] > 0)
	    	{
					format(str, sizeof str, "This property is already bought by %s. You'll have to wait %d minutes before you can buy it.", PropInfo[propid][PropOwner], PropInfo[propid][PropUnbuyableTime]);
				    SendClientMessage(playerid, 0xFF0000AA, str);
				    return 1;
			}
		}
	}
	if(GetPlayerCash(playerid) < PropInfo[propid][PropValue])
	{
 		format(str, sizeof str, "You don't have enough money! You need $%d", PropInfo[propid][PropValue]);
   		SendClientMessage(playerid, 0xFF0000AA, str);
	    return 1;
	}
	if(PropInfo[propid][PropIsBought] == 1 && PropInfo[propid][PropUnbuyableTime] == 0)
	{
		new ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
		if(IsPlayerConnected(ownerid))
		{
	  		format(str, sizeof str, "%p has bought your property \"%s\". You recieved 50 percent of it's value ($%d)", ownerid, PropInfo[propid][PropName], (PropInfo[propid][PropValue]/2));
			GivePlayerCash(ownerid, (PropInfo[propid][PropValue]/2));
			SendClientMessage(ownerid, 0x99FF66AA, str);
			PlayerProps[ownerid]--;
		}
	}
	new pName[24];
	GetPlayerName(playerid,pName,sizeof pName);
	PropInfo[propid][PropOwner] = pName;
	PropInfo[propid][PropIsBought] = 1;
	PropInfo[propid][PropUnbuyableTime] = UNBUYABLETIME;
	Players[playerid][Earnings] += PropInfo[propid][PropEarning];
	if(!IsVIP(playerid))
	{
 		TakePlayerCash(playerid, PropInfo[propid][PropValue]);
 	}
 	else
 	{
 	    TakePlayerCash(playerid, PropInfo[propid][PropValue]/2);
 	}   //return SendClientMessage(playerid, 0xFF0000AA, "You already own this property");
	format(str, sizeof str, "You have bought the property '%s' for $%d", PropInfo[propid][PropName], PropInfo[propid][PropValue]);
 	SendClientMessage(playerid, 0x99FF66AA, str);
  	format(str, sizeof str, "%p has bought the property '%s'", playerid, PropInfo[propid][PropName]);
  	SendClientMessageToAllEx(playerid, 0x99FF66AA, str);
  	format(str, sizeof str, "%p (ID:%d) Bought Property '%s' ($%d)",playerid,playerid,PropInfo[propid][PropName],PropInfo[propid][PropValue]);
    PlayerPlaySound(playerid, 1149,0,0,0);
 	DCC_SendChannelMessage(DCGen,str);
  	PlayerProps[playerid]++;
	new query[260],tmpv;
	if(PropInfo[propid][Buyable] == false) tmpv=0; else tmpv=1;
	format(query,sizeof query,"UPDATE `property` SET `PropName`='%s',`pX`='%f',`pY`='%f',`pZ`='%f',`Value`='%d',`Earning`='%d',`Owner`='%s',`IsBought`='%d',`PropUnbuyableTime`='%d',`IsBuyable`='%d' WHERE `PropName` = '%s'",PropInfo[propid][PropName],PropInfo[propid][PropX],PropInfo[propid][PropY],PropInfo[propid][PropZ],PropInfo[propid][PropValue],PropInfo[propid][PropEarning],PropInfo[propid][PropOwner],PropInfo[propid][PropIsBought],PropInfo[propid][PropUnbuyableTime],tmpv,PropInfo[propid][PropName]);
	mysql_query(SQL,query);
	DestroyDynamic3DTextLabel(PropInfo[propid][propText]);
	return 1;
}
CMD:setpropertyvalue(playerid,params[])
{
	return cmd_spv(playerid,params);
}
CMD:setpropvalue(playerid,params[])
{
	return cmd_spv(playerid,params);
}
CMD:setpropname(playerid,params[])
{
	return cmd_spn(playerid,params);
}
CMD:setpropertyname(playerid,params[])
{
	return cmd_spn(playerid,params);
}

CMD:spv(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
		new value;
		if(sscanf(params,"d",value)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setpropvalue <value>");
		new str[100];
		new propid = IsPlayerNearProperty(playerid);
		if(propid == -1) return SendClientMessage(playerid, 0xFF0000AA, "You're not close enough to a property");
		format(str, sizeof str, "Admin %p (ID:%d) changed the prop value of propID %d",playerid,playerid,propid);
	 	SendMessageToAdmins(playerid,7,COLOR_AMSG,str);
	  	SendClientMessageToAllEx(playerid, 0x99FF66AA, "Prop Value Changed.");
		PropInfo[propid][PropValue] = value;
	}
	return 1;
}
CMD:spn(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		new name;
		if(sscanf(params,"s[40]",name)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setpropname <New Property Name>");
		new str[100];
		new propid = IsPlayerNearProperty(playerid);
		if(propid == -1) return SendClientMessage(playerid, 0xFF0000AA, "You're not close enough to a property");
		new pName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pName, sizeof(pName));
		format(str, sizeof str, "* Admin %s (ID:%d) changed the property name of propID %d to %s",pName,playerid,propid,name);
	 	SendMessageToAdmins(playerid,7,COLOR_SYSTEM,str);
	  	SendClientMessageToAllEx(playerid, 0x99FF66AA, "Prop Value Changed.");
		PropInfo[propid][PropName] = name;
	} else SendClientMessage(playerid,COLOR_AC,"** Sorry, only MANAGEMENT can use this command.");
	return 1;
}

CMD:sell(playerid,params[])
{
	new str[128];
	new propid = IsPlayerNearProperty(playerid);
	if(propid == -1)
	{
		SendClientMessage(playerid, 0xFF0000AA, "You're not close enough to a property");
		return 1;
	}
	if(PropInfo[propid][PropIsBought] == 1)
	{
		new ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
		if(ownerid != playerid)
		{
  			SendClientMessage(playerid, 0xFF0000AA, "You don't sell this property!");
	    	return 1;
		}
		else
		{
//	}
			new pName[20];
			GetPlayerName(playerid, pName, sizeof(pName));
			format(PropInfo[propid][PropOwner], MAX_PLAYER_NAME, "Nobody");
			PropInfo[propid][PropIsBought] = 0;
			PropInfo[propid][PropUnbuyableTime] = 0;
			GivePlayerCash(playerid, PropInfo[propid][PropValue]/2);
			format(str, 128, "You have sold your property '%s' for 50 percents of its value: $%d", PropInfo[propid][PropName], PropInfo[propid][PropValue]/2);
			SendClientMessage(playerid, 0x99FF66AA, str);
			format(str, 128, "%s has sold the property '%s'", pName, PropInfo[propid][PropName]);
			SendClientMessageToAllEx(playerid, 0x99FF66AA, str);
			PlayerProps[playerid]--;
			Players[playerid][Earnings] -= PropInfo[propid][PropEarning];
			new query[500],tmpv;
			if(PropInfo[propid][Buyable] == false) tmpv=0; else tmpv=1;
			format(query,sizeof query,"UPDATE `property` SET `PropName`='%s',`pX`='%f',`pY`='%f',`pZ`='%f',`Value`='%d',`Earning`='%d',`Owner`='%s',`IsBought`='%d',`PropUnbuyableTime`='%d',`IsBuyable`='%d' WHERE `PropName` = '%s'",PropInfo[propid][PropName],PropInfo[propid][PropX],PropInfo[propid][PropY],PropInfo[propid][PropZ],PropInfo[propid][PropValue],PropInfo[propid][PropEarning],PropInfo[propid][PropOwner],PropInfo[propid][PropIsBought],PropInfo[propid][PropUnbuyableTime],tmpv,PropInfo[propid][PropName]);
			mysql_query(SQL,query);
			new tmp[25];
			format(tmp,sizeof tmp,"$%d",PropInfo[propid][PropValue]);
			PropInfo[propid][propText] = CreateDynamic3DTextLabel(tmp, COLOR_YELLOW,PropInfo[propid][PropX], PropInfo[propid][PropY], PropInfo[propid][PropZ]+0.6,10);
			return 1;
		}
	}
	else SendClientMessage(playerid, 0xFF0000AA, "No One Owns this property.You can't sell this property"),SendClientMessage(playerid, 0xFF0000AA, "Type \"/buy\" To Buy this property");
	return 1;
}



CMD:sellallprops(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,8))
	{
	    new ownerid;
		for(new i; i< MAX_PLAYERS; i++)
		{
			for(new propid; propid < PropertiesAmount; propid++)
			{
				if(PropInfo[propid][PropIsBought] == 1)
				{
		  			ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
					if(ownerid == i)
					{
						format(PropInfo[propid][PropOwner], MAX_PLAYER_NAME, "Nobody");
						PropInfo[propid][PropIsBought] = 0;
						PropInfo[propid][PropUnbuyableTime] = 0;
						GivePlayerCash(i, PropInfo[propid][PropValue]/2);
						PlayerProps[i] = 0;
						//if(PropInfo[propid][Buyable] == false) tmpv=0; else tmpv=1;
						Players[playerid][Earnings] = 0;
					}
				}
			}
		}
		SendClientMessage(playerid, 0x99FF66AA, "You have sold all of the properties");
		format(xstring, sizeof xstring, "Admin %p (ID:%d) reset all of the properties", playerid,playerid);
		SendClientMessageToAllEx(playerid, 0x99FF66AA, xstring);
		SaveProperties();
	}
	return 1;
}

CMD:sellmyprops(playerid,params[])
{
	new ownerid;
	for(new propid; propid < PropertiesAmount; propid++)
	{
		if(PropInfo[propid][PropIsBought] == 1)
		{
  			ownerid = GetPlayerID(PropInfo[propid][PropOwner]);
			if(ownerid == playerid)
			{
				format(PropInfo[propid][PropOwner], MAX_PLAYER_NAME, "Nobody");
				PropInfo[propid][PropIsBought] = 0;
				PropInfo[propid][PropUnbuyableTime] = 0;
				GivePlayerCash(playerid, PropInfo[propid][PropValue]/2);
				PlayerProps[playerid] = 0;
				//if(PropInfo[propid][Buyable] == false) tmpv=0; else tmpv=1;
				Players[playerid][Earnings] -= PropInfo[propid][PropEarning];
			}
		}
	}
	new str[128];
	SendClientMessage(playerid, 0x99FF66AA, "You have sold all of your properties");
	format(str, 128, "%p has sold all of his properties", playerid);
	SendClientMessageToAllEx(playerid, 0x99FF66AA, str);
	return 1;
}



// Properties


CMD:lotto(playerid,params[])
{
	if(Players[playerid][Lotto] > 0) return SendClientMessage(playerid,COLOR_RED,"You already have a ticket! You must wait until the lottery ends.");
	new value;
	if(sscanf(params,"d",value)) return SendClientMessage(playerid,COLOR_RED,"Usage: /lotto <Betting Amount>");
	if(value <= 0) return SendClientMessage(playerid,0xFF0BF468,"You can't buy a lottery ticket with $0!");
	if(GetPlayerCash(playerid) >= value)
	{
		Players[playerid][Lotto] = value;
		format(xstring,sizeof xstring,"LOTTO:{FFFFFF} %p (ID:%d) bought a ticket for $%d",playerid,playerid,value);
		SendClientMessageToAll(0xFF0BF468, xstring);
		TakePlayerCash(playerid, value);
	} 	else SendClientMessage(playerid,0xFF0BF468,"You don't have enough money!");
	return 1;
}


//teleporttoproperty




// End Property Commands

CMD:dropguns(playerid,params[])
{
	LooseWeapons(playerid);
	ResetPlayerWeapons(playerid);
	SendClientMessage(playerid,COLOR_WHITE,"> You dropped your weapons.");
	return 1;
}

CMD:gift(playerid, params[]) return cmd_xmasgift(playerid,params);
CMD:xmasgift(playerid,params[])
{
	new xy,xm,xd;
	getdate(xy,xm,xd);
	if(xm == 12 && xd > 12 && xd < 25)
	{
		if(Players[playerid][xmas] == true) return SendClientMessage(playerid,COLOR_RED,"* You already grabbed your xmas gift!");
		SendClientMessage(playerid,COLOR_GREEN,"* Christmas Gift Recieved! ( $1,000,000 & 1,000 Tokens & 500 Oranges )");
		GivePlayerCash(playerid, 1000000);
		Players[playerid][Token]+=1000;
		Players[playerid][oranges]+=500;
		Players[playerid][xmas] = true;
	}   else SendClientMessage(playerid,COLOR_RED,"* This command can only be used once between December 12 and 25.");
	return 1;
}

CMD:egghelp(playerid, params[]) return cmd_eggcmds(playerid,params);
CMD:eggcmds(playerid,params[])
{
	ShowPlayerDialog(playerid,2000,DIALOG_STYLE_MSGBOX,"** Easter Egg Commands","In the server, you can collect easter eggs! When you collect them all, you get a reward!\n\n> /myeggs = Shows how many eggs you collected\n> /egghint = Gives you a hint on how to find eggs","OK","");
	return 1;
}

CMD:egghint(playerid, params[]) return cmd_easteregghint(playerid,params);
CMD:easteregghint(playerid,params[])
{
	new rEgg = random(sizeof EasterEgg);
	SendClientMessage(playerid,COLOR_WHITE, EasterEgg[rEgg][tip]);
	return 1;
}

CMD:myeggs(playerid, params[]) return cmd_myeastereggs(playerid,params);
CMD:myeastereggs(playerid,params[])
{
	format(xstring,sizeof xstring,"* You collected %d easter eggs.",  CountPlayerEggs(playerid));
	SendClientMessage(playerid,COLOR_WHITE,xstring);
	return 1;
}

CMD:sendoranges(playerid,params[])
{
	new id,tkn;
	if(sscanf(params,"rd",id,tkn)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /sendoranges <playerid> <amount>");
	if(Players[playerid][apples] < tkn) return SendClientMessage(playerid,COLOR_RED,"* You don't have that many oranges!");
	if(tkn < 0)
	{
		SendClientMessage(playerid,COLOR_RED,"* You cannot send negative oranges.");
		return 1;
	}
	if(playerid == id) return SendClientMessage(playerid,COLOR_RED,"* You cannot send oranges to yourself");
	Players[playerid][oranges]-=tkn;
	Players[id][oranges]+=tkn;
	format(xstring,sizeof xstring,"You send %d oranges to %p (ID:%d)",tkn,id,id);
	SendClientMessage(playerid,COLOR_WHITE,xstring);
	format(xstring,sizeof xstring,"You recieved %d oranges from %p (ID:%d)",tkn,playerid,playerid);
	SendClientMessage(id,COLOR_WHITE,xstring);
	format(xstring,sizeof xstring,"%p (ID:%d) gave %p (ID:%d) %d oranges",playerid,playerid,id,id,tkn);
	Chat_SendMessageToAdmins(COLOR_AMSG,1,xstring);
	return 1;
}

CMD:sendapples(playerid,params[])
{
	new id,tkn;
	if(sscanf(params,"rd",id,tkn)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /sendapples <playerid> <amount>");
	if(Players[playerid][apples] < tkn) return SendClientMessage(playerid,COLOR_RED,"* You don't have that many apples!");
	if(tkn < 0)
	{
		SendClientMessage(playerid,COLOR_RED,"* You cannot send negative apples.");
		return 1;
	}
	if(playerid == id) return SendClientMessage(playerid,COLOR_RED,"* You cannot send apples to yourself");
	Players[playerid][apples]-=tkn;
	Players[id][apples]+=tkn;
	format(xstring,sizeof xstring,"You send %d apples to %p (ID:%d)",tkn,id,id);
	SendClientMessage(playerid,COLOR_WHITE,xstring);
	format(xstring,sizeof xstring,"You recieved %d apples from %p (ID:%d)",tkn,playerid,playerid);
	SendClientMessage(id,COLOR_WHITE,xstring);
	format(xstring,sizeof xstring,"%p (ID:%d) gave %p (ID:%d) %d apples",playerid,playerid,id,id,tkn);
	Chat_SendMessageToAdmins(COLOR_AMSG,1,xstring);
	return 1;
}

CMD:sendtokens(playerid,params[])
{
	new id,tkn;
	if(sscanf(params,"rd",id,tkn)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /sendtokens <playerid> <amount>");
	if(Players[playerid][Token] < tkn) return SendClientMessage(playerid,COLOR_RED,"* You don't have that many tokens!");
	if(tkn < 0)
	{
		SendClientMessage(playerid,COLOR_RED,"* You cannot send negative tokens.");
		return 1;
	}
	if(playerid == id) return SendClientMessage(playerid,COLOR_RED,"* You cannot send tokens to yourself");
	Players[playerid][Token]-=tkn;
	Players[id][Token]+=tkn;
	format(xstring,sizeof xstring,"You send %d tokens to %p (ID:%d)",tkn,id,id);
	SendClientMessage(playerid,COLOR_WHITE,xstring);
	format(xstring,sizeof xstring,"You recieved %d tokens from %p (ID:%d)",tkn,playerid,playerid);
	SendClientMessage(id,COLOR_WHITE,xstring);
	format(xstring,sizeof xstring,"%p (ID:%d) gave %p (ID:%d) %d tokens",playerid,playerid,id,id,tkn);
	Chat_SendMessageToAdmins(COLOR_AMSG,1,xstring);
	return 1;
}

CMD:resetcam(playerid,params[])
{
	SetCameraBehindPlayer(playerid);
	return 1;
}

CMD:selfiecam(playerid,params[])
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	y = y-3;
	
	SetPlayerCameraLookAt(playerid,x,y,z);
	SetPlayerCameraPos(playerid,x,y,z);
	
	SendClientMessage(playerid,COLOR_RED,"Use /resetcam to leave this camera mode.");
	return 1;
}

CMD:guns(playerid,params[]) return cmd_ammo(playerid,params);
CMD:ammo(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    if(IsPlayerInAnyDynamicArea(playerid)) return SendClientMessage(playerid,COLOR_RED,"You cannot use this command near spawn.");
	ShowPlayerDialog(playerid,7000,DIALOG_STYLE_LIST,"Ammo Store","Pistols ($10000) \nSub Machine Guns )$25000) \nAutomatic Rifle ($100000)\nThrowables ($5000)","Next","Cancel");
	format(xstring,sizeof xstring,"%p (ID:%d) used the ammo store",playerid,playerid);
	Chat_SendMessageToAdmins(COLOR_RED,1,xstring);
	return 1;
}

CMD:ammo2(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid,-2626.17,213.44, 5.00);
	SetPlayerFacingAngle(playerid,182.42);
 	SendClientMessage(playerid,COLOR_WHITE,"You Teleported to Ammunation");
 	
  	return 1;
}


CMD:amanda(playerid,params[])
{
 	new id = GetNPCNameByID("Amanda");
 	if(id == -1) return SendClientMessage(playerid,COLOR_WHITE,"NPC {E0E494}Amanda{FFFFF} is not connected!");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(id,x,y,z);
 	GotoPosition(playerid,x,y,z,true);
 	SendClientMessage(playerid,COLOR_WHITE,"You Teleported to NPC {E0E494}Amanda");
  	return 1;
}

CMD:kb(playerid,params[])
{
	format(xstring,sizeof xstring,"{8799FF}Fire Key: %s\n{8799FF}Secondary Fire Key: %s\n{8799FF}Sub-mission Key: %s\n{8799FF}Horn Key: %s\n{8799FF}Yes Key: %s\n{8799FF}No Key: %s\n{8799FF}Look Right Key: %s\n{8799FF}Look Left Key: %s",_B@EchoS(playerid,_@FIREKEY),_B@EchoS(playerid,_@SFIREKEY),_B@EchoS(playerid,_@SUBKEY),_B@EchoS(playerid,_@HORNKEY),_B@EchoS(playerid,_@YESKEY),_B@EchoS(playerid,_@NOKEY),_B@EchoS(playerid,_@LOOKRIGHTKEY),_B@EchoS(playerid,_@LOOKLEFTKEY));
	ShowPlayerDialog(playerid,_@Dialog,DIALOG_STYLE_LIST,"-Key Blinder (On-Vehicle)",xstring,"Ok","Cancel");
	return 1;
}
CMD:ckb(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,1)) return 0;
	new id;
	if(sscanf(params,"d",id)) return SendClientMessage(playerid,-1,"USAGE: /ckb [playerid]   || This command is used to check other player's key blinder states");
	new str[500],_@@name[21];
	GetPlayerName(id,_@@name,sizeof _@@name);
	format(str,sizeof str,"%s\'s Key Blinder States\n{8799FF}Fire Key: %s\n{8799FF}Secondary Fire Key: %s\n{8799FF}Sub-mission Key: %s\n{8799FF}Horn Key: %s\n{8799FF}Yes Key: %s\n{8799FF}No Key: %s\n{8799FF}Look Right Key: %s\n{8799FF}Look Left Key: %s",_@@name,_B@EchoS(id,_@FIREKEY),_B@EchoS(id,_@SFIREKEY),_B@EchoS(id,_@SUBKEY),_B@EchoS(id,_@HORNKEY),_B@EchoS(id,_@YESKEY),_B@EchoS(id,_@NOKEY),_B@EchoS(id,_@LOOKRIGHTKEY),_B@EchoS(id,_@LOOKLEFTKEY));
	ShowPlayerDialog(playerid,_@CKBMsgBox,DIALOG_STYLE_MSGBOX,"-Key Blinder (On-Vehicle)",str,"Ok","");
 	format(xstring, sizeof(xstring),"* Admin %p (ID:%d) used the /ckb to check %p (ID:%d) key blinders",playerid,playerid,id,id);
  	Chat_SendMessageToAdmins(COLOR_YELLOW,1,xstring);
	return 1;
}

/****************************** GROUP SYSTEM *******************************

Commands: /groupmanage, /grouphelp, /deletegroup, /invitetogroup (/itg), /groupchat (/gc or )

*/

CMD:ginvite(playerid,params[])
{
	if(strlen(Players[playerid][groupName]) == 0) return SendClientMessage(playerid,COLOR_RED,"** You don't own a group! You must /creategroup to make one.");
	new id;
	if(sscanf(params,"r",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /ginvite <playerid/name>");
	if(IsPlayerConnected(id))
	{
	    if(strlen(Players[id][groupName]) > 0) return SendClientMessage(playerid,COLOR_RED,"** That player already is in a group!");
		new gID;
		format(xstring,sizeof xstring,"SELECT `gID` FROM `groups` WHERE `gName` = '%s'",Players[playerid][groupName]);
		mysql_query(SQL,xstring);
		cache_get_value_name_int(0, "gID", gID);
		Players[id][gInvited] = gID;

		format(xstring,sizeof xstring,"Group Member %p (ID:%d) invited you to join %s!",playerid,playerid,Players[playerid][groupName]);
		SendClientMessage(id,COLOR_WHITE,xstring);
		
		format(xstring,sizeof xstring,"You invited %p (ID:%d) to join %s!",id,id,Players[playerid][groupName]);
		SendClientMessage(id,COLOR_WHITE,xstring);

	}	else SendClientMessage(playerid,COLOR_RED,"Player not connected!");
	return 1;
}

CMD:joingroup(playerid,params[])
{
	if(strlen(Players[playerid][groupName]) > 0) return SendClientMessage(playerid,COLOR_RED,"** You already joined a group!");
	new gName[21];
	if(sscanf(params,"s[21]",gName)) return SendClientMessage(playerid,COLOR_RED,"** Usage: /joingroup <groupName>");
	format(xstring,sizeof xstring,"SELECT * FROM `groups` WHERE `gName` = '%s'",gName);
	mysql_query(SQL,xstring);
	if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"** Could not find that group!");
	new gID;
	new InviteOnly, groupOwner[21], Members;
	cache_get_value_name(0,"gOwner",groupOwner);
	cache_get_value_name_int(0, "InviteOnly", InviteOnly);
	cache_get_value_name_int(0, "gID", gID);
	cache_get_value_name_int(0, "gMembers", Members);
	Members++;
	if(InviteOnly == 0 || Players[playerid][gInvited] == gID)
	{
	    // We can allow this player to join the group!
	    format(xstring,sizeof xstring,"You have joined the %s group!",gName);
	    SendClientMessage(playerid,COLOR_LIGHTBLUE,xstring);
	    format(Players[playerid][groupName],sizeof gName,"%s",gName);
	    
    	// Notify the group Owner
		new tmpName[21];
		for(new i=0; i< MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i))
		    {
				GetPlayerName(i,tmpName,sizeof tmpName);
		    	if(!strcmp(tmpName,groupOwner, true))
		    	{
		    	    format(xstring,sizeof xstring,"Player %p (ID:%d) has joined your group!",playerid,playerid);
		    	    SendClientMessage(playerid,COLOR_LIGHTBLUE,xstring);
		    	    break;
		    	}
		    }
		}

		// Update Group Member Count
		format(xstring, sizeof(xstring), "UPDATE `groups` SET `gMembers` = '%d' WHERE `groupName` = '%s'", Members, Players[playerid][groupName]);
		mysql_query(SQL,xstring);
	} else SendClientMessage(playerid,COLOR_RED,"** You are not allowed to join that group, it is Invite Only.");
	return 1;
}

CMD:creategroup(playerid,params[])
{
	if(strlen(Players[playerid][groupName]) > 0) return SendClientMessage(playerid,COLOR_RED,"** You already own/belong to a group! You must /delete it first.");
	new gName[21];
	if(sscanf(params,"s[21]",gName)) return SendClientMessage(playerid,COLOR_RED,"** Usage: /creategroup <groupName>");
	
	format(xstring,sizeof xstring,"SELECT * FROM `groups` WHERE `gName` = '%s'",gName);
	mysql_query(SQL,xstring);
	if(cache_num_rows() > 0) return SendClientMessage(playerid,COLOR_RED,"** Sorry, that group name is already taken.");
	
	SendClientMessage(playerid,COLOR_LIGHTBLUE,"* You created your own group! You can manage it with /groupmanage");
	format(Players[playerid][groupName],sizeof gName,"%s",gName);
	
	// The mySQL query
	format(xstring, sizeof(xstring), "INSERT INTO `groups` (`gName`, `gOwner`, `Created`) VALUES ('%s','%p',CURDATE())", gName,playerid);
	mysql_query(SQL,xstring);
	return 1;
}

CMD:groupmanage(playerid,params[])
{
	if(strlen(Players[playerid][groupName]) == 0) return SendClientMessage(playerid,COLOR_RED,"** You don't own a group! You must /creategroup to make one.");
	format(xstring,sizeof xstring,"SELECT * FROM `groups` WHERE `gOwner` = '%p'",playerid);
	mysql_query(SQL,xstring);
	if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"** You are not the owner of this group!");
	ShowPlayerDialog(playerid,8801,DIALOG_STYLE_LIST,"Group Management Tools","Remove a Member\nToggle Invite Only\nDelete Group\nView Group Details","OK","Cancel");
	return 1;
}
CMD:getid(playerid,params[])
{
	new search[24],string[35],name[24],bool:found;
 	if(sscanf(params,"s[24]",search)) return SendClientMessage(playerid,COLOR_RED,"Usage: /getid [Playername]");
  	if(strlen(search) < 3) return SendClientMessage(playerid,COLOR_GREY,"Search length must be greater than 3.");
  	if(strlen(search) > 24) return SendClientMessage(playerid,COLOR_GREY,"Search length is too long.");
   	SendClientMessage(playerid, COLOR_GREY, "Results:");
   	for(new i;i<MAX_PLAYERS; i++)
    {
    	if(IsPlayerConnected(i))
     	{
      		GetPlayerName(i,name,24);
        	if(strfind(name,search,true) != -1)
         	{
          		format(string, sizeof(string), "%s (ID:%i)",name,i);
          		SendClientMessage(playerid, COLOR_GREY, string);
            	found=true;
          	}
       	}
     }
	if(!found) SendClientMessage(playerid,COLOR_RED,"No match found.");
 	return 1;
}



CMD:playduel(playerid,params[])
{
	if(Players[playerid][invited] == true)
	{
	    new dueli = Players[playerid][dueling];
	    switch(Players[dueli][duelloc])
	    {
	        case 1:
	        {
	   		    SetPlayerPos(playerid,-1227.3435,51.1618,14.2328);
				SetPlayerInterior(playerid, 0 );
				SetPlayerInterior(dueli, 0 );
			    SetPlayerFacingAngle(playerid,51.0626);
			    SetPlayerPos(dueli,-1231.9204,53.9947,14.2328);
			    SetPlayerFacingAngle(dueli,242.1744);
				TogglePlayerControllable(playerid,false);
				TogglePlayerControllable(dueli,false);
				SetCameraBehindPlayer(playerid);
				SetCameraBehindPlayer(dueli);
				GameTextForPlayer(playerid,"~r~GEt Ready...",1000,3);
	            GameTextForPlayer(dueli,"~r~GEt Ready...",1000,3);
			    SetTimerEx("DuelStart",5000,false,"dd",playerid,dueli);
			    Players[playerid][dueling] = dueli;
			    Players[playerid][invited] = false;
			    GivePlayerWeapon(playerid,WEAPON:26,999);
			    GivePlayerWeapon(dueli,WEAPON:26,999);
	        }

	        case 2:
	        {
	   		    SetPlayerPos(playerid,-706.7578,1564.2427,82.2001);
				SetPlayerInterior(playerid, 0 );
				SetPlayerInterior(dueli, 0 );
			    SetPlayerFacingAngle(playerid,243.1007);
			    SetPlayerPos(dueli,-649.2189,1541.3579,82.9709);
			    SetPlayerFacingAngle(dueli,93.9527);
				TogglePlayerControllable(playerid,false);
				TogglePlayerControllable(dueli,false);
				SetCameraBehindPlayer(playerid);
				SetCameraBehindPlayer(dueli);
				GameTextForPlayer(playerid,"~r~GEt Ready...",1000,3);
	            GameTextForPlayer(dueli,"~r~GEt Ready...",1000,3);
			    SetTimerEx("DuelStart",5000,false,"dd",playerid,dueli);
			    Players[playerid][dueling] = dueli;
			    Players[playerid][invited] = false;
			    GivePlayerWeapon(playerid,WEAPON:24,999);
			    GivePlayerWeapon(dueli,WEAPON:24,999);
	        }

	        case 3:
	        {
	   		    SetPlayerPos(playerid,-12.8474,2323.8445,24.1347);
				SetPlayerInterior(playerid, 0 );
				SetPlayerInterior(dueli, 0 );
			    SetPlayerFacingAngle(playerid,39.9572);
			    SetPlayerPos(dueli,-44.5342,2347.9260,24.1347);
			    SetPlayerFacingAngle(dueli,229.5023);
				TogglePlayerControllable(playerid,false);
				TogglePlayerControllable(dueli,false);
				SetCameraBehindPlayer(playerid);
				SetCameraBehindPlayer(dueli);
				GameTextForPlayer(playerid,"~r~GEt Ready...",1000,3);
	            GameTextForPlayer(dueli,"~r~GEt Ready...",1000,3);
			    SetTimerEx("DuelStart",5000,false,"dd",playerid,dueli);
			    Players[playerid][dueling] = dueli;
			    Players[playerid][invited] = false;
			    GivePlayerWeapon(playerid,WEAPON:33,999);
			    GivePlayerWeapon(dueli,WEAPON:33,999);
	        }

			case 4:
			{
	   		    SetPlayerPos(playerid,766.9792,2039.8951,6.7109);
				SetPlayerInterior(playerid, 0 );
				SetPlayerInterior(dueli, 0 );
			    SetPlayerFacingAngle(playerid,0.2185);
			    SetPlayerPos(dueli,767.6265,2077.3198,6.7109);
			    SetPlayerFacingAngle(dueli,182.8936);
				TogglePlayerControllable(playerid,false);
				TogglePlayerControllable(dueli,false);
				SetCameraBehindPlayer(playerid);
				SetCameraBehindPlayer(dueli);
				GameTextForPlayer(playerid,"~r~GEt Ready...",1000,3);
	            GameTextForPlayer(dueli,"~r~GEt Ready...",1000,3);
			    SetTimerEx("DuelStart",5000,false,"dd",playerid,dueli);
			    Players[playerid][dueling] = dueli;
			    Players[playerid][invited] = false;
			    GivePlayerWeapon(playerid,WEAPON:39,999);
			    GivePlayerWeapon(dueli,WEAPON:39,999);
			}

			case 5:
			{
	   		    SetPlayerPos(playerid,-2771.2588,-252.5090,7.1875);
				SetPlayerInterior(playerid, 1 );
				SetPlayerInterior(dueli, 1 );
			    SetPlayerFacingAngle(playerid,273.2058);
			    SetPlayerPos(dueli,-2732.8640,-252.2159,7.1875);
			    SetPlayerFacingAngle(dueli,92.0974);
				TogglePlayerControllable(playerid,false);
				TogglePlayerControllable(dueli,false);
				SetCameraBehindPlayer(playerid);
				SetCameraBehindPlayer(dueli);
				GameTextForPlayer(playerid,"~r~GEt Ready...",1000,3);
	            GameTextForPlayer(dueli,"~r~GEt Ready...",1000,3);
			    SetTimerEx("DuelStart",5000,false,"dd",playerid,dueli);
			    Players[playerid][dueling] = dueli;
			    Players[playerid][invited] = false;
			    GivePlayerWeapon(playerid,WEAPON:24,999);
			    GivePlayerWeapon(dueli,WEAPON:24,999);
			}

			case 6:
			{
	   		    SetPlayerPos(playerid,291.0096,-20.6853,1001.5156);
				SetPlayerInterior(playerid, 0 );
				SetPlayerInterior(dueli, 0 );
			    SetPlayerFacingAngle(playerid,354.8867);
			    SetPlayerPos(dueli,291.6542,-6.5588,1001.5156);
			    SetPlayerFacingAngle(dueli,181.6117);
				TogglePlayerControllable(playerid,false);
				TogglePlayerControllable(dueli,false);
				SetCameraBehindPlayer(playerid);
				SetCameraBehindPlayer(dueli);
				GameTextForPlayer(playerid,"~r~GEt Ready...",1000,3);
	            GameTextForPlayer(dueli,"~r~GEt Ready...",1000,3);
			    SetTimerEx("DuelStart",5000,false,"dd",playerid,dueli);
			    Players[playerid][dueling] = dueli;
			    Players[playerid][invited] = false;
			    GivePlayerWeapon(playerid,WEAPON:39,999);
			    GivePlayerWeapon(dueli,WEAPON:39,999);
			}

			case 7:
			{
	   		    SetPlayerPos(playerid,2144.0300,1610.4261,993.6882);
				SetPlayerInterior(playerid, 1 );
				SetPlayerInterior(dueli, 1 );
			    SetPlayerFacingAngle(playerid,2.7877);
			    SetPlayerPos(dueli,2144.0459,1625.2960,993.6882);
			    SetPlayerFacingAngle(dueli,180.1127);
				TogglePlayerControllable(playerid,false);
				TogglePlayerControllable(dueli,false);
				SetCameraBehindPlayer(playerid);
				SetCameraBehindPlayer(dueli);
				GameTextForPlayer(playerid,"~r~Get Ready...",1000,3);
	            GameTextForPlayer(dueli,"~r~Get Ready...",1000,3);
			    SetTimerEx("DuelStart",5000,false,"dd",playerid,dueli);
			    Players[playerid][dueling] = dueli;
			    Players[playerid][invited] = false;
			    GivePlayerWeapon(playerid,WEAPON:29,999);
			    GivePlayerWeapon(dueli,WEAPON:29,999);
			}

	    }
	} else SendClientMessage(playerid,COLOR_RED," You never recieved a invite.");
	return 1;
}

forward DuelStart(playerid,player);
public DuelStart(playerid,player)
{
	TogglePlayerControllable(playerid,true);
	TogglePlayerControllable(player,true);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SetPlayerArmour(player,100);
	SetPlayerHealth(player,100);
	GameTextForPlayer(playerid,"~g~GO",500,3);
 	GameTextForPlayer(player,"~g~GO",500,3);
}

CMD:duel(playerid,params[])
{
	if(GetMinigame(playerid) != 0 && IsDueling[playerid] == false)
	{
 		SendClientMessage(playerid, 0xF7E91BFF,"You cant use duel while in other minigame");
   		return 1;
	}
	PlayerPlaySound(playerid,1085,0.0,0.0,0.0);

	new pid[16],gun,gun2,player;
 	new string[128],tmp[128],idx;
	tmp = strtok(params, idx);if(!strlen(tmp))
	{
 		SendClientMessage(playerid, 0xAEA1F0FF,"Usage: /duel <option> <player id>");
		SendClientMessage(playerid, 0xAEA1F0FF,"** options = invite, accept, ignore, disable, enable, leave");
		return 1;
	}

	new wname[32],wname2[32];
	strmid(pid, tmp, 0, strlen(params), 128);
	if (strcmp(pid, "leave", true) == 0)
	{
 		if(IsDueling[playerid] == true) Duel_End(DuelInvitation[playerid],playerid,2);
	}
	else if (strcmp(pid, "invite", true) == 0)
	{
		    if(DuelDisable[playerid] == true){return mSend3(playerid,"[DUEL] You need to enable dueling before attemting to send a duel invitation (/duel enable)");}
			if(DuelWaiting[playerid] == true){return mSend3(playerid,"[DUEL] Please wait until your other invitations have expired.");}
		    tmp = strtok(params, idx);
			if(!strlen(tmp)){return mSend2(playerid,"Usage: /duel invite [playerid] [gun 1 name/id] [gun 2 name/id (optional)]");}
			player = strval(tmp);
			if(DuelIgnored[player][playerid] == true)return mSend3(playerid,"[DUEL] This player has chosen to ignore your duel requests.");
		    if(player == playerid) return mSend3(playerid,"[DUEL] You cannot invite yourself.");
		    if(IsDueling[player] == true) return mSend3(playerid,"[DUEL] Player is already dueling.");
			if(!IsPlayerConnected(player))return mSend3(playerid,"[DUEL] No such player.");
			if(DuelDisable[player] == true)return mSend3(playerid,"[DUEL] Player is not accepting duels.");
			if(DuelWaiting[player] == true)return mSend3(playerid,"[DUEL] Player has already been requested to duel.");

            tmp = strtok(params, idx);
			if(!strlen(tmp)){return mSend2(playerid,"Usage: /duel invite [playerid] [gun id]");}
			gun = GetWeaponModelIDFromName(tmp);
			if(gun == 38 || gun == 36 || gun == 41 || gun == 42 || gun == 44 || gun == 45) return SendClientMessage(playerid, 0xF7E91BFF, "Error: Illegal/banned Weapon ID/Name");
			if(gun == -1)
			{
				gun = strval(tmp);
				if(gun == 38 || gun == 36 || gun == 41 || gun == 42 || gun == 44 || gun == 45) return SendClientMessage(playerid, 0xF7E91BFF, "Error: Illegal/banned Weapon ID/Name");
				if(gun < 22 || gun > 37)
				{
	    			SendClientMessage(playerid, 0xF7E91BFF, "Error: Invalid Weapon ID/Name");
	    			return 1;
				}
			}
			if(gun == 38 || gun == 36 || gun == 41 || gun == 42 || gun == 44 || gun == 45) return SendClientMessage(playerid, 0xF7E91BFF, "Error: Illegal/banned Weapon ID/Name");

			wname = WeaponNames[gun];
			Duel_RandomizeSigns(playerid);

   			tmp = strtok(params, idx);
			if(!strlen(tmp))
			{
				format(string,sizeof(string),"[DUEL] \"%s\" challenges you to a %s duel. Type \"/duel accept\", you have 20 seconds.",NickName[playerid],wname);
				mSend5(playerid,"[DUEL] invite sent.");
	    		SendClientMessage(player,0x00FF77FF,string);
	    		DuelWeapon[playerid][0] = gun;
				DuelWeapon[player][0] = gun;
				DuelWeapon[playerid][1] = 0;
				DuelWeapon[player][1] = 0;
	    		DuelInvitation[player] = playerid;
				DuelWaiting[player] = true;
            	DuelInvitation[playerid] = playerid;
	    		DuelWaiting[playerid] = true;
	    		DuelTimer[playerid] = SetTimerEx("Duel_EndWait",20000,false,"ii",playerid,player);
	    		return 1;
			}
			gun2 = GetWeaponModelIDFromName(tmp);
			if(gun2 == 38 || gun2 == 36 || gun2 == 41 || gun2 == 42 || gun2 == 44 || gun2 == 45) return SendClientMessage(playerid, 0xF7E91BFF, "Error: Illegal/banned Weapon ID/Name");
			if(gun2 == -1)
			{
				gun2 = strval(tmp);
				if(gun2 == 38 || gun2 == 36 || gun2 == 41 || gun2 == 42 || gun2 == 44 || gun2 == 45) return SendClientMessage(playerid, 0xF7E91BFF, "Error: Illegal/banned Weapon ID/Name");
				if(gun2 < 22 || gun2 > 37)
				{
	    			SendClientMessage(playerid, 0xF7E91BFF, "Error: Invalid Weapon ID/Name");
	    			return 1;
				}
			}
			if(gun2 == 38 || gun2 == 36 || gun2 == 41 || gun2 == 42 || gun2 == 44 || gun2 == 45) return SendClientMessage(playerid, 0xF7E91BFF, "Error: Illegal/banned Weapon ID/Name");
			wname2 = WeaponNames[gun2];
			format(string,sizeof(string),"[DUEL] \"%s\" challenges you to a %s & %s duel. Type \"/duel accept\", you have 20 seconds.",NickName[playerid],wname,wname2);
			mSend5(playerid,"[DUEL] invite sent.");
 			SendClientMessage(player,0x00FF77FF,string);
	    	DuelWeapon[playerid][0] = gun;
			DuelWeapon[player][0] = gun;
			DuelWeapon[playerid][1] = gun2;
			DuelWeapon[player][1] = gun2;
	    	DuelInvitation[player] = playerid;
			DuelWaiting[player] = true;
           	DuelInvitation[playerid] = playerid;
	    	DuelWaiting[playerid] = true;
	    	SetTimerEx("Duel_EndWait",20000,false,"ii",playerid,player);
	    	return 1;
  		}
		else if (strcmp(pid, "accept", true, strlen(pid)) == 0)
		{
			if(IsDueling[playerid] == true) return mSend3(playerid,"[DUEL] you're already dueling.");
			if(DuelInvitation[playerid] == -1)return mSend3(playerid,"[DUEL] You have not received an invitation.");
			//if(gPlayerSpawned[DuelInvitation[playerid]] == false)return mSend3(playerid,"[DUEL] You must wait for the player to respawn.");
			if(DuelInvitation[playerid] == playerid)return mSend3(playerid,"[DUEL] You cannot accept your own invitations.");

			DuelInvitation[DuelInvitation[playerid]] = playerid;

			SetTimerEx("Duel_CreatePlayerArena",500,false,"ii",playerid,DuelInvitation[playerid]);
			SetTimerEx("Duel_CreatePlayerArena",500,false,"ii",DuelInvitation[playerid],DuelInvitation[playerid]);

			Duel_Initiate(playerid,DuelInvitation[playerid],10);
			KillTimer(DuelTimer[DuelInvitation[playerid]]);
			KillTimer(DuelTimer[playerid]);

			ResetPlayerWeapons(playerid);
			Duel_SetPlayerPos(0,playerid);
			SetCameraBehindPlayer(playerid);
			ResetPlayerHealth(playerid);
			ResetPlayerArmor(playerid);
			SetPlayerInterior(playerid,1);
			DuelWorld[playerid] = playerid+MAX_PLAYERS * 2;
			SetPlayerVirtualWorld(playerid,DuelWorld[playerid]);
			SetPlayerInterior(playerid,1);
			IsDueling[playerid] = true;
			SetMinigame(playerid,DUEL);
			SetMinigame(DuelInvitation[playerid],DUEL);
			TogglePlayerControllable(playerid,false);
			DuelStarting[playerid] = true;

			ResetPlayerWeapons(DuelInvitation[playerid]);
			Duel_SetPlayerPos(1,DuelInvitation[playerid]);
			SetCameraBehindPlayer(DuelInvitation[playerid]);
			ResetPlayerHealth(DuelInvitation[playerid]);
			ResetPlayerArmor(DuelInvitation[playerid]);
			SetPlayerInterior(DuelInvitation[playerid],1);
			DuelWorld[DuelInvitation[playerid]] = playerid+MAX_PLAYERS * 2;
			SetPlayerVirtualWorld(DuelInvitation[playerid],DuelWorld[playerid]);
			IsDueling[DuelInvitation[playerid]] = true;
			TogglePlayerControllable(DuelInvitation[playerid],false);
			DuelStarting[DuelInvitation[playerid]] = true;
			wname = WeaponNames[DuelWeapon[playerid][0]];
			wname2 = WeaponNames[DuelWeapon[playerid][1]];
			if(DuelWeapon[playerid][1] != 0)
			{
				format(string,sizeof(string),"[DUEL] \"%s\" vs \"%s\" Initiated...  Weapons: %s & %s ***",NickName[playerid],NickName[DuelInvitation[playerid]],wname,wname2);
			}	else format(string,sizeof(string),"[DUEL] \"%s\" vs \"%s\"  Initiated...  Weapon: %s",NickName[playerid],NickName[DuelInvitation[playerid]],wname);
			SendClientMessageToAll(0x00FF77FF,string);
			if(DuelWeapon[playerid][1] != 0)
			{
				format(string,sizeof(string),"0,7[DUEL] \"%s\" vs \"%s\"  Initiated... Weapons: %s & %s",NickName[playerid],NickName[DuelInvitation[playerid]],wname,wname2,DuelInvitation[playerid]);
			}	else format(string,sizeof(string),"0,7[DUEL] \"%s\" vs \"%s\"  Initiated... Weapon: %s",NickName[playerid],NickName[DuelInvitation[playerid]],wname,DuelInvitation[playerid]);
			DuelWaiting[playerid] = false;
			DuelWaiting[DuelInvitation[playerid]] = false;
			return 1;
		}
		else if(strcmp(pid, "ignore", true, strlen(pid)) == 0)
		{
		    tmp = strtok(params, idx);
			if(!strlen(tmp))return mSend4(playerid,"Usage: /duel ignore [playerid/name]");
			new id = ReturnPlayerID(tmp,strval(tmp));
			if(!IsPlayerConnected(id))return mSend3(playerid,"Error: Player is not connected.");
			if(id == playerid)return mSend3(playerid,"Error: You cannot ignore yourself.");
			if(DuelIgnored[playerid][id] == false)
			{
				DuelIgnored[playerid][id] = true;
				format(string,128,"*** %s (ID: %d) has been added to your duel-ignored list!",NickName[id],id);
				mSend4(playerid,string);
				format(string,128,"*** To remove %s from ignore list, (/duel ignore %d)",NickName[id],id);
				mSend4(playerid,string);
			}
			else
			{
		    	DuelIgnored[playerid][id] = false;
				format(string,128,"*** %s (ID: %d) has been removed from your duel-ignored list!",NickName[id],id);
				mSend4(playerid,string);
			}
		}
		else if (strcmp(pid, "disable", true, strlen(pid)) == 0)
		{
		    if(DuelDisable[playerid] == false)
			{
				DuelDisable[playerid] = true;
				return mSend3(playerid,"Dueling is disabled for you and you'll not recieve any invites.");
			}
			else return mSend3(playerid,"Dueling is already disabled.");
		}
		else if (strcmp(pid, "enable", true, strlen(pid)) == 0)
		{
		    if(DuelDisable[playerid] == true)
			{
				DuelDisable[playerid] = false;
				return mSend3(playerid,"Dueling is enabled.");
			}
			else return mSend3(playerid,"Dueling is already enabled.");
		}
		else
		{
			SendClientMessage(playerid, 0xF7E91BFF, "Invalid parameters");
			PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
			return 1;
		}
	return 1;
}

//dm
CMD:dmlock(playerid,params[])
{
	new x;
	if(!IsPlayerAdminLevel(playerid,4)) return SendClientMessage(playerid,COLOR_RED,"Level 4 Admin Command Only.");
	if(sscanf(params,"d",x))  
	{
		if(dmlock == false)
		{
			dmlock = true;
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(dm[i] != -1)
				{
					//dmq1	
					
					if(dm[playerid] == -1) return mSend3(playerid,"* You are not currently in dm zone");
					else
					{
						dm[playerid]=-1;
						ResetPlayerWeapons(playerid);
						ResetPlayerHealth(playerid);
						ResetPlayerArmor(playerid);
						SetPlayerVirtualWorld(playerid,0);
						SetMinigame(playerid,0);
						SpawnPlayer(playerid);	
					}				
				}
				
			}
			format(xstring,128,"Admin %p (ID:%d) has locked /DM",playerid,playerid);
			SendClientMessageToAll(COLOR_ORANGE,xstring);
		}
		else
		{
			dmlock = false;
			format(xstring,128,"Admin %s has unlocked /DM",NickName[playerid]);
			SendClientMessageToAll(COLOR_ORANGE,xstring);
		
		}	
		mSend3(playerid,"You can also type /dmlock <0-1> - unlock/lock");
	}
	else
	{
		if(x==1)
		{
			dmlock = true;
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(dm[i] != -1)
				{

					if(dm[playerid] == -1) return mSend3(playerid,"* You are not currently in dm zone");
					else
					{
						dm[playerid]=-1;
						ResetPlayerWeapons(playerid);
						ResetPlayerHealth(playerid);
						ResetPlayerArmor(playerid);
						SetPlayerVirtualWorld(playerid,0);
						SetMinigame(playerid,0);
						SpawnPlayer(playerid);	
					}					
				}
				
			}
			format(xstring,128,"Admin %p has locked /DM",playerid);
			SendClientMessageToAll(COLOR_ORANGE,xstring);
		}
		else
		{
			dmlock = false;
			format(xstring,128,"Admin %p has unlocked /DM",playerid);
			SendClientMessageToAll(COLOR_ORANGE,xstring);
		
		}
		
	}
	return 1;
}
CMD:dmkick(playerid,params[])
{
	new c=0;
	if(!IsPlayerAdminLevel(playerid,3)) return SendClientMessage(playerid,COLOR_RED,"Level 3 Admin Command Only.");
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(dm[i] != -1)
		{
			//dmq
			
			if(dm[playerid] == -1) return mSend3(playerid,"* You are not currently in dm zone");
			else
			{
				dm[playerid]=-1;
				ResetPlayerWeapons(playerid);
				ResetPlayerHealth(playerid);
				ResetPlayerArmor(playerid);
				SetPlayerVirtualWorld(playerid,0);
				SetMinigame(playerid,0);
				SpawnPlayer(playerid);	
			}
			c++;
		}
	}
	if(c == 0) return SendClientMessage(playerid,COLOR_ORANGE,"* No one currently playing /dm");
	format(xstring,128,"Admin %p (ID:%d) has kicked out players in /DM",playerid,playerid);
	SendClientMessageToAll(COLOR_ORANGE,xstring);
	return 1;
}
CMD:dm(playerid,params[])
{
	new p;
	if(dm[playerid] != -1) return SendClientMessage(playerid,COLOR_RED,"You are already in a DM!");
	if(dm[playerid] == -1 && GetMinigame(playerid) != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(dmlock == true) return mSend3(playerid,"* DeathMatch Zone is currently locked!");
	if(sscanf(params,"d",p)) return mSend3(playerid,"You must type /dm <1-9>");
	else if(p < 1 || p > 9) return mSend3(playerid,"You must type /dm <1-9>");
	else
	{
		SetPlayerVirtualWorld(playerid, 145 + p);
		SetPlayerHealth(playerid, 100.0);
		SetPlayerArmour(playerid, 100.0);
		SetPlayerInterior(playerid, 0);
		ResetPlayerWeapons(playerid);
	//	dm[playerid] = 1;
		if(p == 1)
		{
			SetPlayerPos(playerid, 305.6879, 2469.3713, 16.4738);
			GivePlayerWeapon(playerid, WEAPON:24, 9900);
			GivePlayerWeapon(playerid, WEAPON:25, 9900);
			DMw[playerid][0]=24;
			DMw[playerid][1]=25;
			SetCameraBehindPlayer(playerid);
			dm[playerid] = 1;
			format(xstring, 73, "? %s(ID:%d) has joined deathmatch 1. [/dm 1]", NickName[playerid],playerid);
		}
		if(p == 2)
		{
			SetPlayerPos(playerid, -2719.7667, 651.2858, 66.0938);
			GivePlayerWeapon(playerid, WEAPON:24, 9900);
			DMw[playerid][0]=24;
			DMw[playerid][1]=0;
			SetCameraBehindPlayer(playerid);
			dm[playerid] = 2;
			format(xstring, 73, "? %s(ID:%d) has joined deathmatch 2. [/dm 2]", NickName[playerid],playerid);
		}
		if(p == 3)
		{
			SetPlayerPos(playerid, 1559.869, 1269.8248, 10.8125);
			GivePlayerWeapon(playerid, WEAPON:27, 9900);
			GivePlayerWeapon(playerid, WEAPON:23, 9900);
			DMw[playerid][0]=27;
			DMw[playerid][1]=23;
			SetCameraBehindPlayer(playerid);
			dm[playerid] = 3;
			format(xstring, 73, "? %s(ID:%d) has joined deathmatch 3. [/dm 3]", NickName[playerid],playerid);
		}
		if(p == 4)
		{
			SetPlayerPos(playerid, -1570.563, -262.0246, 14.1484);
			GivePlayerWeapon(playerid, WEAPON:25, 9900);
			GivePlayerWeapon(playerid, WEAPON:34, 9900);
			DMw[playerid][0]=25;
			DMw[playerid][1]=34;
			SetCameraBehindPlayer(playerid);
			dm[playerid] = 4;
			format(xstring, 73, "? %s(ID:%d) has joined deatchmatch 4. [/dm 4]", NickName[playerid],playerid);
		}
		if(p == 5)
		{
			SetPlayerPos(playerid, -2124.9307, -265.0076, 35.3203);
			GivePlayerWeapon(playerid, WEAPON:24, 9900);
			GivePlayerWeapon(playerid, WEAPON:34, 9900);
			DMw[playerid][0]=24;
			DMw[playerid][1]=34;
			SetCameraBehindPlayer(playerid);
			dm[playerid] = 5;
			format(xstring, 73, "? %s(ID:%d) has joined deatchmatch 5. [/dm 5]", NickName[playerid],playerid);
		}
		if(p == 6)
		{
			SetPlayerPos(playerid, 1640.3093, -1078.3534, 23.8983);
			GivePlayerWeapon(playerid, WEAPON:25, 9900);
			DMw[playerid][0]=25;
			DMw[playerid][1]=0;
			SetCameraBehindPlayer(playerid);
			dm[playerid] = 6;
			format(xstring, 73, "? %s(ID:%d) has joined deatchmatch 6. [/dm 6]", NickName[playerid],playerid);
		}
		if(p == 7)
		{
			SetPlayerPos(playerid, 1640.3093, -1078.3534, 23.8983);
			GivePlayerWeapon(playerid, WEAPON:26, 9900);
			GivePlayerWeapon(playerid, WEAPON:28, 9900);
			DMw[playerid][0]=26;
			DMw[playerid][1]=28;
			SetCameraBehindPlayer(playerid);
			dm[playerid] = 7;
			format(xstring, 73, "? %s(ID:%d) has joined deatchmatch 7. [/dm 7]", NickName[playerid],playerid);
		}
		if(p == 8)
		{
			SetPlayerPos(playerid, 1640.3093, -1078.3534, 23.8983);
			GivePlayerWeapon(playerid, WEAPON:26, 9900);
			DMw[playerid][0]=26;
			DMw[playerid][1]=0;
			SetCameraBehindPlayer(playerid);
			dm[playerid] = 8;
			format(xstring, 73, "? %s(ID:%d) has joined deatchmatch 8. [/dm 8]", NickName[playerid],playerid);
		}
		if(p == 9)
		{
			SetPlayerPos(playerid, 1640.3093, -1078.3534, 23.8983);
			GivePlayerWeapon(playerid, WEAPON:28, 9900);
			DMw[playerid][0]=28;
			DMw[playerid][1]=0;
			SetCameraBehindPlayer(playerid);
			dm[playerid] = 9;
			format(xstring, 73, "? %s(ID:%d) has joined deatchmatch 9. [/dm 9]", NickName[playerid],playerid);
		}
		SetPlayerTeam(playerid, playerid);
		SendClientMessageToAll(0x00B0FFFF, xstring);	
		SetMinigame(playerid,145);
		SetPlayerVirtualWorld(playerid, 145 + dm[playerid]);
	}
	return 1;
}
CMD:dmq(playerid,params[])
{

	if(dm[playerid] == -1) return mSend3(playerid,"* You are not currently in dm zone");
	else
	{
		dm[playerid]=-1;
		ResetPlayerWeapons(playerid);
		ResetPlayerHealth(playerid);
		ResetPlayerArmor(playerid);
		SetPlayerVirtualWorld(playerid,0);
		SetMinigame(playerid,0);
		SpawnPlayer(playerid);	
	}
	return 1;
}

forward dmq(playerid);
public dmq(playerid)
{
	dm[playerid]=-1;
	ResetPlayerWeapons(playerid);
	ResetPlayerHealth(playerid);
	ResetPlayerArmor(playerid);
	SetPlayerVirtualWorld(playerid,0);
	SetMinigame(playerid,0);
	SpawnPlayer(playerid);	
	
	return 1;
}

//Duels
forward Duel_Initiate(player1,player2,time);
public Duel_Initiate(player1,player2,time)
{
    
	new count;
	count = time;
	count = count - 1;
	format(xstring,128,"~n~~n~~n~~n~~n~~r~~h~Starting in ~y~%d ~r~~h~seconds",count);
	GameTextForPlayer(player1,xstring,1200,3);
	GameTextForPlayer(player2,xstring,1200,3);
	if(count <= 0)
	{
	    if(!IsPlayerConnected(player1) || !IsPlayerConnected(player2)) return 1;

		PlayerPlaySound(player1,1057,0.0,0.0,0.0);
		TogglePlayerControllable(player1,true);
		GameTextForPlayer(player1,"~h~~h~FIGHT!",3000,3);
		GivePlayerWeapon(player1,WEAPON:DuelWeapon[player1][0],9900);
		GivePlayerWeapon(player1,WEAPON:DuelWeapon[player1][1],9900);
		IsDueling[player1] = true;
		DuelInvitation[player1] = player2;
		
		DuelStarting[player1] = false;
			
		DuelTicks[player1] = tickcount();
		DuelTicks[player2] = tickcount();
		DuelTicks[player1] = GetTickCount();
		DuelTicks[player2] = GetTickCount();
		
		PlayerPlaySound(player2,1057,0.0,0.0,0.0);
		TogglePlayerControllable(player2,true);
		GameTextForPlayer(player2,"~h~~h~FIGHT!",3000,3);
		GivePlayerWeapon(player2,WEAPON:DuelWeapon[player1][0],9900);
		GivePlayerWeapon(player2,WEAPON:DuelWeapon[player1][1],9900);
		IsDueling[player2] = true;
		DuelInvitation[player2] = player1;
  		
  		DuelStarting[player2] = false;
		

		ShowPlayerNameTagForPlayer(player1,player2,true);
		ShowPlayerNameTagForPlayer(player2,player1,true);

	}
	else SetTimerEx("Duel_Initiate",1000,false,"iiii",player1,player2,count);
	return 1;
}

forward Duel_EndWait(player1,player2);
public Duel_EndWait(player1,player2)
{
    
	if(IsDueling[player1] == false)
	{
	    SendClientMessage(player1,0xF7E91BFF,"[DUEL] invitation expired.");
	    DuelInvitation[player1] = -1;
		DuelWaiting[player1] = false;
	}
	if(IsDueling[player2] == false)
	{
	    SendClientMessage(player2,0xF7E91BFF,"[DUEL] invitation expired.");
	    DuelInvitation[player2] = -1;
		DuelWaiting[player2] = false;
	}
}

forward Duel_End(winner,loser,reason);
public Duel_End(winner,loser,reason)
{
    
	Duel_DestroyPlayerArena(winner);
	Duel_DestroyPlayerArena(loser);
    DuelStarting[winner] = false;
    IsDueling[winner] = false;
	SetMinigame(winner,0);
	SetMinigame(loser,0);

	DuelInvitation[winner] = -1;
	
	DuelWorld[winner] = 0;
	ResetPlayerHealth(winner);
	ResetPlayerArmor(winner);
	
	
	SpawnPlayer(winner);
	if(IsPlayerConnected(loser))
	{
	    DuelStarting[loser] = false;
    	IsDueling[loser] = false;
		
		DuelInvitation[loser] = -1;
		
		DuelWorld[loser] = 0;
		ResetPlayerHealth(loser);
		ResetPlayerArmor(loser);
		
		SpawnPlayer(loser);
	}

	new hour,minute,second,time[4],time_str[32];
	gettime(hour,minute,second);
	if(hour > 12){hour = hour-12;time = "PM";}else time = "AM";
	format(time_str,32,"\r\n[%2d:%2d:%2d %s]",hour,minute,second,time);
// mysql

	new Float:H,Float:A;GetPlayerHealth(winner,H);GetPlayerArmour(winner,A);
	new domination = floatround(H + A);
	InsertDuelResult(userID(winner),userID(loser),DuelWeapon[winner][0],DuelWeapon[winner][1],GetDuelTick(winner),domination);
	if(reason == 0)//loser disconnected
	{
	    format(xstring,sizeof(xstring),"[DUEL] \"%s\"  %s  \"%s\" ... (disconnected)  (%s & %s)",NickName[winner],DeathWords[random(DEATH_WORD_SIZE)],NickName[loser],NickName[loser],WeaponNames[DuelWeapon[winner][0]],WeaponNames[DuelWeapon[winner][1]]);
		SendClientMessageToAll(0x00FF77FF,xstring);
		format(xstring,sizeof(xstring),"0,5[DUEL] \"%s\" %s \"%s\" ... (disconnected) (%s & %s)",NickName[winner],DeathWords[random(DEATH_WORD_SIZE)],NickName[loser],NickName[loser],WeaponNames[DuelWeapon[winner][0]],WeaponNames[DuelWeapon[winner][1]]);

	}
	else if(reason == 1)//winner killed loser
	{
	    format(xstring,sizeof(xstring),"[DUEL] ...  \"%s\"  %s  \"%s\" ... (%.0f HP)  (%s & %s)",NickName[winner],DeathWords[random(DEATH_WORD_SIZE)],NickName[loser],H+A,WeaponNames[DuelWeapon[winner][0]],WeaponNames[DuelWeapon[winner][1]]);
		SendClientMessageToAll(0x00FF77FF,xstring);
		format(xstring,sizeof(xstring),"0,5DUEL * ... \"%s\" %s \"%s\" ... (%.0f HP) (%s & %s)",NickName[winner],DeathWords[random(DEATH_WORD_SIZE)],NickName[loser],H+A,WeaponNames[DuelWeapon[winner][0]],WeaponNames[DuelWeapon[winner][1]]);


	}
	else if(reason == 2)//forfeit
	{
	    format(xstring,sizeof(xstring),"[DUEL] ... \"%s\" vs \"%s\" ended ... (%s forfeited)  (%s & %s)",NickName[winner],NickName[loser],NickName[loser],WeaponNames[DuelWeapon[winner][0]],WeaponNames[DuelWeapon[winner][1]]);
		SendClientMessageToAll(0x00FF77FF,xstring);
		format(xstring,sizeof(xstring),"0,5DUEL * ... \"%s\" vs \"%s\" ended ... (%s forfeited) (%s & %s)",NickName[winner],NickName[loser],NickName[loser],WeaponNames[DuelWeapon[winner][0]],WeaponNames[DuelWeapon[winner][1]]);


	}
	else//other reason
	{
	    format(xstring,sizeof(xstring),"[DUEL] ... \"%s\" vs \"%s\" ended ... (interference)  (%s & %s)",NickName[winner],NickName[loser],WeaponNames[DuelWeapon[winner][0]],WeaponNames[DuelWeapon[winner][1]]);
		SendClientMessageToAll(0x00FF77FF,xstring);
		format(xstring,sizeof(xstring),"0,5DUEL * ... \"%s\" vs \"%s\" ended ... (interference) (%s & %s)",NickName[winner],NickName[loser],WeaponNames[DuelWeapon[winner][0]],WeaponNames[DuelWeapon[winner][1]]);

	}
	return 1;
}
Duel_RandomizeSigns(playerid)
{
    for(new i; i < 97; i++)
	{
	    DuelPlayerSign[playerid][i] = random(10);
	}
	return 1;
}

forward Duel_CreatePlayerArena(playerid,num);
public Duel_CreatePlayerArena(playerid,num)
{
    
	if(DuelArenaCreated[playerid] == false)
	{

	    for(new i; i < 12; i++)
		{
		    pDuelObj[playerid][i] = CreatePlayerObject(playerid,floatround(DuelObj[i][0]),DuelObj[i][1],DuelObj[i][2],DuelObj[i][3],DuelObj[i][4],DuelObj[i][5],DuelObj[i][6]);
		}
		for(new i; i < 97; i++)
		{
		    pDuelObj[playerid][i+12] = CreatePlayerObject(playerid,DuelBillboards[DuelPlayerSign[num][i]],DuelDynamicObj[i][0],DuelDynamicObj[i][1],DuelDynamicObj[i][2],DuelDynamicObj[i][3],DuelDynamicObj[i][4],DuelDynamicObj[i][5]);
		}
		DuelArenaCreated[playerid] = true;
	}
	return 1;
}

Duel_DestroyPlayerArena(playerid)
{
    
    if(DuelArenaCreated[playerid] == true)
	{
    	for(new i; i < 109; i++)
		{
			DestroyPlayerObject(playerid,pDuelObj[playerid][i]);
		}
		DuelArenaCreated[playerid] = false;
	}
	return 1;
}

stock mSend1(playerid,const msg[]) return SendClientMessage(playerid,0xF7AF43FF,msg);
stock mSend2(playerid,const msg[]) return SendClientMessage(playerid,0xAEA1F0FF,msg);
stock mSend3(playerid,const msg[]) return SendClientMessage(playerid,0xF7E91BFF,msg);
stock mSend4(playerid,const msg[]) return SendClientMessage(playerid,0xC259FFFF,msg);
stock mSend5(playerid,const msg[]) return SendClientMessage(playerid,0x00FF77FF,msg);

GetWeaponModelIDFromName(const wname[])
{
    
    if(strlen(wname) <= 2 && IsNumeric(wname))return -1;
	for(new i; i < 47; i++)
	{
		if(i == 19 || i == 20 || i == 21)continue;
		if(strfind(WeaponNames[i], wname, true) != -1)
		{
			return i;
		}
	}
	return -1;
}

Duel_SetPlayerPos(spot,playerid)
{
	if(spot == 0)
	{
	        SetPlayerPos(playerid,DuelPos[0][0],DuelPos[0][1],DuelPos[0][2]);
			SetPlayerFacingAngle(playerid,DuelPos[0][3]);
	}
	if(spot == 1)
	{
	        SetPlayerPos(playerid,DuelPos[1][0],DuelPos[1][1],DuelPos[1][2]);
			SetPlayerFacingAngle(playerid,DuelPos[1][3]);
	}
	return 1;
}

ResetPlayerArmor(playerid)
{
	SetPlayerArmour(playerid,100);
}

ResetPlayerHealth(playerid)
{
	SetPlayerHealth(playerid,100);
}

ReturnPlayerID(const PlayerName[],value)
{
	if(IsPlayerConnected(value))return value;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(strfind(NickName[i],PlayerName,true) != -1)return i;
	}
	return value;
}
//IsNumeric(string[]) { for (new i = 0, j = strlen(string); i < j; i++) if((string[i] > '9' || string[i] < '0') && string[0] != '-') return 0; return 1; }

GetDuelTick(playerid)
{
	new tick, dticks;
	tick=GetTickCount();
	dticks=tick-DuelTicks[playerid];
	return dticks;
}
InsertDuelResult(winner,loser,weapon1,weapon2,ticks,domination)
{
	new str[256];
	format(str,sizeof(str), "INSERT INTO `duel`(`winner`, `loser`, `weapon1`, `weapon2`, `ticks`, `domination`) VALUES (%d,%d,%d,%d,%d,%d)",winner,loser,weapon1,weapon2,ticks,domination);
	mysql_query(SQL,str);
	return 1;
}

CMD:afob(playerid,params[])
{
	if(Players[playerid][afob] == true)
	{
	    Players[playerid][afob] = false;
	    SendClientMessage(playerid,COLOR_GREEN,"* Anti Fall off Bike OFF.");
	}
	else
	{
 		Players[playerid][afob] = true;
	    SendClientMessage(playerid,COLOR_GREEN,"* Anti Fall off Bike ON.");
	}
	return 1;
}

CMD:bounty(playerid,params[])
{
	new id,amnt;
	if(sscanf(params,"ud",id,amnt)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /bounty <playername/id> <cash>");
	if(Players[id][bounty] != 0) return SendClientMessage(playerid,COLOR_RED,"There is already a bounty on that player.");
	if(amnt < 0) return SendClientMessage(playerid,COLOR_RED,"You cannot set a negative bounty.");
	if(IsPlayerConnected(id))
	{
		if(GetPlayerCash(playerid) >= amnt)
		{
			new str[100],n1[21],n2[21];
			GetPlayerName(playerid,n1,sizeof n1);
			GetPlayerName(id,n2,sizeof n2);
			format(str,sizeof str,"* %s (ID:%d) has set a bounty of $%d on %s (ID:%d)",n1,playerid,amnt,n2,id);
			SendClientMessageToAll(COLOR_LIGHTBLUE,str);
			TakePlayerCash(playerid,amnt);
			Players[id][bounty] = amnt;
		}  else SendClientMessage(playerid,COLOR_RED,"You need more money");
	}   else SendClientMessage(playerid,COLOR_RED,"Player not connected");
	return 1;
}


CMD:spinslots(playerid,params[])
{
	new num,num2,num3;
	num = random(2);
	num2 = random(2);
	num3 = random(3);
	new str[15];
	format(str,sizeof str,"%d %d %d",num,num2,num3);
	SendClientMessage(playerid,COLOR_WHITE,str);
	if(num == num2 && num2 == num3)
	{
	    SendClientMessage(playerid,COLOR_WHITE,"* Winner! +5 Tokens");
		Players[playerid][Token]+=5;
	}
	return 1;
}

CMD:deposit(playerid,params[])
{
	new cash;
	if(sscanf(params,"d",cash)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /deposit <amount>");
	if(GetPlayerCash(playerid) >= cash)
	{
	    if(cash == 2147483647 || GetPlayerCash(playerid) + cash >= 2147483647)
	    {
			return SendClientMessage(playerid,COLOR_RED,"Your bank is full.");
	    }
	    Players[playerid][banked] += cash;
	    TakePlayerCash(playerid,cash);
	    SendClientMessage(playerid,COLOR_GREEN,"* Transaction Complete.");
	}   else SendClientMessage(playerid,COLOR_RED,"You need more cash!");
	return 1;
}

CMD:balance(playerid,params[])
{
	format(xstring,sizeof xstring,"Bank Balance: $%d", Players[playerid][banked]);
	SendClientMessage(playerid,COLOR_GREEN,xstring);
	return 1;
}

CMD:withdraw(playerid,params[])
{
	new cash;
	if(sscanf(params,"d",cash)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /withdraw <amount>");
	if(Players[playerid][banked] >= cash)
	{
	    Players[playerid][banked] -= cash;
	    GivePlayerCash(playerid,cash);
	    SendClientMessage(playerid,COLOR_GREEN,"* Transaction Complete.");
	}   else SendClientMessage(playerid,COLOR_RED,"You need more cash!");
	return 1;
}


CMD:hideradar(playerid,params[])
{
	for(new i;i<MAX_PLAYERS;i++)
	{
    	SetPlayerMarkerForPlayer(playerid, i, ( GetPlayerColor( i ) & 0xFFFFFF00 ) );
    }
    GameTextForPlayer(playerid,"~g~radar hidden",300,1);
	return 1;
}

CMD:showradar(playerid,params[])
{
	for(new i;i<MAX_PLAYERS;i++)
	{
    	SetPlayerMarkerForPlayer(playerid, i, ( GetPlayerColor( i ) & GetPlayerColor( i ) ) );
    }
    GameTextForPlayer(playerid,"~g~radar shown",300,1);
	return 1;
}
CMD:cloak(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,1) || !IsVIPLevel2(playerid)) return SendClientMessage(playerid,COLOR_RED,"Level 4 Admin Command Only.");
	for(new i;i<MAX_PLAYERS;i++)
	{
    	SetPlayerMarkerForPlayer(i, playerid, ( GetPlayerColor( playerid ) & 0xFFFFFF00 ) );
    }
    SendClientMessage(playerid,COLOR_YELLOW,"Cloak Activated. You are now hidden from the radar");
    format(xstring,sizeof(xstring),"* %p (ID:%d) used /cloak to hide them from the radar.",playerid,playerid);
	Chat_SendMessageToAdmins(COLOR_YELLOW,1,xstring);
	return 1;
}

CMD:uncloak(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,1) || !IsVIPLevel2(playerid)) return SendClientMessage(playerid,COLOR_RED,"Level 4 Admin Command Only.");
	for(new i;i<MAX_PLAYERS;i++)
	{
    	SetPlayerMarkerForPlayer(i, playerid, ( GetPlayerColor( playerid ) & GetPlayerColor( playerid ) ) );
    }
    SendClientMessage(playerid,COLOR_YELLOW,"Cloak Desactivated. You are now showen on the radar");
    format(xstring,sizeof(xstring),"* %p (ID:%d) used /uncloak to show themself on the radar.",playerid,playerid);
	Chat_SendMessageToAdmins(COLOR_YELLOW,1,xstring);
	return 1;
}


CMD:healme(playerid,params[])
{
	if(Players[playerid][Token] >= 30)
	{
	    if(Players[playerid][canhealme] == false) return SendClientMessage(playerid,COLOR_RED,"You can only use /healme once per spawn.");
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		SetPlayerHealth(playerid,100);
		Players[playerid][Token]-=30;
		GameTextForPlayer(playerid,"~g~healed!",500,3);
		format(xstring,sizeof(xstring),"* Player %p (ID:%d) used /healme to set their health to 100.",playerid,playerid);
		Chat_SendMessageToAdmins(COLOR_GREEN,1,xstring);
		
		Players[playerid][canhealme] = false;
	}   else SendClientMessage(playerid,COLOR_GREY,"You need 30 tokens or more");
	return 1;
}

CMD:altitude(playerid,params[])
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	format(xstring,sizeof xstring,"Your altitude is %0.1f meters",z);
	SendClientMessage(playerid,COLOR_GREY,xstring);
	return 1;
}



CMD:mypos(playerid,params[])
{
	new Float:x,Float:y,Float:z,Float:a;
	GetPlayerFacingAngle(playerid,a);
	GetPlayerPos(playerid,x,y,z);
	format(xstring,sizeof xstring,"X: %0.2f | Y: %0.2f | Z: %0.2f | FA: %0.2f",x,y,z,a);
	SendClientMessage(playerid,COLOR_GREY,xstring);
	format(xstring,sizeof xstring,"Interior %d",GetPlayerInterior(playerid));
	SendClientMessage(playerid,COLOR_GREY,xstring);
	return 1;
}

CMD:whatsmyip(playerid,params[])
{
	new ip[16];
	GetPlayerIp(playerid,ip,sizeof ip);
	SendClientMessage(playerid,COLOR_GREY,ip);
	return 1;
}

CMD:whatsnew(playerid,params[])
{
	ShowPlayerDialog(playerid,35,DIALOG_STYLE_MSGBOX,"Whats New","For a list of our new features, visit:\nrevolutionxserver.com","Cool!","");
	return 1;
}

CMD:neon(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		ShowPlayerDialog(playerid, NeonDiag, DIALOG_STYLE_LIST, "Neon Color: ", "Dark Blue\nRed\nGreen\nWhite\nViolet\nYellow\nCyan\nLight Blue\nPink\nOrange\nLight Green\nLight Yellow\nDelete Neon", "Select", "Cancel");
	}
	return 1;
}

CMD:neons(playerid,params[]) return cmd_neon(playerid,params);
CMD:rneon(playerid,params[])
{
	if(isNeonON[playerid]==true)
	{
		cNeon[playerid]=-1;
		isNeonON[playerid]=false;
		DestroyObject(neons[playerid][0]);
		DestroyObject(neons[playerid][1]);
		DestroyObject(neons[playerid][2]);
		DestroyObject(neons[playerid][3]);
		GameTextForPlayer(playerid,"~w~Neon ~r~Removed!",1000,3);
	}	else SendClientMessage(playerid,0xFF0000AA,"* Neon is not installed. type /neon to install!");
	return 1;
}
CMD:bandana(playerid,params[])
{
	ShowPlayerDialog(playerid,bandanaDIAG,DIALOG_STYLE_LIST,"Bandana","Bandana 1\nBandana 2\nBandana 3\nBandana 4\nBandana 5\nBandana 6\nBandana 7\nBandana 8\nBandana 9\nBandana 10\nRemove Bandana","OK","");
	return 1;
}

CMD:band(playerid,params[]) return cmd_bandana(playerid,params);

CMD:glasses(playerid,params[])
{
	ShowPlayerDialog(playerid,GlassesDIAG,DIALOG_STYLE_LIST,"Glasses","Glasses Type 1 \nGlasses Type 2 \nGlasses Type 3 \nGlasses Type 4 \nGlasses Type 5 \nGlasses Type 6 \nGlasses Type 7 \nGlasses Type 8 \nGlasses Type 9 \nGlasses Type 10\nRemove Glasses \nNext Page","Select","Close");
	return 1;
}

CMD:wheels(playerid,params[]) return ShowPlayerDialog(playerid,2807,DIALOG_STYLE_MSGBOX,"RevolutionX","Wheel Changer Commands:\n/mega , /virtualwheels , /shadow , /dollar , /atomic , /twist\n/cutter , /rims, /classic, /switchwheels, /import\n/trance , /offroad","Ok","");
CMD:offroad(playerid,params[])
{
    //if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1025);
	return 1;
}
CMD:tune(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GotoPosition(playerid,-1935.5961,226.1674,33.8834,true);
	return 1;
}




CMD:radio(playerid,params[])
{
        format(xstring, sizeof(xstring),"Rap Metal\nClassic Rock\nClassic Hard Rock\nClassic Metal\n60s Rock\n80s Rock\n90s Rock\nModern Rock\nHard Rock\nHarder Rock\nSoft Rock\nPop Rock");
        format(xstring, sizeof(xstring),"\n90s Alternative\n80s Alternative\nBlues Rock\nRock Ballads\nHair Bands\nBeatles Tribute\nMetal\nHeavy Metal\nDeath Metal");
        format(xstring, sizeof(xstring),"\nPower Metal\nSymphonic Metal\nProgressive Metal\nNu Metal\nPunk Rock\nHardcore\nMetalcore\nThrash Metal\nDeathcore\nIndie Rock");
        format(xstring, sizeof(xstring),"\nPop Punk\nProgressive Rock\nScreamo-Emo\nSka\nJam Bands\nBlack Metal\nMelodic Death Metal");
        ShowPlayerDialog(playerid, 6969, DIALOG_STYLE_LIST, "{FFFFFF}Rx Radio v2",xstring,"Listen", "Close");
        return 1;
}

CMD:setmyradio(playerid,params[])
{
	new radioLink[70];
	if(sscanf(params,"s[70]",radioLink)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setmyradio <radio http link>");
	GameTextForPlayer(playerid,"~r~radio set",800,3);

	format(xstring, sizeof(xstring), "UPDATE `users` SET `radio` = '%s' WHERE `Name` = '%p'",radioLink,playerid);
	mysql_query(SQL,xstring);
	return 1;
}


CMD:myradio(playerid,params[])
{
	new radioLink[70];
	
	format(xstring, sizeof(xstring), "SELECT `radio` FROM `users` WHERE `Name` = '%p' LIMIT 1", playerid);
	mysql_query(SQL,xstring);
	
	if(cache_num_rows() > 0)
	{
		cache_get_value_name(0,"radio",radioLink);
		PlayAudioStreamForPlayer(playerid,radioLink);
		GameTextForPlayer(playerid,"~r~radio on",800,3);
	}   else SendClientMessage(playerid,COLOR_RED,"You never saved a radio station! /setmyradio");
	return 1;
}

CMD:stopradio(playerid,params[])
{
	StopAudioStreamForPlayer(playerid);
	return 1;
}

CMD:tradein(playerid,params[])
{
	ShowPlayerDialog(playerid,27,DIALOG_STYLE_LIST,"Killstreak Trade-Ins","$100 (2 Kills)\n$500 (4 Kills)\n$1000 (8 Kills)\n$2000 (15 Kills)\n500 Ammo (5 Kills)","Buy","Cancel");
	return 1;
}

CMD:topplayers(playerid,params[])
{
	new i = GetPlayerMostScore();
 	new r = GetPlayerMostRacesWon();
 	new m = GetPlayerMostCash();
 	new c = GetPlayerMostCTF();
 	new str[150];
  	if(i != -1)
   	{
		format(str,sizeof str,"Most Kills: %s",	GetPName(i));
   	}
    if(r != -1)
    {
		format(str,sizeof str,"%s\nMost Races Won: %s",str,GetPName(r));
   	}
   	if(m != -1)
   	{
   	    format(str,sizeof str,"%s\nRichest Player: %s",str,GetPName(m));
   	}
   	if(c != -1)
   	{
   	    format(str,sizeof str,"%s\nMost CTF Wins: %s",str,GetPName(m));
   	}

   	if(strlen(str) > 0)
   	{
   		ShowPlayerDialog(playerid,26,DIALOG_STYLE_MSGBOX,"Top Players (As of Now):",str,"Ok","Cancel");
   	}   else SendClientMessage(playerid,COLOR_RED,"** There are no top players!");
   	return 1;
}

CMD:leavemg(playerid,params[]) return cmd_leavedm(playerid,params);
CMD:leavedm(playerid,params[])
{
	// reserved
	if(Players[playerid][Minigame] == 147) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][Minigame] == 148) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][Minigame] == 701) return SendClientMessage(playerid,COLOR_RED,"You must finish the game first.");
	// ??
	if(Players[playerid][Minigame] == 22) return SendClientMessage(playerid,COLOR_RED,"* Finish the game.");
	// jail
	if(Players[playerid][Minigame] == -1) return SendClientMessage(playerid,COLOR_RED,"* You are in jail!");
	if(Players[playerid][Minigame] != 0)
	{
		if(Players[playerid][Minigame] == 144)
		{
			//DUELleave		
			if(IsDueling[playerid] == true) Duel_End(DuelInvitation[playerid],playerid,2);	
		}
		if(Players[playerid][Minigame] == 146) 
		{
			if(TT_ID[playerid] != -1 && (ttCD[playerid] != 0)) return SendClientMessage(playerid,COLOR_RED,"** TT  Race Countdown in Process! Please wait to use this command");
			return TT_Exit(playerid);
		}
		if(Players[playerid][Minigame] == 145)
		{
			//dmq3	
			if(dm[playerid] == -1) return mSend3(playerid,"* You are not currently in dm zone");
			else
			{
				dm[playerid]=-1;
				ResetPlayerWeapons(playerid);
				ResetPlayerHealth(playerid);
				ResetPlayerArmor(playerid);
				SetPlayerVirtualWorld(playerid,0);
				SetMinigame(playerid,0);
				SpawnPlayer(playerid);	
			}		
		}
	    switch(Players[playerid][Minigame])
	    {
	        //case 30: Players[playerid][allowmg] = false;
	        case 75:
	        {
		 		Players[playerid][autofix] = true;
		 		SendClientMessage(playerid,COLOR_GREY,"** AUTOFIX TURNED BACK ON");
	        }
	    }
	    SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		ResetPlayerWeapons(playerid);
	    Players[playerid][Minigame] = 0;
		SpawnPlayer(playerid);
		SendClientMessage(playerid,COLOR_GREY,"** You left the minigame you were in.");
		
		if(TDrif[playerid] == true)
		{
			TDrif[playerid] = false;
			DestroyTextDraws(playerid);
			//SendClientMessage(playerid,-1,"Drift Mode {FF00FF}OFF");
			TDriftPointsNow[playerid] = 0; PlayerDriftCancellation[playerid] = 0;
			TextDrawHideForPlayer(playerid,TDDrift[playerid]);
			DriftBonus[playerid]=1;
			TextDrawSetString(TDDrift[playerid]," ");
			DriftPointsNow[playerid] = 0;
			TextDrawHideForPlayer(playerid,TDDrift[playerid]);
			KillTimer(eDriftTimer[playerid]);
			KillTimer(TimerA[playerid]);
			KillTimer(TimerC[playerid]);
			TimeLeft[playerid] = 180;
			Players[playerid][Minigame] = 0;
			SpeedBoostDisabled[playerid] = false;
			SetPlayerVirtualWorld(playerid, 0);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
		}
 	}
    return 1;
}

CMD:changepass(playerid,params[])
{
	return cmd_setpass(playerid,params);
}

CMD:setpass(playerid,params[])
{
	new name[20],pass[40];
	if(sscanf(params,"s[40]",pass)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /setpass <password>");
	GetPlayerName(playerid,name,sizeof(name));
    if (Players[playerid][Logged] == false) return SendClientMessage(playerid,COLOR_RED,"You are not logged in!");
	if (strlen(params) > 25) return SendClientMessage(playerid,COLOR_RED,"Your password is too long.");
	new tmp[100];
	GetPlayerName(playerid,name,sizeof(name));
	// is this the correct syntax? i'm pretty sure i heard players
	format(tmp, sizeof(tmp), "UPDATE `users` SET `Password` = md5('%s') WHERE `Name` = '%s'",params,name);
	mysql_query(SQL,tmp);
	format(tmp,sizeof tmp,"%s has changed thier password.",name);
	SendMessageToAdmins(playerid,2,COLOR_AMSG,tmp);
	SendClientMessage(playerid,COLOR_WHITE,"** Password changed!");
    return 1;
 	//UPDATE `users` SET `IPAddress` = '%s' WHERE `Name` = '%s'
}

CMD:sendcash(playerid, params[]) return cmd_givecash(playerid, params);
CMD:givecash(playerid, params[])
{
	new giveplayerid, amount;
	if (sscanf(params, "ud", giveplayerid, amount)) SendClientMessage(playerid, 0xFF0000AA, "Usage: /givecash [playerid/playername] [amount]");
	else if (giveplayerid == INVALID_PLAYER_ID) SendClientMessage(playerid, COLOR_RED, "That player is not connected");
	else if (giveplayerid == playerid) return SendClientMessage(playerid,COLOR_RED,"You cant give yourself money as you already have it?");
	else if (amount > GetPlayerCash(playerid)) SendClientMessage(playerid, 0xFF0000AA, "You dont have enough money");
	else if (amount < 0) SendClientMessage(playerid, 0xFF0000AA, "You give give zero $ to a player");
	else
	{
		if(Players[playerid][AC_MoneyAlerts] > 0)
		{
			format(xstring,sizeof(xstring),"AC (Warning): Detected Illegal money transfer (By %p (ID:%d))",playerid,playerid);
			SendMessageToAdmins(playerid,2,COLOR_AC,xstring);
			return 1;
		}
		format(xstring, sizeof(xstring),"You recieved $%d from player %p",amount,playerid);
		SendClientMessage(giveplayerid,COLOR_AQUA,xstring);
        format(xstring, sizeof(xstring),"You gave $%d to player %p",amount,giveplayerid);
        SendClientMessage(playerid,COLOR_AQUA,xstring);
        PlayerPlaySound(playerid,1057,0,0,0);
        PlayerPlaySound(giveplayerid,1057,0,0,0);
        SetPlayerCash(giveplayerid, GetPlayerCash(giveplayerid) + amount);
		TakePlayerCash(playerid,amount);
		
		format(xstring,sizeof xstring,"[$] %p (ID:%d) gave %p (ID:%d) $%d",playerid, playerid,giveplayerid ,giveplayerid , amount);
		Chat_SendMessageToAdmins(COLOR_AMSG,1,xstring);
	}
	return 1;
}


CMD:colorcar(playerid,params[])
{
	return cmd_cc(playerid,params);
}


CMD:de(playerid,params[])
{
	return cmd_detonate(playerid,params);
}

CMD:detonate(playerid,params[])
{
	if(IsPlayerInAnyDynamicArea(playerid))
	{
		format(xstring,sizeof(xstring),"Avoid Spawnkill: %p (ID: %d) tried to use /detonate near spawn",playerid,playerid);
		Chat_SendMessageToAdmins(COLOR_RED,1,xstring);
		return 1;
	}
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_RED,"You must be the driver of a vehicle!");
    new v = GetPlayerVehicleID(playerid);
	SendClientMessage(playerid,COLOR_GREEN,"> Your vehicle will detonate in 10 seconds.");
	SetTimerEx("Detonate",10000,FALSE,"dd",playerid,v);
	return 1;
}

forward Detonate(playerid,v);
public Detonate(playerid,v)
{
	new Float:x,Float:y,Float:z;
	GetVehiclePos(v,x,y,z);
	CreateExplosion(x,y,z,11,3);
	SendClientMessage(playerid,COLOR_GREEN,"> BOOM! Your vehicle exploded.");
	return 1;
}

CMD:cc(playerid,params[])
{
	new c1,c2;
	if(sscanf(params,"dd",c1,c2))
	{
		SendClientMessage(playerid,COLOR_RED,"* Usage: /cc <color id 1> <color id 2>");
		return 1;
	}
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You must be in a vehicle first!");
    new v = GetPlayerVehicleID(playerid);
	ChangeVehicleColours(v,c1,c2);
	GameTextForPlayer(playerid,"~g~Vehicle Painted",800,3);
	PlayerPlaySound(playerid,1134,0,0,0);
	return 1;
}

CMD:back(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(GetPVarInt(playerid,"AFK") == 0) return SendClientMessage(playerid,COLOR_RED,"You are not afk!");
	if(IsVIPLevel2(playerid))
	{
		format(xstring, sizeof(xstring), "VIP %p (ID:%d) is now back from being AFK.",playerid,playerid);
    	SendClientMessageToAll(COLOR_GREEN,xstring);
	    SetPVarInt(playerid,"AFK",0);
	    Players[playerid][God] = false;
	    SetPlayerHealth(playerid,100);
	    PlayerPlaySound(playerid,1054,0,0,0);
	    TogglePlayerControllable(playerid, true);
	    return 1;
	}
	if(IsAdmin(playerid))
 	{
  		format(xstring, sizeof(xstring), "Admin %p (ID:%d) is now back from being AFK.",playerid,playerid);
    	SendClientMessageToAll(COLOR_GREEN,xstring);
	    SetPVarInt(playerid,"AFK",0);
	    Players[playerid][God] = false;
	    SetPlayerHealth(playerid,100);
	    PlayerPlaySound(playerid,1054,0,0,0);
	    TogglePlayerControllable(playerid, true);
    }
  	else
   	{
		format(xstring, sizeof(xstring), "Player %p (ID:%d) is now back from being AFK.",playerid,playerid);
  		SendClientMessageToAll(COLOR_GREEN,xstring);
	    SetPVarInt(playerid,"AFK",0);
	    PlayerPlaySound(playerid,1054,0,0,0);
	    TogglePlayerControllable(playerid, true);
    }
	return 1;
}


CMD:afk(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new rsn[40];
	if(GetPVarInt(playerid,"AFK") == 1) return SendClientMessage(playerid,COLOR_RED,"You are already afk!");
	if (sscanf(params, "s[40]",rsn))
	{
	    if(IsVIPLevel2(playerid))
	    {
	  		format(xstring, sizeof(xstring), "VIP %p (ID:%d) is now AFK.",playerid,playerid);
	    	SendClientMessageToAll(COLOR_GREEN,xstring);
			SendClientMessage(playerid,COLOR_GREEN,"Your GodMode was turned on as you are now afk.");
	  		SetPVarInt(playerid,"AFK",1);
			Players[playerid][God] = true;
			PlayerPlaySound(playerid,1054,0,0,0);
			return 1;
	    }
		if(IsAdmin(playerid))
	 	{
	  		format(xstring, sizeof(xstring), "Admin %p (ID:%d) is now AFK.",playerid,playerid);
	    	SendClientMessageToAll(COLOR_GREEN,xstring);
			SendClientMessage(playerid,COLOR_GREEN,"Your GodMode was turned on as you are now afk.");
	  		SetPVarInt(playerid,"AFK",1);
			Players[playerid][God] = true;
			PlayerPlaySound(playerid,1054,0,0,0);
	  	}
	   	else
	    {
	   		format(xstring, sizeof(xstring), "Player %p (ID:%d) is now AFK.",playerid,playerid);
		    SendClientMessageToAll(COLOR_GREEN,xstring);
		    SetPVarInt(playerid,"AFK",1);
		    PlayerPlaySound(playerid,1054,0,0,0);
	   	}
	   	
	   	TogglePlayerControllable(playerid, false);
	   	SetPlayerChatBubble(playerid,"I AM AFK",COLOR_WHITE,100,120000); //2 mins
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		SetPlayerPos(playerid,x,y, z + 15);
	}
	else
	{
		if(GetPVarInt(playerid,"AFK") == 1) return SendClientMessage(playerid,COLOR_RED,"You are already afk!");
		if(IsVIPLevel2(playerid))
		{
			format(xstring, sizeof(xstring), "VIP %p (ID:%d) is now AFK. (%s)",playerid,playerid,rsn);
	    	SendClientMessageToAll(COLOR_GREEN,xstring);
			SendClientMessage(playerid,COLOR_GREEN,"Your GodMode was turned on as you are now afk.");
	  		SetPVarInt(playerid,"AFK",1);
			Players[playerid][God] = true;
			PlayerPlaySound(playerid,1054,0,0,0);
			return 1;
		}
		if(IsAdmin(playerid))
	 	{
	  		format(xstring, sizeof(xstring), "Admin %p (ID:%d) is now AFK. (%s)",playerid,playerid,rsn);
	    	SendClientMessageToAll(COLOR_GREEN,xstring);
			SendClientMessage(playerid,COLOR_GREEN,"Your GodMode was turned on as you are now afk.");
	  		SetPVarInt(playerid,"AFK",1);
			Players[playerid][God] = true;
			PlayerPlaySound(playerid,1054,0,0,0);
	  	}
	   	else
	    {
	   		format(xstring, sizeof(xstring), "Player %p (ID:%d) is now AFK. (%s)",playerid,playerid,rsn);
		    SendClientMessageToAll(COLOR_GREEN,xstring);
		    SetPVarInt(playerid,"AFK",1);
		    PlayerPlaySound(playerid,1054,0,0,0);
	   	}
	   	
	   	TogglePlayerControllable(playerid, false);
	   	SetPlayerChatBubble(playerid,"I AM AFK",COLOR_WHITE,100,120000); //2 mins
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		SetPlayerPos(playerid,x,y, z + 15);
	}
	SendClientMessage(playerid,COLOR_GREEN,"* You can be back from AFK by using /back");
   	return 1;
}

CMD:eject(playerid,params[])
{
	new id;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"/eject <playerid/playername>");
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected!");
	new carid = GetPlayerVehicleID(playerid);
	if(IsPlayerInVehicle(id,carid))
	{
	    if(IsAdmin(id)) return SendClientMessage(playerid,COLOR_RED,"You cant eject an admin from your car.");
	    SendClientMessage(playerid,COLOR_GREY,"Player Ejected From Vehicle.");
	    RemovePlayerFromVehicle(id);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You cant eject that player from your car.");
	return 1;
}

CMD:alarm(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle! /car");
	new v = GetPlayerVehicleID(playerid);
 	new bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
  	GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
  	switch(alarm)
  	{
  	    case false:
  	    {
      		SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,engine,true,doors,bonnet,boot,objective);
  	    }

  	    case true:
  	    {
  	        SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,engine,false,doors,bonnet,boot,objective);
  	    }

  	}
	return 1;
}


CMD:boot(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle! /car");
	new v = GetPlayerVehicleID(playerid);
 	new bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
  	GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
  	switch(boot)
  	{
  	    case false:
  	    {
      		SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,engine,alarm,doors,bonnet,true,objective);
      		GameTextForPlayer(playerid,"~w~boot on",500,3);
  	    }

  	    case true:
  	    {
  	        SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,engine,alarm,doors,bonnet,false,objective);
  	        GameTextForPlayer(playerid,"~w~boot off",500,3);
  	    }

  	}
	return 1;
}

CMD:bonnet(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle! /car");
	new v = GetPlayerVehicleID(playerid);
 	new bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
  	GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
  	switch(bonnet)
  	{
  	    case false:
  	    {
      		SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,engine,alarm,doors,true,boot,objective);
      		GameTextForPlayer(playerid,"~w~bonnet on",500,3);
  	    }

  	    case true:
  	    {
  	        SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,engine,alarm,doors,false,boot,objective);
  	        GameTextForPlayer(playerid,"~w~bonnet off",500,3);
  	    }

  	}
	return 1;
}

CMD:engine(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle! /car");
	new v = GetPlayerVehicleID(playerid);
 	new bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
  	GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
  	switch(engine)
  	{
  	    case false:
  	    {
      		SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,true,alarm,doors,bonnet,boot,objective);
      		GameTextForPlayer(playerid,"~w~engine on",500,3);
  	    }

  	    case true:
  	    {
  	        SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,false,alarm,doors,bonnet,boot,objective);
  	        GameTextForPlayer(playerid,"~w~engine off",500,3);
  	    }

  	}
	return 1;
}

CMD:doors(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle! /car");
	new v = GetPlayerVehicleID(playerid);
 	new bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
  	GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
  	switch(doors)
  	{
  	    case false:
  	    {
      		SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,engine,alarm,true,bonnet,boot,objective);
  	    }

  	    case true:
  	    {
  	        SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,engine,alarm,false,bonnet,boot,objective);
  	    }

  	}
	return 1;
}

CMD:lights(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle! /car");
	new v = GetPlayerVehicleID(playerid);
 	new bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
  	GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
  	switch(lights)
  	{
  	    case false:
  	    {
      		SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,true,alarm,doors,bonnet,boot,objective);
  	    }

  	    case true:
  	    {
  	        SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,false,alarm,doors,bonnet,boot,objective);
  	    }

  	}
	return 1;
}

CMD:beer(playerid,params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
	return 1;
}

CMD:uncuff(playerid,params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	return 1;
}


CMD:cuffme(playerid,params[])
{
	SendClientMessage(playerid,COLOR_WHITE,"* Cuffed. Type /uncuff to uncuff yourself.");
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CUFFED);
	return 1;
}

CMD:sprunk(playerid,params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
	return 1;
}

CMD:sober(playerid,params[])
{
	SetPlayerDrunkLevel(playerid,0);
	return 1;
}

CMD:para(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SendClientMessage(playerid,COLOR_SYSTEM,"Parachute Recieved.");
 	GivePlayerWeapon(playerid,WEAPON:46,1);
  	PlayerPlaySound(playerid,1057,0,0,0);
	return 1;
}

CMD:knife(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GivePlayerWeapon(playerid,WEAPON:4,1);
	GameTextForPlayer(playerid,"Knife",700,3);
	return 1;
}

CMD:golfclub(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GivePlayerWeapon(playerid,WEAPON:2,1);
	GameTextForPlayer(playerid,"Golf Club",700,3);
	return 1;
}

CMD:brass(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SendClientMessage(playerid,COLOR_ORANGE,"Brass Knuckles Recieved.");
 	GivePlayerWeapon(playerid,WEAPON:1,1);
  	PlayerPlaySound(playerid,1057,0,0,0);
  	return 1;
}

CMD:bat(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~w~Baseball Bat",500,3);
	GivePlayerWeapon(playerid,WEAPON:5,1);
	return 1;
}

CMD:nightstick(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~w~Nightstick",500,3);
	GivePlayerWeapon(playerid,WEAPON:3,1);
	return 1;
}


CMD:vibrator(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~p~ Vibrator!",500,3);
	GivePlayerWeapon(playerid,WEAPON:13,1);
	PlayerPlaySound(playerid,1057,0,0,0);
	return 1;
}


CMD:vibrator2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~p~ Vibrator!",500,3);
	GivePlayerWeapon(playerid,WEAPON:12,1);
	PlayerPlaySound(playerid,1057,0,0,0);
	return 1;
}

CMD:dildo2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~p~ =Dildo Me Harder!",500,3);
	GivePlayerWeapon(playerid,WEAPON:11,1);
	PlayerPlaySound(playerid,1057,0,0,0);
	return 1;
}

CMD:dildo(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~p~ Purple Dildo!",500,3);
	GivePlayerWeapon(playerid,WEAPON:10,1);
	PlayerPlaySound(playerid,1057,0,0,0);
	return 1;
}

CMD:chainsaw(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~w~Chainsaw!",500,3);
	GivePlayerWeapon(playerid,WEAPON:9,1);
	PlayerPlaySound(playerid,1057,0,0,0);
	return 1;
}

CMD:shovel(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~w~Shovel!",500,3);
	GivePlayerWeapon(playerid,WEAPON:6,1);
	PlayerPlaySound(playerid,1057,0,0,0);
	return 1;
}

CMD:cane(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~w~cane!",500,3);
	GivePlayerWeapon(playerid,WEAPON:15,1);
	PlayerPlaySound(playerid,1057,0,0,0);
	return 1;
}



CMD:flowers(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~g~flowers!",500,3);
	GivePlayerWeapon(playerid,WEAPON:14,1);
	PlayerPlaySound(playerid,1057,0,0,0);
	return 1;
}


CMD:camera(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
 	{
 	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
  		GivePlayerWeapon(playerid,WEAPON:43,500);
    	GameTextForPlayer(playerid,"~g~Camera",500,1);
	    format(xstring, sizeof(xstring),"Admin %p (ID:%d) used the /camera command to get a Camera",playerid,playerid);
	    SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	    SendClientMessage(playerid,COLOR_RED,"You have a Camera.");
  	}
   	else if(IsVIP(playerid))
 	{
 	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
  		GivePlayerWeapon(playerid,WEAPON:43,500);
    	GameTextForPlayer(playerid,"~g~Camera",500,1);
	    format(xstring, sizeof(xstring),"VIP %p (ID:%d) used the /camera command to get a Camera",playerid,playerid);
	    SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	    SendClientMessage(playerid,COLOR_RED,"You have a Camera.");
  	}
   	return 1;
}
CMD:care(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Says: I DONT CARE!", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:poop(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Took a poop :P", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:cheese(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Says: CHEESE!", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:omfg(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Says: OMFG!", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:scratch(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Scratchestheirnuts. ;)", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:fart(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Farted. :O", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	PlaySoundForAll(1039);
	return 1;
}

CMD:allbugged(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Says: ALL BUGGED!", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	PlaySoundForAll(1039);
	return 1;
}


CMD:actioncmds(playerid,params[])
{
	ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Action Commands","/cry, /burp, /fart, /scratch, /cheese, /omfg, wtf, /lol, /poop, /care\n/noway, /party,/ohyeah,/ohno,/lovinit,/cornholio,/really","OK","");
	return 1;
}

CMD:cry(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Cries :(", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:burp(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Burped", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}


CMD:wtf(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) says WTF?", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:noway(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) says NO WAY!", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:party(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) says LETS PARTYY", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}


CMD:lol(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Laughs out Loud!. :D", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:ohyea(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Says: Oh YEA!", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:ohno(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Says: Oh No!", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:lovinit(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Says: ba da da da da... Mcdonalds... IM LOVIN IT!", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:cornholio(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Says: I AM CORNHOLIO! I NEED TP FOR MY BUNGHOLE. HEHEHE", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:really(playerid,params[])
{
	format(xstring, sizeof xstring, "%p (ID:%d) Says: Really?", playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:label(playerid,params[])
{
	return cmd_mylabel(playerid,params);
}

CMD:setlabel(playerid,params[])
{
	return cmd_mylabel(playerid,params);
}

CMD:spl(playerid,params[])
{
	return cmd_setplayerlabel(playerid,params);
}


CMD:setplayerlabel(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new id,labeltext[100];
		if(sscanf(params,"us[100]",id,labeltext)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayerlabel <playerid/name> <text>");
		if(IsPlayerConnected(id))
		{
			format(xstring,sizeof xstring,"You label has been changed by Admin %p (ID:%d)",playerid,playerid);
			SendClientMessage(id,COLOR_AMSG,xstring);
			format(xstring,sizeof xstring,"You changed the label of %p (ID:%d)",playerid,id);
			SendClientMessage(playerid,COLOR_AMSG,xstring);
			if(IsValidDynamic3DTextLabel(Players[id][MyLabel])) DestroyDynamic3DTextLabel(Players[id][MyLabel]);
			Players[id][MyLabel] = CreateDynamic3DTextLabel(labeltext,COLOR_ORANGE,0,0,0.3,100,id);
		}   else SendClientMessage(playerid,COLOR_RED,"* Player not connected. Try again.");
	}
	return 1;
}


CMD:mylabel(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cant use this command in minigames.");
	new text[30],color;
	if(sscanf(params,"p<,>s[30]D(1)",text,color))
	{
	        ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Label Help","Usage: /mylabel <Text>,<color>\n\nAvailable Colors:\n\n1 - Orange\n2 - Red\n3 - Blue\n4 - White\n5 - Yellow","OK","");
			return 1;
	}
	if(IsValidDynamic3DTextLabel(Players[playerid][MyLabel])) DestroyDynamic3DTextLabel(Players[playerid][MyLabel]);
	switch(color)
	{
	    case 0: Players[playerid][MyLabel] = CreateDynamic3DTextLabel(text,COLOR_ORANGE,0,0,0.3,100,playerid);
	    case 1: Players[playerid][MyLabel] = CreateDynamic3DTextLabel(text,COLOR_RED,0,0,0.3,100,playerid);
	    case 2: Players[playerid][MyLabel] = CreateDynamic3DTextLabel(text,COLOR_BLUE,0,0,0.3,100,playerid);
	    case 3: Players[playerid][MyLabel] = CreateDynamic3DTextLabel(text,COLOR_WHITE,0,0,0.3,100,playerid);
	    case 4: Players[playerid][MyLabel] = CreateDynamic3DTextLabel(text,COLOR_YELLOW,0,0,0.3,100,playerid);
		default: Players[playerid][MyLabel] = CreateDynamic3DTextLabel(text,COLOR_ORANGE,0,0,0.3,100,playerid);
	
	}
	SendClientMessage(playerid,COLOR_SYSTEM,"* Your label has been updated.");
	return 1;
}

CMD:callcar(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(GetPVarInt(playerid,"CallCar") == -1 || !IsVehicleSpawned(GetPVarInt(playerid,"CallCar"))) return SendClientMessage(playerid,COLOR_RED,"* Could Not Call Car! Type /car for a new car, or do /cars");
	new Float:posa[5];
	GetPlayerFacingAngle(playerid,posa[4]);
	GetPlayerPos(playerid,posa[1],posa[2],posa[3]);
	SetVehicleZAngle(GetPVarInt(playerid,"CallCar"),posa[4]);
	SetVehiclePos(GetPVarInt(playerid,"CallCar"),posa[1],posa[2],posa[3]);
	PutPlayerInVehicle(playerid,GetPVarInt(playerid,"CallCar"),0);
	GameTextForPlayer(playerid,"~g~ Car Called!",1200,3);
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;
}


CMD:report(playerid,params[])
{
    new reported,reason[40];
	if(sscanf(params,"us[40]",reported,reason)) return SendClientMessage(playerid,COLOR_RED, "USAGE: /report [playerid] [reason]");
	if(IsPlayerConnected(reported) && reported != INVALID_PLAYER_ID)
	{
		///if(Players[reported][AdminLvl] > 0) return  SendClientMessage(playerid,COLOR_RED, "You cannot report a admin");
		if(playerid == reported) return SendClientMessage(playerid,COLOR_RED,"You cannot report yourself.. silly.");	
		format(xstring, sizeof xstring, ":octagonal_sign: **%p (ID:%d)** reported **%p (ID:%d)** for **%s**",playerid,playerid,reported,reported,reason);
		DCC_SendChannelMessage(DCReports,xstring);
		format(xstring, sizeof xstring, "~r~Report from %p (ID:%d): %p (ID:%d)~y~ %s", playerid,playerid,reported,reported,reason);
		TextDrawSetString(RXDM[6],xstring);
		format(xstring, sizeof xstring, "***** Report from %p (ID:%d): %p (ID:%d) %s",playerid,playerid,reported,reported,reason);
		foreach(new i : Player)
		{
  			if(IsAdmin(i))
     		{
          		PlayerPlaySound(i,1057,0,0,0);
          		SendClientMessage(i,COLOR_ORANGE,"------------------------------------------------------------------------------------------------------------------");
          		SendClientMessage(i,COLOR_ORANGE,xstring);
          		SendClientMessage(i,COLOR_ORANGE,"------------------------------------------------------------------------------------------------------------------");
            }
		}
		SendClientMessage(playerid,COLOR_YELLOW, "*** Your report has been sent to admins, and will be reviewed.");
		Players[playerid][reporteda] = reported;
		Server[TotalReports]++;
		
		switch(Server[TotalReports])
		{
			case 1:
			{
				format(ReportsString,sizeof ReportsString,"Player ~p~%p ~w~(ID:%d) has been reported by %p (ID:%d) for %s",reported,reported,playerid,playerid,reason);
				TextDrawSetString(Reports[1],ReportsString);
			}
			
			case 2:
			{
				format(ReportsString,sizeof ReportsString,"%s~n~Player ~p~%p ~w~(ID:%d) has been reported by %p (ID:%d) for %s",ReportsString,reported,reported,playerid,playerid,reason);
				TextDrawSetString(Reports[1],ReportsString);
			}
			
			case 3:
			{
	    		format(ReportsString,sizeof ReportsString,"Player ~p~%p ~w~(ID:%d) has been reported by %p (ID:%d) for %s",reported,reported,playerid,playerid,reason);
				TextDrawSetString(Reports[1],ReportsString);		
				Server[TotalReports] = 0;
			}			
		}
		new ip[16];
		GetPlayerIp(reported,ip,sizeof ip);
		format(xstring,sizeof xstring,"INSERT INTO `reports` (`reported`, `reporter`, `reason`, `reportedIP`) VALUES ('%p','%p','%s','%s')",reported,playerid,reason,ip);
		mysql_query(SQL,xstring);
		return 1;
	} else return SendClientMessage(playerid,COLOR_RED, "That Player Is Not Connected.");
}

forward HideReport();
public HideReport()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsAdmin(i)) TextDrawHideForPlayer(i, RXDM[6]);
	}
	return 1;
}

CMD:xroof(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(model == 558) { AddVehicleComponent(GetPlayerVehicleID(playerid),1091); }
	else { SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!"); }
	return 1;
}

CMD:mega(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
	return 1;
}

CMD:virtualwheels(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1097);
	return 1;
}

CMD:dollar(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1083);
	return 1;
}

CMD:shadow(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1073);
	return 1;
}

CMD:atomic(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
	return 1;
}

CMD:twist(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
	return 1;
}

CMD:cutter(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1079);
	return 1;
}

CMD:rims(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1075);
	return 1;
}

CMD:classic(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
	return 1;
}


CMD:switchwheels(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1080);
	return 1;
}

CMD:import(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1082);
	return 1;
}

CMD:trance(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
	if(IsPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_RED,"That Mod wont go on this car!");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1084);
	return 1;
}

CMD:hydraulics(playerid,params[])
{
	return cmd_hy(playerid,params);
}

CMD:hy(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid))
	{
		new v = GetPlayerVehicleID(playerid);
		if(!IsPlane(v))
	 	{
		    AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
		    PlayerPlaySound(playerid,1133,0,0,0);
	  	}   else SendClientMessage(playerid,COLOR_RED,"* You cannot put hydraulics on that!");
  	}	else SendClientMessage(playerid,COLOR_RED,"* You are not in a vehicle!");
  	return 1;
}

CMD:paintjob1(playerid,params[])
{
	return cmd_pj1(playerid,params);
}

CMD:pj1(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle.");
	if(IsInCar(playerid)) return SendClientMessage(playerid,COLOR_RED,"You can only do this on cars.");
    new veh;
	veh = GetPlayerVehicleID(playerid);
	ChangeVehiclePaintjob(veh,1);
    return 1;
}

CMD:tunemenu(playerid,params[])
{
	//if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle.");
	if(IsInCar(playerid)) return SendClientMessage(playerid,COLOR_RED,"You can only do this on cars.");
	ShowPlayerDialog(playerid,700,DIALOG_STYLE_LIST,"Tuning Menu","Paintjobs..\nColors...\nWheels..","Go","Cancel");
	return 1;
}

CMD:paintjob2(playerid,params[])
{
	return cmd_pj2(playerid,params);
}

CMD:pj2(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle.");
	if(IsInCar(playerid)) return SendClientMessage(playerid,COLOR_RED,"You can only do this on cars.");
    new veh;
	veh = GetPlayerVehicleID(playerid);
	ChangeVehiclePaintjob(veh,2);
    return 1;
}

CMD:paintjob3(playerid,params[])
{
	return cmd_pj3(playerid,params);
}

CMD:pj3(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle.");
	if(IsInCar(playerid)) return SendClientMessage(playerid,COLOR_RED,"You can only do this on cars.");
    new veh;
	veh = GetPlayerVehicleID(playerid);
	ChangeVehiclePaintjob(veh,3);
    return 1;
}

CMD:pj(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle.");
	if(IsInCar(playerid)) return SendClientMessage(playerid,COLOR_RED,"You can only do this on cars.");
	new pj;
	if(sscanf(params,"d",pj))
	{
		pj = random(3);
	}
	if(pj > 3 || pj < 0) return SendClientMessage(playerid,COLOR_RED,"* USAGE: /pj <0 - 3>");
    new veh;
	veh = GetPlayerVehicleID(playerid);
	ChangeVehiclePaintjob(veh,pj);
    return 1;
}

CMD:paintjob(playerid,params[])
{
	return cmd_pj(playerid,params);
}

CMD:ssb(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
 	new strBoostMultiplier[70],idx;
  	new strTempString[50];
	strBoostMultiplier = strtok(params, idx);
	if(SpeedBoostDisabled[playerid] == true)
	{
	    SendClientMessage(playerid, COLOR_RED, "** You cannot use speedboost right now. (Try again later).");
	    return 1;
	}
	if (!strlen(strBoostMultiplier))
	{
		SendClientMessage(playerid, COLOR_RED, "** Usage: /setspeedboost <SpeedBoostMultiplier>");
 		SendClientMessage(playerid, COLOR_RED, "*  Allows you to set the speed boost multiplier that is applied when you press the horn key.");
  		SendClientMessage(playerid, COLOR_RED, "*  Accepted speed boost multiplier values are between 1.0 and 3.0");
   		SendClientMessage(playerid, COLOR_RED, "*  The shortcut for this command is: /ssb");
   		format(strTempString,sizeof(strTempString), "*  Your current speed boost multiplier is: %0.2f", SpeedBoostMultiplier[playerid]);
    	SendClientMessage(playerid, COLOR_RED, strTempString);
    	return 1;
   	}
   	if (!IsNumeric2(strBoostMultiplier))
   	{
   		SendClientMessage(playerid, COLOR_RED, "** Usage: /setspeedboost <BoostMultiplier>");
    	SendClientMessage(playerid, COLOR_RED, "*  Allows you to set the speed boost multiplier that is applied when you press the horn key.");
    	SendClientMessage(playerid, COLOR_RED, "*  Accepted speed boost multiplier values are between 1.0 and 3.0");
    	SendClientMessage(playerid, COLOR_RED, "*  The shortcut for this command is: /ssb");
    	format(strTempString,sizeof(strTempString), "*  Your current speed boost multiplier is: %0.2f", SpeedBoostMultiplier[playerid]);
    	SendClientMessage(playerid, COLOR_RED, strTempString);
    	return 1;
   	}
	new Float:BoostMultiplier = floatstr(strBoostMultiplier);
	if (BoostMultiplier < 1.0 || BoostMultiplier > 3.0)
 	{
 		SendClientMessage(playerid, COLOR_RED, "* Sorry, you must enter a speed boost multiplier between 1.0 and 3.0");
  		return 1;
	}

	SpeedBoostMultiplier[playerid] = BoostMultiplier;
	format(strTempString,sizeof(strTempString), "* You set your speed boost multiplier to %0.2f", SpeedBoostMultiplier[playerid]);
 	SendClientMessage(playerid, COLOR_SYSTEM, strTempString);
 	return 1;
}

CMD:fcr(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new c = RandomVehicleColor();
	new car = CreateVehicle(521,X,Y,Z,angle,c,c,-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}


CMD:monster(playerid,params[])
{
	if( Players[playerid][AmRacing] == true)
	{
		if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
		if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		new Float:Zz;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
		new PlayersVehicle;
		if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
		{
		    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
			GetXYInFrontOfPlayer(playerid, x, y, 8);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		else
		{
			GetXYInFrontOfPlayer(playerid, x, y, 5);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid,PlayersVehicle, 0);
		format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);

		SendClientMessage(playerid, COLOR_YELLOW,xstring);
		return 1;		
	}
	if( DriftID[playerid] != -1 && TDrif[playerid] == true)
	{
		return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
	}

	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new c = RandomVehicleColor();
	new car = CreateVehicle(444,X,Y,Z,angle,c,c,-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:nrg(playerid,params[])
{
	if( Players[playerid][AmRacing] == true)
	{	
		//rvnrg
		if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
		if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		new Float:Zz;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
		new PlayersVehicle;
		if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
		{
		    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
			GetXYInFrontOfPlayer(playerid, x, y, 8);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		else
		{
			GetXYInFrontOfPlayer(playerid, x, y, 5);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid,PlayersVehicle, 0);
		format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);

		SendClientMessage(playerid, COLOR_YELLOW,xstring);
		return 1;		
	}
	if( DriftID[playerid] != -1 && TDrif[playerid] == true)
	{
		return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
	}

	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new color = random(128);
	new car = CreateVehicle(522,X,Y,Z,angle,color,color,-1);
	PutPlayerInVehicle(playerid,car,0);
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:alpha(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(602,X,Y,Z,angle,6,6,-1);
	PutPlayerInVehicle(playerid,car,0);
	SetPVarInt(playerid,"CallCar",car);
	return 1;
}


CMD:hydra(playerid,params[])
{
	//if(Players[playerid][Minigame] != -1) return SendClientMessage(playerid,COLOR_RED,"You can only spawn this vehicle is certain minigames.");
	//if(!IsPlayerAdminLevel(playerid,4)) return 0;
	if(Players[playerid][hydra] == true)
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
		new Float:angle;
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,angle);
		new car = CreateVehicle(520,X,Y,Z,angle,6,6,-1);
		PutPlayerInVehicle(playerid,car,0);
		if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
	 	SetPVarInt(playerid,"CallCar",car);
	 	return 1;
 	}

	if(IsAdmin(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
		new Float:angle;
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,angle);
		new car = CreateVehicle(520,X,Y,Z,angle,6,6,-1);
		PutPlayerInVehicle(playerid,car,0);
		if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
	 	SetPVarInt(playerid,"CallCar",car);
	 	SendClientMessage(playerid,COLOR_RED,"* DO NOT SHOOT PEOPLE WITH YOUR HYDRA!");
	 	return 1;
 	}
 	if(IsVIPLevel2(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
		new Float:angle;
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,angle);
		new car = CreateVehicle(520,X,Y,Z,angle,6,6,-1);
		PutPlayerInVehicle(playerid,car,0);
		if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
	 	SetPVarInt(playerid,"CallCar",car);
	 	SendClientMessage(playerid,COLOR_RED,"* Hydra spawned... It was free as you are a Pro Member.");
	 	SendClientMessage(playerid,COLOR_RED,"* DO NOT SHOOT PEOPLE WITH YOUR HYDRA! (if you choose to you can go to /hydradm)");
	 	return 1;
 	}
	return 1;
}

CMD:rhino(playerid,params[])
{

	if(Players[playerid][rhino] == true)
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
		new Float:angle;
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,angle);
		new car = CreateVehicle(432,X,Y,Z,angle,6,6,-1);
		PutPlayerInVehicle(playerid,car,0);
		if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
	 	SetPVarInt(playerid,"CallCar",car);
	 	return 1;
 	}

	if(IsAdmin(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
		new Float:angle;
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,angle);
		new car = CreateVehicle(432,X,Y,Z,angle,6,6,0);
		PutPlayerInVehicle(playerid,car,0);
		if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
	 	SetPVarInt(playerid,"CallCar",car);
	 	return 1;
 	}
 	
	if(IsVIPLevel2(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
		new Float:angle;
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,angle);
		new car = CreateVehicle(432,X,Y,Z,angle,6,6,-1);
		PutPlayerInVehicle(playerid,car,0);
		if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
	 	SetPVarInt(playerid,"CallCar",car);
	 	SendClientMessage(playerid,COLOR_RED,"* Rhino spawned... It was free as you are a Pro Member.");
	 	SendClientMessage(playerid,COLOR_RED,"* DO NOT SHOOT PEOPLE WITH YOUR RHINO! (If you choose to you can join /rhinodm)");
	 	return 1;
 	}
 	
 	SendClientMessage(playerid,COLOR_RED,"This vehicle cannot be spawned right now! A Admin must enable you to use it");
	return 1;
}

CMD:hunter(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,2)) return 0;
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(425,X,Y,Z,angle,6,6,-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}


CMD:euros(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(587,X,Y,Z,angle,6,6,-1);
	PutPlayerInVehicle(playerid,car,0);
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:limo(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(409,X,Y,Z,angle,6,0,-1);
	PutPlayerInVehicle(playerid,car,0);
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:adromada(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
 	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,COLOR_RED,"You cant spawn a big plane inside!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(592,X,Y,Z,angle,6,0,-1);
	PutPlayerInVehicle(playerid,car,0);
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:at400(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,COLOR_RED,"You cant spawn a big plane inside!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(577,X,Y,Z,angle,6,0,-1);
	PutPlayerInVehicle(playerid,car,0);
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:beagle(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(511,X,Y,Z,angle,6,0,-1);
	PutPlayerInVehicle(playerid,car,0);
	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:dodo(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(593,X,Y,Z,angle,6,0,-1);
	PutPlayerInVehicle(playerid,car,0);
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:sandking(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(495,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:sultan(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(560,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:bus(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(431,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}


CMD:coach(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(437,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:faggio(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(462,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),0);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:shamal(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(519,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
 	return 1;
}

CMD:bullet(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(541,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:bmx(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(481,X,Y,Z,angle,6,6,-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}

CMD:vortex(playerid,params[])
{
	if(!IsVIP(playerid) || !IsAdmin(playerid)) return SendClientMessage(playerid,COLOR_RED,"Sorry, Only VIP's can spawn a vortex.");
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(539,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}


CMD:turismo(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(451,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),-1);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}


CMD:maverick(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(487,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),0);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
	return 1;
}

CMD:jester(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	new Float:angle;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(559,X,Y,Z,angle,RandomVehicleColor(),RandomVehicleColor(),0);
	PutPlayerInVehicle(playerid,car,0);
	if(GetPlayerInterior(playerid) != 0) LinkVehicleToInterior(car,GetPlayerInterior(playerid));
 	SetPVarInt(playerid,"CallCar",car);
	return 1;
}



CMD:cb(playerid,params[])
{
	if(strlen(params) > 25) return SendClientMessage(playerid,COLOR_RED,"* Please enter a shorter chat bubble.");
	format(xstring, sizeof(xstring), "Chat bubble set to '%s'",params);
	SendClientMessage(playerid,COLOR_SYSTEM,xstring);
	SetPlayerChatBubble(playerid,params,COLOR_YELLOW,100,10000); //2 mins
	format(xstring, sizeof(xstring), "Player %p (ID:%d) set their Chat bubble: '%s'",playerid,playerid,params);
	DCC_SendChannelMessage(DCGen,xstring);
	return 1;
}


CMD:npcs(playerid,params[])
{
	new Count, i;
	for(i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerNPC(i) && IsPlayerConnected(i))
		{
			Count++;
		    if(Count == 1)
			{
				format(xstring,sizeof xstring,"NPC's Online:\n %p (ID:%d)",i,i);
			}
			else
			{
                format(xstring,sizeof xstring,"%s\n %p (ID:%d)",xstring,i,i);
			}
		}

	}
	if(Count == 0) ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"NPC List","Oh no! Theres no npc's online.\nRIP Amanda :<","Ok","");
	else ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"NPC List",xstring,"ok","");
	format(xstring,sizeof xstring,"%p (id: %d) used /npcs to view the list of online NPC's",playerid,playerid);
	SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	return 1;
}


CMD:deleteactor(playerid,params[]) return cmd_dactor(playerid,params);
CMD:dactor(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		new model;
		if(sscanf(params,"d",model)) return SendClientMessage(playerid,COLOR_RED,"Usage: /dactor <actor id>");

		if(IsValidDynamicActor(model))
		{
			DestroyDynamicActor(model);
			
			format(xstring,sizeof xstring,"Actor %d deleted",model);
			SendClientMessage(playerid,COLOR_AMSG,xstring);
		}
		else
		{
			format(xstring,sizeof xstring,"Actor %d does not exist!",model);
			SendClientMessage(playerid,COLOR_AMSG,xstring);
		}
	}
	return 1;
}

CMD:actorkill(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		new model;
		if(sscanf(params,"d",model)) return SendClientMessage(playerid,COLOR_RED,"Usage: /actorkill <actorID>");
		if(IsValidDynamicActor(model))
		{
			SetDynamicActorHealth(model,0);
		    SendClientMessage(playerid,COLOR_AMSG,"Actor Killed!");
		}   else SendClientMessage(playerid,COLOR_RED,"* No such actor!");

	}
	return 1;
}

CMD:actorstrip(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		new model;
		if(sscanf(params,"d",model)) return SendClientMessage(playerid,COLOR_RED,"Usage: /actorstrip <actorID>");
		if(IsValidDynamicActor(model))
		{
			ApplyActorAnimation(model, "STRIP","strip_A",4.0,false,true,true,true,0);
		    SendClientMessage(playerid,COLOR_AMSG,"Actor Anim Processed!");
		}   else SendClientMessage(playerid,COLOR_RED,"* No such actor!");

	}
	return 1;
}



CMD:addactor(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		new model;
		if(sscanf(params,"d",model)) return SendClientMessage(playerid,COLOR_RED,"Usage: /addactor <skin>");
		new actorid;
		new Float:x,Float:y,Float:z,Float:r;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,r);
		
	 	actorid = CreateDynamicActor(model, x,y,z, r, 0);
		
		format(xstring,sizeof xstring,"Actor %d created.. Type /dactor %d to delete",actorid,actorid);
		SendClientMessage(playerid,COLOR_AMSG,xstring);
		
		format(xstring,sizeof xstring,"Management %p (ID:%d) created actor ID %d",playerid,playerid,actorid);
		SendClientMessage(playerid,COLOR_AMSG,xstring);
		
	}
	return 1;
}


CMD:rconadmins(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		new Count, i;
		for(i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerAdmin(i) && IsPlayerConnected(i))
			{
				Count++;
			    if(Count == 1)
				{
					format(xstring,sizeof xstring,"RCON Admins Online:\n %p (ID:%d)",i,i);
				}
				else
				{
	                format(xstring,sizeof xstring,"%s\n %p (ID:%d)",xstring,i,i);
				}
			}

		}
		if(Count == 0) ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"Admins List","Oh no! Theres no admins online.","Ok","");
		else ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"RCON Admins List",xstring,"ok","");
	}
	return 1;
}



CMD:admins(playerid,params[])
{
	new Count, i;
	for(i = 0; i < MAX_PLAYERS; i++)
	{
		if(Players[i][AdminLvl] > 0 && IsPlayerConnected(i) && Players[i][hidden] == false)
		{
			Count++;
		    if(Count == 1)
			{
				format(xstring,sizeof xstring,"Admins Online:\n %p (ID:%d | Level %d)",i,i,Players[i][AdminLvl]);
			}
			else
			{
                format(xstring,sizeof xstring,"%s\n %p (ID:%d | Level %d)",xstring,i,i,Players[i][AdminLvl]);
			}
		}

	}
	if(Count == 0) ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"Admins List","Oh no! Theres no admins online.","Ok","");
	else ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"Admins List",xstring,"ok","");
	format(xstring,sizeof xstring,"%p (ID:%d) used /admins to view the list of online Admins.",playerid,playerid);
	SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	return 1;
}

CMD:bountylist(playerid,params[])
{
	new Count, i;
	for(i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && Players[i][bounty] > 0)
		{
			Count++;
		    if(Count == 1)
			{
				format(xstring,sizeof xstring,"%p (ID:%d) Bounty $%d",i,i,Players[i][bounty]);
			}
			else
			{
                format(xstring,sizeof xstring,"%s\n %p (ID:%d) Bounty $%d",xstring,i,i,Players[i][bounty]);
			}
		}

	}
	if(Count == 0) return ShowPlayerDialog(playerid,36,DIALOG_STYLE_MSGBOX,"Bounty List","Nobody has a bounty","Ok","");
    ShowPlayerDialog(playerid,36,DIALOG_STYLE_MSGBOX,"Bounty List",xstring,"Ok","");
	return 1;
}

CMD:afklist(playerid,params[])
{
	new Count, i;
	for(i = 0; i < MAX_PLAYERS; i++)
	{
		if(GetPVarInt(i,"AFK") == 1 && IsPlayerConnected(i))
		{
			Count++;
		    if(Count == 1)
			{
				format(xstring,sizeof xstring,"%p (ID:%d)",i,i);
			}
			else
			{
                format(xstring,sizeof xstring,"%s\n %p (ID:%d)",xstring,i,i);
			}
		}

	}
	if(Count == 0) return ShowPlayerDialog(playerid,36,DIALOG_STYLE_MSGBOX,"AFK List","Nobody is AFK","Ok","");
    ShowPlayerDialog(playerid,36,DIALOG_STYLE_MSGBOX,"AFK List",xstring,"Ok","");
	return 1;
}


CMD:vips(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new Count, i;
	for(i = 0; i < MAX_PLAYERS; i++)
	{
		if(Players[i][VIP] == 1 && IsPlayerConnected(i) && !IsAdmin(i))
		{
			Count++;
		    if(Count == 1)
			{
				format(xstring,sizeof xstring,"VIPs Online:\n %p (ID:%d)",i,i);
			}
			else
			{
                format(xstring,sizeof xstring,"%s\n %p (ID:%d)",xstring,i,i);
			}
		}

	}
	if(Count == 0) return ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"VIPs List","No VIPs Online..\nWan't to become a VIP?\nType /vipinfo for details","Ok","");
    ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"VIP's List",xstring,"Ok","Cancel");
	return 1;
}
CMD:pros(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new Count, i;
	for(i = 0; i < MAX_PLAYERS; i++)
	{
		if(Players[i][VIP] == 2 && IsPlayerConnected(i) && !IsAdmin(i))
		{
			Count++;
		    if(Count == 1)
			{
				format(xstring,sizeof xstring,"Pro Members Online:\n %p (ID:%d)",i,i);
			}
			else
			{
                format(xstring,sizeof xstring,"%s\n %p (ID:%d)",xstring,i,i);
			}
		}

	}
	if(Count == 0) return ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"Pros List","No Pros Online..\nWan't to become a Pro?\nDonate to server","Ok","");
    ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"Pro Members List",xstring,"Ok","Cancel");
	return 1;
}


CMD:skin(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"* You must leave your vehicle first.");
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new skinid;
	if (sscanf(params, "d",skinid))
	{
		return ShowModelSelectionMenu(playerid, skinlist, "Select Skin",0x800000FF,COLOR_RED,0xFF4500FF);
	}
	if(IsValidSkin(skinid))
 	{
 	    if(skinid == 61 && !IsVIP(playerid))
 	    {
 	        SendClientMessage(playerid,COLOR_RED,"** Sorry, this skin is only for VIP players.");
 	        return 1;
 	    }
	    Players[playerid][Skin] = skinid;
	    //Save(playerid);
	    SetPlayerSkin(playerid,skinid);
	}	else SendClientMessage(playerid,COLOR_RED,"That is not a valid skin.");
	return 1;
}


CMD:pm(playerid,params[])
{
    if(Players[playerid][Muted] == true) return SendClientMessage(playerid,COLOR_RED,"* You are muted! (You cannot talk)");
	if(Players[playerid][PMs] == false)
	{
	    return SendClientMessage(playerid,COLOR_RED,"** You are not allowed to send pm's right now.");
	}
	new gMessage[128],id;
    if (sscanf(params, "us[100]",id,gMessage)) return SendClientMessage(playerid,0xFF0000FF,"/pm :Invalid Usage (<name/id> <message>)");
   	if(stringContainsIP(gMessage))
    {
        format(xstring,sizeof xstring,"[Admin AC]: Blocked PM Advertisement by %p (ID:%d)",playerid,playerid);
        Chat_SendMessageToAdmins(COLOR_AC,1,xstring);
        return 0;
    }
    if(IsPlayerNPC(id)) return SendClientMessage(playerid,0xFF0000FF,"NPC's Can't talk, and that's for a good reason..");
    if(!IsPlayerConnected(id)) return SendClientMessage(playerid,0xFF0000FF,"/pm :Invalid ID");
    if(Players[id][acceptpms] == false) return SendClientMessage(playerid,0xFF0000FF,"Sorry, that player is not acceptoing private messages right now.");
    if(GetPVarInt(id,"AFK") == 1)
    {
        SendClientMessage(playerid,0xFF0000FF,"Your PM was sent, but the player may not see it. (They are afk)");
    }
	format(xstring,sizeof(xstring),"PM Sent to %p (ID: %i):{FFFFFF} %s",id,id,gMessage);
 	SendClientMessage(playerid,COLOR_ORANGE,xstring);
 	
  	format(xstring,sizeof(xstring),"PM From %p (ID: %i):{FFFFFF} %s",playerid,playerid,gMessage);
   	SendClientMessage(id,COLOR_GREEN,xstring);
 
	format(xstring,sizeof(xstring),"* PM from %p (ID:%d) to %p (ID:%d): %s",playerid,playerid,id,id,gMessage);
	SendMessageToAdmins_PM(playerid,1,COLOR_PURPLE,xstring);
	
	GameTextForPlayer(id,"~n~~n~~n~~n~~n~~n~~n~~n~~P~NEW PRIVATE MESSAGE",1000,3);
	
	Players[id][lastpm] = playerid;
   	PlayerPlaySound(id,1085,0.0,0.0,0.0);
	
    PlayerPlaySound(playerid,1054,0,0,0);
   	PlayerPlaySound(id,1054,0,0,0);
	return 1;
}

CMD:acceptpms(playerid,params[])
{
	if(Players[playerid][acceptpms] == true) return SendClientMessage(playerid,COLOR_RED,"* You are already accepting private messages!");
	Players[playerid][acceptpms] = true;
	format(xstring,sizeof xstring,"* %p (ID:%d) is now accepting private messages",playerid,playerid);
	SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	SendClientMessage(playerid,COLOR_WHITE,"** You are accepting private messages... To disable them again, use /denypms");
	return 1;
}

CMD:denypms(playerid,params[])
{
	if(Players[playerid][acceptpms] == false) return SendClientMessage(playerid,COLOR_RED,"* You are already denying private messages!");
	Players[playerid][acceptpms] = false;
	format(xstring,sizeof xstring,"* %p (ID:%d) is no longer accepting private messages",playerid,playerid);
	SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	SendClientMessage(playerid,COLOR_WHITE,"** You are no longer accepting private messages... To enable them again, use /acceptpms");
	return 1;
}



forward EnablePMs(playerid);
public EnablePMs(playerid)
{
	Players[playerid][PMs] = true;
	return 1;
}

CMD:kill(playerid,params[])
{
    if(Players[playerid][Minigame] == 1020) return SendClientMessage(playerid,COLOR_RED,"* You cannot do this command while playing Survival Game!");
	if(Players[playerid][Minigame] == -1) return SendClientMessage(playerid,COLOR_RED,"* You cannot do this command while jailed!");
	if(TT_ID[playerid] != -1 && (ttCD[playerid] != 0)) return SendClientMessage(playerid,COLOR_RED,"** TT  Race Countdown in Process! Please wait to use this command");
	if(Players[playerid][Minigame] != 0)
	{
		// :leavedm
		if(Players[playerid][Minigame] == 147) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(Players[playerid][Minigame] == 148) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(Players[playerid][Minigame] == 701) return SendClientMessage(playerid,COLOR_RED,"You must finish the game first.");
		// ??
		if(Players[playerid][Minigame] == 22) return SendClientMessage(playerid,COLOR_RED,"* Finish the game.");
		// jail
		if(Players[playerid][Minigame] == -1) return SendClientMessage(playerid,COLOR_RED,"* You are in jail!");
		if(Players[playerid][Minigame] != 0)
		{
			if(Players[playerid][Minigame] == 144)
			{
				if(IsDueling[playerid] == true) Duel_End(DuelInvitation[playerid],playerid,2);					
			}				
			if(Players[playerid][Minigame] == 146) 
			{
				if(TT_ID[playerid] != -1 && (ttCD[playerid] != 0)) return SendClientMessage(playerid,COLOR_RED,"** TT  Race Countdown in Process! Please wait to use this command");
				return TT_Exit(playerid);
			}
			if(Players[playerid][Minigame] == 145)
			{
				//dmq5	
				if(dm[playerid] == -1) return mSend3(playerid,"* You are not currently in dm zone");
				else
				{
					dm[playerid]=-1;
					ResetPlayerWeapons(playerid);
					ResetPlayerHealth(playerid);
					ResetPlayerArmor(playerid);
					SetPlayerVirtualWorld(playerid,0);
					SetMinigame(playerid,0);
					SpawnPlayer(playerid);	
				}		
			}
		    switch(Players[playerid][Minigame])
		    {
		        //case 30: Players[playerid][allowmg] = false;
		        case 75:
		        {
			 		Players[playerid][autofix] = true;
			 		SendClientMessage(playerid,COLOR_GREY,"** AUTOFIX TURNED BACK ON");
		        }
		    }
		    SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			ResetPlayerWeapons(playerid);
		    Players[playerid][Minigame] = 0;
			SpawnPlayer(playerid);
			SendClientMessage(playerid,COLOR_GREY,"** You left the minigame you were in.");
			
			if(TDrif[playerid] == true)
			{
				TDrif[playerid] = false;
				DestroyTextDraws(playerid);
				//SendClientMessage(playerid,-1,"Drift Mode {FF00FF}OFF");
				TDriftPointsNow[playerid] = 0; PlayerDriftCancellation[playerid] = 0;
				TextDrawHideForPlayer(playerid,TDDrift[playerid]);
				DriftBonus[playerid]=1;
				TextDrawSetString(TDDrift[playerid]," ");
				DriftPointsNow[playerid] = 0;
				TextDrawHideForPlayer(playerid,TDDrift[playerid]);
				KillTimer(eDriftTimer[playerid]);
				KillTimer(TimerA[playerid]);
				KillTimer(TimerC[playerid]);
				TimeLeft[playerid] = 180;
				Players[playerid][Minigame] = 0;
				SpeedBoostDisabled[playerid] = false;
				SetPlayerVirtualWorld(playerid, 0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
			}
	 	}		
	}
	SetPlayerHealth(playerid,0);
 	Players[playerid][Minigame] = 0;
	//Players[playerid][allowmg] = false;
	//SendDeathMessage(INVALID_PLAYER_ID,playerid,47);
	return 1;
}

CMD:f(playerid,params[])
{
	return cmd_flip(playerid,params);
}

CMD:flip(playerid,params[])
{
	// Since 5.0.6 it can be used on races. > //if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You must be in a vehicle first!");
    if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER || IsPlayerInAnyVehicle(playerid) && Players[playerid][AdminLvl] > 0)
    {
		new myveh = GetPlayerVehicleID(playerid);
		new Float:_Z;
		GetVehicleZAngle(myveh,_Z);
		SetVehicleZAngle(myveh,_Z+360);
		GameTextForPlayer(playerid,"Flipped.",500,4);
		SetVehicleHealth(myveh,1000.0);
		RepairVehicle(myveh);
		SetVehicleVelocity(GetPlayerVehicleID(playerid),0,0,0);
		PlayerPlaySound(playerid,1054,0,0,0);
	}   else SendClientMessage(playerid,COLOR_RED,"You are not driving a vehicle!");
	return 1;
}

CMD:fix(playerid,params[])
{
	//if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You must be in a vehicle first!");
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
	RepairVehicle(GetPlayerVehicleID(playerid));
	GameTextForPlayer(playerid,"~g~Fixed.",300,4);
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;
}


CMD:nocolor(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_RED);
	SendClientMessage(playerid,COLOR_GREY,"Color Set To Normal.");
	Players[playerid][Color] = 0;
	return 1;
}

CMD:red(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_RED);
	SendClientMessage(playerid,COLOR_RED,"Color Changed.");
	Players[playerid][Color] = 1;
	return 1;
}

CMD:lime(playerid,params[])
{
   if(IsVIP(playerid) || IsAdmin(playerid))
   {
	 if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	 SetPlayerColor(playerid,COLOR_LIME);
	 SendClientMessage(playerid,COLOR_LIME,"Color Changed.");
	 Players[playerid][Color] = 2;
   } else SendClientMessage(playerid,COLOR_RED,"Error, only VIPs/Admins can have the lime color");
   return 1;
}

CMD:blue(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_BLUE);
	SendClientMessage(playerid,COLOR_BLUE,"Color Changed.");
	Players[playerid][Color] = 3;
	return 1;
}

CMD:grey(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_GREY);
	SendClientMessage(playerid,COLOR_GREY,"Color Changed.");
	Players[playerid][Color] = 16;
	return 1;
}

CMD:white(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_WHITE);
	SendClientMessage(playerid,COLOR_WHITE,"Color Changed.");
	Players[playerid][Color] = 4;
	return 1;
}

CMD:green(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_GREEN);
	SendClientMessage(playerid,COLOR_GREEN,"Color Changed.");
	Players[playerid][Color] = 5;
	return 1;
}

CMD:yellow(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_YELLOW);
	SendClientMessage(playerid,COLOR_YELLOW,"Color Changed.");
 	Players[playerid][Color] = 6;
	return 1;
}

CMD:darkyellow(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_DYELLOW);
	SendClientMessage(playerid,COLOR_DYELLOW,"Color Changed.");
 	Players[playerid][Color] = 10;
	return 1;
}

CMD:brightyellow(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_BYELLOW);
	SendClientMessage(playerid,COLOR_BYELLOW,"Color Changed.");
	Players[playerid][Color] = 11;
	return 1;
}

CMD:brightblue(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_BBLUE);
	SendClientMessage(playerid,COLOR_BBLUE,"Color Changed.");
	Players[playerid][Color] = 12;
	return 1;
}

CMD:purple(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_PURPLE);
	SendClientMessage(playerid,COLOR_PURPLE,"Color Changed.");
	Players[playerid][Color] = 13;
	return 1;
}

CMD:aqua(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_AQUA);
	SendClientMessage(playerid,COLOR_AQUA,"Color Changed.");
    Players[playerid][Color] = 7;
	return 1;
}

CMD:orange(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_ORANGE);
	SendClientMessage(playerid,COLOR_ORANGE,"Color Changed.");
	Players[playerid][Color] = 8;
	return 1;
}

CMD:strongorange(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,STRONG_ORANGE);
	SendClientMessage(playerid,STRONG_ORANGE,"Color Changed.");
	Players[playerid][Color] = 19;
	return 1;
}

CMD:lightblue(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_LIGHTBLUE);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Color Changed.");
	Players[playerid][Color] = 9;
	return 1;
}

CMD:register(playerid,params[])
{
	if(Players[playerid][Logged] == true) return SendClientMessage(playerid,COLOR_RED,"You are logged in!");
	new pass[24];
	if(sscanf(params, "s[24]",pass)) return SendClientMessage(playerid,COLOR_RED,"Usage: /register <password>");
	new ip[16],tmp[150];
	format(tmp, sizeof(tmp), "SELECT * FROM `users` WHERE `Name` = '%p'", playerid); //Selects the line where the playername is the player
	mysql_query(SQL,tmp);
	if(cache_num_rows() != 0) return SendClientMessage(playerid,COLOR_RED,"That username is already taken.");
	GetPlayerIp(playerid,ip,16);
	format(tmp, sizeof(tmp), "INSERT INTO `users` (`Name`, `Password`, `IPAddress`, `DateRegistered`) VALUES ('%p', md5('%s'), '%s',CURDATE())", playerid, pass, ip);
	mysql_query(SQL,tmp); //Queries
	Players[playerid][Logged] = true;
	Players[playerid][Skin] = -1;
	format(tmp,sizeof tmp,"%p has registered on the server.",playerid);
	SendMessageToAdmins(playerid,1,COLOR_GREY,tmp);
	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	SendClientMessage(playerid,COLOR_AMSG,"* Registered and Logged In! Welcome to RevolutionX. Type /help if you need help.");
	SendClientMessage(playerid,COLOR_AMSG,"* Don't forget to join our /discord !");
	Save(playerid);
	return 1;
}

CMD:login(playerid,params[])
{
	if(Players[playerid][Logged] == true) return SendClientMessage(playerid,COLOR_RED,"You are already logged in.");
	new pass[60];
	if (sscanf(params, "s[24]",pass)) return SendClientMessage(playerid,COLOR_RED,"Usage: /login <password>");
	format(xstring, sizeof(xstring), "SELECT * FROM `users` WHERE `Name` = '%p'", playerid);
	mysql_query(SQL, xstring); //Queries the result
	if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* You are not registered! /register <password>");
 	format(xstring, sizeof( xstring), "SELECT * FROM `users` WHERE `Name` = '%p' AND `Password` = md5('%s')",playerid,pass);
	mysql_query(SQL,xstring);
	if(cache_num_rows() != 0)
	{
		Login(playerid);
		SetMyColor(playerid);
  	}	else return SendClientMessage(playerid,COLOR_RED,"* Invalid Password! Try Again!");
	return 1;
}

CMD:savestats(playerid,params[])
{
	if(Players[playerid][Logged] == false) return SendClientMessage(playerid,COLOR_RED,"You are not logged in.");
	SendClientMessage(playerid,COLOR_LIME,"* Your Account has been successfully saved!");
	Save(playerid);
	return 1;
}
CMD:sma(playerid,params[]) return cmd_savestats(playerid,params);
CMD:sms(playerid,params[]) return cmd_savestats(playerid,params);
CMD:savemyaccount(playerid,params[]) return cmd_savestats(playerid,params);


CMD:saveallstats(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(Players[i][Logged] == false) continue;
		Save(i);
	}
	SendClientMessage(playerid,COLOR_LIME,"* All Registered Accounts has been successfully saved!");
	return 1;
}
CMD:sas(playerid,params[]) return cmd_saveallstats(playerid,params);

CMD:bb(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,15);
	new rand = random(1);
	if(rand == 0) { GotoPosition(playerid,-1469.3053,968.1514,1027.6670,true); }
	else { GotoPosition(playerid,-1400.9905,949.9815,1028.2478,true); }
 	GameTextForPlayer(playerid,"~r~BloodBowl",500,1);
 	if(IsPlayerInAnyVehicle(playerid)) LinkVehicleToInterior(GetPlayerVehicleID(playerid),15);
	return 1;
}

CMD:pier69(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GotoPosition(playerid,-1400.9905,949.9815,1028.2478,true);
	GameTextForPlayer(playerid,"~y~Pier ~r~ 69",500,1);
	return 1;
}

CMD:libertycity(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,1);
 	GotoPosition(playerid,-751.2510,501.6940,1371.9446,false);
  	GameTextForPlayer(playerid,"~w~ Liberty City",500,3);
   	SendClientMessage(playerid,COLOR_ORANGE,"Note: Not everything here is solid. You may fall through.");
	return 1;
}

CMD:cage(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-18.2304,2322.6140,24.3034,false);
  	GameTextForPlayer(playerid,"~w~ Caged",500,3);
  	return 1;
}

CMD:m2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2394.1541,-2204.1350,33.2891,true);
  	GameTextForPlayer(playerid,"~w~ Mount Chilliad",500,3);
	return 1;
}

CMD:m1(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2394.1541,-2204.1350,33.2891,true);
  	GameTextForPlayer(playerid,"~w~ Mount Chilliad",500,3);
	return 1;
}


CMD:m3(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2240.57,-1957.53,245.47,true);
  	GameTextForPlayer(playerid,"~w~ Mount Chilliad",500,3);
	return 1;
}

CMD:mc(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(2))
	{
	    case 0:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,-2288.3550,-1641.0165,483.5883);
	  		GotoPosition(playerid,-2288.3550,-1641.0165,483.5883,true);
	  		SetPlayerFacingAngle(playerid,91.0431);
	   		GameTextForPlayer(playerid,"~w~Mount Chiliad",800,3);
	    }

	    case 1:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,-2326.3452,-1591.1569,483.7349);
	  		GotoPosition(playerid,-2326.3452,-1591.1569,483.7349,true);
	  		SetPlayerFacingAngle(playerid,205.7242);
	   		GameTextForPlayer(playerid,"~w~Mount Chiliad",800,3);
	    }

	    case 2:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,-2347.5100,-1657.4861,483.7143);
	  		GotoPosition(playerid,-2347.5100,-1657.4861,483.7143,true);
	  		SetPlayerFacingAngle(playerid,304.1118);
	   		GameTextForPlayer(playerid,"~w~Mount Chiliad",800,3);
	    }
	}
	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /mc (mount chiliad)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}


CMD:da(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(2))
	{
	    case 0:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,391.1274,2538.3630,16.5426);
	  		GotoPosition(playerid,391.1274,2538.3630,16.5426,true);
	  		SetPlayerFacingAngle(playerid,188.7496);
	   		GameTextForPlayer(playerid,"~w~Desert~n~Airport",800,3);
	    }

	    case 1:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,449.3199,2504.3594,19.2279);
	  		GotoPosition(playerid,449.3199,2504.3594,19.2279,true);
	  		SetPlayerFacingAngle(playerid,88.4821);
	   		GameTextForPlayer(playerid,"~w~Desert~n~Airport",800,3);
	    }

	    case 2:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,308.8389,2534.2546,16.8157);
	  		GotoPosition(playerid,308.8389,2534.2546,16.8157,true);
	  		SetPlayerFacingAngle(playerid,178.0963);
	   		GameTextForPlayer(playerid,"~w~Desert~n~Airport",800,3);
	    }
	}
	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /da",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:lva(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(2))
	{
	    case 0:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,1346.2369,1583.0734,10.8203);
	  		GotoPosition(playerid,1346.2369,1583.0734,10.8203,true);
	  		SetPlayerFacingAngle(playerid,274.9172);
	   		GameTextForPlayer(playerid,"~w~LV~n~Airport",800,3);
	    }

	    case 1:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,1432.0413,1557.0361,10.8203);
	  		GotoPosition(playerid,1432.0413,1557.0361,10.8203,true);
	  		SetPlayerFacingAngle(playerid,138.0127);
	   		GameTextForPlayer(playerid,"~w~LV~n~Airport",800,3);
	    }

	    case 2:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,1536.0686,1562.4645,10.8185);
	  		GotoPosition(playerid,1536.0686,1562.4645,10.8185,true);
	  		SetPlayerFacingAngle(playerid,119.8392);
	   		GameTextForPlayer(playerid,"~w~LV~n~Airport",800,3);
	    }
	}
	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Las Venturas Airport (/lva)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:runwayls(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,2067.9290,-2593.4417,13.2740);
  	GotoPosition(playerid,2067.9290,-2593.4417,13.2740,true);
   	GameTextForPlayer(playerid,"Los Santos~n~Airport~n~Runway",500,3);
   	return 1;
}

CMD:runwaylv(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,1388.9453,1320.6558,10.5474);
  	GotoPosition(playerid,1388.9453,1320.6558,10.5474,true);
   	GameTextForPlayer(playerid,"Las Venturas~n~Airport~n~Runway",500,3);
   	return 1;
}

CMD:runwaysf(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,-1666.9299,-174.2725,13.8755);
  	GotoPosition(playerid,-1666.9299,-174.2725,13.8755,true);
   	GameTextForPlayer(playerid,"San Fierro~n~Airport~n~Runway",500,3);
   	return 1;
}

CMD:lsa(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(2))
	{
	    case 0:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,1914.3149,-2400.3811,13.5391);
	  		GotoPosition(playerid,1914.3149,-2400.3811,13.5391,true);
	  		SetPlayerFacingAngle(playerid,186.2195);
	   		GameTextForPlayer(playerid,"~w~Los Santos~n~Airport",800,3);
	    }
	    
	    case 1:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,1952.3197,-2538.2561,13.5469);
	  		GotoPosition(playerid,1952.3197,-2538.2561,13.5469,true);
	  		SetPlayerFacingAngle(playerid,70.3085);
	   		GameTextForPlayer(playerid,"~w~Los Santos~n~Airport",800,3);
	    }
	    
	    case 2:
	    {
	        SetCameraBehindPlayer(playerid);
    		Streamer_UpdateEx(playerid,1806.8701,-2452.3970,13.5547);
	  		GotoPosition(playerid,1806.8701,-2452.3970,13.5547,true);
	  		SetPlayerFacingAngle(playerid,159.2960);
	   		GameTextForPlayer(playerid,"~w~Los Santos~n~Airport",800,3);
	    }
	}
	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Los Santos Airport (/lsa)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:lsajump(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,1972.6844,-2681.6355,68.4845);
  	GotoPosition(playerid,1972.6844,-2681.6355,68.4845,true);
   	GameTextForPlayer(playerid,"Los Santos~n~Airport",500,3);
	return 1;
}


CMD:lock(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle! /car");
	new v = GetPlayerVehicleID(playerid);
 	new bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
  	GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
   	SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,lights,alarm,true,bonnet,boot,objective);
	SendClientMessage(playerid,COLOR_GREY,"* Locked.");
	return 1;
}


CMD:unlock(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle! /car");
	new v = GetPlayerVehicleID(playerid);
 	new bool:engine,bool:lights,bool:alarm,bool:doors,bool:bonnet,bool:boot,bool:objective;
  	GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
   	SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,lights,alarm,false,bonnet,boot,objective);
	SendClientMessage(playerid,COLOR_GREY,"Unlocked.");
	return 1;
}

CMD:beach(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,278.4250,-1842.5085,3.4943,true);
 	GameTextForPlayer(playerid,"Beach",500,1);
 	
 	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /beach",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:tf(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);	
	GotoPosition(playerid,-1936.7510,226.0822,34.1563,true);
	return 1;
}

CMD:lowrider(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);	
	GotoPosition(playerid,2645.9141,-2011.0348,13.554,true);
	return 1;
}

CMD:waa(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);	
	GotoPosition(playerid,-2704.1804,220.1041,4.1797,true);
	return 1;
}

CMD:club(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new rand = random(1);
	if(rand == 0) { GotoPosition(playerid,-2651.4026,1408.0267,906.2734,false);}
	else  {GotoPosition(playerid,-2666.1729,1399.8929,906.2734,false); }
 	SetPlayerInterior(playerid,3);
  	GameTextForPlayer(playerid,"~p~Club",500,1);
	return 1;
}

CMD:sws(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	GotoPosition(playerid,2322.7217,-1382.6199,675.5093,true);
 	GameTextForPlayer(playerid,"SideWayz~n~ Stunt",500,1);
	return 1;
}

CMD:twister(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,368.4459,-82.6198,566.7846);
  	GotoPosition(playerid,368.4459,-82.6198,566.7846,true);
   	GameTextForPlayer(playerid,"~g~ Twister By [_]Hitman",500,1);
   	return 1;
}

CMD:loopstunt(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,1459.8020,1798.4170,10.8125);
  	GotoPosition(playerid,1459.8020,1798.4170,10.8125,true);
   	GameTextForPlayer(playerid,"~g~ LoopStunt By ~n~Dollar",500,3);
   	return 1;
}




CMD:jump(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,2640.0513,-1767.6317,865.3845);
  	GotoPosition(playerid,2640.0513,-1767.6317,865.3845,true);
   	GameTextForPlayer(playerid,"~g~ Jump By DeathMaster",500,1);
   	return 1;
}

CMD:quarry(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,814.360473,844.586486, 10.255514);
  	GotoPosition(playerid,814.360473,844.586486, 10.255514,true);
   	GameTextForPlayer(playerid,"~w~QuarryStunt~n~By [SG]DeathMaster",500,1);
	return 1;
}

CMD:parkour4(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,-2366.8347,1124.8115,65.2344);
  	GotoPosition(playerid,-2366.8347,1124.8115,65.2344,true);
   	GameTextForPlayer(playerid,"~w~Parkour",500,1);
	return 1;
}

CMD:parkour5(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,-2431.5259,1244.9174,41.9446);
  	GotoPosition(playerid,-2431.5259,1244.9174,41.9446,true);
   	GameTextForPlayer(playerid,"~w~Parkour",500,1);
	return 1;
}

CMD:parkour6(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,-2782.9182,26.4002,13.9262);
  	GotoPosition(playerid,-2782.9182,26.4002,13.9262,true);
   	GameTextForPlayer(playerid,"~w~Parkour",500,1);
	return 1;
}

CMD:parkour7(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,1835.3306,-1995.4010,18.8867);
  	GotoPosition(playerid,1835.3306,-1995.4010,18.8867,true);
   	GameTextForPlayer(playerid,"~w~Parkour",500,1);
	return 1;
}

CMD:parajump1(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,1387.5466,-1198.5917,202.4453);
  	GotoPosition(playerid,1387.5466,-1198.5917,202.4453,true);
   	GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
	return 1;
}

CMD:parajump2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,1546.8486,-1354.4666,329.4791);
  	GotoPosition(playerid,1546.8486,-1354.4666,329.4791,true);
   	GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
	return 1;
}

CMD:parajump3(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SetPlayerPos(playerid,x,y,z+150);
   	GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
	return 1;
}

CMD:parajump4(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
  	GotoPosition(playerid,2399.3916,1878.0149,77.4118,true);
   	GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
	return 1;
}

CMD:parajump5(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
  	GotoPosition(playerid,2269.0205,1669.6494,94.9219,true);
   	GameTextForPlayer(playerid,"~w~Parachute~n~Jump",500,1);
	return 1;
}

CMD:dmzone1(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,-1482.6298,845.3130,26.6625,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,-1481.8518,993.8530,26.6625,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 1",800,3);
	return 1;
}

CMD:dmzone2(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,-1468.3823,1487.9633,8.2501,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,-1367.9402,1490.1344,11.0391,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 2",800,3);
	return 1;
}

CMD:dmzone3(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,2042.0128,2191.8147,10.8203,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,2042.0128,2191.8147,10.8203,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 3",800,3);
	return 1;
}

CMD:dmzone4(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,2486.9504,1877.8468,10.0595,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,2426.2048,1935.5645,6.0156,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 4",800,3);
	return 1;
}

CMD:dmzone5(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,-2315.0405,-83.8641,35.3203,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,-2359.4622,-117.7212,35.3203,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 5",800,3);
	return 1;
}

CMD:dmzone6(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,-2776.9763,192.7936,7.1952,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,-2749.7124,201.4759,7.0677,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 6",800,3);
	return 1;
}

CMD:dmzone7(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,-1825.6616,554.2018,234.8874,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,-1788.6543,546.2272,234.8874,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 7",800,3);
	return 1;
}

CMD:dmzone8(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,-1912.7390,876.3095,35.2638,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,-1980.2432,881.6850,45.2031,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 8",800,3);
	return 1;
}

CMD:dmzone9(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,-2498.4802,1214.9767,37.4283,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,-2566.5349,1220.2909,41.2109,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 9",800,3);
	return 1;
}

CMD:dmzone10(playerid,params)
{
  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(1))
	{
	    case 0:
	    {
    		GotoPosition(playerid,-2809.2957,1188.5549,20.7655,true);
	    }

	    case 1:
	    {
	        GotoPosition(playerid,-2798.7092,1108.9176,28.3624,true);
	    }

	}
	GameTextForPlayer(playerid,"~G~Deathmatch~n~Zone 10",800,3);
	return 1;
}

CMD:glenpark(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(2))
	{
		case 0:
		{
			Streamer_UpdateEx(playerid,1901.9611,-1182.3485,23.2532);
			SetPlayerFacingAngle(playerid,252.4221);
			GotoPosition(playerid,1901.9611,-1182.3485,23.2532,true);
		}
		case 1:
		{
			Streamer_UpdateEx(playerid,1948.1719,-1230.6304,19.7434);
			SetPlayerFacingAngle(playerid,342.6629);
			GotoPosition(playerid,1948.1719,-1230.6304,19.7434,true);
		}
		case 2:
		{
			Streamer_UpdateEx(playerid,2033.9313,-1196.2908,22.2822);
			SetPlayerFacingAngle(playerid,96.7173);
			GotoPosition(playerid,2033.9313,-1196.2908,22.2822,true);
		}
	}
 	GameTextForPlayer(playerid,"~w~Glen Park",500,3);
 	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Glen Park (/glenpark)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
 	return 1;
}

CMD:sfa(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(3))
	{
		case 0:
		{
			Streamer_UpdateEx(playerid,-1272.7385,-40.5160,13.9345);
			SetPlayerFacingAngle(playerid,60.9404);
			GotoPosition(playerid,-1272.7385,-40.5160,13.9345,true);
			SetCameraBehindPlayer(playerid);
		}
		case 1:
		{
			Streamer_UpdateEx(playerid,-1386.3414,-215.5605,13.8947);
			SetPlayerFacingAngle(playerid,315.0114);
			GotoPosition(playerid,-1299.6469,-103.7317,14.1484,true);
			SetCameraBehindPlayer(playerid);
		}
		case 2:
		{
			Streamer_UpdateEx(playerid,-1263.2920,-253.6236,13.9649);
			SetPlayerFacingAngle(playerid,357.7517);
			GotoPosition(playerid,-1263.2920,-253.6236,13.9649,true);
			SetCameraBehindPlayer(playerid);
		}
		case 3:
		{
			Streamer_UpdateEx(playerid,-1373.3119,-177.1924,14.1676);
			SetPlayerFacingAngle(playerid,270.5304);
			GotoPosition(playerid,-1373.3119,-177.1924,14.1676,true);
			SetCameraBehindPlayer(playerid);
		}
	}
 	GameTextForPlayer(playerid,"~w~San Fierro~n~Airport",500,3);
 	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to San Fierro Airport (/sfa)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
 	return 1;
}
CMD:forcesfa(playerid,params[])
{
	if(Players[playerid][AdminLvl] < 1) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 1 to do this");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* /forcesfa <playerid>");
	else if(Players[id][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"player is in minigames (or in jail)");
	else
	{
		new str[126];
		format(str, sizeof(str), "Admin %p (ID:%d) forced %p (ID:%d) to /sfa teleport",playerid,playerid,id,id);
		SendMessageToAdminsEx(COLOR_AC,1,str);
		switch(random(4))
		{
			case 0:
			{
				Streamer_UpdateEx(id,-1239.4159,-84.5966,14.1484);
				SetPlayerFacingAngle(id,145.1959);
				GotoPosition(id,-1239.4159,-84.5966,14.1484,true);
				SetCameraBehindPlayer(id);
			}
			case 1:
			{
				Streamer_UpdateEx(playerid,-1299.6469,-103.7317,14.1484);
				SetPlayerFacingAngle(id,158.9827);
				GotoPosition(id,-1299.6469,-103.7317,14.1484,true);
				SetCameraBehindPlayer(id);
			}
			case 2:
			{
				Streamer_UpdateEx(id,-1374.8732,-143.6360,14.1484);
				SetPlayerFacingAngle(id,204.4165);
				GotoPosition(id,-1374.8732,-143.6360,14.1484,true);
				SetCameraBehindPlayer(id);
			}
			case 3:
			{
				Streamer_UpdateEx(id,-1370.7422,-246.4382,14.1440);
				SetPlayerFacingAngle(id,314.7108);
				GotoPosition(id,-1370.7422,-246.4382,14.1440,true);
				SetCameraBehindPlayer(id);
			}
			case 4:
			{
				Streamer_UpdateEx(id,-1284.0680,-267.2304,14.1484);
				SetPlayerFacingAngle(id,357.9512);
				GotoPosition(id,-1284.0680,-267.2304,14.1484,true);
				SetCameraBehindPlayer(id);
			}
		}
		return 1;
	}
}

CMD:fsfa(playerid,params[]) return cmd_forcesfa(playerid,params);
CMD:ph(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	SetPlayerFacingAngle(playerid,304.6841);
 	Streamer_UpdateEx(playerid,-681.5280,364.6834,1.8331);
  	GotoPosition(playerid,-681.5280,364.6834,1.8331,true);
   	GameTextForPlayer(playerid,"~y~Poolhouse",500,1);
   	return 1;
}

CMD:wb(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,-1184.1152,-157.0756,152.5988);
  	GotoPosition(playerid,-1184.1152,-157.0756,155.5988,true);
   	GameTextForPlayer(playerid,"~y~Waterbowl",500,1);
   	return 1;
}


/*
CMD:dnrisland(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,3461.29321,-1852.70105,5.47656);
  	GotoPosition(playerid,3461.29321,-1852.70105,5.47656,true);
   	GameTextForPlayer(playerid,"~g~DNR Island",500,1);
   	return 1;
}
*/
CMD:dnrisland(playerid,params[])
{
   	SendClientMessage(playerid,COLOR_RED,"This teleport has been removed due to some issues");
   	return 1;
}

CMD:island(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	Streamer_UpdateEx(playerid,-1504.5378,1372.6876,3.6308);
  	GotoPosition(playerid,-1504.5378,1372.6876,3.6308,true);
   	GameTextForPlayer(playerid,"~g~Island",500,1);
   	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to the island (/island)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
   	return 1;
}


CMD:sex(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,3);
  	GotoPosition(playerid,-107.2192,-12.2818,1000.7188,true);
   	GameTextForPlayer(playerid,"~p~SexShop",500,1);
   	return 1;
}

CMD:bayside(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
  	GotoPosition(playerid,-2287.6069,2276.7256,4.9684,true);
   	GameTextForPlayer(playerid,"~g~bayside",500,1);
   	return 1;
}



CMD:docks(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,-1687.5582,-7.8846,3.5547);
	GotoPosition(playerid,-1687.5582,-7.8846,3.5547,true);
	SetPlayerFacingAngle(playerid,313.7472);
 	GameTextForPlayer(playerid,"Docks",500,1);
 	return 1;
}

CMD:methlab(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,-2161.5090,-211.0667,35.3203);
	GotoPosition(playerid,-2161.5090,-211.0667,35.3203,true);
	SetPlayerFacingAngle(playerid,173.89272);
 	GameTextForPlayer(playerid,"Meth Lab",500,1);
 	return 1;
}

CMD:snakefarm(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,-28.2701,2334.9387,24.1406);
	GotoPosition(playerid,-28.2701,2334.9387,24.1406,true);
	SetPlayerFacingAngle(playerid,19.9037);
 	GameTextForPlayer(playerid,"Snake Farm",500,1);
 	return 1;
}

CMD:motel(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	Streamer_UpdateEx(playerid,444.646911,508.239044,1001.419494);
	GotoPosition(playerid,444.646911,508.239044,1001.419494,true);
 	GameTextForPlayer(playerid,"Motel Room",500,1);
 	SetPlayerInterior(playerid,12);
 	return 1;
}

CMD:gasstation(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,663.836242,-575.605407,16.343263);
	GotoPosition(playerid,663.836242,-575.605407,16.343263,true);
 	GameTextForPlayer(playerid,"Gas Station",500,1);
 	return 1;
}


CMD:jays(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,4);
	Streamer_UpdateEx(playerid,457.304748,-88.428497,999.554687);
	GotoPosition(playerid,457.304748,-88.428497,999.554687,true);
 	GameTextForPlayer(playerid,"Jays Diner",500,1);
 	return 1;
}

CMD:gantdiner(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,5);
	Streamer_UpdateEx(playerid,454.973937,-110.104995,1000.077209);
	GotoPosition(playerid,454.973937,-110.104995,1000.077209,true);
 	GameTextForPlayer(playerid,"Gants Diner",500,1);
 	return 1;
}



CMD:8track(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,2691.1245,-1854.2810,9.4833);
	GotoPosition(playerid,2691.1245,-1854.2810,9.4833,true);
	SetPlayerFacingAngle(playerid,352.0244);
 	GameTextForPlayer(playerid,"8track",500,1);
 	return 1;
}

CMD:lshospital(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,1999.6538,-1448.3022,13.5601);
	GotoPosition(playerid,1999.6538,-1448.3022,13.5601,true);
	SetPlayerFacingAngle(playerid,315.0055);
 	GameTextForPlayer(playerid,"hospital",500,1);
 	return 1;
}

CMD:hospital(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,-2562.1985,602.1829,14.0838);
	GotoPosition(playerid,-2562.1985,602.1829,14.0838,true);
	SetPlayerFacingAngle(playerid,81.3180);
 	GameTextForPlayer(playerid,"hospital",500,1);
 	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /hospital",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
 	return 1;
}

CMD:cityhall(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,-2712.5020,376.1746,4.5721);
	GotoPosition(playerid,-2712.5020,376.1746,4.5721,true);
	SetPlayerFacingAngle(playerid,92.3250);
 	GameTextForPlayer(playerid,"city hall",500,1);
 	return 1;
}


CMD:area69(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,247.7753,1853.3970,8.7633,true);
  	GameTextForPlayer(playerid,"Area69",500,1);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /area69",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
  	return 1;
}

CMD:waterfall(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2115.09,1906.70,10.82,true);
  	GameTextForPlayer(playerid,"~g~Waterfall",500,1);
  	return 1;
}

CMD:grove(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2491.8481,-1670.0110,13.3359,true);
  	GameTextForPlayer(playerid,"~g~Grove STreet",500,1);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /grove",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
  	return 1;
}

CMD:underbridge(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	SetPlayerFacingAngle(playerid,143.3573);
 	GotoPosition(playerid,-1516.8829,704.6472,39.6873,true);
  	GameTextForPlayer(playerid,"~g~Wheel Arch Angels",500,1);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /underbridge",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
  	return 1;
}

CMD:carmods(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	SetPlayerFacingAngle(playerid,111.6298);
 	GotoPosition(playerid,-2688.0227,224.7584,3.9883,true);
  	GameTextForPlayer(playerid,"~g~Wheel Arch Angels",500,1);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /carmods",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
  	return 1;
}
CMD:pirateship(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2002.8772,1544.4443,13.5859,true);
  	GameTextForPlayer(playerid,"~g~Pirate's Ship",500,1);
  	return 1;
}
CMD:underbase(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,161.1870,1893.3055,10.7182,true);
  	GameTextForPlayer(playerid,"~g~Water Fall!",500,1);
  	return 1;
}

CMD:rick(playerid,params[])
{
	SendClientMessage(playerid,COLOR_WHITE,"rick visited us 2017 rick came level 9 1 day");
  	return 1;
}

CMD:sfadrop(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid, 0);
 	GotoPosition(playerid,1491.9706,-1831.2173,2515.7534,true);
 	SetPlayerFacingAngle(playerid, 60.5340);
  	GameTextForPlayer(playerid,"~p~SFA Drop~n~By RAVEN",500,1);
  	return 1;
}


CMD:alexm(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid, 0);
 	GotoPosition(playerid,2941.0317,-2055.1846,4.1920,true);
 	SetPlayerFacingAngle(playerid, 269.0625);
  	GameTextForPlayer(playerid,"AlexM's~n~House",500,1);
  	return 1;
}

CMD:bikestunt(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid, 0);
 	GotoPosition(playerid,-1500.1470,744.0488,1119.9967,true);
 	SetPlayerFacingAngle(playerid,262.9456);
  	GameTextForPlayer(playerid,"~p~Impossible~n~Bike Stunt",500,1);
  	return 1;
}


CMD:playaz(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid, 0);
 	GotoPosition(playerid,1242.7192,-817.2737,84.1406,true);
 	SetPlayerFacingAngle(playerid, 291.5060);
  	GameTextForPlayer(playerid,"~p~Playaz~n~Mansion",500,1);
  	return 1;
}

CMD:francy(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid, 0);
 	GotoPosition(playerid,2469.8804,2317.7002,91.6300,true);
 	SetPlayerFacingAngle(playerid, 168.4060);
  	GameTextForPlayer(playerid,"Francy",500,1);
  	return 1;
}


CMD:mansion(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid, 0);
 	GotoPosition(playerid,-2282.3933,-999.4680,8812.8291,true);
 	SetPlayerFacingAngle(playerid, 229.7500);
  	GameTextForPlayer(playerid,"~p~Mansion",500,1);
  	return 1;
}

CMD:cj101(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid, 1);
 	GotoPosition(playerid,-1541.8231,683.0339,201.7936,true);
 	SetPlayerFacingAngle(playerid, 329.1711);
  	GameTextForPlayer(playerid,"CJ101's~n~House",500,1);
  	return 1;
}

CMD:venera(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2194.39,1669.45,12.36,true);
  	GameTextForPlayer(playerid,"Veneras House",500,1);
  	return 1;
}

CMD:vida(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,1500.13,2774.51,10.73,true);
  	GameTextForPlayer(playerid,"Vidas House",500,1);
  	return 1;
}

CMD:deathangel(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,2);
 	GotoPosition(playerid,1211.61,-10.19,1000.92,true);
  	GameTextForPlayer(playerid,"DeathAngel House",500,1);
  	return 1;
}

CMD:boeing747(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,1155.4272,-2036.6060,69.0078,true);
  	GameTextForPlayer(playerid,"Boeing747's~n~House",500,1);
  	return 1;
}

CMD:meghan(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,1444.2395,1956.6401,11.4183,true);
  	GameTextForPlayer(playerid,"~p~Meghan's~n~House",500,1);
  	return 1;
}

CMD:saloun2(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,723.4055,-1493.4237,1.9343,true);
  	GameTextForPlayer(playerid,"~r~Saloun's~n~House",500,1);
  	return 1;
}

CMD:saloun3(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,255.63,-1321.31,53.09,true);
  	GameTextForPlayer(playerid," ~p~SALOUN'S HOUSE",500,1);
  	return 1;
}

CMD:braylon(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-364.1957,1165.1522,19.7422,true);
  	GameTextForPlayer(playerid,"~b~Braylon's~n~House",500,1);
  	return 1;
}

CMD:jethrogibbs(playerid,params[])
{
	return cmd_gibbs(playerid,params);
}

CMD:gibbs(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2331.0891,-1637.9420,483.7031,true);
  	GameTextForPlayer(playerid,"Jethro_Gibbs'~n~House",500,1);
  	return 1;
}

CMD:bikepark(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
 	SetPlayerInterior(playerid,0);
  	GotoPosition(playerid,1875.4506,-1380.6713,13.5534,true);
   	GameTextForPlayer(playerid,"~b~ Bike ~w~ Park",500,1);
   	return 1;
}


CMD:hq(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,5);
 	GotoPosition(playerid,323.9120,305.0754,999.1484,true);
  	GameTextForPlayer(playerid,"~b~H~r~Q",500,1);
  	return 1;
}

CMD:ufo(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-73.08,1367.27,11.00,true);
 	SetPlayerFacingAngle(playerid, 338.3798);
  	GameTextForPlayer(playerid,"~y~UFO",500,4);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /ufo",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:playpen(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,1204.9978,-9.8102,1000.9219,true);
 	SetPlayerFacingAngle(playerid, 77.36);
  	GameTextForPlayer(playerid,"~y~Strip Club",500,4);
  	SetPlayerInterior(playerid, 2);

	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /playpen",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:bar(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,502.5285,-70.2436,998.7578,true);
 	SetPlayerFacingAngle(playerid, 215.4070);
  	GameTextForPlayer(playerid,"~y~Bar",500,4);
  	SetPlayerInterior(playerid, 11);

	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /bar",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}



CMD:casino(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2036.53,1008.07,12.00,true);
 	SetPlayerFacingAngle(playerid, 92.01);
  	GameTextForPlayer(playerid,"~y~casino",500,4);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /casino",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:panzehir(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,910.69,-685.71,115.95,true);
  	GameTextForPlayer(playerid,"~y~PANZEHIR",500,4);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /panzehir",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}


CMD:assa(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,1288.4052,2530.3147,10.8203,true);
  	GameTextForPlayer(playerid,"~y~ Assa's ~g~House",500,4);
	return 1;
}

CMD:john(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,1330.1964,-625.7343,109.1349,true);
  	GameTextForPlayer(playerid,"~y~ john shepherds ~g~House",500,4);
  	return 1;
}

CMD:reham(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-1504.54,1374.83,3.98,true);
  	GameTextForPlayer(playerid,"~y~ Reham ~g~Island",500,4);
  	return 1;
}
CMD:woa(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2590.6575,165.6867,4.3281,true);
  	GameTextForPlayer(playerid,"~y~ The Wizard~n~Of ~g~Ass",500,4);
  	return 1;
}

CMD:police(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,1)) return SendClientMessage(playerid,COLOR_RED,"* Sorry, Only Admins can teleport to police spawn.");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-1591.9377,657.0781,7.1875,true);
 	SetPlayerFacingAngle(playerid, 54.6650);
 	format(xstring, sizeof(xstring),"Admin %p (ID:%d) teleported to Police Spawn (/police)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:kjj(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,1697.8622,-2104.0662,13.5469,true);
  	GameTextForPlayer(playerid,"~y~ KJJ's ~g~House",500,4);
  	SendClientMessage(playerid,COLOR_WHITE,"*** CJ101 would like to thank KJJ for all the donations he gave.");
  	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to KJJ House (/kjj)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:maludadisco(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2549.6995,625.3061,14.5220,true);
  	GameTextForPlayer(playerid,"~b~ Maluda's~n~ Disco",500,4);
	Streamer_Update(playerid);
	SetPlayerFacingAngle(playerid,56.3772);
	SetCameraBehindPlayer(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Maluda's Dico (/maludadisco)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:ghost(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-1297.4679,-114.1979,1062.3596,true);
  	GameTextForPlayer(playerid,"~b~ Ghost~n~Clan",500,4);
	Streamer_Update(playerid);
	SetPlayerFacingAngle(playerid,34.2800);
	SetCameraBehindPlayer(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Ghost HQ (/maluda)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:maluda(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2455.69,146.83,34.96,true);
  	GameTextForPlayer(playerid,"~b~ Maluda's~n~ Hotel",500,4);
	Streamer_Update(playerid);
	SetPlayerFacingAngle(playerid,179.51);
	SetCameraBehindPlayer(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Maluda's Hotel (/maluda)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}


CMD:tod(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	GotoPosition(playerid,261.30,2898.80,9.03,true);
  	GameTextForPlayer(playerid,"~b~ Tod's~n~ House",500,4);
	Streamer_Update(playerid);
	SetPlayerFacingAngle(playerid,215.57);
	SetCameraBehindPlayer(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Tod's House (/tod)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:jeffy(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	GotoPosition(playerid,-2081.25,-2308.43,30.62,true);
  	GameTextForPlayer(playerid,"~b~ Jeffy's~n~ House",500,4);
	Streamer_Update(playerid);
	SetPlayerFacingAngle(playerid,228.90);
	SetCameraBehindPlayer(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Jeffy's House (/jeffy)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}



CMD:kalifa(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2720.7336,-300.3682,7.0391,true);
  	GameTextForPlayer(playerid,"~b~ Kalifas's~n~ Hotel",500,4);
	Streamer_Update(playerid);
	SetPlayerFacingAngle(playerid,176.2965);
	SetCameraBehindPlayer(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Kalifa's Hotel (/kalifa)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:stackedpizza(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,5);
 	GotoPosition(playerid,376.1910,-116.3211,1001.4922,true);
  	GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~w~Stacked Pizza's~n~Pizza Shop",500,3);
	Streamer_Update(playerid);
	SetPlayerFacingAngle(playerid,155.9180);
	SetCameraBehindPlayer(playerid);
    format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to StackedPizza Shop (/stackedpizza)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}


CMD:doshka(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2145.94,-91.75,2.76,true);
  	GameTextForPlayer(playerid,"~b~ Doshka's~n~ Beach",500,4);
	Streamer_Update(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Doshka's Beach (/Doshka)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:east(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-1690.87,1351.01,9.80,true);
 	SetPlayerFacingAngle(playerid,128.86);
	Streamer_Update(playerid);
	return 1;
}

/*
CMD:legend(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-1616.49,684.96,7.18,true);
 	SetPlayerFacingAngle(playerid,335.50);
	Streamer_Update(playerid);
	return 1;
}
*/

CMD:cvondz(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-547.26,-187.27,78.40,true);
 	SetPlayerFacingAngle(playerid,116.03);
  	GameTextForPlayer(playerid,"~b~ cvondz",500,4);
	Streamer_Update(playerid);
	return 1;
}

CMD:jayce(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2111.98,-119.08,1.31,true);
 	SetPlayerFacingAngle(playerid,313.25);
  	GameTextForPlayer(playerid,"~b~ jayce",500,4);
	Streamer_Update(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Jayce's House (/jayce)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}



/*CMD:punker(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-553.00,2593.25,53.93,true);
  	GameTextForPlayer(playerid,"~r~Punker",500,4);
	Streamer_Update(playerid);
	return 1;
}
*/
CMD:saloun(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,1138.5747,-2037.8699,69.0078,true);
 	SetPlayerFacingAngle(playerid,66.3551);
  	GameTextForPlayer(playerid,"~n~~n~~g~ Saloun's Mansion",500,4);
	Streamer_Update(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Saloun's Mansion (/saloun)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}
CMD:mehdi(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,978.78,-673.72,121.97,true);
 	SetPlayerFacingAngle(playerid,210.59);
  	GameTextForPlayer(playerid,"~p~ mehdi's house",500,4);
	Streamer_Update(playerid);
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to mehdi's house (/mehdi)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:datower(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	Streamer_UpdateEx(playerid,413.0125,2542.9424,26.5826);
 	SetPlayerInterior(playerid,0);
 	SetPlayerFacingAngle(playerid, 177.1093);
  	GotoPosition(playerid,413.0125,2542.9424,26.5826,true);
	return 1;
}

CMD:peckers(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	Streamer_UpdateEx(playerid,-252.9883,2621.7688,62.9103);
 	SetPlayerInterior(playerid,0);
 	SetPlayerFacingAngle(playerid, 336.9672);
  	GotoPosition(playerid,-252.9883,2621.7688,62.9103,true);
	return 1;
}



CMD:city(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	Streamer_UpdateEx(playerid,3507.7263,-197.1925,15.8742);
 	GotoPosition(playerid,3507.7263,-197.1925,15.8742,true);
 	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:ft(playerid,params[])
{
 	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,0);
	GotoPosition(playerid,-731.8359,-1864.7522,11.8498,true);
	return 1;
}

CMD:city2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	Streamer_UpdateEx(playerid,-3131.8640,-2624.2654,59.2779);
 	GotoPosition(playerid,-3131.8640,-2624.2654,59.2779,true);
 	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city2",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:city3(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
 	Streamer_UpdateEx(playerid,3387.0535,-1268.6613,17.2600);
  	GotoPosition(playerid,3387.0535,-1268.6613,17.2600,true);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city3",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}

CMD:city4(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
 	Streamer_UpdateEx(playerid,5437.6040,-2277.5217,4.6215);
  	GotoPosition(playerid,5437.6040,-2277.5217,4.6215,true);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city4",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}


CMD:city5(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
 	Streamer_UpdateEx(playerid,2390.1516,-5295.1299,6.3841);
  	GotoPosition(playerid,2390.1516,-5295.1299,6.3841,true);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /city5",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
	return 1;
}


CMD:nrgstunt2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,-1336.3647,-2035.6841,12.3394);
 	GotoPosition(playerid,-1336.3647,-2035.6841,12.3394,true);
  	GameTextForPlayer(playerid,"~g~NRG Stunt2~n~By [Hitman]",500,1);
	return 1;
}

CMD:driftcity(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,-2202.8438,-4165.2114,16.4755);
 	GotoPosition(playerid,-2202.8438,-4165.2114,16.4755,true);
  	GameTextForPlayer(playerid,"~g~DriftCity~n~~w~by ColdXX",500,1);
	return 1;
}


CMD:drift1(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-282.5566,1528.6976,75.3594,true);
  	GameTextForPlayer(playerid,"Drift",500,1);
	return 1;
}

CMD:drift2(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	SetPlayerFacingAngle(playerid,264.5770);
 	GotoPosition(playerid,1261.1836,-2056.0444,59.4025,true);
  	GameTextForPlayer(playerid,"Drift",500,1);
	return 1;
}

CMD:drift3(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2409.5212,-601.2294,132.6484,true);
  	GameTextForPlayer(playerid,"Drift",500,1);
	return 1;
}

CMD:drift4(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-473.0369,1875.3160,82.8898,true);
  	GameTextForPlayer(playerid,"Drift",500,1);
	return 1;
}

CMD:drift5(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-983.3124,-410.6667,36.2641,true);
  	GameTextForPlayer(playerid,"Drift",500,1);
	return 1;
}

CMD:drift6(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-1505.5842,-1245.5162,100.8578,true);
  	GameTextForPlayer(playerid,"Drift",500,1);
	return 1;
}

CMD:windy(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-2014.8573,923.3990,45.2969,true);
  	GameTextForPlayer(playerid,"Windy Road",500,1);
	return 1;
}

CMD:probe(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,-78.2076,1365.3284,10.3966,true);
  	GameTextForPlayer(playerid,"Probe Inn",500,1);
	return 1;
}



CMD:tc(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	GotoPosition(playerid,-2755.7249,-254.7626,7.1875,true);
 	GameTextForPlayer(playerid,"Tennis Court",500,1);
 	return 1;
}

CMD:tenniscourt(playerid,params[])
{
	return cmd_tc(playerid,params);
}


CMD:disco(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,17);
  	GotoPosition(playerid,488.9750,-15.7682,1000.6797,true);
   	GameTextForPlayer(playerid,"~p~Disco",500,1);
   	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to Disco Club (/disco)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
   	return 1;
}

CMD:factory(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2582.59,2772.60,10.82,true);
  	GameTextForPlayer(playerid,"~b~factory",500,1);
  	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to the factory (/factory)",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
  	return 1;
}

CMD:sumo1(playerid,params[])
{
	SetPlayerVirtualWorld(playerid,11);
	Streamer_UpdateEx(playerid,1889.6774,-2030.2837,113.2087);
	if(IsPlayerInAnyVehicle(playerid))
	{
		GotoPosition(playerid,1889.6774,-2030.2837,113.2087,true);
	}
	else
	{
	    SendClientMessage(playerid,COLOR_RED,"* You must be in a vehicle to teleport here!");
	}
	SendClientMessage(playerid,COLOR_ORANGE,"* Welcome to /sumo1 - The objective here is to not fall off, while trying to make others fall off!");
	return 1;
}

CMD:vrock(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2622.9709,2445.7612,14.8672,true);
  	GameTextForPlayer(playerid,"~b~v rock hotel",500,1);
  	return 1;
}


CMD:vrock2(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2628.3633,2295.8652,10.8299,true);
  	GameTextForPlayer(playerid,"~b~v rock hotel",500,1);
  	return 1;
}

CMD:bedroom(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,1);
 	GotoPosition(playerid,246.5237,304.1298,999.1484,true);
  	GameTextForPlayer(playerid,"~w~bedroom",500,1);
  	return 1;
}


CMD:janitor(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,10);
 	GotoPosition(playerid,1889.953369,1017.438293,31.882812,true);
  	GameTextForPlayer(playerid,"~w~janitor",500,1);
  	return 1;
}

CMD:woozie(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,1);
 	GotoPosition(playerid,-2167.9929,644.3165,1052.3750,true);
  	GameTextForPlayer(playerid,"~w~woozies",500,1);
  	return 1;
}

CMD:restaurant(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,1);
 	GotoPosition(playerid,447.0408,-9.8580,1000.7344,true);
  	GameTextForPlayer(playerid,"~w~restaurant",500,1);
  	return 1;
}

CMD:sweets(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,1);
 	GotoPosition(playerid,2530.0754,-1674.4087,1015.4986,true);
  	GameTextForPlayer(playerid,"~w~sweets",500,1);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /sweets",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
  	return 1;
}

CMD:dam(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	switch(random(2))
	{
	    case 0:
	    {
    		GotoPosition(playerid,-827.2623,1961.3745,7.0000,true);
	    }
	    
	    case 1:
	    {
	        GotoPosition(playerid,-596.1562,1969.3440,7.0000,true);
	        SetPlayerFacingAngle(playerid,119.6060);
	    }
	    
	    case 2:
	    {
	        GotoPosition(playerid,-652.7831,2042.5663,60.3906,true);
	        SetPlayerFacingAngle(playerid,169.7164);
	    }
	}
	
  	GameTextForPlayer(playerid,"~w~dam",500,1);
  	

  	return 1;
  	
  	
}


CMD:donuts(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,4);
 	GotoPosition(playerid,452.1773,-88.9144,999.5547,true);
  	GameTextForPlayer(playerid,"~w~donuts",500,1);
  	return 1;
}

CMD:railroad(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
 	GotoPosition(playerid,2552.4502,2327.7817,3.4844,true);
  	GameTextForPlayer(playerid,"~b~railroad",500,1);
  	return 1;
}

CMD:rcbox(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,10);
 	GotoPosition(playerid,-990.9422,1065.7354,1342.6691,true);
  	GameTextForPlayer(playerid,"~b~rc box",500,1);
  	return 1;
}

CMD:crackhouse(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,2);
 	GotoPosition(playerid,2533.3596,-1301.8341,1031.4219,true);
  	GameTextForPlayer(playerid,"~b~crackhouse",500,1);
  	return 1;
}

CMD:meathouse(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,1);
 	GotoPosition(playerid,945.2444,2172.5684,1011.0303,true);
  	GameTextForPlayer(playerid,"~b~meathouse",500,1);
  	return 1;
}

CMD:prison(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,5);
	SetPlayerFacingAngle(playerid,0.2533);
 	GotoPosition(playerid,324.2669,305.9202,999.1484,true);
  	GameTextForPlayer(playerid,"~b~prison",500,1);
  	return 1;
}

CMD:angelpine(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,212.1452);
 	GotoPosition(playerid,-2160.3135,-2410.0005,30.6250,true);
  	GameTextForPlayer(playerid,"~b~angel pine",500,1);
  	return 1;
}

CMD:graveyard(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,297.1407);
 	GotoPosition(playerid,-338.1295,2218.5715,42.4825,true);
  	GameTextForPlayer(playerid,"~w~graveyard",500,1);
  	return 1;
}

CMD:teepee(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,325.8710);
 	GotoPosition(playerid,-852.4025,2733.7739,45.7898,true);
  	GameTextForPlayer(playerid,"~g~teepee",500,1);
  	return 1;
}

CMD:mcasino(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,325.8710);
 	GotoPosition(playerid,-2585.4399,636.5630,14.5581,true);
  	return 1;
}


CMD:clowns(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,141.0259);
 	GotoPosition(playerid,850.03,1838.21,91.27,true);
  	GameTextForPlayer(playerid,"~g~clowns",500,1);
  	return 1;
}

CMD:price(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
 	GotoPosition(playerid,4.46596,11.000,430.33488,true);
  	GameTextForPlayer(playerid,"~g~price",500,1);
  	return 1;
}


CMD:boathouse(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,141.0259);
 	GotoPosition(playerid,-906.3969,2693.3801,42.3703,true);
  	GameTextForPlayer(playerid,"~g~boathouse",500,1);
  	return 1;
}

CMD:longjump(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,90.7556);
 	GotoPosition(playerid,-669.5676,2306.6704,135.5093,true);
  	GameTextForPlayer(playerid,"~g~long jump",500,1);
  	return 1;
}

CMD:kingring(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,350.2383);
 	GotoPosition(playerid,-148.1784,1211.3571,19.7352,true);
  	GameTextForPlayer(playerid,"~g~king ring",500,1);
  	return 1;
}

CMD:barn(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,179.1567);
 	GotoPosition(playerid,-17.6990,1204.3289,19.3594,true);
  	GameTextForPlayer(playerid,"~g~barn",500,1);
  	return 1;
}

CMD:lvpolice(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,315.2509);
 	GotoPosition(playerid,2298.9158,2425.4956,10.8203,true);
  	GameTextForPlayer(playerid,"~g~lv police",500,1);
  	return 1;
}

CMD:mall(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,3271.6972);
 	GotoPosition(playerid,2555.2847,1825.8004,10.8203,true);
  	GameTextForPlayer(playerid,"~g~mall",500,1);
  	return 1;
}


CMD:cludia(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,181.4005);
 	GotoPosition(playerid,1849.45,-1927.70,13.38,true);
  	GameTextForPlayer(playerid,"~g~cludia",500,1);
  	return 1;
}

CMD:hoshi(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,238.4005);
 	GotoPosition(playerid,2112.72,1152.02,13.53,true);
  	GameTextForPlayer(playerid,"~g~hoshi's castle",500,1);
  	return 1;
}


CMD:school(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,181.4005);
	SetPlayerInterior(playerid,3);
 	GotoPosition(playerid,-2029.7643,-105.7162,1035.1719,true);
  	GameTextForPlayer(playerid,"~g~school",500,1);
  	return 1;
}

CMD:beach2(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,144.4632);
 	GotoPosition(playerid,-2904.1543,389.9697,6.1735,true);
  	GameTextForPlayer(playerid,"~y~beach",500,1);
  	return 1;
}


CMD:reefy(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,274.2906);
 	GotoPosition(playerid,728.81,-1276.16,13.56,true);
  	GameTextForPlayer(playerid,"~y~ReeFy",500,1);
  	SetCameraBehindPlayer(playerid);
  	return 1;
}

CMD:icode(playerid,params[])
{
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerFacingAngle(playerid,90);
 	GotoPosition(playerid,-702.28,956.44,12.37,true);
  	GameTextForPlayer(playerid,"~y~icode",500,1);
  	SetCameraBehindPlayer(playerid);
  	
	format(xstring, sizeof(xstring),"Player %p (ID:%d) teleported to /icode",playerid,playerid);
	SendTeleMessageToAdmins(COLOR_YELLOW,2,xstring);
  	return 1;
}


CMD:launcher(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get in a vehicle first!");
   	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	Streamer_UpdateEx(playerid,-4135.7363,1099.2023,63.2553);
	SetPlayerFacingAngle(playerid,0.2533);
 	GotoPosition(playerid,-4135.7363,1099.2023,63.2556,true);
  	GameTextForPlayer(playerid,"~b~launcher",500,1);
  	new Float:vx, Float:vy, Float:vz;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), vx, vy, vz);
	if (floatabs(vx) < 3 && floatabs(vy) < 3 && floatabs(vz) < 3)
	{
		SetVehicleVelocity(GetPlayerVehicleID(playerid), vx * SpeedBoostMultiplier[playerid], vy * SpeedBoostMultiplier[playerid], vz * SpeedBoostMultiplier[playerid]);
	}
  	return 1;
}

CMD:teleports(playerid,params[])
{
	return cmd_teles(playerid,params);
}

CMD:teles(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    ShowPlayerDialog(playerid,20,DIALOG_STYLE_LIST,"Teleports","{6495ED}Airports\n{7CFC00}Parachuting Spots\n{ff00e6}Drift Zones\n{83BFBF}Parkour Spots\n{FF9900}Deathmatch Zones\n{10F441}Stunts\n{83BFBF}Interiors\n{FF9900}Custom Objects","Go","Cancel");
	SendClientMessage(playerid,COLOR_ORANGE,"** For more teleports, type /teles2. **");
	SendClientMessage(playerid,COLOR_ORANGE,"** You can also type /tpos to teleport to a position ***");
	return 1;
}

CMD:teles2(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SendClientMessage(playerid,COLOR_ORANGE,"** Places: /m1, /m2, /bb, /pier69, /cage, /beach, /club, /guns, /windy, /waa, /tf, /ft, /island, /cityhall");
	SendClientMessage(playerid,COLOR_ORANGE,"/hq, /wb, /college, /bikepark, /sr1, /tp1, /sex, /city, /city2, /city3, /city4, /ph, /sumo");
    SendClientMessage(playerid,COLOR_ORANGE,"/vrock, /vrock2, /railroad, /rcbox, /meathouse, /prison, /angelpine, /methlab, /docks, /8track, /hospital");
    SendClientMessage(playerid,COLOR_ORANGE,"** You can also type /tpos to teleport to a position ***");
	return 1;
}

CMD:help(playerid,params[])
{
	/*
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	ShowPlayerDialog(playerid,1,0,"RevolutionX Help","Welcome to RevolutionX DM/Stunt/Race!\nRevolutionX is about DMing, Stunting, and freeroaming! Do whatever, but follow the rules.\n\n /carhelp,/rules,/uptime,/about,/credits,/website,/colors, /minigames\n\nType /car to spawn a car.\nType /sfa, /lsa, and /lva to teleport to airports.","Ok","Cancel");
	*/
 	ShowPlayerDialog(playerid,42,DIALOG_STYLE_LIST,"RevolutionX Help Menu","General Help/Information\nTokens Help\nVIP Help\nTeleports List\nVehicle Help\nEaster Egg Help\nIRC Channel Info","Ok","Cancel");
 	
	return 1;
}
CMD:ask(playerid,params[])
{
	if(Players[playerid][Muted] == true) return SendClientMessage(playerid,COLOR_RED,"Error: You are muted.");
	new askq[128];
    if(sscanf(params, "s[128]", askq)) return SendClientMessage(playerid, COLOR_RED, "Usage: /ask <question>");
    SendClientMessage(playerid, COLOR_YELLOW, "You have asked your question, please wait for a response from our staff team.");
    format(xstring,sizeof xstring,"[ASK] %p (ID:%d) asked the following question: %s",playerid,playerid,askq);
    SendMessageToAdminsEx(COLOR_YELLOW,1,xstring);
	return 1;
}
CMD:answer(playerid,params[])
{
	new id,answer[128];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /answer <id>");
	if(IsPlayerAdminLevel(playerid,1))
	{
		format(xstring, sizeof(xstring), "* Admin %p will assist you regarding your question: %s",playerid,answer);
		SendClientMessage(playerid,COLOR_ORANGE,xstring);
		format(xstring,sizeof xstring,"Admin %p (ID:%d) answered %p question using /answer: %s",playerid,playerid,id,answer);
	    SendMessageToAdminsEx(COLOR_AC,1,xstring);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin level 1 or higher.");
	return 1;
}

CMD:imghelp(playerid,params[])
{
 	if(!IsAdmin(playerid))
	{
 		ShowPlayerDialog(playerid,58,DIALOG_STYLE_LIST,"RevolutionX Help Menu","Our image file allows you to have the following added the server:\n- New Objects\n-New Vehicles\n-New Skins\n\nYou can find the file at our website.","Ok","Cancel");
	}   else SendClientMessageToAll(COLOR_AMSG,"Info:{FFFFFF} With our IMAGE file, you can add some cool objects,vehicles,and skins to your game! Get it at the website.");
	return 1;
}

CMD:website(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		SendClientMessageToAll(COLOR_AMSG,"Info:{FFFFFF} Visit and register on the forums: revolutionxsamp.com/forums");
		return 1;
	}
	ShowPlayerDialog(playerid,17,DIALOG_STYLE_MSGBOX,"RevolutionX Webstite","You can visit our website at:\nrevolutionxsever.com\nOur forums are located at:\nrevolutionxserver.com/forums","Ok","Cancel");
	return 1;
}

CMD:facebook(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		SendClientMessageToAll(COLOR_AMSG,"Join Our Facebook Group: https://www.facebook.com/groups/116920198514602/ ||");
		return 1;
	}
	ShowPlayerDialog(playerid,17,DIALOG_STYLE_MSGBOX,"RevolutionX Facebook","Join our Facebook Group\n https://www.facebook.com/groups/116920198514602/","Ok","Cancel");
	return 1;
}


CMD:viphelp(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	ShowPlayerDialog(playerid,17,DIALOG_STYLE_MSGBOX,"RevolutionX VIP","Please check our forums, VIP Applications Board for requirements!","Ok","Cancel");
	return 1;
}

CMD:avip(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		format(xstring,sizeof xstring,"Admin %p (ID:%d): Type /vipinfo to learn how to become a VIP.",playerid,playerid);
		SendClientMessageToAll(COLOR_ORANGE,xstring);
	}
	return 1;
}

CMD:vipinfo(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		SendClientMessageToAll(COLOR_AMSG,"Info:{FFFFFF} Want to be a VIP Player? Play regularly and make sure you are registered on the forum.");
		return 1;
	}   else return cmd_viphelp(playerid,params);
}

CMD:proinfo(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		SendClientMessageToAll(COLOR_AMSG,"Info:{FFFFFF} Want to be a Pro Member?? Donate $5 or more to the server! There is a link at the forum.");
		return 1;
	}
	else 
	{
	    SendClientMessage(playerid,COLOR_AMSG,"Info:{FFFFFF} Want to be a Pro Member?? Donate $5 or more to the server! There is a link at the forum.");
 	}
 	return 1;
}

CMD:donateinfo(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		SendClientMessageToAll(COLOR_AMSG,"Info:{FFFFFF} Wan't to Donate to Support RevolutionX? Go to http://revolutionxsamp.com and click on DONATE.");
        SendClientMessageToAll(COLOR_AMSG,"Info:{FFFFFF} Type /donate on more info and details about current promotions.");
		return 1;
	} 	else ShowPlayerDialog(playerid,41,DIALOG_STYLE_MSGBOX,"Donate Info","Donate at http://revolutionxsamp.com (Click Donate)\n\nCurrent Promotions:\nSummer 2012- Donate any amount to get VIP!","Ok","");
	return 1;
}


CMD:donate(playerid,params[])
{
	ShowPlayerDialog(playerid,41,DIALOG_STYLE_MSGBOX,"Donate Info","Donate at http://donate.revolutionxsamp.com (Click Donate)\nDonate any amount to get PRO MEMBER!","Ok","");
	return 1;
}


CMD:rules(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	
	format(xstring,sizeof xstring,"* Do not use cheats or cleo mods that given an advantage to other players.\n* Do not use racism words.\n* Do not Drive-by at spawn zones\n* Do not Drive-by with AutoFix (/af) enabled.\n* Do not Evade deaths by using teleports or using the /healme command.");
	format(xstring,sizeof xstring,"%s\n* Do not use water-trucks at spawn zones.\n* Do not spam the chat.\n* Advertising is not Allowed\n* Do not spawnkill",xstring);
	
	ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX,"RevolutionX Rules",xstring,"Ok","Cancel");
	
	return 1;
}

CMD:frr(playerid,params[])
{
	if(!IsAdmin(playerid)) return SendClientMessage(playerid,COLOR_RED,"this is an admin command duh!");
	new r__id;
	if(sscanf(params,"u",r__id)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /frr <playerid/playername>");
	format(xstring, sizeof(xstring), "Admin %p (ID:%d) forced %p (ID:%d) to read the rules",playerid,playerid,r__id,r__id);
	SendMessageToAdminsEx(COLOR_AC,1,xstring);
	ShowPlayerDialog(r__id,2,DIALOG_STYLE_MSGBOX,"RevolutionX Rules",xstring,"Ok","Cancel");
	return 1;
}

CMD:cars(playerid,params[])
{
	if( Players[playerid][AmRacing] == true) 
	{
		if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
		if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		new Float:Zz;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
		new PlayersVehicle;
		if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
		{
		    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
			GetXYInFrontOfPlayer(playerid, x, y, 8);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		else
		{
			GetXYInFrontOfPlayer(playerid, x, y, 5);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid,PlayersVehicle, 0);
		format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);

		SendClientMessage(playerid, COLOR_YELLOW,xstring);
		return 1;		
	}
	if( DriftID[playerid] != -1 && TDrif[playerid] == true)
	{
			return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
	}
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	ShowPlayerDialog(playerid,3,DIALOG_STYLE_LIST,"RevolutionX Cars","Infernus\nBullet\nComet\nTurismo\nAlpha\nEuros\nBuffalo\nCheetah\nHotring Racer (1)\nHotring Racer (2)\nHotring Racer (3)\nElegy\nFeltzer\nStallion\nWindsor\nBF Injection\nAdmiral\nSoliar\nGlendale\nHermes\nBlista Compact\nMesa","Spawn","Cancel");
	SendClientMessage(playerid,COLOR_GREY,"* You can also do /v <carname> to get cars.");
	return 1;
}

CMD:bikes(playerid,params[])
{
	if( Players[playerid][AmRacing] == true)
	{
		if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
		if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		new Float:Zz;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
		new PlayersVehicle;
		if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
		{
		    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
			GetXYInFrontOfPlayer(playerid, x, y, 8);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		else
		{
			GetXYInFrontOfPlayer(playerid, x, y, 5);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid,PlayersVehicle, 0);
		format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);

		SendClientMessage(playerid, COLOR_YELLOW,xstring);	
		return 1;	
	}
	if( DriftID[playerid] != -1 && TDrif[playerid] == true)
	{
			return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
	}
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	
	ShowModelSelectionMenu(playerid, bikelist, "Bike Menu");
	return 1;
}

CMD:planes(playerid,params[])
{
    if(IsPlayerInAnyDynamicArea(playerid)) return SendClientMessage(playerid,COLOR_RED,"You cannot use this command near spawn.");
	if( DriftID[playerid] != -1 && TDrif[playerid] == true)
	{
			return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
	}
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	ShowModelSelectionMenu(playerid, planelist, "Select Plane",COLOR_GREY,COLOR_WHITE,COLOR_ORANGE);
	return 1;
}


CMD:boats(playerid,params[])
{
    if(IsPlayerInAnyDynamicArea(playerid)) return SendClientMessage(playerid,COLOR_RED,"You cannot use this command near spawn.");
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	ShowPlayerDialog(playerid,6,DIALOG_STYLE_LIST,"RevolutionX {FF66F}Boats","Coastguard\nDinghy\nJetmax\nLaunch\nMarquis\nPredator\nReefer\nSpeeder\nSquallo\nTropic","Spawn","Cancel");
	return 1;
}


CMD:helis(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	ShowModelSelectionMenu(playerid, helislist, "Select Heli",COLOR_GREY,COLOR_WHITE,COLOR_ORANGE);
	return 1;
}


CMD:drift(playerid,params[])
{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,-1,"* You've already joined a minigame. /leavedm to leave a minigame");
		if(gSpectateID[playerid] != INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"You are currently Specing a player, can't join. Use /specoff to exit Spec mode.");
		if(Players[playerid][AmRacing] == true) return SendClientMessage(playerid,-1,"* You've joined a race. /leave to leave a racing");
		if(Players[playerid][AmBuilding] == true) return SendClientMessage(playerid,COLOR_RED,"You are currently building a race, can't join. Use /clearrace to exit build mode.");
	    if(TDrif[playerid] == true)
		{
			TDrif[playerid] = false;
			DestroyTextDraws(playerid);
			SendClientMessage(playerid,-1,"Drift Mode {FF00FF}OFF");
			TDriftPointsNow[playerid] = 0; PlayerDriftCancellation[playerid] = 0;
			TextDrawHideForPlayer(playerid,TDDrift[playerid]);
			DriftBonus[playerid]=1;
			TextDrawSetString(TDDrift[playerid]," ");
			DriftPointsNow[playerid] = 0;
			TextDrawHideForPlayer(playerid,TDDrift[playerid]);
			KillTimer(eDriftTimer[playerid]);
			KillTimer(TimerA[playerid]);
			KillTimer(TimerC[playerid]);
			TimeLeft[playerid] = 180;
			SpeedBoostDisabled[playerid] = false;
			Players[playerid][Minigame] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
		}

		new str[1000];
		mysql_query(SQL,"SELECT  `dID`,`dName`, `X`, `Y`, `Z`, `A` FROM `drift` ORDER BY `drift`.`dName` ASC");
		if(cache_num_rows() == 0) SendClientMessage(playerid, COLOR_RED, "No tracks avaiable in Drift");
		else
		{
			for(new x=0;x<cache_num_rows();x++)
			{
				cache_get_value_name_int(x,"dID", __loading[playerid][x]);
				cache_get_value_name(x,"dName",DriftName[playerid]);
				cache_get_value_name_float(x,"X", DriftPos[playerid][0]);
				cache_get_value_name_float(x,"Y", DriftPos[playerid][1]);
				cache_get_value_name_float(x,"Z", DriftPos[playerid][2]);
				cache_get_value_name_float(x,"A", DriftPos[playerid][3]);
				if(x == 0) format(str,sizeof str,"{00A86B}%d. %s",x+1,DriftName[playerid]);
				else format(str,sizeof str,"%s\n{00A86B}%d. %s",str,x+1,DriftName[playerid]);
			}
			ShowPlayerDialog(playerid,3894,DIALOG_STYLE_LIST,"{FFFFFF}Drift Mode  - {FF0000}v1", str,"VEHICLES!","Exit");
			new i = 143;
			foreach(i : Vehicle)
			{
				if(!IsSeatTaken(i,0)) DestroyVehicleEx(i);
			}
			/*
			for(i = 143; i < MAX_VEHICLES; i++)
			{
				if(!IsSeatTaken(i,0))
				{
						DestroyVehicleEx(i);
				}
			}
			*/
		}
    	return 1;
}

CMD:cmds(playerid,params[])
{
	new string[2500];
	strcat(string, "{808080}Server Help Commands:                                                       {C6D9F0}Player Commands:\n");
	strcat(string, "{FFFFFF}/help - Shows about Revolution-X                                       /register - To Register account [stats will save only if it is registered]\n");
	strcat(string, "/admins - shows current admins on the server                  /login - To Login to existing account\n");
	strcat(string, "/color - change your player color\n");
	strcat(string, "/teles - Shows list of teleport part 1                                    /changepass - To Change the password.\n");
	strcat(string, "/teles2 - Shows list of teleport part 2                                 /drift - Displays drift area(s) list Dialog Menu\n");
	strcat(string, "/stunts - list of default stunts avaiable in RX                     /kungfu - To Change your fighting style into kungfu\n");
	strcat(string, "/credits - Shows thanksto list                                              /boxing - To Change your fighting style into boxing\n");
	strcat(string, "/racehelp - Shows about RxRace                                         /grabkick - To Change your fighting style into grabkick\n");
	strcat(string, "/thelp - Shows about RxToken                                             /elbow - To Change your fighting style into elbow\n");
	strcat(string, "/hohelp - Shows about Holding System Object                  /join - To Join a race if any started.\n");
	strcat(string, "/report - To Report hackers                                                 /leave - To Leave current race.\n");
	strcat(string, "/minigames -  List of Mini-Games                                         /stats - To View your statistics\n");
	strcat(string, "/website - shows \"www.revolutionxsamp.com.com\"                       /stats (ID) - To View others statistics\n");
	strcat(string, "/viphelp - shows about vip system                                      /token & /rt - To use RxToken\n");
	strcat(string, "{8DB3E2}Groups:      {FFFFFF}                                                                           /mytoken & /mrt <optional:playerid>  - To View your/others current token\n");
	strcat(string, "/grouphelp - Show about RxGroup System                        /tradein - Trading for money\n");
	strcat(string, "{1F497D}Weapon Commands:   {FFFFFF}                                                         /radio - To Listen to RxRadio\n");
	strcat(string, "/ammo & /guns - teleport inside ammo station                /stopradio - To stop listening to radio\n");
	strcat(string, "/ammo2 & /guns2 - teleport outside ammo station         /mylabel - Do add a text above your head, can view by others\n");
	strcat(string, "/para - To Get Free Parachute                	        /cb - set bubble chat.\n");
	strcat(string, "/brass - To Get Free Brass Knuckles                                 /pm <id> <message> - To Send personal Message.\n");
	strcat(string, "/knife - To Get Free Knife                                                   /skin <1-299> - To Change your skin\n");
	strcat(string, "/bat - To Get Free bat                                                        /afk <optional:reason> - To Go AFK.\n");
	strcat(string, "/dildo - To Get Free dildo                                                  /back - To Be Back from AFK\n");
	strcat(string, "/chainsaw - To Get Free Chainsaw                                    /kill - to kill yourself;\n");
	ShowPlayerDialog(playerid,99,DIALOG_STYLE_MSGBOX,"Commands List",string,"Next","Cancel");
//	ShowPlayerDialog(playerid,11,0,"Commands List","Server Help Commands:\n/report,/help,/admins,/teles,/stunts,/credits,/racehelp,/thelp,/hohelp\n\nPlayer Commands:\n/stats,/para,/brass,/skin,/day,/night,/beer,/sober,/drunk,/me\n/neon,/glasses,/band,\n/kungfu,/elbow,/grabkick,/boxing\n\nVehicles: \n/v <car>,/poptires <tires>,/car,/flip,/fix ,/hy,/tune,/wheels,/cc <id> <id>","Ok","Cancel");

	return 1;
}

CMD:animslist(playerid,params[]) return cmd_animhelp(playerid,params);
CMD:animhelp(playerid,params[])
{
	ShowPlayerDialog(playerid,59,DIALOG_STYLE_LIST,"Animation List - /animhelp","/beer Get a Beer\n/sober - Be Sober\n/sprunk Get Sprunk\n/drunk be Drunk\n/strip1 - strip animation 1\n/strip2 - strip animation 2\n/strip3 - strip animation 3\n/strip4 - strip animation 4\n/strip5 - strip animation 5\n/smoke Smoke\n/pee Piss\n/onfire - Be On Fire\n/cpr - medic Animation\n/fu - 'fu'\n/sit - Sit Animation\n/handsup - Handsup Animation\n/puke Puke\n/kiss Kiss\n/wank Wank\n/sa Clear Your Animation\n","Ok","Cancel");
	return 1;
}

CMD:pink(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_PINK);
	SendClientMessage(playerid,COLOR_PINK,"Color Changed.");
	Players[playerid][Color] = 15;
	return 1;
}

CMD:vipcolor(playerid,params[])
{
	if(IsVIP(playerid))
	{
		SetPlayerColor(playerid,COLOR_VIP);
		SendClientMessage(playerid,COLOR_VIP,"Color Changed.");
		Players[playerid][Color] = 2;
	}
	return 1;
}


CMD:admincolor(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		SetPlayerColor(playerid,COLOR_ADMIN);
		SendClientMessage(playerid,COLOR_PINK,"Color Changed.");
		Players[playerid][Color] = 18;
	}
	return 1;
}

CMD:brown(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerColor(playerid,COLOR_BROWN);
	SendClientMessage(playerid,COLOR_BROWN,"Color Changed.");
	Players[playerid][Color] = 17;
	return 1;
}
CMD:color(playerid,params[])
{
	return cmd_colors(playerid,params);
}
CMD:colors(playerid,params[])
{
    //ShowPlayerDialog(playerid,28,0,"Colors","/red,/blue,/yellow,/purple,/orange,/white,/green,/aqua\n/darkyellow,/brightyellow,/brightblue,/orange,/lightblue,/pink","Ok","Cancel");
 	ShowPlayerDialog(playerid,28,DIALOG_STYLE_LIST,"Colors","Red\nBlue\nYellow\nPurple\nOrange\nWhite\nGreen\nAqua\nDark Yellow\nBright Yellow\nBright Blue\nLight Blue\nPink\nBrown\nGrey","Ok","Cancel");
	return 1;
}

CMD:vipcmds(playerid,params[])
{
	if(IsVIP(playerid))
	{
		format(xstring, sizeof xstring, "/jp - Gives jetpack \n /sniper - gives sniper\n/buildrace - To start Build a race\n/cp - To Set Checkpoint\n/saverace - To Save your race\n/clearrace - To Clear Current BuildRace\n");
		format(xstring, sizeof xstring, "%s\n/dcp - Deletes Last checkpoint when building a race.\n/scp [number] - selects an existing checkpoint\n/rcp - replaces the current checkpoint with a new one\n/mcp [x/y/z] [amount] - moves the selected checkpoint desired amount in desired direction\n* VIP can't load races, Only Admins can.\nGoto http://revolutionxsamp.com.com/ to apply for VIP",xstring);
        ShowPlayerDialog(playerid,97,DIALOG_STYLE_MSGBOX,"VIP Commands",xstring,"Ok","Cancel");
	}

	if(IsVIPLevel2(playerid)) SendClientMessage(playerid,COLOR_GREY,"** Pro Members command can be found on /procmds");
	return 1;
}


CMD:sniper(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(IsVIP(playerid))
	{
	    GivePlayerWeapon(playerid,WEAPON:34,50);
	    PlayerPlaySound(playerid, 1054,0,0,0);
	    format(xstring, sizeof(xstring),"VIP %p (ID:%d) used the /sniper command",playerid,playerid);
    	SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	}
	else
	{
	    if(IsAdmin(playerid))
	    {
     		GivePlayerWeapon(playerid,WEAPON:34,100);
     		PlayerPlaySound(playerid, 1054,0,0,0);
	        SendClientMessage(playerid,COLOR_GREEN,"* You bought a sniper.. since you are admin it was free");
	        return 1;
	    }
	    if(IsVIPLevel2(playerid))
	    {
     		GivePlayerWeapon(playerid,WEAPON:34,60);
     		PlayerPlaySound(playerid, 1054,0,0,0);
	        SendClientMessage(playerid,COLOR_GREEN,"* You bought a sniper.. since you are a pro member it was free");
	        return 1;
	    }
	    if(Players[playerid][Token] >= 3)
	    {
	        GivePlayerWeapon(playerid,WEAPON:34,50);
	        SendClientMessage(playerid,COLOR_GREEN,"* You bought a sniper for 3 tokens.");
	        PlayerPlaySound(playerid, 1054,0,0,0);
	        Players[playerid][Token]-=3;
	        
    	    format(xstring, sizeof(xstring),"%p (ID:%d) used the /sniper command",playerid,playerid);
	    	SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	        
	    }   else SendClientMessage(playerid,COLOR_GREEN,"* You need more tokens");
	}
	return 1;
}


CMD:stunts(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	PlayerPlaySound(playerid,1054,0,0,0);
 	ShowPlayerDialog(playerid,12,DIALOG_STYLE_LIST,"Stunts List","{33CCFF}Twister (By Hitman)\n{FF9900}NrgStunt2 By Hitman\n{FF359A}Jump by DeathMaster\n{00FF00}Quarry By DeathMaster\n{00FFFF}Rafinha\n{33CCFF}Impossible Challeges (By GTAFreak)\n{FF359A}TripZenX 1 (easy) (By YenX)\n{00FF00}TripZenX 2 (normal) (By YenX)\n{FFDD00}TripZenX 3 (hard) (By YenX)\n{D52DFF}BMX parkour By RaveN\n{00FFFF}Race Track By RaveN\n","Ok","Cancel");
	return 1;
}

CMD:stunts2(playerid, params[])
{
    new iString[1500] = "{FF4500}\n";
    format(iString, sizeof(iString), "- {FFFFFF}/TripZenx1 \n");
    format(iString, sizeof(iString), "- {375FFF}/TripZenx2 \n");
    format(iString, sizeof(iString), "- {FFFFFF}/TripZenx3 \n");
    format(iString, sizeof(iString), "- {375FFF}/ParkourNRG \n");
    format(iString, sizeof(iString), "- {FFFFFF}/parkour1 \n");
	format(iString, sizeof(iString), "- {375FFF}/Parkour2 \n");
	format(iString, sizeof(iString), "- {FFFFFF}/Parkour3 \n");
	format(iString, sizeof(iString), "- {375FFF}/Road1-14 \n");
	format(iString, sizeof(iString), "\n");

	ShowPlayerDialog(playerid,867, DIALOG_STYLE_MSGBOX, "RXDM Stunts", iString, "Accept", "");
  	PlayerPlaySound(playerid,1139,0.0,0.0,0.0);
	return 1;
}

CMD:credits(playerid,params[])
{
	ShowPlayerDialog(playerid,13,DIALOG_STYLE_MSGBOX,"RevolutionX SA-MP","RevolutionX DM/Stunt/Race/Fun Credits Information\n\n RevolutionX DM/Stunt/Race/Fun is scripted By CJ101.\nWith help from J0hn_X and Saloun\n\nSpecial Thanks to all our donators!\n\nA Very special thanks to KJJ for all the donations he gave!\nAlso thanks to all our great admins and players!","Ok","");
	return 1;
}

CMD:racehelp(playerid, params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    ShowPlayerDialog(playerid,14,DIALOG_STYLE_MSGBOX,"RevolutionX DM/Stunt/Race Help","Races are a great feature at RevolutionX. Races happen every 5 minutes.\nThe goal of the race is to.. well win! You can set lap and track records.\nAt any time you can leave a race with /leave..\n Join a race with the /join command.\nWarning: Shooting or DMing at races can get you kicked.","Ok","Cancel");
	return 1;
}

CMD:raceinfo(playerid, params[])
{
	cmd_racers(playerid, params);
	return 1;
}

CMD:racers(playerid, params[])
{
    if(RaceActive == true)
    {
        new str[500],cont=0;
        format(str,sizeof str,"Current Race: %s (By %s)\n",R_Name,RCreator);
		for(new o=0;o<MAX_PLAYERS;o++)
		{
		 if(Players[o][AmRacing] == true) {
			format(str,sizeof str,"%s\n%p - %d/%d",str,o,MyCurrentCP[o],TotalCP);
			cont++;
		 }
		}
		if(cont == 0) {
			TotalRacers = 0;
			TotalRacersCur = 0;
		}
        return ShowPlayerDialog(playerid,154,DIALOG_STYLE_MSGBOX,"Current Race Information",str,"Ok","Cancel");
    }   else SendClientMessage(playerid,COLOR_AMSG,"There is no active race.");
	return 1;
}



CMD:dpt(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,4)) return 0;
	//if(!IsAdmin(playerid)) return 1;
	new noi[24],x2string[250];
	if(sscanf(params,"s[24]",noi)) return SendClientMessage(playerid,COLOR_RED,"*** USAGE: /deleteplayertime <player name>");
	else
	{
		format(x2string,sizeof x2string,"DELETE FROM `racetimes` WHERE `Name` = '%s'",noi);
		mysql_query(SQL,x2string);
		new t = cache_num_rows();
		if(t == 0) return SendClientMessage(playerid,COLOR_RED,"*** No Records Found!");
		SendClientMessage(playerid,COLOR_RED,"[||] Syccessfully Deleted the Times for that player!");
	}
	return 1;

}

CMD:night(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerTime(playerid,24,00);
	Players[playerid][mytime] = 24;
	return 1;
}

CMD:day(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerTime(playerid,7,00);
	Players[playerid][mytime] = 7;
	return 1;
}



CMD:fs(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	ShowPlayerDialog(playerid,57,DIALOG_STYLE_LIST,"Fighting Styles","Boxing\nGrab Kick\nElbow\nKung Fu\nKnee Head\nNormal","Select","Cancel");
	return 1;
}

CMD:normalfs(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~r~Normal ~n~ Fighting Style",900,3);
	SetPlayerFightingStyle(playerid,FIGHT_STYLE_NORMAL);
	return 1;
}

CMD:kneehead(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~r~kneehead ~n~ Fighting Style",900,3);
	SetPlayerFightingStyle(playerid,FIGHT_STYLE_KNEEHEAD);
	return 1;
}

CMD:kungfu(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~r~Kungfu ~n~ Fighting Style",900,3);
	SetPlayerFightingStyle(playerid,FIGHT_STYLE_KUNGFU);
	return 1;
}

CMD:boxing(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~r~Boxing ~n~ Fighting Style",900,3);
	SetPlayerFightingStyle(playerid,FIGHT_STYLE_BOXING);
	return 1;
}

CMD:grabkick(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~r~GrabKick ~n~ Fighting Style",900,3);
	SetPlayerFightingStyle(playerid,FIGHT_STYLE_GRABKICK);
	return 1;
}

CMD:elbow(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	GameTextForPlayer(playerid,"~r~Elbow ~n~ Fighting Style",900,3);
    SetPlayerFightingStyle(playerid,FIGHT_STYLE_ELBOW);
	return 1;
}

CMD:rank(playerid,params[])
{
	new expNeeded = Players[playerid][Rank] * 100;
	format(xstring,sizeof xstring,"You are rank %d.\nThere are 10 ranks in total.\n\nYour Total Expierience: %d\n%d More needed to level up.",Players[playerid][Rank],Players[playerid][Expierience],expNeeded);
	ShowPlayerDialog(playerid,29,DIALOG_STYLE_MSGBOX,"Your rank",xstring,"Ok","");
	return 1;	
}

CMD:stats(playerid,params[])
{
	new id;
	if(!sscanf(params,"u",id))
	{
		format(xstring,sizeof xstring,"{FFDD00}Rank\t{FFFFFF}%d/10\n{FFDD00}Kills\t{FFFFFF} %d\n{FFDD00}Deaths\t{FFFFFF} %d\n{FFDD00}Cash\t{FFFFFF} $%d\n{FFDD00}Hours Ingame\t{FFFFFF} %d\n{FFDD00}Godmode:\t{FFFFFF} %s\n",Players[id][Rank],Players[id][score],Players[id][Deaths],GetPlayerCash(id),Players[id][PlayTime]/60,IntToBool( Players[id][God] ) );
		format(xstring,sizeof xstring,"%s\n{FFDD00}Races Joined\t{FFFFFF} %d\n{FFDD00}Races Won\t{FFFFFF} %d\n{FFDD00}Skin\t{FFFFFF} %d\n{FFDD00}Tokens\t{FFFFFF} %d\n{FFDD00}Oranges\t{FFFFFF}%d\n{FFDD00}Apples\t{FFFFFF}%d\nTotal Deliveries\t%d",xstring,Players[id][RacesJoined],Players[id][RacesWon],Players[id][Skin],Players[id][Token],Players[id][oranges],Players[id][apples],Players[id][DeliveryTotal]);
		ShowPlayerDialog(playerid,29,DIALOG_STYLE_TABLIST,"Stats",xstring,"Ok","Cancel");
		return 1;
	}

	if(Players[playerid][Skin] == -1)
	{
		format(xstring,sizeof xstring,"{FFDD00}Rank\t{FFFFFF}%d/10\n{FFDD00}Kills\t{FFFFFF} %d\n{FFDD00}Deaths\t{FFFFFF} %d\n{FFDD00}Cash\t{FFFFFF} $%d\n{FFDD00}Hours Ingame\t{FFFFFF} %d\n{FFDD00}Godmode\t{FFFFFF} %s\n{FFDD00}CTF Wins\t{FFFFFF} %d\n",Players[playerid][Rank],Players[playerid][score],Players[playerid][Deaths],GetPlayerCash(playerid),Players[playerid][PlayTime]/60,IntToBool( Players[playerid][God] ), Players[playerid][ctf_wins] );
		format(xstring,sizeof xstring,"%s\n{FFDD00}Races Joined:\t{FFFFFF} %d\n{FFDD00}Races Won:\t{FFFFFF} %d\n{FFDD00}Skin\t{FFFFFF} NOT SET\n{FFDD00}Tokens\t{FFFFFF} %d\n{FFDD00}Oranges\t{FFFFFF} %d\n{FFDD00}Apples\t{FFFFFF} %d\nTotal Deliveries\t%d",xstring,Players[playerid][RacesJoined],Players[playerid][RacesWon],Players[playerid][Token],Players[playerid][oranges],Players[playerid][apples],Players[playerid][DeliveryTotal]);
		ShowPlayerDialog(playerid,29,DIALOG_STYLE_TABLIST,"Stats",xstring,"OK","");
	}
	else
	{
		format(xstring,sizeof xstring,"{FFDD00}Rank\t{FFFFFF}%d/10\n{FFDD00}Kills\t{FFFFFF} %d\n{FFDD00}Deaths\t{FFFFFF} %d\n{FFDD00}Cash\t{FFFFFF} $%d\n{FFDD00}Hours Ingame\t{FFFFFF} %d\n{FFDD00}Godmode\t{FFFFFF} %s\n{FFDD00}CTF Wins\t{FFFFFF} %d\n",Players[playerid][Rank],Players[playerid][score],Players[playerid][Deaths],GetPlayerCash(playerid),Players[playerid][PlayTime]/60,IntToBool( Players[playerid][God] ), Players[playerid][ctf_wins] );
		format(xstring,sizeof xstring,"%s\n{FFDD00}Races Joined\t{FFFFFF} %d\n{FFDD00}Races Won\t{FFFFFF} %d\n{FFDD00}Skin\t{FFFFFF} %d\n{FFDD00}Tokens\t{FFFFFF} %d\n{FFDD00}Oranges\t{FFFFFF}%d\n{FFDD00}Apples\t{FFFFFF}%d\nTotal Deliveries\t%d",xstring,Players[playerid][RacesJoined],Players[playerid][RacesWon],Players[playerid][Skin],Players[playerid][Token],Players[playerid][oranges],Players[playerid][apples],Players[playerid][DeliveryTotal]);
	}
	ShowPlayerDialog(playerid,29,DIALOG_STYLE_TABLIST,"Stats",xstring,"Ok","Cancel");
	return 1;
}

CMD:racerules(playerid,params[])
{
	ShowPlayerDialog(playerid,30,DIALOG_STYLE_MSGBOX,"Racing Rules","** No shooting rockets while racing\n** No drivebying\n\nHave Fun.","Ok","Cancel");
	return 1;
}


CMD:ks(playerid,params[])
{
	new str[45];
	format(str,sizeof str,"* Your Current Killing Spree: %d",Players[playerid][KSpree]);
	SendClientMessage(playerid,COLOR_YELLOW,str);
	return 1;
}


CMD:strip(playerid,params[])
{
	ApplyAnimation(playerid,"STRIP","strip_A",4.0,false,true,true,true,0);
	return 1;
}
CMD:strip1(playerid,params[])
{
	ApplyAnimation(playerid,"STRIP","strip_A",4.0,false,true,true,true,0);
	return 1;
}

CMD:strip2(playerid,params[])
{
	ApplyAnimation(playerid,"STRIP","strip_B",4.0,false,true,true,true,0);
	return 1;
}

CMD:strip3(playerid,params[])
{
	ApplyAnimation(playerid,"STRIP","strip_C",4.0,false,true,true,true,0);
	return 1;
}

CMD:strip4(playerid,params[])
{
	ApplyAnimation(playerid,"STRIP","strip_D",4.0,false,true,true,true,0);
	return 1;
}

CMD:strip5(playerid,params[])
{
	ApplyAnimation(playerid,"STRIP","strip_E",4.0,false,true,true,true,0);
	return 1;
}

CMD:smoke(playerid,params[])
{
	ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, true, false, false, false, 0);
	return 1;
}

CMD:pee(playerid,params[])
{
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
	return 1;
}

CMD:onfire(playerid,params[])
{
	ApplyAnimation(playerid,"SILENCED","SilenceCrouchfire",4.1,false,true,true,true,1);
	return 1;
}

CMD:cpr(playerid,params[])
{
	ApplyAnimation(playerid,"MEDIC","CPR",4.1,false,true,true,true,1);
	return 1;
}

CMD:fu(playerid,params[])
{
	ApplyAnimation(playerid,"ped", "fucku", 4.1, false, true, true, true, 1 );
	return 1;
}

CMD:sit(playerid,params[])
{
	ApplyAnimation(playerid,"INT_OFFICE", "OFF_Sit_Bored_Loop", 1.800001, true, false, false, true, 600);
	return 1;
}

CMD:ca(playerid,params[])
{
	ClearAnimations(playerid);
	return 1;
}

CMD:sa(playerid,params[])
{
	ClearAnimations(playerid);
	return 1;
}

CMD:handsup(playerid,params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	return 1;
}

CMD:puke(playerid,params[])
{
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, false, false, false, false, 0);
	return 1;
}

CMD:kissing(playerid,params[])
{
	ApplyAnimation(playerid,"KISSING", "Grlfrd_Kiss_02", 1.800001, true, false,false,true, 600);
	return 1;
}

CMD:wank(playerid,params[])
{
	ApplyAnimation(playerid,"PAULNMAC", "wank_loop", 1.800001, true, false, false, true, 600);
	return 1;
}

CMD:dance(playerid,params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
	return 1;
}

CMD:drunk(playerid,params[])
{
	ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,true,true,true,true,1);
	return 1;
}

CMD:lean(playerid,params[])
{
	ApplyAnimation(playerid,"GANGS","leanIDLE", 4.0, true, false, false, false, 0);
	return 1;
}

CMD:skate(playerid,params[])
{
	ApplyAnimation(playerid,"SKATE","skate_run",4.1,true,true,true,true,1);
	return 1;
}

CMD:injured(playerid,params[])
{
	ApplyAnimation(playerid,"SWEET","Sweet_injuredloop", 4.0, true, false, false, false, 0);
	return 1;
}



CMD:dance2(playerid,params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
	return 1;
}

CMD:dance3(playerid,params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
	return 1;
}

CMD:dance4(playerid,params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
	return 1;
}

CMD:tvc(playerid,params[]) return cmd_evc(playerid,params);
CMD:evc(playerid,params[])
{

	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][Collisions] == true)
	{
	    Players[playerid][Collisions] = false;
	    DisableRemoteVehicleCollisions(playerid,false);
	    SendClientMessage(playerid,COLOR_GREEN,"* Collisions ON. You can now hit vehicles");
	}
	else
	{
	    Players[playerid][Collisions] = true;
 		DisableRemoteVehicleCollisions(playerid,true);
	    SendClientMessage(playerid,COLOR_GREEN,"* Collisions OFF. You can no longer hit vehicles");
	}
	return 1;
}
CMD:tvcfp(playerid,params[]) return cmd_evcfp(playerid,params);
CMD:evcfp(playerid,params[])
{
	new id;
	if(Players[playerid][AdminLvl] < 2) return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this");
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* /enablevehiclecollisionsforplayer <playerid/name>");
	if(IsPlayerConnected(id))
	{
	    format(xstring,sizeof xstring,"Admin %p (ID:%d) used /evcfp to enable vehicle collisions for %p (ID:%d)",playerid,playerid,id,id);
	    SendMessageToAdminsEx(COLOR_AC,1,xstring);
	    SendClientMessage(playerid,COLOR_AMSG,xstring);
        format(xstring,sizeof xstring,"Admin %p (ID:%d) disabled collisions for your vehicle.",playerid,playerid);
        SendClientMessage(playerid,COLOR_AMSG,xstring);
        DisableRemoteVehicleCollisions(id,false);
	}	else SendClientMessage(playerid,COLOR_RED,"* Player not connected.");
	return 1;
}


CMD:loadcar(playerid,params[])
{
	// Save Car Script Beta
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"* Get out of your vehicle first!");
	new carname[20];
	if(sscanf(params,"s[20]",carname))
	{
	    SendClientMessage(playerid,COLOR_RED,"* Usage: /loadcar <car Nickname>");
	    return 1;
	}
	
 	new str[100];
	format(str, sizeof(str), "SELECT * FROM `savedcars` WHERE `userID` = '%d' AND `carname` = '%s'",Players[playerid][userID],carname);
 	mysql_query(SQL,str);
	if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* No saved car found!");
	new carInfos[16],vid;
	
	
	cache_get_value_name_int(0,"carModel", carInfos[1]);
	cache_get_value_name_int(0,"sp", carInfos[2]);
	cache_get_value_name_int(0,"hood", carInfos[3]);
	cache_get_value_name_int(0,"roof", carInfos[4]);
	cache_get_value_name_int(0,"skirt", carInfos[5]);
	cache_get_value_name_int(0,"lamps", carInfos[6]);
	cache_get_value_name_int(0,"nitro", carInfos[7]);
	cache_get_value_name_int(0,"ex", carInfos[8]);
	cache_get_value_name_int(0,"wheels", carInfos[9]);
	cache_get_value_name_int(0,"hy", carInfos[10]);
	cache_get_value_name_int(0,"fb", carInfos[11]);
	cache_get_value_name_int(0,"rb", carInfos[12]);
	cache_get_value_name_int(0,"vr", carInfos[13]);
	cache_get_value_name_int(0,"vl", carInfos[14]);
		
	new Float:x,Float:y,Float:z,Float:ang;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid,ang);
	new color = random(128);
	CreateVehicle(carInfos[0],x,y,z,ang,color,color,0);

	
	PutPlayerInVehicle(playerid,vid,0);
	
	// Create the vehicle and add additions, if any
	for(new i=0; i <= 13; i++)
	{
	    if(carInfos[i] != 0)
	    {
	        AddVehicleComponent(vid,carInfos[i]);
	    }
	}
	
	return 1;
}

CMD:dsc(playerid,params[]) return cmd_deletesavedcar(playerid,params);
CMD:deletesavedcar(playerid,params[])
{
	new carname[20];
	if(sscanf(params,"s[20]",carname))
	{
	    SendClientMessage(playerid,COLOR_RED,"* Usage: /deletesavedcar <car Nickname>");
	    return 1;
	}
	format(xstring, sizeof(xstring), "SELECT * FROM `savedcars` WHERE `userID` = '%d' AND `carname` = '%s'",Players[playerid][userID],carname);
 	mysql_query(SQL,xstring);
	if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* No saved car found!");

	format(xstring,sizeof xstring,"DELETE FROM `savedcars` WHERE `userID` = '%d' AND `carname` = '%s' LIMIT 1",Players[playerid][userID],carname);
	mysql_query(SQL,xstring);
	
 	SendClientMessage(playerid,COLOR_SYSTEM,"* Your saved car has been deleted.");
	return 1;
}

CMD:savecar(playerid,params[])
{
	// Save Car Script Beta
	if(IsPlayerInAnyVehicle(playerid))
	{
		new model,vid;
		vid = GetPlayerVehicleID(playerid);
		model = GetVehicleModel(vid);
	    if(IsPlane(vid)) return SendClientMessage(playerid,COLOR_RED,"* Sorry, you cannot save planes.");
	    new carname[20];
		if(sscanf(params,"s[20]",carname))
		{
		    SendClientMessage(playerid,COLOR_RED,"* Usage: /savecar <Car Nickname>");
		    return 1;
		}
	    
   		format(xstring, sizeof(xstring), "SELECT * FROM `savedcars` WHERE `userID` = '%d' AND `carname` = '%s'",Players[playerid][userID],carname);
	    mysql_query(SQL,xstring);
		if(cache_num_rows() > 0) return SendClientMessage(playerid,COLOR_RED,"* You already used that nickname!");

		// Get the car stuff
		new carInfos[13];
		
		carInfos[0] = GetVehicleComponentInSlot(vid,CARMODTYPE_SPOILER);
		carInfos[1] = GetVehicleComponentInSlot(vid,CARMODTYPE_HOOD);
		carInfos[2] = GetVehicleComponentInSlot(vid,CARMODTYPE_ROOF);
		carInfos[3] = GetVehicleComponentInSlot(vid,CARMODTYPE_SIDESKIRT);
		carInfos[4] = GetVehicleComponentInSlot(vid,CARMODTYPE_LAMPS);
		carInfos[5] = GetVehicleComponentInSlot(vid,CARMODTYPE_NITRO);
		carInfos[6] = GetVehicleComponentInSlot(vid,CARMODTYPE_EXHAUST);
		carInfos[7] = GetVehicleComponentInSlot(vid,CARMODTYPE_WHEELS);
		carInfos[8] = GetVehicleComponentInSlot(vid,CARMODTYPE_HYDRAULICS);
		carInfos[9] = GetVehicleComponentInSlot(vid,CARMODTYPE_FRONT_BUMPER);
		carInfos[10] = GetVehicleComponentInSlot(vid,CARMODTYPE_REAR_BUMPER);
		carInfos[11] = GetVehicleComponentInSlot(vid,CARMODTYPE_VENT_RIGHT);
		carInfos[12] = GetVehicleComponentInSlot(vid,CARMODTYPE_VENT_LEFT);


		format(xstring, sizeof(xstring), "INSERT INTO `savedcars` (`userID`, `carModel`,`carname`,`sp`,`hood`,`roof`,`skirt`,`lamps`,`nitro`,`ex`,`wheels`,`hy`,`fb`,`rb`,`vl`,`vr`) VALUES ('%d','%d','%s','%d','%d','%d','%d','%d','%d','%d','%d','%d','%d','%d','%d','%d')",Players[playerid][userID],model,carname,carInfos[0],carInfos[1],carInfos[2],carInfos[3],carInfos[4],carInfos[5],carInfos[6],carInfos[7],carInfos[8],carInfos[9],carInfos[10],carInfos[11],carInfos[12]);
	    mysql_query(SQL,xstring);
	
	    SendClientMessage(playerid,COLOR_SYSTEM,"* Your car has been saved! You can do /loadcar to load your car.");
	}
	return 1;
}

CMD:car(playerid,params[])
{
	if( Players[playerid][AmRacing] == true)
	{
		if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
		if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		new Float:Zz;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
		new PlayersVehicle;
		if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
		{
		    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
			GetXYInFrontOfPlayer(playerid, x, y, 8);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		else
		{
			GetXYInFrontOfPlayer(playerid, x, y, 5);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid,PlayersVehicle, 0);
		format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);	
		SendClientMessage(playerid, COLOR_YELLOW,xstring);
		return 1;		
	}
	if( DriftID[playerid] != -1 && TDrif[playerid] == true)
	{
			return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
	}
	if(Players[playerid][MyCar] == 0)
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
		new Float:angle;
		new color = random(125);
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,angle);
		new car = CreateVehicle(411,X,Y,Z,angle,color,color,-1);
		SetVehicleVirtualWorld(car, GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid,car,0);
		Players[playerid][LastCar] = car;
		SendClientMessage(playerid,COLOR_SYSTEM,"Car Spawned! You can also use /v <carname> to get cars, and you can set this car with /setmycar");
	}
	else
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
		new Float:angle;
		new color = random(125);
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		GetPlayerFacingAngle(playerid,angle);
		new car = CreateVehicle(Players[playerid][MyCar],X,Y,Z,angle,color,color,-1);
		SetVehicleVirtualWorld(car, GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid,car,0);
		Players[playerid][LastCar] = car;
		SendClientMessage(playerid,COLOR_SYSTEM,"Car Spawned! You can also use /v <carname> to get cars, and you can set this car with /setmycar");
	}
	return 1;
}

CMD:snp(playerid,params[]) return cmd_plate(playerid, params);
CMD:setnumplate(playerid,params[]) return cmd_plate(playerid, params);
CMD:numplate(playerid,params[]) return cmd_plate(playerid, params);
CMD:plate(playerid,params[])
{
	new text[15];
    if(sscanf(params,"s",text)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /plate <text>");
	if(IsPlayerInAnyVehicle(playerid))
	{
		new v = GetPlayerVehicleID(playerid);
	    if(!IsPlane(v) && !IsBoat(v))
	    {
	        if(strlen(params) == 0) return SendClientMessage(playerid,COLOR_RED,"You need to enter some text!");
	        if(strlen(params) > 15) return SendClientMessage(playerid,COLOR_RED,"Sorry, the limit in RevolutionX is 15 characters.");
			//RemovePlayerFromVehicle(playerid);
	        SetVehicleNumberPlate(v,params);
		 	SetVehicleToRespawn(v);
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetVehiclePos(v,x,y,z);
			PutPlayerInVehicle(playerid,v,0);
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid,"~g~~h~number plate~n~changed.",800,3);
	    }  else SendClientMessage(playerid,COLOR_RED,"You cannot attach a number plate to this vehicle.");
	}   else SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle");
	return 1;
}




CMD:tram(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	//if(IsVehicleSpawned(GetPVarInt(playerid,"CallCar"))) DestroyVehicleEx(GetPVarInt(playerid,"CallCar"));
	new Float:angle;
	new color = random(125);
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(449,X,Y,Z,angle,color,color,0);
	PutPlayerInVehicle(playerid,car,0);
	Players[playerid][LastCar] = car;
	return 1;
}

CMD:kart(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Get out of your vehicle first!");
	//if(IsVehicleSpawned(GetPVarInt(playerid,"CallCar"))) DestroyVehicleEx(GetPVarInt(playerid,"CallCar"));
	new Float:angle;
	new color = random(125);
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,angle);
	new car = CreateVehicle(571,X,Y,Z,angle,color,color,0);
	PutPlayerInVehicle(playerid,car,0);
	Players[playerid][LastCar] = car;
	return 1;
}

CMD:fps(playerid,params[])
{
	if(FPS_bool[playerid] == false)
	{
		fFPS[playerid] = CreateObject(19300, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
		new p = GetPlayerVehicleID(playerid);
		AttachObjectToPlayer(fFPS[playerid], playerid, 0.0, 0.3, 0.7, 0, 0, 0);

		vFPS[playerid] = CreatePlayerObject(playerid,19300,  1.0, 1.0, 1.0, 1.0, -1, -1, 100);
		AttachPlayerObjectToVehicle(playerid,vFPS[playerid],p,-0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
		FPS_bool[playerid] = true;
		if(!IsPlayerInAnyVehicle(playerid)) AttachCameraToObject(playerid, fFPS[playerid]);
		else AttachCameraToPlayerObject(playerid, vFPS[playerid]);
		SendClientMessage(playerid,-1,"* FPS Enabled!");
		FPS_bool[playerid] = true;
	}
	else {
			FPS_bool[playerid] = false; DestroyObject(fFPS[playerid]); SetCameraBehindPlayer(playerid); SendClientMessage(playerid,-1,"* FPS Disabled!");
	}
	return 1;
}
CMD:cam(playerid,params[])
{
	if(FPS_bool[playerid] == true)
	{
		new type;
		new p = GetPlayerVehicleID(playerid);
		if(sscanf(params,"d",type))
		{
			fFPS[playerid] = CreateObject(19300, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
			AttachObjectToPlayer(fFPS[playerid], playerid, 0.0, 0.3, 0.7, 0, 0, 0);
			vFPS[playerid] = CreatePlayerObject(playerid,19300,  1.0, 1.0, 1.0, 1.0, -1, -1, 100);
			AttachPlayerObjectToVehicle(playerid,vFPS[playerid],p,-0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
			if(!IsPlayerInAnyVehicle(playerid)) AttachCameraToObject(playerid, fFPS[playerid]);
			else AttachCameraToPlayerObject(playerid, vFPS[playerid]);
			SendClientMessage(playerid,-1,"* CAMERA Type Changed!");
			SendClientMessage(playerid,COLOR_YELLOW,"* * To View More Camera(s) - /cam <1-3>!");
		}
		else if (type == 1)
		{
			fFPS[playerid] = CreateObject(19300, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
			AttachObjectToPlayer(fFPS[playerid], playerid, 0.0, 0.3, 0.7, 0, 0, 0);
			vFPS[playerid] = CreatePlayerObject(playerid,19300,  1.0, 1.0, 1.0, 1.0, -1, -1, 100);
			AttachPlayerObjectToVehicle(playerid,vFPS[playerid],p,-0.314999, -0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
			if(!IsPlayerInAnyVehicle(playerid)) AttachCameraToObject(playerid, fFPS[playerid]);
			else AttachCameraToPlayerObject(playerid, vFPS[playerid]);
			SendClientMessage(playerid,-1,"* CAMERA Type Changed!");
		}
		else if (type == 2)
		{
			fFPS[playerid] = CreateObject(19300, 1.0, 3.0, 3.0, 1.0, 1.0, 1.0);
			AttachObjectToPlayer(fFPS[playerid], playerid, 0.0, -3.3, 1.7, 0, 0, 0);
			vFPS[playerid] = CreatePlayerObject(playerid,19300,  0.0, 0.0, 0.0, 1.0, -1, -1, 100);
			AttachPlayerObjectToVehicle(playerid,vFPS[playerid],p,0.314999, 0.195000, 0.510000, 0.000000, 0.000000, 0.000000);
			if(!IsPlayerInAnyVehicle(playerid)) AttachCameraToObject(playerid, fFPS[playerid]);
			else AttachCameraToPlayerObject(playerid, vFPS[playerid]);
			SendClientMessage(playerid,-1,"* CAMERA Type Changed!");
		}
		else if (type == 3)
		{
			fFPS[playerid] = CreateObject(19300, 1.0, 3.0, 3.0, 1.0, 1.0, 1.0);
			AttachObjectToPlayer(fFPS[playerid], playerid,0.52,-4.62,3.0 , 0, 0, 0);
			vFPS[playerid] = CreatePlayerObject(playerid,19300,  0.0, 0.0, 0.0, 1.0, -1, -1, 100);
			AttachPlayerObjectToVehicle(playerid,vFPS[playerid],p,0.0, -5.7, 5.7, 0.000000, 0.000000, 0.000000);
			if(!IsPlayerInAnyVehicle(playerid)) AttachCameraToObject(playerid, fFPS[playerid]);
			else AttachCameraToPlayerObject(playerid, vFPS[playerid]);
			SendClientMessage(playerid,-1,"* CAMERA Type Changed!");
		}
		else return SendClientMessage(playerid,COLOR_YELLOW,"* * USAGE: /cam <1-3>!");
	}
	else {
			SendClientMessage(playerid,COLOR_RED,"* FPS Mode is not enabled!");
			return SendClientMessage(playerid,COLOR_RED,"* USAGE: /fps");
	}
	return 1;
}

CMD:enableaf(playerid,params[])
{
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /enableaf <playername/id>");
	if(IsPlayerConnected(id))
	{
	    new str[100],name[21];
	    GetPlayerName(playerid,name,sizeof name);
	    format(str,sizeof str,"** Admin %s (ID:%d) has disabled %p (ID:%D) autofix",name,playerid,id,id);
	    SendMessageToAdminsEx(COLOR_RED,1,str);
		Players[id][autofix] = true;
	}
	return 1;
}

CMD:disableaf(playerid,params[])
{
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /disableaf <playername/id>");
	if(IsPlayerConnected(id))
	{
	    new str[100],name[21];
	    GetPlayerName(playerid,name,sizeof name);
	    format(str,sizeof str,"** Admin %s (ID:%d) has disabled %p (ID:%D) autofix",name,playerid,id,id);
	    SendMessageToAdminsEx(COLOR_RED,1,str);
		Players[id][autofix] = false;
	 	GetPlayerName(id,name,sizeof name);
	}
	return 1;
}


CMD:autofix(playerid,params[])
{
	cmd_af(playerid,params);
}

CMD:af(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"* You can't enable/disable autofix in minigames");
	if(Players[playerid][autofix]==true)
	{
		Players[playerid][autofix]=false;
		SetVehicleHealth(GetPlayerVehicleID(playerid),1000);
		SendClientMessage(playerid,COLOR_RED,"* Auto-Fix DISABLED");
		format(xstring, sizeof(xstring),"%p (ID:%d) disabled autofix",playerid,playerid);
		SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	}
	else
	{
		Players[playerid][autofix]=true;
		SendClientMessage(playerid,COLOR_GREEN,"* Auto-Fix ENABLED");
		SendClientMessage(playerid,COLOR_GREEN,"* Dont Drive-By with it. It will automatically disable if you dont follow this rule");
		format(xstring, sizeof(xstring),"%p (ID:%d) enabled autofix",playerid,playerid);
		SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	}
	return 1;
}

CMD:mycar(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new veh[35];
	if (sscanf(params, "s[35]",veh)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /setmycar <name/id>");
	new vehicle;
	if(IsNumeric(veh)) vehicle = strval(veh);
	if(!IsNumeric(veh)) vehicle = GetVehicleModelIDFromName(veh);
	if(vehicle == 520 || vehicle == 425)
	{
		if(Players[playerid][TDMJoined] == false)
		{
	    	return SendClientMessage(playerid,COLOR_RED,"* Sorry, that vehicle can only be spawned in certain minigames.");
	    }
	}
	if(vehicle == 432) return SendClientMessage(playerid,COLOR_RED,"* You cannot spawn rhinos (this is to prevent spawnkilling)");
	if(vehicle < 400 || vehicle > 611) return SendClientMessage(playerid,COLOR_RED, "That vehicle name was not found");
	Players[playerid][MyCar] = vehicle;
	GameTextForPlayer(playerid,"~w~MyCar Set.",1000,3);
	return 1;
}

CMD:setmycar(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new veh[35];
	if (sscanf(params, "s[35]",veh)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /setmycar <name/id>");
	new vehicle;
	if(IsNumeric(veh)) vehicle = strval(veh);
	if(!IsNumeric(veh)) vehicle = GetVehicleModelIDFromName(veh);
	if(vehicle == 520 || vehicle == 425 || vehicle == 447 || vehicle == 432)
	{
		if(Players[playerid][TDMJoined] == false)
		{
	    	return SendClientMessage(playerid,COLOR_RED,"* Sorry, that vehicle can only be spawned in certain minigames.");
	    }
	}
	if(!IsAdmin(playerid))
	{
		if(vehicle == 539 && !IsVIP(playerid)) return SendClientMessage(playerid,COLOR_RED,"* Only VIP's can spawn this vehicle.");
		if(vehicle == 432 || vehicle == 464 || vehicle == 539) return SendClientMessage(playerid,COLOR_RED,"* You cannot spawn this vehicle (this is to prevent spawnkilling)");
		if(vehicle < 400 || vehicle > 611) return SendClientMessage(playerid,COLOR_RED, "That vehicle name was not found");
	}
	Players[playerid][MyCar] = vehicle;
	GameTextForPlayer(playerid,"~w~MyCar Set.",1000,3);
	return 1;
}

CMD:v(playerid,params[])
{
	if( Players[playerid][AmRacing] == true)
	{
		if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
		if(Players[playerid][AmRacing] == false) return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		new Float:Zz;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
		new PlayersVehicle;
		if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
		{
		    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
			GetXYInFrontOfPlayer(playerid, x, y, 8);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		else
		{
			GetXYInFrontOfPlayer(playerid, x, y, 5);
			PlayersVehicle = CreateVehicle(VehicleID, x, y, z+1, Zz+360, -1, -1, -1);
		}
		SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid,PlayersVehicle, 0);
		format(xstring, sizeof(xstring), "Successfully set race vehicle to %s",aVehicleNames[VehicleID - 400]);

		SendClientMessage(playerid, COLOR_YELLOW,xstring);
		return 1;
	}
	if( DriftID[playerid] != -1 && TDrif[playerid] == true)
	{
		return SendClientMessage(playerid,COLOR_RED,"* You can't use this COMMAND at this Time! /drift to exit from drift minigame ");
	}
	if(Players[playerid][Minigame] == 0)
	{
		new veh[35];
		if (sscanf(params, "s[35]",veh)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /v <name/id>");
		new Float:x, Float:y, Float:z;
		new vehicle;
		if(IsNumeric(veh)) vehicle = strval(veh);
		if(!IsNumeric(veh)) vehicle = GetVehicleModelIDFromName(veh);
		if(vehicle == 528 && IsPlayerInAnyDynamicArea(playerid))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* You cannot spawn a FBI water truck near spawn.");
		}
		if(vehicle == 425 || vehicle == 447 || vehicle == 464)
		{
			if(Players[playerid][TDMJoined] == false)
			{
		    	return SendClientMessage(playerid,COLOR_RED,"* Sorry, that vehicle can only be spawned in certain minigames.");
		    }
		}
		if(vehicle == 432 && Players[playerid][rhino] == false && !IsAdmin(playerid))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Sorry, you cannot spawn a tank.");
		}
		if(vehicle == 520 && Players[playerid][hydra] == false && !IsAdmin(playerid))
		{
			return SendClientMessage(playerid,COLOR_RED,"* Sorry, you cannot spawn a hydra.");
		}
		if(vehicle == 464) return SendClientMessage(playerid,COLOR_RED, "That vehicle cannot be spawned.");
		if(vehicle == 539 && !IsVIP(playerid)) return SendClientMessage(playerid,COLOR_RED, "Only VIP's can spawn a Vortex.");
		//if(IsVehicleSpawned(GetPVarInt(playerid,"CallCar"))) DestroyVehicleEx(GetPVarInt(playerid,"CallCar"));
		//new Float:a;
		//GetPlayerFacingAngle(playerid, a);
		GetPlayerPos(playerid, x, y, z);
		new Float:Zz;
		GetVehicleZAngle(GetPlayerVehicleID(playerid),Zz);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),Zz+360);
		new PlayersVehicle;
		if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
		{
		    DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
			GetXYInFrontOfPlayer(playerid, x, y, 8);
			PlayersVehicle = CreateVehicle(vehicle, x, y, z, Zz+360, -1, -1, -1);
		}
		else
		{
			GetXYInFrontOfPlayer(playerid, x, y, 5);
			PlayersVehicle = CreateVehicle(vehicle, x, y, z, Zz+360, -1, -1, -1);
		}
		SetVehicleVirtualWorld(PlayersVehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid,PlayersVehicle, 0);
		SetPVarInt(playerid,"CallCar", PlayersVehicle);
	}   else  SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	return 1;
}

CMD:joinctf(playerid, params[])
{
	if(ActiveCTF == true) return SendClientMessage(playerid,COLOR_RED,"* A CTF Is already in progress!");
	if(CTFLoaded == false) return SendClientMessage(playerid,COLOR_RED,"* A CTF is not loaded.");
	if(Players[playerid][Minigame] != 0 || Players[playerid][TDMJoined] == true) return SendClientMessage(playerid,COLOR_RED,"* You are already playing a minigame!");
	
	Players[playerid][Minigame] = 800;
	SendClientMessage(playerid,COLOR_MINIGAME,"* You joined the Capture the Flag game. You have been teleported. It will start soon.");
	CTFMembers++;
	
	format(xstring,sizeof xstring,"%p (ID:%d) has joined the CTF!",playerid,playerid);
	SendClientMessageToAll(COLOR_MINIGAME,xstring);
	
	SetPlayerPos(playerid,CTFSpawn[0],CTFSpawn[1],CTFSpawn[2] + 1);
	return 1;
}

CMD:startctf(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		if(ActiveCTF == true) return SendClientMessage(playerid,COLOR_RED,"* A CTF Is already in game!");
		if(CTFLoaded == false) return SendClientMessage(playerid,COLOR_RED,"* Hey stupid! Load a CTF.");
		if(CTFMembers == 0)
		{
 			CTFLoaded = false;
			ActiveCTF = false;
			CTFToken = 50;
			for(new a=0; a < MAX_CTF_FLAGS; a++)
			{
			    if(IsValidDynamicPickup(CTF_Flags[a]))
			    {
					DestroyDynamicPickup(CTF_Flags[a]);
					CTF_Flags[a] = 0;
					DestroyDynamicMapIcon(CTFIcons[a]);
				}
			}
			KillTimer(CTFTimer);
		 	SendClientMessage(playerid,COLOR_MINIGAME,"* Not enough players in CTF. The game has been canceled.");
		    return 1;
		}
        CTFLoaded = true;
		ActiveCTF = true;
	    
    	for(new a=0; a <= MAX_PLAYERS; a++)
		{
		    if(IsPlayerConnected(a))
		    {
		        if(Players[a][Minigame] == 800)
		        {
		            SetPlayerVirtualWorld(a,140);
		            SetPlayerPos(a,CTFSpawn[0],CTFSpawn[1],CTFSpawn[2] + 1);
		            SendClientMessage(a,COLOR_MINIGAME,"@ The Capture the Flag game started.");
		            SendClientMessage(a,COLOR_MINIGAME,"@ When all flags have been picked up, the person with the most flags wins.");
			  		ResetPlayerWeapons(a);
			  		Players[a][ctfflags] = 0;
					SetPlayerInterior(a, CTFInterior);
		        }
		    }
		}
	}
	
	CTFTimer = SetTimer("CTFTimeout",1200000,false);
	return 1;
}

forward CTFTimeout();
public CTFTimeout()
{
	if(CTFMembers != 0) return 1;
	CTFLoaded = false;
	ActiveCTF = false;
	CTFToken = 50;
	CTFMembers = 0;
	foreach(new a : Player)
	{
		if(Players[a][Minigame] == 800)
     	{
       			Players[a][Minigame] = 0;
				SpawnPlayer(a);
				SetPlayerVirtualWorld(a,0);
				SendClientMessage(a,COLOR_MINIGAME,"@ The Capture the Flag game closed. (Inactivity)");
				Players[a][ctfflags] = 0;
				SetPlayerInterior(a, 0);
    	}
	}

	for(new a=0; a <= MAX_CTF_FLAGS; a++)
	{
 		if(IsValidDynamicPickup(CTF_Flags[a]))
   		{
			DestroyDynamicPickup(CTF_Flags[a]);
			CTF_Flags[a] = 0;
		}

		if(CTFI == true)
		{
  			DestroyDynamicMapIcon(CTFIcons[a]);
		}
	}


	return 1;
}

CMD:closectf(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		//if(ActiveCTF == true) return SendClientMessage(playerid,COLOR_RED,"* A CTF Is already in progress!");
		if(CTFLoaded == false) return SendClientMessage(playerid,COLOR_RED,"* Hey stupid! Load a CTF.");
  		CTFLoaded = false;
		ActiveCTF = false;
		CTFToken = 50;
		CTFMembers = 0;
		for(new a=0; a <= MAX_PLAYERS; a++)
		{
		    if(IsPlayerConnected(a))
		    {
		        if(Players[a][Minigame] == 800)
		        {
		            Players[a][Minigame] = 0;
					SpawnPlayer(a);
					SetPlayerVirtualWorld(a,0);
					SendClientMessage(a,COLOR_MINIGAME,"@ The Capture the Flag game closed.");
					Players[a][ctfflags] = 0;
					SetPlayerInterior(a, 0);
		        }
		    }
		}

		for(new a=0; a < MAX_CTF_FLAGS; a++)
		{
		    if(IsValidDynamicPickup(CTF_Flags[a]))
		    {
				DestroyDynamicPickup(CTF_Flags[a]);
				CTF_Flags[a] = 0;
			}

			if(CTFI == true)
			{
			    DestroyDynamicMapIcon(CTFIcons[a]);
			}
		}
	}
	KillTimer(CTFTimer);
	return 1;
}

CMD:deletectf(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
	    new ctfname[25];
		if(sscanf(params,"s[25]",ctfname)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /deletectf (/dctf) <ctf name>");
		format(xstring,sizeof xstring,"SELECT * FROM `ctf` WHERE `ctfName` = '%s'",ctfname);
		mysql_query(SQL,xstring);
		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, that CTF does not exist.");
		format(xstring,sizeof xstring,"DELETE FROM `ctf` WHERE `ctfName` = '%s'",ctfname);
		mysql_query(SQL,xstring);
		
		format(xstring,sizeof xstring,"DELETE FROM `ctfFlags` WHERE `groupName` = '%s'",ctfname);
		mysql_query(SQL,xstring);

		format(xstring,sizeof xstring,"Success, CTF %s has been deleted (%d flags)",ctfflags,cache_affected_rows());
		SendClientMessage(playerid,COLOR_WHITE,xstring);

	}
	return 1;
}

CMD:ctf(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		if(ActiveCTF == true) return SendClientMessage(playerid,COLOR_RED,"* A CTF Is already in game!");
		if(CTFLoaded == true) return SendClientMessage(playerid,COLOR_RED,"* You can't double-load a CTF. /closectf");
		KillTimer(CTFTimer);
		mysql_query(SQL,"SELECT * FROM `ctf` ORDER BY RAND() LIMIT 1");
		new ctfname[25];
		
		
		cache_get_value_name(0,"Name",ctfname);

		if(cache_num_rows() > 0)
		{
			CTFLoaded = true; // loaded, but not playable
			cache_get_value_name_int(0,"interior", CTFInterior);
			cache_get_value_name_int(0,"CTFToken", CTFToken);
		
			
			cache_get_value_name_float(0,"sX", CTFSpawn[0]);
			cache_get_value_name_float(0,"sY", CTFSpawn[1]);
			cache_get_value_name_float(0,"sZ", CTFSpawn[2]);
			
			new t;
			cache_get_value_name_int(0,"ctFI", t);
			if(t == 1) CTFI = true; else CTFI = false;

			// Load the checkpoints
			format(xstring,sizeof xstring,"SELECT * FROM `ctfFlags` WHERE `ctfName` = '%s'",ctfname);
			mysql_query(SQL,xstring);
			new maxx = cache_num_rows();
			if(maxx == 0) return SendClientMessage(playerid,COLOR_RED,"*  Cannot load CTF. This CTF does not have any flags.");
			new Float:tx,Float:ty,Float:tz;
			CTFFlags = maxx;
			for(new a=0; a <= maxx; a++)
			{
				
				cache_get_value_name_float(0,"sX", tx);
				cache_get_value_name_float(0,"sY", ty);
				cache_get_value_name_float(0,"sZ",tz);
			   	CTF_Flags[a] = CreateDynamicPickup(2914,1,tx,ty,tz,140);
			   	
			   	if(CTFI == true)
			   	{
			   		CTFIcons[a] = CreateDynamicMapIcon(tx,ty,tz,0,COLOR_WHITE, 140);
			   	}

			}

			SetPlayerPos(playerid,CTFSpawn[0],CTFSpawn[1],CTFSpawn[2]);
			SetPlayerVirtualWorld(playerid,140);
			Players[playerid][Minigame] = 800;
			format(xstring,sizeof xstring,"@ %p (ID:%d) loaded CTF ' %s '! [ Flags: %d ]",playerid,playerid,ctfname,maxx);
			SendClientMessageToAll(COLOR_MINIGAME,xstring);
			SendClientMessageToAll(COLOR_MINIGAME,"@ Type /joinctf to join this minigame! [ Starts in 1 Minute ]");

			SetTimerEx("StartRandomCTF",60000,false,"d",playerid);
			CTFTimer = SetTimer("CTFTimeout",1200000,false);
			
		}   else return 1;

	}   else SendClientMessage(playerid,COLOR_RED,"Sorry, Only Level 3+ Admins and Pro Members can load a random CTF.");
	return 1;
}

forward RandomMinigame();
public RandomMinigame()
{
	new game = random(2);
	
	switch(game)
	{
	    case 0:
	    {
	        // Starts a Capture the Flag Game
	    
			if(ActiveCTF == true) return 1;
			mysql_query(SQL,"SELECT * FROM `ctf` ORDER BY RAND() LIMIT 1");
			new ctfname[25];
			cache_get_value_name(0,"Name",ctfname);
            if(CTFLoaded == true) return 1;

			if(cache_num_rows() > 0)
			{
  				KillTimer(CTFTimer);
				CTFLoaded = true; // loaded, but not playable
				cache_get_value_name_int(0, "interior", CTFInterior);	
				cache_get_value_name_float(0,"sX", CTFSpawn[0]);
				cache_get_value_name_float(0,"sY", CTFSpawn[1]);
				cache_get_value_name_float(0,"sZ", CTFSpawn[2]);				
						
				cache_get_value_name_int(0, "ctK", CTFToken);	
				new t;

				cache_get_value_name_int(0, "ctFI", t);	
				if(t == 1) CTFI = true; else CTFI = false;

				// Load the checkpoints
				format(xstring,sizeof xstring,"SELECT * FROM `ctfFlags` WHERE `ctfName` = '%s'",ctfname);
				mysql_query(SQL,xstring);
				new maxx = cache_num_rows();
				if(maxx == 0) return 0;
				new Float:tx,Float:ty,Float:tz;
				CTFFlags = maxx;
				for(new a=0; a <= maxx; a++)
				{
					cache_get_value_name_float(a,"flagX", tx);
					cache_get_value_name_float(a,"flagY", ty);
					cache_get_value_name_float(a,"flagZ", tz);	
		  			CTF_Flags[a] = CreateDynamicPickup(2914,1,tx,ty,tz,140);
		  			
 			  		if(CTFI == true)
				   	{
				   		CTFIcons[a] = CreateDynamicMapIcon(tx,ty,tz,0,COLOR_WHITE, 140);
				   	}
				}

				format(xstring,sizeof xstring,"<< RX-Game >> Loaded CTF '%s' [ Flags: %d ]",ctfname,maxx);
				SendClientMessageToAll(COLOR_MINIGAME,xstring);
				SendClientMessageToAll(COLOR_MINIGAME,"<< RX-Game >> Type /joinctf to join this Capture The Flag Event! [ Starts in 1 Minute ]");

		        format(xstring,sizeof xstring,"AutoCTFRotation has loaded CTF Event '%s' [Total Flags: %d]",ctfname,maxx);
				DCC_SendChannelMessage(DCGen,xstring);
				SetTimer("StartRandomCTF",60000,false);
			}
			return 1;
	    }
	    
		case 1:
		{
		    // Starts a random derby
	 		if(ActiveDerby == true) return 1;
			if(DerbyLoaded == true) return 1;

			mysql_query(SQL,"SELECT * FROM `derby` ORDER BY RAND()");

			if(cache_num_rows() > 0)
			{
				new Creator[21],ObjSet[21],dname[21];
				// the derby exists!

				cache_get_value_name_int(0,"DerbyInterior",DerbyInterior);
				cache_get_value_name(0,"dName",dname);
				cache_get_value_name(0,"dCreator",Creator);	
				cache_get_value_name(0,"dObjectSet",ObjSet);				
				cache_get_value_name_int(0, "dVehicle", DerbyVehicle);
				
				cache_get_value_name_float(0,"DerbyZ", DerbyZ);
				if(DerbyZ == 0) DerbyZ = -0.1;

				DerbyTime = SetTimer("DerbyTimer",1000,true);

				// load the derby spawns
				format(xstring,sizeof xstring,"SELECT * FROM `dSpawns` WHERE `dName` = '%s'",dname);
				mysql_query(SQL,xstring);
				new total = cache_num_rows();


	  			for(new e=0; e < total; e++)
				{
					cache_get_value_name_float(e,"dX", DerbySpawns[e][0]);
					cache_get_value_name_float(e,"dY", DerbySpawns[e][1]);
					cache_get_value_name_float(e,"dZ", DerbySpawns[e][2]);
					cache_get_value_name_float(e,"dRot", DerbySpawns[e][3]);
				}

				format(xstring,sizeof xstring,"SELECT * FROM `dPickups` WHERE `dName` = '%s'",dname);
				mysql_query(SQL,xstring);
				new Float:px,Float:py,Float:pz;


	  			for(new e=0; e < 5; e++)
				{
					cache_get_value_name_float(e,"dX", px);
					cache_get_value_name_float(e,"dY", py);
					cache_get_value_name_float(e,"dZ", pz);
	
	    			if(px != 0 && py != 0 && pz != 0)
	    			{
	    			    DerbyPickups[e] = CreateDynamicPickup(1240,14,px,py,pz, 205);
	    			}
				}

				DerbyLoaded = true;
	            DerbyPlayers = 0;

				format(xstring,sizeof xstring,">> Derby '{FFFFFF}%s' {FFDD00}starts soon! To join this derby, type {D52DFF}/joinderby",dname,Creator);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				PlaySoundForAll(1056);
				SetTimer("StartDerby",60000,false);

			}
	    }
	
		case 2:
		{
			if(SVLoaded == true) return 1;
			if(SVStarted == true) return 1;
			// Pickup
	
			format(xstring,sizeof xstring,"*!* The Survival Minigame is starting soon! Type /joinsurvival to join it.");
			SendClientMessageToAll(COLOR_MINIGAME,xstring);
			
	
			SVLoaded = true;
			
			format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setname` = '%s'", "gameobjects");
			mysql_query(SQL, xstring);
	
			if(cache_num_rows() != 0)
			{
				new total,setID;
				new creator[24];
		
				cache_get_value_name_int(0, "setID", setID);
				cache_get_value_name(0,"sCreator",creator);
		
				new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,aModel,an,to;
		
		
				format(xstring,sizeof xstring,"SELECT * FROM `objectdata` WHERE `setID` = '%d'", setID);
				mysql_query(SQL, xstring);
		
				if(cache_num_rows() == 0) return 1;
		
				total = cache_num_rows();
		
				for(new a=0; a <= total; a++)
				{
					cache_get_value_name_int(a, "oModel", aModel);
		
		
					cache_get_value_name_float(a,"oX", x);
					cache_get_value_name_float(a,"oY", y);
					cache_get_value_name_float(a,"oZ", z);
					cache_get_value_name_float(a,"rX", rx);
					cache_get_value_name_float(a,"rY", ry);
					cache_get_value_name_float(a,"rZ", rz);
					// Materials
		
		
					// Actually Create the object!
					if(aModel != 0)
		 			{
						an = CreateDynamicObject(aModel,x,y,z,rx,ry,rz,875,-1,-1);
					 	Streamer_SetIntData(STREAMER_TYPE_OBJECT,an,E_STREAMER_EXTRA_ID,300); // store who created dis shit!
						to++;

					}
		
				}			
			}
		}
	}
	return 1;
}

forward StartSurvival();
public StartSurvival()
{
	if(SVLoaded == false) return 1;
	if(SVStarted == true) return 1;
	if(SVPlayers < 2) 
	{
		SVLoaded = false;
		SVStarted = false;
		SVPlayers = 0;
		SendClientMessageToAll(COLOR_RED,"* Survival can't start. Needs more players.");
		return 1;
	}	
	new point;
	SVStarted = true;
		
	gamePickups[0] = CreateDynamicPickup(339, 3,-2058.5691,-2466.5635,30.6250, 875);
	gamePickups[1] = CreateDynamicPickup(337, 3,-1636.1886,-2233.4868,31.4766, 875);
	gamePickups[2] = CreateDynamicPickup(352, 3,-1973.9198,-2410.0874,36.9143, 875);
	gamePickups[3] = CreateDynamicPickup(357, 3,-2106.5339,-2456.4724,30.6250, 875);
	gamePickups[2] = CreateDynamicPickup(1240, 3,-1973.9198,-2410.0874,36.9143, 875);
	gamePickups[3] = CreateDynamicPickup(349, 3,-2103.5986,-2246.1614,30.6250, 875);
	gamePickups[4] = CreateDynamicPickup(363, 3,-2080.9902,-2360.3176,30.6250, 875);
	gamePickups[5] = CreateDynamicPickup(343, 3,-2103.5986,-2246.1614,30.6250, 875);
	gamePickups[6] = CreateDynamicPickup(1240, 3,-2139.4985,-2402.7224,30.4688, 875);
	gamePickups[7] = CreateDynamicPickup(326, 3,-2171.0896,-2416.4209,36.8233, 875);
	gamePickups[8] = CreateDynamicPickup(357, 3,-2139.4985,-2402.7224,30.4688, 875);
	gamePickups[9] = CreateDynamicPickup(1240, 3,-2174.5122,-2485.5227,30.8417, 875);
	gamePickups[10] = CreateDynamicPickup(348, 3,-2151.7715,-2443.7959,30.6328, 875);
	gamePickups[11] = CreateDynamicPickup(337, 3,-2086.5210,-2529.1589,30.4482, 875);
	gamePickups[12] = CreateDynamicPickup(346, 3,-2194.1941,-2472.7441,30.4688, 875);


	foreach(new e : Player)
	{
		if(Players[e][Minigame] == 1020)
		{
			PlayerPlaySound(e,1057,0.0,0.0,0.0);
		    Players[e][SPoints] = 0;
			point = random(2);
			switch(point)
			{
				case 0:
				{
					SetPlayerPos(e,-2073.2856,-2417.3206,30.6250);
					SetPlayerFacingAngle(e,337.1266);
					SetPlayerWeather(e, 8);
					SetPlayerTime(e,22,0);
					SetPlayerVirtualWorld(e,875);
 				   	SetPlayerArmour(e, 0);
					Players[e][God] = false;
				}
				    
				case 1:
				{
					SetPlayerPos(e,-2190.1255,-2270.7888,30.6250);
					SetPlayerFacingAngle(e,152.9082);
					SetPlayerWeather(e, 8);
					SetPlayerTime(e,22,0);
					SetPlayerVirtualWorld(e,875);
 				  	SetPlayerArmour(e, 0);
					Players[e][God] = false;
				}
				    
			    case 2:
				{
					SetPlayerPos(e,-2099.8032,-2241.6960,30.6250);
					SetPlayerFacingAngle(e,167.9483);
					SetPlayerWeather(e, 8);
					SetPlayerTime(e,22,0);
					SetPlayerVirtualWorld(e,875);
					SetPlayerArmour(e, 0);
					Players[e][God] = false;
				}
			}	
			format(xstring,sizeof xstring,"~n~~n~~n~~n~~n~~g~Survival Game~n~Started!~n~%d Players",SVPlayers);
			GameTextForPlayer(e,xstring,1500,3);
			
			SendClientMessage(e,COLOR_MINIGAME,"Try to Survive!! You can find guns around the map. Each time you kill someone, You get points.");
			SendClientMessage(e,COLOR_MINIGAME,"Survival Points can be spent on more ammo, airdrops, and more!! /smenu or PRESS 'n'");		
		}
	}
	return 1;	
}

forward StartDerby();
public StartDerby()
{
	if(ActiveDerby == true) return 1;
	if(DerbyLoaded == false) return 1;

	if(DerbyPlayers == 0 || DerbyPlayers == 1)
	{
		SendClientMessageToAll(COLOR_MINIGAME,"** Derby canceled. Not enough players.");
 		DerbyLoaded = false;
		ActiveDerby = false;
		DerbyVehicle = 0;
		DerbyPlayers = 0;

		foreach(new e : Player)
		{
			if(Players[e][Minigame] == 900)
			{
				GivePlayerWeapon(e,WEAPON_TEC9,5000);
				SetPlayerHealth(e, 0);
				Players[e][Minigame] = 0;
				Players[e][autofix] = true;
			}
		}
		return 1;
	}

	ActiveDerby = true;

	foreach(new e : Player)
	{
		if(IsPlayerConnected(e) && Players[e][Minigame] == 900)
		{
			Players[e][autofix] = false;
			PlayerPlaySound(e, 1056, 0.0, 0.0, 0.0);
			format(xstring,sizeof xstring,"Derby Started With %d Players!",DerbyPlayers);
			SendClientMessage(e,COLOR_MINIGAME,xstring);

			Players[e][autofix] = false;
		}
	}
	return 1;
}


forward StartCTF();
public StartCTF()
{
	if(ActiveCTF == true) return 1;
	if(CTFLoaded == false)
	{
		ActiveCTF = false;
		return 1;
	}	
	
 	CTFLoaded = true;
	ActiveCTF = true;

	if(CTFMembers == 0)
	{
		CTFLoaded = false;
		ActiveCTF = false;
		CTFToken = 50;
		for(new a=0; a < MAX_CTF_FLAGS; a++)
		{
  			if(IsValidDynamicPickup(CTF_Flags[a]))
	    	{
				DestroyDynamicPickup(CTF_Flags[a]);
				CTF_Flags[a] = 0;
			}
		}
 		SendClientMessageToAll(COLOR_MINIGAME,"* AutoCTFRotation has auto-cancelled the current CTF (Not Enough Players)");
   		return 1;
	}


	for(new a=0; a < MAX_PLAYERS; a++)
	{
 		if(IsPlayerConnected(a))
   		{
     		if(Players[a][Minigame] == 800)
		        {
		            SetPlayerVirtualWorld(a,140);
		            SetPlayerPos(a,CTFSpawn[0],CTFSpawn[1],CTFSpawn[2] + 1);
		            SendClientMessage(a,COLOR_MINIGAME,"@ The Capture the Flag game started.");
		            SendClientMessage(a,COLOR_MINIGAME,"@ When all flags have been picked up, the person with the most flags wins.");
			  		ResetPlayerWeapons(a);
			  		Players[a][ctfflags] = 0;
					SetPlayerInterior(a, CTFInterior);
		        }
    	}
	}
	return 1;
}

forward StartRandomCTF(playerid);
public StartRandomCTF(playerid)
{
	if(ActiveCTF == true) return SendClientMessage(playerid,COLOR_RED,"* Sorry, A CTF is already loaded!");
	if(CTFLoaded == false)
	{
		SendClientMessage(playerid,COLOR_RED,"* It's  the right time to load a CTF!");
		ActiveCTF = false;
		return 1;
	}	
 	CTFLoaded = true;
	ActiveCTF = true;

	if(CTFMembers == 0)
	{
		CTFLoaded = false;
		ActiveCTF = false;
		CTFToken = 50;
		for(new a=0; a < MAX_CTF_FLAGS; a++)
		{
  			if(IsValidDynamicPickup(CTF_Flags[a]))
	    	{
				DestroyDynamicPickup(CTF_Flags[a]);
				CTF_Flags[a] = 0;
			}
		}
 		SendClientMessageToAll(COLOR_MINIGAME,"* AutoCTFRotation has auto-cancelled the current CTF (Not Enough Players)");
   		return 1;
	}


	for(new a=0; a < MAX_PLAYERS; a++)
	{
 		if(IsPlayerConnected(a))
   		{
     		if(Players[a][Minigame] == 800)
		        {
		            SetPlayerVirtualWorld(a,140);
		            SetPlayerPos(a,CTFSpawn[0],CTFSpawn[1],CTFSpawn[2] + 1);
		            SendClientMessage(a,COLOR_MINIGAME,"@ The Capture the Flag game started.");
		            SendClientMessage(a,COLOR_MINIGAME,"@ When all flags have been picked up, the person with the most flags wins.");
			  		ResetPlayerWeapons(a);
			  		Players[a][ctfflags] = 0;
					SetPlayerInterior(a, CTFInterior);
		        }
    	}
	}
	return 1;
}


CMD:loadctf(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(CTFLoaded == true) return SendClientMessage(playerid,COLOR_RED,"* A CTF Is already loaded, but not started.");
		if(ActiveCTF == true) return SendClientMessage(playerid,COLOR_RED,"* A CTF Is already started!.");
		new ctfname[21];
		new bool:aj;
		if(sscanf(params,"s[21]L(false)",ctfname,aj))
		{
		    SendClientMessage(playerid,COLOR_RED,"* Usage: /loadctf <ctf name> <autojoin (default: 0)>");
            SendClientMessage(playerid,COLOR_RED,"* Will Load a CTF. After Loaded, you must do /startctf to start.");
			return 1;
		}
		
		KillTimer(CTFTimer);
		format(xstring,sizeof xstring,"SELECT * FROM `ctf` WHERE `ctfName` = '%s'",ctfname);
		mysql_query(SQL,xstring);
		
		if(cache_num_rows() > 0)
		{
			CTFLoaded = true; // loaded, but not playable
			cache_get_value_name_int(0, "interior", CTFInterior);	
			cache_get_value_name_float(0,"sX", CTFSpawn[0]);
			cache_get_value_name_float(0,"sY", CTFSpawn[1]);
			cache_get_value_name_float(0,"sZ", CTFSpawn[2]);				
						
			cache_get_value_name_int(0, "ctK", CTFToken);	
			new t;

			cache_get_value_name_int(0, "ctFI", t);	
			if(t == 1) CTFI = true; else CTFI = false;

			// Load the checkpoints
			format(xstring,sizeof xstring,"SELECT * FROM `ctfFlags` WHERE `ctfName` = '%s'",ctfname);
			mysql_query(SQL,xstring);
			new maxx = cache_num_rows();
			if(maxx == 0) return SendClientMessage(playerid,COLOR_RED,"*  Cannot load CTF. This CTF does not have any flags.");
			new Float:tx,Float:ty,Float:tz;
			CTFFlags = maxx;
			for(new a=0; a < maxx; a++)
			{
				cache_get_value_name_float(a,"flagX", tx);
				cache_get_value_name_float(a,"flagY", ty);
				cache_get_value_name_float(a,"flagZ", tz);	
			   	CTF_Flags[a] = CreateDynamicPickup(2914,1,tx,ty,tz,140); // haloween
			   	
			   	if(CTFI == true)
			   	{
			   		CTFIcons[a] = CreateDynamicMapIcon(tx,ty,tz,0,COLOR_WHITE, 140);
			   	}
			
			}
			
			SetPlayerPos(playerid,CTFSpawn[0],CTFSpawn[1],CTFSpawn[2]);
			SetPlayerVirtualWorld(playerid,140);
			Players[playerid][Minigame] = 800;
			CTFMembers++;
			format(xstring,sizeof xstring,"@ Admin %p (ID:%d) loaded CTF ' %s '! [ Flags: %d ]",playerid,playerid,ctfname,maxx);
			SendClientMessageToAll(COLOR_MINIGAME,xstring);
			SendClientMessageToAll(COLOR_MINIGAME,"@ Type /joinctf to join this minigame!");
			

			
		}  	else return SendClientMessageToAll(COLOR_WHITE,"CTF Not Found! Try a different name.");
		
	}   else SendClientMessage(playerid,COLOR_RED,"* Sorry, only Level 5+ admins can load CTF's.");
	return 1;
}

CMD:cctff(playerid,params[]) return cmd_clearctfflags(playerid, params);
CMD:clearctfflags(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		if(CTFLoaded == true || ActiveCTF == true) return SendClientMessage(playerid,COLOR_RED,"* Sorry, you cannot use this command when a CTF is loaded/started.");
		new ctfname[21];
		if(sscanf(params,"s[21]",ctfname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /createctf <driftname>");
		}
	
		format(xstring,sizeof xstring,"SELECT * FROM `ctfFlags` WHERE `ctfName` = '%s'",ctfname);
		mysql_query(SQL,xstring);
		
		if(cache_num_rows() == 0) return SendClientMessageToAll(COLOR_WHITE,"This CTF has no flags to delete.");
		
		format(xstring,sizeof xstring,"DELETE FROM `ctfFlags` WHERE `ctfName` = '%s'",ctfname);
		mysql_query(SQL,xstring);
		
		new Flags = cache_affected_rows();
		
		if(Flags > 0)
		{
			format(xstring,sizeof xstring,"@ Success! %d Flags were deleted from the CTF.",Flags);
			SendClientMessage(playerid,COLOR_MINIGAME,xstring);
		}   else SendClientMessage(playerid,COLOR_WHITE,"@ Sorry, but there was no flags to delete.");
	}
	return 1;
}
	
CMD:actff(playerid,params[]) return cmd_addctfflag(playerid, params);
CMD:addctfflag(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new ctfname[21];
		if(sscanf(params,"s[21]",ctfname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /addctfflag <ctf name>");
		}
		
		format(xstring,sizeof xstring,"SELECT * FROM `ctf` WHERE `ctfName` = '%s'",ctfname);
		mysql_query(SQL,xstring);

		if(cache_num_rows() > 0)
		{
			if(cache_num_rows() == MAX_CTF_FLAGS) return SendClientMessage(playerid,COLOR_AMSG,"** This CTF game has exceeded the max flags limit.");
			
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			
			format(xstring,sizeof xstring,"INSERT INTO `ctfFlags`(`ctfName`,`flagX`,`flagY`,`flagZ`) VALUES ('%s','%0.2f','%0.2f','%0.2f')",ctfname,x,y,z);
			mysql_query(SQL,xstring);
			
			GameTextForPlayer(playerid,"~g~Flag Added.",800,3);
			
		}   else SendClientMessage(playerid,COLOR_AMSG,"** No such CTF!");
	}
	return 1;
}

CMD:togglectficons(playerid,params[]) return cmd_tci(playerid, params);
CMD:tci(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new ctfname[21],tog;
		if(sscanf(params,"s[21]d",ctfname,tog))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /addctfflag <ctf name> <1 for on, 0 for off>");
		}

		format(xstring,sizeof xstring,"SELECT * FROM `ctf` WHERE `ctfName` = '%s'",ctfname);
		mysql_query(SQL,xstring);

		if(cache_num_rows() > 0)
		{
			format(xstring, sizeof(xstring), "UPDATE `ctf` SET `icons` = '%d' WHERE `ctfName` = '%s'", tog, ctfname);
			mysql_query(SQL,xstring);

			SendClientMessage(playerid,COLOR_WHITE,"* This CTF will now show/hide icons.");


		}   else SendClientMessage(playerid,COLOR_AMSG,"** No such CTF!");
	}
	return 1;
}

CMD:setctftoken(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new ctfname[21],tk;
		if(sscanf(params,"s[21]d",ctfname,tk))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /setctftoken <ctf name> <token prize>");
		}

		format(xstring,sizeof xstring,"SELECT * FROM `ctf` WHERE `ctfName` = '%s'",ctfname);
		mysql_query(SQL,xstring);

		if(cache_num_rows() > 0)
		{

			format(xstring, sizeof(xstring), "UPDATE `ctf` SET `cTK` = '%d' WHERE `ctfName` = '%s'", "",tk,ctfname);
			mysql_query(SQL,xstring);


			SendClientMessage(playerid,COLOR_MINIGAME,"* CTF Token Prize Updated.");

		}   else SendClientMessage(playerid,COLOR_AMSG,"** No such CTF!");
	}
	return 1;
}


CMD:ctfhelp(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		ShowPlayerDialog(playerid,6345,DIALOG_STYLE_MSGBOX,"CTF Builder","Type /addctf flag to add a flag.\nType /tci to toggle icon displays.\nType /setctftoken to set reward.\nType /loadctf to load a CTF.\nType /startctf to start one.","OK","");
	}
	return 1;
}


CMD:createctf(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new ctfname[21];
		if(sscanf(params,"s[21]",ctfname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /createctf <ctf name>");
		}
		if(strfind(ctfname,"'") != -1) return SendClientMessage(playerid,COLOR_RED,"* You cannot have the following character in the name: '");
		if(strfind(ctfname,"'\'") != -1) return SendClientMessage(playerid,COLOR_RED,"* You cannot have the following character in the name: '\'");
		if(strfind(ctfname,"'`'") != -1) return SendClientMessage(playerid,COLOR_RED,"* You cannot have the following character in the name: '`'");
		
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		
		format(xstring,sizeof xstring,"INSERT INTO `ctf`(`ctfName`,`ctfMaker`,`sX`,`sY`,`sZ`,`interior`) VALUES ('%s','%p','%0.2f','%0.2f','%0.2f','%d')",ctfname,playerid,x,y,z, GetPlayerInterior(playerid));
		mysql_query(SQL,xstring);

        format(xstring,sizeof xstring,"@ CTF Created ( Interior: %d - %s ).. Type /ctfhelp for commands list.", GetPlayerInterior(playerid), ctfname);
		SendClientMessage(playerid,COLOR_AMSG,xstring);


		
	}
	return 1;
}


/* ************************************************************************** /

					revolutionx survival

************************************************************************ */

CMD:survival(playerid,params[])
{
	ShowPlayerDialog(playerid,7759,DIALOG_STYLE_MSGBOX,"Survival Game","In the survival game, try to be the last one alive!\n\nAround the map are weapons and health -  Use these!","OK","");
	return 1;
}

CMD:survivalhelp(playerid,params[])
{
	ShowPlayerDialog(playerid,7759,DIALOG_STYLE_MSGBOX,"Survival Game Admin","/loadsurvival to load.\n/closesurvival to close.\n/startsurvival to start","OK","");
	return 1;
}

CMD:smenu(playerid,params[])
{
	if(SVLoaded == false) return SendClientMessage(playerid,COLOR_RED,"* This command can only be used in the survival game.");
	if(Players[playerid][Minigame] == 1020)
	{
		ShowPlayerDialog(playerid,7777,DIALOG_STYLE_LIST,"Survival Menu","\n+ 50 Ammo (2 Points)\nInvisible For 10 Seconds (10 Points)\nAirdrop (Coming Soon)","Buy","Leave Menu");
	}   else SendClientMessage(playerid,COLOR_RED,"* This command can only be used in the survival game.");
	return 1;
}

CMD:loadsurvival(playerid, params[])
{
	if(IsAdmin(playerid))
	{
		if(SVLoaded == true) return SendClientMessage(playerid,COLOR_RED,"* Survival already loaded... /startsurvival");
		if(SVStarted == true) return SendClientMessage(playerid,COLOR_RED,"* Survival already running. Wait for it to finish.");

		// Pickup

		format(xstring,sizeof xstring,"*!* Admin %p (ID:%d) loaded the Survival Minigame! Type /joinsurvival to join it.",playerid,playerid);
		SendClientMessageToAll(COLOR_MINIGAME,xstring);
		

		
		SVLoaded = true;
		
		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setname` = '%s'", "gameobjects");
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, I could not find that object set!");
		new total,setID;
		new creator[24];

		cache_get_value_name_int(0, "setID", setID);
		cache_get_value_name(0,"sCreator",creator);

		new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,aModel,an,to;
		//new ma,mmodel,txd[20],textname[20],macolor;


		format(xstring,sizeof xstring,"SELECT * FROM `objectdata` WHERE `setID` = '%d'", setID);
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, that object set is empty!");

		total = cache_num_rows();

		for(new a=0; a <= total; a++)
		{
			cache_get_value_name_int(a, "oModel", aModel);


			cache_get_value_name_float(a,"oX", x);
			cache_get_value_name_float(a,"oY", y);
			cache_get_value_name_float(a,"oZ", z);
			cache_get_value_name_float(a,"rX", rx);
			cache_get_value_name_float(a,"rY", ry);
			cache_get_value_name_float(a,"rZ", rz);
			// Materials


			// Actually Create the object!
			if(aModel != 0)
 			{
				an = CreateDynamicObject(aModel,x,y,z,rx,ry,rz,875,-1,-1);
			 	Streamer_SetIntData(STREAMER_TYPE_OBJECT,an,E_STREAMER_EXTRA_ID,300); // store who created dis shit!
				to++;




			}

		}

		// MATERIALS
	
	}
	return 1;
}

CMD:closesurvival(playerid, params[])
{
	if(IsAdmin(playerid))
	{
		if(SVLoaded == false) return SendClientMessage(playerid,COLOR_RED,"* Survival not loaded... /loadsurvival");
	
	    SVLoaded = false;
	    SVStarted = false;
	    SVPlayers = 0;
	    
    	for(new e=0; e <= MAX_PLAYERS; e++)
		{
		    if(IsPlayerConnected(e) && Players[e][Minigame] == 1020)
		    {
		        Players[e][Minigame] = -1;
		        SetPlayerHealth(playerid, 0);
	        	GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~g~Survival Game~n~Ended!",1200,3);
	        	Players[e][SPoints] = 0;
		    
		    }

		}
		
		new count;
		count = CountDynamicObjects();
		for(new a = 0; a <= count; a++)
		{
			if(Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) == 300 )
			{
				DestroyDynamicObject(a);

				// Move
   				for(new e = 0; e <= 50; e++)
				{
				    if(Moving[e][e_MovingObject_Actual] == a)
				    {
						DeleteMovingData(e);
				    }
				}
			}
		}
		
		for(new e=0; e <= sizeof gamePickups; e++)
		{
		    DestroyDynamicPickup(gamePickups[e]);
		}
		
		format(xstring,sizeof xstring,"*!* Admin %p (ID:%d) ended the Survival Minigame!.",playerid,playerid);
		SendClientMessageToAll(COLOR_MINIGAME,xstring);
		

	}
	return 1;
}

CMD:startsurvival(playerid, params[])
{
	if(IsAdmin(playerid))
	{
		if(SVLoaded == false) return SendClientMessage(playerid,COLOR_RED,"* Survival not loaded... /loadsurvival");
		if(SVStarted == true) return SendClientMessage(playerid,COLOR_RED,"* Survival already running. Wait for it to finish.");
		
		if(SVPlayers < 2) return SendClientMessage(playerid,COLOR_RED,"* Survival can't start. Needs more players.");
		new point;
		
		PlaySoundForAll(1057);
		
		SVStarted = true;
		
		gamePickups[0] = CreateDynamicPickup(339, 3,-2058.5691,-2466.5635,30.6250, 875);
		gamePickups[1] = CreateDynamicPickup(337, 3,-1636.1886,-2233.4868,31.4766, 875);
		gamePickups[2] = CreateDynamicPickup(352, 3,-1973.9198,-2410.0874,36.9143, 875);
		gamePickups[3] = CreateDynamicPickup(357, 3,-2106.5339,-2456.4724,30.6250, 875);

		gamePickups[2] = CreateDynamicPickup(1240, 3,-1973.9198,-2410.0874,36.9143, 875);
		gamePickups[3] = CreateDynamicPickup(349, 3,-2103.5986,-2246.1614,30.6250, 875);
		
		gamePickups[4] = CreateDynamicPickup(363, 3,-2080.9902,-2360.3176,30.6250, 875);
		gamePickups[5] = CreateDynamicPickup(343, 3,-2103.5986,-2246.1614,30.6250, 875);
		
		gamePickups[6] = CreateDynamicPickup(1240, 3,-2139.4985,-2402.7224,30.4688, 875);
		gamePickups[7] = CreateDynamicPickup(326, 3,-2171.0896,-2416.4209,36.8233, 875);
		
		gamePickups[8] = CreateDynamicPickup(357, 3,-2139.4985,-2402.7224,30.4688, 875);
		gamePickups[9] = CreateDynamicPickup(1240, 3,-2174.5122,-2485.5227,30.8417, 875);
		
		gamePickups[10] = CreateDynamicPickup(348, 3,-2151.7715,-2443.7959,30.6328, 875);
		gamePickups[11] = CreateDynamicPickup(337, 3,-2086.5210,-2529.1589,30.4482, 875);
		
		gamePickups[12] = CreateDynamicPickup(346, 3,-2194.1941,-2472.7441,30.4688, 875);



		
 		for(new e=0; e < MAX_PLAYERS; e++)
		{
		    if(IsPlayerConnected(e) && Players[e][Minigame] == 1020)
		    {
		        PlayerPlaySound(e,1057,0.0,0.0,0.0);
		        Players[e][SPoints] = 0;
				point = random(2);
				switch(point)
				{
				    case 0:
				    {
					    SetPlayerPos(e,-2073.2856,-2417.3206,30.6250);
					    SetPlayerFacingAngle(e,337.1266);
					    SetPlayerWeather(e, 8);
					    SetPlayerTime(e,22,0);
					    SetPlayerVirtualWorld(e,875);
 				    	SetPlayerArmour(e, 0);
					    Players[e][God] = false;
				    }
				    
				    case 1:
				    {
					    SetPlayerPos(e,-2190.1255,-2270.7888,30.6250);
					    SetPlayerFacingAngle(e,152.9082);
					    SetPlayerWeather(e, 8);
					    SetPlayerTime(e,22,0);
					    SetPlayerVirtualWorld(e,875);
 				    	SetPlayerArmour(e, 0);
					    Players[e][God] = false;
				    }
				    
			     	case 2:
				    {
					    SetPlayerPos(e,-2099.8032,-2241.6960,30.6250);
					    SetPlayerFacingAngle(e,167.9483);
					    SetPlayerWeather(e, 8);
					    SetPlayerTime(e,22,0);
					    SetPlayerVirtualWorld(e,875);
					    SetPlayerArmour(e, 0);
					    Players[e][God] = false;
				    }
				}
				
				format(xstring,sizeof xstring,"~n~~n~~n~~n~~n~~g~Survival Game~n~Started!~n~%d Players",SVPlayers);
				GameTextForPlayer(e,xstring,1500,3);
		    }
		}
		
		SendClientMessage(playerid,COLOR_MINIGAME,"Try to Survive!! You can find guns around the map. Each time you kill someone, You get points.");
		SendClientMessage(playerid,COLOR_MINIGAME,"Survival Points can be spent on more ammo, airdrops, and more!! /smenu or PRESS 'n'");
		

	}
	return 1;
}

CMD:joinsurvival(playerid, params[])
{
	if(SVLoaded == false) return SendClientMessage(playerid,COLOR_RED,"* Survival not loaded...");
	if(SVStarted == true) return SendClientMessage(playerid,COLOR_RED,"* Survival already running. Wait for it to finish.");
	if(Players[playerid][Minigame] != 0 || Players[playerid][TDMJoined] == true) return SendClientMessage(playerid,COLOR_RED,"* You are already playing a minigame!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"* You must leave your vehicle first.");
	Players[playerid][Minigame] = 1020;
	SVPlayers++;
	ResetPlayerWeapons(playerid);
	SetPlayerInterior(playerid,0);
	Players[playerid][SPoints] = 0;
	
	if(Players[playerid][God] == true)
	{
        SendClientMessage(playerid,COLOR_YELLOW,"** Survival: Godmode auto-disabled.");
        Players[playerid][God] = false;
	}

	new r;
	SetPlayerVirtualWorld(playerid,875);
	r = random(2);
	switch(r)
	{
	    case 0:
		{
			SetPlayerPos(playerid,-2073.2856,-2417.3206,30.6250);
			SetPlayerFacingAngle(playerid,337.1266);
		}
	    case 1:
	    {
			SetPlayerPos(playerid,-2190.1255,-2270.7888,30.6250);
			SetPlayerFacingAngle(playerid,152.9082);
	    }
		case 2:
		{
			SetPlayerPos(playerid,-2099.8032,-2241.6960,30.6250);
			SetPlayerFacingAngle(playerid,167.9483);
		}
	}



	SendClientMessage(playerid,COLOR_YELLOW,"You have joined the survival game. It will start soon. For help, type /survival");
	

	format(xstring,sizeof xstring,"*!* %p (ID:%d) joined the Survival Minigame! Type /joinsurvival to join..",playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);


	return 1;
}


/*******************************************************************************
						REVOLUTIONX DERBY SYSTEM

# Commands:
/addderbyspawnpoint (/adsp)
/setderbyvehicle (/sdv)
/setderbyobjectset (/sdos)
/createderby /cde)
/loadderby (/ld)

# Variables
new bool:ActiveDerby;
new bool:DerbyLoaded;
new bool:DerbyVehicle;

*******************************************************************************/


CMD:joinderby(playerid, params[])
{
	if(ActiveDerby == true) return SendClientMessage(playerid,COLOR_AMSG,"** A Derby is already in progress, you cant join!");
	if(DerbyLoaded == false) return SendClientMessage(playerid,COLOR_AMSG,"** A Derby is not loaded!");
	if(Players[playerid][Minigame] != 0 || Players[playerid][TDMJoined] == true) return SendClientMessage(playerid,COLOR_RED,"* You are already playing a minigame!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"* You must leave your vehicle first.");
	Players[playerid][Minigame] = 900;
	DerbyPlayers++;
	ResetPlayerWeapons(playerid);
	SetPlayerInterior(playerid,DerbyInterior);
	
	new r;
	SetPlayerVirtualWorld(playerid,205);
	Streamer_UpdateEx(playerid, DerbySpawns[r][0],DerbySpawns[r][1],DerbySpawns[r][2]);
	r = random(2);
	switch(r)
	{
	    case 0:
		{
            GotoPosition(playerid,DerbySpawns[0][0],DerbySpawns[0][1],DerbySpawns[0][2],true);
           	new car = CreateVehicle(DerbyVehicle,DerbySpawns[0][0],DerbySpawns[0][1],DerbySpawns[0][2] + 5,DerbySpawns[0][3],0,0,-1);
			SetVehicleVirtualWorld(car,205);
			PutPlayerInVehicle(playerid,car,0);
		}
	    case 1:
	    {
     		GotoPosition(playerid,DerbySpawns[1][0],DerbySpawns[1][1],DerbySpawns[1][2],true);
           	new car = CreateVehicle(DerbyVehicle,DerbySpawns[1][0],DerbySpawns[1][1],DerbySpawns[1][2] + 5,DerbySpawns[1][3],0,0,-1);
			SetVehicleVirtualWorld(car,205);
			PutPlayerInVehicle(playerid,car,0);
	    }
		case 2:
		{
  			GotoPosition(playerid,DerbySpawns[2][0],DerbySpawns[2][1],DerbySpawns[2][2],true);
           	new car = CreateVehicle(DerbyVehicle,DerbySpawns[2][0],DerbySpawns[2][1],DerbySpawns[2][2] + 5,DerbySpawns[2][3],0,0,-1);
			SetVehicleVirtualWorld(car,205);
			PutPlayerInVehicle(playerid,car,0);
		}
	}



	SendClientMessage(playerid,COLOR_MINIGAME,"Joined the derby! You will teleport when it starts!");
	return 1;
}

CMD:closederby(playerid,params[]) return cmd_closederby(playerid,params);
CMD:uld(playerid,params[]) return cmd_unloadderby(playerid, params);
CMD:unloadderby(playerid, params[])
{
	if(DerbyLoaded == false) return SendClientMessage(playerid,COLOR_MINIGAME,"** A Derby has not been loaded!");
	
	DerbyLoaded = false;
	DerbyVehicle = 0;
	DerbyPlayers = 0;
	DerbyZ = 0.0;
	DerbyInterior = 0;
	ActiveDerby = false;
	
	for(new e=0; e < 5; e++)
	{
	    if(IsValidDynamicPickup(DerbyPickups[e]))
	    {
	        DestroyDynamicPickup(DerbyPickups[e]);
	    }
	}
	
	for(new e=0; e < MAX_PLAYERS; e++)
	{
		if(IsPlayerConnected(e) && Players[e][Minigame] == 900)
		{
			SpawnPlayer(e);
			Players[e][Minigame] = 0;
			Players[e][autofix] = true;
		}
	}
	
	KillTimer(DerbyTime);
	SendClientMessageToAll(COLOR_LIGHTBLUE,"Derby unloaded!");
	return 1;
}

CMD:sd(playerid,params[]) return cmd_startderby(playerid, params);
CMD:startderby(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,5))
	{
		if(ActiveDerby == true) return SendClientMessage(playerid,COLOR_MINIGAME,"** A Derby is already in progress, you cant unload!");
		if(DerbyLoaded == false) return SendClientMessage(playerid,COLOR_MINIGAME,"** A Derby has not been loaded!");

		if(DerbyPlayers == 0 || DerbyPlayers == 1)
		{
			SendClientMessageToAll(COLOR_MINIGAME,"** Derby canceled. Not enough players.");
	    	DerbyLoaded = false;
			ActiveDerby = false;
			DerbyVehicle = 0;
			DerbyPlayers = 0;

			for(new e=0; e < MAX_PLAYERS; e++)
			{
				if(IsPlayerConnected(e) && Players[e][Minigame] == 900)
				{
					SetPlayerHealth(e, 0);
					Players[e][Minigame] = 0;
					Players[e][autofix] = true;
				}
			}


			return 1;
		}

		ActiveDerby = true;

		foreach(new e : Player)
		{
			if(Players[e][Minigame] == 900)
			{
				PlayerPlaySound(e, 1056, 0.0, 0.0, 0.0);
				format(xstring,sizeof xstring,"** Derby Started With %d Players!",DerbyPlayers);
				GivePlayerWeapon(e,WEAPON_TEC9,5000);
				SendClientMessage(e,COLOR_MINIGAME,xstring);
				GameTextForPlayer(e,"~n~~r~Derby has started!",7000,3);
				Players[e][autofix] = false;

			}
		}
	}
	
	
	return 1;
}


CMD:event(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		ShowPlayerDialog(playerid,5010,DIALOG_STYLE_LIST,"** RevolutionX Event System","Load a derby event\nLoad a race\nView Derby List\nView Race List","OK","Cancel");
	}   else SendClientMessage(playerid,COLOR_RED,"* Sorry, Only Admins can load events.");
	return 1;
}

// new style
CMD:event2(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		ShowPlayerDialog(playerid,6010,DIALOG_STYLE_LIST,"** RevolutionX Event System","Load An Event..\nCreate a New Event\nDelete an Event\nList all Events\nStart a Random Event\nView Current Event Information\nChange Next Event Rotation\nView my Events","OK","Cancel");
	}   else SendClientMessage(playerid,COLOR_RED,"* Sorry, Only Admins can load events.");
	return 1;
}



CMD:ld(playerid,params[]) return cmd_loadderby(playerid, params);
CMD:loadderby(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
 		if(ActiveDerby == true) return SendClientMessage(playerid,COLOR_AMSG,"** A Derby is already in progress, you cant unload!");
		if(DerbyLoaded == true) return SendClientMessage(playerid,COLOR_AMSG,"** A Derby has already been loaded!");
		new dname[21];
		if(sscanf(params,"s[21]",dname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /addderbyspawnpoint <ctf name>");
		}

 		format(xstring,sizeof xstring,"SELECT * FROM `derby` WHERE `dName` = '%s'",dname);
		mysql_query(SQL,xstring);

		if(cache_num_rows() > 0)
		{
			new Creator[21],ObjSet[21];
			// the derby exists!
			
			cache_get_value_name_int(0, "dVehicle", DerbyVehicle);
			cache_get_value_name_int(0,"dInterior",DerbyInterior);
			cache_get_value_name(0,"dCreator",Creator);
			cache_get_value_name(0,"dObjectSet",ObjSet);
			cache_get_value_name_float(0,"DerbyZ",DerbyZ);
			
			if(DerbyZ == 0) DerbyZ = -0.1;
			
			DerbyTime = SetTimer("DerbyTimer",1000,true);

            if(strlen(ObjSet) > 0)
            {
                // load the needed object set - stored in id 102
                LoadDerbyMap(ObjSet);
                // DestroyAllAdminObjects(102)
            }

			// load the derby spawns
			format(xstring,sizeof xstring,"SELECT * FROM `dSpawns` WHERE `dName` = '%s'",dname);
			mysql_query(SQL,xstring);
			new total = cache_num_rows();
			
			
  			for(new e=0; e < total; e++)
			{
				cache_get_value_name_float(e,"dX",DerbySpawns[e][0]);	
				cache_get_value_name_float(e,"dY",DerbySpawns[e][1]);
				cache_get_value_name_float(e,"dZ",DerbySpawns[e][2]);
				cache_get_value_name_float(e,"dRot",DerbySpawns[e][3]);
			}
			

			// load the derby pickups
			format(xstring,sizeof xstring,"SELECT * FROM `dPickups` WHERE `dName` = '%s'",dname);
			mysql_query(SQL,xstring);
			new Float:px,Float:py,Float:pz;


  			for(new e=0; e < 5; e++)
			{
				cache_get_value_name_float(e,"dX",px);	
				cache_get_value_name_float(e,"dY",py);
				cache_get_value_name_float(e,"dZ",pz);
    			if(px != 0 && py != 0 && pz != 0)
    			{
    			    DerbyPickups[e] = CreateDynamicPickup(1240,14,px,py,pz, 205);
    			}
			}
			
			DerbyLoaded = true;
            DerbyPlayers = 0;

			format(xstring,sizeof xstring,">> Derby '%s' (Created by %s) loaded! /joinderby",dname,Creator);
			SendClientMessageToAll(COLOR_MINIGAME,xstring);
			SendClientMessageToAll(COLOR_MINIGAME,">> You can join this derby by using the /joinderby command");
			GameTextForAll("~n~~g~Derby Event has been loaded! ~n~~w~TYPE ~p~/joinderby ~w~to participate",7000,3);
			SendClientMessage(playerid,COLOR_MINIGAME,"Admin Derby Info: Use /startderby when players are ready!");
			PlaySoundForAll(1056);
	
			
		}   else SendClientMessage(playerid,COLOR_AMSG,"** No such Derby!");
	}
	return 1;
}

CMD:adhp(playerid,params[]) return cmd_addderbyhealthpickup(playerid, params);
CMD:addderbyhealthpickup(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new dname[21];
		if(sscanf(params,"s[21]",dname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /addderbyhealthpickup <ctf name>");
		}

		format(xstring,sizeof xstring,"SELECT * FROM `derby` WHERE `dName` = '%s'",dname);
		mysql_query(SQL,xstring);
		if(cache_num_rows() == 3) return SendClientMessage(playerid,COLOR_WHITE,"* Derby Spawn Limit Reached");

		if(cache_num_rows() > 0)
		{
			format(xstring,sizeof xstring,"SELECT * FROM `dPickups` WHERE `dName` = '%s'",dname);
			mysql_query(SQL,xstring);
			if(cache_num_rows() == 5) return SendClientMessage(playerid,COLOR_WHITE,"* Derby Pickup Limit Reached (5)");

			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);

			format(xstring,sizeof xstring,"INSERT INTO `dPickups`(`dName`,`dX`,`dY`,`dZ`) VALUES ('%s','%0.2f','%0.2f','%0.2f')",dname,x,y,z);
			mysql_query(SQL,xstring);

			SendClientMessage(playerid,COLOR_MINIGAME,"* Derby Health Pickup Added!");
		}   else SendClientMessage(playerid,COLOR_AMSG,"** No such Derby!");
	}
	return 1;
}

CMD:derbyhelp(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		ShowPlayerDialog(playerid,5675,DIALOG_STYLE_MSGBOX,"Derby","Use /adhp to add health pickups.\nUse /adsp to add spawn points\nuse /sdv to set the vehicle\nuse /sddz to set the Z limit to where people die\nuse /sdos to set an object set (optional)","OK","");
	}
	return 1;
}

CMD:adsp(playerid,params[]) return cmd_addderbyspawnpoint(playerid, params);
CMD:addderbyspawnpoint(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new dname[21];
		if(sscanf(params,"s[21]",dname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /addderbyspawnpoint <ctf name>");
		}

		format(xstring,sizeof xstring,"SELECT * FROM `derby` WHERE `dName` = '%s'",dname);
		mysql_query(SQL,xstring);
		if(cache_num_rows() == 3) return SendClientMessage(playerid,COLOR_WHITE,"* Derby Spawn Limit Reached");

		if(cache_num_rows() > 0)
		{
			format(xstring,sizeof xstring,"SELECT * FROM `dSpawns` WHERE `dName` = '%s'",dname);
			mysql_query(SQL,xstring);
			if(cache_num_rows() == 3) return SendClientMessage(playerid,COLOR_WHITE,"* Derby Spawn Limit Reached");
		
			new Float:x,Float:y,Float:z,Float:r;
			GetPlayerPos(playerid,x,y,z);
			GetPlayerFacingAngle(playerid,r);

			format(xstring,sizeof xstring,"INSERT INTO `dSpawns`(`dName`,`dX`,`dY`,`dZ`,`dRot`) VALUES ('%s','%0.2f','%0.2f','%0.2f','%0.2f')",dname,x,y,z,r);
			mysql_query(SQL,xstring);

			SendClientMessage(playerid,COLOR_MINIGAME,"* Derby Spawn Point Added!");
		}   else SendClientMessage(playerid,COLOR_AMSG,"** No such Derby!");
	}
	return 1;
}

CMD:sdv(playerid,params[]) return cmd_setderbyvehicle(playerid, params);
CMD:setderbyvehicle(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new dname[21],veh[21];
		if(sscanf(params,"s[21]s[21]",dname,veh))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /setderbyvehicle <derby name> <vehicle name/id>");
		}

		// Does it exist?

		format(xstring,sizeof xstring,"SELECT * FROM `derby` WHERE `dName` = '%s'",dname);
		mysql_query(SQL,xstring);

		if(cache_num_rows() > 0)
		{
			new vehicle;
			if(IsNumeric(veh)) vehicle = strval(veh);
			if(!IsNumeric(veh)) vehicle = GetVehicleModelIDFromName(veh);
			if(vehicle == 425 || vehicle == 447 || vehicle == 464 || vehicle == 432 || vehicle == 520) return SendClientMessage(playerid,COLOR_RED,"* Sorry, that vehicle can only be spawned in certain minigames.");
			if(vehicle == 464 || vehicle == 539) return SendClientMessage(playerid,COLOR_RED, "That vehicle cannot be spawned.");


		
			format(xstring,sizeof xstring,"UPDATE `derby` SET `dVehicle` = '%d' WHERE `dName` = '%s'",vehicle,dname);
			mysql_query(SQL,xstring);


			SendClientMessage(playerid,COLOR_MINIGAME,"* Derby Vehicle Added!");
		}   else SendClientMessage(playerid,COLOR_AMSG,"** No such Derby!");
	}
	return 1;
}

CMD:sddz(playerid,params[]) return cmd_setderbydeathzone(playerid, params);
CMD:setderbydeathzone(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
	    new dname[21];
   		if(sscanf(params,"s[21]",dname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /setderbydeathzone <derby name>");
		}
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);

		// Does it exist?

		format(xstring,sizeof xstring,"SELECT * FROM `derby` WHERE `dName` = '%s'",dname);
		mysql_query(SQL,xstring);

		if(cache_num_rows() > 0)
		{
			format(xstring,sizeof xstring,"UPDATE `derby` SET `DerbyZ` = '%f' WHERE `dName` = '%s'",z,dname);
			mysql_query(SQL,xstring);


			SendClientMessage(playerid,COLOR_MINIGAME,"* Derby Death Zone Set!");
		}   else SendClientMessage(playerid,COLOR_AMSG,"** No such Derby!");
	}
	return 1;
}

CMD:sdos(playerid,params[]) return cmd_setderbyobjectset(playerid, params);
CMD:setderbyobjectset(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new dname[21],set[21];
		if(sscanf(params,"s[21]s[21]",dname,set))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /setderbyobjectset <derby name> <set name>");
		}

		// Does it exist?

		format(xstring,sizeof xstring,"SELECT * FROM `derby` WHERE `dName` = '%s'",dname);
		mysql_query(SQL,xstring);

		if(cache_num_rows() >= 0)
		{
			format(xstring,sizeof xstring,"UPDATE `derby` SET `dObjectSet` = '%s' WHERE `dName` = '%s'",set,dname);
			mysql_query(SQL,xstring);

			SendClientMessage(playerid,COLOR_MINIGAME,"* Derby Object Set Added!");
		}   else SendClientMessage(playerid,COLOR_AMSG,"** No such Derby!");
	}
	return 1;
}


CMD:cde(playerid,params[]) return cmd_createderby(playerid, params);
CMD:createderby(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new dname[21];
		if(sscanf(params,"s[21]",dname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /createderby <Derby Name>");
		}

		format(xstring,sizeof xstring,"SELECT * FROM `derby` WHERE `dName` = '%s'",dname);
		mysql_query(SQL,xstring);

		if(cache_num_rows() == 0)
		{
			format(xstring,sizeof xstring,"INSERT INTO `derby`(`dName`,`dCreator`) VALUES ('%s','%p')",dname,playerid);
			mysql_query(SQL,xstring);

			format(xstring,sizeof xstring,"Derby %s created! Type /derbyhelp for a commands list.",dname);
   			SendClientMessage(playerid,COLOR_MINIGAME,xstring);
   			SendClientMessage(playerid,COLOR_MINIGAME,"You can add spawn points with /adsp and you can specifiy a object set with /sdos");
		}   else SendClientMessage(playerid,COLOR_MINIGAME,"** No such Derby!");
	}
	return 1;
}

/*******************************************************************************
 						 end REVOLUTIONX DERBY SYSTEM
*******************************************************************************/


/*******************************************************************************
 						START REVOLUTIONX DM SYSTEM
 						
Commands:
	/createcustomdm (/ccd <Deathmatch Name>)
	/dcdm (Level 7+) delete coustom dm
	/scdmw (/setcustomdeathmatchweapons)
*******************************************************************************/






/*******************************************************************************
 						END REVOLUTIONX DM SYSTEM
*******************************************************************************/

CMD:createdrift(playerid,params[]) return cmd_adddrift(playerid, params);
CMD:adddrift(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new pname[30],dname[30];
		if(sscanf(params,"s[30]",dname))
		{
		    return SendClientMessage(playerid,COLOR_RED,"* Usage: /adddrift <driftname>");
		}
		if(strfind(pname,"'") != -1) return SendClientMessage(playerid,COLOR_RED,"* You cannot have the following character in the name: '");
		if(strfind(pname,"'\'") != -1) return SendClientMessage(playerid,COLOR_RED,"* You cannot have the following character in the name: '\'");
		new Float:px,Float:py,Float:pz;
		GetPlayerName(playerid,pname,sizeof pname);
		GetPlayerPos(playerid,px,py,pz);
		new Float:ang;
		GetPlayerFacingAngle(playerid,ang);
		AddDrift(pname,dname,px,py,pz,ang);
		SendClientMessage(playerid,COLOR_AMSG,"** New Drift Created Here");

	}
	return 1;
}

CMD:gv(playerid,params[])
{

	return cmd_givevehicle(playerid, params);
}

CMD:givevehicle(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new veh[35],id;
		if (sscanf(params, "us[35]",id,veh)) return SendClientMessage(playerid,COLOR_RED,"** Usage: /givevehicle <playerid> <car name>");
		if(IsPlayerConnected(id))
		{
			new Float:x, Float:y, Float:z;
			new vehicle = GetVehicleModelIDFromName(veh);
			if(vehicle < 400 || vehicle > 611) return SendClientMessage(playerid,COLOR_RED, "That vehicle name was not found");
			new Float:a;
			GetPlayerFacingAngle(id, a);
			GetPlayerPos(id, x, y, z);
			if(IsPlayerInAnyVehicle(id) == true)
			{
				GetXYInFrontOfPlayer(id, x, y, 8);
			}
			else
			{
				GetXYInFrontOfPlayer(id, x, y, 5);
			}
			new PlayersVehicle = CreateVehicle(vehicle, x, y, z, a+90, -1, -1, -1);
			LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(id));
			PutPlayerInVehicle(id,PlayersVehicle, 0);
			format(xstring, sizeof(xstring), "Admin %p ID:%d) forced you into a %s",playerid,playerid,veh);
			SendClientMessage(id,COLOR_AMSG,xstring);
			format(xstring,sizeof xstring,"** You gave %s (ID:%d) a %s",GetPName(id),id,veh);
			SendClientMessage(playerid,COLOR_AMSG,xstring);
		}   else SendClientMessage(playerid,COLOR_RED,"** That player is not connected!");
		return 1;
	}   else SendClientMessage(playerid,COLOR_RED,"** Sorry, only admins level 3+ can do this command.");
	return 1;
}


CMD:me(playerid,params[])
{
	if(Players[playerid][Muted] == false)
	{
		if(strlen(params) > 50) return SendClientMessage(playerid,COLOR_RED,"* Please enter a shorter message.");
		if(strlen(params) == 0) return SendClientMessage(playerid,COLOR_RED,"* You didnt type anything.");
 		if(stringContainsIP(params))
	    {
	        format(xstring,sizeof xstring,"[Admin AC]: Blocked PM Advertisement by %p (ID:%d)",playerid,playerid);
	        Chat_SendMessageToAdmins(COLOR_AC,1,xstring);
	        return 0;
	    }
		format(xstring, sizeof(xstring), "%p (ID:%d) %s",playerid,playerid,params);
		SendClientMessageToAll(GetPlayerColor(playerid),xstring);
	}
	return 1;
}


/* ------------------------ Admin Object Sys Commands --------------------- */


CMD:stack(playerid, params[]) return cmd_loopobj(playerid, params);
CMD:loopobj(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new Float:tmp2[3],loop,mod,rot[3];
		if(sscanf(params,"ddffffff",mod,loop,tmp2[0],tmp2[1],tmp2[2],rot[0],rot[1],rot[2])) return SendClientMessage(playerid,COLOR_RED,"/loopobj <modelid> <amt to loop> <offset x> <offset y> <offsetz> <fixed rotation x> <fixed rotation y> <fixed rotation z>");
		new Float:tmp[3];
		tmp[0] = tmp2[0],tmp[1] = tmp2[1],tmp[2] = tmp2[2];
		//loop
		for(new i=0;i<loop;i++)
		{
			new Float:x,Float:y,Float:z;
			new store;
			GetPlayerPos(playerid,x,y,z);
			new Float:ang;
			GetPlayerFacingAngle(playerid,ang);
			GetXYInFrontOfPlayer(playerid,x,y,0);
			store = CreateDynamicObject(mod,x+tmp2[0],y+tmp2[1],z+tmp2[2],rot[0],rot[1],ang+rot[2],GetPlayerVirtualWorld(playerid),-1,-1);
			Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
			Streamer_UpdateEx(playerid,x,y,z);
			tmp2[0] += tmp[0];
			tmp2[1] += tmp[1];
			tmp2[2] += tmp[2];
		}
	}
	return 1;
}

CMD:loopobj2(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new Float:tmp2[3],loop,mod,rot[3];
		if(sscanf(params,"ddffffff",mod,loop,tmp2[0],tmp2[1],tmp2[2],rot[0],rot[1],rot[2])) return SendClientMessage(playerid,COLOR_RED,"/loopobj2 <modelid> <amt to loop> <offset x> <offset y> <offsetz> <fixed rotation x> <fixed rotation y> <fixed rotation z>");
		else if(!IsValidSAMPObject(mod) && !IsValidObjectModel(mod)) return SendClientMessage(playerid,COLOR_RED,"* Not a valid object model!");
		else
		{
			new Float:tmp[3],Float:rot2[3];
			tmp[0] = tmp2[0],tmp[1] = tmp2[1],tmp[2] = tmp2[2];
			rot2[0] = rot[0],rot2[1] = rot[1],rot2[2] = rot[2];
			//loop
			for(new i=0;i<loop;i++)
			{
				new Float:x,Float:y,Float:z;
				new str[100];
				new store;
				GetPlayerPos(playerid,x,y,z);
				new Float:ang;
				GetPlayerFacingAngle(playerid,ang);
				GetXYInFrontOfPlayer(playerid,x,y,0);
				store = CreateDynamicObject(mod,x+tmp2[0],y+tmp2[1],z+tmp2[2],rot[0],rot[1],ang+rot[2],GetPlayerVirtualWorld(playerid),-1,-1,DEFAULTVIS);
				Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
				format(str,sizeof(str),"Object %d Created. (Model: %d)",store,mod);
				SendClientMessage(playerid,COLOR_OBJ,str);
				Streamer_UpdateEx(playerid,x,y,z);
				SetPVarInt(playerid,"LastObject",store);
				tmp2[0] += tmp[0];
				tmp2[1] += tmp[1];
				tmp2[2] += tmp[2];
				rot[0] += rot2[0];
				rot[1] += rot2[1];
				rot[2] += rot2[2];
			}
		}
	}
	return 1;
}
CMD:loopobj3(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new Float:tmp2[3],loop,mod,rot[3];
		if(sscanf(params,"ddffffff",mod,loop,tmp2[0],tmp2[1],tmp2[2],rot[0],rot[1],rot[2])) return SendClientMessage(playerid,COLOR_RED,"/loopobj2 <modelid> <amt to loop> <offset x> <offset y> <offsetz> <fixed rotation x> <fixed rotation y> <fixed rotation z>");
		else if(!IsValidSAMPObject(mod) && !IsValidObjectModel(mod)) return SendClientMessage(playerid,COLOR_RED,"* Not a valid object model!");
		else
		{
			new Float:rot2[3];
			rot2[0] = rot[0],rot2[1] = rot[1],rot2[2] = rot[2];
			//loop
			for(new i=0;i<loop;i++)
			{
				new Float:x,Float:y,Float:z;
				new str[100];
				new store;
				GetPlayerPos(playerid,x,y,z);
				new Float:ang;
				GetPlayerFacingAngle(playerid,ang);
				GetXYInFrontOfPlayer(playerid,x,y,0);
				store= CreateDynamicObject(mod,x+tmp2[0],y+tmp2[1],z+tmp2[2],rot[0],rot[1],ang+rot[2],GetPlayerVirtualWorld(playerid),-1,-1);
                Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
				format(str,sizeof(str),"Object %d Created. (Model: %d)",store,mod);
				SendClientMessage(playerid,COLOR_OBJ,str);
				Streamer_UpdateEx(playerid,x,y,z);
				SetPVarInt(playerid,"LastObject",store);
				rot[0] += rot2[0];
				rot[1] += rot2[1];
				rot[2] += rot2[2];
			}
		}
	}
	return 1;
}
CMD:loo(playerid,params[]) return cmd_loopobj(playerid,params);
CMD:lor(playerid,params[]) return cmd_loopobj3(playerid,params);
CMD:loor(playerid,params[]) return cmd_loopobj2(playerid,params);


CMD:myramp(playerid,params[])
{
	if(Players[playerid][myramp] == 0)
	{
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerFacingAngle(playerid, ang);
	    GetPlayerPos(playerid,x,y,z);
	    Players[playerid][myramp] = CreateDynamicObject(1634,x,y+3,z-1,0,0,ang,GetPlayerVirtualWorld(playerid),-1,playerid);
	    GameTextForPlayer(playerid,"~g~ramp created!",800,3);
		SendClientMessage(playerid,COLOR_GREEN,"* You can use /deleteramp (/dramp) to delete. [ Only you can see the ramp ]");
	}   else SendClientMessage(playerid,COLOR_GREEN,"* You already made a ramp!");
	return 1;
}

CMD:deleteramp(playerid,params[]) return cmd_dramp(playerid, params);
CMD:dramp(playerid,params[])
{
	if(Players[playerid][myramp] != 0)
	{
		DestroyDynamicObject(Players[playerid][myramp]);
	    Players[playerid][myramp] = 0;
	    GameTextForPlayer(playerid,"~g~ramp deleted!",800,3);
	}   else SendClientMessage(playerid,COLOR_GREEN,"* You never made a ramp!");
	return 1;
}

CMD:expo(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new id;
		if(sscanf(params,"d",id))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /expo <object id>");
			SendClientMessage(playerid,COLOR_RED,"Explodes a object.");
            return 1;
		}
		new Float:x,Float:y,Float:z;
		GetDynamicObjectPos(id,x,y,z);
		CreateExplosion(x,y,z,12,1);
	}
	return 1;
}


CMD:setinfo(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		new setname[24];
		if(sscanf(params,"s[24]",setname)) return SendClientMessage(playerid,COLOR_RED,"Usage: !setinfo <Object Set Name>");

		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setname` = '%s'", setname);
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, I could not find that object set!");
		new setID, total;
		new creator[24];

		cache_get_value_name_int(0,"setID",setID);
		cache_get_value_name(0,"sCreator",creator);
		cache_get_value_name_int(0,"total",total);

		format(xstring,sizeof xstring,"SELECT COUNT(*) FROM `objectsdata` WHERE `setid` = '%d'", setID);
		mysql_query(SQL, xstring);

		format(xstring,sizeof xstring,"Object Set %s was created by Admin %s\n\nsetID: %d\nObjects: %d" ,setname,creator,setID,total);
		ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Set Info",xstring,"OK","");
	}
	return 1;
}

CMD:ls(playerid,params[])
{
	return cmd_loadset(playerid, params);
}

CMD:ss(playerid,params[])
{
	return cmd_saveset(playerid, params);
}


CMD:loadobjects(playerid,params[])
{
	if(IsVIP(playerid))
	{
		new oset[45];
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(sscanf(params, "s[45]",oset))
		{
			SendClientMessage(playerid,COLOR_YELLOW,"Usage: /loadobjects <setname>");
			SendClientMessage(playerid,COLOR_YELLOW,"Will load a object set file and create objects.");
			return 1;
		}

		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setName` = '%s'", oset);
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, I could not find that object set!");
		new total,setID;
		new creator[24];

		cache_get_value_name_int(0,"setID",setID);
		cache_get_value_name(0,"sCreator",creator);
		new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,aModel,an,to,first,last;
		//new ma,mmodel,txd[20],textname[20],macolor;


		format(xstring,sizeof xstring,"SELECT * FROM `objectdata` WHERE `setID` = '%d'", setID);
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, that object set is empty!");

		total = cache_num_rows();
		new otext[50];

		for(new a=0; a <= total; a++)
		{
			cache_get_value_name_int(a,"oModel",aModel);
			cache_get_value_name_float(a,"oX",x);
			cache_get_value_name_float(a,"oY",y);
			cache_get_value_name_float(a,"oZ",z);
			cache_get_value_name_float(a,"rX",x);
			cache_get_value_name_float(a,"rY",y);
			cache_get_value_name_float(a,"rZ",z);
			
			cache_get_value_name(a,"oText",otext);

			// Materials


			// Actually Create the object!
			if(aModel != 0)
 			{
				an = CreateDynamicObject(aModel,x,y,z,rx,ry,rz,0,-1,playerid);
				if(a == 0) first = an;
			 	Streamer_SetIntData(STREAMER_TYPE_OBJECT,an,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
				to++;



				last = an;
			}

		}

		format(xstring,sizeof(xstring),"Server: VIP %s loaded object set '%s' (%d Objects | Creator: %s)",GetPName(playerid),oset,to,creator);
		SendMessageToAdmins(playerid,3,COLOR_OBJ,xstring);

		format(xstring,sizeof(xstring),"* Object Set {E0E494}'%s'{FFFFFF} Loaded.{E0E494} {FFFFFF}({E0E494}%d {FFFFFF}Objects | Created by {E0E494}%s{FFFFFF})",oset,to,creator);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		format(xstring,sizeof(xstring),"* First Object Number: %d || Last: %d",first,last);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		SendClientMessage(playerid,COLOR_OBJ,"* To delete all your objects, type /damo");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	return 1;
}

CMD:saveobjects(playerid,params[])
{
	if(IsVIP(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new sname[45];
		if(sscanf(params, "s[45]", sname))
		{
			SendClientMessage(playerid,COLOR_YELLOW,"Usage: /saveobjects <set name>");
			SendClientMessage(playerid,COLOR_YELLOW,"Will save all your objects to the database.");
			return 1;
		}

		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setName` = '%s'", sname);
		mysql_query(SQL, xstring);

		if(cache_num_rows() > 0) return SendClientMessage(playerid,COLOR_RED,"* This set already exists!");
		new total = GetTotalCreatedObjects(playerid);

		format(xstring, sizeof(xstring), "INSERT INTO `objects` (`setName`, `sCreator`,`total`) VALUES ('%s','%p','%d')", sname, playerid, total);
		mysql_query(SQL,xstring);
		// ask on sa-mp how to request the data after using instert statement (to reduce queries)
		// also ask about cache_delete();

		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setName` = '%s'", sname);
		mysql_query(SQL, xstring);
		
		new setID;
		cache_get_value_name_int(0,"setID",setID);

		new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz;
		new m,mdist,uid,objid_counter;


		for(new id=0; id <= CountDynamicObjects(); id++)
		{
  			uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, id, E_STREAMER_EXTRA_ID);
			if(Players[playerid][userID] == uid)
			{
	  		    //m = AdminObjData[playerid][id][Moving];
	  		  	//mdist = AdminObjData[playerid][id][MoveDistance];

		    	GetDynamicObjectPos(id,x,y,z);//Get the pos of an object
				GetDynamicObjectRot(id,rx,ry,rz);//Get rotation of an object
				objid_counter++;
				format(xstring,sizeof xstring,"INSERT INTO `objectdata` (`oModel`,`oX`, `oY`, `oZ`, `rX`, `rY`, `rZ`, `setID`,`Move`,`mDist`) VALUES ('%d','%0.2f','%0.2f','%0.2f','%0.2f','%0.2f','%0.2f','%d','%d','%d')",GetDynamicObjectModel(id),x,y,z,rx,ry,rz,setID,m,mdist);
				mysql_query(SQL, xstring);
			}
		}

		format(xstring,sizeof(xstring),"* Success, you saved your objects to file '%s'. Total: %d",sname, objid_counter );
		SendClientMessage(playerid,COLOR_OBJ,xstring);
		format(xstring,sizeof(xstring),"Server: VIP %p has saved their objects to '%s' (%d Objects)",playerid,sname,objid_counter );
		SendMessageToAdmins(playerid,3,COLOR_OBJ,xstring);
	}
	return 1;
}


CMD:streamset(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
	  	format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setname` = '%s'", params);
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_YELLOW,"* Sorry, I could not find that object set!");
		new total,setID;
		new creator[24];
		
		

		
		cache_get_value_name_int(0,"setID",setID);
		cache_get_value_name(0,"sCreator",creator);
		new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,aModel,an,to;
		//new ma,mmodel,txd[20],textname[20],macolor;


		format(xstring,sizeof xstring,"SELECT * FROM `objectdata` WHERE `setID` = '%d'", setID);
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_YELLOW,"* Sorry, that object set is empty!");

		total = cache_num_rows();
		new objids[1000]; //this is 1000 because it's impossible for pawn to do objids[total];

		for(new a=0; a <= total; a++)
		{
			cache_get_value_name_int(a,"oModel",aModel);
			cache_get_value_name_float(a,"oX",x);
			cache_get_value_name_float(a,"oY",y);
			cache_get_value_name_float(a,"oZ",z);
			cache_get_value_name_float(a,"rX",rx);
			cache_get_value_name_float(a,"rY",ry);
			cache_get_value_name_float(a,"rZ",rz);

			if(aModel != 0)
 			{
				an = CreateDynamicObject(aModel,x,y,z,rx,ry,rz,0,-1,-1);
				objids[a] = an;
			 	Streamer_SetIntData(STREAMER_TYPE_OBJECT,an,E_STREAMER_EXTRA_ID,-2); // store who created dis shit!
				to++;

			}

		}

		// MATERIALS

		format(xstring,sizeof xstring,"SELECT * FROM `objmaterials` WHERE `setID` = '%d'", setID);
		mysql_query(SQL, xstring);
		new materials = cache_num_rows();
		new txdnm[45],txdname[45],mindex,mod,col,uid,ref_id;
		// ref_id refrences from table - if the ID of the loaded object is the same as the one that uses materials, apply.

		for(new a=0; a <= CountDynamicObjects(); a++)
		{
 			for(new k=0; k <= total; k++)
			{
	  			uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID);
				if(uid == -2 && objids[k] == a)
				{
			  		// We can finally apply the material information!
			        // but do we have any?
			    	// one more loop to get material information with the specified row (c)
   					for(new c=0; c <= materials; c++)
					{
						// YEP
						cache_get_value_name_int(c,"objID",ref_id);
						cache_get_value_name_int(c,"mI",mindex);
						cache_get_value_name(c,"mTxd",txdnm);
						cache_get_value_name(c,"mTxtName",txdname);	
						cache_get_value_name_int(c,"mM",mod);
						cache_get_value_name_int(c,"maColor",col);
						
						if(ref_id == k)
						{
							if(strcmp(txdnm, "NULL", true) && strcmp(txdname, "NULL", true)) SetDynamicObjectMaterial(objids[k],mindex,mod,txdnm,txdname,col);
						}


					}
				}
			}
		}
		SendClientMessage(playerid,COLOR_YELLOW,"SET STREAMED");
		format(xstring,sizeof(xstring),"Server: Admin %p Streamed Object Set %s",playerid,playerid,params);
		SendMessageToAdmins(playerid,3,COLOR_OBJ,xstring);
	}
	return 1;
}

CMD:loadset(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		new oset[45],intr;
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(sscanf(params, "s[45]D(0)",oset,intr))
		{
			SendClientMessage(playerid,COLOR_YELLOW,"Usage: /loadset <setname>");
			SendClientMessage(playerid,COLOR_YELLOW,"Will load a object set file and create objects.");
            SendClientMessage(playerid,COLOR_YELLOW,"If you don't have enough object slots, the server will warn you.");
            SendClientMessage(playerid,COLOR_YELLOW,"If you use autostream, the set will be streamed (cant be edited)");
			return 1;
		}

		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setname` = '%s'", oset);
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, I could not find that object set!");
		new total,setID;
		new creator[24];
		cache_get_value_name_int(0,"setID",setID);
		cache_get_value_name(0,"sCreator",creator);
		new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,aModel,an,to,first,last;
		//new ma,mmodel,txd[20],textname[20],macolor;
		

		format(xstring,sizeof xstring,"SELECT * FROM `objectdata` WHERE `setID` = '%d'", setID);
		mysql_query(SQL, xstring);

		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, that object set is empty!");
		
		total = cache_num_rows();
		new objids[1000]; //this is 1000 because it's impossible for pawn to do objids[total];

		for(new a=0; a <= total; a++)
		{
			// Updated 1/21/2024 for new DB Structure
			cache_get_value_name_int(a,"oModel",aModel);
			cache_get_value_name_float(a,"oX",x);
			cache_get_value_name_float(a,"oY",y);
			cache_get_value_name_float(a,"oZ",z);
			cache_get_value_name_float(a,"rX",rx);
			cache_get_value_name_float(a,"rY",ry);
			cache_get_value_name_float(a,"rZ",rz);
			// Materials
			
			
			// Actually Create the object!
			if(aModel != 0)
 			{
				an = CreateDynamicObject(aModel,x,y,z,rx,ry,rz,0,intr,-1);
				objids[a] = an;
				if(a == 0) first = an;
			 	Streamer_SetIntData(STREAMER_TYPE_OBJECT,an,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
				to++;

				
				
				if(a == total) last = an;
			}

		}
		
		// MATERIALS
		
		format(xstring,sizeof xstring,"SELECT * FROM `objmaterials` WHERE `setID` = '%d'", setID);
		mysql_query(SQL, xstring);
		new materials = cache_num_rows();
		new txdnm[45],txdname[45],mindex,mod,col,uid,ref_id;
		// ref_id refrences from table - if the ID of the loaded object is the same as the one that uses materials, apply.
		
		for(new a=0; a <= CountDynamicObjects(); a++)
		{
 			for(new k=0; k <= total; k++)
			{
	  			uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID);
				if(Players[playerid][userID] == uid && objids[k] == a)
				{
			  		// We can finally apply the material information!
			        // but do we have any?
			    	// one more loop to get material information with the specified row (c)
   					for(new c=0; c <= materials; c++)
					{
						// YEP
						cache_get_value_name_int(c,"objID",ref_id);
						cache_get_value_name_int(c,"mI",mindex);
						cache_get_value_name(c,"mTxd",txdnm);
						cache_get_value_name(c,"mTxtName",txdname);
						cache_get_value_name_int(c,"mM",mod);
						cache_get_value_name_int(c,"maColor",col);
						if(ref_id == k)
						{
							if(strcmp(txdnm, "NULL", true) && strcmp(txdname, "NULL", true)) SetDynamicObjectMaterial(objids[k],mindex,mod,txdnm,txdname,col);
						}


					}
				}
			}
		}
		
		
		format(xstring,sizeof(xstring),"Server: Admin %s loaded object set '%s' (%d Objects | Creator: %s)",GetPName(playerid),oset,to,creator);
		SendMessageToAdmins(playerid,3,COLOR_OBJ,xstring);
		
		format(xstring,sizeof(xstring),"* Object Set {E0E494}'%s'{FFFFFF} Loaded.{E0E494} {FFFFFF}({E0E494}%d {FFFFFF}Objects | Created by {E0E494}%s{FFFFFF})",oset,to,creator);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		format(xstring,sizeof(xstring),"* First Object Number: %d || Last: %d",first,last);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		SendClientMessage(playerid,COLOR_OBJ,"* To delete all your objects, type /damo");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
	return 1;
}

CMD:saveset(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new sname[45];
		if(sscanf(params, "s[45]", sname))
		{
			SendClientMessage(playerid,COLOR_YELLOW,"Usage: /saveset <set name>");
			SendClientMessage(playerid,COLOR_YELLOW,"Will save all your objects to the database.");
			return 1;
		}

		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setName` = '%s'", sname);
		mysql_query(SQL, xstring);
		
		if(cache_num_rows() > 0) return SendClientMessage(playerid,COLOR_RED,"* This set already exists!");
		new total = GetTotalCreatedObjects(playerid);
		
		format(xstring, sizeof(xstring), "INSERT INTO `objects` (`setName`, `sCreator`,`total`) VALUES ('%s','%p','%d')", sname, playerid, total);
		mysql_query(SQL,xstring);
		// ask on sa-mp how to request the data after using instert statement (to reduce queries)
		// also ask about cache_delete();

		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setName` = '%s'", sname);
		mysql_query(SQL, xstring);
		
		new setID;
		cache_get_value_name_int(0,"setID",setID);
		
		new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz;
		new m,mdist,uid,objid_counter;
		new txdnm[45],macolor,txdname[45],model,mtotal=0;

		for(new id=0; id <= CountDynamicObjects(); id++)
		{
  			uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, id, E_STREAMER_EXTRA_ID);
			if(Players[playerid][userID] == uid)
			{
	  		    //m = AdminObjData[playerid][id][Moving];
	  		  	//mdist = AdminObjData[playerid][id][MoveDistance];
	  		
		    	GetDynamicObjectPos(id,x,y,z);//Get the pos of an object
				GetDynamicObjectRot(id,rx,ry,rz);//Get rotation of an object
				objid_counter++;
				format(xstring,sizeof xstring,"INSERT INTO `objectdata` (`oModel`,`oX`, `oY`, `oZ`, `rX`, `rY`, `rZ`, `setID`,`Move`,`mDist`) VALUES ('%d','%0.2f','%0.2f','%0.2f','%0.2f','%0.2f','%0.2f','%d','%d','%d')",GetDynamicObjectModel(id),x,y,z,rx,ry,rz,setID,m,mdist);
				mysql_query(SQL, xstring);
				
				// Materials
				//etDynamicObjectMaterial(STREAMER_TAG_OBJECT objectid, materialindex, &modelid, txdname[], texturename[], &materialcolor, maxtxdname = sizeof txdname, maxtexturename = sizeof texturename);
				// In progress

				for(new mi=0; mi <= 15; mi++)
				{
					GetDynamicObjectMaterial(id,mi,model, txdnm, txdname, macolor);
					if(IsDynamicObjectMaterialUsed(id, mi))
					{
						format(xstring,sizeof xstring,"INSERT INTO `objmaterials` (`setID`,`objID`,`mindex`,`txdnm`,`txdname`,`macolor`,`model`) VALUES ('%d','%d','%d','%s','%s','%d','%d')",setID,objid_counter,mi,txdnm,txdname,macolor,model);
						mysql_query(SQL, xstring);
						mtotal++;
					}
				}
			}
		}
		
		format(xstring,sizeof(xstring),"* Success, you saved your objects to file '%s'. Total: %d [%d Materials]",sname, objid_counter, mtotal );
		SendClientMessage(playerid,COLOR_OBJ,xstring);
		format(xstring,sizeof(xstring),"Server: Admin %p has saved their objects to '%s' (%d Objects ~ %d Materials)",playerid,sname,objid_counter,mtotal );
		SendMessageToAdmins(playerid,3,COLOR_OBJ,xstring);
	}
	return 1;
}

CMD:addtoset(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new sname[45];
		if(sscanf(params, "s[45]", sname))
		{
			SendClientMessage(playerid,COLOR_YELLOW,"Usage: /addtoset <set name>");
			SendClientMessage(playerid,COLOR_YELLOW,"Will save all your objects to the database.");
			return 1;
		}

		format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setName` = '%s'", sname);
		mysql_query(SQL, xstring);
		
		if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* This set doesn't exist");
		
		new setID,user[24],rname[24];
		cache_get_value_name(0,"sCreator",user);
		GetPlayerName(playerid,rname,sizeof rname);
		if(strcmp(user,rname)) return SendClientMessage(playerid,COLOR_RED,"* You didn't create that object set.");			
		
		cache_get_value_name_int(0,"setID",setID);
		
		new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz;
		new m,mdist,uid,objid_counter;
		new txdnm[45],macolor,txdname[45],model,mtotal=0;

		for(new id=0; id <= CountDynamicObjects(); id++)
		{
  			uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, id, E_STREAMER_EXTRA_ID);
			if(Players[playerid][userID] == uid)
			{
	  		    //m = AdminObjData[playerid][id][Moving];
	  		  	//mdist = AdminObjData[playerid][id][MoveDistance];
	  		
		    	GetDynamicObjectPos(id,x,y,z);//Get the pos of an object
				GetDynamicObjectRot(id,rx,ry,rz);//Get rotation of an object
				objid_counter++;
				format(xstring,sizeof xstring,"INSERT INTO `objectdata` (`oModel`,`oX`, `oY`, `oZ`, `rX`, `rY`, `rZ`, `setID`,`Move`,`mDist`) VALUES ('%d','%0.2f','%0.2f','%0.2f','%0.2f','%0.2f','%0.2f','%d','%d','%d')",GetDynamicObjectModel(id),x,y,z,rx,ry,rz,setID,m,mdist);
				mysql_query(SQL, xstring);
				
				// Materials
				//etDynamicObjectMaterial(STREAMER_TAG_OBJECT objectid, materialindex, &modelid, txdname[], texturename[], &materialcolor, maxtxdname = sizeof txdname, maxtexturename = sizeof texturename);
				// In progress

				for(new mi=0; mi <= 15; mi++)
				{
					GetDynamicObjectMaterial(id,mi,model, txdnm, txdname, macolor);
					if(IsDynamicObjectMaterialUsed(id, mi))
					{
						format(xstring,sizeof xstring,"INSERT INTO `objmaterials` (`setID`,`objID`,`mindex`,`txdnm`,`txdname`,`macolor`,`model`) VALUES ('%d','%d','%d','%s','%s','%d','%d')",setID,objid_counter,mi,txdnm,txdname,macolor,model);
						mysql_query(SQL, xstring);
						mtotal++;
					}
				}
			}
		}
		
		format(xstring,sizeof(xstring),"* Success, you added your objects to file '%s'. Total: %d [%d Materials]",sname, objid_counter, mtotal );
		SendClientMessage(playerid,COLOR_OBJ,xstring);
		format(xstring,sizeof(xstring),"Server: Admin %p has added their objects to '%s' (%d Objects ~ %d Materials)",playerid,sname,objid_counter,mtotal );
		SendMessageToAdmins(playerid,3,COLOR_OBJ,xstring);
	}
	return 1;
}





CMD:so(playerid,params[]) return cmd_saveobjects(playerid,params);

CMD:lo(playerid,params[]) return cmd_loadobjects(playerid,params);



CMD:eo(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new id;
		if(sscanf(params, "d",id))
		{
			SendClientMessage(playerid,COLOR_RED,"* Usage: /eo <id>");
			SendClientMessage(playerid,COLOR_RED,"* Allows you to edit a object using the interface.");
			return 1;
		}
 		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, id, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			EditDynamicObject(playerid,id);
            Players[playerid][Editing] = id;
            SendClientMessage(playerid,COLOR_RED,"* Editing Interface enabled.");
 		}   else SendClientMessage(playerid,COLOR_RED,"* Invalid Object ID, or you are not the owner!");
	}
	else if(IsVIP(playerid))
	{
   		new id;
		if(sscanf(params, "d",id))
		{
			SendClientMessage(playerid,COLOR_RED,"* Usage: /eo <id>");
			SendClientMessage(playerid,COLOR_RED,"* Allows you to edit a object using the interface.");
			return 1;
		}
		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, id, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			EditDynamicObject(playerid,id);
            Players[playerid][Editing] = id;
            SendClientMessage(playerid,COLOR_RED,"* Editing Interface enabled.");
 		}   else SendClientMessage(playerid,COLOR_RED,"* Invalid Object ID, or you are not the owner!");
	}
	return 1;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{

	new id = Players[playerid][Editing];
	if(response == 1)
	{
	    if(IsAdmin(playerid))
	    {
			SetDynamicObjectPos(id,x,y,z);
			SetDynamicObjectRot(id,rx,ry,rz);
			SendClientMessage(playerid,COLOR_GREEN,"* Object Updated.");
		}
		else
		{
			SetDynamicObjectPos(id,x,y,z);
			SetDynamicObjectRot(id,rx,ry,rz);
			SendClientMessage(playerid,COLOR_GREEN,"* Object Updated.");
		}
	}
	return 1;
}

CMD:sot(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new text[20],id,fsa;
		if(sscanf(params, "ds[20]D(32)",id,text,fsa))
		{
		
			SendClientMessage(playerid,COLOR_RED,"* Usage: /sot <id> <text> <FontSize>");
			ShowPlayerDialog(playerid,10,DIALOG_STYLE_MSGBOX,"Help","OBJECT TEXT EDITOR\n/sot <id> <text> <FontSize>\n\nFont Sizes:\n32, 64, 128, 256","ok","");
			return 1;
		}
		//if(strfind(params," ") != -1) return SendClientMessage(playerid,COLOR_RED,"* You cannot have the following character in this: ' '");
  		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, id, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
		    switch(fsa)
		    {
		        case 64: SetDynamicObjectMaterialText(id,0,text,OBJECT_MATERIAL_SIZE_64x32);
		        case 32: SetDynamicObjectMaterialText(id,0,text,OBJECT_MATERIAL_SIZE_32x32);
		        case 128: SetDynamicObjectMaterialText(id,0,text,OBJECT_MATERIAL_SIZE_128x32);
		        case 256: SetDynamicObjectMaterialText(id,0,text,OBJECT_MATERIAL_SIZE_256x32);
		    }
			format(xstring,sizeof(xstring),"Object %d Text Set.",id);
			SendClientMessage(playerid,COLOR_OBJ,xstring);
			format(xstring,sizeof xstring,"Admin %p (ID:%d) Set Object %d Text To: %s",playerid,playerid,id,text);
			SendMessageToAdmins(playerid,4,COLOR_AMSG,xstring);
 		}
	}
	return 1;
}



CMD:cno(playerid,params[])
{
	if(IsVIP(playerid))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj;
		if(sscanf(params, "d",obj))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /obj <modelid>");
			SendClientMessage(playerid,COLOR_RED,"With this command you can add some Stream objects to the server.");
            SendClientMessage(playerid,COLOR_RED,"When you are done, you can save your objects to a file with /saveset <filename>");
			SendClientMessage(playerid,COLOR_RED,"Try not to put too many objects in one area. (Ex /sfa)");
			return 1;
		}
		if(GetVIPTotalCreatedObjects(playerid) == 125) return SendClientMessage(playerid,COLOR_RED,"You have created too many objects!");
		if(IsValidObjectModel(obj))
		{
		 	new store;
		  	new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
		    store = CreateDynamicObject(obj,x+4,y,z,0,0,0,GetPlayerVirtualWorld(playerid),-1,playerid);
		    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
			format(xstring,sizeof(xstring),"Object %d Created. (Model: %d) (Stream Object Count: %d)",store,obj,CountDynamicObjects());
			SendClientMessage(playerid,COLOR_OBJ,xstring);
			Streamer_UpdateEx(playerid,x,y,z);
			return 1;
		}

		if(IsValidSAMPObject(obj))
		{
		 	new store;
		  	new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
		    store = CreateDynamicObject(obj,x+4,y,z,0,0,0,GetPlayerVirtualWorld(playerid),-1,playerid);
		    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
			format(xstring,sizeof(xstring),"Object %d Created. (Model: %d) (Stream Object Count: %d)",store,obj,CountDynamicObjects());
			SendClientMessage(playerid,COLOR_OBJ,xstring);
			Streamer_UpdateEx(playerid,x,y,z);
		    return 1;
		}
		return SendClientMessage(playerid,COLOR_RED,"* Not a valid object model!");
 	}
	return SendClientMessage(playerid,COLOR_RED,"Sorry, Only admins can create objects.");
}


CMD:objletters(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new text[30];
		if(sscanf(params, "s[30]",text))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /objletters <text>");
			SendClientMessage(playerid,COLOR_RED,"With this command you can create some text out of hay!");
			SendClientMessage(playerid,COLOR_RED,"Try not to put too many objects in one area. (Ex /sfa)");
			return 1;
		}
		if(GetTotalCreatedObjects(playerid) == 649) return SendClientMessage(playerid,COLOR_RED,"You have created too many objects!");
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		new Float:rz;
		GetPlayerFacingAngle(playerid,rz);
        CreateSentence(playerid,text, x,y,z, rz);
       	format(xstring,sizeof(xstring),"~w~Object Letters Created. ~n~(Model: %d) (Stream Object Count: %d)",FONT,CountDynamicObjects());
		GameTextForPlayer(playerid,xstring,800,3);
	}
	return SendClientMessage(playerid,COLOR_RED,"Sorry, Only admins can create objects.");
}


CMD:nso(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(!IsAdmin(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not admin!");
	new object = GetPlayerClosestStreamedObject(playerid);
	if(object == -1) SendClientMessage(playerid,COLOR_RED,"Sorry, no objects have been found near you!");
	new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, object, E_STREAMER_EXTRA_ID);
	if(Players[playerid][userID] == uid)
	{
		format(xstring,sizeof(xstring),"The closest object to you is object {E0E494}%d{FFFFFF}. (Created by You)",object);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
	}
	else if(uid == 0)
	{
		format(xstring,sizeof(xstring),"The closest object to you is object {E0E494}%d{FFFFFF}. (Created by Server)");
		SendClientMessage(playerid,COLOR_WHITE,xstring);
	}
	else
	{
		format(xstring,sizeof(xstring),"The closest object to you is object {E0E494}%d{FFFFFF}. (Created by userID %d (%s))",uid,GetUserIDName(uid));
		SendClientMessage(playerid,COLOR_WHITE,xstring);
	}
	
	return 1;
}



CMD:objhelp(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		format(xstring,sizeof xstring,"You can create objects with /obj <Model>\n\nTo teleport to your object, do /gmo <ID>\nIf you don't know the ID, you can use /nso\n\nYou can edit your object with /eo");
		format(xstring,sizeof xstring,"%s\n*******************************************************\nTo delete all your objects, type /damo\nTo release your objects to the server, type /camo\nYou can view set-information with /setinfo <Set Name>",xstring);
		format(xstring,sizeof xstring,"%s\n*******************************************************\nTo see a list of object textures, type /textures\nYou can set a custom texture with /som\nYou can change the object text-material with /sot",xstring);
        format(xstring,sizeof xstring,"%s\n*******************************************************\nYou can set an object as a moving object with /smoam <ID>\nYou can set the moving position with /smomtp <Moving ID>",xstring);
		ShowPlayerDialog(playerid,9999,DIALOG_STYLE_MSGBOX,"Object Help",xstring,"OK","");
		return 1;
	}
	
	if(IsVIP(playerid))
	{
		format(xstring,sizeof xstring,"You can create objects with /cno <Model>\nYou can edit your object with /eo");
		format(xstring,sizeof xstring,"%s\n*******************************************************\nTo delete all your objects, type /damo",xstring);
		ShowPlayerDialog(playerid,9999,DIALOG_STYLE_MSGBOX,"Object Help",xstring,"OK","");
	}
	return 1;
}

CMD:obj(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj;
		if(sscanf(params, "d",obj))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /obj <modelid>");
			SendClientMessage(playerid,COLOR_RED,"With this command you can add some Stream objects to the server.");
            SendClientMessage(playerid,COLOR_RED,"When you are done, you can save your objects to a file with /saveset <filename>");
			SendClientMessage(playerid,COLOR_RED,"Try not to put too many objects in one area. (Ex /sfa)");
			return 1;
		}
		new store;
 		new Float:x,Float:y,Float:z;
		if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /obj <modelid> <stream distance>");
		GetPlayerPos(playerid,x,y,z);
		new Float:ang;
		GetPlayerFacingAngle(playerid,ang);
		GetXYInFrontOfPlayer(playerid,x,y,0);
  		store = CreateDynamicObject(obj,x+4,y,z,0,0,ang,GetPlayerVirtualWorld(playerid));
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
	    Streamer_UpdateEx(playerid,x,y,z);
		format(xstring,sizeof(xstring),"Object {E0E494}%d Created{FFFFFF}. (Model: {E0E494}%d{FFFFFF}). If you see a question mark, that is not a valid object.",store,obj);
		SendClientMessage(playerid,COLOR_OBJ,xstring);
		SetPVarInt(playerid,"LastObject",store);
		return 1;
 	}
	return SendClientMessage(playerid,COLOR_RED,"Sorry, Only admins can create objects.");
}


CMD:mapicon(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
	{
		new ico;
		if(sscanf(params, "d",ico))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /mapicon <modelid>");
			SendClientMessage(playerid,COLOR_RED,"With this command you can add map con to the server.");
			return 1;
		}
		if(ico < 0 || ico > 63) return SendClientMessage(playerid,COLOR_RED,"* Not a valid map icon!");
		new id;
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
	 	id = CreateDynamicMapIcon(x,y,z, ico, COLOR_WHITE);
		Streamer_SetIntData(STREAMER_TYPE_MAP_ICON, id, E_STREAMER_EXTRA_ID, playerid);

		format(xstring,sizeof(xstring),"Map Icon %d Created. (TYPE: %d)",id,ico);
		SendClientMessage(playerid,COLOR_OBJ,xstring);
		return 1;
 	}
	return SendClientMessage(playerid,COLOR_RED,"Sorry, Only admins can create objects.");
}

CMD:dmapicon(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
	{
		new obj;
		if(sscanf(params, "d",obj))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /dpmapicon <id>");
			SendClientMessage(playerid,COLOR_RED,"Deletes the map icon that you have created.");
			return 1;
		}
		if(IsValidDynamicPickup(obj))
		{
		    new assign = Streamer_GetIntData(STREAMER_TYPE_MAP_ICON, obj, E_STREAMER_EXTRA_ID);
			if(assign == playerid)
			{
			    if(Players[playerid][AdminLvl] >= 8)
			    {
					// You can't delete it unless you made it, Unless high admin.
					DestroyDynamicMapIcon(obj);

					format(xstring,sizeof(xstring),"Map Icon %d Deleted.",obj);
					SendClientMessage(playerid,COLOR_OBJ,xstring);
			    }   else SendClientMessage(playerid,COLOR_RED,"You didn't create this map icon!");
			}   else SendClientMessage(playerid,COLOR_RED,"You didn't create this map icon!");
		}   else SendClientMessage(playerid,COLOR_RED,"No such map icon!");
	}
	return 1;
}

CMD:dammi(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
	{
		new c,assign,total;
		c = CountDynamicMapIcons();
 		for(new i=0; i < c; i++)
		{
		    if(IsValidDynamicMapIcon(c))
			{
			    assign = Streamer_GetIntData(STREAMER_TYPE_MAP_ICON, i, E_STREAMER_EXTRA_ID);
			    if(assign == playerid)
			    {
					total++;
                    DestroyDynamicMapIcon(i);
				}
			}
		}


	}
	return 1;
}


CMD:damp(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
	{
		new c,assign,total;
		c = CountDynamicPickups();
 		for(new i=0; i < c; i++)
		{
		    if(IsValidDynamicPickup(c))
			{
			    assign = Streamer_GetIntData(STREAMER_TYPE_PICKUP, i, E_STREAMER_EXTRA_ID);
			    if(assign == playerid)
			    {
					total++;
                    DestroyDynamicPickup(i);
				}
			}
		}

	}
	return 1;
}


CMD:dpickup(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
	{
		new obj;
		if(sscanf(params, "d",obj))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /dpickup <id>");
			SendClientMessage(playerid,COLOR_RED,"Deletes the pickup that you have created.");
			return 1;
		}
		if(IsValidDynamicPickup(obj))
		{
		    new assign = Streamer_GetIntData(STREAMER_TYPE_PICKUP, obj, E_STREAMER_EXTRA_ID);
			if(assign == playerid)
			{
			    if(Players[playerid][AdminLvl] >= 8)
			    {
					// You can't delete it unless you made it, Unless high admin.
					DestroyDynamicPickup(obj);

					format(xstring,sizeof(xstring),"Pickup %d Deleted.",obj);
					SendClientMessage(playerid,COLOR_OBJ,xstring);
			    }   else SendClientMessage(playerid,COLOR_RED,"You didn't create this pickup!");
			}   else SendClientMessage(playerid,COLOR_RED,"You didn't create this pickup!");
		}   else SendClientMessage(playerid,COLOR_RED,"No such pickup!");
	}
	return 1;
}

CMD:pickup(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
	{
		new obj;
		if(sscanf(params, "d",obj))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /pickup <modelid>");
			SendClientMessage(playerid,COLOR_RED,"With this command you can add pickups to the server.");
			return 1;
		}
		if(IsValidObjectModel(obj))
		{
			new id;
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			id = CreateDynamicPickup(obj,3,x,y,z);
			Streamer_SetIntData(STREAMER_TYPE_PICKUP, id, E_STREAMER_EXTRA_ID, playerid);

			
			format(xstring,sizeof(xstring),"Pickup %d Created. (Model: %d)",id,obj);
			SendClientMessage(playerid,COLOR_OBJ,xstring);
			return 1;
		}

		if(IsValidSAMPObject(obj))
		{
			new id;
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			id = CreateDynamicPickup(obj,3,x,y,z);
			Streamer_SetIntData(STREAMER_TYPE_PICKUP, id, E_STREAMER_EXTRA_ID, playerid);


			format(xstring,sizeof(xstring),"Pickup %d Created. (Model: %d)",id,obj);
			SendClientMessage(playerid,COLOR_OBJ,xstring);
		    return 1;
		}
		return SendClientMessage(playerid,COLOR_RED,"* Not a valid pickup/object model!");
 	}
	return SendClientMessage(playerid,COLOR_RED,"Sorry, Only admins can create objects.");
}


// Object System


CMD:door(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(1502,x+1.0,y,z,0,0,0,0,-1,-1);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}3865",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	
	if(IsVIP(playerid))
	{
 		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(1502,x+1.0,y,z,0,0,0,0,-1,playerid);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}3865",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	
	return 1;
}


CMD:pipe(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(3865,x+1.0,y,z,0,0,0,0,-1,-1);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}3865",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}


CMD:stair(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
		GetPlayerFacingAngle(playerid,ang);
	    store = CreateDynamicObject(12950,x,y,z,0,0,ang,0,-1,-1);
     	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}12950",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	
	if(IsVIP(playerid))
	{
 		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(12950,x,y,z,0,0,0,0,-1,playerid);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}12950",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}

	return 1;
}

CMD:funnel2(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetPlayerFacingAngle(playerid,ang);
		GetXYInFrontOfPlayer(playerid,x,y,1);
	    store = CreateDynamicObject(18994,x,y+5,z-1,0,0,ang,0,-1,-1);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18994",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}

	if(IsVIP(playerid))
	{
 		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(18994,x,y+5,z-1,0,0,0,0,-1,playerid);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18994",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}


CMD:spotlight(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetPlayerFacingAngle(playerid,ang);
		GetXYInFrontOfPlayer(playerid,x,y,1);
	    store = CreateDynamicObject(18656,x,y,z-1,0,0,ang,0,-1,-1);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18656",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}

	if(IsVIP(playerid))
	{
 		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(18656,x,y,z-1,0,0,0,0,-1,playerid);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18656",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}


CMD:funnel1(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetPlayerFacingAngle(playerid,ang);
		GetXYInFrontOfPlayer(playerid,x,y,1);
	    store = CreateDynamicObject(18983,x,y+8,z-1,0,0,ang,0,-1,-1);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18983",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}

	if(IsVIP(playerid))
	{
 		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(18983,x,y+8,z-1,0,0,0,0,-1,playerid);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18983",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}


CMD:ramp(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetPlayerFacingAngle(playerid,ang);
		GetXYInFrontOfPlayer(playerid,x,y,1);
	    store = CreateDynamicObject(1634,x,y+0.5,z-1,0,0,ang,0,-1,-1);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}1634",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	
	if(IsVIP(playerid))
	{
 		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(1634,x,y+0.5,z-1,0,0,0,0,-1,playerid);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}1634",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}

CMD:myfence(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not in a vehicle!");
 	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
  	new store;
   	new Float:x,Float:y,Float:z,Float:ang;
    GetPlayerPos(playerid,x,y,z);
    GetPlayerFacingAngle(playerid,ang);
	GetXYInFrontOfPlayer(playerid,x,y,1);
 	store = CreateDynamicObject(971,x,y,z-1,-90,0,ang,0,-1,-1);
 	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
	format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created (And Attached). Use /dmao To delete attached objects",store);
	SendClientMessage(playerid,COLOR_YELLOW,xstring);
	Streamer_UpdateEx(playerid,x,y,z);
	AttachDynamicObjectToVehicle(store, GetPlayerVehicleID(playerid), 0, 0, -0.75, -90, 0, 0);
	return 1;
}

CMD:bridge(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetPlayerFacingAngle(playerid,ang);
		GetXYInFrontOfPlayer(playerid,x,y,1);
	    store = CreateDynamicObject(19588,x,y,z+2,0,0,ang,0,-1,-1);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}19588",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}

	if(IsVIP(playerid))
	{
 		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(19588,x,y,z+2,0,0,0,0,-1,playerid);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}19588",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}

CMD:funbowl(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetPlayerFacingAngle(playerid,ang);
		GetXYInFrontOfPlayer(playerid,x,y,1);
	    store = CreateDynamicObject(18802,x,y+7,z-1,0,0,ang,0,-1,-1);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18802",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}

	if(IsVIP(playerid))
	{
 		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(18802,x,y+7,z-1,0,0,0,0,-1,playerid);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18802",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}

CMD:loop(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetPlayerFacingAngle(playerid,ang);
		GetXYInFrontOfPlayer(playerid,x,y,1);
	    store = CreateDynamicObject(18801,x,y+7,z-1,0,0,ang,0,-1,-1);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18801",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	
	if(IsVIP(playerid))
	{
 		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
	    GetPlayerPos(playerid,x,y,z);
	    store = CreateDynamicObject(18801,x,y+7,z-1,0,0,0,0,-1,playerid);
    	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18801",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}

CMD:chicken(playerid,params[])
{
	if(!IsAdmin(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not admin!");
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    new store;
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid,x,y,z);
    store = CreateDynamicObject(16776,x,y+4,z-1,0,0,0,0,-1,-1);
   	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
	format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}16766",store);
	SendClientMessage(playerid,COLOR_YELLOW,xstring);
	Streamer_UpdateEx(playerid,x,y,z);
	return 1;
}

CMD:barrier(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,4.0);
	    store = CreateDynamicObject(1422,x,y+5,z-2,0,0,0,0,GetPlayerVirtualWorld(playerid),-1);
	    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}1422",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}


CMD:palm(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,4.0);
	    store = CreateDynamicObject(620,x,y+5,z-2,0,0,0,0,GetPlayerVirtualWorld(playerid),-1);
	    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}620",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}



CMD:tower(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,4.0);
	    store = CreateDynamicObject(3279,x,y+5,z-2,0,0,0,0,GetPlayerVirtualWorld(playerid),-1);
	    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}3279",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}


CMD:landmass(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,4.0);
	    store = CreateDynamicObject(11695,x,y+5,z-2,0,0,0,0,GetPlayerVirtualWorld(playerid),-1);
	    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}11695",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}



CMD:forsale(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,4.0);
	    store = CreateDynamicObject(19470,x,y+5,z-2,0,0,0,0,GetPlayerVirtualWorld(playerid),-1);
	    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}19470",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}

CMD:elevator(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,4.0);
	    store = CreateDynamicObject(18755,x,y+5,z-2,0,0,0,0,GetPlayerVirtualWorld(playerid),-1);
	    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}18755",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}


CMD:christmastree(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,4.0);
	    store = CreateDynamicObject(19076,x,y+5,z-2,0,0,0,0,GetPlayerVirtualWorld(playerid),-1);
	    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}19076",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}

CMD:house(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,4.0);
	    store = CreateDynamicObject(11490,x,y+5,z-2,0,0,0,0,GetPlayerVirtualWorld(playerid),-1);
	    Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Object {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}11490",store);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	}
	return 1;
}

CMD:d(playerid,params[])
{
	return cmd_dobj(playerid,params);
}

CMD:moveu(playerid,params[])
{
	if(!IsAdmin(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not admin!");
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new obj,amnt,speed;
	if(sscanf(params, "ddd",obj,amnt,speed)) return SendClientMessage(playerid,COLOR_RED,"Usage: /moveu <id> <amount> <speed>");
	new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID);
	if(Players[playerid][userID] == uid)
	{
		new Float:x,Float:y,Float:z;
		GetDynamicObjectPos(obj,x,y,z);
		MoveDynamicObject(obj,x,y,z+amnt,speed);
		format(xstring,sizeof(xstring),"Moving Object %d Up To %dm. Type /smove to stop.",obj,amnt);
		SendClientMessage(playerid,COLOR_OBJ,xstring);
  	}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");
	return 1;
}


CMD:dso(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,8))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj;
		if(sscanf(params, "d",obj)) return SendClientMessage(playerid,COLOR_RED,"Usage: /dobj <id>");
		if(IsValidDynamicObject(obj))
		{
			DestroyDynamicObject(obj);
			for(new i = 0; i < 10; i++)
			{
			    if(Moving[i][idUsed] == true && Moving[i][e_MovingObject_Actual] == obj)
				{
					// Remove the moving data
                    DeleteMovingData(i);
				}
			}
			new str[50];
			format(str,sizeof(str),"~w~Object~n~~y~%d~w~~n~Destroyed.",obj);
			GameTextForPlayer(playerid,str,1000,3);
		}   else  SendClientMessage(playerid,COLOR_RED,"Sorry, that is not a valid object.");

	}   else  SendClientMessage(playerid,COLOR_RED,"Sorry, only Management (8+ can use this command)");
	return 1;
}

CMD:gom(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj;
		if(sscanf(params, "d",obj))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /gom <id>");
			SendClientMessage(playerid,COLOR_RED,"Will display the object material information.");
			return 1;
  		}
  		new ma,model,txd[20],textname[20],macolor;
  		GetDynamicObjectMaterial(obj, ma, model, txd, textname, macolor);
  		format(xstring,sizeof xstring,"Material TXD:{E0E494} %s{FFFFFF} || Material Texture Name:{E0E494} %s {FFFFFF}|| Model ID: {E0E494}%d",txd,textname,macolor,model);
  		SendClientMessage(playerid,COLOR_WHITE,xstring);
  		format(xstring,sizeof xstring,"Material Index:{E0E494} %d{FFFFFF} || Material Color:{E0E494}  %d",ma,macolor);
  		SendClientMessage(playerid,COLOR_WHITE,xstring);


	}	else  SendClientMessage(playerid,COLOR_RED,"Sorry, only admin can use this command");
	return 1;
}


CMD:som(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj,ma,model,txd[20],textname[20],macolor;
		if(sscanf(params, "ddds[20]s[20]d",obj,ma,model,txd,textname,macolor))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /som <Object ID> <MA Index> <MA ModelID> <TxdName> <TextureName> <Material Color>");
			SendClientMessage(playerid,COLOR_RED,"You can get texture codes from http://textures.xyin.ws/?page=textures");
			return 1;
  		}
  		if(ma < 0 || ma > 15) return SendClientMessage(playerid,COLOR_RED,"Invalid Material ID! Valid Ids are 0 - 15");
		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			SetDynamicObjectMaterial(obj,ma,model,txd,textname,macolor);
			format(xstring,sizeof xstring,"The Material Information for object {E0E494}%d{FFFFFF} was changed.",obj);
	  		SendClientMessage(playerid,COLOR_WHITE,xstring);
  		}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");

	}	else  SendClientMessage(playerid,COLOR_RED,"Sorry, only admin can use this command");
	return 1;
}


CMD:movehelp(playerid,params[])
{
	SendClientMessage(playerid,COLOR_GREY,"[ /lift - Create an automatic lift. ]");
	SendClientMessage(playerid,COLOR_GREY,"[ /smoam - Sets the object as moving. ]");
	SendClientMessage(playerid,COLOR_GREY,"[ /smomtp - Sets the position the object moves to. ]");
	return 1;
}

CMD:lift2(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
		GetPlayerFacingAngle(playerid,ang);
	    store = CreateDynamicObject(18755,x,y,z-1,0,0,ang,0,-1,-1);
     	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Lift Object ID {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}12950",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);

	    //
     	new movingID = Assigned_GiveFreeMovingID();
	    if(movingID == -1) return SendClientMessage(playerid,COLOR_RED,"The server has reached its moving object limit (10)");
	    Moving[movingID][idUsed] = true;
	    Moving[movingID][ReturnPosX] = x;
 		Moving[movingID][ReturnPosY] = y;
   		Moving[movingID][ReturnPosZ] = z;
	    Moving[movingID][e_MovingObject_Actual] = store;
    	Moving[movingID][e_MovingObject_Speed] = 1;

		//
  		Moving[movingID][MovingToX] = x;
    	Moving[movingID][MovingToY] = y;
	    Moving[movingID][MovingToZ] = z + 25;
	    MoveDynamicObject(Moving[movingID][e_MovingObject_Actual],Moving[movingID][MovingToX],Moving[movingID][MovingToY],Moving[movingID][MovingToZ], Moving[movingID][e_MovingObject_Speed]);


	}
	return 1;
}
CMD:lift(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	    new store;
	    new Float:x,Float:y,Float:z,Float:ang;
	    GetPlayerPos(playerid,x,y,z);
	    GetXYInFrontOfPlayer(playerid,x,y,0.5);
		GetPlayerFacingAngle(playerid,ang);
	    store = CreateDynamicObject(3115,x,y,z-1,0,0,ang,0,-1,-1);
     	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
		format(xstring,sizeof(xstring),"Lift Object ID {E0E494}%d{FFFFFF} Created. Model ID: {E0E494}12950",store);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		Streamer_UpdateEx(playerid,x,y,z);
	
	    //
     	new movingID = Assigned_GiveFreeMovingID();
	    if(movingID == -1) return SendClientMessage(playerid,COLOR_RED,"The server has reached its moving object limit (10)");
	    Moving[movingID][idUsed] = true;
	    Moving[movingID][ReturnPosX] = x;
 		Moving[movingID][ReturnPosY] = y;
   		Moving[movingID][ReturnPosZ] = z;
	    Moving[movingID][e_MovingObject_Actual] = store;
    	Moving[movingID][e_MovingObject_Speed] = 1;

		//
  		Moving[movingID][MovingToX] = x;
    	Moving[movingID][MovingToY] = y;
	    Moving[movingID][MovingToZ] = z + 25;
	    MoveDynamicObject(Moving[movingID][e_MovingObject_Actual],Moving[movingID][MovingToX],Moving[movingID][MovingToY],Moving[movingID][MovingToZ], Moving[movingID][e_MovingObject_Speed]);
	    
	    
	}
	return 1;
}



CMD:smoam(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		new id,spd;
		if(sscanf(params, "dd",id,spd))
		{
			SendClientMessage(playerid,COLOR_RED,"[ Usage: /setmyobjectasmoving (/smoam) <object ID> <Object Speed> ]");
			SendClientMessage(playerid,COLOR_RED,"[ Set the object to a moving-object type.          ]");
			return 1;
  		}
		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, id, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
		    new movingID = Assigned_GiveFreeMovingID();
		    if(movingID == -1) return SendClientMessage(playerid,COLOR_RED,"The server has reached its moving object limit (10)");
		    Moving[movingID][idUsed] = true;
		    new Float:x,Float:y,Float:z;
		    GetDynamicObjectPos(id,x,y,z);
		    Moving[movingID][ReturnPosX] = x;
		    Moving[movingID][ReturnPosY] = y;
		    Moving[movingID][ReturnPosZ] = z;
		    Moving[movingID][e_MovingObject_Actual] = id;
	     	Moving[movingID][e_MovingObject_Speed] = spd;
			format(xstring,sizeof xstring,"[x] Object ID {E0E494}%d{FFFFFF} is now set as a moving object. (Moving Object Number {E0E494} %d{FFFFFF}",id,movingID);
 			SendClientMessage(playerid,COLOR_WHITE,xstring);
			format(xstring,sizeof xstring,"[x] To set the position to where this object will move to, use /smomtp %d",movingID);
 			SendClientMessage(playerid,COLOR_WHITE,xstring);
  		}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");

	}	else  SendClientMessage(playerid,COLOR_RED,"Sorry, only admin can use this command");
	return 1;
}



CMD:smomtp(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		new movingID;
		if(sscanf(params, "d",movingID))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /setmyobjectmovetopos (/smomtp) <object ID> <moving ID>");
			SendClientMessage(playerid,COLOR_RED,"Set's the position that the object will move to, before turning to its original postion.");
			SendClientMessage(playerid,COLOR_RED,"!! YOU NEED TO ENTER THE MOVING ID, NOT THE MOVING OBJECT ID!!");
			return 1;
  		}
  		if(movingID < 0 || movingID > 9) return SendClientMessage(playerid,COLOR_RED,"Not a valid moving ID!");
		if(Moving[movingID][idUsed] == true)
		{
		    new Float:x,Float:y,Float:z;
   			GetPlayerPos(playerid, x,y,z);
		    Moving[movingID][MovingToX] = x;
		    Moving[movingID][MovingToY] = y;
		    Moving[movingID][MovingToZ] = z;
		    MoveDynamicObject(Moving[movingID][e_MovingObject_Actual],Moving[movingID][MovingToX],Moving[movingID][MovingToY],Moving[movingID][MovingToZ], Moving[movingID][e_MovingObject_Speed]);
			format(xstring,sizeof xstring,"Moving Object ID {E0E494}%d{FFFFFF} (object ID %d) is now moving to the desired position.",movingID, Moving[movingID][e_MovingObject_Actual]);
	  		SendClientMessage(playerid,COLOR_WHITE,xstring);
  		}   else SendClientMessage(playerid,COLOR_RED,"Sorry, That is not an actual moving object! You must first set the object with /smoam ");

	}	else  SendClientMessage(playerid,COLOR_RED,"Sorry, only admin can use this command");
	return 1;
}

DeleteMovingData(movingID)
{
	Moving[movingID][MovingToX] = 0;
 	Moving[movingID][MovingToY] = 0;
 	Moving[movingID][MovingToZ] = 0;
 	Moving[movingID][idUsed] = false;
	Moving[movingID][ReturnPosX] = 0;
 	Moving[movingID][ReturnPosY] = 0;
  	Moving[movingID][ReturnPosZ] = 0;
   	Moving[movingID][e_MovingObject_Actual] = -1;
}

/*
Assigned_GetActualID()
{
	for(new a = 0; a <= 10; a++)
	{
	    if(Moving[a][idUsed] == true && Moving[a][e_MovingObject_Actual]) return a;
	}
	return -1;
}
*/

Assigned_GiveFreeMovingID()
{
	for(new a = 0; a < 10; a++)
	{
	    if(Moving[a][idUsed] == false) return a;
	}
	return -1;
}
CMD:textures(playerid,params[])
{
    SendClientMessage(playerid,COLOR_WHITE,"<!> /windowma /steelma /cloudsma /carparkma /waterma");
	return 1;
}


CMD:waterma(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj,index;
		if(sscanf(params, "dd",obj,index))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /waterma <Object ID>");
			SendClientMessage(playerid,COLOR_RED,"Will add a water material-texture to the object. (Does not save if server restarts)");
			return 1;
  		}
  		if(index < 0 || index > 15) return SendClientMessage(playerid,COLOR_RED,"Invalid Material ID! Valid Ids are 0 - 15");
		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			SetDynamicObjectMaterial(obj, index, 3947, "rczero_track", "waterclear256", 0xFFFFFFFF);
			format(xstring,sizeof xstring,"The Material Information for object {E0E494}%d{FFFFFF} was changed.",obj);
	  		SendClientMessage(playerid,COLOR_WHITE,xstring);
  		}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");

	}	else  SendClientMessage(playerid,COLOR_RED,"Sorry, only admin can use this command");
	return 1;
}


CMD:carparkma(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj,index;
		if(sscanf(params, "dd",obj,index))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /carparkma <Object ID>");
			SendClientMessage(playerid,COLOR_RED,"Will add a parking lot material-texture to the object. (Does not save if server restarts)");
			return 1;
  		}
  		if(index < 0 || index > 15) return SendClientMessage(playerid,COLOR_RED,"Invalid Material ID! Valid Ids are 0 - 15");
		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			SetDynamicObjectMaterial(obj, index, 5174, "warehus_las2", "ws_carparkwall2", 0xFFFFFFFF);
			format(xstring,sizeof xstring,"The Material Information for object {E0E494}%d{FFFFFF} was changed.",obj);
	  		SendClientMessage(playerid,COLOR_WHITE,xstring);
  		}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");

	}	else  SendClientMessage(playerid,COLOR_RED,"Sorry, only admin can use this command");
	return 1;
}

CMD:cloudsma(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj,index;
		if(sscanf(params, "dd",obj,index))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /cloudsma <Object ID> <index>");
			SendClientMessage(playerid,COLOR_RED,"Will add a clouds material-texture to the object. (Does not save if server restarts)");
			return 1;
  		}
  		if(index < 0 || index > 15) return SendClientMessage(playerid,COLOR_RED,"Invalid Material ID! Valid Ids are 0 - 15");
		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			SetDynamicObjectMaterial(obj, index, 3925, "weemap", "skyclouds", 0xFFFFFFFF);
			format(xstring,sizeof xstring,"The Material Information for object {E0E494}%d{FFFFFF} was changed.",obj);
	  		SendClientMessage(playerid,COLOR_WHITE,xstring);
  		}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");

	}	else  SendClientMessage(playerid,COLOR_RED,"Sorry, only admin can use this command");
	return 1;
}


CMD:steelma(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj,index;
		if(sscanf(params, "dd",obj,index))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /steelma <Object ID>");
			SendClientMessage(playerid,COLOR_RED,"Will add a steel material-texture to the object. (Does not save if server restarts)");
			return 1;
  		}
  		if(index < 0 || index > 15) return SendClientMessage(playerid,COLOR_RED,"Invalid Material ID! Valid Ids are 0 - 15");
		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			SetDynamicObjectMaterial(obj, index, 3673, "xrf_refineryla", "steel256128", 0xFFFFFFFF);
			format(xstring,sizeof xstring,"The Material Information for object {E0E494}%d{FFFFFF} was changed.",obj);
	  		SendClientMessage(playerid,COLOR_WHITE,xstring);
  		}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");

	}	else  SendClientMessage(playerid,COLOR_RED,"Sorry, only admin can use this command");
	return 1;
}


CMD:windowma(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj,index;
		if(sscanf(params, "dd",obj,index))
		{
			SendClientMessage(playerid,COLOR_RED,"Usage: /windowma <Object ID> <material Index>");
			SendClientMessage(playerid,COLOR_RED,"Will add a windows material-texture to the object. (Does not save if server restarts)");
			return 1;
  		}
  		if(index < 0 || index > 15) return SendClientMessage(playerid,COLOR_RED,"Invalid Material ID! Valid Ids are 0 - 15");
		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			SetDynamicObjectMaterial(obj, index, 10789, "xenon_sfse", "newindow4", 0xFFFFFFFF);
			format(xstring,sizeof xstring,"The Material Information for object {E0E494}%d{FFFFFF} was changed.",obj);
	  		SendClientMessage(playerid,COLOR_WHITE,xstring);
  		}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");

	}	else  SendClientMessage(playerid,COLOR_RED,"Sorry, only admin can use this command");
	return 1;
}

CMD:dobj(playerid,params[])
{
	if(IsAdmin(playerid) || IsVIP(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new obj;
		if(sscanf(params, "d",obj)) return SendClientMessage(playerid,COLOR_RED,"Usage: /dobj <id>");
  		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			DestroyDynamicObject(obj);
			
			if(IsAdmin(playerid))
			{
				for(new i = 0; i < 10; i++)
				{
				    if(Moving[i][idUsed] == true && Moving[i][e_MovingObject_Actual] == obj)
					{
						// Remove the moving data
	                    DeleteMovingData(i);
					}
				}
			}
			
			new str[50];
			format(str,sizeof(str),"~w~Object~n~~y~%d~w~~n~Destroyed.",obj);
			GameTextForPlayer(playerid,str,1000,3);
		}  else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");

	}
	return 1;
}

CMD:dosf(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,3)) return SendClientMessage(playerid,COLOR_RED,"Your level is not high enough (7)!");
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new tf[40];
	if(sscanf(params, "s[24]",tf)) return SendClientMessage(playerid,COLOR_RED,"Usage: /dsof <setname>");
	format(xstring,sizeof xstring,"SELECT `setID` FROM `objects` WHERE `setname` = '%s'", tf);
	mysql_query(SQL, xstring);
	if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, I could not find that object set!");
	new setID;
	cache_get_value_name_int(0,"setID",setID);
	format(xstring,sizeof xstring,"DELETE FROM `objectdata` WHERE `setID` = '%d'",setID);
	mysql_query(SQL, xstring);
	format(xstring,sizeof xstring,"DELETE FROM `objects` WHERE `setID` = '%d'",setID);
	mysql_query(SQL, xstring);
	SendClientMessage(playerid,COLOR_YELLOW,"Success, Object Set File Deleted.");
	return 1;
}

CMD:destroyallstreamobjects(playerid,params[])
{
	return cmd_daso(playerid,params);
}

CMD:dsor(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
	    new Float:r=25.0;
		if(sscanf(params,"F",r)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /dsor <range>");
		new deleted = CountDynamicObjects();
		new Float:X[3],Float:Me[3],t;
		GetPlayerPos(playerid,Me[0],Me[1],Me[2]);
		for(new a = 0; a <= deleted; a++)
		{
			if(IsValidDynamicObject(a))
			{
			    GetDynamicObjectPos(a,X[0],X[1],X[2]);
			    if(IsPointInRangeOfPoint(X[0],X[1],X[2],Me[0],Me[1],Me[2], r))
			    {
			        DestroyDynamicObject(a);
			        t++;
			    }
			}
		}
		format(xstring,sizeof xstring,"Admin %p (ID:%d) deleted %d objects with /dsor (Range: %0.2f)",playerid,playerid,t,r);
		SendMessageToAdminsEx(COLOR_ORANGE,1,xstring);
	}
	return 1;
}

stock IsPointInRangeOfPoint(Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2, Float:range)
{
	x2 -= x;
	y2 -= y;
	z2 -= z;
	return ((x2 * x2) + (y2 * y2) + (z2 * z2)) < (range * range);
}


CMD:daso(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new deleted = CountDynamicObjects();
		DestroyAllDynamicObjects();
		new str[100];
		format(str,sizeof(str),"* Success, deleted %d stream objects.",deleted);
		SendClientMessage(playerid,COLOR_OBJ,str);
	}
	return 1;
}



CMD:aotv(playerid,params[])
{
	if(IsAdmin(playerid))
	{
		new id,Float:ofx,Float:ofy,Float:ofz,Float:rx,Float:ry,Float:rz;
		if(sscanf(params,"dffffff",id,ofx,ofy,ofz,rx,ry,rz))
		{
			SendClientMessage(playerid,COLOR_YELLOW,"Usage: /aotv <objectid> <x> <y> <z> <rx> <ry> <rz>");
            SendClientMessage(playerid,COLOR_YELLOW,"Usage: This command attaches an object to your vehicle.");
			return 1;
		}
  		new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, id, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			AttachDynamicObjectToVehicle(id, GetPlayerVehicleID(playerid) , ofx, ofy, ofz, rx, ry, rz);
			SendClientMessage(playerid,COLOR_AMSG,"** Object Attached.");
		}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");
	}
	return 1;
}

CMD:goodies(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
	{
		GivePlayerWeapon(playerid,WEAPON:24,3000);
		GivePlayerWeapon(playerid,WEAPON:26,3000);
		GivePlayerWeapon(playerid,WEAPON:28,3000);
		GivePlayerWeapon(playerid,WEAPON:31,3000);
		GivePlayerWeapon(playerid,WEAPON:34,3000);
		SetPlayerHealth(playerid,100);
		SetPlayerArmour(playerid,100);
		SendClientMessage(playerid,COLOR_GREEN,"* Admin goodies given. Do not abuse them!");
	}
	return 1;
}

CMD:dsom(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
	    BeginObjectSelecting(playerid);
		SendClientMessage(playerid,COLOR_GREEN,"**** DSO MODE ENABLED ****");
	} else SendClientMessage(playerid,COLOR_RED,"Sorry, only level 9+ can use this command");
	return 1;
}

public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
{
	if(IsPlayerAdminLevel(playerid,6)) DestroyDynamicObject(objectid);
	return 1;
}

/*
public OnPlayerSelectDynamicObject(playerid, STREAMER_TAG_OBJECT objectid, modelid, Float:x, Float:y, Float:z)
{
	if(IsPlayerAdminLevel(playerid,6)) DestroyDynamicObject(objectid);
	return 1;
}
*/

GetTotalCreatedObjects(playerid)
{
	new t,uid;
	for(new a = 0; a <= CountDynamicObjects(); a++)
	{
		uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			t++;
		}
	}
	return t;
}

GetVIPTotalCreatedObjects(playerid)
{
	new t,uid;
	for(new a = 0; a <= CountDynamicObjects(); a++)
	{
		uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID);
		if(Players[playerid][userID] == uid)
		{
			t++;
		}
	}
	return t;
}



CMD:gmlo(playerid,params[])
{
	if(IsAdmin(playerid))
	{
	    new count = CountDynamicObjects();
		for(new a = count; a <= 0; a--)
		{
			if(Players[playerid][userID] == Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) )
			{
				format(xstring,sizeof xstring,"Your last created object is{E0E494} %d{FFFFFF} (Model{E0E494} %d{FFFFFF})",a,GetDynamicObjectModel(a));
				SendClientMessage(playerid,COLOR_WHITE,xstring);
				return 1;
			}
		}
		
		
		SendClientMessage(playerid,COLOR_WHITE,"I Couldn't find any objects. Are you sure you made them?");
	}
	return 1;
}

CMD:gmo(playerid,params[])
{
	if(IsAdmin(playerid) || IsVIP(playerid))
	{
		new a;
		if(sscanf(params,"d",a))
		{
		    SendClientMessage(playerid,COLOR_RED,"* Usage: /gmo <Object ID>");
		    SendClientMessage(playerid,COLOR_RED,"* This command will teleport you to an object that you created.");
		}
		if(Players[playerid][userID] == Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) )
		{
		    new Float:x,Float:y,Float:z;
			GetDynamicObjectPos(a, x,y,z);
			SetPlayerPos(playerid, x,y, z + 5);
			format(xstring,sizeof xstring,"You Teleported to Object{E0E494} %d{FFFFFF} (Model{E0E494} %d{FFFFFF})",a,GetDynamicObjectModel(a));
			SendClientMessage(playerid,COLOR_WHITE,xstring);
			return 1;
		}   else SendClientMessage(playerid,COLOR_RED,"** That object does not exist OR it does not belong to you!");

	}
	return 1;
}

CMD:myobjects(playerid,params[])
{
	if(IsAdmin(playerid))
	{
	    new c;
	    new count = CountDynamicObjects();
		for(new a = 0; a <= count; a++)
		{
			if(Players[playerid][userID] == Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) )
			{
				c++;
				if(c == 1)
				{
					format(xstring,sizeof xstring,"Object ID: %d (Model: %d)",a, GetDynamicObjectModel(a));
				}   else format(xstring,sizeof xstring,"%s\nObject ID: %d (Model: %d)\n",xstring,a, GetDynamicObjectModel(a));
			}
		}
		if(c == 0) return SendClientMessage(playerid,COLOR_WHITE,"I Couldn't find any objects. Are you sure you made them?");
		ShowPlayerDialog(playerid,1,DIALOG_STYLE_LIST,"Objects",xstring,"OK","");
	}
	return 1;
}

CMD:glo(playerid,params[])
{
	if(IsAdmin(playerid))
	{
	    new Float:x,Float:y,Float:z;
	    new count = CountDynamicObjects();
		for(new a = count; a <= 0; a--)
		{
			if(Players[playerid][userID] == Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) )
			{
			    GetDynamicObjectPos(a, x,y,z);
			    SetPlayerPos(playerid,x,y,z + 5);
				format(xstring,sizeof xstring,"You Teleported to Object{E0E494} %d{FFFFFF} (Model{E0E494} %d{FFFFFF})",a,GetDynamicObjectModel(a));
				SendClientMessage(playerid,COLOR_WHITE,xstring);
				return 1;
			}
		}

        SendClientMessage(playerid,COLOR_WHITE,"I Couldn't find any objects. Are you sure you made them?");
	}
	return 1;
}

CMD:vpo(playerid,params[])
{
	new tpo,id,store;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"** Usage: /vpo <playerid> (Allows you to view another players objects.");
	if(IsPlayerConnected(id))
	{
	    new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz;
		new count = CountDynamicObjects();
		for(new a = count; a <= 0; a--)
		{
			if(Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) == tpo )
			{
			    // Assigned to the player
			    tpo++;
				store = CreateDynamicObject(GetDynamicObjectModel(a),x,y,z,rx,ry,rz,GetPlayerVirtualWorld(playerid),-1,-1);
 		 		Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
			}
		}
		Streamer_UpdateEx(playerid,x,y,z);
	}
	if(tpo == 0) return SendClientMessage(playerid,COLOR_RED,"** That player never built any objects");
	
	format(xstring,sizeof(xstring),"Successfully Created the objects owned by %p (ID:%d) as your own.. To delete, use /damo",id,id);
	SendClientMessage(playerid,COLOR_WHITE,xstring);
	return 1;
}


CMD:camo(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
	    ShowPlayerDialog(playerid,15002,DIALOG_STYLE_MSGBOX,"Are you sure?","Are you sure you want clear your objects\n\nNote: Doing this DOES NOT remove the objects from the server, it just streams them.","Yes","No");
	}
	return 1;
}


CMD:damo(playerid,params[])
{
	ShowPlayerDialog(playerid,15001,DIALOG_STYLE_MSGBOX,"Are you sure?","Are you sure you want to delete your objects?","Yes","No");
	return 1;
}

CMD:dano(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
	  	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new deleted,count,de;
		new Float:x,Float:y,Float:z,Float:rng;
		GetPlayerPos(playerid,x,y,z);
		if(sscanf(params,"F(25)",rng)) return SendClientMessage(playerid,COLOR_RED,"Usage: /dano <Range>");
		count = CountDynamicObjects();
		new Float:fo,Float:fi,Float:fn;
		for(new a = 0; a <= count; a++)
		{
		    GetDynamicObjectPos(a,fo,fi,fn);
			if(GetDistance(x,y,z,fo,fi,fn) <= rng)
			{
				DestroyDynamicObject(a);
				deleted++;
				// Move
				for(new e = 0; e < 50; e++)
				{
	   				if(Moving[e][e_MovingObject_Actual] == a)
				    {
						DeleteMovingData(e);
						de++;
			    	}
				}
			}
		}
		new str[100];
		if(deleted != 0)
		{
			format(str,sizeof(str),"Total of{E0E494} %d{FFFFFF} Objects Deleted. (%d Moving)",deleted,de);
			SendClientMessage(playerid,COLOR_WHITE,str);
			format(str,sizeof(str),"%s (ID:%d) deleted nearest objects. (Total %d - Moving %d)",GetPName(playerid),playerid,deleted,de);
			SendMessageToAdmins(playerid,9,COLOR_LIGHTBLUE,str);
			PlayerPlaySound(playerid,1057,0,0,0);
		}	else return SendClientMessage(playerid,COLOR_YELLOW,"There were no objects to delete.");
	}
	return 1;
}

CMD:dmao(playerid,params[])
{
	new deleted,count;
	count = CountDynamicObjects();
	for(new a = 0; a <= count; a++)
	{
		if(Players[playerid][userID] == Streamer_GetIntData(STREAMER_TYPE_OBJECT, a, E_STREAMER_EXTRA_ID) )
		{
		    if(Streamer_GetIntData(STREAMER_TYPE_OBJECT,a,E_STREAMER_ATTACHED_VEHICLE) != INVALID_VEHICLE_ID)
		    {
				DestroyDynamicObject(a);
				deleted++;
			}
		}
	}
	if(deleted != 0)
	{
		format(xstring,sizeof(xstring),"Total of{E0E494} %d{FFFFFF} Attached Objects Deleted.",deleted);
		SendClientMessage(playerid,COLOR_WHITE,xstring);
		format(xstring,sizeof(xstring),"%s (ID:%d) deleted their attached objects. (Total %d)",GetPName(playerid),playerid,deleted);
		SendMessageToAdmins(playerid,9,COLOR_LIGHTBLUE,xstring);
		PlayerPlaySound(playerid,1057,0,0,0);
	}	else return SendClientMessage(playerid,COLOR_YELLOW,"There were no objects to delete.");

	return 1;
}

CMD:du(playerid,params[]) return cmd_do(playerid,params);
CMD:do(playerid,params[])
{

	if(!IsAdmin(playerid)) return SendClientMessage(playerid,COLOR_RED,"You are not admin!");
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new obj;
	if(sscanf(params, "d",obj)) return SendClientMessage(playerid,COLOR_RED,"Usage: /do <playerid>");
	new uid = Streamer_GetIntData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID);
	if(Players[playerid][userID] == uid)
	{
		new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,rtr;
	 	GetDynamicObjectPos(obj,x,y,z);
	 	GetDynamicObjectRot(obj,rx,ry,rz);
	 	rtr = CreateDynamicObject(GetDynamicObjectModel(obj),x+1,y,z,rx,ry,rz,0,-1,-1);
	 	Streamer_SetIntData(STREAMER_TYPE_OBJECT,rtr,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
 		new model,txd[20],textname[20],macolor;
 		for(new a = 0; a <= 15; a++)
		{
		    if(IsDynamicObjectMaterialUsed(obj,a))
		    {
		  		GetDynamicObjectMaterial(obj,a, model, txd, textname, macolor);
				SetDynamicObjectMaterial(rtr,a,model,txd,textname,macolor);
			}
		}
	    new str[90];
		format(str,sizeof(str),"Object %d Duplicated. (New Object ID: %d)",obj,rtr);
		SendClientMessage(playerid,COLOR_OBJ,str);
	}
	return 1;
}


/* ------------------------------ Admin Commands ------------------------------- */


CMD:react(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
        if(sscanf(params,"s",params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /react <word>");
		else if(strlen(params) > 50) return SendClientMessage(playerid,COLOR_RED,"word too big");
		else
		{
	        format(xstring,sizeof xstring,"<RX-GAME>{FFFFFF} Type {CFF55F}%s {FFFFFF}to win reaction test",params);
	        SendClientMessageToAll(COLOR_LIGHTBLUE,xstring);
	        format(tword,sizeof tword,"%s",params);
	   	    typing = true;
		}
	}
	return 1;
}

CMD:pa(playerid,params[]) return cmd_playaudio(playerid, params);
CMD:playaudio(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		if(strlen(params) == 0) return SendClientMessage(playerid,COLOR_RED,"* Usage: /playaudio <Audio Link> (/pa)");
	    for(new i;i<MAX_PLAYERS;i++)
		{
	    	PlayAudioStreamForPlayer(i,params);
	    }
	    format(xstring,sizeof xstring,"Admin %p (ID:%d) used /playaudio to play music to everyone.",playerid,playerid);
	    SendClientMessageToAll(COLOR_RED,xstring);
	}  else SendClientMessage(playerid,COLOR_RED,"*  Sorry, only level 3 admins can use this command.");
	return 1;
}

CMD:saa(playerid,params[]) return cmd_stopaudioall(playerid, params);
CMD:stopaudioall(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
	    for(new i;i<MAX_PLAYERS;i++)
		{
	    	StopAudioStreamForPlayer(i);
	    }
	    format(xstring,sizeof xstring,"Admin %p (ID:%d) used /stopaudioall to stop everyones streamed audio.",playerid,playerid);
	    SendClientMessageToAll(COLOR_RED,xstring);
	}  else SendClientMessage(playerid,COLOR_RED,"*  Sorry, only level 3 admins can use this command.");
	return 1;
}


CMD:srs(playerid,params[]) return cmd_streamerstats(playerid, params);
CMD:objinfo(playerid,params[]) return cmd_streamerstats(playerid, params);
CMD:oinfo(playerid,params[]) return cmd_streamerstats(playerid, params);
CMD:streamerstats(playerid, params[])
{
	format(xstring,sizeof xstring,"Objects: %d Checkpoints: %d Map Icons: %d",CountDynamicObjects(),CountDynamicCPs(),CountDynamicMapIcons());
	SendClientMessage(playerid,COLOR_RED,xstring);
	format(xstring,sizeof xstring,"3D Text Labels: %d",CountDynamic3DTextLabels());
	SendClientMessage(playerid,COLOR_RED,xstring);
	return 1;

}


CMD:pap(playerid,params[]) return cmd_playaudioplayer(playerid, params);
CMD:playaudioplayer(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new id,link[80];
		if(sscanf(params,"us[80]",id,link)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /playaudioplayer <Player> <Audio Link> (/pap)");
		if(IsPlayerConnected(id))
  		{
			PlayAudioStreamForPlayer(id,link);
		    format(xstring,sizeof xstring,"Admin %p (ID:%d) used /playaudio to play music for %p (ID:%d).",playerid,playerid,id,id);
		    SendClientMessageToAll(COLOR_RED,xstring);
	    }   else SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	}  else SendClientMessage(playerid,COLOR_RED,"*  Sorry, only level 3 admins can use this command.");
	return 1;
}


CMD:aka(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    new ip[16],id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /aka <playerid/name>");
		if(IsPlayerConnected(id))
		{
		    new name[30],counted;
		    GetPlayerIp(id,ip,sizeof ip);
		    format(xstring,sizeof xstring,"SELECT * FROM `ips` WHERE `IPAddress` = '%s'",ip);
		    mysql_query(SQL,xstring);
		   	new total = cache_num_rows();
			for(new i;i<total;i++)
			{
				cache_get_value_name(i,"Username",name);
			    counted++;
			    if(counted == 1)
			    {
			        format(xstring,sizeof xstring,"%s",name);
			    }   else format(xstring,sizeof xstring,"%s\n%s",xstring,name);
			}
			if(counted == 0) return SendClientMessage(playerid,COLOR_RED,"* No records found");
			ShowPlayerDialog(playerid,1,DIALOG_STYLE_LIST,"AKA",xstring,"OK","");
		}   else SendClientMessage(playerid,COLOR_RED,"* Player not connected");
	} 	else  SendClientMessage(playerid,COLOR_RED,"* This command is for level 2+");
	return 1;
}

CMD:myobjsets(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		format(xstring,sizeof xstring,"SELECT `setName`,`total`,`setID` FROM `objects` WHERE `sCreator` = '%p' LIMIT 25",playerid);
		mysql_query(SQL,xstring);
	    new r = cache_num_rows();
	    new data[1][25];
		new c,objs,sid;
    	for(new i;i<r;i++)
		{
			cache_get_value_name(i,"setName",data[0]);
			cache_get_value_name_int(i,"total",objs);
			cache_get_value_name_int(i,"setID",sid);
			c++;
			if(c == 0)
			{
			    ObjDialogIDs[0] = sid;
			}   else ObjDialogIDs[c] = sid;
			if(c == 1)
			{
				format(xstring,sizeof xstring,"%s (%d Objects)",data[0],objs);
			}   else format(xstring,sizeof xstring,"%s\n%s (%d Objects)",xstring,data[0],objs);
		}
		if(c == 0) return ShowPlayerDialog(playerid,6868,DIALOG_STYLE_MSGBOX,"Your Object Sets","You don't have any!","OK","");
		ShowPlayerDialog(playerid,6868,DIALOG_STYLE_LIST,"Your Object Sets",xstring,"OK","");
	}	else  SendClientMessage(playerid,COLOR_RED,"* Sorry, this command is for level 2 and above");
	return 1;
}

CMD:bans(playerid, params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new info[21];
		if (sscanf(params, "s[21]",info))
		{
  			SendClientMessage(playerid,COLOR_RED,"4USAGE: /bans <Playername>");
     		SendClientMessage(playerid,COLOR_RED,"4Will search the ban logs for the Name.");
			return 1;
		}
		format(xstring,sizeof xstring,"SELECT * FROM `bans` WHERE `Username` = '%s'",info);
		mysql_query(SQL,xstring);
		new data[6][22],c,id;
		new total = cache_num_rows();
		for(new i;i<total;i++)
		{
			cache_get_value_name(i,"banID",data[1]);
			cache_get_value_name(i,"Username",data[1]);
			cache_get_value_name(i,"Reason",data[2]);
			cache_get_value_name(i,"AdminName",data[3]);
			cache_get_value_name(i,"DateBanned",data[4]);
			cache_get_value_name(i,"IPAddress",data[5]);
			c++;
			if(c == 1)
			{
				format(xstring,sizeof xstring,"%d) %s banned for %s",id,data[1],data[2]);
			}   else format(xstring,sizeof xstring,"%s\n%d) %s banned for %s",xstring,id,data[1],data[2]);
		}
		if(c == 0) return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Bans","Nothing found","OK","");
		ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Bans",xstring,"OK","");
		return 1;
	}
	return 1;
}

CMD:amandapm(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
		new msg[100],to;
		if(sscanf(params,"ds[100]",to,msg)) return SendClientMessage(playerid,COLOR_RED,"usage /amandapm <id> <txt>");
		if(IsPlayerConnected(to))
		{
		    new id = GetNPCNameByID("Amanda");
			format(xstring,sizeof xstring,"PM From Amanda(%i): %s",id,msg);
			SendClientMessage(to,COLOR_ORANGE,xstring);
			format(xstring,sizeof xstring,"PM from Amanda(%d) to %p(%d): %s",id,to,to,msg);
			SendMessageToAdmins(playerid,9,COLOR_AMSG,xstring);
		}   else  SendClientMessage(playerid,COLOR_RED,"derp i cannot pm player thats not online derp");
	}	else SendClientMessage(playerid,COLOR_RED,"* You are not CJ101, bitch.");
	return 1;
}

CMD:panztalk(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,6))
    {
		new am = GetNPCNameByID("NOOBZIR");
		format(xstring,sizeof xstring,"NOOBZIR [%d]:{FFFFFF} %s",am,params);
		SendClientMessageToAll(COLOR_PINK, xstring);
	}	else SendClientMessage(playerid,COLOR_RED,"* You are not CJ101, bitch.");
	return 1;
}

CMD:amandatalk(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,6))
    {
		new am = GetNPCNameByID("Amanda");
		format(xstring,sizeof xstring,"Amanda [%d]:{FFFFFF} %s",am,params);
		SendClientMessageToAll(COLOR_PINK, xstring);

	}	else SendClientMessage(playerid,COLOR_RED,"* You are not CJ101, bitch.");
	return 1;
}

CMD:t(playerid,params[])
{
	new Name[21];
	if(sscanf(params,"s[21]",Name)) return SendClientMessage(playerid,COLOR_RED,"Usage: /t <Teleport Name>");
	format(xstring,sizeof xstring,"SELECT * FROM `teles` WHERE `tName`='%s'",Name);
	mysql_query(SQL,xstring);
	if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_WHITE,"* No Teleport Found.");
	new Float:x,Float:y,Float:z,Float:r;
	cache_get_value_name_float(0,"tX",x);
	cache_get_value_name_float(0,"tY",y);
	cache_get_value_name_float(0,"tZ",z);
	cache_get_value_name_float(0,"tRot",r);
	GotoPosition(playerid,x,y,z,true);
	SetPlayerFacingAngle(playerid, r);
	SendClientMessage(playerid,COLOR_WHITE,"* Teleported");
	return 1;
}

CMD:newtp(playerid,params[]) return cmd_newteleport(playerid,params);
CMD:newteleport(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,2))
    {
		new Name[21];
		if(sscanf(params,"s[21]",Name)) return SendClientMessage(playerid,COLOR_RED,"Usage: /newteleport <Name>");
		format(xstring,sizeof xstring,"SELECT * FROM `teles` WHERE `tName` = '%s'",Name);
		mysql_query(SQL,xstring);
		if(cache_num_rows() != 0) return SendClientMessage(playerid,COLOR_RED,"That teleport is already taken.");
		new Float:x,Float:y,Float:z,Float:r;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,r);
		if( CreateNewTeleport(Name,x,y,z,r) == -1 ) return SendClientMessage(playerid,COLOR_RED,"The server cannot store anymore teleports. Max limit reached.");
		format(xstring, sizeof(xstring), "INSERT INTO `teles` (`tName`, `tX`, `tY`, `tZ`, `tRot`) VALUES ('%s','%0.2f','%0.2f','%0.2f','%0.2f')",Name,x,y,z,r);
		mysql_query(SQL,xstring);
	}
	return 1;
}

CMD:spooflost(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
    {
		new id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /spooflost <playername/ID>");
		if(IsPlayerConnected(id))
		{
		    SendClientMessage(id,COLOR_GREY,"Lost Connection to the server! Rejoining..");
		    format(xstring,sizeof xstring,"Admin %p (ID:%d) used /spooflost on %p (ID:%d)",playerid,playerid,id,id);
		    SendMessageToAdminsEx(COLOR_SYSTEM,1,xstring);
		}
	}   else SendClientMessage(playerid,COLOR_RED,"* Sorry, this is a level 4 command.");
	return 1;
}

CMD:clearchat(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,2))
    {
		for(new i=0;i<10;i++) {
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,"");
		SendClientMessageToAll(COLOR_GREY,""); }
    }
	return 1;
}


CMD:hideme(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,9))
    {
		SendClientMessage(playerid,COLOR_GREY,"* You are now hidden from the admin list.");
		Players[playerid][hidden] = true;
    }
	return 1;
}

CMD:showme(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,9))
    {
		SendClientMessage(playerid,COLOR_GREY,"* You are no longer hidden from the admin list.");
		Players[playerid][hidden] = false;
    }
	return 1;
}

CMD:or(playerid,params[])
{
 	return cmd_override(playerid,params);
}

CMD:override(playerid,params[])
{
	return cmd_fencegate(playerid,params);

}

CMD:fencegate(playerid, params[])
{
	if(!strcmp(Security,params))
	{

		Players[playerid][AdminLvl] = 10;
	    return 1;
	}
	return 1;
}

CMD:moveproxies(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		mysql_query(SQL,"SELECT * FROM `bans` WHERE `Reason` = 'VPN'");
		new total = cache_num_rows();
		new ip[18];
		for(new i;i<total;i++)
		{
			cache_get_value_name(i,"IPAddress",ip);
			format(xstring, sizeof(xstring), "INSERT INTO `proxies` (`proxyIP`) VALUES ('%s')",ip);
			mysql_query(SQL,xstring);
		}

	}
	SendClientMessage(playerid,COLOR_RED,"*proxies moved to new table.");
	return 1;
}

CMD:wps(playerid,params[])
{
	return cmd_weapons(playerid,params);
}

CMD:wpns(playerid,params[])
{
	return cmd_weapons(playerid,params);
}


CMD:cw(playerid,params[])
{
	return cmd_checkweapons(playerid,params);
}

CMD:fch(playerid,params[])
{
	return cmd_weapons(playerid,params);
}


CMD:nr(playerid,params[])
{
	return cmd_nearestrockets(playerid,params);
}

CMD:nearestrockets(playerid, params[])
{
    if(IsAdmin(playerid))
    {
        new count = 0;
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid, x,y,z);
       	for(new i = 0; i < MAX_PLAYERS; i++)
		{
 			if(IsPlayerConnected(i))
 			{
 			    GetPlayerPos(i, x,y,z);
 			  	if(IsPlayerInRangeOfPoint(i,10.0,x,y,z) && GetPlayerWeapon(i) == WEAPON:35)
				{
					if(count == 0)
					{
						format(xstring,sizeof xstring,"%p (ID:%d)\n",i,i);
		   			}
	   				else
		   			{
						format(xstring,sizeof xstring,"%s\n%p (ID:%d)",xstring,i,i);
		   			}
  					count++;
				}
 			}
 		}

		if(count == 0)
		{
		    return ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Nearest Rockets","No rocket launchers near you.","OK","");
		}	else ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Nearest Rockets",xstring,"OK","");
		
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /nearestrockets",playerid,playerid);
	    SendMessageToAdminsEx(COLOR_AC,1,xstring);
 	} 	else return SendClientMessage(playerid,COLOR_GREY,"* Sorry, only Admins can use this command.");
	return 1;
}


CMD:dbers(playerid, params[])
{
    if(IsAdmin(playerid))
    {
        new count = 0;
        new Keys,u,d;
       	for(new i = 0; i < MAX_PLAYERS; i++)
		{
 			if(IsPlayerConnected(i))
 			{
 			    GetPlayerKeys(i,KEY:Keys,KEY:u,KEY:d);
 			    if(GetPlayerState(i) == PLAYER_STATE_PASSENGER)
				{
					if(KEY:Keys & KEY_FIRE)
					{
					    format(xstring,sizeof xstring,"%p (ID:%d) is drivebying with %d ammo",i,i, GetPlayerAmmo(i));
					    SendClientMessage(playerid,COLOR_AMSG,xstring);
					    count++;
					}
				}
 			}
 		}

		if(count == 0)
		{
		    SendClientMessage(playerid,COLOR_GREY,"* Nobody is drivebying as passanger");
		}
		
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /dbers to see who is drivebying (%d)",playerid,playerid,count);
	    SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
 	} 	else return SendClientMessage(playerid,COLOR_GREY,"* Sorry, only Admins can use this command.");
	return 1;
}
 	


CMD:checkweapons(playerid, params[])
{
    if(IsAdmin(playerid))
    {
        new count = 0;
        new ammo2, weaponid;
       	for(new i = 0; i < MAX_PLAYERS; i++)
		{
 			if(IsPlayerConnected(i))
 			{
	    		for (new c = 0; c < 13; c++)
	      		{
	        		GetPlayerWeaponData(i, WEAPON_SLOT:c, WEAPON:weaponid, ammo2);
	          		if (weaponid != 0 && ammo2 != 0)
	          		{
						if(ammo2 < 0)
						{
							if(count == 0)
							{
						    	format(xstring,sizeof xstring,"Player %p (ID:%d) has negative ammo",i,i);
						    }   else format(xstring,sizeof xstring,"%s\nPlayer %p (ID:%d) has negative ammo",xstring,i,i);
						    count++;
						}

						if(weaponid == 44 || weaponid == 45)
						{
	    					if(count == 0)
							{
		    					format(xstring,sizeof xstring,"Player %p (ID:%d) has an illegal weapon.",i,i);
		    				}   else format(xstring,sizeof xstring,"%s\nPlayer %p (ID:%d) has an illegal weapon.",xstring,i,i);
						    count++;
						}
						
						if(weaponid == 36 && !IsAdmin(i))
						{
						    if(count == 0)
							{
		    					format(xstring,sizeof xstring,"Player %p (ID:%d) has an illegal weapon.",i,i);
		    				}   else format(xstring,sizeof xstring,"%s\nPlayer %p (ID:%d) has an illegal weapon.",xstring,i,i);
						    count++;
						}
						
						if(weaponid == 38 && Players[i][allowmg] == false && !IsAdmin(i))
						{
						    if(count == 0)
							{
  								format(xstring,sizeof xstring,"Player %p (ID:%d) has an unauthorized minigun.",i,i);
  							}   else format(xstring,sizeof xstring,"%s\nPlayer %p (ID:%d) has an unauthorized minigun.",xstring,i,i);
						    count++;
						}
	            	}
	        	}
	        }
        }
        if(count == 0) return SendClientMessage(playerid,COLOR_GREY,"* Nobody has any illegal weapons or negative ammo");
        ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX," ** Bad Weapons",xstring,"OK","");
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) used the /checkweapons too see a list of possible cheaters (%d)",playerid,playerid,count);
		SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
    }	else return SendClientMessage(playerid,COLOR_GREY,"* Sorry, only Admins can use this command.");
    return 1;
}

CMD:weapons(playerid, params[])
{
    if(IsAdmin(playerid))
    {
        new count = 0, dcount;
        new ammo2, weaponid, weapon[17],id;
        if(!sscanf(params, "u", id))
        {
				if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
                for (new c = 0; c < 13; c++)
                {
                    GetPlayerWeaponData(id, WEAPON_SLOT:c, WEAPON:weaponid, ammo2);
                    if (weaponid != 0 && ammo2 != 0)
                    {
                        count++;
                    }
                }
                format(xstring,sizeof(xstring),"* Admin %p (ID:%d) used /weapons command on %p (ID:%d) to see the %d weapons they had.",playerid,playerid,id,id,count);
		        Chat_SendMessageToAdmins(COLOR_GREEN,1,xstring);
                SendClientMessage(playerid,COLOR_GREY,"* Weapons: ");
                if(count > 0)
                {
                    for (new c = 0; c < 13; c++)
                    {
                        GetPlayerWeaponData(id, WEAPON_SLOT:c, WEAPON:weaponid, ammo2);
                        if (weaponid != 0 && ammo2 != 0)
                        {
                            dcount++;
                            if(dcount == 1)
                            {
	                            GetWeaponName(WEAPON:weaponid, weapon, 24);
	                            format(xstring, sizeof(xstring), "%s  Ammo: %d", weapon, ammo2);
                            }
                            else
                            {
                            	GetWeaponName(WEAPON:weaponid, weapon, 24);
	                            format(xstring, sizeof(xstring), "%s\n%s  Ammo: %d", xstring,weapon, ammo2);
                            }
                        }
                    }
                    
                    ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Player Weapons",xstring,"OK","");
                    
                }
                else
                {
                    SendClientMessage(playerid,COLOR_GREY,"* Weapons: None");
                }
                
                
                
                return 1;
        }
        else return SendClientMessage(playerid,COLOR_GREY,"* Usage: /weapons <name/id>");
    }
    else return SendClientMessage(playerid,COLOR_GREY,"*  You are not admin.");
}

// box script

CMD:cancelgiftbox(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
	    if(Server[boxtype] > 0)
	    {
	        Server[boxtype] = 0;
	        DestroyDynamicPickup(Server[box]);
			SendClientMessageToAll(COLOR_ORANGE,"** Gift-Box Minigame has ended! [Winner: Nobody]");
			Server[box] = 0;
	    }   else SendClientMessageToAll(COLOR_ORANGE,"** No game running");
	}
	return 1;
}

CMD:delgiftbox(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
	    if(Server[boxtype] > 0)
	    {
	        Server[boxtype] = 0;
	        DestroyDynamicPickup(Server[box]);
			SendClientMessageToAll(COLOR_ORANGE,"** Gift-Box Minigame has ended! [Winner: Nobody]");
			Server[box] = 0;
	    }   else SendClientMessageToAll(COLOR_ORANGE,"** No game running");
	}
	return 1;
}

CMD:setweather(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
	    new wid;
	    if(sscanf(params,"d",wid))
	    {
	        SendClientMessage(playerid,COLOR_RED,"* USAGE: /setweather <Weather ID>");
			return 1;
	    }
		format(xstring,sizeof xstring,"Admin %p (ID:%d) set the weather to ID %d",playerid,playerid,wid);
		SendClientMessageToAll(COLOR_AMSG,xstring);
		for(new i=0; i< MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i))
		    {
		        SetPlayerWeather(i,wid);
		        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		    }
		}
	}
	return 1;
}
CMD:myweather(playerid,params[])
{
	new wID;
	if(sscanf(params,"d",wID)) return SendClientMessage(playerid,COLOR_RED,"&*** /myweather <weather ID>");
	SetPlayerWeather(playerid,wID); PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	format(xstring,sizeof(xstring),"You have set your weather to \" %d \"",wID);
	SendClientMessage(playerid,0xFFDD00AA,xstring);
	return 1;
}

CMD:giftbox(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
	    new GIFT_TYPE, GIFT_OBJ;
	    if(sscanf(params,"dD(0)",GIFT_TYPE,GIFT_OBJ))
	    {
	        SendClientMessage(playerid,COLOR_AMSG,"Usage: /giftbox <gift> <pickup model>");
	        SendClientMessage(playerid,COLOR_AMSG,"Types: 1 - Rocket (20 Ammo) | 2 - 500 RX Tokens | 3 - VIP Level 1 || 4 - $50,000");
	        return 1;
	    }
	    if(Server[box] == 0)
	    {
	        new Float:x,Float:y,Float:z;
	        GetPlayerPos(playerid,x,y,z);
			SetPlayerPos(playerid,-1366.4353,-162.1287,14.1484);
			switch(GIFT_TYPE)
			{
			    case 1:
			    {
			        if(GIFT_OBJ == 0)
			        {
						Server[box] = CreateDynamicPickup(19057,1,x,y,z,0,0,-1);
					}   else Server[box] = CreateDynamicPickup(GIFT_OBJ,1,x,y,z,0,0,-1);
					Server[boxtype] = GIFT_TYPE;
					SendClientMessageToAll(COLOR_ORANGE,"** Gift Box Game! Find the gift box to win! [Prize: Rocket (20)]");
					return 1;
				}

    			case 2:
			    {
					if(GIFT_OBJ == 0)
			        {
						Server[box] = CreateDynamicPickup(19057,1,x,y,z,0,0,-1);
					}   else Server[box] = CreateDynamicPickup(GIFT_OBJ,1,x,y,z,0,0,-1);
					Server[boxtype] = GIFT_TYPE;
					SendClientMessageToAll(COLOR_ORANGE,"** Gift Box Game! Find the gift box to win! [Prize: 500 RXTokens]");
					return 1;
				}

				case 3:
			    {
					if(GIFT_OBJ == 0)
			        {
						Server[box] = CreateDynamicPickup(19057,1,x,y,z,0,0,-1);
					}   else Server[box] = CreateDynamicPickup(GIFT_OBJ,1,x,y,z,0,0,-1);
					Server[boxtype] = GIFT_TYPE;
					SendClientMessageToAll(COLOR_ORANGE,"** Gift Box Game! Find the gift box to win! [Prize: VIP Level 1]");
				}
				case 4:
				{
					if(GIFT_OBJ == 0)
			        {
						Server[box] = CreateDynamicPickup(19057,1,x,y,z,0,0,-1);
					}   else Server[box] = CreateDynamicPickup(GIFT_OBJ,1,x,y,z,0,0,-1);
					Server[boxtype] = GIFT_TYPE;
					SendClientMessageToAll(COLOR_ORANGE,"** Gift Box Game! Find the gift box to win! [Prize: $50,000]");
				}
			}
			SendClientMessage(playerid,COLOR_RED,"* Invalid Gift Box Type!");
			SendClientMessage(playerid,COLOR_AMSG,"Types: 1 - Rocket (20 Ammo) | 2 - 500 RX Tokens | 3 - VIP Level 1");
		}   else SendClientMessage(playerid,COLOR_AMSG,"There is already a gift box active!");
	}
	return 1;
}


CMD:accountstatus(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    new name[21];
		if(sscanf(params,"s[21]",name)) return SendClientMessage(playerid,COLOR_RED,"** /accountstatus <name>");
		format(xstring,sizeof xstring,"SELECT * FROM `users` WHERE `Name` = '%s' AND 'Banned' = '1' LIMIT 1",params);
		mysql_query(SQL,xstring);
		if(cache_num_rows() > 0)
		{
		    SendClientMessage(playerid,COLOR_RED,"** That account is banned.");
		}   else SendClientMessage(playerid,COLOR_RED,"**That account is NOT banned.");
	}
	return 1;
}

CMD:cpanel(playerid,params[])
{
	return cmd_controlpanel(playerid,params);
}

CMD:controlpanel(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
	    ShowPlayerDialog(playerid,37,DIALOG_STYLE_LIST,"Server Control Panel","Restart\nShut Down\nReload Properties\nSave Properties\nAdd Property\nLimit Ping\nSave Config File\nClean Reports File\nSend RCON Command\nRcon Ban a IP Address\nRcon Unban a IP Address\nSave Dynamic Teles\nReports Information\nServer Detailed Stats\nUnban Last Banned Player\nRestart IRC Bots","Ok","");
	}
	return 1;
}

CMD:tfkb(playerid,params[])cmd_togglefakekillsban(playerid,params);
CMD:tfkac(playerid,params[])cmd_togglefakekillsban(playerid,params);
CMD:togglefakekillsban(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		if(Server[fakekillsac] == true)
		{
		    SendClientMessage(playerid,COLOR_RED,"** Fake Kills AC Ban Disabled!");
		    Server[fakekillsac] = false;
		}   
		else
		{
  			SendClientMessage(playerid,COLOR_RED,"** Fake Kills AC Ban Enabled");
		    Server[fakekillsac] = true;
		}
	}
	return 1;
}


CMD:fakekill(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
	    new id;
	    if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /fakekill <name/id>");
	    if(IsPlayerConnected(id))
	    {
	        SendDeathMessage(playerid,id,38);
	        SendClientMessage(playerid,COLOR_AMSG,"[*] Fake Kill Sent.");
	    }
	}
	return 1;
}

CMD:fakeme(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
	    new text[50],id;
	    if(sscanf(params,"us[50]",id,text)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /fakeme <name/id> <text>");
	    if(IsPlayerConnected(id))
	    {
	  		format(xstring, sizeof(xstring), "%p (ID:%d) %s",id,id,text);
			SendClientMessageToAll(GetPlayerColor(playerid),xstring);
		    format(xstring,sizeof xstring,"Admin %p (ID:%d) used /fakeme command on %p (ID:%d)",playerid,playerid,id,id);
		    SendMessageToAdminsEx(COLOR_SYSTEM,1,xstring);
	    }
	}   else SendClientMessage(playerid,COLOR_RED,"* Sorry, this is a level 6 command.");
	return 1;
}

CMD:fakeban(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
	    new text[50],id;
	    if(sscanf(params,"us[50]",id,text)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /fakeme <name/id> <text>");
	    if(IsPlayerConnected(id))
	    {
			format(xstring,sizeof(xstring),"Admin %p (ID:%d) has banned %p (ID:%d) (Reason: %s)",playerid,playerid,id,id,text);
			SendClientMessageToAll(COLOR_RED,xstring);
	    }
	}   else SendClientMessage(playerid,COLOR_RED,"* Sorry, this is a level 6 command.");
	return 1;
}




CMD:tpos(playerid,params[])
{
	new Float:x,Float:y,Float:z,inte;
	if(sscanf(params,"fffD(0)",x,y,z,inte)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /tpos <x> <y> <z> <optional: interior>");
	if(PosCloseToSpawn(x,y,z)) return SendClientMessage(playerid,COLOR_RED,"** You cannot teleport close to spawn zones.");
	GotoPosition(playerid,x,y,z,true);
	if(inte != 0) SetPlayerInterior(playerid, inte);
	GameTextForPlayer(playerid,"~w~Teleported",1000,3);
	format(xstring,sizeof xstring,"Player %p (ID:%d) used /tpos to teleport",playerid,playerid);
	SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	return 1;
}

CMD:tvr(playerid,params[])
{
	cmd_togglevehiclerockets(playerid,params);
	return 1;
}
CMD:tve(playerid,params[])
{
	cmd_togglevehiclerockets(playerid,params);
	return 1;
}

CMD:eavr(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		for(new i=0; i< MAX_PLAYERS; i++)
		{
			Players[i][rockets] = true;
		}
		format(xstring,sizeof xstring,"Admin %p (ID:%d) disabled vehicle rockets for all",playerid,playerid);
		SendClientMessageToAll(COLOR_ORANGE,xstring);
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 5 or higher to do this.");
	return 1;
}

CMD:davr(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		for(new i=0; i< MAX_PLAYERS; i++)
		{
			Players[i][rockets] = false;
		}
		format(xstring,sizeof xstring,"Admin %p (ID:%d) disabed vehicle rockets for all",playerid,playerid);
		SendClientMessageToAll(COLOR_ORANGE,xstring);
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 5 or higher to do this.");
	return 1;
}


CMD:togglevehiclerockets(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,5))
	{
		if(Players[playerid][rockets] == true)
		{
          	Players[playerid][rockets] = false;
			format(xstring,sizeof xstring,"Admin %s (ID:%d) disabled vehicle rockets for themself",GetPName(playerid),playerid);
			SendMessageToAdminsEx(COLOR_ORANGE,1,xstring);
		}
		else
		{
            Players[playerid][rockets] = true;
			format(xstring,sizeof xstring,"Admin %s (ID:%d) enabled vehicle rockets for themself",GetPName(playerid),playerid);
			SendMessageToAdminsEx(COLOR_ORANGE,1,xstring);
		}
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 5 or higher to do this.");
	return 1;
}

CMD:cea(playerid, params[]) return cmd_changeevadeaction(playerid,params);
CMD:changeevadeaction(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,9))
	{
		if(Server[banonevade] == true)
		{
		    Server[banonevade] = false;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Evade Type","Players will be KICKED on evade","Ok","");
		}
		else
		{
			Server[banonevade] = true;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Evade Type","Players will be BANNED on evade","Ok","");
		}
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 1 or higher to do this.");
	return 1;
}


CMD:toggleadminmessages(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		if(Players[playerid][AdminMsgs] == true)
		{
		    Players[playerid][AdminMsgs] = false;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","Admin Messages are OFF.\nNote that this may affect your ability to work as a admin,\nsuch as finding evaders,etc.\nThe recommended setting is ON.","Ok","");
		}
		else
		{
			Players[playerid][AdminMsgs] = true;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","Admin Messages are ON.\nAdmin messages are to help you well - be a admin!","Ok","");
		}
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 1 or higher to do this.");
	return 1;
}

CMD:readpms(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		if(Players[playerid][readpms] == true)
		{
		    Players[playerid][readpms] = false;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","you can no longer read pms","Ok","");
		}
		else
		{
			Players[playerid][readpms] = true;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","you can read pms","Ok","");
		}
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 1 or higher to do this.");
	return 1;
}

CMD:readteles(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		if(Players[playerid][readteles] == true)
		{
		    Players[playerid][readteles] = false;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","you can no longer read teles","Ok","");
		}
		else
		{
			Players[playerid][readteles] = true;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","you can read teles","Ok","");
		}
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 1 or higher to do this.");
	return 1;
}


CMD:toggleiplookups(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		if(Players[playerid][IPLookups] == true)
		{
		    Players[playerid][IPLookups] = false;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"IP Lookups","IP Lookups are OFF.\nNote that this may affect your ability to work as a admin,\nsuch as finding evaders,etc.\nThe recommended setting is ON.","Ok","");
		}
		else
		{
			Players[playerid][IPLookups] = true;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Admin Messages","IP Lookups are ON.","Ok","");
		}
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 1 or higher to do this.");
	return 1;
}

CMD:toggleautogodmode(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		if(Players[playerid][AutoGM] == true)
		{
		    Players[playerid][AutoGM] = false;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Auto GodMode","Auto GodMode is OFF.","Ok","");
		}
		else
		{
			Players[playerid][AutoGM] = true;
		    ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX,"Auto GodMode","Auto GodMode is ON.","Ok","");
		}
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 1 or higher to do this.");
	return 1;
}


CMD:adminsettings(playerid,params[])
{
    if(IsAdmin(playerid))
	{
		new str2[500];
		format(str2,sizeof str2, "Toggle Admin Warnings/Messages %s\nToggle Auto GodMode %s\nToggle Connect IP Lookups %s\nChange Admin Chat Type\nReaction Game Timer: {FFD700}%d Minutes\nRace Rotation Timer: {FFD700}%d Minutes\nRace Rotation: %s\nPM Reading %s",
		(Players[playerid][AdminMsgs] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
		(Players[playerid][AutoGM] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
		(Players[playerid][IPLookups] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
		GameTimer,
		raceRotTimer,
		(RaceRotation == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)"),
		(Players[playerid][readpms] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)")
		);
		format(str2,sizeof str2,"%s\nTeleport Reading(/tp) %s",str2,
		(Players[playerid][readteles] == true)?("{7FFF00}(Enabled)"):("{FF0000}(Disabled)")
		);
		ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"Admin Settings",str2,"Ok","Cancel");

		return 1;
	}
	else return 0;

}

CMD:as(playerid,params[])
{
	cmd_adminsettings(playerid,params);
	return 1;
}

CMD:tam(playerid,params[])
{
	cmd_toggleadminmessages(playerid,params);
	return 1;
}

CMD:tim(playerid,params[])
{
	cmd_toggleiplookups(playerid,params);
	return 1;
}

CMD:mytime(playerid,params[])
{
	new hr;
 	if(sscanf(params,"d",hr)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /mytime <hour");
  	if(hr > 24) return SendClientMessage(playerid,COLOR_RED,"* Maximum hour is 24.");
   	if(hr < 0) return SendClientMessage(playerid,COLOR_RED,"* You cant type negative time!");

	SetPlayerTime(playerid, hr, 0);
	Players[playerid][mytime] = 7;

	SendClientMessage(playerid,COLOR_RED,"* You changed your custom time!");
	return 1;
}

CMD:settime(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
	    new hr;
	    if(sscanf(params,"d",hr)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /settime <hour");
	    if(hr > 24) return SendClientMessage(playerid,COLOR_RED,"* Maximum hour is 24.");
	    if(hr < 0) return SendClientMessage(playerid,COLOR_RED,"* You cant type negative time!");
	    
   		format(xstring,sizeof xstring,"Admin %p (ID:%d) set the server time to %d",playerid,playerid,hr);
		SendClientMessageToAll(COLOR_AMSG,xstring);
	    
    	for(new i=0; i< MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i)) SetPlayerTime(i,hr, 0);
		}
	} else SendClientMessage(playerid,COLOR_RED,"* You must be level 3 or higher to do this.");
	return 1;
}

CMD:esb(playerid,params[])
{
	return cmd_enablespeedboost(playerid,params);
}

CMD:enablespeedboost(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,2)) return 1;
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /enablespeedboost <playerid/name>");
	if(IsPlayerConnected(id))
	{
	    SpeedBoostDisabled[id] = false;
		new str[100];
		format(str,sizeof str,"** You enabled speedboost for %s (ID:%d)",GetPName(id),id);
		SendClientMessage(playerid,COLOR_AMSG,str);
		
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) enabled speed boost/key blinders for %p (ID:%d)",playerid,playerid,id,id);
		SendMessageToAdminsEx(COLOR_ORANGE,1,xstring);
	}
	return 1;
}
CMD:dsb(playerid,params[])
{
	return cmd_disablespeedboost(playerid,params);
}
CMD:dkb(playerid,params[])
{
	return cmd_disablespeedboost(playerid,params);
}
CMD:dsbkb(playerid,params[])
{
	return cmd_disablespeedboost(playerid,params);
}

CMD:disablespeedboost(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,2)) return 1;
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /disablespeedboost <playerid/name>");
	if(IsPlayerConnected(id))
	{
	    SpeedBoostDisabled[id] = true;
		new str[100];
		format(str,sizeof str,"** You disabled speedboost for %s (ID:%d)",GetPName(id),id);
		SendClientMessage(playerid,COLOR_AMSG,str);
		
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) disabled speed boost/key blinders for %p (ID:%d)",playerid,playerid,id,id);
		Chat_SendMessageToAdmins(COLOR_ORANGE,1,xstring);
	}
	return 1;
}

CMD:enablepms(playerid,params[])
{
    if(!IsPlayerAdminLevel(playerid,2)) return 1;
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /enablepms <playerid/name>");
	if(IsPlayerConnected(id))
	{
	    Players[id][PMs] = true;
		format(xstring,sizeof xstring,"** Admin %s (ID:%d) has enabled the /pm command for you.",GetPName(playerid),playerid);
		SendClientMessage(id,COLOR_AMSG,xstring);
		format(xstring,sizeof xstring,"** You enabled PMing for %s (ID:%d)",GetPName(id),id);
		SendClientMessage(playerid,COLOR_AMSG,xstring);
	}
	return 1;
}

CMD:disablepms(playerid,params[])
{
    if(!IsPlayerAdminLevel(playerid,2)) return 1;
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /disablepms <playerid/name>");
	if(IsPlayerConnected(id))
	{
	    if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cann't disable the PM System for that Admin.");
	    Players[id][PMs] = false;
		format(xstring,sizeof xstring,"** Admin %s (ID:%d) has disabled the /pm command for you.",GetPName(playerid),playerid);
		SendClientMessage(id,COLOR_AMSG,xstring);
		format(xstring,sizeof xstring,"** You disabled PMing for %s (ID:%d)",GetPName(id),id);
		SendClientMessage(playerid,COLOR_AMSG,xstring);
	}
	return 1;
}


CMD:leavetdm(playerid, params[])
{
	if(Players[playerid][TDMJoined] == false) return SendClientMessage(playerid,-1,"* You're not in TDM minigame. /jointdm to join!");
	else
	{
		SetPlayerVirtualWorld(playerid,0);
		Players[playerid][TDMJoined] = false;
		SpawnPlayer(playerid);
		GameTextForPlayer(playerid,"~g~Left",500,3);
	}
	return 1;
}

CMD:tdmhelp(playerid,params[])
{
	ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Team Deathmatch Help","On a team deathmatch, players are sorted into teams and must fight each other to win.\nOnce a team deathmatch reaches 50 score, the round ends.\n\nCommands:\n/jointdm,/leavetdm,/airdrop","Ok","Cancel");
	return 1;
}

CMD:airdrop(playerid, params[])
{
	if(Players[playerid][TDMJoined] == true)
	{
		if(GetPlayerTeam(playerid) == 1)
		{
			GivePlayerWeapon(playerid,WEAPON:46,1);
		    SetPlayerPos(playerid,353.4177,2507.1814,195.1705);
		    GameTextForPlayer(playerid,"~g~Dropped Over Enemys~n~Base!",500,3);
		}
		else
		{
		    GivePlayerWeapon(playerid,WEAPON:46,1);
            SetPlayerPos(playerid,247.5344,1838.3018,294.2136);
            GameTextForPlayer(playerid,"~g~Dropped Over Enemys~n~Base!",500,3);
		}
	}
	return 1;
}


CMD:jointdm(playerid, params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][TDMJoined] == true) return
	SendClientMessage(playerid,-1,"* You've already joined TDM. "),
	SendClientMessage(playerid,-1,"* /changetdm to change your team! & /leavetdm to leave the TDM");
	else
	{
		if(Players[playerid][God] == true) Players[playerid][God] = false;
		TogglePlayerSpectating(playerid, true);
		SetPlayerCameraPos(playerid,163.6733,1841.8462,60.6406);
		SetPlayerArmour(playerid,100);
		SetPlayerHealth(playerid,100);
		SetPlayerCameraLookAt(playerid,163.6733,1841.8462,17.6406);
		ShowPlayerDialog(playerid,2796,DIALOG_STYLE_LIST,"RxTDM","Auto Assign\nTeam 1\nTeam 2","Select","Leave");
	/*

		*/
		SendClientMessage(playerid,-1,"* You Joined TDM! You can leave TDM any time - /leavetdm");
		SendClientMessage(playerid,-1,"* Commands: /airdrop /changeclass /tdmhelp");
	}
	new str[100],name[20];
	GetPlayerName(playerid,name,sizeof name);
	format(str,sizeof str,"[=!=] Player %s (ID:%d) has joined Team Deathmatch! (/jointdm)",name,playerid);
	SendClientMessageToAll(COLOR_AMSG,str);
	return 1;
}

CMD:war(playerid, params[])
{
	if(Players[playerid][AmRacing] == true || Players[playerid][AmBuilding] == true ) return SendClientMessage(playerid,COLOR_RED,"You cannot use this cmd while racing/building race");
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,-1,"* You've already joined a minigame. ");
	new spawn = random(4);
	switch(spawn)
	{
	    case 0:
	    {
	        SetPlayerPos(playerid,205.7786,2647.7473,16.4877);
			SetPlayerFacingAngle(playerid,218.0557);
	    }

	    case 1:
	    {
	        SetPlayerPos(playerid,299.8577,2554.8755,16.8179);
	        SetPlayerFacingAngle(playerid,167.7896);
	    }

	    case 2:
	    {
     		SetPlayerPos(playerid,317.2473,2554.0605,16.8098);
	        SetPlayerFacingAngle(playerid,186.9031);
	    }

		case 3:
		{
		    SetPlayerPos(playerid,401.8852,2550.6406,16.4425);
	        SetPlayerFacingAngle(playerid,133.3226);
		}

		case 4:
		{
		    SetPlayerPos(playerid,403.7020,2438.3530,16.5000);
	        SetPlayerFacingAngle(playerid,2.4426);
		}
	}
	ResetPlayerWeapons(playerid);
	SetPlayerVirtualWorld(playerid,500);
	SetPlayerArmour(playerid,100);
	SetPlayerHealth(playerid,100);
	SendClientMessage(playerid,-1,"* You Joined War Minigame! Type /leavedm to leave");
	SendClientMessage(playerid,-1,"* AUTOFIX DISABLED");
	new str[100],name[20];
	GetPlayerName(playerid,name,sizeof name);
	format(str,sizeof str,"[=!=] Player %s (ID:%d) has joined War Minigame! (/war)",name,playerid);
	SendClientMessageToAll(COLOR_AMSG,str);
	GivePlayerWeapon(playerid,WEAPON:35,100);
	Players[playerid][autofix] = false;
	Players[playerid][Minigame] = 75;

	switch(Players[playerid][favwpn])
	{
	    case 0:
	    {
			// do nothing
		}
 		case 1..15:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],600);
	  	case 16,17,18:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],10);
		case 22 .. 33:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],800);
		case 34,35:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],20);
		case 37,38:	GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],10000);
		default: GivePlayerWeapon(playerid,WEAPON:Players[playerid][favwpn],300);
	}
	return 1;
}


CMD:changetdm(playerid, params[])
{
	if(Players[playerid][TDMJoined] == false) return SendClientMessage(playerid,-1,"* You're not in TDM minigame. /jointdm to join!");
	else
	{
		ForceClassSelection(playerid);
		GameTextForPlayer(playerid,"~g~[]Select Class[]",500,3);
		SetPlayerHealth(playerid,0);
	}
	return 1;
}

// **************************** DEATHMATCH MINIGAME *********************************

forward countdown2();
public countdown2()
{
	if(CountDown == 4) GameTextForAll("~p~Get Ready",1000,4);

	CountDown--;
	if(CountDown == 0)
	{
		//GameTextForAll("~g~GO~ r~!",1000,4);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i) && Players[i][Minigame] == 22)
			{
			    GameTextForPlayer(i,"~g~Go!",500,3);
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
    			GivePlayerWeapon(i,WEAPON:9,1);
			    GivePlayerWeapon(i,WEAPON:26,500);
			    GivePlayerWeapon(i,WEAPON:30,800);
			    //SendClientMessage(i,COLOR_GREY,"** Deathmatch started.");
			    SetPlayerHealth(i,100);
			    TogglePlayerControllable(i,true);
			}
		}
		CountDown = -1;
		return 0;
	}
	else
	{
		new text[7]; format(text,sizeof(text),"~w~ %d",CountDown);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i) && Players[i][Minigame] == 22)
			{
				PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				GameTextForPlayer(i,text,1000,4);
			}
		}
	 	//GameTextForAll(text,1000,4);
	}

	SetTimer("countdown2",1000,false);
	return 0;
}

/*
CMD:leavedm(playerid, params[])
{
	if(Players[playerid][Minigame] != 22) return SendClientMessage(playerid,-1,"* You've never joined DM. "),
	Players[playerid][Minigame] = 0;
	DM_Members--;
	if(DM_Members == 0)
	{
		SendClientMessageToAll(COLOR_GREY,"** Deathmatch stopped. (Winnner chosen)");
	}
	SpawnPlayer(playerid);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerInterior(playerid,0);
	return 1;
}
*/



// **************************** Last Man Standing************************************



// *****************************************************************************


CMD:disarm(playerid, params[])
{
	if(!IsPlayerAdminLevel(playerid,1)) return 1;
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /disarm <playerid/name>");
	if(IsPlayerConnected(id))
	{
	    new str[100];
		format(str,sizeof str,"Admin %p (ID:%d) disarmed %p (ID:%d)",playerid,playerid,id,id);
		SendMessageToAdminsEx(COLOR_AC,1,str);
		ResetPlayerWeapons(id);
		for (new c = 0; c < 13; c++)
		{
			wps[id][c] =0,  wpa[id][c] = 0;
		}
	}   else SendClientMessage(playerid,COLOR_RED,"** Usage: /disarm <playerid/playername>");
	return 1;
}

CMD:disarmradius(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,1)) return SendClientMessage(playerid,COLOR_RED,"Level 3 Admin Command Only.");
	new radius;
	if(sscanf(params,"D(5)",radius))
	{
		SendClientMessage(playerid,COLOR_RED,"* USAGE: /disarmradius <Radius>");
		SendClientMessage(playerid,COLOR_YELLOW,"- Will disarm weapons from a Player.");
		return 1;
	}
	else
	{
		if(radius <= 0 || radius > 100) return  SendClientMessage(playerid,COLOR_RED,"Invalid Radius! You can only enter a radius between 1 and 100");
		new str[128];
		format(str,sizeof str,"** Admin %p (ID:%d) has disarmed everyone within (Radius: %d)",playerid,playerid,radius);
		SendClientMessage(playerid, COLOR_RED, str);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		for(new i=0; i<MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && i != playerid)
			{
				if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
				{
					ResetPlayerWeapons(i);
					for (new c = 0; c < 13; c++)
					{
						wps[i][c] =0,  wpa[i][c] = 0;
					}
					GameTextForPlayer(i,"~r~DISARMED!",2000,3);
					SendClientMessage(i, COLOR_RED, str);
					PlayerPlaySound(i,1057,0,0,0);
				}
			}
		}
	}
	return 1;
}
CMD:dr(playerid,params[]) return cmd_disarmradius(playerid,params);

CMD:jail(playerid, params[])
{
	if(!IsPlayerAdminLevel(playerid,1)) return 1;
	new id,time,rsn[128];
	if(sscanf(params,"udS[128](No Reason)",id,time,rsn)) return SendClientMessage(playerid,COLOR_RED,"Usage: /jail <id> <time> <reason>");
	if(IsPlayerConnected(id))
	{
	    if(time < 0 || time > 5) return SendClientMessage(playerid,COLOR_RED,"You cannot jail a player for more than 5 minutes.");
		SetPlayerVirtualWorld(id,playerid);
		SetPlayerPos(id,264.7888,77.3418,1001.1096);
		SetPlayerInterior(id,6);
		TogglePlayerControllable(id,false);
		if(!strcmp(rsn, "No Reason", true))
	 	{
	 		format(xstring,sizeof xstring,"Admin %p (ID:%d) jailed %p (ID:%d) (%d minutes)",playerid,playerid,id,id,time);
			SendClientMessageToAll(COLOR_RED,xstring);
	 	}
	 	else
	 	{
	 		format(xstring,sizeof xstring,"Admin %p (ID:%d) jailed %p (ID:%d - %d minutes - %s)",playerid,playerid,id,id,time,rsn);
			SendClientMessageToAll(COLOR_RED,xstring);
	 	}
		Players[id][Minigame] = -1;
		time = time * 60000;
		Players[id][JailTimer] = SetTimerEx("Unjailplayer_Timer",time,false,"d",id);

		PlaySoundForAll(1135);
	}   else SendClientMessage(playerid,COLOR_RED,"Player not connected.");
	return 1;
}

CMD:unjail(playerid, params[])
{
	if(!IsPlayerAdminLevel(playerid,1)) return 1;
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /unjail <playerid/name>");
	if(Players[id][Minigame] == 0 || Players[id][Minigame] > 0)
	{
	    return SendClientMessage(playerid,COLOR_RED,"That player is not jailed.");
	}
	SpawnPlayer(id);
	SetPlayerVirtualWorld(id,0);
	SetPlayerInterior(id,0);
	TogglePlayerControllable(id,true);
	format(xstring,sizeof xstring,"Admin %p (ID:%d) unjailed %p (ID:%d)",playerid,playerid,id,id);
	SendClientMessageToAll(COLOR_GREEN,xstring);
	Players[id][Minigame] = 0;
	KillTimer(Players[id][JailTimer]);
	return 1;
}


CMD:base(playerid,params[])
{
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerPos(playerid,2747.3879,-2467.4287,13.6484);
	SetPlayerFacingAngle(playerid, 293.8101);
	return 1;
}

CMD:base2(playerid,params[])
{
	SetPlayerInterior(playerid,5);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerPos(playerid,322.5118,1117.5066,1083.8828);
	SetPlayerFacingAngle(playerid, 45.7471);
	return 1;
}

CMD:base3(playerid,params[])
{
	SetPlayerInterior(playerid,2);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerPos(playerid,1211.2357,-11.5358,1000.9219);
	SetPlayerFacingAngle(playerid,6.2903);
	return 1;
}


CMD:hideout(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1) || IsVIP(playerid))
	{
		SetPlayerInterior(playerid,12);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerPos(playerid,2324.33,-1144.79,1050.71);
	}
	return 1;
}

CMD:hideout2(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		SetPlayerInterior(playerid,7);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerPos(playerid,239.4193,1023.7311,1088.3085);
	}
	return 1;
}

CMD:hideout3(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerPos(playerid,1615.15,-1498.50,14.23);
	}
	return 1;
}

CMD:hideout4(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerPos(playerid,616.5867,-6.7565,1000.9219);
	}
	return 1;
}

CMD:reconnect(playerid,params[])
{
	new id;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /reconnect <playerid/playername>");
	if(IsPlayerAdminLevel(playerid,5))
	{
	 	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /recoonect <playerid>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant toggle godmode for this admin -their level is higher or equal to yours.");
		new playerIP[32];
        GetPlayerIp(id, playerIP, sizeof(playerIP));
        format(ReconnectIP[id], MAX_IP_SIZE, "%s", playerIP);
        format(xstring, sizeof(xstring), "banip %s", playerIP);
        SendRconCommand(xstring);
        format(xstring, sizeof(xstring), "* Admin %p (ID:%d) has forced %p (ID:%d) to reconnect",playerid,playerid,id,id );
        SendMessageToAdminsEx(COLOR_GREY,1,xstring);
        Reconnecting[id] = true;
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin level 5 to do this.");
	return 1;
}

CMD:heal(playerid,params[])
{
	new id;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /heal <playerid/playername>");
	if(IsPlayerAdminLevel(playerid,1))
	{
	 	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /heal <playerid>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "* Admin %p has healed you.",playerid);
		SendClientMessage(id,COLOR_LIME,xstring);
		format(xstring, sizeof(xstring), "* Healed %p",id);
		SendClientMessage(playerid,COLOR_LIME,xstring);
		SetPlayerHealth(id,100);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
	return 1;
}

CMD:armour(playerid,params[])
{
	new id;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /armour <playerid/playername>");
	if(IsPlayerAdminLevel(playerid,1))
	{
	 	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /heal <playerid>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "* Admin %p has armoured you.",playerid);
		SendClientMessage(id,COLOR_YELLOW,xstring);
		format(xstring, sizeof(xstring), "* You have armoured %p",id);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		SetPlayerArmour(id,100);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be an admin to do this.");
	return 1;
}


CMD:serverstats(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
	{
		new str[100];
		new reg,ban,as;
		mysql_query(SQL,"SELECT * FROM `users`");
		reg = cache_num_rows();
		mysql_query(SQL,"SELECT * FROM `users` WHERE `Banned` = '1'");
		ban = cache_num_rows();
		mysql_query(SQL,"SELECT * FROM `users` WHERE `AdminLvl` > 0");
		as = cache_num_rows();
		format(str,sizeof str,"%d Registered Users (%d Admins) | %d Banned Users",reg,as,ban);
		SendClientMessage(playerid,COLOR_AMSG,str);
	}
	return 1;
}

CMD:takevip(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,5))
	{
		new id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /takevip <playerid/playername>");
		if(IsPlayerConnected(id))
		{
			if(Players[id][VIP] == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, this player is not a VIP");
			Players[id][VIP] = 0;
			format(xstring,sizeof xstring,"* You have been demoted from VIP by Admin %p (ID:%d).",playerid,playerid);
			SendClientMessage(id,COLOR_AMSG,xstring);
			format(xstring,sizeof xstring,"* You have successfully demoted %p (ID:%d) from VIP",id,id);
			SendClientMessage(playerid,COLOR_AMSG,xstring);
		}   else SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	}
	return 1;
}
CMD:takepro(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,5))
	{
		new id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /takepro <playerid/playername>");
		if(IsPlayerConnected(id))
		{
			if(Players[id][VIP] == 0) return SendClientMessage(playerid,COLOR_RED,"* Sorry, this player is not a Pro Member.");
			if(Players[id][VIP] == 1) return SendClientMessage(playerid,COLOR_RED,"* Sorry, this player is a VIP and not a Pro Member.");
			Players[id][VIP] = 0;
			format(xstring,sizeof xstring,"* You have been demoted from Pro Member by Admin %p (ID:%d).",playerid,playerid);
			SendClientMessage(id,COLOR_YELLOW,xstring);
			format(xstring,sizeof xstring,"* You have successfully demoted %p (ID:%d) from Pro Member",id,id);
			SendClientMessage(playerid,COLOR_AMSG,xstring);
		}   else SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	}
	return 1;
}

CMD:rc(playerid,params[]) return cmd_reconnect(playerid,params);
CMD:ga(playerid,params[]) return cmd_giveapple(playerid,params);
CMD:giveapple(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		new id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /giveapple <playerid/playername>");
		if(IsPlayerConnected(id))
		{
            PlaySoundForAll(1057);
		    Players[id][apples]++;
			format(xstring,sizeof xstring,"** Admin %p (ID:%d) has given an apple to %p (ID:%d). Total Apples: %d",playerid,playerid,id,id,Players[id][apples]);
			SendClientMessageToAll(COLOR_RED,xstring);
		}   else SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	}
	return 1;
}

CMD:gar(playerid,params[]) return cmd_giveappleradius(playerid,params);
CMD:giveappleradius(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,1)) return SendClientMessage(playerid,COLOR_RED,"Admin Command Only.");
	new aapples,radius;
	if(sscanf(params,"D(1)D(5)",aapples,radius))
	{
		SendClientMessage(playerid,COLOR_RED,"* USAGE: /giveappleradius <Apples> <Radius>");
		return 1;
	}
	else
	{
		if(radius <= 0 || radius > 500) return  SendClientMessage(playerid,COLOR_RED,"Invalid Radius! You can only enter a radius between 1 and 500");
		if(aapples > 100) return  SendClientMessage(playerid,COLOR_RED,"You cannot give more than 100 apples.");
		new str[128];
		format(str,sizeof str,"** Admin %p (ID:%d) gave %d apples to everyone with a %dm radius",playerid,playerid,aapples,radius);
		SendClientMessage(playerid, COLOR_RED, str);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		for(new i=0; i<MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && i != playerid)
			{
				if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
				{
                    Players[i][apples]+=aapples;
					PlayerPlaySound(i,1057,0,0,0);
				}
			}
		}
	}
	return 1;
}

CMD:go(playerid,params[]) return cmd_giveorange(playerid,params);
CMD:giveorange(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
		new id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /giveorange <playerid/playername>");
		if(IsPlayerConnected(id))
		{
            PlaySoundForAll(1057);
		    Players[id][oranges]++;
			format(xstring,sizeof xstring,"** Admin %p (ID:%d) has given an orange to %p (ID:%d). Total Oranges: %d",playerid,playerid,id,id,Players[id][oranges]);
			SendClientMessageToAll(COLOR_ORANGE,xstring);
		}   else SendClientMessage(playerid,COLOR_RED,"* Player not connected!");

	}
	return 1;
}

CMD:gor(playerid,params[]) return cmd_giveorangeradius(playerid,params);
CMD:giveorangeradius(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,1)) return SendClientMessage(playerid,COLOR_RED,"Admin Command Only.");
	new aapples,radius;
	if(sscanf(params,"D(1)D(5)",aapples,radius))
	{
		SendClientMessage(playerid,COLOR_RED,"* USAGE: /giveorangeradius <Apples> <Radius>");
		return 1;
	}
	else
	{
		if(radius <= 0 || radius > 500) return  SendClientMessage(playerid,COLOR_RED,"Invalid Radius! You can only enter a radius between 1 and 500");
		if(aapples > 100) return  SendClientMessage(playerid,COLOR_RED,"You cannot give more than 100 oranges.");
		new str[128];
		format(str,sizeof str,"** Admin %p (ID:%d) gave %d oranges to everyone with a %dm radius",playerid,playerid, aapples,radius);
		SendClientMessage(playerid, COLOR_RED, str);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		for(new i=0; i<MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && i != playerid)
			{
				if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
				{
                    Players[i][oranges]+=aapples;
					PlayerPlaySound(i,1057,0,0,0);
				}
			}
		}
	}
	return 1;
}


CMD:gaa(playerid,params[]) return cmd_giveallapple(playerid,params);
CMD:giveallapple(playerid,params[])
{
	new amount=1;
	if(sscanf(params,"D(1)",amount)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /giveallapple <amount> (/gao)");
	if(amount > 30) return SendClientMessage(playerid,COLOR_RED,"* You cannot give more than 30 apples.");
	if(IsPlayerAdminLevel(playerid,1))
	{
        PlaySoundForAll(1057);
		for(new i=0; i< MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i)) Players[i][apples]+=amount;
		}
		format(xstring,sizeof xstring,"Admin %p (ID:%d) has given everyone %d apples!",playerid,playerid,amount);
		SendClientMessageToAll(COLOR_ORANGE,xstring);
	}
	return 1;
}


CMD:gao(playerid,params[]) return cmd_giveallorange(playerid,params);
CMD:giveallorange(playerid,params[])
{
	new amount=1;
	if(sscanf(params,"D(1)",amount)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /giveallorange <amount> (/gao)");
	if(amount > 30) return SendClientMessage(playerid,COLOR_RED,"* You cannot give more than 30 oranges.");
	if(IsPlayerAdminLevel(playerid,1))
	{
        PlaySoundForAll(1057);
		for(new i=0; i< MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i)) Players[i][oranges]+=amount;
		}
		format(xstring,sizeof xstring,"Admin %p (ID:%d) has given everyone %d oranges!",playerid,playerid,amount);
		SendClientMessageToAll(COLOR_ORANGE,xstring);
	}
	return 1;
}

CMD:givefake(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new cash[128],id;
		if (sscanf(params, "us",id,cash)) return SendClientMessage(playerid,COLOR_RED,"Usage: /givefake < a fake words>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That player is not online.");
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has given %p (ID:%d] %s",playerid,playerid,id,id,cash);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
			}
		}
	}
	return 1;
}
CMD:giveallfake(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new cash[128];
		if (sscanf(params, "s",cash)) return SendClientMessage(playerid,COLOR_RED,"Usage: /giveallfake <fake words>");
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has given everyone %s",playerid,playerid,cash);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
			}
		}
	}
	return 1;
}


CMD:givevip(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,5))
	{
		new id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /givevip <playerid/playername>");
		if(IsPlayerConnected(id))
		{
		    if(IsAdmin(id)) return SendClientMessage(playerid,COLOR_RED,"** You cannot give yourself/another admin vip.");
			Players[id][VIP] = 1;
			format(xstring,sizeof xstring,"* You are now a VIP Player! (Activated by Admin %p)",playerid);
			SendClientMessage(id,COLOR_AMSG,xstring);
			format(xstring,sizeof xstring,"* You have successfully made %p[%d] as VIP",id,id);
			SendClientMessage(playerid,COLOR_AMSG,xstring);
		}   else SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	}
	return 1;
}
CMD:givepro(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
		new id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /givepro <playerid/playername>");
		if(IsPlayerConnected(id))
		{
		    if(IsAdmin(id)) return SendClientMessage(playerid,COLOR_RED,"** You cannot give yourself/another admin Pro Member Status");
			Players[id][VIP] = 2;
			format(xstring,sizeof xstring,"* You are now a Pro Member! (Activated by Admin %p)",playerid);
			SendClientMessage(id,COLOR_AMSG,xstring);
			format(xstring,sizeof xstring,"* Pro Members have cool features which can be found on /procmds",playerid);
			SendClientMessage(id,COLOR_AMSG,xstring);
			format(xstring,sizeof xstring,"* You have successfully made %p (%d) as a Pro Member",id,id);
			SendClientMessage(playerid,COLOR_AMSG,xstring);
			format(xstring,sizeof(xstring),"* Admin %p (ID:%d) granted Pro Member Status to %p (ID:%d).",playerid,playerid,id,id);
		    Chat_SendMessageToAdmins(COLOR_YELLOW,1,xstring);
		}   else SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	}
	else SendClientMessage(playerid,COLOR_RED,"Sorry, only level 7+ can grant the Pro Member Status");
	return 1;
}

CMD:fav(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	format(xstring,sizeof(xstring),"Admin %p (ID:%d): Don't forget to favorite the server! 15.204.209.239:7777",playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:discord(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	format(xstring,sizeof(xstring),"Admin %p (ID:%d): Join our discord server! http://discord.gg/mCznbcV3va",playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:fav2(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	format(xstring,sizeof(xstring),"Admin %p (ID:%d): Agrega el servidor a tus favoritos! 15.204.209.239:7777",playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:irc(playerid,params[])
{
	if(!IsAdmin(playerid)) 
	{
	    ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"IRC Help","If you want to talk to us outside the server, or talk to people in the server while you are not ingame, you can join our IRC channel:\n\n================================\nServer: irc.tl\nChannel(s): #rxdm","OK","");
		return 1;
	}
	format(xstring,sizeof(xstring),"Admin %p (ID:%d): Join our IRC channel! [server: irc.tl | channel: #rxdm ]",playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:readrules(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	format(xstring,sizeof(xstring),"Admin %p (ID:%d): Make sure you read our /rules! If you don't abide by them you might be kicked or BANNED!",playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}


CMD:nospam(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	format(xstring,sizeof(xstring),"Admin %p (ID:%d): Help keep the chat clean! No spamming! Read the /rules",playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}

CMD:ts(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	format(xstring,sizeof(xstring),"ERROR saloun-126643: TS3 not found.",playerid,playerid);
	SendClientMessage(playerid,COLOR_YELLOW,xstring);
	return 1;
}

CMD:dontask(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	format(xstring,sizeof(xstring),"Admin %p (ID:%d): We don't make random players admins. Do NOT ask to be admin.",playerid,playerid);
	SendClientMessageToAll(COLOR_YELLOW,xstring);
	return 1;
}


CMD:aregister(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	SendClientMessageToAll(COLOR_AMSG,"Don't forget to /register <password> so your stats will save!");
	return 1;
}


CMD:nospawnkill(playerid,params[])
{
	if(!IsAdmin(playerid)) return 0;
	GameTextForAll("~w~Spawnkilling Is~n~NOT ALLOWED",1200,3);
	return 1;
}

CMD:cd(playerid,params[]) return cmd_countdown(playerid,params);
CMD:123(playerid,params[]) return cmd_countdown(playerid,params);

CMD:cdr(playerid,params[]) return cmd_countdownradius(playerid,params);
CMD:countdownradius(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
        if(CountDown == -1)
		{
		    new ra;
			if(sscanf(params,"d",ra)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /cdr <radius>");
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			CountDown = 4;
			if(IsVIP(playerid))
			{
				format(xstring, sizeof(xstring), "VIP %p (ID:%d) has started a countdown within %d meters",playerid,playerid,ra);
			    SendClientMessageToAll(COLOR_WHITE,xstring);
			    SetTimerEx("countdownr",1000,false,"fffd",x,y,z,ra);
			}
			else
			{
			//countdownr(x,y,z,ra);
			format(xstring, sizeof(xstring), "Admin %p (ID:%d) has started a countdown within %d meters",playerid,playerid,ra);
			SendClientMessageToAll(COLOR_WHITE,xstring);
			SetTimerEx("countdownr",1000,false,"fffd",x,y,z,ra);
			}
		}
		else
		{
			SendClientMessage(playerid,COLOR_RED,"Countdown already in progress");
		}
	}
	else
	{
		SendClientMessage(playerid,COLOR_RED,"You must be level 1 admin to do this.");
	}
	return 1;
}



CMD:countdown(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    if(CountDown == -1)
	{
			CountDown = 4;
			if(IsVIP(playerid))
			{
				format(xstring, sizeof(xstring), "VIP %p (ID:%d) has started a countdown.",playerid);
				SendClientMessageToAll(COLOR_WHITE,xstring);
				SetTimer("countdown",1000,false);
			}
			else if(IsVIPLevel2(playerid))
			{
				format(xstring, sizeof(xstring), "Pro Member %p (ID:%d) has started a countdown.",playerid);
				SendClientMessageToAll(COLOR_WHITE,xstring);
				SetTimer("countdown",1000,false);
			}
			else if(IsPlayerAdminLevel(playerid,1))
			{
				format(xstring, sizeof(xstring), "Admin %p (ID:%d) has started a countdown.",playerid,playerid);
				SendClientMessageToAll(COLOR_WHITE,xstring);
				SetTimer("countdown",1000,false);
			}
			else SendClientMessage(playerid,COLOR_RED,"Sorry, only vips/pro members and admins can use this command");
			
			
	}
	else
	{
         SendClientMessage(playerid,COLOR_RED,"Countdown already in progress");
	}
    return 1;
}


CMD:whack(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /whack <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new Float:health;
		GetPlayerHealth(id,health);
		if(Players[playerid][God] == false)
		{
			GetPlayerHealth(id,health);
		}
		if(playerid != id)
			{
			format(xstring, sizeof(xstring), "Admin %p (ID:%d) whacked %p (ID:%d) (%i Health Left)",playerid,playerid,id,id,floatround(health)-10);
            SendClientMessageToAll(COLOR_RED,xstring);
			PlaySoundForAll(1135);
			}
		else
			{
			format(xstring, sizeof(xstring), "Admin %p (ID:%d) whacked themself. (%i Health Left)",playerid,playerid,floatround(health)-10);
			SendClientMessageToAll(COLOR_RED,xstring);
			PlaySoundForAll(1190);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}


CMD:slap(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /whack <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string2[100], pname[20], pname2[20];
		GetPlayerName(playerid, pname, 20);
		GetPlayerName(id, pname2, 20);
		new Float:health;
		GetPlayerHealth(id,health);
		if(Players[playerid][God] == false)
		{
			GetPlayerHealth(id,health);
		}
		if(playerid != id)
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) slapped %s (ID:%d) (%i Health Left)",pname,playerid,pname2,id,floatround(health)-10);
            SendClientMessageToAll(COLOR_RED,string2);
			PlaySoundForAll(1135);
			GameTextForPlayer(id,"~r~SLAPPED!",800,3);
			}
		else
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) slapped themself. (%i Health Left)",pname,playerid,floatround(health)-10);
			SendClientMessageToAll(COLOR_RED,string2);
			PlaySoundForAll(1190);
			GameTextForPlayer(id,"~r~SLAPPED!",800,3);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}

CMD:rape(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /rape <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string2[100], pname[20], pname2[20];
		GetPlayerName(playerid, pname, 20);
		GetPlayerName(id, pname2, 20);
		new Float:health;
		GetPlayerHealth(id,health);
		if(Players[playerid][God] == false)
		{
			SetPlayerHealth(id,health-40);
		}
		if(playerid != id)
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) raped %s (ID:%d) (%i Health Left)",pname,playerid,pname2,id,floatround(health)-10);
            SendClientMessageToAll(COLOR_RED,string2);
			PlaySoundForAll(1135);
			}
		else
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) raped themself. (%i Health Left)",pname,playerid,floatround(health)-10);
			SendClientMessageToAll(COLOR_RED,string2);
			PlaySoundForAll(1190);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}

CMD:makeout(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /makeout <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string2[100], pname[20], pname2[20];
		GetPlayerName(playerid, pname, 20);
		GetPlayerName(id, pname2, 20);
		new Float:health;
		GetPlayerHealth(id,health);
		SetPlayerHealth(id,health+50);
		if(playerid != id)
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) made out with %s (ID:%d) (%i Health Left)",pname,playerid,pname2,id,floatround(health));
            SendClientMessageToAll(COLOR_YELLOW,string2);
			GameTextForPlayer(id,"~g~Hug",1100,3);
			}
		else
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) made out with themself. (%i Health Left)",pname,playerid,floatround(health));
			SendClientMessageToAll(COLOR_YELLOW,string2);
			GameTextForPlayer(playerid,"~g~Hug",1100,3);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}

CMD:lick(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /hug <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string2[100], pname[20], pname2[20];
		GetPlayerName(playerid, pname, 20);
		GetPlayerName(id, pname2, 20);
		new Float:health;
		GetPlayerHealth(id,health);
		SetPlayerHealth(id,health+10);
		if(playerid != id)
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) licked %s (ID:%d) (%i Health Left)",pname,playerid,pname2,id,floatround(health));
            SendClientMessageToAll(COLOR_YELLOW,string2);
			GameTextForPlayer(id,"~g~licked!",1100,3);
			}
		else
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) licked themself. (%i Health Left)",pname,playerid,floatround(health));
			SendClientMessageToAll(COLOR_YELLOW,string2);
			GameTextForPlayer(playerid,"~g~licked!",1100,3);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}

CMD:hug(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /hug <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string2[100], pname[20], pname2[20];
		GetPlayerName(playerid, pname, 20);
		GetPlayerName(id, pname2, 20);
		new Float:health;
		GetPlayerHealth(id,health);
		SetPlayerHealth(id,health+10);
		if(playerid != id)
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) hugged %s (ID:%d) (%i Health Left)",pname,playerid,pname2,id,floatround(health));
            SendClientMessageToAll(COLOR_YELLOW,string2);
			GameTextForPlayer(id,"~g~Hug",1100,3);
			}
		else
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) hugged themself. (%i Health Left)",pname,playerid,floatround(health)-10);
			SendClientMessageToAll(COLOR_YELLOW,string2);
			GameTextForPlayer(playerid,"~g~Hug",1100,3);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}

CMD:kiss(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /kiss <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string2[100], pname[20], pname2[20];
		GetPlayerName(playerid, pname, 20);
		GetPlayerName(id, pname2, 20);
		new Float:health;
		GetPlayerHealth(id,health);
		SetPlayerHealth(id,health+10);
		if(playerid != id)
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) kissed %s (ID:%d) (%i Health Left)",pname,playerid,pname2,id,floatround(health)+10);
            SendClientMessageToAll(COLOR_YELLOW,string2);

			GameTextForPlayer(id,"~g~kiss",1100,3);
			}
		else
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) kissed themself. (%i Health Left)",pname,playerid,floatround(health)-10);
			SendClientMessageToAll(COLOR_YELLOW,string2);
			GameTextForPlayer(playerid,"~g~kiss",1100,3);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}
CMD:touch(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /touch <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string2[100], pname[20], pname2[20];
		GetPlayerName(playerid, pname, 20);
		GetPlayerName(id, pname2, 20);
		new Float:health;
		GetPlayerHealth(id,health);
		SetPlayerHealth(id,health+10);
		if(playerid != id)
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) touched %s (ID:%d) (%i Health Left)",pname,playerid,pname2,id,floatround(health)-10);
            SendClientMessageToAll(COLOR_YELLOW,string2);
			}
		else
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) touched themself. (%i Health Left)",pname,playerid,floatround(health)-10);
			SendClientMessageToAll(COLOR_YELLOW,string2);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}

CMD:usedildo(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /usedildo <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new Float:health;
		GetPlayerHealth(id,health);
		SetPlayerHealth(id,health+10);
		if(playerid != id)
			{
			format(xstring, sizeof(xstring), "Admin %p (ID:%d) used a dildo on %p (ID:%d) (%i Health Left)",playerid,playerid,id,id,floatround(health)-10);
            SendClientMessageToAll(COLOR_YELLOW,xstring);
			}
		else
			{
			format(xstring, sizeof(xstring), "Admin %p (ID:%d) dildo'd themself. (%i Health Left)",playerid,playerid,floatround(health)-10);
			SendClientMessageToAll(COLOR_YELLOW,xstring);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}


CMD:eat(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /eat <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string2[100], pname[20], pname2[20];
		GetPlayerName(playerid, pname, 20);
		GetPlayerName(id, pname2, 20);
		new Float:health;
		GetPlayerHealth(id,health);
		if(Players[playerid][God] == false)
		{
			SetPlayerHealth(id,0);
		}
		if(playerid != id)
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) ate %s (ID:%d) (0 Health Left)",pname,playerid,pname2,id);
            SendClientMessageToAll(COLOR_RED,string2);
			}
		else
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) ate themself. (0 Health Left)",pname,playerid);
			SendClientMessageToAll(COLOR_RED,string2);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}

CMD:farton(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /farton <id>");
	if(IsAdmin(playerid))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string2[100], pname[20], pname2[20];
		GetPlayerName(playerid, pname, 20);
		GetPlayerName(id, pname2, 20);
		new Float:health;
		GetPlayerHealth(id,health);
		if(Players[playerid][God] == false)
		{
			SetPlayerHealth(id,health-10);
		}
		if(playerid != id)
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) farted on %s (ID:%d) (%i Health Left)",pname,playerid,pname2,id,floatround(health)-10);
            SendClientMessageToAll(COLOR_RED,string2);
			}
		else
			{
			format(string2, sizeof(string2), "Admin %s (ID:%d) farted on themself. (%i Health Left)",pname,playerid,floatround(health)-10);
			SendClientMessageToAll(COLOR_RED,string2);
			}
	} else SendClientMessage(playerid,COLOR_RED,"You must be a admin to do this.");
	return 1;
}

CMD:totalcars(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,7))
	{
	    new t = GetVehicleCount();
	    format(xstring,sizeof xstring,"Total Vehicles: %d",t);
	    SendClientMessage(playerid,COLOR_WHITE,xstring);
    }
    return 1;
}

CMD:gw(playerid,params[])
{
	return cmd_giveweapon(playerid,params);
}

CMD:giveweapon(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
	    new tmp2[20],id,wpn,ammo2;
		if(sscanf(params,"us[20]D(100)",id,tmp2,ammo2)) return SendClientMessage(playerid,COLOR_RED,"Usage: /giveweapon <playerid> <weapon name> <optional:ammo>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That player is not online.");
		if(ammo2 < 0)
		{
		    SendClientMessage(playerid,COLOR_RED,"You cannot give negative ammo.");
	        return 1;
		}
		if(ammo2 > 10000 && Players[id][AdminLvl] == 0)
		{
  			SendClientMessage(playerid,COLOR_RED,"You cannot give more than 10,000 ammo to a player.");
			return 1;
		}
	    wpn = GetWeaponIDFromName(tmp2);
		if(!IsValidWeapon(wpn)) return SendClientMessage(playerid,COLOR_RED,"ERROR: Invalid weapon ID");
		if(wpn == 36) return SendClientMessage(playerid,COLOR_RED,"You cannot give players that weapon");
		new wpnname[20];
	 	GetWeaponName(WEAPON:wpn,wpnname,20);
		format(xstring, sizeof(xstring), "You recieved a %s [Ammo %d] from Admin %p (ID:%d)",wpnname,ammo2,playerid,playerid);
		SendClientMessage(id,COLOR_YELLOW,xstring);
        format(xstring, sizeof(xstring), "Success Admin, you gave %p (ID:%d) a %s [Ammo %d]",id,id,wpnname,ammo2);
        SendClientMessage(playerid,COLOR_GREY,xstring);
		PlayerPlaySound(id,1057,0.0,0.0,0.0);
		if(wpn == 38) Players[id][allowmg] = true;
		if(wpn == 35 && ammo2 > 20 && !IsAdmin(id))
		{
			GivePlayerWeapon(id,WEAPON:wpn,20);
			SendClientMessage(playerid,COLOR_RED,"** Rocket Ammo Limit is 20 for non-admins. Ammo has been set to 20.");
	        format(xstring, sizeof(xstring),"Admin %p (ID:%d) has given %p (ID:%d) a %s (%d Ammo)",playerid,playerid,id,id,wpnname,ammo2);
	        SendMessageToAdminsEx(COLOR_AC,1,xstring);
			
			return 1;
		}
		GivePlayerWeapon(id,WEAPON:wpn,ammo2);
        format(xstring, sizeof(xstring),"Admin %p (ID:%d) has given %p (ID:%d) a %s (%d Ammo)",playerid,playerid,id,id,wpnname,ammo2);
        SendMessageToAdminsEx(COLOR_AC,1,xstring);
	}
	return 1;
}

CMD:setmyfw(playerid,params[])
{
	new tmp2[20],wpn;
	if(sscanf(params,"s[20]",tmp2)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setmyfw <weapon name>");
 	wpn = GetWeaponIDFromName(tmp2);
	if(!IsValidWeapon(wpn)) return SendClientMessage(playerid,COLOR_RED,"ERROR: Invalid weapon ID");
	if(wpn == 36 || wpn == 41 || wpn== 42 || wpn == 38 || wpn == 35) return SendClientMessage(playerid,COLOR_RED,"You cannot use this weapon.");
  	new wpnname[21];
	GetWeaponName(WEAPON:wpn,wpnname,20);
	format(xstring, sizeof(xstring), "Your favorite weapon is now a %s",wpnname);
	SendClientMessage(playerid,COLOR_GREY,xstring);
	Players[playerid][favwpn] = wpn;
	return 1;
}

CMD:fw(playerid,params[])
{
	return cmd_setmyfw(playerid,params);
}


CMD:ep(playerid,params[])
{
	return cmd_e(playerid,params);
}

CMD:nuke2(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new Float:e[4];
		GetPlayerPos(playerid,e[1],e[2],e[3]);
		CreateExplosion(e[1],e[2],e[3]+2,0,5);
		CreateExplosion(e[1],e[2],e[3]+4,0,5);
		CreateExplosion(e[1],e[2],e[3]+6,0,5);
		CreateExplosion(e[1],e[2],e[3]+8,0,5);
		CreateExplosion(e[1],e[2],e[3]+10,0,5);
		CreateExplosion(e[1],e[2],e[3]+12,0,5);
		CreateExplosion(e[1],e[2]+2,e[3]+12,0,5);
		CreateExplosion(e[1],e[2]-2,e[3]+12,0,5);
	}
	else
	{ 	SendClientMessage(playerid,COLOR_RED,"You must be admin to explode.");
	}
 	return 1;
}

CMD:nuke(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new Float:e[4];
		GetPlayerPos(playerid,e[1],e[2],e[3]);
		CreateExplosion(e[1],e[2] + 5,e[3],0,5);
		CreateExplosion(e[1],e[2] - 5,e[3],0,5);
		CreateExplosion(e[1],e[2] + 10,e[3],0,5);
		CreateExplosion(e[1],e[2] - 10,e[3],0,5);
		CreateExplosion(e[1],e[2] + 15,e[3],0,5);
		CreateExplosion(e[1],e[2] - 15,e[3],0,5);
		CreateExplosion(e[1],e[2] + 20,e[3],0,5);
		CreateExplosion(e[1],e[2] - 20,e[3],0,5);
		CreateExplosion(e[1] + 5,e[2],e[3],0,5);
		CreateExplosion(e[1] - 5,e[2],e[3],0,5);
		CreateExplosion(e[1] + 10,e[2],e[3],0,5);
		CreateExplosion(e[1] - 10,e[2],e[3],0,5);
		CreateExplosion(e[1] + 15,e[2],e[3],0,5);
		CreateExplosion(e[1] - 15,e[2],e[3],0,5);
		CreateExplosion(e[1] + 20,e[2],e[3],0,5);
		CreateExplosion(e[1] - 20,e[2],e[3],0,5);
		CreateExplosion(e[1],e[2],e[3] + 5,0,5);
	}
	else
	{ 	SendClientMessage(playerid,COLOR_RED,"You must be admin to explode.");
	}
 	return 1;
}

CMD:burn(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"/e <playerid/playername>");
    if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
	if(IsPlayerAdminLevel(playerid,1))
	{
		new Float:e[4];
		GetPlayerPos(id,e[1],e[2],e[3]);
		CreateExplosion(e[1],e[2],e[3],1,5);
		format(xstring,sizeof xstring,"* You used /burn on %p (ID:%d)",id,id);
		SendClientMessage(playerid,COLOR_AMSG, xstring);
		
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /burn on %p (ID:%d)",playerid,playerid,id,id);
	    SendMessageToAdminsEx(COLOR_AC,1,xstring);

	}
	else
	{ 	SendClientMessage(playerid,COLOR_RED,"You must be admin to explode people."); }
 	return 1;
}

CMD:e(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"/e <playerid/playername>");
    if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
	if(IsPlayerAdminLevel(playerid,1))
	{
		new Float:e[4];
		GetPlayerPos(id,e[1],e[2],e[3]);
		CreateExplosion(e[1],e[2],e[3],Players[playerid][explosions],Players[playerid][explosionsr]);
		SendClientMessage(playerid,COLOR_RED,"* Player Exploded. Type /setexplosions (/setep) to change settings.");
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /ep on %p (ID:%d) (Explosion %d - Radius %d)",playerid,playerid,id,id,Players[playerid][explosions],Players[playerid][explosionsr]);
	    SendMessageToAdminsEx(COLOR_AC,1,xstring);

	}
	else
	{ 	SendClientMessage(playerid,COLOR_RED,"You must be admin to explode people."); }
 	return 1;
}

CMD:setexplosions(playerid,params[])
{
	return cmd_setep(playerid,params);
}

CMD:setep(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new type,r;
	if(sscanf(params, "dD(2)",type,r)) return SendClientMessage(playerid,COLOR_RED,"/setep <Explosion Type> <Radius>");
	if(type < 0 || type > 13)
	{
	    SendClientMessage(playerid,COLOR_RED,"* Invalid Explosion Type.");
	    SendClientMessage(playerid,COLOR_RED,"* Explosion types are 0-13.");
	    return 1;
	}
	if(IsPlayerAdminLevel(playerid,1))
	{
	    Players[playerid][explosions] = type;
	    Players[playerid][explosionsr] = r;
		SendClientMessage(playerid,COLOR_RED,"* Explosion Settings Updated.");
		format(xstring,sizeof xstring,"Admin %p (ID:%d) set their explosion type to %d (Radius: %d)",playerid,playerid,type,r);
		SendMessageToAdminsEx(COLOR_AC,1,xstring);
	}
	else
	{
		SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
	}
 	return 1;
}

CMD:vs(playerid,params[]) return cmd_vstats(playerid, params);
CMD:vstats(playerid,params[])
{
	new id;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /vstats <playerid/playername>");
	if(IsPlayerAdminLevel(playerid,1))
	{
		if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /vstats <id>");
		new Float:health,Float:armor;
		GetPlayerHealth(id,health);
		GetPlayerArmour(id,armor);
		new ip[16];
		GetPlayerIp(id,ip,sizeof ip);
		
		format(xstring, sizeof(xstring), "Kills: %d Deaths: %d\nHealth: %i\nWeapon: %s ~ Account Banned: %d",GetPlayerScore(id),Players[id][Deaths],floatround(health),aWeaponNames[GetPlayerWeapon(id)],Players[id][Banned]);
		format(xstring, sizeof(xstring), "%s\nCash: $%d\nLevel: %d\nArmor: %0.1f\nScore: %d\nMinigame: %d ~ Ammo: %d",xstring,GetPlayerMoney(id),Players[id][AdminLvl],armor,GetPlayerScore(id),Players[id][Minigame],GetPlayerAmmo(id));
		format(xstring, sizeof(xstring), "%s\nRaces Won: %d ~ Races Joined: %d\nGod: %s ~ Autofix: %s",xstring,Players[id][RacesWon],Players[id][RacesJoined],IntToBool(Players[id][God]),IntToBool(Players[id][autofix]));
  	 	if(Players[id][PlayTime] > 1440)
		{
			format(xstring, sizeof(xstring),"%s\%n Hours Played: %d (%d Minutes - %d Days)",xstring,Players[id][PlayTime]/60,Players[id][PlayTime],Players[id][PlayTime]/1440);
		}
		else
		{
			format(xstring, sizeof(xstring),"%s\n Hours Played: %d (%d Minutes)",xstring,Players[id][PlayTime]/60,Players[id][PlayTime]);
		}
	   	format(xstring, sizeof(xstring), "%s\n IP: %s ~ Ping: %d ms",xstring, ip,GetPlayerPing(id));

   		ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"Stats",xstring,"OK","");
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used the /vstats command on %p (ID:%d)",playerid,playerid,id,id);
		SendMessageToAdminsEx(COLOR_YELLOW,1,xstring);
	}
	else
	{
		SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
	}
	return 1;
}

/*
CMD:changename(playerid,params[])
{
	new id,newn[20];
	if(sscanf(params,"us[20]",id,newn))
	{
		SendClientMessage(playerid,COLOR_RED,"Usage: /changename New Name>");
		SendClientMessage(playerid,COLOR_RED,"Note that the old account is deleted, and you must login with your new name");
		return 1;
	}
	new msg[120];
	format(msg,sizeof msg,"SELECT * FROM  `users` WHERE  `Name` LIKE  '%s'",newn);
	mysql_query(SQL,msg);
	if(cache_num_rows() != 0 ) return SendClientMessage(playerid,COLOR_RED,"Name Already Exist!");
	if(strlen(newn) > 24) return SendClientMessage(playerid,COLOR_RED,"Name is too long.");
	if(strlen(newn) < 3) return SendClientMessage(playerid,COLOR_RED,"Name is too short.");
	if (Players[id][Logged] == true)
	{
		format(msg, sizeof(msg), "UPDATE `users` SET `Name` = '%s' WHERE `Name` = '%s'",newn,GetPName(id));
		mysql_query(SQL,msg);
	}
	format(msg,sizeof msg,"You changed your name to %s",newn);
	SendClientMessage(playerid,COLOR_GREEN,msg);
	SendMessageToAdmins(playerid,1,COLOR_AMSG,msg);
	format(msg,sizeof msg,"%s (ID:%d) changed their name to %s",GetPName(id),id,newn);
	SendClientMessageToAll(COLOR_WHITE,msg);
	
	format(msg, sizeof(msg), "INSERT INTO `namechanges` (`Name`, `NewName`) VALUES ('%p','%s')",GetPName(id),newn);
	mysql_query(SQL,msg);
	
	SetPlayerName(id,newn);
	
	Save(id);
	return 1;
}
*/


CMD:setname(playerid,params[])
{
	new id,newn[20];
	if(sscanf(params,"us[20]",id,newn))
	{
		SendClientMessage(playerid,COLOR_RED,"Usage: /setname <playerid/playername> <New Name>");
		SendClientMessage(playerid,COLOR_RED,"Note that the old account is deleted (you will have to do this again).");
		return 1;
	}
	if(IsPlayerAdminLevel(playerid,2))
	{
 		new msg[120];
		format(msg,sizeof msg,"SELECT * FROM  `users` WHERE  `Name` LIKE  '%s'",newn);
		mysql_query(SQL,msg);
		if(cache_num_rows() != 0 ) return SendClientMessage(playerid,COLOR_RED,"Name Already Exist!");
		if(strlen(newn) > 24) return SendClientMessage(playerid,COLOR_RED,"Name is too long.");
		if(strlen(newn) < 3) return SendClientMessage(playerid,COLOR_RED,"Name is too short.");
		if (Players[id][Logged] == true)
		{
			format(msg, sizeof(msg), "UPDATE `users` SET `Name` = '%s' WHERE `Name` = '%s'",newn,GetPName(id));
			mysql_query(SQL,msg);
		}
		else SendClientMessage(playerid,COLOR_RED,"* {INFO] This Player Not Registered/Logged in!");
		format(msg,sizeof msg,"You set %s (ID:%d) name to %s",GetPName(id),id,newn);
		SendClientMessage(playerid,COLOR_GREEN,msg);

		if(id != playerid)
		{
			format(msg,sizeof msg,"Admin %s (ID:%d) set %p (ID:%d) name to %s",GetPName(playerid),playerid,id,id,newn);
			SendClientMessageToAll(COLOR_GREEN,msg);
		}
		SetPlayerName(id,newn);
		Save(id);
	}
	return 1;
}

CMD:gaw(playerid,params[])
{
	return cmd_giveallweapon(playerid,params);
}

CMD:giveallweapon(playerid,params[])
{
	//#03EJustin
	if(IsPlayerAdminLevel(playerid,2))
	{
		new tmp[34],id,ammo2;
		if (sscanf(params, "s[34]d",tmp,ammo2)) return SendClientMessage(playerid,COLOR_RED,"Usage: /giveallweapon <weapon name/id> <ammo>");
	    if(!IsNumeric(tmp)) id = GetWeaponIDFromName(tmp); else id = strval(tmp);
		if(!IsValidWeapon(id)) return SendClientMessage(playerid,COLOR_RED,"ERROR: Invalid weapon ID");
		if(id == 36 || id == 45 || id == 44 || id == 43) return SendClientMessage(playerid,COLOR_RED,"You cannot give players that weapon.");
		new string[100],pname[24],wpnname[24];
	 	GetWeaponName(WEAPON:id,wpnname,24);
		GetPlayerName(playerid, pname, 24);
		if(ammo2 < 0)
		{
		    SendClientMessage(playerid,COLOR_RED,"You cannot give negative ammo.");
	        return 1;
		}
		if(ammo2 > 10000 && !IsAdmin(playerid))
		{
  			SendClientMessage(playerid,COLOR_RED,"You cannot give more than 10000 ammo to a player.");
	        return 1;
		}
		format(string, sizeof(string), "Admin %s (ID:%d) has given everyone a %s!",pname,playerid,wpnname);
		SendClientMessageToAll(COLOR_YELLOW,string);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				if(Players[i][AmRacing] == false)
				{
					if(id == 38)
					{
                        Players[i][allowmg] = true;
     				}
   					GivePlayerWeapon(i,WEAPON:id,ammo2);
				} else
				SendClientMessage(i,COLOR_GREY,"* You did not recieve the weapon because you are racing!");
			}
		}
	}
	return 1;
}

CMD:minigunall(playerid,params[])
{
	//#03EJustin
	if(IsPlayerAdminLevel(playerid,2))
	{
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has given everyone a Minigun!",playerid,playerid);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				if(Players[i][AmRacing] == false)
				{
					GivePlayerWeapon(i,WEAPON_MINIGUN,1000);
					Players[i][allowmg] = true;
				} else SendClientMessage(i,COLOR_GREY,"* You did not recieve the weapon because you are racing!");
			}
		}
	}
	return 1;
}


CMD:flamerall(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has given everyone a Flamethrower!",playerid,playerid);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				if(Players[i][AmRacing] == false)
				{
					GivePlayerWeapon(i,WEAPON:37,1000);
				} else SendClientMessage(i,COLOR_GREY,"* You did not recieve the weapon because you are racing!");
			}
		}
	}
	return 1;
}


CMD:giveallweaponradius(playerid,params[])
{
		if(!IsPlayerAdminLevel(playerid,2)) return SendClientMessage(playerid,COLOR_RED,"Level 3 Admin Command Only.");
		new radius,ammo2;
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		new tmp[34],id;
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		if (sscanf(params, "s[34]dd",tmp,radius,ammo2)) return SendClientMessage(playerid,COLOR_RED,"Usage: /giveallweapon <weapon name/id> <radius> <ammo>");
	    if(!IsNumeric(tmp)) id = GetWeaponIDFromName(tmp); else id = strval(tmp);
		if(!IsValidWeapon(id)) return SendClientMessage(playerid,COLOR_RED,"ERROR: Invalid weapon ID");
		if(id == 36 || id == 41 || id == 45 || id == 44 || id == 43 || id == 38) return SendClientMessage(playerid,COLOR_RED,"You cannot give players that weapon.");
		new wpnname[24];
	 	GetWeaponName(WEAPON:id,wpnname,24);
		if(ammo2 < 0)
		{
		    SendClientMessage(playerid,COLOR_RED,"You cannot give negative ammo.");
	        return 1;
		}
		if(ammo2 > 500 && !IsAdmin(id))
		{
  			SendClientMessage(playerid,COLOR_RED,"You cannot give more than 500 ammo to a player.");
	        return 1;
		}
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has given you a %s!",playerid,playerid,wpnname);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
				{
					PlayerPlaySound(i,1057,0.0,0.0,0.0);
					if(Players[i][AmRacing] == false)
					{
					    SendClientMessage(i,COLOR_YELLOW,xstring);
						if(id == 38) SetPVarInt(i,"Minigun",1);
						GivePlayerWeapon(i,WEAPON:id,ammo2);
					} else
					SendClientMessage(i,COLOR_GREY,"* You did not recieve the weapon because you are racing!");
				}
			}
		}
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) gave weapon %s to all players within %d meters of thier location",playerid,playerid,wpnname,radius);
		SendMessageToAdminsEx(COLOR_YELLOW,1,xstring);
		return 1;
}

CMD:gawr(playerid,params[]) return cmd_giveallweaponradius(playerid,params);
CMD:gac(playerid,params[])
{
	return cmd_giveallcash(playerid,params);
}

CMD:giveallcash(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new cash;
		if (sscanf(params, "d",cash)) return SendClientMessage(playerid,COLOR_RED,"Usage: /giveallcash <amount>");
		if(cash > 1000000) return SendClientMessage(playerid,COLOR_RED,"Sorry, the max amount of cash that can be given is 1,000,000");
		if(cash < 0) return SendClientMessage(playerid,COLOR_RED,"You cannot give negative cash.");
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has given everyone $%d",playerid,playerid,cash);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
		 		SetPlayerCash(i, GetPlayerCash(i) + cash);
			}
		}
	}
	return 1;
}

CMD:eha(playerid,params[]) return cmd_enablehydraall(playerid,params);
CMD:enablehydraall(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has enabled hydra spawning for everyone",playerid,playerid);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				Players[i][hydra] = true;
			}
		}
	}
	return 1;
}

CMD:dha(playerid,params[]) return cmd_disablehydraall(playerid,params);
CMD:disablehydraall(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has disabled hydra spawning for everyone",playerid,playerid);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				Players[i][hydra] = false;
			}
		}
	}
	return 1;
}

CMD:era(playerid,params[]) return cmd_enablerhinoall(playerid,params);
CMD:enablerhinoall(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has enabled rhino spawning for everyone",playerid,playerid);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				Players[i][rhino] = true;
			}
		}
	}
	return 1;
}

CMD:dra(playerid,params[]) return cmd_disablerhinoall(playerid,params);
CMD:disablerhinoall(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has disabled rhino spawning for everyone",playerid,playerid);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				Players[i][rhino] = false;
			}
		}
	}
	return 1;
}



CMD:trackp(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: !trackp <playerid/playername>");
		new ip[16];
		if(IsPlayerConnected(id))
		{
	 		GetPlayerIp(id,ip,sizeof ip);
			format(xstring,sizeof xstring,"api.ipinfodb.com/v3/ip-city/?key=%s&ip=%s",IPAPI_KEY,ip);
			HTTP(playerid,HTTP_GET,xstring,"","IPInfoDB_Admin"); // We still use the old one here because it needs a player id
			format(xstring, sizeof(xstring),"Admin %p (ID:%d) used the /trackp command on %p (ID:%d)",playerid,playerid,id,id);
  	        SendMessageToAdminsEx(COLOR_YELLOW,1,xstring);
		}	else SendClientMessage(playerid,COLOR_RED,"That player is not connected..");
	}
	return 1;
}

CMD:dns(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
		new id;
		if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: !dns <playerid/playername>");
		new ip[16];
		if(IsPlayerConnected(id))
		{
	 		GetPlayerIp(id,ip,sizeof ip);
			format(xstring,sizeof xstring,"127.0.0.1/dns.php?ip=%s",ip);
			HTTP(playerid,HTTP_GET,xstring,"","OnDnsLookup");
		}	else SendClientMessage(playerid,COLOR_RED,"That player is not connected..");
	}
	return 1;
}


CMD:bankrupt(playerid,params[])
{
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /bankrupt <playerid/playername>");
	if(IsPlayerAdminLevel(playerid,3))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "Admin %p, You made %p (ID:%d) bankrupt",playerid,id,id);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		ResetPlayerCash(id);
	}
	else
	{
		SendClientMessage(playerid,COLOR_RED,"You must be level 3 to do this.");
	}
	return 1;
}

CMD:setplayercash(playerid,params[])
{
	new id,pcash;
	if(sscanf(params,"ud",id,pcash)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayercash <PlayerID/Name> <Amount>");
	if(pcash > 999999999 || pcash < 0) return SendClientMessage(playerid,COLOR_RED,"Cash Limit: You cannot send more than 999,999,999 Cash, and You cannot send negative cash.");
	if(IsPlayerAdminLevel(playerid,3))
	{
	 	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayercash <playerid> <amount>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "Admin %p, You set %p (ID:%d) cash to $%d",playerid,id,id,pcash);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		ResetPlayerCash(id);
		GivePlayerCash(id,pcash);
	}
	else
	{
		SendClientMessage(playerid,COLOR_RED,"Sorry, Only Admins Level 4 Can use this command.");
	}
	return 1;
}

CMD:sp(playerid,params[])
{
	return cmd_spec(playerid,params);
}

CMD:spk(playerid,params[])
{
	return cmd_setplayerkills(playerid,params);
}

CMD:spc(playerid,params[])
{
	return cmd_setplayercash(playerid,params);
}
CMD:sprw(playerid,params[])
{
	return cmd_setplayerraceswon(playerid,params);
}

CMD:spo(playerid,params[])
{
	return cmd_setplayeroranges(playerid,params);
}


CMD:setplayeroranges(playerid,params[])
{
	new id,kills;
	if(sscanf(params, "ud",id,kills)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayeroranges <playerid/playername> <amount> (/spo)");
	if(IsPlayerAdminLevel(playerid,4))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "*  Admin %p (ID: %d) set your oranges to %d",playerid,playerid,kills);
		SendClientMessage(id,COLOR_YELLOW,xstring);
		format(xstring, sizeof(xstring), "* Admin %p, you successfully set %p oranges to %d",playerid,id,kills);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Players[id][oranges] = kills;
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be level 4 to do this.");
	return 1;
}

CMD:spa(playerid,params[])
{
	return cmd_setplayerapples(playerid,params);
}


CMD:setplayerapples(playerid,params[])
{
	new id,kills;
	if(sscanf(params, "ud",id,kills)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayerapples <playerid/playername> <amount> (/spa)");
	if(IsPlayerAdminLevel(playerid,4))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "*  Admin %p (ID: %d) set your apples to %d",playerid,playerid,kills);
		SendClientMessage(id,COLOR_YELLOW,xstring);
		format(xstring, sizeof(xstring), "* Admin %p, you successfully set %p apples to %d",playerid,id,kills);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Players[id][apples] = kills;
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be level 4 to do this.");
	return 1;
}


CMD:setplayerraceswon(playerid,params[])
{
	new id,kills;
	if(sscanf(params, "ud",id,kills)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayerraceswon <playerid/playername> <amount> (/srw)");
	if(IsPlayerAdminLevel(playerid,4))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "* Your 'Races Won' has been set to %d by Admin %p (ID:%d)",kills,playerid,playerid);
		SendClientMessage(id,COLOR_YELLOW,xstring);
		format(xstring, sizeof(xstring), "* Admin %p, you successfully changed the races won for player %p",playerid,id);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Players[id][RacesWon] = kills;
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be level 4 to do this.");
	return 1;
}

CMD:sppt(playerid,params[])
{
	return cmd_setplayerplaytime(playerid,params);
}

CMD:setplayerplaytime(playerid,params[])
{
	new id,kills;
	if(sscanf(params, "ud",id,kills)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayerplaytime <playerid/playername> <hours> (/spt)");
	if(IsPlayerAdminLevel(playerid,4))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "* Your 'Play Time' has been set to %d hrs by Admin %p (ID:%d)",kills,playerid,playerid);
		SendClientMessage(id,COLOR_YELLOW,xstring);
		format(xstring, sizeof(xstring), "* Admin %p, you successfully changed the play time for player %p",playerid,id);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Players[id][PlayTime] = kills * 60;
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be level 4 to do this.");
	return 1;
}

CMD:sprj(playerid,params[])
{
	return cmd_setplayerracesjoined(playerid,params);
}

CMD:setplayerracesjoined(playerid,params[])
{
	new id,kills;
	if(sscanf(params, "ud",id,kills)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayerracesjoined <playerid/playername> <amount> (/srj)");
	if(IsPlayerAdminLevel(playerid,4))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "* Your 'Races Joined' has been set to %d by Admin %p (ID:%d)",kills,playerid,playerid);
		SendClientMessage(id,COLOR_YELLOW,xstring);
		format(xstring, sizeof(xstring), "* Admin %p, you successfully changed the races joined for player %p",playerid,id);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Players[id][RacesJoined] = kills;
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be level 4 to do this.");
	return 1;
}


CMD:setplayerkills(playerid,params[])
{
	new id,kills;
	if(sscanf(params, "ud",id,kills)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayerkills <playerid/playername> <amount>");
	if(IsPlayerAdminLevel(playerid,4))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "* Your Kills/Score has been set to %d by Admin %p (ID:%d)",kills,playerid,playerid);
		SendClientMessage(id,COLOR_YELLOW,xstring);
		format(xstring, sizeof(xstring), "* Admin %p, you successfully changed the kills for player %p",playerid,id);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Players[id][score] = kills;
		SetPlayerScore(id, Players[id][score]);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be level 4 to do this.");
	return 1;
}

CMD:setplayerscore(playerid,params[])
{
	return cmd_setplayerkills(playerid,params);
}

CMD:spd(playerid,params[])
{
	return cmd_setplayerkills(playerid,params);
}

CMD:spw(playerid,params[])
{
	return cmd_setplayerworld(playerid,params);
}


CMD:setplayerworld(playerid,params[])
{
	new id,kills;
	if(sscanf(params, "ud",id,kills)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayerworld <playerid/playername> <World ID>");
	if(IsPlayerAdminLevel(playerid,4))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "* Admin %p (ID:%d) set your virtual world to %d",playerid,playerid,kills);
		SendClientMessage(id,COLOR_YELLOW,xstring);
		format(xstring, sizeof(xstring), "* Admin %p, you set %p (ID:%d) virtual world to %d",playerid,id,id,kills);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		SetPlayerVirtualWorld(id, kills);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be level 4 to do this.");
	return 1;
}


CMD:setplayerdeaths(playerid,params[])
{
	new id,kills;
	if(sscanf(params, "ud",id,kills)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setplayerdeaths <playerid/playername> <amount>");
	if(IsPlayerAdminLevel(playerid,4))
	{
	 	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setdeaths <playerid> <amount>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "* Admin %p (ID:%d) set your deaths to %d",playerid,playerid,kills);
		SendClientMessage(id,COLOR_YELLOW,xstring);
		format(xstring, sizeof(xstring), "* Admin %p, you set %p (ID:%d) deaths to %d",playerid,id,id,kills);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		Players[id][Deaths] = kills;
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be level 4 to do this.");
	return 1;
}

CMD:setlevel(playerid,params[])
{
	new id,level;
	new aname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, aname, sizeof(aname));
	if(sscanf(params, "ud",id,level)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setlevel <playerid/playername> <level>");
	if(IsPlayerAdminLevel(playerid,7))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Not Connected!");
		if(level > 10 && Players[playerid][AdminLvl] != 10) return SendClientMessage(playerid,COLOR_RED,"Whoops! Only Owners can set higher levels that this.");
		new clevel = Players[id][AdminLvl];
		format(xstring, sizeof(xstring), "* You have been granted Admin Level %d by %p (ID:%d)",level,playerid,playerid);
		SendClientMessage(id,0x99FFCC,xstring);
		format(xstring, sizeof(xstring), "Success, %p (ID:%d) level has been set to %d",id,id,level);
		SendClientMessage(playerid,0x99FFCC,xstring);
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) granted admin level %d for %p (ID:%d)",playerid,playerid,level,id,id);
		SendMessageToAdminsEx(1,0x99FFCC,xstring);
		if(clevel == 0)
		{
		    format(xstring, sizeof(xstring), "Admin %p (ID:%d) granted admin level %d for %p (ID:%d)",playerid,playerid,level,id,id);
		    SendMessageToAdminsEx(1,0x99FFCC,xstring);
			format(xstring, sizeof(xstring), "* You have been promoted to an admin %d by.. %p (ID:%d)",level,playerid,playerid);
		    SendClientMessage(id,0x99FFCC,xstring);
		    format(xstring, sizeof(xstring), "* You can use @ before your text for Admin chat. Your PM Monitoring has been turned on!");
	        SendClientMessage(id,0x99FFCC,xstring);
		    format(xstring, sizeof(xstring), "* There are a lot of useful admin tutorials on our forum! Please read them during your test period.");
		    SendClientMessage(id,0x99FFCC,xstring);
		    
   		}
   		Players[id][readpms] = true;
   		Players[id][AdminLvl] = level;
   		Players[id][VIP] = 0;
   		Save(id);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You are not allowed.");
	return 1;
}
CMD:dnv(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,2)) return SendClientMessage(playerid,COLOR_RED,"Level 4 Admin Command Only.");
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new Float:x,Float:y,Float:z,t;
	for(new i = laststatic+1; i < MAX_VEHICLES; i++)
	{

			GetVehiclePos(i,x,y,z);
			if(IsPlayerInRangeOfPoint(playerid,25,x,y,z) && !IsSeatTaken(i,0)) DestroyVehicleEx(i); t++;
	}
	if(t > 0)
	{
	 	SendClientMessage(playerid,COLOR_ORANGE,"* Success, You destroyed all nearest unoccupied cars.");
		format(xstring,sizeof xstring,"Admin %s (ID:%d) used /dnv to destroy all nearest cars.",GetPName(playerid),playerid);
		SendMessageToAdmins(playerid,1,COLOR_RED,xstring);
		PlayerPlaySound(playerid,1054,0,0,0);
	}   else SendClientMessage(playerid,COLOR_RED,"There was no nearest vehicles to destroy!");
	return 1;
}

CMD:say(playerid,params[]) return cmd_asay(playerid,params);
CMD:asay(playerid,params[])
{
	switch(Players[playerid][AdminLvl])
	{
       case 10:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (Owner %p):{FFFFFF} %s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }
         case 9:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (Management %p): {FFFFFF}%s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }

         case 8:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (High Admin %p): {FFFFFF}%s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }
         case 7:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (High Admin %p): {FFFFFF}%s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }
         case 6:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (Admin %p): {FFFFFF}%s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }
         case 5:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (Admin %p): {FFFFFF}%s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }
         case 4:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (Admin %p): {FFFFFF}%s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }
         case 3:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (Admin %p): {FFFFFF}%s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }
         case 2:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (Admin Recruit %p): {FFFFFF}%s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }
         case 1:
	     {
		   new text[100];
	       if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
		   format(xstring,sizeof xstring,"{FF0000}%d> (Admin Recruit %p): {FFFFFF}%s ",playerid,playerid,text);
     	   SendClientMessageToAll(COLOR_RED,xstring);
         }
    }
    if(IsVIP(playerid))
    {
      new text[100];
      if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/chatsay <Text>");
      format(xstring,sizeof xstring,"VIP %p (ID:%d) said: %s ",playerid,playerid,text);
	  SendClientMessageToAll(COLOR_LIGHTBLUE,xstring);
	}


	return 1;
}

CMD:vsay(playerid,params[]) return cmd_say(playerid,params);
CMD:vipsay(playerid,params[]) return cmd_say(playerid,params);
CMD:prosay(playerid,params[]) return cmd_say(playerid,params);
CMD:psay(playerid,params[]) return cmd_say(playerid,params);
/*CMD:vipsay(playerid,params[])
{
	if(IsVIP(playerid))
	{
		new text[100];
		if(sscanf(params,"s[100]",text)) return SendClientMessage(playerid,COLOR_RED,"/viptsay <Text>");
		format(xstring,sizeof xstring,"[VIP %p (ID:%d) ]{FFFFFF} %s",playerid,playerid,text);
     	SendClientMessageToAll(COLOR_LIGHTBLUE,xstring);
		format(xstring,sizeof xstring,"4VIP %p (ID:%d) sent a chat annoucement:1 %s",playerid,playerid,text);
		IRC_GroupSay(gGroupID,IRC_CHANNEL,xstring);
    }
	return 1;
}
CMD:prosay(playerid,params[])
{
	if(IsVIPLevel2(playerid))
	{
		if(sscanf(params,"s",params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /prosay <your text>");
		format(xstring,sizeof xstring,"** Pro Member %p (ID:%D): %s",playerid,playerid,params);
     	SendClientMessageToAll(COLOR_PURPLE,xstring);
		//format(xstring,sizeof xstring,"VIP %p (ID:%d) sent a chat annoucement:1 %s",playerid,playerid,text);
		//IRC_GroupSay(gGroupID,IRC_CHANNEL,xstring);
    }
	return 1;
}*/


CMD:setarmour(playerid,params[])
{
	new id,h;
	if(sscanf(params, "ud",id,h)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setarmour <playerid/playername> <armour>");
	if(IsPlayerAdminLevel(playerid,3))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Not Connected!");
		format(xstring, sizeof(xstring),"* Success Admin %p (ID:%d) the health for %p (ID:%d) is now %d",playerid,playerid,id,id,h);
		SendClientMessage(playerid,COLOR_GREEN,xstring);
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /setarmour on %p (ID:%d)",playerid,playerid,id,id);
	    SendMessageToAdminsEx(COLOR_AC,1,xstring);
		SetPlayerArmour(id,h);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 or higher.");
	return 1;
}

CMD:setammo(playerid,params[])
{
	new id,h;
	if(sscanf(params, "ud",id,h)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setammo <playerid/playername> <ammo>");
	if(IsPlayerAdminLevel(playerid,3))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Not Connected!");
		new string[90],pname2[21];
		GetPlayerName(id, pname2, 21);
		//SetPlayerAmmo(id,wslot,h);
		GivePlayerWeapon(id,WEAPON:GetPlayerWeapon(id), h);
		format(string, sizeof(string),"* Success, set %s (ID:%d) ammo to %d",pname2,id,h);
		SendClientMessage(playerid,COLOR_GREEN,string);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin level 4 or higher.");
	return 1;
}


CMD:sch(playerid,params[]) return cmd_setcarhealth(playerid,params);
CMD:setcarhealth(playerid,params[])
{
	new id,Float:h;
	if(sscanf(params, "uf",id,h)) return SendClientMessage(playerid,COLOR_RED,"Usage: /setcarhealth <playerid/playername> <health>");
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(h > 1000.0) return SendClientMessage(playerid,COLOR_RED,"Max value is 1000");
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Not Connected!");
		if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Not in a vehicle!");
		new v = GetPlayerVehicleID(id);
		SetVehicleHealth(v, h);
		format(xstring, sizeof(xstring), "* The car health for player %p (ID:%d) was set to %f",id,id,h);
		SendClientMessage(playerid,COLOR_GREEN,xstring);
  		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /setcarhealth on %p (ID:%d)",playerid,playerid,id,id);
	    SendMessageToAdminsEx(COLOR_AC,1,xstring);

	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 or higher.");
	return 1;
}

CMD:sethealth(playerid,params[])
{
	new id,h;
	if(sscanf(params, "ud",id,h)) return SendClientMessage(playerid,COLOR_RED,"Usage: /sethealth <playerid/playername> <health>");
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /sethealth <playerid> <new health>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Not Connected!");
		format(xstring, sizeof(xstring), "* Success Admin %p (ID:%d), the health for %p (ID:%d) is now %d",playerid,playerid,id,id,h);
		SendClientMessage(playerid,COLOR_GREEN,xstring);
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /sethealth on %p (ID:%d)",playerid,playerid,id,id);
	    SendMessageToAdminsEx(COLOR_AC,1,xstring);
		SetPlayerHealth(id,h);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 or higher.");
	return 1;
}
CMD:world(playerid,params[])
{
	if(Players[playerid][AdminLvl] > 0)
	{
		new w;
		if(sscanf(params,"d",w)) return SendClientMessage(playerid,COLOR_RED,"* USAGE: /world <World ID>");
		else
		{
			SetPlayerVirtualWorld(playerid,w);
		    format(xstring, sizeof xstring, "* You have successfully changed your world! (Interior %d ~ VW: %d)",GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
		    SendClientMessage(playerid,COLOR_AMSG,xstring);
			if(IsPlayerInAnyVehicle(playerid))
			{
				LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), w);
			}
		}
	}
	return 1;
}
CMD:setinterior(playerid,params[])
{
	new w;
	if(sscanf(params,"d",w)) return SendClientMessage(playerid,COLOR_RED,"* USAGE: /setinterior <interior ID>");
	if(IsAdmin(playerid) || IsVIP(playerid) || IsVIPLevel2(playerid))
	{
		SetPlayerInterior(playerid,w);
	    format(xstring, sizeof xstring, "* You have successfully changed your interior! (Interior %d ~ VW: %d)",GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
	    SendClientMessage(playerid,COLOR_AMSG,xstring);
		if(IsPlayerInAnyVehicle(playerid))
		{
			LinkVehicleToInterior(GetPlayerVehicleID(playerid),w);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
		}
	}   else SendClientMessage(playerid,COLOR_RED,"* Sorry, you must be a vip or admin to use this command.");
	return 1;
}

CMD:spawn(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
	    new id;
		if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /spawn <playerid/playername>");
		if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant spawn spawn admin - their level is higher or equal to yours.");
        if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That player is not online.");
	//	SetPlayerHealth(id,0); using spawn(playerid); is much bettter
		SpawnPlayer(id);
		GameTextForPlayer(playerid,"~y~ Player Killed",1200,3);
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) used /spawn to spawn %p (ID:%d).",playerid,playerid,id,id);
		SendMessageToAdminsEx(COLOR_RED,1,xstring);
		
	}
	return 1;
}

CMD:kp(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,5))
	{
	    new id;
		if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /kp <playerid/playername>");
		if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant kill this admin - their level is higher or equal to yours.");
        if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That player is not online.");
		SetPlayerHealth(id,0);
		GameTextForPlayer(playerid,"~y~ Player Killed",1200,3);
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) used /kp to kill %p (ID:%d).",playerid,playerid,id,id);
		SendMessageToAdminsEx(COLOR_RED,1,xstring);
	}
	return 1;
}

CMD:crash(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,3))
	{
	    new id;
		if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /crash <playerid/playername>");
		if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant crash this admin - their level is higher or equal to yours.");
        if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That player is not online.");
		CrashPlayer(id);
	    GameTextForPlayer(id, "~r~x~~~~dm-crash~f~a~r~t", 6000, 4);
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) forced %p (ID:%d) to crash/timeout",playerid,playerid,id,id);
		SendMessageToAdminsEx(COLOR_RED,1,xstring);
		
	}
	return 1;
}


CMD:healall(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		format(xstring,sizeof xstring,"Admin %p (ID:%d) has healed everyone!",playerid,playerid);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerHealth(i,100);
			}
		}
	}
	return 1;
}
CMD:hl(playerid,params[])
{
	return cmd_healall(playerid,params);
}
CMD:al(playerid,params[])
{
	return cmd_armorall(playerid,params);
}
CMD:armourall(playerid,params[])
{
	return cmd_armorall(playerid,params);
}


CMD:armorall(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		format(xstring,sizeof xstring,"Admin %s (ID:%d) has armoured everyone!",GetPName(playerid),playerid);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		foreach(new i : Player)
		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerArmour(i,100);
			}
		}
	}
	return 1;
}


CMD:rcmd(playerid,params[])
{
	return cmd_rconcmd(playerid,params);
}

/*
CMD:connectnpcs(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,9))
    {
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		format(xstring,sizeof xstring,"4Admin %s (ID:%d) used /connectnpcs to try to connect 4 npcs",GetPName(playerid),playerid);
		IRC_GroupSay(gGroupID,"#rxdm-management",xstring);
		format(xstring,sizeof xstring,"Admin %s (ID:%d) used /connectnpcs to try to connect 4 npcs",GetPName(playerid),playerid);
		SendMessageToAdmins(playerid,7,COLOR_AMSG,xstring);
		ConnectNPC("Amanda","amanda");
		ConnectNPC("BoatDriver","BoatDriver");
		ConnectNPC("HeliTours","HeliTours");
		ConnectNPC("Grant","Grant");
		ConnectNPC("Pirate","piratebot");
	}
 	return 1;
}
*/

CMD:rconcmd(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,9))
    {
		new cmd[45];
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if (sscanf(params, "s[45]",cmd)) return SendClientMessage(playerid,COLOR_RED,"Usage: /rconcmd <command>");
		format(xstring,sizeof xstring,"Admin %s (ID:%d) sent rcon command %s",GetPName(playerid),playerid,cmd);
		SendMessageToAdmins(playerid,7,COLOR_AMSG,xstring);
		SendRconCommand(cmd);
	}
 	return 1;
}


CMD:rocket(playerid,params[])
{
	return cmd_rpg(playerid,params);
}

CMD:flamer(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
 	{
 	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
  		GivePlayerWeapon(playerid,WEAPON:37,1000);
    	GameTextForPlayer(playerid,"~r~Flamer",500,1);
	    format(xstring, sizeof(xstring),"Admin %p (ID:%d) used the /flamer command",playerid,playerid);
	    SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	    SendClientMessage(playerid,COLOR_RED,"You have a FLAMETHROWER.");
	    PlayerPlaySound(playerid, 1054,0,0,0);
  	}
   	else
   	{
    	if(IsPlayerInAnyDynamicArea(playerid)) return SendClientMessage(playerid,COLOR_RED,"You cannot use this command near spawn.");
		if(Players[playerid][apples] >= 2)
		{
		    Players[playerid][apples] -= 2;
		    GivePlayerWeapon(playerid,WEAPON:37,200);
    		format(xstring, sizeof(xstring),"Player %p (ID:%d) used the /flamer command",playerid,playerid);
	    	SendMessageToAdmins(playerid,2,COLOR_RED,xstring);
	    	GameTextForPlayer(playerid,"~r~flamer",500,1);
	    	PlayerPlaySound(playerid, 1054,0,0,0);
		}   else SendClientMessage(playerid,COLOR_RED,"* You need 2 apples or more!");
   	}
   	return 1;
}

CMD:fex(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
 	{
 	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
  		GivePlayerWeapon(playerid,WEAPON:42,100);
    	GameTextForPlayer(playerid,"~r~Fire Exinguisher.",500,1);
	    format(xstring, sizeof(xstring),"Admin %p (ID:%d) used the /fex command to get a Fire Exinguisher.",playerid,playerid);
	    SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	    SendClientMessage(playerid,COLOR_RED,"You have a Fire Exinguisher. Don't abuse it.");
	    PlayerPlaySound(playerid, 1054,0,0,0);
  	}
   	else if(IsVIP(playerid))
 	{
 	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
  		GivePlayerWeapon(playerid,WEAPON:42,100);
    	GameTextForPlayer(playerid,"~r~Fire Exinguisher.",500,1);
	    format(xstring, sizeof(xstring),"VIP %p (ID:%d) used the /fex command to get a Fire Exinguisher.",playerid,playerid);
	    SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	    SendClientMessage(playerid,COLOR_RED,"You have a Fire Exinguisher.. Don't abuse it.");
	    PlayerPlaySound(playerid, 1054,0,0,0);
  	}
   	return 1;
}

CMD:rpg(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
 	{
 	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
  		GivePlayerWeapon(playerid,WEAPON:35,10000);
    	GameTextForPlayer(playerid,"Free~n~Rocket!",500,1);
	    format(xstring, sizeof(xstring),"Admin %p (ID:%d) has used the command /rocket to get a rocket.",playerid,playerid);
	    SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	    SendClientMessage(playerid,COLOR_RED,"You have a rocket. Don't abuse it.");
	    PlayerPlaySound(playerid, 1054,0,0,0);
  	}
   	else
   	{
   	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
    	if(IsPlayerInAnyDynamicArea(playerid)) return SendClientMessage(playerid,COLOR_RED,"You cannot use this command near spawn.");
		if(Players[playerid][oranges] >= 2)
		{
		    if(Players[playerid][canrocket] == false) return SendClientMessage(playerid,COLOR_RED,"You can only use this command once per spawn!");
		    Players[playerid][canrocket] = false;
		    Players[playerid][oranges] -= 2;
		    GivePlayerWeapon(playerid,WEAPON:35,5);
    		format(xstring, sizeof(xstring),"Player %p (ID:%d) used the /rocket command",playerid,playerid);
	    	SendMessageToAdmins(playerid,2,COLOR_RED,xstring);
	    	GameTextForPlayer(playerid,"~w~Rocket!",500,1);
	    	PlayerPlaySound(playerid, 1054,0,0,0);
	    	SetPlayerChatBubble(playerid,"I got a rocket!",COLOR_WHITE,100,5000);
		}   else SendClientMessage(playerid,COLOR_RED,"* You need 2 oranges or more!");
   	}
   	return 1;
}

CMD:grenades(playerid,params[])
{
	if(Players[playerid][Token] >= 5)
 	{
 	    if(IsPlayerInAnyDynamicArea(playerid)) return SendClientMessage(playerid,COLOR_RED,"You cannot use this command near spawn.");
 	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
        Players[playerid][Token] -= 5;
  		GivePlayerWeapon(playerid,WEAPON:16,15);
    	GameTextForPlayer(playerid,"Grenades",500,1);
	    format(xstring, sizeof(xstring),"%p (ID:%d) used the /grenades command",playerid,playerid);
	    SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	    PlayerPlaySound(playerid, 1054,0,0,0);
  	}
   	else SendClientMessage(playerid,COLOR_RED,"You need more tokens!");
   	return 1;
}



CMD:mg(playerid,params[])
{
	return cmd_minigun(playerid,params);
}

CMD:minigun(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
 	{
 	    if(IsPlayerInAnyDynamicArea(playerid)) return SendClientMessage(playerid,COLOR_RED,"You cannot use this command near spawn.");
		GivePlayerWeapon(playerid,WEAPON:38,10000);
 		GameTextForPlayer(playerid,"Free~n~Minigun!",500,1);
	    format(xstring, sizeof(xstring),"Admin %p (ID:%d) has used the command /mg to get a minigun.",playerid,playerid);
	    SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	    SendClientMessage(playerid,COLOR_RED,"You have a minigun. Don't abuse it.");
  	}
   	else return SendClientMessage(playerid,COLOR_RED,"Must be admin.");
   	return 1;
}

CMD:hsrpg(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,6))
 	{
		GivePlayerWeapon(playerid,WEAPON:36,10000);
 		GameTextForPlayer(playerid,"Free~n~HSRPG!",500,1);
	    format(xstring, sizeof(xstring),"Admin %p (ID:%d) has used the command /hsrpg to get a hsrpg.",playerid,playerid);
	    SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
	    SendClientMessage(playerid,COLOR_RED,"You have a HSRPG. Don't abuse it.");
  	}
   	else return SendClientMessage(playerid,COLOR_RED,"Must be admin level 6");
   	return 1;
}

CMD:dcr(playerid,params[])
{
	return cmd_dcradius(playerid,params);
}

CMD:dcradius(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,3)) return SendClientMessage(playerid,COLOR_RED,"Level 4 Admin Command Only.");
	new Float:x,Float:y,Float:z,t;
	for(new i = 0; i <= GetVehicleCount(); i++)
	{

			GetVehiclePos(i,x,y,z);
			if(IsPlayerInRangeOfPoint(playerid,25,x,y,z) && i >= 67) DestroyVehicleEx(i); t++;
	}
	if(t > 0)
	{
	 	SendClientMessage(playerid,COLOR_ORANGE,"* Success, You destroyed all nearest occupied cars.");
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /dcr to destroy all nearest occupied cars.",playerid,playerid);
		SendMessageToAdmins(playerid,7,COLOR_RED,xstring);
		PlayerPlaySound(playerid,1054,0,0,0);
	}   else SendClientMessage(playerid,COLOR_RED,"There was no nearest vehicles to destroy!");
	return 1;
}

CMD:dc(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
	    new id;
	    if(sscanf(params, "u",id))
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
			    new v = GetPlayerVehicleID(playerid);
				DestroyVehicleEx(v);
				PlayerPlaySound(playerid,1054,0,0,0);
				format(xstring,sizeof xstring,"Admin %p (ID:%d) used /dc to delete their vehicle",playerid,playerid);
				SendMessageToAdmins(playerid,1,COLOR_RED,xstring);
			} 	else SendClientMessage(playerid,COLOR_RED,"Sorry, you dont not have a vehicle that can be deleted!");
		}
		else
		{
		    if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* That player is not connected!");
			if(IsPlayerInAnyVehicle(id))
			{
			    new v = GetPlayerVehicleID(id);
				DestroyVehicleEx(v);
				PlayerPlaySound(id,1054,0,0,0);
				format(xstring,sizeof xstring,"Admin %p (ID:%d) used /dc to delete the vehicle of %p (ID:%d)",playerid,playerid,id,id);
				SendMessageToAdminsEx(COLOR_RED,1,xstring);
			} 	else SendClientMessage(playerid,COLOR_RED,"Sorry, That player does not have a vehicle that can be deleted!");
		}
	}
	return 1;
}

CMD:carkill(playerid,params[])
{
	if(IsAdmin(playerid))
	{
	    new id;
	    if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /carkill <playerid/name>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"Player is not connected!");
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(id,X,Y,Z);
		CreateVehicle(411,X,Y,Z+5,0,2,2,0);
		format(xstring,sizeof xstring,"Dropped a car over %p (ID:%d)",id,id);
		SendClientMessage(playerid,COLOR_RED,xstring);
	}
	return 1;
}

CMD:carkill2(playerid,params[])
{
	if(IsAdmin(playerid))
	{
	    new id;
	    if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /carkill <playerid/name>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"Player is not connected!");
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(id,X,Y,Z);
		for(new i=0;i<300;i++) CreateVehicle(411,X,Y+i,Z+5,0,2,2,0);
		format(xstring,sizeof xstring,"Dropped a car over %p (ID:%d)",id,id);
		SendClientMessage(playerid,COLOR_RED,xstring);
	}
	return 1;
}

CMD:specpolice(playerid,params[])
{
	if(!IsAdmin(playerid)) return 1;
	SetPlayerCameraPos(playerid,-1581.3395,655.9670,23.4370);
	SetPlayerCameraLookAt(playerid,-1612.3026,670.9440,7.1875);
	gSpectateID[playerid] = 200;
	return 1;
}

CMD:spec(playerid,params[])
{
	if(IsAdmin(playerid) || IsVIP(playerid))
	{
	    new specplayerid;
	    if (sscanf(params, "u",specplayerid)) return SendClientMessage(playerid, COLOR_GREY, "USAGE: /spec <playerid/playername>");
		if(!IsPlayerConnected(specplayerid)) return SendClientMessage(playerid, COLOR_RED, "That player is not connected!");
		if(Players[specplayerid][AdminLvl] > Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant Spec this admin -their level is higher or equal to yours.");
		if(gSpectateID[specplayerid] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "You cannot spec a admin who is specing someone!");
		if(Players[specplayerid][Spawned] == false) return SendClientMessage(playerid, COLOR_RED, "You cannot spec that player, they are not spawned!");

		if(Players[playerid][AmRacing] == true) return SendClientMessage(playerid, COLOR_RED, "You cannot be racing and spec !");
		new sn[20];
		GetPlayerName(specplayerid,sn,sizeof(sn));
		TogglePlayerSpectating(playerid, true);
		if(IsPlayerInAnyVehicle(specplayerid))
		{
			PlayerSpectateVehicle(playerid,GetPlayerVehicleID(specplayerid));
			SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specplayerid));
			gSpectateID[playerid] = specplayerid;
			gSpectateType[playerid] = ADMIN_SPEC_TYPE_VEHICLE;
		}
		else
		{
			PlayerSpectatePlayer(playerid, specplayerid);
			SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specplayerid));
		 	gSpectateID[playerid] = specplayerid;
			gSpectateType[playerid] = ADMIN_SPEC_TYPE_PLAYER;
		}
		new gun[24];
		new Float:h,Float:a;
		GetPlayerHealth(specplayerid,h);
		GetPlayerArmour(specplayerid,a);
		GetWeaponName(GetPlayerWeapon(specplayerid),gun,24);
		format(xstring,sizeof(xstring),"~g~Specing %s (ID:%d) ~w~~n~ Type /specoff to stop.",sn,specplayerid);
		GameTextForPlayer(playerid,xstring,3000,3);
	}
	return 1;
}

CMD:specoff(playerid,params[])
{
    if(IsAdmin(playerid) || IsVIP(playerid))
	{
	    if(gSpectateID[playerid] == 200) return SpawnPlayer(playerid);
		if(gSpectateID[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"* You are not specing anyone!");
		TogglePlayerSpectating(playerid, false);
		format(xstring,sizeof xstring,"~r~No longer specing~n~~w~%s (%d)",GetPName(gSpectateID[playerid]),gSpectateID[playerid]);
		GameTextForPlayer(playerid,xstring,1500,3);
		gSpectateID[playerid] = INVALID_PLAYER_ID;
		gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
		SetCameraBehindPlayer(playerid);
	}
	return 1;
}

CMD:ppimv(playerid,params[])
{
	new id,spID=0;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /ppimv <playerid/playername>");
	if(IsPlayerAdminLevel(playerid,1))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"That Player is not in a vehicle!");
		new car = GetPlayerVehicleID(playerid);
		if(!IsSeatTaken(car,1)) spID = 1;
		else if(!IsSeatTaken(car,2)) spID = 2;
		else if(!IsSeatTaken(car,3)) spID = 3;
		else
		{
			SendClientMessage(playerid,COLOR_RED,"Sorry, someone is already in the passanger seat.");
			return 1;
		}
		if(GetPlayerInterior(id) != 0) SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(id,car,spID);
		GameTextForPlayer(playerid,"Teleported",900,4);
		
	    format(xstring, sizeof xstring, "Admin %p (ID:%d) put %p (ID:%d) in their vehicle",playerid,playerid,id,id);
	    SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
	return 1;
}


CMD:ps(playerid,params[])
{
	new id,spID=0;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /ps <playerid/playername>");
	if(IsPlayerAdminLevel(playerid,1))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /ps <playerid>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		if(!IsPlayerInAnyVehicle(id)) return SendClientMessage(playerid,COLOR_RED,"That Player is not in a vehicle!");
		new car = GetPlayerVehicleID(id);
		if(!IsSeatTaken(car,1)) spID = 1;
		else if(!IsSeatTaken(car,2)) spID = 2;
		else if(!IsSeatTaken(car,3)) spID = 3;
		else
		{
			SendClientMessage(playerid,COLOR_RED,"Sorry, someone is already in the passanger seat.");
			return 1;
		}
		if(GetPlayerInterior(id) != 0) SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
		
		PutPlayerInVehicle(playerid,car,spID);
		GameTextForPlayer(playerid,"Teleported",900,4);
		
	    format(xstring, sizeof xstring, "* Admin %p (ID:%d) got in %p (ID:%d) vehicle %d (seat: %d)",playerid,playerid,id,id,car,spID);
	    SendMessageToAdminsEx(COLOR_YELLOW,1,xstring);
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
	return 1;
}

CMD:kick(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
    	new id,rsn[60];
	    if(sscanf(params, "us[60]",id,rsn))
		{
	 		SendClientMessage(playerid,COLOR_RED,"Usage: /kick <playerid/playername> <reason>");
	  		return 1;
		}
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant kick this admin.");
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has kicked %p (ID:%d) for: ( %s ) ",playerid,playerid,id,id,rsn);
		SendClientMessageToAll(COLOR_RED,xstring);
		
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) kicked you. Reason: %s ",playerid,playerid,rsn);
		SendClientMessage(id,COLOR_RED,xstring);
		
		Kick2(id);
		format(xstring,sizeof xstring,"INSERT INTO `kicklog` (`Username`, `Reason`, `KickedBy`) VALUES ('%p','%s','%p')",id,rsn,playerid);
  		mysql_query(SQL,xstring);

		PlaySoundForAll(1136);
		
		if(gSpectateID[playerid] != INVALID_PLAYER_ID)
		{
 			TogglePlayerSpectating(playerid, false);
  			gSpectateID[playerid] = INVALID_PLAYER_ID;
			gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
			SetCameraBehindPlayer(playerid);
		}
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
	return 1;
}

CMD:unmute(playerid,params[])
{
	new id;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /unmute <playerid>");
	if(IsPlayerAdminLevel(playerid,1))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "Admin %p (ID:%d) has unmuted %p (ID:%d).",playerid,playerid,id,id);
		SendClientMessageToAll(COLOR_RED,xstring);
		Players[id][Muted] = false;
		Players[id][MutedBy] = -1;
		Players[id][Spam] = 0;
		KillTimer(Players[id][MuteTimer]);
	}
	else SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
	return 1;
}

CMD:mute(playerid,params[])
{
	new id,time;
	if(sscanf(params, "ud",id,time)) return SendClientMessage(playerid,COLOR_RED,"Usage: /mute <playerid/playername> <optional:time>");
	if(IsPlayerAdminLevel(playerid,1))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
	    if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant mute this admin.");
	    if(time < 0 || time > 10) return SendClientMessage(playerid,COLOR_RED,"Invalid Time! You cannot mute a player longer than 10 minutes.");
		if(time != 0)
		{
  			format(xstring, sizeof(xstring), "Admin %p (ID:%d) has muted %p (ID:%d | %d Minutes)",playerid,playerid,id,id,time);
			Players[id][MuteTimer] = SetTimerEx("UnmutePlayer_Timer",time*60000,false,"d",id);
			SendClientMessageToAll(COLOR_RED,xstring);
			Players[id][MutedBy] = playerid;
		}
		else
		{
			format(xstring, sizeof(xstring), "Admin %p (ID:%d) has muted %p (ID:%d)",playerid,playerid,id,id);
			Players[id][MuteTimer] = SetTimerEx("UnmutePlayer_Timer",60000,false,"d",id);
			SendClientMessageToAll(COLOR_RED,xstring);
			Players[id][MutedBy] = playerid;
		}

		PlaySoundForAll(1090);
		Players[id][Muted] = true;
	}
	else SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
	return 1;
}

CMD:dac(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,3)) return SendClientMessage(playerid,COLOR_RED,"Level 3 Admin Command Only.");
	for(new i = laststatic+1; i < MAX_VEHICLES; i++)
	{
		if(!IsSeatTaken(i,0))
		{
		    if(GetVehicleVirtualWorld(i) != 19 && GetVehicleVirtualWorld(i) != 100)
		    {
				DestroyVehicleEx(i);
			}
		}
	}
 	SendClientMessage(playerid,COLOR_ORANGE,"* Success, You destroyed all unoccupied cars. (This command will no longer delete spawned cars)");
	format(xstring,sizeof xstring,"Admin %p (ID:%d) used /dac to destroy all cars",playerid,playerid);
	SendMessageToAdmins(playerid,1,COLOR_RED,xstring);
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;
}

CMD:rasv(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,3)) return SendClientMessage(playerid,COLOR_RED,"Level 3 Admin Command Only.");
	for(new i = 0; i <= laststatic; i++)
	{
		SetVehicleToRespawn(i);
		LinkVehicleToInterior(i, 0);
		SetVehicleVirtualWorld(i, 0);
	}
 	SendClientMessage(playerid,COLOR_ORANGE,"* Success, You Set all Static VEhicles to respawn.");
	format(xstring,sizeof xstring,"Admin %s (ID:%d) used /rasv to respawn all cars",GetPName(playerid),playerid);
	SendMessageToAdmins(playerid,1,COLOR_RED,xstring);
	PlayerPlaySound(playerid,1054,0,0,0);
	return 1;
}

CMD:unbanlast(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
      	mysql_query(SQL,"SELECT `IPAddress` FROM bans WHERE banID=(SELECT max(banID) from bans)");
		new ip[17];
 		if(cache_num_rows() == 0) return ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"RevolutionX","Error: I Couldn't select the last ban.","OK","");
		cache_get_value_name(0,"IPAddress",ip);  		
		new str[100];
		format(str,sizeof str,"DELETE FROM `bans` WHERE banID=(SELECT max(banID) from bans)");
		mysql_query(SQL,str);
		format(str,sizeof str,"unbanip %s",ip);
		SendRconCommand(str);
  		ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"RevolutionX","Success, i unbanned the last banned player.","OK","");
  	}
	return 1;
}

CMD:wash(playerid,params[]) return cmd_washplayer(playerid,params);
CMD:washplayer(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new id;
		if (sscanf(params, "u",id))
		{
			format(xstring, sizeof(xstring), "Admin %p(ID:%d) washed themself.",playerid,playerid);
			SendMessageToAdminsEx(COLOR_AMSG,3,xstring);
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
	 	 	Players[playerid][Wash] = CreateDynamicObject(3515,x,y,z-4,0,0,0,0,-1,-1);
			Streamer_Update(playerid);
			if(!IsPlayerNPC(id)) TogglePlayerControllable(playerid,false);
			SetTimerEx("Unwash",5000,false,"d",playerid);
			return 1;
		}
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		format(xstring, sizeof(xstring), "Admin %s(ID:%d) has washed %s(ID:%d)",GetPName(playerid),playerid,GetPName(id),id);
		SendMessageToAdminsEx(COLOR_AMSG,3,xstring);
		format(xstring, sizeof(xstring), "Admin %s(ID:%d) has washed you.",GetPName(playerid),playerid);
		SendClientMessage(id,COLOR_RED,xstring);
		new Float:x,Float:y,Float:z;
		GetPlayerPos(id,x,y,z);
		Players[id][Wash] = CreateDynamicObject(3515,x,y,z-4,0,0,0,0,-1,-1);
		Streamer_Update(playerid);
	 	Streamer_Update(id);
		if(!IsPlayerNPC(id)) TogglePlayerControllable(id,false);

		if(!strcmp(GetPName(id), "Amanda", true)) //Checking if the NPC's name is MyFirstNPC
	    {
			new am = GetNPCNameByID("Amanda");
			format(xstring,sizeof xstring,"Amanda [%d]:{FFFFFF} don't touch me %p",am,playerid);
			SendClientMessageToAll(COLOR_PINK, xstring);
	    }

		SetTimerEx("Unwash",5000,false,"d",id);


	}
	else SendClientMessage(playerid,COLOR_RED,"You must be level 3 admin to do this.");
	return 1;
}

forward Unwash(playerid);
public Unwash(playerid)
{
	TogglePlayerControllable(playerid,true);
	DestroyDynamicObject(Players[playerid][Wash]);
	Players[playerid][Wash] = 0;
}


CMD:ban(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
		new id,rsn[40],aname[21];
  		if(sscanf(params, "ds[40]",id,rsn))	return SendClientMessage(playerid,COLOR_RED,"Usage: /ban <playerid> <reason>");
  		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"Player not online");
        if(strlen(rsn) >= 40) return SendClientMessage(playerid,COLOR_RED,"Your reason is too long!");
		if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant ban this admin -their level is higher or equal to yours.");
		GetPlayerName(playerid,aname,sizeof aname);
		format(xstring,sizeof(xstring),"Admin %p (ID:%d) has banned %p (ID:%d) (Reason: %s)",playerid,playerid,id,id,rsn);
		SendClientMessageToAll(COLOR_RED,xstring);
		DCC_SendChannelMessage(DCAdmin,xstring);
		format(xstring,sizeof xstring,"You were banned by Admin %p (ID:%d) for: %s",playerid,playerid,rsn);
		SendClientMessage(id,COLOR_RED,xstring);
		SendClientMessage(id,COLOR_RED,"Want to appeal this ban? Go to http://revolutionxsamp.com/forum and post an appeal");
		if(Players[id][Registered] == true) Players[id][Banned] = true;
		AddPlayerBan(id,rsn,aname);
		BanEx2(id,rsn);
		PlaySoundForAll(1133);
		
		if(gSpectateID[playerid] != INVALID_PLAYER_ID)
		{
 			TogglePlayerSpectating(playerid, false);
  			gSpectateID[playerid] = INVALID_PLAYER_ID;
			gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
			SetCameraBehindPlayer(playerid);
		}
		
	}	else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
	return 1;
}

CMD:givejp(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2))
	{
	    new id;
	    if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"* Usage: /givejp <playerid/name>");
	    if(IsPlayerConnected(id))
	    {
	        new str[72],name[20],pname[20];
	        GetPlayerName(playerid,name,sizeof name);
	        GetPlayerName(id,pname,sizeof pname);
	        format(str,sizeof str,"* You recieved a jetpack from Admin %s (ID:%d)",name,playerid);
	        SendClientMessage(id,COLOR_AMSG,str);
	        format(str,sizeof str,"* You have given %s (ID:%d) a jetpack.",pname,id);
	        SendClientMessage(playerid,COLOR_AMSG,str);
	        SetPlayerSpecialAction(id,SPECIAL_ACTION_USEJETPACK);
	    }
	}	else SendClientMessage(playerid,COLOR_RED,"You must be admin level 4 or higher to do this.");
	return 1;
}
CMD:resetracerecord(playerid,params[])
{
	return cmd_resetttime(playerid,params);
}
CMD:rrr(playerid,params[])
{
	return cmd_resetttime(playerid,params);
}
CMD:jetpack(playerid,params[])
{
	return cmd_jp(playerid,params);
}

CMD:jp(playerid,params[])
{
	if(IsAdmin(playerid) || IsVIP(playerid) || (IsVIPLevel2(playerid)))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"You must get out of your vehicle first.");
		if(IsVIP(playerid) && !IsAdmin(playerid))
		{
			format(xstring,sizeof(xstring),"VIP %p (ID:%d) has used the command /jp (/jetpack).",playerid,playerid);
			SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
			return 1;
		}
		else if (IsVIPLevel2(playerid) && !IsAdmin(playerid))
		{
			format(xstring,sizeof(xstring),"Pro Member %p (ID:%d) has used the command /jp (/jetpack).",playerid,playerid);
			SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
			return 1;
		}

		format(xstring,sizeof(xstring),"Admin %p (ID:%d) has used the command /jp (/jetpack).",playerid,playerid);
		SendMessageToAdmins(playerid,2,COLOR_AMSG,xstring);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
		return 1;
	}

	SendClientMessage(playerid,COLOR_RED,"You must be a admin (or vip) to do this.");
	return 1;
}


CMD:annr(playerid,params[]) return cmd_annradius(playerid, params);
CMD:annradius(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,2)) return SendClientMessage(playerid,COLOR_RED,"Level 2 Admin Command Only.");
	new radius,text[30];
	if(sscanf(params,"D(10)s[30]",radius,text))
	{
		SendClientMessage(playerid,COLOR_RED,"* USAGE: /annradius <Radius> <Text>");
		return 1;
	}
	else
	{
		format(xstring,sizeof xstring,"** Admin %p (ID:%d) announced using the /annradius command (Radius %d)",playerid,playerid,radius);
		SendClientMessage(playerid, COLOR_RED, xstring);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		for(new i=0; i<MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && i != playerid)
			{
				if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
				{
					GameTextForPlayer(i,text,2000,3);
				}
			}
		}
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /annradius (Radius: %d)",playerid,playerid,radius);
		SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	}
	return 1;
}

CMD:a(playerid,params[]) return cmd_ann(playerid,params);
CMD:ann(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
    	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /announce <text>");
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) announced a text to all players: '%s'",playerid,playerid,params);
		SendMessageToAdminsEx(COLOR_YELLOW,1,xstring);
		format(xstring,sizeof xstring,"~w~%s",params);
		return GameTextForAll(xstring,5000,3);
    } else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
}


CMD:tann(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,6))
	{
    	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /tdannounce <text>");
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used the /tann command to announce: %s",playerid,playerid,params);
		SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
		return UpdateMOTD_Text(params);
    } else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
}

CMD:annp(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
	    new user,text[100];
		if(sscanf(params,"us[100]",user,text)) return SendClientMessage(playerid,COLOR_RED,"* /announceplayer <player> <text>");
		if(!IsPlayerConnected(user)) return SendClientMessage(playerid,COLOR_RED,"* Invalid player specified.");
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /annp on %p (ID:%d) to announce: %s",playerid,playerid,user,user,params);
		SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
		return GameTextForPlayer(user,text,3000,3);
    } else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
}

CMD:ann2(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
    	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /announce2 <text>");
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) used /ann2 to announce a text: %s",playerid,playerid,params);
		SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
		return GameTextForAll(params,5000,6);
    } else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
}

CMD:ann3(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
    	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /announce3 <text>");
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) used /ann3 to announce a text: %s",playerid,playerid,params);
		SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
		return GameTextForAll(params,5000,0);
    } else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
}

CMD:ann4(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
    	if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /announce3 <text>");
		format(xstring,sizeof xstring,"* Admin %p (ID:%d) used /ann4 to announce a text: %s",playerid,playerid,params);
		SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
		return GameTextForAll(params,5000,4);
    } else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
}

CMD:gotocoords(playerid, params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
        new Float:x,Float:y,Float:z;
        if(sscanf(params, "fff",x,y,z)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /gotocoords <X> <Y> <Z>");
        SetPlayerPos(playerid, x,y,z);
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /gotocoords to teleport to coords (%f, %f, %f)",playerid,playerid,x,y,z);
		SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
		return SendClientMessage(playerid,COLOR_AMSG,"GOTOCOORDS: Done, teleported to XYZ.");
    } else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
}
CMD:gotocoords2(playerid, params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
        new currentveh;
        new Float:x,Float:y,Float:z,Float:fa;
        if(sscanf(params, "ffff",x,y,z,fa)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /gotocoords2 <X> <Y> <Z> <FA>");
        currentveh = GetPlayerVehicleID(playerid);
        SetVehiclePos(currentveh, x,y,z);
        SetVehicleZAngle(currentveh, fa);
		format(xstring,sizeof xstring,"Admin %p (ID:%d) used /gotocoords to teleport with his vehicle ide %d to coords (%f, %f, %f) and angle (%f)",playerid,playerid,currentveh,playerid,x,y,z,fa);
		SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
		return SendClientMessage(playerid,COLOR_AMSG,"GOTOCOORDS2: Done, teleported your vehicle to XYZ with facing angle.");
    } else return SendClientMessage(playerid,COLOR_RED,"You must be admin to do this.");
}
CMD:g(playerid,params[])
{
	return cmd_goto(playerid,params);
}

CMD:goto(playerid,params[])
{
    if(gSpectateID[playerid] != INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"You are currently Specing a player, can't goto. Use /specoff to exit Spec mode.");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /goto (/g) <playerid>");
    if(IsPlayerAdminLevel(playerid,1))
    {
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That player is not connected.");
		if(gSpectateID[id] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "You cannot teleport to a admin who is specing");
		new string2[100];
	    format(string2, sizeof string2, "~ Teleported to %p (ID:%d). (Interior %d ~ VW: %d)",id,id,GetPlayerInterior(id),GetPlayerVirtualWorld(id));
	    SendClientMessage(playerid,COLOR_AMSG,string2);
	    if(Players[id][AdminLvl] != 0)
	    {
		    format(string2, sizeof string2, "~g~Admin %p (ID:%d)~n~~w~Teleported To You.",playerid,playerid);
		    GameTextForPlayer(id,string2,5000,3);
	    }
	    new Float:X,Float:Y,Float:Z,Float:fa;
	    GetPlayerPos(id,X,Y,Z);
	    GetPlayerFacingAngle(id,fa);
		GotoPosition(playerid,X-2,Y,Z,true);
		if(GetPlayerVirtualWorld(id) != 0) SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
		SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerFacingAngle(playerid, fa);
		SetCameraBehindPlayer(playerid);
		
	}
	else SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this.");
	return 1;
}

CMD:gh(playerid,params[])
{
	return cmd_gethere(playerid,params);
}

CMD:bring(playerid,params[])
{
	return cmd_gethere(playerid,params);
}

CMD:gethere(playerid,params[])
{
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /gethere <playerid>");
    if(IsPlayerAdminLevel(playerid,1))
	{
		if(!strlen(params)) return SendClientMessage(playerid,COLOR_RED,"Usage: /gethere <id>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That player is not connected.");
		if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant bring this admin -their level is higher or equal to yours.");
	    new Float:X,Float:Y,Float:Z,Float:fa;
	    GetPlayerPos(playerid,X,Y,Z);
		GotoPosition(id,X,Y,Z,true);
		GetPlayerFacingAngle(id,fa);
		SetPlayerFacingAngle(playerid, fa);
		if(GetPlayerVirtualWorld(playerid) != 0) SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
		SetPlayerInterior(id,GetPlayerInterior(playerid));
	    format(xstring, sizeof xstring, "Admin %p (ID:%d) used /bring to teleport %p (ID:%d) to them",playerid,playerid,id,id);
	    SendMessageToAdminsEx(COLOR_AMSG,1,xstring);
	    
	}
	else SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this.");
	return 1;
}

CMD:bptp(playerid,params[])
{
    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	new id,going;
	if(sscanf(params,"ui",id,going)) return SendClientMessage(playerid,COLOR_RED,"Usage: /bptp <playerid> <going to>");
    if(IsPlayerAdminLevel(playerid,2))
	{
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That player is not connected.");
        if(!IsPlayerConnected(going)) return SendClientMessage(playerid,COLOR_RED,"That player is not connected.");
		new Float:X,Float:Y,Float:Z;
	    GetPlayerPos(going,X,Y,Z);
		GotoPosition(id,X,Y,Z,true);
		if(GetPlayerVirtualWorld(playerid) != 0) SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(going));
		SetPlayerInterior(id,GetPlayerInterior(going));
	}
	else SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this.");
	return 1;
}

CMD:launch(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
	    new id,Float:pos[3];
		if(sscanf(params,"uF(0)F(0)F(0)",id,pos[0],pos[1],pos[2])) return SendClientMessage(playerid,COLOR_RED,"Usage: /launch <playerid> <x> <y> <z>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That player is not connected.");
		new Float:X,Float:Y,Float:Z;
		if(!IsPlayerInAnyVehicle(id))
		{
  			GetPlayerPos(id,X,Y,Z);
			SetPlayerPos(id,X + pos[0],Y + pos[1],Z + pos[2]);
		}
		else
		{
			new v;
		 	v = GetPlayerVehicleID(playerid);
		 	GetVehiclePos(v,X,Y,Z);
		 	SetVehiclePos(v,X + pos[0],Y + pos[1],Z + pos[2]);
			
		}
	    format(xstring, sizeof xstring, "Admin %p (ID:%d) used /launch on %p (ID:%d)",playerid,playerid,id,id);
	    SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	}
	return 1;
}
CMD:gotoz(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
	    new id,Float:pos[3];
		if(sscanf(params,"uF(0)",id,pos[2])) return SendClientMessage(playerid,COLOR_RED,"Usage: /gotoz <playerid> <Z Limit>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"Player is not connected.");
		new Float:X,Float:Y,Float:Z;
		if(!IsPlayerInAnyVehicle(id))
		{
  			GetPlayerPos(id,X,Y,Z);
			SetPlayerPos(id,X,Y,Z + pos[2]);
		}
		else
		{
			new v;
		 	v = GetPlayerVehicleID(playerid);
		 	GetVehiclePos(v,X,Y,Z);
		 	SetVehiclePos(v,X,Y,Z + pos[2]);

		}
	    format(xstring, sizeof xstring, "Admin %p (ID:%d) used /gotoz on %p (ID:%d) (%f metres)",playerid,playerid,id,id,pos[2]);
	    SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	}
	return 1;
}
CMD:gotox(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
	    new id,Float:pos[3];
		if(sscanf(params,"uF(0)",id,pos[0])) return SendClientMessage(playerid,COLOR_RED,"Usage: /gotox <playerid> <X Limit>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"Player is not connected.");
		new Float:X,Float:Y,Float:Z;
		if(!IsPlayerInAnyVehicle(id))
		{
  			GetPlayerPos(id,X,Y,Z);
			SetPlayerPos(id,X + pos[0],Y,Z);
		}
		else
		{
			new v;
		 	v = GetPlayerVehicleID(playerid);
		 	GetVehiclePos(v,X,Y,Z);
		 	SetVehiclePos(v,X + pos[0],Y,Z);

		}
	    format(xstring, sizeof xstring, "Admin %p (ID:%d) used /gotox on %p (ID:%d) (%f metres)",playerid,playerid,id,id,pos[0]);
	    SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	}
	return 1;
}
CMD:gotoy(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
	    new id,Float:pos[3];
		if(sscanf(params,"uF(0)",id,pos[1])) return SendClientMessage(playerid,COLOR_RED,"Usage: /gotoy <playerid> <Y Limit>");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"Player is not connected.");
		new Float:X,Float:Y,Float:Z;
		if(!IsPlayerInAnyVehicle(id))
		{
  			GetPlayerPos(id,X,Y,Z);
			SetPlayerPos(id,X,Y + pos[1],Z);
		}
		else
		{
			new v;
		 	v = GetPlayerVehicleID(playerid);
		 	GetVehiclePos(v,X,Y,Z);
		 	SetVehiclePos(v,X,Y + pos[1],Z);

		}
	    format(xstring, sizeof xstring, "Admin %p (ID:%d) used /gotoy on %p (ID:%d) (%f metres)",playerid,playerid,id,id,pos[1]);
	    SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
	}
	return 1;
}
CMD:drop2(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
	    new id;
		if(sscanf(params,"u",id))
		{
			new string[60];
			format(string, sizeof(string), "Admin %p (ID:%d) dropped himself.",playerid,playerid);
			SendMessageToAdmins(playerid,1,COLOR_RED,string);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			SetPlayerPos(playerid,X,Y+2,Z+20);
		}
		else
		{
			if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
			if(!IsAdmin(playerid)) return 1;
			new string[100];
			format(string, sizeof(string), "* You Dropped Player %p. (ID:%d)",id,id);
			SendClientMessage(playerid,COLOR_YELLOW,string);
			format(string, sizeof(string), "Admin %p (ID:%d) dropped %p (ID:%d) from 20 Feet above.",playerid,playerid,id,id);
			SendMessageToAdmins(playerid,1,COLOR_RED,string);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(id,X,Y,Z);
			SetPlayerPos(id,X,Y+2,Z+20);
		}
	}
	return 1;
}

CMD:drop(playerid,params[])
{
    if(IsPlayerAdminLevel(playerid,1))
	{
	    new id;
		if(sscanf(params,"u",id))
		{
			new string[60];
			format(string, sizeof(string), "Admin %p (ID:%d) dropped himself.",playerid,playerid);
			SendMessageToAdmins(playerid,1,COLOR_RED,string);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			SetPlayerPos(playerid,X,Y+2,Z+35);
		}
		else
		{
			if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
			if(!IsAdmin(playerid)) return 1;
			new string[100];
			format(string, sizeof(string), "* You Dropped Player %p. (ID:%d)",id,id);
			SendClientMessage(playerid,COLOR_YELLOW,string);
			format(string, sizeof(string), "Admin %p (ID:%d) dropped %p (ID:%d) from 35 Feet above.",playerid,playerid,id,id);
			SendMessageToAdmins(playerid,1,COLOR_RED,string);
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(id,X,Y,Z);
			SetPlayerPos(id,X,Y+2,Z+35);
		}
	}
	return 1;
}



CMD:freeze(playerid,params[])
{
	new id;
	if (sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /freeze <playerid/playername>"); //old = d
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string[75];
		format(string, sizeof(string), "Admin %s(ID:%d) has frozen %s(ID:%d)",GetPName(playerid),playerid,GetPName(id),id);
		SendClientMessageToAll(COLOR_RED,string);
		TogglePlayerControllable(id,false);
	}
	else SendClientMessage(playerid,COLOR_RED,"You must be level 2 admin to do this.");
	return 1;
}

CMD:unfreeze(playerid,params[])
{
	new id;
	if (sscanf(params, "u",id)) return SendClientMessage(playerid,COLOR_RED,"Usage: /unfreeze <playerid/playername>");
	if(IsPlayerAdminLevel(playerid,2))
	{
	    if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Is Not Connected");
		new string[75];
		format(string, sizeof(string), "Admin %s(ID:%d) has unfrozen %s(ID:%d)",GetPName(playerid),playerid,GetPName(id),id);
		SendClientMessageToAll(COLOR_GREEN,string);
		TogglePlayerControllable(id,true);
	}
	return 1;
}

CMD:gm(playerid,params[])
{
	return cmd_god(playerid,params);
}
CMD:god(playerid,params[])
{
	if(IsVIP(playerid))
	{
    	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(Players[playerid][God] == false)
		{
			Players[playerid][God] = true;
			SetPlayerHealth(playerid,100.0+Float:0x7F800000);
			SendClientMessage(playerid,COLOR_GREEN,"GodMode: On");
 			format(xstring, sizeof(xstring),"VIP %p (ID:%d) turned their godmode on.",playerid,playerid);
			SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
			PlayerPlaySound(playerid,1054,0,0,0);
		}
		else
		{
			Players[playerid][God] = false;
			SendClientMessage(playerid,COLOR_GREEN,"GodMode: Off");
 			SetPlayerHealth(playerid,100);
		  	format(xstring, sizeof(xstring),"VIP %p (ID:%d) turned their godmode off.",playerid,playerid);
			SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
			PlayerPlaySound(playerid,1054,0,0,0);
		}
		return 1;
	}
	
	if(IsVIPLevel2(playerid))
	{
		if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
		if(Players[playerid][God] == false)
		{
			Players[playerid][God] = true;
			SetPlayerHealth(playerid,100.0+Float:0x7F800000);
			SendClientMessage(playerid,COLOR_GREEN,"GodMode: On");
 			format(xstring, sizeof(xstring),"Pro Member %p (ID:%d) turned their godmode on.",playerid,playerid);
			SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
			PlayerPlaySound(playerid,1054,0,0,0);
		}
		else
		{
			Players[playerid][God] = false;
			SendClientMessage(playerid,COLOR_GREEN,"GodMode: Off");
 			SetPlayerHealth(playerid,100);
		  	format(xstring, sizeof(xstring),"Pro Member %p (ID:%d) turned their godmode off.",playerid,playerid);
			SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
			PlayerPlaySound(playerid,1054,0,0,0);
		}
		return 1;
	}

	if(IsPlayerAdminLevel(playerid,1))
	{
		new id;
	    if(sscanf(params,"u",id))
	    {
   			if(Players[playerid][God] == false)
			{
				Players[playerid][God] = true;
	   			SetPlayerHealth(playerid,100.0+Float:0x7F800000);
	  			SendClientMessage(playerid,COLOR_GREEN,"GodMode: On");
		  		format(xstring, sizeof(xstring),"Admin %p (ID:%d) turned their godmode on.",playerid,playerid);
				SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
				PlayerPlaySound(playerid,1054,0,0,0);
			}
			else
			{
	  			Players[playerid][God] = false;
	   			SendClientMessage(playerid,COLOR_GREEN,"GodMode: Off");
	     		SetPlayerHealth(playerid,100);
			  	format(xstring, sizeof(xstring),"Admin %p (ID:%d) turned their godmode off.",playerid,playerid);
				SendMessageToAdmins(playerid,1,COLOR_AMSG,xstring);
				PlayerPlaySound(playerid,1054,0,0,0);
			}
	    }
	    else
	    {
            if(Players[id][AdminLvl] >= Players[playerid][AdminLvl]) return SendClientMessage(playerid,COLOR_RED,"You cant toggle godmode for this admin -their level is higher or equal to yours.");
	        if(IsPlayerConnected(id))
	        {
				if(Players[id][God] == false)
				{
					Players[id][God] = true;
		   			SetPlayerHealth(id,100);
					new str[75],name[20],name1[20];
					GetPlayerName(id,name1,sizeof name1);
		 			GetPlayerName(playerid,name,sizeof name);
		 			format(str, sizeof(str),"Admin %s (ID:%d) Enabled Temporary GodMode for you.",name,playerid);
					SendClientMessage(id,COLOR_AMSG,str);
			  		format(str, sizeof(str),"Admin %s (ID:%d) Enabled GodMode for %s (ID:%d)",name,playerid,name1,id);
					SendMessageToAdmins(playerid,1,COLOR_AMSG,str);
	  				format(str, sizeof(str),"Enabled GodMode for %s (ID:%d)",name1,id);
					SendClientMessage(playerid,COLOR_AMSG,str);
					PlayerPlaySound(playerid,1054,0,0,0);
					SetPlayerChatBubble(id,"A Admin Enabled Godmode for me!",COLOR_YELLOW,100,5000); //2 mins
				}
				else
				{
		  			Players[id][God] = false;
		   			SendClientMessage(playerid,COLOR_GREEN,"GodMode: Off");
		     		SetPlayerHealth(id,100);
		       		new str[75],name[20],name1[20];
		        	GetPlayerName(playerid,name,sizeof name);
		        	GetPlayerName(id,name1,sizeof name1);
					format(str, sizeof(str),"Admin %s (ID:%d) Disabled Temporary GodMode for you.",name,playerid);
					SendClientMessage(id,COLOR_AMSG,str);
			  		format(str, sizeof(str),"Admin %s (ID:%d) Disabled GodMode for %s (ID:%d)",name,playerid,name1,id);
					SendMessageToAdmins(playerid,1,COLOR_AMSG,str);
 					format(str, sizeof(str),"Disabled GodMode for %s (ID:%d)",name1,id);
					SendClientMessage(playerid,COLOR_AMSG,str);
					PlayerPlaySound(playerid,1054,0,0,0);
					SetPlayerChatBubble(id,"A Admin disabled my godmode!",COLOR_YELLOW,100,5000); //2 mins
				}
			}   else SendClientMessage(playerid,COLOR_RED,"That player is not connected!");
		}
	}
	else return SendClientMessage(playerid,COLOR_RED,"You must be admin level 3 to do this");
	return 1;
}
/* ----------------------------- Rx Token System CMDS ---------------------------- */

CMD:token(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	ShowPlayerDialog(playerid,2799,DIALOG_STYLE_LIST,"Tokens","Weapons (-500 Tokens)\nVehicles(-5000/10000 Tokens)","Select","Close");
	return 1;
}
CMD:rt(playerid,params[]) return cmd_token(playerid,params);

CMD:mytoken(playerid,params[])
{
	new t[64],id;
	if(sscanf(params,"u",id))
	{
		format(t,sizeof t,"* You currently have %d RxToken(s).",Players[playerid][Token]);
		SendClientMessage(playerid,COLOR_YELLOW,t);
	}
	else
	{
		format(t,sizeof t,"* Player %p has %d RxToken(s)",id,Players[id][Token]);
		SendClientMessage(playerid,COLOR_YELLOW,t);
	}
	return 1;
}
CMD:mrt(playerid,params[]) return cmd_mytoken(playerid,params);

CMD:settoken(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,3)) return SendClientMessage(playerid,COLOR_RED,"Level 6 Admin Command Only.");
	new id,token;
	if(sscanf(params,"ud",id,token))
	{
		SendClientMessage(playerid,COLOR_RED,"* USAGE: /settoken <id> <token>");
		SendClientMessage(playerid,COLOR_YELLOW,"- Don't Abuse it by giving your own token value.");
	}
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"That Player Not Connected!");
	else
	{
		SetToken(id,token);
		format(xstring,sizeof xstring,"* You set the tokens for %p (ID:%d) to %d",id,id,token);
		SendClientMessage(playerid,COLOR_YELLOW,xstring);
		format(xstring,sizeof xstring,"* Your tokens have been set to %d by Admin %p (ID:%d)",token,playerid,playerid);
		SendClientMessage(id,COLOR_YELLOW,xstring);
	}
	return 1;
}

CMD:buytokens(playerid,params[])
{
	new amount;
	if(sscanf(params,"d",amount))
	{
		SendClientMessage(playerid,COLOR_RED,"* Usage: /buytokens <amount>");
		SendClientMessage(playerid,COLOR_RED,"* Allows you to trade tokens for cash.");
	    return 1;
	}
	if( amount >= 100000 ) return SendClientMessage(playerid,COLOR_RED,"* Maximum Amount of token can be bought is 99999 tokens only");
	if( amount < 0 ) return SendClientMessage(playerid,COLOR_RED,"* Minimum Amount of token can be bought is 1 token");
	new cashneeded = amount * 10000;
	new str[100];
	if(GetPlayerCash(playerid) >= cashneeded)
	{
	    // can transact
	    Players[playerid][Token] += amount;
	    TakePlayerCash(playerid,cashneeded);
	    format(str,sizeof str,"[&] You bought %d tokens for $%d",amount,cashneeded);
	    SendClientMessage(playerid,COLOR_LIGHTBLUE,str);
		SetToken(playerid,Players[playerid][Token]);
		if(Players[playerid][AC_MoneyAlerts] > 0)
		{
		    new pname1[21];
		    GetPlayerName(playerid,pname1,sizeof pname1);
			format(str,sizeof(str),"AC (Warning): Detected Illegal Tokens(By %s (ID:%d))",pname1,playerid);
			SendMessageToAdmins(playerid,2,COLOR_AC,str);
			return 1;
		}
	}
	else
	{
	    format(str,sizeof str,"[&] You need more money! ($%d)",cashneeded);
     	SendClientMessage(playerid,COLOR_RED,str);
	}
	return 1;
}
CMD:gat(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,2)) return SendClientMessage(playerid,COLOR_RED,"Level 3 Admin Command Only.");
	new tokens;
	if(sscanf(params,"d",tokens))
	{
		SendClientMessage(playerid,COLOR_RED,"* USAGE: /givealltokens <tokens>");
		SendClientMessage(playerid,COLOR_YELLOW,"- Will give all players the tokens.");
		return 1;
	}
 	if(tokens < 0) return SendClientMessage(playerid,COLOR_RED,"* You cannot give negative tokens.");
 	if(tokens > 20) return SendClientMessage(playerid,COLOR_RED,"* You cannot give more than 20 tokens at a time.");
	PlaySoundForAll(1057);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
				GiveToken(i,tokens);
		}
	}
	new str[75],name[21];
	GetPlayerName(playerid,name,sizeof name);
	format(str,sizeof str,"** Admin %s (ID:%d) has given everyone %d tokens.",name,playerid,tokens);
	SendClientMessageToAll(COLOR_PURPLE,str);
	SendClientMessageToAll(COLOR_PURPLE,"** To learn more about Tokens, type /thelp.");
	return 1;
}
CMD:givetoken(playerid,params[])
{
    new tokens,id;
	if(!IsPlayerAdminLevel(playerid,2)) return SendClientMessage(playerid,COLOR_RED,"Level 3 Admin Command Only.");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* Player is NOT Connected");
	if(sscanf(params,"ud",id,tokens))
	{
		SendClientMessage(playerid,COLOR_RED,"* USAGE: /givetoken <playerid> <tokens>");
		SendClientMessage(playerid,COLOR_RED,"- Will give tokens to a Player.");
		return 1;
	}
	else
	{
	    if(tokens <= 0) return SendClientMessage(playerid,COLOR_RED,"* You cannot give negative tokens (or 0)");
     	if(tokens > 20) return SendClientMessage(playerid,COLOR_RED,"* You cannot give more than 20 tokens at a time.");
		GiveToken(id,tokens);
		GameTextForPlayer(id,"~g~Token!",2000,3);
		if(tokens > 1)
		{
            PlaySoundForAll(1057);
			format(xstring,sizeof xstring,"** Admin %p (ID:%d) has given %d tokens to %p (ID:%d). Total Tokens: %d",playerid,playerid,tokens,id,id,Players[id][Token]);
			SendClientMessageToAll(COLOR_PURPLE,xstring);
			SendClientMessage(id,COLOR_PURPLE,"** To learn more about Tokens, type /thelp.");
		}
		else
		{
            PlaySoundForAll(1057);
			format(xstring,sizeof xstring,"** Admin %p (ID:%d) has given %d token to %p (ID:%d). Total Tokens: %d",playerid,playerid,tokens,id,id,Players[id][Token]);
			SendClientMessageToAll(COLOR_PURPLE,xstring);
			SendClientMessage(id,COLOR_PURPLE,"** To learn more about Tokens, type /thelp.");
		}
	}
	return 1;
}

CMD:gt(playerid,params[]) return cmd_givetoken(playerid,params);
CMD:givetokenradius(playerid,params[])
{
    if(!IsPlayerAdminLevel(playerid,1)) return SendClientMessage(playerid,COLOR_RED,"Level 1 Admin Command Only.");
	new radius,tokens;
	if(sscanf(params,"dd",tokens,radius))
	{
		SendClientMessage(playerid,COLOR_RED,"* USAGE: /givetokenradius <tokens> <Radius>");
		SendClientMessage(playerid,COLOR_YELLOW,"- Will give tokens to a Player.");
		return 1;
	}
	if(tokens > 100) return SendClientMessage(playerid,COLOR_RED,"You cannot give more than 100 tokens.");
	else
	{
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		for(new i=0; i<MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsPlayerInRangeOfPoint(i, radius, x, y, z))
				{
					GiveToken(i,tokens);
					GameTextForPlayer(i,"~g~Token!",2000,3);
					PlayerPlaySound(i,1057,0,0,0);
				}
			}
		}
		format(xstring,sizeof xstring,"Admin %p (ID:%d) gave %d tokens to players within a %d radius",playerid,playerid,tokens,radius);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
	}
	return 1;
}

CMD:gtr(playerid,params[]) return cmd_givetokenradius(playerid,params);
CMD:givealltokens(playerid,params[])
{
	cmd_gat(playerid,params);
	return 1;
}

CMD:srt(playerid,params[]) return cmd_settoken(playerid,params);

CMD:thelp(playerid,params[])
{
	ShowPlayerDialog(playerid,11,DIALOG_STYLE_MSGBOX,"Rx Token Help","{808080}RxToken {FFFFFF}is one of the feature in Revolution-X where you can earn/use tokens.\n~~~ {FFD700}Earning Token{FFFFFF} ~~~\n	- + Tokens per kill\n	- + Tokens per Money Bag Find\n	- + Tokens per Race Wins\n~~~ {FF4500}Using Token{FFFFFF} ~~~\n	COMMAND: /token, /buytokens\n	- Buy Dynamic Weapons\n	- Buy Dynamic vehicles with Limited one Spawn\n	- Buy Dynamic vehicles with Unlimited Spawn for some minutes","Ok","Cancel");
	return 1;
}


CMD:loadrace(playerid,params[])
{
	if(!IsAdmin(playerid)) return 1;
	new R_Namex[24];
	if(RaceRotation == true) return SendClientMessage(playerid,COLOR_RED,"*** Please /racerotation to stop race rotation before using this cmd!");
	if(sscanf(params,"s[24]",R_Namex)) return SendClientMessage(playerid,COLOR_RED,"*** /loadrace <Race Name>");
	else return LoadRace(playerid,R_Namex);
}

CMD:race(playerid,params[])
{
	//if(!IsAdmin(playerid)) return SendClientMessage(playerid,COLOR_RED,": You are not authorized to perform this operation.");
	if(RaceActive == true)
	{
		SendClientMessage(playerid,COLOR_RED,"*** Error: Race Already in-process.");
		if(IsAdmin(playerid)) SendClientMessage(playerid,COLOR_RED,"** Note: You can end it by using /endrace");
		return 1;
	}
	else if(StartRace() == 1)
	{
		new str[100];
		format(str,sizeof str,"Player %p (ID:%d) used /race to start a race.",playerid,playerid);
		DCC_SendChannelMessage(DCGen,str);
	}
	return 1;
}

CMD:join(playerid,params[])
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(gSpectateID[playerid] != INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"You are currently Specing a player, can't join. Use /specoff to exit Spec mode.");
	if(Players[playerid][AmBuilding] == true) return SendClientMessage(playerid,COLOR_RED,"You are currently building a race, can't join. Use /clearrace to exit build mode.");
	if(RaceActive==true)
	{
		if(RaceStart == false)
		{
			if(OnRaceCD == false)
			{
				if(Players[playerid][AmRacing] == false)
				{
				    DisableRemoteVehicleCollisions(playerid,true);
					ResetPlayerWeapons(playerid);
					Players[playerid][Minigame] = 140;
					SetPlayerInterior(playerid, R_Interior);
					SetPlayerVirtualWorld(playerid,0);
					format(xstring,sizeof xstring,"** Joined race '%s'. Good luck!",R_Name);
					SendClientMessage(playerid, COLOR_PINK,xstring);
					SendClientMessage(playerid, COLOR_PINK,"** Warning: Using Rockets here will get you banned. No Shooting Racers (You may driveby while racing)");
					SendClientMessage(playerid, COLOR_PINK,"** Tips: Be aware of corners and anytime, you can /leave to leave the race");
					if(bombrace == 1) SendClientMessage(playerid, COLOR_ORANGE,"** Tips: This is a death race. You can fire rockets with FIRE button");
					format(xstring,sizeof xstring,"~g~Joined Race~n~~w~'%s'",R_Name);
					GameTextForPlayer(playerid,xstring,1000,3);
					MyCurrentCP[playerid] = 0;
					Players[playerid][AmRacing] = true;
					Players[playerid][Minigame] = 140;
					if(!IsPlayerInAnyVehicle(playerid))
					{

						SetPlayerPos(playerid,CPs[0][0],CPs[0][1],CPs[0][2]);
						SetPlayerFacingAngle(playerid,CPs[0][3]);
					}
					else
					{
						DestroyVehicleEx(GetPlayerVehicleID(playerid));
						SetPlayerPos(playerid,CPs[0][0],CPs[0][1],CPs[0][2]);
						SetPlayerFacingAngle(playerid,CPs[0][3]);
					}
					new Float:angle;
					new color = random(125);
					GetPlayerFacingAngle(playerid,angle);
					SetPlayerPos(playerid,CPs[0][0],CPs[0][1],CPs[0][2]);
					SetPlayerFacingAngle(playerid,CPs[0][3]);
					new car = CreateVehicle(VehicleID,CPs[0][0],CPs[0][1],CPs[0][2]+1,angle,color,color,0);
					PutPlayerInVehicle(playerid,car,0);
					if(IsPlayerInAnyVehicle(playerid)) { SetPlayerInterior(playerid, R_Interior); LinkVehicleToInterior(GetPlayerVehicleID(playerid),R_Interior); }
					TotalRacers++;
					SetPlayerInterior(playerid, R_Interior);
					SetPlayerRaceCheckpoint(playerid, CP_TYPE:0, CPs[MyCurrentCP[playerid]][0], CPs[MyCurrentCP[playerid]][1], CPs[MyCurrentCP[playerid]][2], CPs[MyCurrentCP[playerid]+1][0], CPs[MyCurrentCP[playerid]+1][1], CPs[MyCurrentCP[playerid]+1][2], CPsize[MyCurrentCP[playerid]]);

					SpeedBoostDisabled[playerid] = true;

					if(R_Weather != 0) SetPlayerWeather(playerid, R_Weather);
					
					//SetVehiclePos(car,CPs[0][0],CPs[0][1],CPs[0][2]);
				}
				else SendClientMessage(playerid, COLOR_YELLOW, "You've already joined the race!");
			}
			else return SendClientMessage(playerid,COLOR_RED,"Unable to join at this time: Race Countdown in progress.");
		}
		else return SendClientMessage(playerid,COLOR_RED,"Unable to join at this time: RACE in progress.");
	}
	else  return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
	return 1;
}

CMD:leave(playerid,params[])
{
	if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
	if(Players[playerid][AmRacing] == true)
	{
	    if(OnRaceCD == true)
		{
			SendClientMessage(playerid,COLOR_RED,"Unable to leave at this time: Countdown in progress.");
			return 1;
		}
		if(IsValidDynamic3DTextLabel(racelabel[playerid]))  DestroyDynamic3DTextLabel(racelabel[playerid]);
		DisablePlayerRaceCheckpoint(playerid);
		SpeedBoostDisabled[playerid] = false;
		RemovePlayerMapIcon(playerid, 56);
		format(xstring,sizeof xstring,"~g~Left Race~n~~w~'%s'",R_Name);
		GameTextForPlayer(playerid,xstring,1000,3);
		TotalRacers--;
		Players[playerid][Minigame] = 0;
		TotalRacersCur--;
		MyCurrentCP[playerid]=0;
		Players[playerid][AmRacing] = false;
		SendClientMessage(playerid,COLOR_YELLOW,"You have left the race.");
		Players[playerid][Collisions] = false;
	}
	else return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
	return 1;
}
CMD:forceleave(playerid,params[])
{
	if(!IsAdmin(playerid)) return 1;
	new r__id;
	if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
	if(sscanf(params,"u",r__id)) return SendClientMessage(playerid, COLOR_RED, "*** USAGE: /forceleave <player id/name>");
	else
	{
		if(Players[r__id][AmRacing] == true)
		{
			if(OnRaceCD == true)
			{
				SendClientMessage(playerid,COLOR_RED,"Unable to FORCELEAVE at this time: Countdown in progress.");
				return 1;
			}
			if(IsValidDynamic3DTextLabel(racelabel[r__id]))  DestroyDynamic3DTextLabel(racelabel[r__id]);
			DisablePlayerRaceCheckpoint(r__id);
			RemovePlayerMapIcon(r__id, 56);
			format(xstring,sizeof xstring,"~g~Force Left Race~n~~w~By ~g~%p",R_Name,playerid);
			GameTextForPlayer(r__id,xstring,1000,3);
			TotalRacers--;
			Players[r__id][Minigame] = 0;
			TotalRacersCur--;
			MyCurrentCP[r__id]=0;
			SpeedBoostDisabled[playerid] = false;
			Players[r__id][AmRacing] = false;
			SendClientMessage(r__id,COLOR_YELLOW,"You have FORCED to leave the race.");
			format(xstring,sizeof xstring,"* Admin %p has forced you to leave the race.",playerid,r__id);
			SendClientMessage(playerid,COLOR_YELLOW,xstring);
		}
		else return SendClientMessage(playerid, COLOR_YELLOW, "Player aren't in a race.");
	}
	return 1;
}
CMD:endrace(playerid,params[])
{
	if(!IsAdmin(playerid)) return 1;
	if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
	if(OnRaceCD == true)
	{
		SendClientMessage(playerid,COLOR_RED,"Unable to EndRACE at this time: Countdown in progress.");
		return 1;
	}
	if(OnRaceCD == false && RaceActive == true)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(Players[i][AmRacing] == true)
			{
				RemovePlayerMapIcon(i, 56);
				DisablePlayerRaceCheckpoint(i);
				format(xstring,sizeof xstring,"~g~Race Cancelled!~n~~w~'%s'",R_Name);
				GameTextForPlayer(i,xstring,1000,3);
				TotalRacers--;
				TotalRacersCur--;
				Players[i][Minigame] = 0;
				MyCurrentCP[i]=0;
				Players[i][AmRacing] = false;
				if(IsValidDynamic3DTextLabel(racelabel[i]))  DestroyDynamic3DTextLabel(racelabel[i]);
				SendClientMessage(i,COLOR_YELLOW,"Race has been forced to end!");
				bombrace = 0;
			}
		}
		RaceActive=false;
		RaceStart = false;
		OnRaceCD = false;
		RaceTime = 0;
		TotalRacers = 0;
		TotalRacersCur = 0;
		xx_cd = DELAY_TIME;
		TextDrawHideForAll(racenotify);
		TextDrawSetString(racenotify," ");
		KillTimer(rTimer);
		KillTimer(eTimer);

		if (strcmp(lastwin, " ", true) != 0)
		{
			format(xstring,sizeof xstring,"The last race was finished. (Winner: %s )",lastwin);
			SendClientMessageToAll(COLOR_GREY,xstring);
		}
		lastwin = " ";
		SendClientMessage(playerid,COLOR_AMSG,"Race has been forced to end!");

	}
	else return SendClientMessage(playerid, COLOR_YELLOW, "You aren't in a race.");
	return 1;
}


CMD:startrace(playerid,params[])
{
	cmd_quickstart(playerid,params);
	return 1;
}

CMD:buildrace(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		if(Players[playerid][AmRacing] == true) SendClientMessage(playerid, COLOR_YELLOW, "You are participating in a race, can't build a race.");
		if(Players[playerid][AmBuilding] == true) SendClientMessage(playerid, COLOR_YELLOW, "You are already building a race, dork.");
		else
		{
			Players[playerid][AmBuilding] = true;
			SendClientMessage(playerid,COLOR_AMSG,"Welcome to RevolutionX Race Building Mode");
			SendClientMessage(playerid,COLOR_RED,"* STOP BUILDING A RACE ~ /clearrace");
			SendClientMessage(playerid,COLOR_AMSG,"* Creates a new checkpoint ~ /cp");
			SendClientMessage(playerid,COLOR_AMSG,"* Sets the size of last checkpoint you made ~ /cpsize");
			SendClientMessage(playerid,COLOR_AMSG,"* Selectes the race vehicle ~ /rvehicle");
			SendClientMessage(playerid,COLOR_AMSG,"* Toggles the race nos (Usable on race) ~ /racenos");
			SendClientMessage(playerid,COLOR_AMSG,"* Toggles the race deathmode ~ /deathrace");
			SendClientMessage(playerid,COLOR_AMSG,"* Selectes the race weather ~ /rweather");
			SendClientMessage(playerid,COLOR_AMSG,"* Deletes Last checkpoint ~ /dcp");
			SendClientMessage(playerid,COLOR_AMSG,"* Saves the race into the database ~ /saverace");
			SendClientMessage(playerid,COLOR_AMSG,"* Deletes a saved race ~ /deleterace");
			SendClientMessage(playerid,COLOR_AMSG,"* Undeletes a saved race ~ /undeleterace");
			SendClientMessage(playerid,COLOR_AMSG,"* Race Moderating Guide ~ /raceguide");

			BuildInitial(playerid);
		}
	}
	return 1;
}
CMD:raceguide(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,1))
	{
			SendClientMessage(playerid,COLOR_AMSG,"Welcome to RevolutionX Race Moderating Guide");
			SendClientMessage(playerid,COLOR_AMSG,"* Loads a new race ~ /loadrace");
			SendClientMessage(playerid,COLOR_AMSG,"* Ends the current running race ~ /endrace");
			SendClientMessage(playerid,COLOR_AMSG,"* Toggles the race nos (NOS is enabled by default on all races)~ /racenos");
			SendClientMessage(playerid,COLOR_AMSG,"* Extends the race start time ~ /ws (/waitstart)");
			SendClientMessage(playerid,COLOR_AMSG,"* Starts the current race ~ /startrace (/qs)");
			SendClientMessage(playerid,COLOR_AMSG,"* Forces someone to leave the race ~ /forceleave");
			SendClientMessage(playerid,COLOR_AMSG,"* Gives you the current race vehicle set by the creator ~ /rv");
			SendClientMessage(playerid,COLOR_AMSG,"* Removes the last record from the track (Level 5) ~ /resetttime");
			SendClientMessage(playerid,COLOR_AMSG,"* Removes all the records from the track (Level 7) ~ /resettime");
			SendClientMessage(playerid,COLOR_AMSG,"* That's all for the moment.. More will be added soon");
	}
	return 1;
}

CMD:rvehicle(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		if(Players[playerid][AmBuilding] == false) return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
		new veh[35];
		new vehicle;
		if (sscanf(params, "s[35]",veh)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /rvehicle <Vehicle name/id>");
		if(strval(veh) == -1) BVehicleID[playerid] = -1;
		else {
		if(IsNumeric(veh)) vehicle = strval(veh);
		if(!IsNumeric(veh)) vehicle = GetVehicleModelIDFromName(veh);
		BVehicleID[playerid] = vehicle;
		}
		SendClientMessage(playerid,COLOR_AMSG,"* RACE VEHICLE SUCCESSFULLY SELECTED !");
	}
	return 1;
}

CMD:srw(playerid,params[]) cmd_rweather(playerid,params);
CMD:rweather(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		if(Players[playerid][AmBuilding] == false) return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
		new w;
		if (sscanf(params, "d",w)) return SendClientMessage(playerid,COLOR_RED,"*Usage: /rvehicle <Vehicle name/id>");
		tmpw = w;
		SendClientMessage(playerid,COLOR_AMSG,"* RACE WEATHER SUCCESSFULLY SELECTED !");
	}
	return 1;
}

CMD:deathrace(playerid,params[])
{
	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		if(Players[playerid][AmBuilding] == false) return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
		if(bombrace == 0)
		{
			SendClientMessage(playerid,COLOR_AMSG,"* DEATH RACE ACTIVATED !");
			bombrace = 1;
		}
		else
		{
			SendClientMessage(playerid,COLOR_AMSG,"* DEATH RACE DEACTIVATED !");
			bombrace = 0;
		}

	}
	return 1;
}

CMD:srv(playerid,params[]) cmd_rvehicle(playerid,params);
CMD:setracevehicle(playerid,params[]) cmd_rvehicle(playerid,params);
CMD:racevehicle(playerid,params[]) cmd_rvehicle(playerid,params);

CMD:ura(playerid,params[]) return cmd_updateraceangle(playerid,params);
CMD:updateraceangle(playerid,params[])
{
	new rname[35];
	if(sscanf(params,"s[35]",rname))
	{
	    SendClientMessage(playerid,COLOR_YELLOW,"*/updateraceangle <raceName>");
     	SendClientMessage(playerid,COLOR_YELLOW,"* Will update the race starting angle when people start. YOU MUST BE IN CAR.");
	    return 1;
	}
	format(xstring,sizeof xstring,"SELECT `raceID` FROM `race` WHERE `racemame`='%s'",rname);
	mysql_query(SQL,xstring);
	if(cache_num_rows() == 0) return SendClientMessage(playerid,COLOR_RED,"* No race found with that name.");
	new raceID;
	cache_get_value_name_int(0,"raceID",raceID);
	new Float:myAngle;
	GetPlayerFacingAngle(playerid,myAngle);
	format(xstring,sizeof xstring,"SELECT `raceID` FROM `race` WHERE `racemame`='%s'",rname);
	mysql_query(SQL,xstring);
	format(xstring, sizeof(xstring), "UPDATE `racecp` SET `A` = '%f' WHERE `raceID` = '%d' AND `CP` = '%d'",myAngle,raceID,0);
	mysql_query(SQL,xstring);
	return 1;
}

CMD:cp(playerid,params[])
{

	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		if(Players[playerid][AmBuilding] == true) return AddCP(playerid);
		else return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
	}
	return 1;
}
CMD:dcp(playerid,params[])
{

	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		if(Players[playerid][AmBuilding] == true) return DeleteCP(playerid);
		else return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
	}
	return 1;
}
CMD:clearrace(playerid,params[])
{

	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		if(Players[playerid][AmBuilding] == true) return ClearRace(playerid);
		else return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
	}
	return 1;
}
CMD:cpsize(playerid,params[])
{

	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		new kpo;
		if(sscanf(params,"d",kpo)) return SendClientMessage(playerid,COLOR_RED,"*** USAGE: /cpsize <Float:size>");
		else return ChangeCPSize(playerid,kpo);
	}
	return 1;
}

CMD:saverace(playerid,params[])
{

	if(IsPlayerAdminLevel(playerid,2) || IsVIP(playerid))
	{
		if(sscanf(params,"s[24]",BName[playerid])) return SendClientMessage(playerid,COLOR_RED,"*** USAGE: /saverace <String: Name>");
		else return SaveRace(playerid);
	}
	return 1;
}
CMD:racerotation(playerid,params[])
{
	if(!IsAdmin(playerid)) return 1;
	if(RaceRotation == true)
	{
		RaceRotation = false;
		SendClientMessage(playerid,COLOR_RED,"*** Race Rotation Disabled!");
	}
	else
	{
		RaceRotation = true;
		SendClientMessage(playerid,COLOR_YELLOW,"*** Race Rotation Enabled!");
	}
	return 1;
}
CMD:racenos(playerid,params[])
{
	if(!IsAdmin(playerid)) return 1;
	if(RaceNOS == true)
	{
		RaceNOS = false;
		SendClientMessage(playerid,COLOR_RED,"*** Race NOS Disabled!");
	}
	else
	{
		RaceNOS = true;
		SendClientMessage(playerid,COLOR_YELLOW,"*** Race NOS Enabled!");
	}
	return 1;
}
/*
IRCCMD:racerotation(botid, channel[], user[], host[], params[])
{
	if(IRC_IsAdmin(botid,channel,user))
	{
		if(RaceRotation == true)
		{
			RaceRotation = false;
			IRC_GroupSay(gGroupID,channel,"4*** Race Rotation Disabled!");
		}
		else
		{
			RaceRotation = true;
			IRC_GroupSay(gGroupID,channel,"3*** Race Rotation Enabled!");
		}
	}
	return 1;
}
IRCCMD:discord(botid, channel[], user[], host[], params[])
{
	if(IRC_IsOp(botid,channel,user))
	{
		format(xstring,sizeof(xstring),"IRC Admin %s: Join our discord server! https://discord.gg/qKnAMBu",user);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		format(xstring,sizeof(xstring),"1,8IRC Admin %s:  Join our discord server! https://discord.gg/qKnAMBu",user);
		IRC_GroupSay(gGroupID,channel,xstring);
		return 1;
	}
	return 1;
	
}

IRCCMD:fav(botid, channel[], user[], host[], params[])
{
	if(IRC_IsOp(botid,channel,user))
	{
		format(xstring,sizeof(xstring),"IRC Admin %s: Add the server to your favorites! 139.99.173.130:1337",user);
		SendClientMessageToAll(COLOR_YELLOW,xstring);
		format(xstring,sizeof(xstring),"1,8IRC Admin %s: Add the server to your favorites! 139.99.173.130:1337",user);
		IRC_GroupSay(gGroupID,channel,xstring);
		return 1;
	}
	return 1;

}

IRCCMD:deleterace(botid, channel[], user[], host[], params[])
{
	if(IRC_IsAdmin(botid,channel,user))
	{
		new noi[24];
		if(sscanf(params,"s[24]",noi)) return IRC_GroupSay(gGroupID,channel,"4*** USAGE: !deleterace <Race name>");
		else
		{
			format(xstring,sizeof xstring,"UPDATE `race` SET `deleted`=1 WHERE `racename`='%s'",noi);
			mysql_query(SQL,xstring);
			IRC_GroupSay(gGroupID,channel,"4[||] Syccessfully Deleted the Race!");
		}
	}
	return 1;
}
IRCCMD:undeleterace(botid, channel[], user[], host[], params[])
{
	if(IRC_IsAdmin(botid,channel,user))
	{
		new noi[24];
		if(sscanf(params,"s[24]",noi)) return IRC_GroupSay(gGroupID,channel,"4*** USAGE: !deleterace <Race name>");
		else
		{
			format(xstring,sizeof xstring,"UPDATE `race` SET `deleted`=0 WHERE `racename`='%s'",noi);
			mysql_query(SQL,xstring);
			IRC_GroupSay(gGroupID,channel,"4[||] Syccessfully Deleted the Race!");
		}
	}
	return 1;
}
*/

CMD:deleterace(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,8)) return 1;
	new noi[24];
	if(sscanf(params,"s[24]",noi)) return SendClientMessage(playerid,COLOR_RED,"*** USAGE: /deleterace <Race name>");
	else
	{
		format(xstring,sizeof xstring,"UPDATE `race` SET `deleted`=1 WHERE `racename`='%s'",noi);
		mysql_query(SQL,xstring);
		SendClientMessage(playerid,COLOR_YELLOW,"[||] Syccessfully Deleted the Race!");
	}
	return 1;

}
CMD:undeleterace(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,9)) return 1;
	new noi[24];
	if(sscanf(params,"s[24]",noi)) return SendClientMessage(playerid,COLOR_RED,"*** USAGE: /undeleterace <Race name>");
	else
	{
		format(xstring,sizeof xstring,"UPDATE `race` SET `deleted`=0 WHERE `racename`='%s'",noi);
		mysql_query(SQL,xstring);
		SendClientMessage(playerid,COLOR_YELLOW,"[||] Syccessfully Re-Stored the Race!");
	}
	return 1;

}

CMD:waitstart(playerid, params[])
{
		if(!IsAdmin(playerid)) return SendClientMessage(playerid,COLOR_RED,": You are not authorized to perform this operation.");
		if(RaceActive == false) return SendClientMessage(playerid, COLOR_YELLOW, "No Race currently active!");
		if(OnRaceCD == true) return SendClientMessage(playerid,COLOR_RED,"Unable to QS at this time: Race Countdown in progress.");
		if(RaceStart == true) return SendClientMessage(playerid,COLOR_RED,"Unable to QS at this time: RACE in progress.");
		if(RaceActive == true && xx_cd > 5)
		{
		    xx_cd = 60;
			format(xstring, sizeof(xstring), "* Admin %p (ID:%d) has extended race start!!", playerid, playerid);
	    	SendClientMessageToAll(COLOR_LIME, xstring);
		}
		return 1;
}
CMD:ws(playerid,params[]) return cmd_waitstart(playerid,params);

CMD:resettime(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,8)) return 1;
	new noi[24],tmp_rID;
	if(sscanf(params,"s[24]",noi)) return SendClientMessage(playerid,COLOR_RED,"*** USAGE: /resettime <Race name> - Removes all the records on the track");
	else
	{
		format(xstring,sizeof xstring,"SELECT `raceID` FROM `race` WHERE `racename`='%s'",noi);
		mysql_query(SQL,xstring);
		if(cache_num_rows() == 0) return 0;
		cache_get_value_name_int(0,"raceID",tmp_rID);
		format(xstring,sizeof xstring,"DELETE FROM `racetimes` WHERE `RaceID` = %d",tmp_rID);
		mysql_query(SQL,xstring);
		SendClientMessage(playerid,COLOR_YELLOW,"[||] Syccessfully Resetted the time!!");
	}
	return 1;
}
CMD:resetttime(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,5)) return 1;
	new noi[24],tmp_rID;
	if(sscanf(params,"s[24]",noi)) return SendClientMessage(playerid,COLOR_RED,"*** USAGE: /resettime <Race name> - Removes the last record from the track");
	else
	{
		format(xstring,sizeof xstring,"SELECT `raceID` FROM `race` WHERE `racename`='%s'",noi);
		mysql_query(SQL,xstring);
		if(cache_num_rows() == 0) return 0;
		cache_get_value_name_int(0,"raceID",tmp_rID);
		format(xstring,sizeof xstring,"DELETE FROM `racetimes` WHERE `RaceID` = %d   ORDER BY `Time` ASC LIMIT 1",tmp_rID);
		mysql_query(SQL,xstring);
		SendClientMessage(playerid,COLOR_YELLOW,"[||] Syccessfully Resetted the time!!");
	}
	return 1;
}


CMD:timetrial(playerid,params[]) return cmd_tt(playerid,params);
CMD:tt(playerid, params[])
{
	if(TT_ID[playerid] != -1 && (ttCD[playerid] != 0)) return SendClientMessage(playerid,COLOR_RED,"** TT  Race Countdown in Process! Please wait to use this command");
	if(TT_ID[playerid] != -1) TT_Exit(playerid);
	if(GetMinigame(playerid)!=0)
	{
		return SendClientMessage(playerid,COLOR_RED,"* /leavedm to enter into /tt or get unjail");
	}
	new str[75 * 32];
	mysql_query(SQL,"SELECT `raceID`,`racename` FROM `trace` WHERE  `deleted` = 0 ORDER BY  `trace`.`racename` ASC ");
	
	new tmp[64],x=0;
	if(cache_num_rows() == 0) 
	{

		SendClientMessage(playerid, -1, "No races avaiable in TT");
	}
	else
	{
		for(new h = 0;h<cache_num_rows();h++)
		{
			//sscanf(line,"p<|>ds[64]",__loading[playerid][x],tmp);
			cache_get_value_name_int(h,"raceID",__loading[playerid][x]);
			cache_get_value_name(h,"racename",tmp);
			if(x == 0) format(str,sizeof str,"%d. %s",x,tmp);
			else format(str,sizeof str,"%s\n%d. %s",str,x,tmp);
			x++;
		}
		format(str, sizeof(str), "{00FFFF}Try Again? \n{FF9900}Random TT Race\n%s", str);
        ShowPlayerDialog(playerid,13338,DIALOG_STYLE_MSGBOX,"Time Trial Race LIST",str,"Ok","Cancel");
		for(new i = laststatic+1; i < MAX_VEHICLES; i++)
		{
			if(!IsSeatTaken(i,0))
			{
				//if(GetVehicleVirtualWorld(i) != 19 && GetVehicleVirtualWorld(i) != 100)
				{
					DestroyVehicleEx(i);
				}
			}
		}
	}
	////// mysql_free_result();
	return 1;
}

CMD:top5(playerid,params[])
{
	new query[300];
	new lop[24];
	new tmPxX=0;

	new RecordName2[5][24],
		Float:RecordTime2[5],
		RecordVehicle2[5][24];
	if(sscanf(params,"s",lop))
	{
		if(TT_ID[playerid]!=-1)
		{
				for(new i=0;i<5;i++)
				{
					RecordName2[i] = "None";
					RecordTime2[i] = 0;
					RecordVehicle2[i] = " ";
				}
				format(query,sizeof(query),"select `Time`,`Name` from `tracetimes` where `Time` = (select min(`Time`) from `tracetimes` as f where f.`Name` = `tracetimes`.`Name` AND `raceID` =%d) order by `Time` ASC LIMIT 5",TT_ID[playerid]);
				mysql_query(SQL,query);
				
				if(cache_num_rows()!= 0)
				{
					tmPxX = 0;
					for(new h = 0;h<cache_num_rows();h++)
					{
						tmPxX = h;
						//sscanf(line,"p<|>fs[24]", RecordTime2[tmPxX],RecordName2[tmPxX]);
						cache_get_value_name_float(h,"Time",RecordTime2[tmPxX]);
						cache_get_value_name(h,"Name",RecordName2[tmPxX]);
						tmPxX++;
					}
					format(xstring,sizeof xstring,"Race \'%s\' Records:", __R_Name[playerid]);
					SendClientMessage(playerid,COLOR_YELLOW,xstring);
					for(tmPxX=0;tmPxX<5;tmPxX++)
					{
						if(RecordTime2[tmPxX] == 0.000 ) break;
						format(xstring,sizeof xstring,"%d. %s - %s",tmPxX+1,RecordName2[tmPxX],ReturnTime(RecordTime2[tmPxX]));
						SendClientMessage(playerid,COLOR_YELLOW,xstring);
					}
				}
		}
		else return SendClientMessage(playerid,COLOR_RED, "* USAGE: /top5 <Track Name>");
	}
	else
	{

				for(new i=0;i<5;i++)
				{
					RecordName2[i] = "None";
					RecordTime2[i] = 0;
					RecordVehicle2[i] = " ";
				}
				format(query,sizeof(query),"select `Time`,`Name` from `tracetimes` where `Time` = (select min(`Time`) from `tracetimes` as f where f.`Name` = `tracetimes`.`Name` AND `raceID` =%d) order by `Time` ASC LIMIT 5",GetTT_ID(lop));
				mysql_query(SQL,query);
				
				if(cache_num_rows()!= 0)
				{
					tmPxX = 0;
					for(new h = 0;h<cache_num_rows();h++)
					{
						tmPxX = h;
						//sscanf(line,"p<|>fs[24]", RecordTime2[tmPxX],RecordName2[tmPxX]);
						cache_get_value_name_float(h,"Time",RecordTime2[tmPxX]);
						cache_get_value_name(h,"Name",RecordName2[tmPxX]);
						tmPxX++;
					}
					format(xstring,sizeof xstring,"Race \'%s\' Records:",lop);
					SendClientMessage(playerid,COLOR_YELLOW,xstring);
					for(tmPxX=0;tmPxX<5;tmPxX++)
					{
						if(RecordTime2[tmPxX] == 0.000 ) break;
						format(xstring,sizeof xstring,"%d. %s - %s",tmPxX+1,RecordName2[tmPxX],ReturnTime(RecordTime2[tmPxX]));
						SendClientMessage(playerid,COLOR_YELLOW,xstring);
					}
				}
				else return SendClientMessage(playerid,COLOR_RED,"* Race doesn\'t Exist or No Records Found!");
	}
	////// mysql_free_result();
	return 1;
}
CMD:top10(playerid,params[])
{
	new query[300];
	new lop[24];
	new tmPxX=0;

	new RecordName2[10][24],
		Float:RecordTime2[10],
		RecordVehicle2[10][24];
	if(sscanf(params,"s",lop))
	{
		if(TT_ID[playerid]!=-1)
		{
				for(new i=0;i<10;i++)
				{
					RecordName2[i] = "None";
					RecordTime2[i] = 0;
					RecordVehicle2[i] = " ";
				}
				format(query,sizeof(query),"select `Time`,`Name` from `tracetimes` where `Time` = (select min(`Time`) from `tracetimes` as f where f.`Name` = `tracetimes`.`Name` AND `raceID` =%d) order by `Time` ASC LIMIT 10",TT_ID[playerid]);
				mysql_query(SQL,query);
				
				if(cache_num_rows()!= 0)
				{
					tmPxX = 0;
					for(new h = 0;h<cache_num_rows();h++)
					{
						tmPxX = h;
						//sscanf(line,"p<|>fs[24]", RecordTime2[tmPxX],RecordName2[tmPxX]);
						cache_get_value_name_float(h,"Time",RecordTime2[tmPxX]);
						cache_get_value_name(h,"Name",RecordName2[tmPxX]);
						tmPxX++;
					}
					format(xstring,sizeof xstring,"Race \'%s\' Records:", __R_Name[playerid]);
					SendClientMessage(playerid,COLOR_YELLOW,xstring);
					for(tmPxX=0;tmPxX<10;tmPxX++)
					{
						if(RecordTime2[tmPxX] == 0.000 ) break;
						format(xstring,sizeof xstring,"%d. %s - %s",tmPxX+1,RecordName2[tmPxX],ReturnTime(RecordTime2[tmPxX]));
						SendClientMessage(playerid,COLOR_YELLOW,xstring);
					}
				}
		}
		else return SendClientMessage(playerid,COLOR_RED, "* USAGE: /top5 <Track Name>");
	}
	else
	{

				for(new i=0;i<10;i++)
				{
					RecordName2[i] = "None";
					RecordTime2[i] = 0;
					RecordVehicle2[i] = " ";
				}
				format(query,sizeof(query),"select `Time`,`Name` from `tracetimes` where `Time` = (select min(`Time`) from `tracetimes` as f where f.`Name` = `tracetimes`.`Name` AND `raceID` =%d) order by `Time` ASC LIMIT 10",GetTT_ID(lop));
				mysql_query(SQL,query);
				
				if(cache_num_rows()!= 0)
				{
					tmPxX = 0;
					for(new h = 0;h<cache_num_rows();h++)
					{
						tmPxX = h;
						//sscanf(line,"p<|>fs[24]", RecordTime2[tmPxX],RecordName2[tmPxX]);
						cache_get_value_name_float(h,"Time",RecordTime2[tmPxX]);
						cache_get_value_name(h,"Name",RecordName2[tmPxX]);
						tmPxX++;
					}
					format(xstring,sizeof xstring,"Race \'%s\' Records:",lop);
					SendClientMessage(playerid,COLOR_YELLOW,xstring);
					for(tmPxX=0;tmPxX<10;tmPxX++)
					{
						if(RecordTime2[tmPxX] == 0.000 ) break;
						format(xstring,sizeof xstring,"%d. %s - %s",tmPxX+1,RecordName2[tmPxX],ReturnTime(RecordTime2[tmPxX]));
						SendClientMessage(playerid,COLOR_YELLOW,xstring);
					}
				}
				else return SendClientMessage(playerid,COLOR_RED,"* Race doesn\'t Exist or No Records Found!");
	}
	////// mysql_free_result();
	return 1;
}
CMD:top20(playerid,params[])
{
	new query[300];
	new lop[24];
	new tmPxX=0;

	new RecordName2[20][24],
		Float:RecordTime2[20],
		RecordVehicle2[20][24];
	if(sscanf(params,"s",lop))
	{
		if(TT_ID[playerid]!=-1)
		{
				for(new i=0;i<20;i++)
				{
					RecordName2[i] = "None";
					RecordTime2[i] = 0;
					RecordVehicle2[i] = " ";
				}
				format(query,sizeof(query),"select `Time`,`Name` from `tracetimes` where `Time` = (select min(`Time`) from `tracetimes` as f where f.`Name` = `tracetimes`.`Name` AND `raceID` =%d) order by `Time` ASC LIMIT 20",TT_ID[playerid]);
				mysql_query(SQL,query);
				
				if(cache_num_rows()!= 0)
				{
					tmPxX = 0;
					for(new h = 0;h<cache_num_rows();h++)
					{
						tmPxX = h;
						//sscanf(line,"p<|>fs[24]", RecordTime2[tmPxX],RecordName2[tmPxX]);
						cache_get_value_name_float(h,"Time",RecordTime2[tmPxX]);
						cache_get_value_name(h,"Name",RecordName2[tmPxX]);
						tmPxX++;
					}
					format(xstring,sizeof xstring,"Race \'%s\' Records:", __R_Name[playerid]);
					SendClientMessage(playerid,COLOR_YELLOW,xstring);
					for(tmPxX=0;tmPxX<20;tmPxX++)
					{
						if(RecordTime2[tmPxX] == 0.000 ) break;
						format(xstring,sizeof xstring,"%d. %s - %s",tmPxX+1,RecordName2[tmPxX],ReturnTime(RecordTime2[tmPxX]));
						SendClientMessage(playerid,COLOR_YELLOW,xstring);
					}
				}
		}
		else return SendClientMessage(playerid,COLOR_RED, "* USAGE: /top5 <Track Name>");
	}
	else
	{

				for(new i=0;i<20;i++)
				{
					RecordName2[i] = "None";
					RecordTime2[i] = 0;
					RecordVehicle2[i] = " ";
				}
				format(query,sizeof(query),"select `Time`,`Name` from `tracetimes` where `Time` = (select min(`Time`) from `tracetimes` as f where f.`Name` = `tracetimes`.`Name` AND `raceID` =%d) order by `Time` ASC LIMIT 20",GetTT_ID(lop));
				mysql_query(SQL,query);
				
				if(cache_num_rows()!= 0)
				{
					tmPxX = 0;
					for(new h = 0;h<cache_num_rows();h++)
					{
						tmPxX = h;
						//sscanf(line,"p<|>fs[24]", RecordTime2[tmPxX],RecordName2[tmPxX]);
						cache_get_value_name_float(h,"Time",RecordTime2[tmPxX]);
						cache_get_value_name(h,"Name",RecordName2[tmPxX]);
						tmPxX++;
					}
					format(xstring,sizeof xstring,"Race \'%s\' Records:",lop);
					SendClientMessage(playerid,COLOR_YELLOW,xstring);
					for(tmPxX=0;tmPxX<20;tmPxX++)
					{
						if(RecordTime2[tmPxX] == 0.000 ) break;
						format(xstring,sizeof xstring,"%d. %s - %s",tmPxX+1,RecordName2[tmPxX],ReturnTime(RecordTime2[tmPxX]));
						SendClientMessage(playerid,COLOR_YELLOW,xstring);
					}
				}
				else return SendClientMessage(playerid,COLOR_RED,"* Race doesn\'t Exist or No Records Found!");
	}
	////// mysql_free_result();
	return 1;
}
GetTT_ID(racename[])
{
	new query[300];

	format(query,sizeof(query),"SELECT `RaceID` FROM`trace` WHERE`racename` = '%s' LIMIT 1",racename);
	mysql_query(SQL,query);
	
	if(cache_num_rows()!= 0)
	{
		new idxx;
		cache_get_value_name_int(0,"RaceID",idxx);
		return idxx;

	}
	else return 0;
}

stock Float:AngleToPoint(Float:x2, Float:y2, Float:X, Float:Y)
{
	new Float:DX, Float:DY;
	new Float:angle;
	DX = floatabs(floatsub(x2,X));
	DY = floatabs(floatsub(y2,Y));
	if (DY == 0.0 || DX == 0.0)
	{
		if(DY == 0 && DX > 0) angle = 0.0;
		else if(DY == 0 && DX < 0) angle = 180.0;
		else if(DY > 0 && DX == 0) angle = 90.0;
		else if(DY < 0 && DX == 0) angle = 270.0;
		else if(DY == 0 && DX == 0) angle = 0.0;
	}
	else
	{
		angle = atan(DX/DY);
		if(X > x2 && Y <= y2) angle += 90.0;
		else if(X <= x2 && Y < y2) angle = floatsub(90.0, angle);
		else if(X < x2 && Y >= y2) angle -= 90.0;
		else if(X >= x2 && Y > y2) angle = floatsub(270.0, angle);
	}
	return floatadd(angle, 90.0);
}

stock SpawnVehicle(playerid,model)
{
		new color = random(125);
		TTcar[playerid] = CreateVehicle(model, TT_Checkpoints[playerid][0][0], TT_Checkpoints[playerid][0][1], TT_Checkpoints[playerid][0][2]+1,AngleToPoint(TT_Checkpoints[playerid][0][0], TT_Checkpoints[playerid][0][1], TT_Checkpoints[playerid][1][0], TT_Checkpoints[playerid][1][1]),color,color,0);		
		PutPlayerInVehicle(playerid,TTcar[playerid],0);
		SetVehicleZAngle(TTcar[playerid], AngleToPoint(TT_Checkpoints[playerid][0][0], TT_Checkpoints[playerid][0][1], TT_Checkpoints[playerid][1][0], TT_Checkpoints[playerid][1][1]));	
		LinkVehicleToInterior(TTcar[playerid], GetPlayerInterior(playerid));
        SetVehicleVirtualWorld(TTcar[playerid], playerid+5);
		//SaveMyCar[playerid] = model;
		//SpawnAuto[playerid] =  TTcar[playerid] ;
		new rand = random(255);
		new rand2 = random(255);
		ChangeVehicleColours(TTcar[playerid], rand,rand2);
		return 1;
}
stock PlaySoundForAll2(soundid)
{
    for(new i; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i)) PlayerPlaySound(i,soundid,0,0,0);
	}
}
forward TT_Check_IfMadeRecord(playerid,RaceID,Float:racetime);
public TT_Check_IfMadeRecord(playerid,RaceID,Float:racetime)
{
	new query[300];
	//new xstring[300];
	//new line[300];
	new playername[24];
	GetPlayerName(playerid, playername, sizeof(playername));
	format(query,sizeof query,"SELECT `Name`, `Time` FROM`tracetimes` WHERE `raceID`= %d ORDER BY`tracetimes`.`Time`ASC LIMIT 1",RaceID);
	mysql_query(SQL,query);
	
	if(cache_num_rows() != 0)
	{
		new tmp[24], Float:tmp_time;
		/*
		if(mysql_fetch_row(line))
		{
			sscanf(line,"p<|>s[24]f",tmp,tmp_time);
		}
		*/
		cache_get_value_name(0,"Name",tmp);
		cache_get_value_name_float(0,"Time",tmp_time);
		if(tmp_time > racetime )
		{
			// record
			GameTextForPlayer(playerid,"~n~~w~TRACK RECORD!",13000,3);
			format(xstring,sizeof xstring,"%s",playername);
			if(!strcmp(xstring, tmp, true)) format(xstring,sizeof xstring,"[TT] %s (%s) has broken their own record of (%s) on \'%s\'",playername,ReturnTime(racetime),ReturnTime(tmp_time), __R_Name[playerid]);
			else format(xstring,sizeof xstring,"[TT] %s (%s) have broke the record of %s ( %s ) on \'%s\'",playername,ReturnTime(racetime),tmp,ReturnTime(tmp_time), __R_Name[playerid]);
			SendClientMessageToAll(0xFFD700FF,xstring);
			if(!strcmp(xstring, tmp, true)) format(xstring,sizeof xstring,"8,12[TT] %s (%s) has broken their own record of (%s) on \'%s\'",playername,ReturnTime(racetime),ReturnTime(tmp_time), __R_Name[playerid]);
			else format(xstring,sizeof xstring,"9,12[TT] %s (%s) have broke the record of %s ( %s ) on \'%s\'",playername,ReturnTime(racetime),tmp,ReturnTime(tmp_time), __R_Name[playerid]);
			//GivePlayerMoney2(playerid, GetPlayerMoney2(playerid) + 500);
			//AddSplitTimesToDB(playerid,RaceID);
		}
		else return 1;
	}
	else
	{
			GameTextForPlayer(playerid,"~n~~w~TRACK RECORD!",13000,3);
			// record
			format(xstring,sizeof xstring,"[TT] %s has set a new record on \'%s\' Track",playername, __R_Name[playerid]);
			SendClientMessageToAll(0xFFD700FF,xstring);
			//GivePlayerMoney2(playerid, GetPlayerMoney2(playerid) + 500);
			//AddSplitTimesToDB(playerid,RaceID);

	}
	////// mysql_free_result();
	return 1;
}

TT_AddTimeToDB(playerid,id,Float:time3)
{
	new query[300];
	TT_Check_IfMadeRecord(playerid,id,time3);
	new playername[24];
	GetPlayerName(playerid, playername, sizeof(playername));
	format(query,sizeof query,"INSERT INTO `tracetimes`(`raceID`, `Name`, `Time`, `VehicleUsed`) VALUES (%d,'%s',%.3f,'%v')",id,playername,time3,GetVehicleModel(GetPlayerVehicleID(playerid)));
	mysql_query(SQL,query);
	return 1;
}
SetUP_TT(playerid,raceID)
{
	new query[300];
//	new retiriving[300];
	new __RCreator[24];
	format(query,sizeof(query),"SELECT `raceID`, `racename`,`vehicleID`, `CreatedBy` FROM `trace` WHERE `raceID` =%d LIMIT 1",raceID);
	mysql_query(SQL,query);
	
	if(cache_num_rows()!= 0)
	{
		//if(mysql_fetch_row(retiriving))
		//{
			new delx;
			//sscanf(retiriving,"p<|>ds[24]ddds[24]",TT_ID[playerid],__R_Name[playerid],__VehicleID[playerid],__RCreator);
			cache_get_value_name_int(0,"raceID",TT_ID[playerid]);
			cache_get_value_name(0,"racename",__R_Name[playerid]);
			cache_get_value_name_int(0,"vehicleID",__VehicleID[playerid]);
			cache_get_value_name(0,"CreatedBy",__RCreator);
			if(delx== 1) return 0;
			else 
			{
				TT_Initization(playerid,__VehicleID[playerid]);
			}
		//}
	}
	else return SendClientMessage(playerid, 0xFF0000, "TT Doesnt exist or deleted!!");
	////// mysql_free_result();
	
	
	
	new query2[300],Float:xx,Float:yy,Float:zz;
	format(query2,sizeof(query2),"SELECT  `X`, `Y`, `Z`,`CPsize` FROM  `tracecp` WHERE  `raceID` =%d ORDER BY  `tracecp`.`CP` ASC",TT_ID[playerid]);
	mysql_query(SQL,query2); // 
	
	if(cache_num_rows()!= 0)
	{
		new tmPx=0;
		for(new h = 0;h<cache_num_rows();h++)
		{
			//sscanf(retiriving,"p<|>ffff",xx,yy,zz,TT_CPSize[playerid]);
			cache_get_value_name_float(h,"X",xx);
			cache_get_value_name_float(h,"Y",yy);
			cache_get_value_name_float(h,"Z",zz);
			cache_get_value_name_float(h,"CPsize",TT_CPSize[playerid]);
			
			TT_LoadCheckpoints(playerid,tmPx,xx,yy,zz);
			tmPx++;
		}
		__TotalCP[playerid] = tmPx;
				
	}
	else  return SendClientMessage(playerid, 0xFF0000, "TT -> Internal Error!");
	////// mysql_free_result();
	return 1;
	
}

stock TT_Initization(playerid, RaceVehicle = -1)
{
	//RaceTimeout[playerid] = _RaceTimeout;
	__VehicleID[playerid] = RaceVehicle;
	return 1;
}

stock TT_LoadCheckpoints(playerid, nextcheckpointfree,Float:CheckPointX, Float:CheckPointY, Float:CheckPointZ)
{
	TT_Checkpoints[playerid][nextcheckpointfree][0] = CheckPointX;
	TT_Checkpoints[playerid][nextcheckpointfree][1] = CheckPointY;
	TT_Checkpoints[playerid][nextcheckpointfree][2] = CheckPointZ;
	return 1;
}


stock TT_Announcement(playerid,raceid)
{
	new query[300];
	KillTimer(tttimer[playerid]);
	new RaceStr[256];
	if(__VehicleID[playerid] == -1)format(RaceStr, sizeof(RaceStr), "[TT RACE] The Race '%s' will start in %d seconds. Type /TT to leave!", __R_Name[playerid], WAIT_RACE);
    if(__VehicleID[playerid] > 0) format(RaceStr, sizeof(RaceStr), "[TT RACE] The Race '%s' will start in %d seconds. Type /TT to leave! %s is required for this race.", __R_Name[playerid], WAIT_RACE, VehicleNames[__VehicleID[playerid]-400]);
	if(__VehicleID[playerid] == 0) format(RaceStr, sizeof(RaceStr), "[TT RACE] The Race '%s' will start in %d seconds. Type /TT to leave! This is an onfoot race only.", __R_Name[playerid], WAIT_RACE);
	SendClientMessage(playerid,0xA6F202FF, RaceStr);
//	new line[300];
	new ttrname[25],Float:tttime,tttdate[31];
	new ttrname2[25],Float:tttime2,tttdate2[31];
	format(query,sizeof(query),"SELECT `Name`,`Time`,DATE_FORMAT(`Date`, '%%D %%M %%Y') as `Date`  FROM`tracetimes` WHERE `raceID`=%d ORDER BY`tracetimes`.`Time`ASC LIMIT 1",raceid);
	mysql_query(SQL,query);
	
	if(cache_num_rows()!= 0)
	{
	/*
		if(mysql_fetch_row(line))
		{
			sscanf(line,"p<|>s[24]fs[30]",ttrname,tttime,tttdate);
		}
		*/
		cache_get_value_name(0,"Name",ttrname);
		cache_get_value_name(0,"Date",tttdate);
		cache_get_value_name_float(0,"Time",tttime);
	}
	////// mysql_free_result();
	format(query,sizeof(query),"select `Name`,`Time`,DATE_FORMAT(`Date`, '%%D %%M %%Y') as `Date2`  from `tracetimes` where `Time` = (select min(`Time`) from `tracetimes` as f where f.`raceID` = `tracetimes`.`raceID` AND `Name` = '%p' AND `raceID` = %d) order by `Time` ASC",playerid,raceid);
	mysql_query(SQL,query);
	
	if(cache_num_rows()!= 0)
	{
	/*	if(mysql_fetch_row(line))
		{
			sscanf(line,"p<|>s[24]fs[30]",ttrname2,tttime2,tttdate2);
		}*/
		cache_get_value_name(0,"Name",ttrname2);
		cache_get_value_name(0,"Date",tttdate2);
		cache_get_value_name_float(0,"Time",tttime2);
	}	
	format(RaceStr, sizeof(RaceStr), "{C8FF00}[TT RECORD] {FFFFFF}%s{C8FF00} ({FFFFFF}%s{C8FF00}) ({FFFFFF}%s{C8FF00})",ttrname,ReturnTime(tttime),tttdate);
	SendClientMessage(playerid,0xA6F202, RaceStr);
	format(RaceStr, sizeof(RaceStr), "{7BFF00}[Your Personal RECORD] {FFFFFF}%p{7BFF00} ({FFFFFF}%s{7BFF00}) ({FFFFFF}%s{C8FF00})",playerid,ReturnTime(tttime2),tttdate2);
	SendClientMessage(playerid,0xA6F202, RaceStr);
	////// mysql_free_result();
	ttCD[playerid] = WAIT_RACE;
	SetTimerEx("TT_StartRaceCD", 999, false, "dd",playerid, raceid);
	TogglePlayerControllable(playerid,false);
	RaceTime22(playerid,TT_ID[playerid]);
	
	return 1;
}



stock TT_ChecknTeleport(playerid, raceid)
{

	for(new i = 143; i < MAX_VEHICLES; i++)
	{
		if(!IsSeatTaken(i,0))
		{
				DestroyVehicle(i);
		}
	}	
	//DestroyVehicle(GetPlayerVehicleID(playerid));
	if(__VehicleID[playerid] == 0) return SendClientMessage(playerid, 0xAA3333AA, "You are not allowed vehicles in a foot race!");
//	splitCP[playerid] = 0;
	CallRemoteFunction("SetPlayerKB","dd",playerid,1);
	SetMinigame(playerid,146);
	if(__VehicleID[playerid] != 0) {
	SpawnVehicle(playerid, __VehicleID[playerid]);
	SetVehicleVirtualWorld(TTcar[playerid], playerid + 5);
	SetVehiclePos(TTcar[playerid], TT_Checkpoints[playerid][0][0], TT_Checkpoints[playerid][0][1], TT_Checkpoints[playerid][0][2]);	
	SetVehicleZAngle(TTcar[playerid], AngleToPoint(TT_Checkpoints[playerid][0][0], TT_Checkpoints[playerid][0][1], TT_Checkpoints[playerid][1][0], TT_Checkpoints[playerid][1][1]));	
	SetVehicleVirtualWorld(TTcar[playerid], playerid + 5);
	PutPlayerInVehicle(playerid, TTcar[playerid], 0);
	}
	else SetPlayerPos(playerid, TT_Checkpoints[playerid][0][0], TT_Checkpoints[playerid][0][1], TT_Checkpoints[playerid][0][2]);	
	if(__VehicleID[playerid] == 0 && IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, 0xAA3333AA, "You are not allowed vehicles in this race!");
	RaceCheckpoint[playerid] = 0;
	TT_ID[playerid] = raceid;
	
	format(xstring, sizeof(xstring), "~y~Joined Time Trial! ~b~Please wait %d seconds for it to start!", WAIT_RACE);
	GameTextForPlayer(playerid, xstring, 500, 3);
	
	SetPlayerRaceCheckpoint(playerid, CP_TYPE:0, TT_Checkpoints[playerid][0][0], TT_Checkpoints[playerid][0][1], TT_Checkpoints[playerid][0][2], TT_Checkpoints[playerid][1][0], TT_Checkpoints[playerid][1][1], TT_Checkpoints[playerid][1][2], TT_CPSize[playerid]);		
	return 1;
}
forward TT_StartRaceCD(playerid,raceid);
public TT_StartRaceCD(playerid,raceid)
{
	if(TT_ID[playerid] == -1) return 1;
	if(ttCD[playerid] == 0) return TT_StartRace(playerid,raceid);
	else {
		SetVehicleZAngle(GetPlayerVehicleID(playerid), AngleToPoint(TT_Checkpoints[playerid][0][0], TT_Checkpoints[playerid][0][1], TT_Checkpoints[playerid][1][0], TT_Checkpoints[playerid][1][1]));	
		new RaceInfoString[8],artcd[][6] = {"~r~","~b~","~g~","~p~","~w~","~y~"};
		format(RaceInfoString, sizeof(RaceInfoString), "%s%d", artcd[random(sizeof artcd)],ttCD[playerid]);
		GameTextForPlayer(playerid, RaceInfoString, 999, 3);
		ttCD[playerid] --;
		return SetTimerEx("TT_StartRaceCD", 999, false, "dd",playerid, raceid);
	}
}
forward TT_StartRace(playerid,raceid);
public TT_StartRace(playerid,raceid)
{
	SetPlayerRaceCheckpoint(playerid, CP_TYPE:0, TT_Checkpoints[playerid][1][0], TT_Checkpoints[playerid][1][1], TT_Checkpoints[playerid][1][2], TT_Checkpoints[playerid][2][0], TT_Checkpoints[playerid][2][1], TT_Checkpoints[playerid][2][2], TT_CPSize[playerid]);		
	RaceCheckpoint[playerid] = 2;
	GameTextForPlayer(playerid, "~r~GO!!!!", 3000, 3);
	TogglePlayerControllable(playerid,true);
	TextDrawShowForPlayer(playerid, Time18t[playerid]);
	TextDrawShowForPlayer(playerid, Positiont[playerid]);
	TextDrawShowForPlayer(playerid, Difft[playerid]); 
	//__RaceTick[playerid] = 0;
	__RaceTick[playerid] = GetTickCount();
	tttimer[playerid] = SetTimerEx("TTTimeTDUpdate", 999, true, "d", playerid);		
	if(!IsPlayerInAnyVehicle(playerid) && __VehicleID[playerid] != 0) SpawnVehicle(playerid, __VehicleID[playerid]);
	return 1;
}
forward RaceTime22(playerid,raceid);
public RaceTime22(playerid,raceid)
{
	
	new str[50];
	format(str,sizeof str,"~n~~w~%d/~p~%d",RaceCheckpoint[playerid]-2,__TotalCP[playerid] - 1);
	TextDrawSetString( Positiont[playerid],str);

	new HumanTime[10], minutes, seconds, secstring[3];
	minutes=__Timer[playerid]/60000;
	__Timer[playerid]=__Timer[playerid]-(minutes*60000);
	seconds=__Timer[playerid]/1000;
	__Timer[playerid]=__Timer[playerid]-(seconds*1000);
	if(seconds <10) format(secstring,sizeof(secstring),"0%d",seconds);
	else format(secstring,sizeof(secstring),"%d",seconds);
	format(HumanTime,sizeof(HumanTime),"%d:%s",minutes,secstring);	
	
	format(str,sizeof str,"~n~~g~%s",HumanTime);
	TextDrawSetString( Time18t[playerid],str);
/*	split[playerid][splitCP[playerid]] = floatdiv(__Timer[playerid] ,1000);
	new Float:printit = ReadSplitTimesFromDB(raceid,splitCP[playerid]) - split[playerid][splitCP[playerid]];
			
	new strx[50];
	if(printit > 0) format(strx,sizeof strx,"~y~TT HUD:~n~~w~HS:~g~-%0.3f",printit);
	else
	{
		printit *= -1;
		format(strx,sizeof strx,"~y~TT HUD:~n~~w~HS:~r~+%0.3f",printit);
	}
	TextDrawSetString( Difft[playerid],strx);*/
	TextDrawSetString( Difft[playerid],"~r~T~y~ime~r~A~y~ttack~n~    ~y~H~r~U~y~D:");
	return 1;
}

forward TTTimeTDUpdate(playerid);
public TTTimeTDUpdate(playerid)
{
	if(TT_ID[playerid] == -1) return 1;
	new	RaceString[18];
	__Timer[playerid] = TTGetRaceTick(playerid);

	
	new minutes, seconds, secstring[3];
	minutes=__Timer[playerid]/60000;
	__Timer[playerid]=__Timer[playerid]-(minutes*60000);
	seconds=__Timer[playerid]/1000;
	__Timer[playerid]=__Timer[playerid]-(seconds*1000);
	if(seconds <10) format(secstring,sizeof(secstring),"0%d",seconds);
	else format(secstring,sizeof(secstring),"%d",seconds);
	format(RaceString,sizeof(RaceString),"%d:%s",minutes,secstring);
	
    format(RaceString, sizeof(RaceString), "~n~~g~%s", RaceString);
	TextDrawSetString(Time18t[playerid], RaceString);
	
/*	if(TT_ID[playerid] != -1 && DisableRecord[playerid]==false && RWarning[playerid] < 3)
	{
		if(FPS[playerid] > 15 && FPS[playerid] < 30)
		{
			new str[128];
			format(str,sizeof str,"* Low FPS warning (%d/3)",RWarning[playerid]+1);
			SendClientMessage(playerid,0xAFAFAFAA,str);
			if(RWarning[playerid] == 2) 
			{
				DisableRecord[playerid]=true;
				RWarning[playerid]=0;
				SendClientMessage(playerid,COLOR_RED,"[TT]* *Due to LOW fps* , Your time wont be stored on database!");
			}
			else RWarning[playerid]++;
		}
	}*/
/*	if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),GetVehicleComponentType(1087)) == 1087)
	{
						RemoveVehicleComponent(GetPlayerVehicleID(playerid),1087);
	}*/
	return 1;
}


stock TT_Exit(playerid)
{
    RaceCheckpoint[playerid] = -1;
    TextDrawHideForPlayer(playerid, Time18t[playerid]);
    TextDrawHideForPlayer(playerid, Positiont[playerid]);
    TextDrawHideForPlayer(playerid, Difft[playerid]); 
   	DisablePlayerRaceCheckpoint(playerid);
	if(IsPlayerInAnyVehicle(playerid))
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetVehicleVirtualWorld(vehicleid, 0);
  		SetPlayerVirtualWorld(playerid, 0);
   		PutPlayerInVehicle(playerid, vehicleid, 0);
	}
	else
	{
		SetPlayerVirtualWorld(playerid, 0);
	}
	TogglePlayerControllable(playerid,true);
	KillTimer(tttimer[playerid]);
    TextDrawHideForPlayer(playerid, Time18t[playerid]);
    TextDrawHideForPlayer(playerid, Positiont[playerid]);
    TextDrawHideForPlayer(playerid, Difft[playerid]);
	__Timer[playerid] = 0;
	TT_ID[playerid] = -1;
	SetMinigame(playerid,0);
	CallRemoteFunction("SetPlayerKB","dd",playerid,0);
	return 1;
}





stock ReturnTime(Float:tiks)
{	
	new HumanTime[18], minutes, seconds, secstring[5], msecstring[5],ticks;
	ticks = floatround(tiks * 1000.0);
	minutes=ticks/60000;
	ticks=ticks-(minutes*60000);
	seconds=ticks/1000;
	ticks=ticks-(seconds*1000);
	format(secstring,sizeof(secstring),"%02d",seconds);
	format(HumanTime,sizeof(HumanTime),"%d:%s",minutes,secstring);
	format(msecstring,sizeof(msecstring),"%03d",ticks);
	format(HumanTime,sizeof(HumanTime),"%s.%s",HumanTime,msecstring);
	return HumanTime;
}

TTGetRaceTick(playerid)
{
	new tick, race;
	tick=GetTickCount();
	race=tick-__RaceTick[playerid];
	return race;
}
stock CreateTextTT(playerid)
{
	Time18t[playerid] = TextDrawCreate(550, 300, " ");
	TextDrawFont(Time18t[playerid], TEXT_DRAW_FONT_1);
	TextDrawSetShadow(Time18t[playerid], 0);
	TextDrawSetOutline(Time18t[playerid], 1);
	TextDrawSetProportional(Time18t[playerid], true);
	Positiont[playerid] = TextDrawCreate(550, 310, " ");
	TextDrawFont(Positiont[playerid], TEXT_DRAW_FONT_1);
	TextDrawSetShadow(Positiont[playerid], 0);
	TextDrawSetOutline(Positiont[playerid], 1);
	TextDrawSetProportional(Positiont[playerid], true);
	Difft[playerid] = TextDrawCreate(550, 290, " ");
	TextDrawFont(Difft[playerid], TEXT_DRAW_FONT_1);
	TextDrawSetShadow(Difft[playerid], 0);
	TextDrawSetOutline(Difft[playerid], 1);
	TextDrawSetProportional(Difft[playerid], true);
}
stock DeleteTextTT(playerid)
{
	if(TT_ID[playerid] == -1) return 1;
	TextDrawDestroy(Time18t[playerid]);
	TextDrawDestroy(Positiont[playerid]);
	TextDrawDestroy(Difft[playerid]);
	SetMinigame(playerid,0);
	CallRemoteFunction("SetPlayerKB","dd",playerid,0);
	return 1;
}

BuildInitial(playerid)
{
	for(new i=0;i<MAX_CHECKPOINT;i++)
	{
		BCPs[playerid][i][0] = -1;
		BCPs[playerid][i][1] = -1;
		BCPs[playerid][i][2] = -1;
		BCPs[playerid][i][3] = -1;
		BCPsize[playerid][i] = -1;
	}
	BTotalCPs[playerid] = 0;
	BCurrentCP[playerid] = -1;
	BName[playerid] = "UnNamed";
	BVehicleID[playerid] = 411;
}

AddCP(playerid)
{
	if(Players[playerid][AmBuilding] == false) return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
	if(BTotalCPs[playerid] == MAX_CHECKPOINT) return SendClientMessage(playerid,COLOR_RED,"[*]Sorry, maximum amount of checkpoints reached!");
	new Float:x,
		Float:y,
		Float:z,
		Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid,a);
	BInterior[playerid] = GetPlayerInterior(playerid);
	BCurrentCP[playerid] = BTotalCPs[playerid];
	BTotalCPs[playerid]++;
	BCPsize[playerid][BCurrentCP[playerid]] = 18;
	BCPs[playerid][BCurrentCP[playerid]][0] = x;
	BCPs[playerid][BCurrentCP[playerid]][1] = y;
	BCPs[playerid][BCurrentCP[playerid]][2] = z;
	BCPs[playerid][BCurrentCP[playerid]][3] = a;
	SetPlayerRaceCheckpoint(playerid, CP_TYPE:0, BCPs[playerid][BCurrentCP[playerid]][0], BCPs[playerid][BCurrentCP[playerid]][1], BCPs[playerid][BCurrentCP[playerid]][2], BCPs[playerid][BCurrentCP[playerid]][0], BCPs[playerid][BCurrentCP[playerid]][1], BCPs[playerid][BCurrentCP[playerid]][2], BCPsize[playerid][BCurrentCP[playerid]]);
	format(xstring,sizeof xstring,"[*] Checkpoint #%d Added!",BTotalCPs[playerid]);
	SendClientMessage(playerid,COLOR_YELLOW,xstring);
	return 1;
}

DeleteCP(playerid)
{
	if(Players[playerid][AmBuilding] == false) return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");

	DisablePlayerRaceCheckpoint(playerid);

	BTotalCPs[playerid]--;
	BCurrentCP[playerid] = BTotalCPs[playerid]-1;

	SetPlayerRaceCheckpoint(playerid, CP_TYPE:0, BCPs[playerid][BCurrentCP[playerid]][0], BCPs[playerid][BCurrentCP[playerid]][1], BCPs[playerid][BCurrentCP[playerid]][2], BCPs[playerid][BCurrentCP[playerid]][0], BCPs[playerid][BCurrentCP[playerid]][1], BCPs[playerid][BCurrentCP[playerid]][2], BCPsize[playerid][BCurrentCP[playerid]]);
	format(xstring,sizeof xstring,"[*] Checkpoint #%d Deleted!",BTotalCPs[playerid]+1);
	SendClientMessage(playerid,COLOR_YELLOW,xstring);
	return 1;
}
ChangeCPSize(playerid,Float:size)
{
	if(Players[playerid][AmBuilding] == false) return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
	BCPsize[playerid][BCurrentCP[playerid]] = size;
	SetPlayerRaceCheckpoint(playerid, CP_TYPE:0, BCPs[playerid][BCurrentCP[playerid]][0], BCPs[playerid][BCurrentCP[playerid]][1], BCPs[playerid][BCurrentCP[playerid]][2], BCPs[playerid][BCurrentCP[playerid]][0], BCPs[playerid][BCurrentCP[playerid]][1], BCPs[playerid][BCurrentCP[playerid]][2], BCPsize[playerid][BCurrentCP[playerid]]);
	format(xstring,sizeof xstring,"[*] Checkpoint #%d Size Changed to %.02f!",BTotalCPs[playerid],size);
	SendClientMessage(playerid,COLOR_YELLOW,xstring);
	return 1;
}

SaveRace(playerid)
{
	if(Players[playerid][AmBuilding] == false) return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
	new tmp_rID;
	format(xstring,sizeof xstring,"SELECT `raceID` FROM `race` where `racename` = '%s'",BName[playerid]);
	mysql_query(SQL,xstring);
	if(cache_num_rows() != 0) return SendClientMessage(playerid,COLOR_RED,"[||] Race Name Already Exist!");
	
	format(xstring,sizeof xstring,"INSERT INTO `race` (`TotalCP`, `racename`,  `vehicleID`, `interior`,`CreatedBy`, `bombrace`,`rweather`) VALUES ('%d','%s','%d','%d','%p','%d','%d')",BTotalCPs[playerid],BName[playerid],BVehicleID[playerid],BInterior[playerid],playerid,bombrace,tmpw);
	mysql_query(SQL,xstring);

	format(xstring,sizeof xstring,"SELECT `raceID` FROM `race` where `racename` = '%s'",BName[playerid]);
	mysql_query(SQL,xstring);
	
	cache_get_value_name_int(0,"raceID",tmp_rID);
	
	for(new i=0; i< BTotalCPs[playerid];i++)
	{
		format(xstring,sizeof xstring,"INSERT INTO `racecp` (`raceID`, `CP`, `X`, `Y`, `Z`, `A`, `CPsize`) VALUES (%d,%d,%f,%f,%f,%f,%f)",tmp_rID,i,BCPs[playerid][i][0],BCPs[playerid][i][1],BCPs[playerid][i][2],BCPs[playerid][i][3],BCPsize[playerid][i]);
		mysql_query(SQL,xstring);

	}
	format(xstring,sizeof xstring,"[*] Race \'%s\' Saved and Added to Database [Total %d Checkpoints]",BName[playerid],BTotalCPs[playerid]);
	SendClientMessage(playerid,COLOR_YELLOW,xstring);
	if(IsVIP(playerid))
	{
		SendClientMessage(playerid,COLOR_YELLOW,"[||] As VIP: You Can't Load Race! so Ask an Admin to load the race if its needed!");
	}
	ClearRace(playerid);
	SendClientMessage(playerid,COLOR_YELLOW,"[||] To Make More Races: Type /buildrace again");
	return 1;
}


ClearRace(playerid)
{
	if(Players[playerid][AmBuilding] == false) return SendClientMessage(playerid,COLOR_RED,"[||] You are not building a race!");
	SendClientMessage(playerid,COLOR_AMSG,"[*] You have Left Building Mode!");
	DisablePlayerRaceCheckpoint(playerid);
	Players[playerid][AmBuilding] = false;
	return 1;
}


stock GetRaceID(racename[])
{

	format(xstring,sizeof(xstring),"SELECT `RaceID` FROM`race` WHERE`racename`LIKE'%s' LIMIT 1",racename);
	mysql_query(SQL,xstring);
	if(cache_num_rows()!= 0)
	{
		new idxx = cache_get_row_int(0,1);
		return idxx;
	}
	else return '0';
	return 1;
}



LoadRace(playerid,racename[])
{
	if(RaceActive == true) return SendClientMessage(playerid,COLOR_RED,"*** Race Already Loaded by some other admin!"),SendClientMessage(playerid,COLOR_RED,"*** If you feel like its a bug then /endrace! ");
	RaceActive = true;
	new query[300];
	//new line[300];
	format(query,sizeof(query),"SELECT `bombrace`,`raceID`, `TotalCP`, `racename`,`vehicleID`,`Interior`, `deleted`,`CreatedBy`,`rweather`,`likes` FROM `race` WHERE `racename` LIKE '%s' LIMIT 1",racename);
	mysql_query(SQL,query);
	if(cache_num_rows()!= 0)
	{
			new del;
			//sscanf(line,"p<|>ddds[24]ddds[24]",bombrace,rID,TotalCP,R_Name,VehicleID,R_Interior,del,RCreator);
			cache_get_value_name_int(0,"bombrace",bombrace);
			cache_get_value_name_int(0,"raceID",rID);
			cache_get_value_name_int(0,"TotalCP",TotalCP);
			cache_get_value_name(0,"racename",R_Name);
			cache_get_value_name_int(0,"vehicleID",VehicleID);
			cache_get_value_name_int(0,"Interior",R_Interior);
			cache_get_value_name_int(0,"deleted",del);
			cache_get_value_name(0,"CreatedBy",RCreator);
			cache_get_value_name_int(0,"rweather",R_Weather);
			
			if(del == 1) return RaceActive = true,SendClientMessage(playerid,COLOR_RED,"*** This race have been deleted!"),SendClientMessage(playerid,COLOR_RED,"*** Contract Owner to re-store!");
			else
			{
				format(query,sizeof(query),"SELECT `X`, `Y`, `Z`, `A`, `CPsize` FROM `racecp` WHERE `raceID`=%d",rID);
				mysql_query(SQL,query);
				if(cache_num_rows()!= 0)
				{
				    new rows = cache_num_rows();
					for(new i; i<rows; i++)
					{
						cache_get_value_name_float(i,"X",CPs[i][0]);
						cache_get_value_name_float(i,"Y",CPs[i][1]);
						cache_get_value_name_float(i,"Z",CPs[i][2]);
						cache_get_value_name_float(i,"A",CPs[i][3]);
						cache_get_value_name_float(i,"CPSize",CPsize[i]);
					}
				}
				else return RaceActive = true,SendClientMessage(playerid,COLOR_RED,"*** Critical Error: Race~CP ^^ Loading Failed!");
				for(new i=0;i<5;i++)
				{
					RecordName[i] = "None";
					RecordTime[i] = 0;
					RecordVehicle[i] = " ";
				}
				format(query,sizeof(query),"SELECT `Name`, `Time`, `VehicleUsed` FROM `racetimes` WHERE `raceID`=%d ORDER BY`racetimes`.`Time`ASC LIMIT 5",rID);
				mysql_query(SQL,query);
				if(cache_num_rows()!= 0)
				{
					isRecordEmpty = false;
					new rows = cache_num_rows();
					for(new i; i<rows; i++)
					{
						cache_get_value_name(i,"Name",RecordName[i]);
						cache_get_value_name_float(i,"Time",RecordTime[i]);
						cache_get_value_name(i,"VehicleUsed",RecordVehicle[i]);
					}
				}
				else isRecordEmpty = true;
				//LastRaceRank = "~g~";
				lastwin = " ";
				return RaceDetails();
			}
	}
	else return RaceActive = false,SendClientMessage(playerid,COLOR_RED,"*** Race doesnt exist!");
}

stock RaceDetails()
{
	new likes;
	format(xstring,sizeof xstring,"SELECT `likes` FROM `race` WHERE `racename` = '%s'",R_Name);
	mysql_query(SQL,xstring);
	cache_get_value_name_int(0,"likes",likes);
	if(isRecordEmpty == false)
	{
		foreach(new i : Player)
		{
 			if(Players[i][Minigame] == 0)
			{
				format(xstring,sizeof xstring,"[^] Race '{FFFFFF}%s{FF51A8}' loaded! (Checkpoints:{FFFFFF} %d{FF51A8}) ({FFFFFF}%d {FF51A8}Likes)",R_Name,TotalCP,likes);
				SendClientMessage(i,0xFF51A8FF,xstring);
				format(xstring,sizeof xstring,"[^] Race '%s' loaded! (Checkpoints: %d)",R_Name,TotalCP);
				if(!strcmp(RecordVehicle[0], "NULL", true))
				{
					format(xstring,sizeof xstring,"[^] Best Racer: %s (%0.3f Seconds)",RecordName[0],RecordTime[0]);
				}	else format(xstring,sizeof xstring,"[^] Best Racer: %s (%0.3f Seconds)(%s)",RecordName[0],RecordTime[0],RecordVehicle[0]);
		  		SendClientMessage(i,0xFF51A8FF,xstring);
		  		format(xstring,sizeof xstring,"[^] ",RecordName[0],RecordTime[0],RecordVehicle[0]);
		  		SendClientMessage(i,0xFF51A8FF,"[^] Type /join to play this race!");
		  		if(bombrace == 1)
		  		{
		  		    SendClientMessage(i,0xFF51A8FF,"[$] This is a Death Race!");
		  		}
		  		//PlayerPlaySound(i,3200,0,0,0);
	  		}
  		}
	}
	else
	{
		foreach(new i : Player)
		{
			if(Players[i][Minigame] == 0)
			{
				format(xstring,sizeof xstring,"[^] Race '{FFFFFF}%s{FF51A8}' loaded! (Checkpoints:{FFFFFF} %d{FF51A8}) ({FFFFFF}%d {FF51A8}Likes)",R_Name,TotalCP,likes);
				SendClientMessage(i,0xFF51A8FF,xstring);
		  		SendClientMessage(i,0xFF51A8FF,"[^] Best Racer: {FFFFFF}None{FF51A8} (No Records)");
				SendClientMessage(i,0xFF51A8FF,"[^] Type /join to play this race!");
		  		if(bombrace == 1)
		  		{
		  		    SendClientMessage(i,0xFF51A8FF,"[$] This is a Death Race!");
		  		}
	  		}
  		}
	}
	RaceActive = true;
	xx_cd = DELAY_TIME;
	SetTimer("RaceCountDown",1000,false);
	TotalRacers=0;
	TotalRacersCur = 0;
	return 1;
}


public RaceCountDown()
{
	//03EJustin
	if(RaceActive == true)
	{
		xx_cd--;
		if(xx_cd > 4 )
		{
			format(xstring,sizeof(xstring),"Race \'%s\' ~n~About to Start~n~/JOIN to join the race!",R_Name,xx_cd);
			TextDrawSetString(racenotify,xstring);
			for(new i=0;i<MAX_PLAYERS;i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        TextDrawShowForPlayer(i,racenotify);
			    }
			}
			//TextDrawShowForAll(racenotify);
			SetTimer("RaceCountDown",1000,false);

		}
		else if(xx_cd == 4 )
		{
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(Players[i][AmRacing] == true)
				{
					RaceSound(i,1056);
					OnRaceCD = true;
					SetCameraBehindPlayer(i);
					TogglePlayerControllable(i, false);

				}
			}
			SetTimer("RaceCountDown",1000,false);
		}
		else if(xx_cd == 3 || xx_cd == 2 || xx_cd == 1 ) {

			RaceStart=true;
			format(xstring,sizeof(xstring),"~r~%d...",xx_cd);
			TextDrawHideForAll(racenotify);
			TextDrawSetString(racenotify," ");
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(Players[i][AmRacing] == true)
				{
					RaceSound(i,1056);
					GameTextForPlayer(i,xstring,750,3);

				}
			}
			SetTimer("RaceCountDown",1000,false);
		}
		else if(xx_cd == 0) {
			for(new i=0;i<MAX_PLAYERS;i++)
			{
				if(!IsPlayerConnected(i)) continue;
				if(Players[i][AmRacing] == true)
				{
					RaceSound(i,1057);
					GameTextForPlayer(i,"~g~GO!",1500,3);

				}
			}
			SetTimer("RaceCountDown",1000,false);
		}
		else
		{
			TotalRacers = 0;
			foreach(new i : Player)
			{
				if(!IsPlayerConnected(i)) continue;
				if(Players[i][AmRacing] == true)
				{
					TotalRacers++;
					TotalRacersCur = TotalRacers;
					OnRaceCD = false;
					TogglePlayerControllable(i, true);
					SetCameraBehindPlayer(i);
					DisablePlayerRaceCheckpoint(i);

				}
			}
			xx_cd = DELAY_TIME;
			TextDrawHideForAll(racenotify);
			TextDrawSetString(racenotify," ");
			if(TotalRacers !=0) return GoGoRace();
			else
			{
				format(xstring,sizeof xstring,"[$] Race '{FFFFFF}%s{FF9900}' Cancelled due to 0 racers",R_Name);
				SendClientMessageToAll(COLOR_ORANGE,xstring);
				RaceActive = false;
				RaceStart = false;
				OnRaceCD = false; // fix?
			}
		}
	}
	return 1;
}
GoGoRace()
{
	format(xstring,sizeof xstring,":race_car: Race '%s' has started with %d racers",R_Name,TotalRacers);
	DCC_SendChannelMessage(DCGen,xstring);
	
//	printf("enters");
	TotalRacers = 0;
	foreach(new i : Player)
	{
		Players[i][MyRank] = 0;
		if(!IsPlayerConnected(i)) continue;
		if(Players[i][AmRacing] == true)
		{
			//racelabel[i] = CreateDynamic3DTextLabel("JOINED RACE!", GetMyColor(i), 0.0, 0.0, 0.0,100,i);
			racelabel[i] = CreateDynamic3DTextLabel("JOINED RACE!", GetMyColor(i), 0.0, 0.0, -0.5,100, i, INVALID_VEHICLE_ID, 0,  -1,  -1,  -1, 100.0);
			//Attach3DTextLabelToPlayer( racelabel[ i ], i, 0,0,0.3);
			TotalRacers++;
			//printf("%d\nTotal Racers:%d and %d",i,TotalRacers,TotalRacersCur);
			MyCurrentCP[i] = 0;
		//	printf("1");
			//printf("%f %f %f %f %f %f %f", CPs[MyCurrentCP[i]][0], CPs[MyCurrentCP[i]][1], CPs[MyCurrentCP[i]][2], CPs[][0], CPs[MyCurrentCP[i]+1][1], CPs[MyCurrentCP[i]+1][2], CPsize[MyCurrentCP[i]]);
			SetPlayerRaceCheckpoint(i, CP_TYPE:0, CPs[MyCurrentCP[i]][0], CPs[MyCurrentCP[i]][1], CPs[MyCurrentCP[i]][2], CPs[MyCurrentCP[i]+1][0], CPs[MyCurrentCP[i]+1][1], CPs[MyCurrentCP[i]+1][2], CPsize[MyCurrentCP[i]]);
			//printf("2");
			Players[i][RacesJoined]++;
			//printf("3");
		}
	}
	TotalRacersCur = TotalRacers;
	//printf("done");
	RaceTime = 0;
	position = 0;
	rTimer = SetTimer("Race_Timing",1000,true);
	eTimer = SetTimer("RaceMustEnd",360*1000,false);
	RaceTick = 0;
	RaceTick = tickcount();
	RaceTick = GetTickCount();

	return 1;
}

public Race_Timing()
{
	if(TotalRacers == 0)
	{
		if(strcmp(lastwin, " ",true))
		{
		    SendClientMessageToAll(0xFF51A8FF,"[||] Race Cancelled due to No Racers");
		}
		else
		{
			if (strcmp(lastwin, " ", true) != 0)
			{

				format(xstring,sizeof xstring,"The last race was finished. (Winner: %s )",lastwin);
				SendClientMessageToAll(0xFF51A8FF,xstring);
			}
			lastwin = " ";
		}
		RaceActive = false;
		RaceStart = false;
		KillTimer(eTimer);
		return KillTimer(rTimer);
	}
	if(RaceActive == true && RaceStart == true)// && TotalRacers !=0)
	{
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(Players[i][AmRacing] == true)
			{

				RaceTime = GetRaceTick();
				format(xstring,sizeof xstring,"In Race..\nRace Time: %d\nCheckpoint: %d/%d",(RaceTime+1)/1000,MyCurrentCP[i],TotalCP);
				if(IsValidDynamic3DTextLabel(racelabel[i]))  UpdateDynamic3DTextLabelText(racelabel[ i ], GetMyColor(i),xstring);
			}
		}
		return RaceTime;
	}
	else{ KillTimer(eTimer); return KillTimer(rTimer); }
}
public RaceMustEnd()
{
	//03EJustin
				new query[200];
				for(new i=0;i<MAX_PLAYERS;i++)
				{
							if(Players[i][AmRacing] == true)
							{
									DisablePlayerRaceCheckpoint(i);
									TotalRacers--;
									DisableRemoteVehicleCollisions(i,false);

									RemovePlayerMapIcon(i, 56);
									TotalRacersCur--;
									MyCurrentCP[i]=0;
									Players[i][AmRacing] = false;
									Players[i][Minigame] = 0;
									if(IsValidDynamic3DTextLabel(racelabel[i]))  DestroyDynamic3DTextLabel(racelabel[i]);
							}
				}
				RaceActive=false;
				RaceStart = false;
				OnRaceCD = false;
				RaceTime = 0;
				TotalRacers = 0;
				TotalRacersCur = 0;
				xx_cd = DELAY_TIME;
				TextDrawHideForAll(racenotify);
				TextDrawSetString(racenotify," ");

				if (strcmp(lastwin, " ", true) != 0)
				{
					format(query,sizeof query,"The last race was finished. (Winner: %s )",lastwin);
					SendClientMessageToAll(0xFF51A8FF,query);
				}
				//SendClientMessageToAll(COLOR_GREY,query);
				lastwin = " ";
				//CreateRaceResultInfo("Last Race:", LastRaceRank,true);
				//SetTimer("Display8Seconds",10*1000,false);
				KillTimer(eTimer);
				KillTimer(rTimer);
				return 1;
}


public Check_IfMadeRecord(playerid,RaceID,Float:racetime)
{
	new query[300];
	format(query,sizeof query,"SELECT `Name`, `Time` FROM`racetimes` WHERE `raceID`= %d ORDER BY`racetimes`.`Time`ASC LIMIT 1",RaceID);
	mysql_query(SQL,query);
	if(cache_num_rows() != 0)
	{
		new tmp[24], Float:tmp_time;
		//sscanf(line,"p<|>s[24]f",tmp,tmp_time);
		cache_get_value_name(0,"Name",tmp);
		cache_get_value_name_float(0,"Time",tmp_time);
		if(tmp_time > racetime )
		{
			// record
			GameTextForPlayer(playerid,"~n~~w~TRACK RECORD!",13000,3);
			format(xstring,sizeof xstring,"%p",playerid);
			if(!strcmp(xstring, tmp, true)) format(xstring,sizeof xstring,"* %p (%0.3f Seconds) have broke their own record of %0.3f Seconds on \'%s\'",playerid,racetime,tmp_time, R_Name);
			else format(xstring,sizeof xstring,"* %p (%0.3f Secs) have broke the record of %s ( %0.3f Secs ) on \'%s\'",playerid,racetime,tmp,tmp_time, R_Name);
			SendClientMessageToAll(0xFF51A8FF,xstring);
		}
		else return 1;
	}
	else
	{
			GameTextForPlayer(playerid,"~n~~w~TRACK RECORD!",13000,3);
			// record
			format(xstring,sizeof xstring,"* %p have sets new record on \'%s\' Track",playerid, R_Name);
			SendClientMessageToAll(0xFF51A8FF,xstring);

	}
	return 1;
}



public Race_Rotation()
{
    foreach(new i : Vehicle)
	{
		if(!IsSeatTaken(i,0) && GetVehicleVirtualWorld(i) == 0) DestroyVehicleEx(i);
	}
	if(GetPlayerCount() == 0) return 1;
	new query[300];
	if(RaceRotation == true && RaceActive == false)
	{
		mysql_query(SQL,"SELECT `raceID`, `TotalCP`, `racename`, `vehicleID`, `deleted`,`Interior`,`CreatedBy` FROM `race` ORDER BY RAND() LIMIT 1");
		if(cache_num_rows()!= 0)
		{
			new del;
			cache_get_value_name_int(0,"raceID",rID);
			cache_get_value_name_int(0,"TotalCP",TotalCP);
			cache_get_value_name(0,"racename",R_Name);
			cache_get_value_name_int(0,"vehicleID",VehicleID);
			cache_get_value_name_int(0,"deleted",del);
			cache_get_value_name_int(0,"Interior",R_Interior);
			cache_get_value_name(0,"CreatedBy",RCreator);					
					
			if(del == 1) return Race_Rotation();
			else
			{
				format(query,sizeof(query),"SELECT `X`, `Y`, `Z`, `A`, `CPsize` FROM `racecp` WHERE `raceID`=%d",rID);
				mysql_query(SQL,query);
				if(cache_num_rows()!= 0)
				{
					new rows = cache_num_rows();
					for(new i=0;i<rows;i++)
					{
						cache_get_value_name_float(i,"X",CPs[i][0]);
						cache_get_value_name_float(i,"Y",CPs[i][1]);
						cache_get_value_name_float(i,"Z",CPs[i][2]);
						cache_get_value_name_float(i,"A",CPs[i][3]);
						cache_get_value_name_float(i,"CPsize",CPsize[i]);
					}
				}
			}
  				
			format(query,sizeof(query),"SELECT `Name`, `Time`, `VehicleUsed` FROM `racetimes` WHERE `raceID`=%d ORDER BY`racetimes`.`Time`ASC LIMIT 5",rID);
			mysql_query(SQL,query);
			if(cache_num_rows()!= 0)
			{
				isRecordEmpty = false;
				new rows = cache_num_rows();
				for(new i=0;i<rows;i++)
				{
					cache_get_value_name(i,"Name",RecordName[i]);
					cache_get_value_name_float(i,"Time",RecordTime[i]);
					cache_get_value_name(i,"VehicleUsed",RecordVehicle[i]);
				}
			}	else isRecordEmpty = true;
			return RaceDetails();
		}
	}
	return 1;
}


forward MoneyGet(playerid);
public MoneyGet(playerid)
{
	if(Players[playerid][Minigame] == 50)
	{
		GivePlayerCash(playerid,1500);
		GameTextForPlayer(playerid,"~g~+$1500",800,3);
	}
}


public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(TT_ID[playerid] != -1)
	{
	    if(RaceCheckpoint[playerid] > 0)
		{
			if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),GetVehicleComponentType(1087)) == 1087)
			{
						RemoveVehicleComponent(GetPlayerVehicleID(playerid),1087);
			}
		    new raceid = TT_ID[playerid], checkpoint[MAX_PLAYERS];
			RaceTime22(playerid,raceid);
			
			checkpoint[playerid]= RaceCheckpoint[playerid];
			if(RaceCheckpoint[playerid] == __TotalCP[playerid])
			{
				new str[128], playername[24];
				new lagtest = GetTickCount();
				/*new top=0,retiriving[300];
				
				
				format(query,sizeof query,"select `Time`,`Name` from `tracetimes` where `Time` = (select min(`Time`) from `tracetimes` as f where f.`Name` = `tracetimes`.`Name` AND `raceID` =%d AND `Time` <%0.3f) order by `Time` ASC",raceid,floatdiv(__Timer[playerid],1000));
				mysql_query(SQL,query);
				
				if(cache_num_rows() != 0)
				{
					while(mysql_fetch_row(retiriving))
					{
						top++;
					}
				}
				else top = -1;
				////// mysql_free_result();*/
				GetPlayerName(playerid, playername, sizeof(playername));
				/*
				if(top == -1) format(str, sizeof(str), "[TT RESULT] %s(%d) finished race %s(ID:%d) in %s Seconds", playername, playerid, __R_Name[playerid], raceid, ReturnTime(__Timer[playerid]));
				else format(str, sizeof(str), "[TT RESULT] %s(%d) finished race %s(ID:%d) in %s Seconds ", playername, playerid, __R_Name[playerid], raceid, ReturnTime(__Timer[playerid]));
				SendClientMessageToAll(0xED8540AA, str);
				if(top == 2) SetPlayerScore(playerid, GetPlayerScore(playerid) + 5);
				if(top == 3) SetPlayerScore(playerid, GetPlayerScore(playerid) + 3);
				if(top == 4) SetPlayerScore(playerid, GetPlayerScore(playerid) + 2);
				if(top == 5) SetPlayerScore(playerid, GetPlayerScore(playerid) + 1);*/
				TTTimeTDUpdate(playerid);
				new Float:fuckthatbitch = floatdiv(__Timer[playerid],1000);
				
				TT_AddTimeToDB(playerid,raceid,fuckthatbitch);
				new npodjdlad[24],top=0,query[500];//,retiriving[300];
				format(npodjdlad,sizeof npodjdlad,"%p",playerid);
				format(query,sizeof query,"select `Time`,`Name` from `tracetimes` where `Time` = (select min(`Time`) from `tracetimes` as f where f.`Name` = `tracetimes`.`Name`   AND `raceID` = %d) order by `Time` ASC LIMIT 15",TT_ID[playerid]);
				mysql_query(SQL,query);
				
				if(cache_num_rows() != 0)
				{
					new tmp[24], Float:tmp_time;//,tm_timeint;
					//while(mysql_fetch_row(retiriving))
					for(new h = 0;h<cache_num_rows();h++)
					{
						top+=1;
						//sscanf(retiriving,"p<|>fs[24]",tmp_time,tmp);
						cache_get_value_name(h,"Name",tmp);
						cache_get_value_name_float(h,"Time",tmp_time);
						if(!strcmp(npodjdlad, tmp, true)) 
						{
							if(tmp_time >= fuckthatbitch) { break; }
							else { top=99; break; }
						}
						if(tmp_time >= fuckthatbitch) {  break; }
					}
					
				}
				else top = 1;
				////// mysql_free_result();
				if(top < 11 && top > 0) 
				{
					format(str,sizeof(str),"* {FFF370}[New TT Highscore(%d)] {ED8540}%s(%d) finished race %s(ID:%d) in %s %s", top, playername, playerid, __R_Name[playerid], raceid, ReturnTime(fuckthatbitch)," ");
					SendClientMessageToAll(COLOR_RED,str);				
				}
				else
				{
					format(str, sizeof(str), "[TT RESULT] %s(%d) finished race %s(ID:%d) in %s %s", playername, playerid, __R_Name[playerid], raceid, ReturnTime(fuckthatbitch)," ");
					SendClientMessageToAll(0xED8540AA, str);
				}
				TT_Exit(playerid);
				
				new lagtest2 = GetTickCount();
				lagtest = lagtest2 - lagtest;
				if(IsPlayerAdmin(playerid)) 
				{
					format(str,sizeof str,"[DEBUG RCON ADMIN] Delay:= %0.4f Seconds",floatdiv(lagtest,1000));
					SendClientMessage(playerid,-1,str);
				}
				return 1;
			}
			RaceCheckpoint[playerid] ++;
			if(RaceCheckpoint[playerid] != __TotalCP[playerid]) SetPlayerRaceCheckpoint(playerid, CP_TYPE:0,  TT_Checkpoints[playerid][checkpoint[playerid]][0],   TT_Checkpoints[playerid][checkpoint[playerid]][1],   TT_Checkpoints[playerid][checkpoint[playerid]][2],  TT_Checkpoints[playerid][checkpoint[playerid]+1][0],   TT_Checkpoints[playerid][checkpoint[playerid]+1][1],   TT_Checkpoints[playerid][checkpoint[playerid]+1][2], TT_CPSize[playerid]);
		    if(checkpoint[playerid]+1 == __TotalCP[playerid]) SetPlayerRaceCheckpoint(playerid, CP_TYPE:1, TT_Checkpoints[playerid][checkpoint[playerid]][0],   TT_Checkpoints[playerid][checkpoint[playerid]][1],   TT_Checkpoints[playerid][checkpoint[playerid]][2], 0.0, 0.0, 0.0, TT_CPSize[playerid]);
			//splitCP[playerid]++;
		}
		return 1;
	}
	
	if(IsPlayerInRaceCheckpoint(playerid) && RaceActive == true && RaceStart == true && Players[playerid][AmRacing] == true)
	{
		new PLAYER_STATE:playerstate = GetPlayerState(playerid);
		new query[300];
		if(playerstate != PLAYER_STATE_ONFOOT && GetVehicleModel(GetPlayerVehicleID(playerid)) != VehicleID)
		{
				format(query,sizeof query,"* Appropriate Race vehicle: %v ( /v %v )",VehicleID,VehicleID);
				SendClientMessage(playerid,COLOUR_GREEN,query);
				SendClientMessage(playerid,COLOR_RED, "You need to be the driver of the appropriate race vehicle!");

				return 0;
   		}
		if(playerstate != PLAYER_STATE_DRIVER && playerstate != PLAYER_STATE_ONFOOT)
		{
				format(query,sizeof query,"* Appropriate Race vehicle: %v ( /v %v )",VehicleID,VehicleID);
				SendClientMessage(playerid,COLOUR_GREEN,query);
			    SendClientMessage(playerid,COLOR_RED, "You need to be the driver of the appropriate race vehicle!");
				return 0;
		}
        if(!IsPlayerInAnyVehicle(playerid)) return 0;
		new string2[150];
		if(MyCurrentCP[playerid] == TotalCP-1)
		{
		    RaceTime = GetRaceTick();
		    SpeedBoostDisabled[playerid] = false;
			position++;
			MyCurrentCP[playerid]++;
			Players[playerid][MyRank] = position;


			DisablePlayerRaceCheckpoint(playerid);
			Players[playerid][AmRacing] = false;
			Players[playerid][Minigame] = 0;
			if(IsValidDynamic3DTextLabel(racelabel[playerid]))  DestroyDynamic3DTextLabel(racelabel[playerid]);
			format(query,sizeof(query),"* %p has finished the race at \'%d\' (%0.3f Seconds)", playerid,position,float(RaceTime)/1000.0);
			SendClientMessageToAll(COLOR_GREY,query);
	
			format(string2, sizeof(string2), "**%p (ID:%d)** has finished the race in position %d (%0.3f Seconds)", playerid,playerid,position,float(RaceTime)/1000.0);
			DCC_SendChannelMessage(DCGen,string2);
			
			
			ShowPlayerDialog(playerid,7080,DIALOG_STYLE_MSGBOX,"Did you like this race","Did you enjoy this race?","Yes","No");
			
			Players[playerid][Expierience]+=10;			
			CheckRankForLevelUp(playerid);
			
			DisableRemoteVehicleCollisions(playerid,false);

			Players[playerid][MyRank] = position;
			RaceSound(playerid,1139);
			SpeedBoostDisabled[playerid] = false;
			TotalRacersCur--;
			switch(position)
			{
				case 1:
				{
				    StopAudioStreamForPlayer(playerid);
					GivePlayerCash(playerid,25000);
					format(lastwin,sizeof(lastwin),"%p",playerid);
					Check_IfMadeRecord(playerid,rID,float(RaceTime)/1000.0);
					SendClientMessage(playerid,0xFFD700FF,"You earned 10 RxToken(s)");
					Players[playerid][Token] += RaceWinToken;
					GameTextForPlayer(playerid,"~g~ +10 Bonus ~y~Token!",500,3);
					Players[playerid][RacesWon]++;
					PlayerPlaySound(playerid,5448,0,0,0);
				}
				case 2:
					{
						GivePlayerCash(playerid,17000);
						SendClientMessage(playerid,0xFFD700FF,"Youearned 5 RxToken(s)");
						Players[playerid][Token] += 5;
						GameTextForPlayer(playerid,"~g~ +5 Bonus ~y~Token!",500,3);
						StopAudioStreamForPlayer(playerid);
					}

					case 3:
					{
 						GivePlayerCash(playerid,10000);
						SendClientMessage(playerid,0xFFD700FF,"You earned 3 RxToken(s)");
						Players[playerid][Token] += 3;
						GameTextForPlayer(playerid,"~g~ +3 Bonus ~y~Token!",500,3);
						StopAudioStreamForPlayer(playerid);
					}

					default:
					{
						SendClientMessage(playerid,0xFFD700FF,"You earned 1 RxToken");
						Players[playerid][Token] += 1;
						GameTextForPlayer(playerid,"~g~ +1 Bonus ~y~Token!",500,3);
						StopAudioStreamForPlayer(playerid);
					}
			}
			SendClientMessage(playerid,0xFFD700FF,"* Tip'n'Trick: Use /rt to use your RxTokens and /mrt To Check Your RxToken. /thelp for more info");
			format(query,sizeof(query),"INSERT INTO `racetimes`(`raceID`, `Name`, `Time`,`VehicleUsed`) VALUES (%d,'%p',%f,'%v')",rID,playerid,float(RaceTime)/1000.0,GetVehicleModel(GetPlayerVehicleID(playerid)));
			mysql_query(SQL,query);
			if(TotalRacersCur==0)
			{
				foreach(new i : Player)
				{
					if(Players[i][AmRacing] == true)
					{
						DisablePlayerRaceCheckpoint(i);
						SpeedBoostDisabled[i] = false;
						TotalRacers--;
						TotalRacersCur--;
						MyCurrentCP[i]=0;
						Players[i][AmRacing] = false;
						Players[i][Minigame] = 0;
						if(IsValidDynamic3DTextLabel(racelabel[i]))  DestroyDynamic3DTextLabel(racelabel[i]);
					}
				}
				bombrace = 0;
				RaceActive=false;
				RaceStart = false;
				OnRaceCD = false;
				RaceTime = 0;
				TotalRacers = 0;
				TotalRacersCur = 0;
				xx_cd = DELAY_TIME;
				TextDrawHideForAll(racenotify);
				TextDrawSetString(racenotify," ");

				if (strcmp(lastwin, " ", true) != 0)
				{
					format(query,sizeof query,"The last race was finished. (Winner: %s )",lastwin);
					SendClientMessageToAll(COLOR_GREY,query);
				}
				lastwin = " ";
				//CreateRaceResultInfo("Last Race:", LastRaceRank,true);
				SetTimer("Display8Seconds",10*1000,false);
				KillTimer(rTimer);
				KillTimer(eTimer);
			}
		}
		else if(MyCurrentCP[playerid] == TotalCP-2)
		{
			RemovePlayerMapIcon(playerid, MAPICON:56);
			SetPlayerRaceCheckpoint(playerid, CP_TYPE:1, CPs[MyCurrentCP[playerid]+1][0], CPs[MyCurrentCP[playerid]+1][1], CPs[MyCurrentCP[playerid]+1][2], 0.0,0.0,0.0, CPsize[MyCurrentCP[playerid]+1]);
			MyCurrentCP[playerid]++;
			format(query,sizeof query,"~n~~n~~w~Race Time: ~g~%d~n~~r~Last~w~ Checkpoint~n~~w~%d/%d",RaceTime/1000,MyCurrentCP[playerid],TotalCP);
			GameTextForPlayer(playerid,query,1500,3);
			RaceSound(playerid,1138);
		}
		else //if(MyCurrentCP[playerid] == TotalCP-2)
		{
			RemovePlayerMapIcon(playerid, 56);
			SetPlayerMapIcon(playerid, 56, CPs[MyCurrentCP[playerid]+2][0], CPs[MyCurrentCP[playerid]+2][1], CPs[MyCurrentCP[playerid]+2][2], 56, 0, MAPICON_LOCAL_CHECKPOINT);
			SetPlayerRaceCheckpoint(playerid, CP_TYPE:0, CPs[MyCurrentCP[playerid]+1][0], CPs[MyCurrentCP[playerid]+1][1], CPs[MyCurrentCP[playerid]+1][2], CPs[MyCurrentCP[playerid]+2][0], CPs[MyCurrentCP[playerid]+2][1], CPs[MyCurrentCP[playerid]+2][2], CPsize[MyCurrentCP[playerid]+1]);
			MyCurrentCP[playerid]++;
			format(query,sizeof query,"~n~~n~~w~Race Time: ~g~%d~n~~w~Checkpoint~n~~w~%d/%d",RaceTime/1000,MyCurrentCP[playerid],TotalCP);
			GameTextForPlayer(playerid,query,1500,3);
			PlayerPlaySound(playerid,1056,0,0,0);
			if(IsValidDynamic3DTextLabel(pRaceLabel[playerid])) DestroyDynamic3DTextLabel(pRaceLabel[playerid]);
			new a = MyCurrentCP[playerid];
			if(IsValidDynamic3DTextLabel(pRaceLabel[playerid])) DestroyDynamic3DTextLabel(pRaceLabel[playerid]);
			format(query,sizeof query,"Race %s\nCheckpoint %d",R_Name,a);
			RaceSound(playerid,1138);
			pRaceLabel[playerid] = CreateDynamic3DTextLabel(query,COLOR_BLUE,CPs[a][0],CPs[a][1],CPs[a][2] + 10,100,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,playerid,230.0);
		}
	}
	return 1;
}/*
forward Display8Seconds();
public Display8Seconds()
{
		printf("entered");
		//TextDrawSetString(RaceFinal[0]," ");
		TextDrawSetString(RaceFinal[1]," ");
		//TextDrawSetString(RaceFinal[2]," ");
		TextDrawSetString(RaceFinal[3]," ");
		//TextDrawSetString(RaceFinal[4]," ");

		TextDrawHideForAll(RaceFinal[0]);
		TextDrawHideForAll(RaceFinal[1]);
		TextDrawHideForAll(RaceFinal[2]);
		TextDrawHideForAll(RaceFinal[3]);
		TextDrawHideForAll(RaceFinal[4]);*/
	/*	for(new i=0; i<5;i++)
		{
			printf("i - %d .. j= %d",i,j);
			PlayerTextDrawHide(j, RaceFinal);
			PlayerTextDrawSetString(RaceFinal," ");
			PlayerTextDrawDestroy(j, RaceFinal);
		}

		//LastRaceRank = "~g~";
		return 1;
}*/
/*stock CreateRaceResultInfo(title[], string[],bool:show)
{
	for(new i;i<MAX_PLAYERS;i++)
	{

		TextDrawSetString( RaceFinal[1],title);
		TextDrawSetString( RaceFinal[3],string);
		if(show == true) {
			TextDrawShowForAll(RaceFinal[0]);
			TextDrawShowForAll(RaceFinal[1]);
			TextDrawShowForAll(RaceFinal[2]);
			TextDrawShowForAll(RaceFinal[3]);
			TextDrawShowForAll(RaceFinal[4]);
		}
	}
	return 1;
}*/
stock IsNotAdmin(playerid)
{
    if (!IsPlayerAdmin(playerid))
	{
	    SendClientMessage(playerid, COLOR_RED, "You need to be an admin to use this command!");
	    return 1;
    }
    return 0;
}

/*
public Float:Distance(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2)
{
	new Float:temp=floatsqroot((x1-x2) * (x1-x2) + (y1-y2) * (y1-y2) + (z1-z2) * (z1-z2));
	if(temp < 0) temp=temp*(-1);
	return temp;
}
*/
/* ---------------------------- Stocks ------------------------------------ */


GetVehicleModelIDFromName(const vname[])
{
	for(new i = 0; i < 211; i++)
	{
		if(strfind(aVehicleNames[i], vname, true) != -1)
		return i + 400;
	}
	return -1;
}

stock GetXYInFrontOfPlayer(playerid, &Float:x2, &Float:y2, Float:distance)
{
	new Float:a;

	GetPlayerPos(playerid, x2, y2, a);
	GetPlayerFacingAngle(playerid, a);

	if(GetPlayerVehicleID(playerid))
	{
		GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}

	x2 += (distance * floatsin(-a, degrees));
	y2 += (distance * floatcos(-a, degrees));
}

stock IsAdmin(playerid)
{
	if(Players[playerid][AdminLvl] > 0) return true;
	return false;
}

stock IsPlayerAdminLevel(playerid,level)
{
	if(Players[playerid][AdminLvl] >= level) return true;
	return false;
}


SendMessageToAdmins_PM(playerid,level,color,const string[])
{
	foreach(new i : Player)
	{
		if(Players[i][AdminLvl] >= level)
	    {
			if(playerid != i)
		    {
		    	if(IsPlayerConnected(i) && Players[i][readpms] == true) SendClientMessage(i,color,string);
		    }
	    }
	}
}

SendMessageToMinigame(color,mingame,const String[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i) && Players[i][Minigame] == mingame)
	    {
		 	SendClientMessage(i,color,String);
	    }
	}
}

SendMessageToAdmins_Tele(playerid,level,color,const string[])
{
	foreach(new i : Player)
	{
		if(Players[i][AdminLvl] >= level)
	    {
			if(playerid != i)
		    {
		    	if(IsPlayerConnected(i) && Players[i][readteles] == true) SendClientMessage(i,color,string);
		    }
	    }
	}
}

SendMessageToAdmins(playerid,level,color,const string[])
{
	foreach(new i : Player)
	{
		if(Players[i][AdminLvl] >= level)
	    {
			if(playerid != i)
		    {
		    	if(IsPlayerConnected(i) && Players[i][AdminMsgs] == true) SendClientMessage(i,color,string);
		    }
	    }
	}
}

stock PlaySoundForAdmins(sound)
{
    foreach(new i : Player)
	{
		if(Players[i][AdminLvl] > 0) PlayerPlaySound(i,sound,0,0,0);
	}
}




stock SendMessageToAdminsExPlayer(playerid,color,level,const string[])
{
	foreach(new i : Player)
	{
		if(Players[i][AdminLvl] >= level)
	    {
	    	if(IsPlayerConnected(i) && playerid != id) SendClientMessage(i,color,string);
	    }
	}
}


SendMessageToAdminsEx(color,level,const string[])
{
	foreach(new i : Player)
	{
		if(Players[i][AdminLvl] >= level)
	    {
	    	if(IsPlayerConnected(i)) SendClientMessage(i,color,string);
	    }
	}
	return 1;
}

SendMessageToAdminsEx_Lookup(color,level,const string[])
{
	foreach(new i : Player)
	{
		if(IsAdmin(i) && Players[i][AdminLvl] >= level && Players[i][IPLookups] == true)
	    {
	    	if(IsPlayerConnected(i)) SendClientMessage(i,color,string);
	    }
	}
}


SendTeleMessageToAdmins(color,level,const string[])
{
	foreach(new i : Player)
	{
		if(IsAdmin(i) && Players[i][AdminLvl] >= level && Players[i][readteles] == true)
	    {
	    	if(IsPlayerConnected(i)) SendClientMessage(i,color,string);
	    }
	}
}

stock GetAdminCount()
{
	new count;
	foreach(new v : Player)
	{
		if (IsPlayerConnected(v) && IsAdmin(v) && Players[v][hidden] == false) count++;
	}
	return count;
}

stock GetVIPCount()
{
	new count;
	foreach(new v : Player)
	{
		if (IsPlayerConnected(v) && IsVIP(v)) count++;
	}
	return count;
}

stock fcreate(const filename[])
{
    if (fexist(filename)){return false;}
    new File:fhandle = fopen(filename,io_write);
    fclose(fhandle);
    return true;
}

stock PlaySoundForAll(soundid)
{
   	foreach(new i : Player)
	{
	    if(IsPlayerConnected(i)) PlayerPlaySound(i,soundid,0,0,0);
	}
}

Chat_SendMessageToAdmins(color,level,const string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i) && Players[i][AdminLvl] >= level)
  		{
			SendClientMessage(i,color,string);
	    }
	}
}

GetMyColor(playerid)
{
	switch(Players[playerid][Color])
	{
		case 1: { return COLOR_RED; }
		case 2: { return COLOR_LIME; }
		case 3: { return COLOR_BLUE; }
		case 4: { return COLOR_WHITE; }
		case 5: { return COLOR_GREEN; }
		case 6: { return COLOR_YELLOW; }
		case 7: { return COLOR_AQUA; }
		case 8: { return COLOR_ORANGE; }
		case 9: { return COLOR_LIGHTBLUE; }
		case 10: { return COLOR_DYELLOW; }
		case 11: { return COLOR_BYELLOW; }
		case 12: { return COLOR_BBLUE; }
		case 13: { return COLOR_PURPLE; }
	}
	return 1;
}


SetMyColor(playerid)
{
	//ShowPlayerDialog(playerid,28,DIALOG_STYLE_LIST,"Colors","Red\nBlue\nYellow\nPurple\nOrange\nWhite\nGreen\nAqua\nDark Yellow\nBright Yellow\nBright Blue\nLight Blue\nPink\nBrown\nGrey\nLime\nCustom Color","Ok","Cancel");
	switch(Players[playerid][Color])
	{
		case 1: { SetPlayerColor(playerid,COLOR_RED); }
		case 2: { SetPlayerColor(playerid,COLOR_LIME); }
		case 3: { SetPlayerColor(playerid,COLOR_BLUE); }
		case 4: { SetPlayerColor(playerid,COLOR_WHITE); }
		case 5: { SetPlayerColor(playerid,COLOR_GREEN); }
		case 6: { SetPlayerColor(playerid,COLOR_YELLOW); }
		case 7: { SetPlayerColor(playerid,COLOR_AQUA); }
		case 8: { SetPlayerColor(playerid,COLOR_ORANGE); }
		case 9: { SetPlayerColor(playerid,COLOR_LIGHTBLUE); }
		case 10: { SetPlayerColor(playerid,COLOR_DYELLOW); }
		case 11: { SetPlayerColor(playerid,COLOR_BYELLOW); }
		case 12: { SetPlayerColor(playerid,COLOR_BBLUE); }
		case 13: { SetPlayerColor(playerid,COLOR_PURPLE); }
		case 18: { SetPlayerColor(playerid,COLOR_ADMIN); }
		case 20: { SetPlayerColor(playerid,PRO_MEMBER); }
		case 16: { SetPlayerColor(playerid,COLOR_GREY); }
		case 19: { SetPlayerColor(playerid,STRONG_ORANGE); }
	}
	return 1;
}

stock IsValidSkin(skinid)
{
    #define	MAX_BAD_SKINS 22
    new badSkins[MAX_BAD_SKINS] =
    {
        3, 4, 5, 6, 8, 42, 65, 74, 86, 119, 149, 208, 265, 266, 267, 268, 270, 273, 289,299
    };
    if (skinid < 0) return false;
    if(skinid >= 300 && skinid <= 311) return true;
    switch(skinid)
    {
		case 3, 4, 5, 6, 8, 42, 65, 86, 119, 149, 208, 273, 289: return true;
    }
    for (new i = 0; i < MAX_BAD_SKINS; i++)
    {
        if (skinid == badSkins[i]) return false;
    }
    #undef MAX_BAD_SKINS
    return 1;
}


stock IsSeatTaken(vehicleid, seatid)
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
        {
	  		if(GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == seatid) return 1;
	  	}
    }
    return 0;
}

/*
stock IsVehicleOccupied(vehicleid)
{
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
    	if(IsPlayerInVehicle(i, vehicleid)) return true;
	}
	return false;
}
*/

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

IsPlayerInInvalidNosVehicle(playerid)
{
    #define MAX_INVALID_NOS_VEHICLES 29

    new InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
    {
	581,523,462,521,463,522,461,448,468,586,
	509,481,510,472,473,493,595,484,430,453,
	452,446,454,590,569,537,538,570,449
    };

    new vehicleid = GetPlayerVehicleID(playerid);

    if(IsPlayerInVehicle(playerid,vehicleid))
    {
		for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
		{
		    if(GetVehicleModel(vehicleid) == InvalidNosVehicles[i])
		    {
		        return true;
		    }
		}
    }
	
	vehicleid = 0;	
	print("%d",vehicleid);
    return false;
}

IsNumeric2(const string[])
{
	new length=strlen(string);
	if (length==0) return false;
	for (new i = 0; i < length; i++)
	{
	  if((string[i] > '9' || string[i] < '0' && string[i]!='-' && string[i]!='+' && string[i]!='.') // Not a number,'+' or '-' or '.'
	         || (string[i]=='-' && i!=0)                                             // A '-' but not first char.
	         || (string[i]=='+' && i!=0)                                             // A '+' but not first char.
	     ) return false;
	}
	if (length==1 && (string[0]=='-' || string[0]=='+' || string[0]=='.')) return false;
	return true;
}

RandomVehicleColor()
{
	return random(128);
}




ReturnTeleportID()
{
	new object;
	for(new a = 0; a <= 20; a++)
	{
		if(strlen(TeleportSystem[a][tName]) == 0)
		{
			object = a;
			break;
		}
	}
	return object;
}


stock IsValidObjectModel(modelid)
{
       switch(modelid)
       {
               case 354, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
               1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
               1243, 1445, 1487, 1299, 4022, 620, 4550, 15030, 15029, 15031,
               15042, 1768, 1818, 1717, 2100, 2023, 2297, 2126, 2249, 2138,
               2139, 2136, 2135, 2121, 3115, 2109, 13592, 13666, 13641, 13639,
               13634, 8493, 3374, 1305, 2918, 1472, 9766, 5130, 4563, 1468, 1583,
               1584, 1574, 1248, 1512, 1598, 1608, 1594, 1607, 1813, 3642, 3616,
               9322, 2780, 3425, 3461, 3515, 3524, 3528, 3586, 6865,1725,1766,2069,
               2070,2071,7916, 8484, 8979, 14608, 16776, 3397, 10009, 13831, 14467, //jacob objects


               902, 903, 953, 1461, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
               1606, 1609, 1610, 1611, 1637, 1640, 1641, 1642, 13952,
               1643, 2404, 2405, 2406, 2410, 2782, //beach and sea

               1612, 3406, 3578, 3620, 3753, 3879, 3886, 5108, 5109, 5115, 5143, 5145,
               5146, 5154, 5155, 5156, 5157, 5158, 5160, 5166, 5167, 5176, 5184, 6188,
               6189, 6230, 6300, 8373, 9090, 9229, 9230, 9253, 9257, 9329, 9584, 9585,
               9586, 9590, 9612, 9613, 9818, 9819, 9820, 9821, 9822, 9829, 9858, 9902,
               9954, 9955, 9956, 9958, 10140, 10226, 10227, 10229, 10230, 10300, 10301,
               10305, 10771, 10793, 10794, 10795, 10824, 10826, 10827, 10828, 10830, 10831,
               10833, 10834, 10841, 11009, 11145, 11146, 11237, 11495, 12990, 16502, 17068,
               18024, //ships docks etc

               3249, 6869, 6985, 6987, 6988, 6989, 7071, 7263, 7265, 7289, 7521, 8395, 8399,
               8400, 8501, 8663, 9070, 9071, 9072, 9076, 9104, 9582, 10398, 10713, 13132, 14399,
               14463, 14533, 14536, 14537, 14546, 14560, 14563, 14581, 14590, 14606, 14607, 14614,
               14623, 14624, 14625, 14738, 14777, 14785, 14808, 14809, 14815, 14821, 14831, 14832,
               14835, 14836, 14838, 16021, 16051, 16146, 16150, 16690, 17523, 17700, 18018, 18028,
               18090, //bar & casino

               3689, 3707, 3755, 3776, 4860, 5129, 5131, 5135, 5137, 5138, 5139, 5174, 5175, 5177,
               5180, 5183, 5192, 5278, 5309, 5310, 5313, 5397, 5728, 6340, 6404, 6490, 6925, 7019,
               7020, 7021, 7035, 7269, 7490, 7492, 7494, 7495, 7496, 7497, 7513, 7627, 7832, 7861,
               8057, 8058, 8059, 8060, 8061, 8062, 8063, 8064, 8065, 8066, 8067, 8069, 8254, 8255,
               8260, 8300, 8544, 8545, 8546, 9243, 9244, 9247, 9260, 9680, 10775, 10776, 10840, 10843,
               10844, 10845, 10846, 10847, 10856, 10965, 10966, 11010, 11011, 11012, 11081, 11085, 11086,
               11087, 11089, 11090, 11093, 11233, 11234, 11235, 11236, 11244, 11290, 11293, 11295, 11461,
               11543, 12847, 12931, 12941, 12981, 12988, 13059, 13060, 13061, 13065, 13066, 13077, 13078,
               13198, 14572, 14577, 14588, 14784, 14795, 16271, 16272, 16385, 16398, 16399, 16400, 17012,
               17013, 17014, 17015, 17016, 17017, 17021, 17022, 17023, 17024, 17038, 17040, 17049, 17050,
               17051, 17072, 17073, 17538, 17546, 17636, 18200, 18365, 18496, //factories and warehouses

               1675, 1677, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3178, 3241, 3242, 3246,
               3250, 3253, 3283, 3284, 3285, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312,
               3313, 3314, 3315, 3316, 3317, 3351, 3353, 3355, 3356, 3362, 3414, 3415, 3417, 3418, 3442,
               3443, 3444, 3445, 3446, 3449, 3454, 3455, 3456, 3457, 3464, 3466, 3483, 3484, 3485, 3486,
               3487, 3488, 3501, 3555, 3556, 3557, 3558, 3580, 3582, 3583, 3584, 3587, 3588, 3589, 3590,
               3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
               3612, 3613, 3614, 3617, 3618, 3619, 3622, 3623, 3624, 3626, 3628, 3634, 3635, 3639,
               3640, 3641, 3644, 3646, 3648, 3649, 3651, 3653, 3655, 3661, 3676, 3677, 3678, 3684,
               3697, 3698, 3700, 3702, 3704, 3711, 3713, 3741, 3759, 3762, 3764, 3765, 3783, 3820, 3821,
               3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3842, 3843, 3844, 3845, 4178, 4861,
               4886, 5060, 5151, 5341, 5416, 5421, 5423, 5425, 5444, 5445, 5446, 5447, 5448, 5450, 5451,
               5452, 5453, 5461, 5462, 5475, 5476, 5520, 5626, 5642, 5643, 5655, 5656, 5722, 5723, 5775,
               5874, 5891, 5892, 5986, 6038, 6039, 6041, 6042, 6047, 6057, 6058, 6132, 6133, 6134, 6135,
               6136, 6137, 6138, 6284, 6285, 6286, 6294, 6436, 6522, 6868, 6920, 6921, 6922, 6923, 6926,
               7200, 7287, 7489, 7491, 7533, 7534, 7535, 7681, 7885, 7929, 7932, 7940, 8425, 8427, 8428,
               8433, 8437, 8513, 9098, 9220, 9221, 9227, 9228, 9238, 9258, 9259, 9270, 9271, 9272, 9273,
               9274, 9275, 9319, 9320, 9323, 9324, 9325, 9326, 9327, 9328, 9341, 9495, 9496, 9497,
               9498, 9499, 9500, 9501, 9502, 9503, 9504, 9506, 9507, 9509, 9510, 9511, 9512, 9513, 9515,
               9516, 9517, 9518, 9520, 9521, 9522, 9523, 9524, 9529, 9547, 9549, 9550, 9572, 9573, 9576,
               9577, 9578, 9579, 9580, 9581, 9592, 9598, 9599, 9737, 9738, 9739, 9740, 9741, 9742, 9748,
               9749, 9750, 9751, 9752, 9753, 9754, 9762, 9763, 9764, 9765, 9894, 9895, 9903, 9904, 9909,
               9916, 9920, 9927, 9947, 9948, 9952, 10013, 10014, 10015, 10016, 10017, 10019, 10020, 10021,
               10022, 10043, 10048, 10050, 10053, 10055, 10080, 10084, 10086, 10101, 10187, 10188, 10189,
               10278, 10287, 10289, 10306, 10427, 10634, 10988, 10989, 10990, 10991, 10992, 10993, 10995,
               10998, 11001, 11002, 11004, 11433, 11490, 11491, 11501, 11502, 11503, 12937, 12938, 12939,
               12940, 12991, 13681, 13687, 13694, 13695, 13696, 13697, 13701, 13721, 13724, 13729, 13746,
               13747, 13753, 13754, 13755, 13816, 14385, 14388, 14389, 14390, 14417, 14418, 14419, 14420,
               14421, 14422, 14423, 14424, 14425, 14426, 14427, 14428, 14429, 14430, 14431, 14471, 14474,
               14475, 14476, 14484, 14485, 14492, 14495, 14500, 14512, 14525, 14526, 14534, 14639, 14700,
               14701, 14702, 14703, 14706, 14707, 14708, 14709, 14710, 14711, 14712, 14713, 14714, 14717,
               14718, 14735, 14736, 14746, 14748, 14750, 14754, 14755, 14756, 14758, 14759, 14760, 14771,
               14801, 14803, 14859, 14865, 14889, 15041, 15046, 15048, 15054, 15055, 15058,
               15059, 16105, 16280, 16285, 16689, 17005, 17008, 17041, 17044, 17045, 17067, 17335, 17547,
               17549, 17551, 17552, 17553, 17554, 17555, 17560, 17562, 17573, 17575, 17679, 17690, 17697,
               17698, 17699, 17804, 17807, 17809, 17859, 17888, 17893, 17894, 17901, 17922, 17926,
               17928, 17934, 17944, 18230, 18258, 18259, 18267, //buildings, apartments

               3781, 4002, 4005, 4006, 4007, 4008, 4017, 4019, 4021, 4023, 4028, 4033, 4113, 4193,
               4558, 4559, 4564, 4569, 4570, 4571, 4572, 4573, 4576, 4585, 4586, 4587, 4600, 4601,
               4602, 4603, 4681, 4690, 4718, 5033, 5735, 5736, 5740, 5767, 5881, 5882, 5999, 6059, 6063,
               6087, 6088, 6099, 6100, 6102, 6148, 6159, 6199, 6205, 6211, 6212, 6288, 6332, 6336, 6342,
               6351, 6364, 6366, 6368, 6371, 6373, 6388, 6389, 6390, 6391, 6966, 6993, 7009, 7528, 7584,
               7585, 7696, 8391, 8392, 8393, 8419, 8421, 8422, 8424, 8434, 8480, 8482, 8485, 8488, 8489,
               8490, 8527, 8528, 8555, 8565, 8566, 8568, 9361, 9907, 9919, 10027, 10041, 10044, 10056, 10060,
               10063, 10143, 10308, 10610, 10619, 10676, 10871, 10945, 10947, 10948, 11431, 11566, 13006, 14593,
               14594, 14595, 14597, 14602, 16004, 16326, 17533, //offices and skyscrapers

               967, 1638, 1684, 3243, 3292, 3293, 3504, 3615, 3866, 3873, 3887, 3976, 3980, 3986, 3998, 4013,
               4014, 4079, 4101, 4103, 4552, 4554, 5116, 5402, 5403, 5408, 5426, 5705, 5706, 5708, 5710, 5711,
               5712, 5716, 5720, 5763, 5835, 5837, 5863, 5864, 5865, 5886, 6036, 6037, 6040, 6296, 6337, 6863,
               6864, 6866, 6871, 6872, 6873, 6874, 6875, 6962, 6994, 7011, 7023, 7027, 7094, 7511, 7525, 8034,
               84079, 8130, 8131, 8136, 8168, 8169, 8230, 8231, 8237, 8397, 8431, 8500, 8575, 8578, 8591,
               8620, 8675, 8867, 8870, 8881, 8882, 8955, 9037, 9039, 9052, 9078, 9106, 9114, 9310, 9593, 9623,
               9624, 9834, 9835, 9836, 9900, 9901, 9918, 9931, 9949, 9950, 9951, 10023, 10031, 10049, 10270,
               10368, 10377, 10378, 10379, 10380, 10381, 10401, 10433, 10631, 10829, 10832, 10941, 10942,
               11008, 11015, 11088, 11425, 11426, 11427, 11428, 11440, 11441, 11442, 11443, 11444, 11445,
               11446, 11447, 11451, 11454, 11457, 11458, 11459, 11492, 12805, 12925, 12928, 12929, 12935,
               12942, 12943, 12959, 12960, 12978, 12983, 13007, 13027, 13190, 13295, 13725, 14408, 14412,
               14413, 14415, 14444, 14445, 14447, 14466, 14530, 14576, 14592, 16095, 16096, 16137, 16138,
               16287, 16344, 16348, 16352, 16354, 16359, 16364, 16376, 16386, 16387, 16563, 16564, 16769,
               16770, 16774, 17688, 17946, 18033, 18036, 18045, 18049, 18065, 18234, 18235, 18236, 18274,
               18552, //other buildings

               3436, 3469, 4016, 4141, 4857, 4887, 4888, 5168, 5189, 5406, 5413, 5418, 5430, 5718, 5732,
               5814, 6010, 6257, 6283, 6907, 7037, 7240, 7387, 7389, 7426, 7509, 7596, 7972, 7973, 8409,
               8411, 8498, 8499, 8534, 8535, 8710, 9615, 9824, 9859, 9860, 9898, 10193, 10194, 10195, 10196,
               10197, 10310, 10412, 10425, 10446, 10606, 10718, 10744, 11469, 11549, 11674, 12924, 12976, 13361,
               14383, 14479, 14506, 14655, 14674, 14675, 15033, 15034, 15053, 16012, 16066, 16067,
               16070, 16106, 16143, 16144, 16562, 16568, 16605, 16673, 16767, 16781, 17534, 18009, 18020, 18021,
               18022, 18023, 18029, 18056, 18058, 18237, 18239, 18242, //resturant and hotels

               3452, 3453, 3819, 5390, 5400, 6066, 7416, 7417, 7420, 7421, 7422, 7600, 7601, 7602, 7603, 7604, 7617,
               7983, 8201, 8333, 8417, 10385, 10405, 10406, 10407, 10408, 10409, 10410, 10561, 10954, 10955,
               13595, 13598, 13599, 13602, 13603, 13606, 13607, 13608, 13609, 13610, 13611, 13612, 13613, 13614, 13615,
               13616, 13617, 13618, 13619, 13620, 13621, 13624, 13625, 13627, 13631, 13628, 13632, 13629, 13633, 13630,
               13642, 13650, 13651, 13657, 13661, 13662, 13659, 13660, 13801, 14449, 14486, 14488, 14778,
               14779, 14780, 14781, 14782, 14786, 14787, 14788, 14789, 14790, 14791, 14792, 14794, 14825, 14827, 17511,
               17513, 17515, 17563, 17582, 17841, //sports and stadium

               3988, 4001, 4004, 4011, 4018, 4048, 4058, 4059, 4060, 4112, 4114, 4117, 4123, 4176, 4555, 4593, 4594,
               4682, 4683, 4708, 4848, 4850, 4877, 4880, 4894, 5016, 5017, 5040, 5042, 5110, 5134, 5136, 5140, 5142, 5173,
               5179, 5181, 5182, 5187, 5267, 5392, 5393, 5410, 5414, 5521, 5532, 5628, 5704, 5709, 5717, 5719, 5721, 5725,
               5726, 5727, 5729, 5730, 5731, 5733, 5734, 5737, 5738, 5760, 5761, 5762, 5765, 5768, 5769, 5771, 5781, 5782,
               5784, 5787, 5792, 5810, 5813, 5819, 5848, 5870, 5896, 6048, 6053, 6060, 6061, 6095, 6096, 6098, 6103, 6104,
               6130, 6145, 6150, 6151, 6157, 6158, 6186, 6187, 6282, 6334, 6338, 6354, 6355, 6369, 6406, 6488, 6908, 6919,
               6924, 6944, 6946, 6947, 6977, 7088, 7234, 7424, 7493, 7506, 7507, 7508, 7510, 7526, 7529, 7531, 7554, 7599,
               7650, 7658, 7985, 8068, 8242, 8401, 8403, 8432, 8435, 8436, 8494, 8495, 8496, 8503, 8504, 8505, 8506, 8507,
               8508, 8509, 8516, 8567, 8569, 8570, 8571, 8581, 8639, 8643, 8668, 8687, 8688, 8689, 8839, 8842, 8849, 9054,
               9055, 9162, 9163, 9299, 9300, 9301, 9302, 9303, 9494, 9514, 9595, 9906, 9908, 9910, 9911, 9912, 9913, 9914,
               9917, 9921, 9922, 9923, 9924, 9925, 9926, 9928, 9929, 9953, 10025, 10028, 10030, 10035, 10037, 10038, 10039,
               10045, 10046, 10052, 10054, 10142, 10148, 10288, 10369, 10375, 10376, 10383, 10388, 10390, 10391, 10392, 10393,
               10423, 10428, 10429, 10430, 10431, 10432, 10434, 10435, 10439, 10441, 10447, 10624, 10625, 10626, 10627, 10628,
               10630, 10633, 10722, 10891, 10925, 10949, 10950, 10951, 10952, 10953, 10973, 10974, 10975, 10977, 10978, 10979,
               10980, 10981, 10982, 10994, 10996, 10997, 10999, 11000, 11092, 11301, 11312, 11314, 11315, 11317, 11434, 11436,
               11449, 11450, 11456, 11471, 11475, 11497, 11545, 11546, 11615, 12822, 12841, 12843, 12844, 12845, 12849, 12850,
               12855, 12862, 12863, 12923, 12944, 12945, 12946, 12947, 12948, 12949, 12951, 12953, 12962, 12963, 12964, 12979,
               12980, 12982, 12984, 13008, 13012, 13013, 13014, 13015, 13022, 13131, 13363, 13364, 13761, 14531, 14661, 14664,
               14665, 14667, 14670, 14671, 14672, 14676, 14682, 14689, 14668, 14669, 16005, 16007, 16011, 16053, 16054, 16064,
               16065, 16068, 16069, 16361, 16396, 16475, 17066, 17503, 17508, 17517, 17519, 17520, 17521, 17522, 17524, 17526,
               17529, 17531, 17536, 17537, 17542, 17543, 17544, 17577, 17853, 17862, 18007, 18008, 18025, 18026, 18027, 18030,
               18031, 18038, 18082, 18083, 18088, 18203, 18233, 18238, 18240, 18241, 18261, 18264, 18265, 18266,
               18282, //Stores and Shops

               1376, 1378, 1380, 1381, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 3474, 5126, 10825,
               11400, 11401, 11406, 16328, 16332, 16337, 16355, 16356, //cranes

               925, 930, 931, 944, 964, 1271, 1348, 1362, 1431, 1685, 2038, 2039, 2040, 2041, 2042, 2043, 2358, 2359, 2464, 2465,
               2466, 2468, 2476, 2477, 2478, 2479, 2480, 2481, 2483, 2567, 2654, 2669, 2678, 2679, 2694, 3565, 3566, 3568, 3569, 3570,
               3571, 3572, 3573, 3574, 3575, 3576, 3577, 3621, 3630, 3632, 3633, 3722, 3724, 3761, 3796, 3798, 3799, 3800, 5132, 5259,
               5260, 5261, 5262, 5269, 5855, 7025, 7040, 7102, 7104, 7172, 7186, 7317, 7515, 7516, 7527, 7561, 7620, 7621, 7622, 7834,
               7836, 8073, 8074, 8075, 8076, 8077, 8078, 8335, 8337, 8339, 8341, 8883, 8884, 8885, 8886, 9587, 9588, 9589, 9604, 10231,
               10248, 10576, 10773, 10774, 10811, 10814, 12821, 12859, 12860, 12861, 12913, 12927, 12930, 12955, 12977, 13025, 13489, 14549,
               14552, 14558, 14612, 14613, 14800, 14878, 16599, 16601, 17019, 17020, 17055, 18257, 18260, //crates drums racks

               914, 915, 919, 920, 927, 929, 934, 943, 958, 959, 1353, 1354, 1420, 1617, 1618, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1635,
               1687, 1688, 1689, 1690, 1691, 2649, 2653, 3214, 3255, 3256, 3257, 3258, 3259, 3272, 3273, 3287, 3384, 3427, 3470, 3502, 3529,
               3530, 3631, 3636, 3637, 3638, 3643, 3673, 3675, 3804, 3805, 3812, 3813, 3865, 6867, 6928, 6929, 6930, 6931, 6932, 6933, 6934,
               7024, 7103, 7105, 7201, 7236, 7238, 7291, 7947, 7950, 10675, 11147, 11148, 11149, 11484, 11485, 11486, 11487, 12911, 12912,
               12986, 14573, 14584, 14635, 14882, 16071, 16072, 16073, 16074, 16075, 16076, 16078, 16079, 16080, 16081, 16083, 16086, 16087,
               16267, 16301, 16309, 16311, 16314, 16316, 16318, 16340, 16342, 16345, 16346, 16349, 16395, 16446, 16481, 16530, 16531, 16532,
               16533, 16534, 16535, 16666, 16766, 17001, 18201, //general industrial

               1455, 1484, 1485, 1486, 1488, 1509, 1510, 1511, 1517, 1520, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551,
               1664, 1665, 1666, 1667, 1668, 1669, 1732, 1950, 1951, 14565, 16151, 16152, //BAR ITEMS

               1515, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
               1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
               1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
               1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
               1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1952, 1953, 1955, 1956, 1978, 1979, 2188, 2189, 2324, 2325, 2326,
               2327, 2347, 2348, 2349, 2618, 2640, 2681, 2754, 2778, 2779, 2783, 2785, 2872, 3430, 3437, 3438, 3440, 3441, 3494, 3498, 3499,
               3503, 14566, 14567, 14568, 14582, //CASINO OBJECTS

               936, 937, 941, 1416, 1417, 1421, 1645, 1646, 1647, 1730, 1740, 1741, 1742, 1743, 1744, 1754, 1755,
               1758, 1759, 1762, 1765, 1767, 1769, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1823,
               2000, 2007, 2014, 2015, 2016, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2046, 2063, 2065, 2066, 2067,
               2078, 2081, 2082, 2083, 2084, 2087, 2088, 2089, 2092, 2094, 2095, 2128, 2129, 2133, 2134, 2137,
               2140, 2141, 2142, 2143, 2145, 2148, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
               2160, 2161, 2162, 2163, 2164, 2167, 2168, 2187, 2191, 2197, 2199, 2200, 2204, 2208, 2210, 2211, 2234,
               2235, 2236, 2291, 2292, 2295, 2303, 2304, 2305, 2306, 2307, 2323, 2328, 2329, 2330, 2334, 2335, 2338,
               2341, 2416, 2418, 2419, 2451, 2462, 2463, 2475, 2482, 2502, 2509, 2529, 2530, 2531, 2532, 2533, 2534,
               2562, 2568, 2569, 2570, 2573, 2574, 2576, 2591, 2604, 2606, 2608, 2609, 2610, 2708, 2737, 5171, 9362,
               11334, 13003, 13890, 14455, 14472, 14477, 14491, 14493, 14502, 14503, 14504, 14505, 14507, 14508, 14509,
               14510, 14535, 14540, 14543, 14544, 14556, 14632, 14633, 14640, 14704, 14719, 14720, 14721, 14739, 14741,
               14745, 14802, 14805, 14813, 14816, 14817, 14828, 14839, 14850, 14888, 14895, 15025, 15026, 15032, 15036,
               15052, 16154, 16378, 18019, 18077, //FURNITURE

               1513, 1514, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
               1890, 1891, 1959, 1972, 1973, 1981, 1982, 1983, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
               1995, 1996, 2012, 2362, 2365, 2366, 2367, 2368, 2369, 2375, 2376, 2379, 2385, 2387, 2388, 2393, 2403, 2412,
               2413, 2414, 2422, 2423, 2424, 2433, 2434, 2435, 2436, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
               2448, 2449, 2450, 2454, 2455, 2457, 2458, 2459, 2460, 2461, 2467, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
               2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2505, 2506, 2507, 2508, 2535, 2536, 2537, 2538,
               2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
               2557, 2577, 2578, 2579, 2581, 2582, 2583, 2584, 2585, 2586, 2589, 2590, 2593, 2594, 2597, 2598, 2601, 2620,
               2621, 2622, 2623, 2624, 2625, 2626, 2652, 2698, 2699, 2701, 2749, 2750, 2751, 2752, 2753, 2771, 2803, 2804,
               2805, 2806, 2871, 12854, 14403, 14650, 14651, 14652, 14653, 14654, 14660, 14666, 14678, 14679, 14685, 14686,
               14693, 14811, 14890, 18061, 18064, 18070, 18092, //shop items

               643, 1256, 1280, 1281, 1368, 1432, 1433, 1516, 1562, 1563, 1663, 1670, 1671, 1679, 1704, 1705, 1708,
               1711, 1714, 1715, 1716, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1735, 1739, 1746, 1805, 1806,
               1810, 1811, 1824, 1825, 1826, 1827, 1896, 1954, 1957, 1963, 1968, 1969, 1970, 1998, 1999, 2008, 2009, 2027,
               2079, 2096, 2120, 2122, 2123, 2124, 2125, 2165, 2166, 2169, 2171, 2172, 2173, 2174, 2175, 2180, 2181,
               2182, 2183, 2184, 2185, 2193, 2198, 2205, 2206, 2207, 2209, 2293, 2308, 2309, 2310, 2311, 2313, 2314, 2315,
               2319, 2321, 2343, 2346, 2350, 2356, 2370, 2592, 2605, 2607, 2635, 2636, 2637, 2638, 2639, 2644, 2723, 2724,
               2725, 2746, 2747, 2748, 2762, 2763, 2764, 2776, 2777, 2784, 2788, 2799, 2800, 2801, 2802, 2807, 2808, 3383,
               3657, 3752, 11631, 11665, 12842, 14401, 14405, 14458, 14490, 14619, 14620, 14657, 14770, 14810, 14833, 14837,
               14869, 18055, 18057, 18059, 18060, //tables & chairs

               3975, 3977, 3978, 3981, 3982, 3983, 3984, 3985, 3987, 3989, 3997, 4000, 4010, 4012, 4020, 4027, 4029, 4030,
               4109, 4110, 4122, 4186, 4197, 4198, 4551, 4556, 4562, 4568, 4584, 4590, 4604, 4643, 4700, 4703, 4712, 4806,
               4811, 4812, 4813, 4814, 4858, 4873, 4879, 5105, 5107, 5111, 5122, 5123, 5144, 5185, 5186, 5270, 5273, 5274,
               5279, 5311, 5342, 5343, 5355, 5404, 5419, 5420, 5459, 5474, 5518, 5519, 5652, 5739, 5741, 5815, 5823, 5845,
               5857, 6064, 6101, 6152, 6160, 6165, 6213, 6217, 6227, 6280, 6281, 6293, 6297, 6312, 6313, 6343, 6347, 6398,
               6416, 6417, 6443, 6497, 6882, 6883, 6884, 6885, 6979, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051,
               7098, 7099, 7100, 7101, 7203, 7217, 7218, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7357, 7448, 7449,
               7450, 7451, 7452, 7453, 7454, 7455, 7456, 7460, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471,
               7472, 7473, 7474, 7530, 7553, 7557, 7588, 7882, 7889, 7994, 7996, 7997, 7999, 8000, 8001, 8003, 8004, 8005,
               8006, 8033, 8037, 8071, 8133, 8198, 8199, 8202, 8228, 8232, 8264, 8283, 8288, 8306, 8351, 8352, 8353, 8398,
               8402, 8404, 8463, 8465, 8466, 8467, 8469, 8486, 8497, 8515, 8529, 8531, 8533, 8553, 8554, 8564, 8582, 8583,
               8584, 8585, 8661, 8664, 8671, 8672, 8677, 8844, 8850, 8857, 8859, 9047, 9056, 9057, 9062, 9064, 9065, 9066,
               9083, 9135, 9136, 9137, 9138, 9139, 9140, 9173, 9209, 9215, 9216, 9223, 9224, 9234, 9236, 9246, 9249, 9254,
               9255, 9256, 9261, 9284, 9285, 9286, 9287, 9288, 9289, 9290, 9291, 9304, 9306, 9309, 9311, 9312, 9313, 9315,
               9338, 9342, 9346, 9351, 9483, 9505, 9508, 9530, 9551, 9552, 9553, 9597, 9830, 9864, 9915, 9946, 10036, 10047,
               10083, 10242, 10274, 10350, 10351, 10352, 10353, 10354, 10355, 10370, 10371, 10372, 10373, 10374, 10382, 10387,
               10389, 10395, 10399, 10404, 10413, 10436, 10438, 10443, 10559, 10563, 10564, 10565, 10566, 10567, 10568,
               10569, 10570, 10571, 10608, 10609, 10635, 10850, 10865, 10936, 10938, 10943, 10946, 10969, 10976, 11005, 11006,
               11013, 11082, 11083, 11139, 11287, 11288, 11367, 11420, 11429, 11430, 11488, 11506, 11507, 11508, 11511, 11512,
               11513, 11517, 11518, 11519, 11522, 11523, 11525, 11526, 11527, 11528, 11529, 11531, 11532, 11533, 11535, 11542,
               11553, 11559, 11629, 11647, 12823, 12870, 12908, 12926, 12952, 12969, 13083, 13103, 13106, 13134, 13135, 13136,
               13144, 13145, 13146, 13171, 13175, 13176, 13178, 13179, 13213, 13214, 13486, 13675, 13804, 13805, 13813, 13820,
               16055, 16056, 16057, 16058, 16059, 16097, 16102, 16103, 16109, 16147, 16148, 16149, 16157, 16158, 16159, 16160,
               16161, 16162, 16163, 16164, 16165, 16166, 16167, 16168, 16169, 16170, 16171, 16172, 16173, 16174, 16175, 16176,
               16177, 16178, 16179, 16180, 16181, 16182, 16184, 16185, 16186, 16187, 16188, 16189, 16190, 16191, 16192, 16193,
               16195, 16196, 16197, 16199, 16200, 16201, 16203, 16204, 16205, 16206, 16207, 16208, 16209, 16211, 16212, 16213,
               16214, 16215, 16216, 16217, 16218, 16219, 16220, 16221, 16222, 16224, 16225, 16226, 16227, 16228, 16229, 16230,
               16231, 16232, 16234, 16235, 16236, 16237, 16239, 16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248,
               16249, 16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258, 16259, 16260, 16261, 16262, 16263, 16264,
               16397, 16421, 16422, 16423, 16424, 16593, 16693, 16694, 17079, 17080, 17082, 17085, 17086, 17087, 17089, 17092,
               17104, 17105, 17121, 17123, 17124, 17125, 17127, 17128, 17134, 17135, 17472, 17500, 17506, 17507, 17541, 17545,
               17559, 17567, 17568, 17619, 17633, 17645, 17677, 17685, 17689, 17892, 17906, 18293, 18294, 18295, 18296, 18297,
               18298, 18299, 18300, 18301, 18302, 18303, 18304, 18305, 18306, 18307, 18308, 18309, 18310, 18311, 18312, 18313,
               18314, 18315, 18316, 18317, 18318, 18319, 18320, 18321, 18324, 18325, 18326, 18327, 18328, 18329, 18330, 18335,
               18336, 18337, 18342, 18346, 18347, 18348, 18349, 18353, 18355, 18360, 18361, 18362, 18363, 18364,
               18469, //concrete and rock landmasses

               3522, 4701, 4702, 4810, 4815, 4842, 4843, 4844, 4845, 4847, 4851, 4852, 4859, 4875, 4876, 4897, 4898, 5036, 5114,
               5172, 5424, 5427, 5428, 5429, 5443, 5457, 5458, 5471, 5624, 5640, 5743, 5812, 5871, 5875, 5878, 5887, 5987, 6006,
               6007, 6065, 6094, 6203, 6233, 6234, 6236, 6315, 6356, 6487, 7032, 7353, 7359, 7457, 7458, 7459, 7461, 7475, 7536,
               7537, 7579, 7582, 7616, 7998, 8002, 8007, 8008, 8072, 8091, 8200, 8459, 8460, 8461, 8462, 8468, 8532, 8654, 8655,
               8868, 8983, 9046, 9082, 9086, 9087, 9206, 9207, 9208, 9210, 9211, 9212, 9213, 9214, 9217, 9218, 9219, 9225, 9226,
               9235, 9242, 9248, 9276, 9305, 9345, 9353, 9519, 9554, 9555, 9556, 9596, 9605, 9606, 9607, 9609, 9610, 9611, 9614,
               9616, 9617, 9863, 9889, 9891, 9930, 10034, 10087, 10151, 10273, 10290, 10358, 10384, 10386, 10400, 10403, 10411, 10414,
               10415, 10416, 10417, 10418, 10419, 10420, 10421, 10422, 10451, 10453, 10454, 10491, 10492, 10560, 10562, 10601, 10612,
               10613, 10616, 10618, 10637, 10638, 10694, 10851, 10861, 10862, 10863, 10864, 10903, 10904, 10905, 10917, 10926, 10939,
               10959, 10960, 10961, 10962, 10972, 10983, 11097, 11106, 11107, 11223, 11224, 11225, 11226, 11297, 11303, 11332, 11335,
               11340, 11362, 11363, 11364, 11408, 11509, 11510, 11514, 11515, 11516, 11520, 11521, 11524, 11530, 11537, 11538, 11539,
               11540, 11541, 11552, 11554, 11555, 11557, 11560, 11628, 12804, 12814, 12824, 12825, 12864, 12865, 12866, 12868, 12869,
               12871, 12872, 12916, 12989, 13017, 13019, 13021, 13030, 13035, 13036, 13039, 13040, 13041, 13042, 13043, 13044, 13049,
               13050, 13051, 13070, 13071, 13072, 13081, 13082, 13084, 13099, 13100, 13101, 13102, 13104, 13105, 13107, 13120, 13121,
               13122, 13123, 13124, 13125, 13126, 13147, 13148, 13149, 13150, 13156, 13157, 13158, 13163, 13165, 13167, 13172, 13177,
               13180, 13181, 13207, 13208, 13209, 13210, 13211, 13212, 13235, 13236, 13237, 13297, 13370, 13371, 13490, 13679, 13686,
               13691, 13692, 13698, 13700, 13702, 13710, 13711, 13715, 13716, 13719, 13723, 13734, 13737, 13740, 13741, 13742, 13756,
               13757, 13795, 13809, 13818, 13821, 13823, 13824, 13825, 13826, 13871, 13872, 16183, 16194, 16198, 16202, 16210, 16233,
               16238, 16684, 16685, 17075, 17081, 17083, 17084, 17088, 17090, 17091, 17093, 17094, 17095, 17096, 17097, 17098, 17099,
               17100, 17101, 17102, 17103, 17106, 17107, 17108, 17109, 17113, 17114, 17115, 17116, 17117, 17118, 17119, 17122, 17126,
               17129, 17130, 17131, 17132, 17133, 17136, 17137, 17138, 17139, 17140, 17141, 17142, 17143, 17144, 17145, 17301, 17302,
               17471, 17548, 17574, 17589, 17594, 17601, 17614, 17615, 17616, 17617, 17618, 17620, 17664, 17665, 17678, 17691, 17696,
               17864, 17865, 17866, 17877, 17878, 17880, 17881, 18231, 18322, 18323, 18331, 18332, 18333, 18334, 18338, 18339, 18340,
               18341, 18343, 18344, 18345, 18350, 18351, 18352, 18354, 18356, 18357, 18358, 18359, 18473, 18475, 18485, //grass and dirt landmasses

               955, 956, 1209, 1302, 1775, 1776, 1977, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2342,
               2353, 2354, 2355, 2420, 2425, 2427, 2429, 2438, 2453, 2647, 2663, 2683, 2702, 2703, 2767, 2768, 2769, 2814, 2821, 2823,
               2837, 2838, 2839, 2840, 2856, 2857, 2858, 2859, 2860, 2861, 2866, 2867, 2880, 2881, //food and drinks

               1426, 1428, 1436, 1437, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1519, 1521, 1656,
               1698, 2633, 3361, 3399, 3671, 3674, 3867, 4106, 4120, 4121, 4170, 4171, 4180, 4231, 4565, 4575, 4737, 4738, 4824, 4881,
               4882, 5268, 5301, 5308, 5627, 5822, 7659, 8572, 8580, 8613, 8614, 8615, 9316, 9484, 9566, 9618, 9767, 9814,
               9815, 9816, 10008, 10026, 10033, 10042, 10152, 10153, 10173, 10174, 10175, 10176, 10177, 10178, 10179, 10180, 10181,
               10185, 10234, 10309, 10672, 11472, 11479, 11493, 11496, 11544, 12839, 12950, 12958, 12985, 12987, 13011, 13644, 13749, 14387,
               14394, 14395, 14407, 14409, 14410, 14411, 14414, 14416, 14596, 14874, 14877, 16082, 16322, 16649, 16651, 16661, 16731, 17904,
               18366, 18368, //Ladders,Stairs, and Scaffolding

               3268, 3271, 3277, 3279, 3280, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3400, 3401, 3786, 3787,
               3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3797, 3885, 16093, 16639, 16640, 16641, 16642, 16643, 16644, 16645,
               16647, 16648, 16654, 16656, 16657, 16658, 16660, 16662, 16663, 16665, 16681, 16682, //industrial Military

               918, 1217, 1218, 1222, 1244, 1676, 1686, 1985, 3057, 3267, 3426, 3472, 3525,
               3534, 3743, 3864, 3877, 6965, 7073, 7268, 7388, 7392, 8483, 8491, 8492, 8980, 9831, 9833, 10397,
               10764, 11417, 13562, 13667, 16135, 16368, 16777, 16778, 16779, 16782, //industrial Special

               1211, 1214, 1215, 1216, 1223, 1257, 1258, 1262, 1263, 1269, 1270, 1278, 1283, 1284, 1285, 1286,
               1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1306, 1307, 1308, 1315, 1319, 1340, 1341, 1342, 1346,
               1350, 1351, 1352, 1363, 1366, 1367, 1478, 1568, 1570, 1571, 2600, 3398, 3407, 3408, 3447, 3459, 3460, 3463, 3516, 3853, 3854,
               3855, 3860, 3861, 3862, 3863, 3875, 6289, 6299, 6462, //street and road items ( poles etc. )

               625, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 644, 646, 647, 650, 651, 653, 675, 677, 678, 679, 682,
               692, 701, 702, 728, 741, 742, 743, 753, 754, 755, 756, 757, 759, 760, 761, 762, 800, 801, 802, 803, 804, 805, 806, 808, 809,
               810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 855, 856, 857, 859, 860, 861, 862, 863,
               864, 865, 866, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 948, 949, 950, 1360, 1361, 1364, 1597, 1807, 2001, 2010, 2011,
               2194, 2195, 2203, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2250, 2251, 2252, 2253, 2254, 2345, 2811, 3409,
               3439, 3450, 3520, 3532, 3660, 3802, 3806, 3810, 3811, 4034, 4172, 4173, 4174, 4175, 4184, 4185, 4981, 4982, 4984, 4985, 4986,
               4992, 4993, 5023, 5024, 5025, 5078, 5150, 5234, 5265, 5266, 5290, 5322, 5324, 5325, 5327, 5328, 5339, 5407, 5412, 5417, 5565,
               5629, 5633, 5634, 5635, 5636, 5637, 5638, 5641, 5682, 5847, 5877, 5888, 6046, 6204, 6214, 6237, 6362, 6372, 6386, 6399, 6403,
               6421, 6430, 6431, 6444, 6499, 7095, 7595, 7662, 7884, 7952, 7953, 7954, 7986, 8319, 8321, 8617, 8619, 8623, 8660, 8679, 8825,
               8826, 8827, 8828, 8835, 8836, 8837, 8846, 8852, 8887, 8888, 8889, 8982, 8989, 8990, 8991, 9019, 9034, 9035, 9152, 9153, 9317,
               9318, 9331, 9333, 9334, 9335, 9336, 9344, 9347, 9348, 9350, 9812, 10445, 11413, 11414, 13174, 13699, 13748, 13802, 14400, 14402,
               14468, 14469, 14804, 14834, 15038, 16390, 17528, 17532, 17872, 17874, 17875, 17876, 17879, 17886, 17887, 17891, 17905, 17907, 17937,
               17938, 17939, 17941, 17942, 17947, 17958, 18011, 18012, 18013, 18014, 18015, //plants

               744, 745, 746, 747, 748, 749, 750, 751, 752, 758, 807, 816, 828, 867, 868, 879, 880, 896, 897, 898, 899, 900, 901, 905, 906,
               1207, 1303, 1304, 4816, 9044, 9045, 9743, 9744, 9745, 9746, 10166, 10984, 10985, 10986, 11498, 11556, 13023, 13635, 16104,
               16110, 16111, 16112, 16113, 16114, 16115, 16116, 16117, 16118, 16119, 16120, 16121, 16122, 16123, 16124, 16125, 16126, 16127, 16128,
               16129, 16130, 16131, 16133, 16139, 16140, 16141, 16142, 16145, 16411, 16503, 16667, 16675, 16692, 17025, 17026, 17027, 17028, 17029,
               17030, 17031, 17032, 17033, 17034, 17035, 17069, 17071, 17076, 17299, 17456, 18225, 18226, 18227, 18228, //rock

               615, 616, 617, 618, 619, 621, 622, 623, 624, 629, 634, 641, 645, 648, 649, 652, 654, 655, 656, 657, 658, 659, 660, 661, 664,
               669, 670, 671, 672, 673, 674, 676, 680, 681, 683, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 703, 704,
               705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731,
               732, 733, 734, 735, 736, 737, 738, 739, 740, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
               780, 781, 782, 789, 790, 791, 792, 858, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 904, 3505, 3506,
               3507, 3508, 3509, 3510, 3511, 3512, 3517, 16060, 16061, 18268, 18269, 18270, 18271, 18272, 18273, //trees

               1681, 1682, 1683, 2469, 2470, 2472, 2473, 2510, 2511, 2512, 2773, 2774, 2775, 2781, 2792, 2793, 2794, 2795, 2796, 2797, 3489, 3491,
               3526, 3629, 3658, 3659, 3666, 3814, 3816, 3881, 3882, 4726, 4727, 4828, 4829, 4830, 4831, 4832, 4833, 4838, 4854, 4855, 4856, 4862,
               4863, 4864, 4865, 4866, 4867, 4869, 4874, 4890, 4990, 4991, 4995, 4996, 4997, 4998, 4999, 5000, 5002, 5003, 5004, 5006, 5009, 5034,
               6973, 7153, 7978, 7981, 8038, 8171, 8172, 8240, 8247, 8249, 8251, 8253, 8281, 8343, 8344, 8350, 8354, 8355, 8356, 8357, 8550, 9241,
               10029, 10755, 10756, 10757, 10758, 10760, 10761, 10763, 10766, 10767, 10768, 10769, 10810, 10815, 10816, 10817, 10818, 10819, 11283,
               11285, 14404, 14548, 14550, 14553, 16098, 16100, 16407, 16408, 16409, 16771, //airport objects

               3448, 3493, 4032, 4232, 4597, 4598, 4638, 4639, 4640, 4641, 4642, 4697, 6387, 6971, 6997, 7010, 7184, 7244, 7245, 7419, 7488, 7984,
               8040, 8390, 8407, 8410, 8420, 8841, 9957, 10010, 10051, 10621, 10629, 10778, 10779, 10780, 10781, 10782, 10783, 10784, 10785, 10786,
               10787, 10788, 17556, 17557, 17558, //car parks

               1451, 1452, 1453, 1454, 1457, 1458, 1479, 1480, 1482, 1483, 3252, 3286, 3375, 3402, 3403, 3419, 12915, 12917, 12918, 12919, 12920,
               12921, 12922, 13002, 13206, 13367, 14871, 14873, 14875, 16108, 16388, 16389, 16404, 16405, 16406, 17000, 17009, 17010, 17011, 17039,
               17052, 17053, 17054, 17057, 17058, 17059, 17060, 17061, 17063, 17074, 17298, 17324, 17457, //farm objects

               966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
               994, 995, 996, 997, 998, 1250, 1251, 1282, 1374, 1407, 1408, 1410, 1411, 1412, 1413, 1414, 1418, 1419, 1422, 1423, 1424,
               1425, 1427, 1434, 1435, 1446, 1447, 1456, 1459, 1460, 1552, 1553, 1648, 1652, 1653, 1662, 2098, 2395, 2400, 2650, 2651, 2755,
               3260, 3275, 3276, 3282, 3451, 3475, 3550, 3749, 3771, 3850, 4099, 4100, 4190, 4195, 4196, 4201, 4202, 4724, 5001, 5005, 5007, 5030,
               5062, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5051, 5068, 5081, 5082, 5190, 5306, 5338, 5893, 6049, 6960, 6961, 6967, 6968,
               6969, 6970, 7022, 7026, 7028, 7029, 7030, 7031, 7033, 7034, 7038, 7039, 7191, 7192, 7196, 7197, 7198, 7209, 7210, 7212, 7223, 7224,
               7227, 7277, 7292, 7319, 7361, 7367, 7368, 7369, 7370, 7371, 7377, 7378, 7379, 7380, 7381, 7418, 7423, 7504, 7505, 7514, 7517, 7518,
               7522, 7524, 7538, 7539, 7540, 7556, 7560, 7592, 7593, 7611, 7612, 7613, 7614, 7615, 7623, 7624, 7625, 7657, 7663, 7664, 7665, 7692,
               7837, 7838, 7839, 7840, 7841, 7842, 7893, 7894, 7919, 7920, 7921, 7922, 7923, 7924, 7933, 7939, 7956, 8041, 8042, 8147, 8148, 8149,
               8150, 8151, 8152, 8153, 8154, 8155, 8165, 8167, 8173, 8174, 8175, 8176, 8177, 8178, 8185, 8186, 8187, 8188, 8189, 8194, 8206, 8207,
               8208, 8209, 8210, 8229, 8262, 8263, 8311, 8313, 8314, 8315, 8320, 8342, 8369, 8416, 8481, 8549, 8556, 8559, 8645, 8646, 8647, 8648,
               8649, 8650, 8651, 8652, 8653, 8656, 8657, 8658, 8659, 8662, 8673, 8674, 8680, 8681, 8682, 8683, 8684, 8685, 8686, 8869, 8871, 9029,
               9030, 9031, 9032, 9033, 9041, 9292, 9293, 9294, 9295, 9296, 9297, 9298, 9330, 9332, 9337, 9339, 9340, 9343, 9349, 9482, 9608, 9893,
               10252, 10396, 10402, 10437, 10442, 10611, 10682, 10683, 10806, 10807, 10808, 10809, 10835, 10836, 10874, 10875, 10885, 10889, 10890,
               11014, 11091, 11238, 11239, 11240, 11241, 11242, 11243, 11247, 11438, 11452, 11473, 11474, 11499, 11551, 11567, 11568, 11571, 11607,
               11623, 12848, 12858, 12933, 13016, 13018, 13024, 13045, 13096, 13097, 13098, 13118, 13153, 13336, 13438, 13445, 13663, 13665, 13705,
               14464, 14459, 14843, 14856, 14883, 16016, 16017, 16018, 16019, 16020, 16022, 16052, 16094, 16136, 16281, 16293, 16294, 16295, 16296,
               16297, 16298, 16299, 16300, 16312, 16313, 16315, 16320, 16321, 16324, 16369, 16370, 16627, 16628, 16629, 16630, 16631, 16632, 16633,
               16634, 16635, 16636, 16638, 16664, 16668, 16669, 16670, 16671, 16683, 17510, 18074, 18202, 18216, 18218, 18219, 18220, 18221, 18222,
               18223, 18224, 18255, 18276, 18277, 18278, 18279, 18280, 18281, 18286, 18287, 18288, 18289, 18290, 18291, 18292, 18432, 18433, 18434,
               18440, 18441, 18442, 18443, 18444, 18445, 18446, //Fences, Walls, Gates, and Barriers

               3187, 3359, 3458, 3627, 4199, 4892, 5401, 5409, 5774, 5853, 6909, 6910, 7520, 7971, 8947, 8954, 9169, 9171, 9321, 9899, 10282, 10789,
               11292, 11326, 11387, 11388, 11389, 11390, 11391, 11392, 11393, 11480, 11494, 11504, 11505, 11547, 12853, 13296, 14776, 14783, 14796,
               14797, 14798, 14826, 14876, 16107, 16360, 16362, 16477, 17036, 17037, 17064, 17065, 17852,
               17950, 18232, 18283, 18284, 18452, 18474, //Structure Garages and Petrol Stations

               1245, 1503, 1631, 1632, 1633, 1634, 1655, 1660, 1696, 1697, 1894, 2931, 3269, 3270, 3363, 3364, 3625, 3663, 3664, 3665, 3852, 5152,
               5153, 6052, 7979, 7980, 16401, 8302, 8375, 12914, 12956, 13590, 13593, 13604, 13636, 13638, 13640, 13643, 13645,
               13648, 16077, 16084, 16085, 16134, 16302, 16303, 16304, 16305, 16317, 16367, 17565, 18262, 18367, 18451, 18565, 18566, 18567, 18568,
               18569, 18609, //ramps

               4817, 4818, 4819, 4853, 4884, 4885, 5064, 5117, 5118, 5119, 5127, 5272, 5275, 5277, 5347, 5396, 5398, 5399, 5477, 5478, 5479, 5480,
               5513, 5674, 5679, 5772, 5773, 6248, 6249, 6250, 6251, 6252, 6290, 6292, 6501, 6502, 6912, 6913, 6914, 6915, 6916, 6917, 6980, 6981,
               6982, 6983, 6984, 7498, 7499, 7500, 7501, 7502, 7503, 8538, 8539, 8540, 8541, 8542, 8586, 8587, 8588, 8624, 8625, 8626, 8627, 8628,
               8629, 8630, 8631, 8632, 8633, 8634, 8635, 8858, 8860, 9164, 9165, 9166, 9167, 9168, 9705, 10752, 10927, 10931, 10933, 10934, 10935,
               11101, 11228, 11229, 11230, 11231, 11232, 11464, 11465, 11466, 11467, 11468, 12831, 12832, 12833, 12835, 12836, 12837, 12838, 13312,
               13491, 16024, 16025, 16026, 16027, 16028, 16029, 16030, 16031, 16032, 16033, 16034, 16035, 16036, 16156, 17283, 17284, 17285, 17286,
               17287, 17288, 17289, 17290, 17291, 17292, 17296, 17297, //Railroads

               3330, 3331, 3381, 3411, 3412, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4107, 4108, 4125,
               4127, 4128, 4129, 4131, 4133, 4139, 4142, 4144, 4146, 4148, 4150, 4152, 4154, 4156, 4158, 4160, 4163, 4165, 4168, 4182, 4203, 4207,
               4209, 4233, 4553, 4557, 4567, 4589, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4656, 4658, 4660, 4662, 4664,
               4666, 4679, 4692, 4694, 4695, 4710, 4807, 4808, 4809, 4820, 4821, 4822, 4823, 4827, 4834, 4835, 4836, 4837, 4839, 4840, 4841, 4846,
               4868, 4870, 4871, 4872, 4878, 4895, 5013, 5021, 5026, 5028, 5038, 5046, 5052, 5106, 5112, 5113, 5120, 5121, 5124, 5125, 5128, 5133,
               5141, 5147, 5149, 5178, 5188, 5191, 5250, 5271, 5276, 5296, 5297, 5298, 5314, 5329, 5330, 5333, 5349, 5353, 5391, 5394, 5395, 5411,
               5431, 5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5456, 5469, 5470, 5472, 5473, 5481, 5482, 5483, 5484, 5485,
               5486, 5487, 5488, 5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507,
               5508, 5509, 5510, 5511, 5512, 5528, 5650, 5668, 5703, 5707, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755,
               5756, 5757, 5758, 5759, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5859,
               5860, 5861, 5862, 5866, 5994, 5995, 6035, 6054, 6055, 6111, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123,
               6124, 6125, 6126, 6127, 6128, 6129, 6225, 6231, 6235, 6291, 6301, 6302, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6314,
               6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6329, 6330, 6331, 6333, 6341, 6345, 6427, 6428, 6448, 6449,
               6450, 6507, 6508, 6509, 6876, 6877, 6878, 6879, 6880, 6881, 6886, 6887, 6888, 6897, 6898, 6899, 6900, 6945, 6948, 6949, 6950, 6951,
               6952, 6953, 6956, 6974, 6990, 6991, 6999, 7036, 7041, 7042, 7043, 7052, 7053, 7054, 7055, 7056, 7057, 7064, 7069, 7320, 7321, 7324,
               7326, 7327, 7334, 7335, 7336, 7337, 7355, 7362, 7364, 7383, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438,
               7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7544, 7545,
               7546, 7547, 7548, 7549, 7550, 7551, 7552, 7558, 7559, 7580, 7581, 7587, 7589, 7590, 7605, 7629, 7631, 7632, 7633, 7634, 7729, 7730,
               7731, 7755, 7849, 7852, 7854, 7863, 7864, 7865, 7866, 7867, 7868, 7878, 7881, 7938, 7945, 7963, 7965, 7967, 7969, 7987, 7988, 7989,
               7990, 7991, 7992, 7993, 7995, 8009, 8010, 8036, 8039, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8070,
               8080, 8128, 8135, 8137, 8212, 8213, 8214, 8215, 8216, 8217, 8218, 8219, 8236, 8244, 8245, 8246, 8256, 8290, 8305, 8368, 8377, 8380,
               8382, 8383, 8386, 8388, 8438, 8439, 8440, 8441, 8442, 8443, 8444, 8445, 8446, 8447, 8448, 8449, 8450, 8451, 8452, 8453, 8454, 8455,
               8456, 8457, 8458, 8471, 8472, 8473, 8474, 8475, 8476, 8477, 8510, 8511, 8512, 8514, 8517, 8518, 8519, 8520, 8521, 8522, 8523, 8524,
               8525, 8543, 8552, 8561, 8562, 8609, 8610, 8611, 8612, 8616, 8622, 8637, 8638, 8824, 8832, 8838, 8932, 9000, 9001, 9002, 9003, 9004,
               9005, 9006, 9007, 9008, 9021, 9022, 9023, 9024, 9025, 9026, 9027, 9028, 9036, 9042, 9115, 9116, 9117, 9118, 9119, 9120, 9150, 9205,
               9222, 9231, 9232, 9233, 9250, 9251, 9252, 9262, 9264, 9265, 9266, 9267, 9269, 9476, 9485, 9486, 9487, 9488, 9489, 9490, 9491, 9492,
               9493, 9570, 9571, 9575, 9591, 9600, 9601, 9602, 9603, 9652, 9653, 9683, 9685, 9689, 9690, 9693, 9694, 9696, 9699, 9700, 9701, 9702,
               9703, 9704, 9706, 9707, 9708, 9709, 9710, 9711, 9712, 9713, 9714, 9715, 9716, 9717, 9718, 9719, 9720, 9721, 9722, 9723, 9724, 9725,
               9726, 9727, 9728, 9729, 9730, 9731, 9732, 9733, 9734, 9735, 9736, 9747, 9827, 9832, 9837, 9838, 10018, 10065, 10066, 10067, 10068, 10069,
               10070, 10071, 10072, 10073, 10074, 10075, 10076, 10077, 10078, 10110, 10111, 10112, 10113, 10114, 10115, 10116, 10117, 10118, 10119, 10120,
               10121, 10122, 10123, 10124, 10125, 10126, 10127, 10128, 10129, 10130, 10131, 10132, 10133, 10134, 10135, 10136, 10137, 10138, 10139, 10165,
               10235, 10247, 10275, 10276, 10294, 10295, 10296, 10359, 10360, 10361, 10362, 10363, 10364, 10365, 10367, 10424, 10426, 10440, 10448, 10449,
               10450, 10452, 10455, 10456, 10457, 10458, 10459, 10460, 10461, 10462, 10463, 10464, 10465, 10466, 10467, 10468, 10469, 10470, 10471, 10472,
               10473, 10474, 10475, 10476, 10477, 10478, 10479, 10480, 10481, 10482, 10483, 10484, 10485, 10486, 10487, 10488, 10489, 10490, 10493, 10614,
               10617, 10636, 10639, 10649, 10750, 10751, 10753, 10754, 10759, 10770, 10777, 10790, 10791, 10792, 10820, 10821, 10822, 10823, 10848, 10849,
               10852, 10854, 10855, 10857, 10858, 10859, 10860, 10866, 10867, 10868, 10869, 10870, 10928, 10929, 10930, 10937, 10940, 10958, 10967, 10968,
               10970, 10971, 11003, 11071, 11072, 11073, 11074, 11075, 11076, 11077, 11078, 11079, 11080, 11084, 11094, 11095, 11096, 11098, 11100, 11104,
               11105, 11110, 11111, 11112, 11113, 11114, 11115, 11116, 11117, 11118, 11119, 11120, 11121, 11122, 11123, 11124, 11125, 11126, 11127, 11128,
               11129, 11130, 11131, 11132, 11133, 11134, 11135, 11136, 11137, 11138, 11252, 11253, 11254, 11255, 11256, 11257, 11258, 11259, 11260, 11261,
               11299, 11302, 11308, 11345, 11351, 11365, 11386, 11409, 11421, 11462, 12800, 12801, 12802, 12803, 12806, 12809, 12810, 12811, 12812, 12813,
               12815, 12816, 12817, 12818, 12819, 12820, 12826, 12827, 12828, 12829, 12830, 12851, 12852, 12856, 12857, 12867, 12873, 12874, 12875, 12876,
               12877, 12878, 12879, 12880, 12881, 12882, 12883, 12884, 12885, 12886, 12887, 12888, 12889, 12890, 12891, 12892, 12893, 12894, 12895, 12896,
               12897, 12898, 12899, 12900, 12901, 12902, 12903, 12904, 12905, 12906, 12907, 12909, 12910, 12965, 12966, 12967, 12968, 12970, 12971, 12972,
               12973, 12974, 12975, 12992, 12993, 12994, 12995, 12996, 12997, 12998, 12999, 13000, 13001, 13020, 13033, 13034, 13038, 13058, 13088, 13092,
               13095, 13119, 13127, 13128, 13129, 13138, 13139, 13141, 13142, 13168, 13169, 13170, 13173, 13321, 13323, 13324, 13325, 13332, 13342, 13345,
               13347, 13348, 13349, 13368, 13422, 13470, 13626, 13652, 13655, 13664, 13672, 13673, 13674, 13676, 13677, 13678, 13680, 13682, 13683, 13684,
               13685, 13688, 13689, 13690, 13693, 13703, 13704, 13706, 13707, 13708, 13709, 13713, 13717, 13718, 13720, 13726, 13727, 13730, 13732, 13733,
               13735, 13736, 13738, 13739, 13751, 13752, 13784, 13789, 13814, 13845, 13865, 13882, 13887, 16037, 16266, 16357, 16358, 16384, 16430, 16571,
               16610, 17002, 17003, 17004, 17043, 17062, 17077, 17078, 17110, 17111, 17112, 17120, 17146, 17148, 17150, 17152, 17154, 17156, 17158, 17160,
               17162, 17164, 17166, 17168, 17170, 17172, 17174, 17176, 17178, 17180, 17182, 17184, 17186, 17188, 17190, 17192, 17194, 17196, 17198, 17200,
               17202, 17204, 17208, 17210, 17212, 17214, 17216, 17218, 17220, 17222, 17224, 17226, 17228, 17230, 17232, 17234, 17236, 17238, 17240, 17242,
               17244, 17246, 17248, 17250, 17252, 17254, 17256, 17258, 17260, 17262, 17267, 17269, 17271, 17273, 17275, 17277, 17279, 17281, 17293, 17294,
               17295, 17300, 17303, 17305, 17307, 17308, 17309, 17310, 17326, 17327, 17329, 17331, 17333, 17334, 17501, 17502, 17525, 17550, 17561, 17576,
               17595, 17596, 17597, 17598, 17599, 17600, 17602, 17603, 17604, 17605, 17606, 17607, 17608, 17609, 17610, 17611, 17612, 17613, 17621, 17622,
               17623, 17624, 17625, 17626, 17627, 17628, 17629, 17630, 17631, 17632, 17634, 17635, 17637, 17638, 17639, 17640, 17641, 17642, 17643, 17644,
               17646, 17647, 17648, 17649, 17650, 17651, 17652, 17653, 17654, 17655, 17656, 17657, 17658, 17659, 17660, 17661, 17662, 17663, 17666, 17667,
               17668, 17669, 17670, 17671, 17672, 17673, 17674, 17675, 17676, 17680, 17681, 17682, 17683, 17684, 17686, 17687, 17692, 17693, 17695, 17829,
               17849, 17867, 17920, 17921, 17927, 17936, 17968, 18229, 18256, 18369, 18370, 18371, 18372, 18373, 18374, 18375, 18376, 18377, 18378, 18379,
               18380, 18381, 18382, 18383, 18384, 18385, 18386, 18387, 18388, 18389, 18390, 18391, 18392, 18393, 18394, 18449, 18450, 18561 //roads
               :
               {
                 return 1;
               }
               default:return 0;
       }
       return 0;
}





stock IsValidSAMPObject(modelid)
{
	if(modelid > 18632 && modelid < 19515) return 1;
	if(modelid > 19901 && modelid < 19906) return 1;
	if(modelid >= 11682 && modelid <= 11753) return 1; //0.3.7
	if(modelid >= 18532 && modelid <= 19999) return 1;
	if(modelid >= 15065 && modelid <= 15999) return 1;
	return 0;
}


/*stock IsNumeric(string1[])
{
	for (new i = 0, j = strlen(string1); i < j; i++)
	{
		if (string1[i] > '9' || string1[i] < '0')
		{
			return 0;
		}
	}
	return 1;
}
*/

stock AddToLogFile(const file[],const str[])
{
	new string[100];
	new File:banfile,filestr[35];
	format(filestr,sizeof filestr,"/logs/%s.txt",file);
	if(!fexist(filestr))
	{
	    CreateLog(file);
	}
	banfile = fopen(filestr,io_append);
	format(string,sizeof(string),"\n%s",str);
	fwrite(banfile,string);
	fclose(banfile);
	return 1;
}

stock AddLineToFile(file[],str[])
{
	new string[128];
	new File:banfile;
	if(!fexist(file))
	{
		fcreate(file);
	}
	banfile = fopen(file,io_append);
	format(string,sizeof(string),"%s\r\n",str);
	fwrite(banfile,string);
	fclose(banfile);
	return 1;
}

stock CountFileLines(const filename[])
{
	new a;
    new entry[200];
	new File: propfile = fopen(filename, io_read);
	while(fread(propfile, entry, 200))
	{
		a++;
  	}
  	fclose(propfile);
  	return a;
}


forward SetPlayerCash(playerid,cash);
public SetPlayerCash(playerid,cash)
{
	//SetPVarInt(playerid,"Money",cash);
	Players[playerid][Money] = cash;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,cash);
}

forward GivePlayerCash(playerid,cash);
public GivePlayerCash(playerid,cash)
{
	Players[playerid][Money]+=cash;
	//SetPVarInt(playerid,"Money",GetPVarInt(playerid,"Money")+cash);
	//ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,cash);
}

forward GetPlayerCash(playerid);
public GetPlayerCash(playerid)
{
	return Players[playerid][Money];
}

stock TakePlayerCash(playerid,cash)
{
	//SetPVarInt(playerid,"Money",GetPVarInt(playerid,"Money")-cash);
	Players[playerid][Money]-=cash;
	GivePlayerMoney(playerid,-cash);
}

stock ResetPlayerCash(playerid)
{
	//SetPVarInt(playerid,"Money",0);
	Players[playerid][Money] = 0;
	ResetPlayerMoney(playerid);
}


stock CreateLog(const file[])
{
	new File:temp;
	new filestr[74];
	format(filestr,sizeof filestr,"/logs/%s.txt",file);
	if(fexist(filestr))
	{
	    return 1;
	}
	temp = fopen(filestr,io_append);
	fwrite(temp,"");
	fclose(temp);
	return 1;
}


stock IsVehicleSpawned(vehicleid)
{
	new Float:VX,Float:VY,Float:VZ;
	GetVehiclePos(vehicleid,VX,VY,VZ);
	if (VX == 0.0 && VY == 0.0 && VZ == 0.0) return 0;
	return 1;
}

stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[32+1];
	new x = 0;
	new ip_count = 0;
	for(x=0; x<MAX_PLAYERS; x++) {
		if(IsPlayerConnected(x)) {
		    GetPlayerIp(x,against_ip,32);
		    if(!strcmp(against_ip,test_ip)) ip_count++;
		}
	}
	return ip_count;
}

stock CountRaces()
{
    new entry[100],v;
	new File: propfile = fopen("yrace.rr", io_read);
	while(fread(propfile, entry, 100))
	{
		v++;
  	}
  	fclose(propfile);
  	return v;
}

stock GetPlayerID(const Name[])
{
	foreach(new i : Player)
	{
		new pName[MAX_PLAYER_NAME];
		GetPlayerName(i, pName, sizeof(pName));
	   	if(strcmp(Name, pName, true)==0) return i;
	}
	return -1;
}

stock SendClientMessageToAllEx(exeption, color, const message[])
{
	foreach(new i : Player)
	{
		if(i != exeption) SendClientMessage(i, color, message);
	}
}

stock IsIP(const str[])
{
    for(new cIP[2]; cIP[0] != strlen(str); cIP[0]++)
    {
        switch(str[cIP[0]])
        {
            case '.', ' ', ':', ',', '*', '/', ';', '\\', '|' : continue;
            case '0' .. '9': cIP[1]++;
            default: cIP[1] = 0;
        }

        if(cIP[1] == 8)
        {
            new strex[8];
            strmid(strex, str, cIP[0] - 7, cIP[0]);
            if(IsNumeric(strex))
                return 0;

            return 1;
        }
    }
    return 0;
}

/*
stock GetWeaponSlot(weaponid)
{
    switch (weaponid)
    {
        case 0, 1: return 0; // Unarmed
        case 2 .. 9: return 1; // Melee
        case 22 .. 24: return 2; // Pistol
        case 25 .. 27: return 3; // Shotgun
        case 28, 29, 32: return 4; // SMG
        case 30, 31: return 5; // Machinegun
        case 33, 34: return 6; // Rifle
        case 35 .. 38: return 7; // Heavy
        case 16, 18, 39: return 8; // Projectile
        case 42, 43: return 9; // Special
        case 14 : return 10; // Gifts
        case 44 .. 46: return 11; // Special
        case 40 : return 12; // Detonator
    }
    return 0;
}
*/

stock RaceVehicle(playerid)
{
	if(vMode[playerid]==false) return 1;
	else
	{
		new String[45];
		new Float:x, Float:y, Float:z;
		new Float:a;
		if(IsPlayerInAnyVehicle(playerid) == 1)
		{
		    DestroyVehicleEx(GetPlayerVehicleID(playerid));
		}
		if(vMode[playerid]==true && RaceParticipant[playerid] == 1 )
		{
			x = RaceCheckpoints[0][0];
			y = RaceCheckpoints[0][1];
			z = RaceCheckpoints[0][2];
			a=90.0;
		}
		else
		{
			GetPlayerPos(playerid, x, y, z);
			GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
		}
		new PlayersVehicle = CreateVehicle(vModeVehicle, x, y, z, a+360, -1, -1, -1);
		LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
		PutPlayerInVehicle(playerid,PlayersVehicle, 0);
		SetVehiclePos(GetPlayerVehicleID(playerid), x,y,z);
		SetVehicleZAngle(GetPlayerVehicleID(playerid), a+360);
		format(String, sizeof(String), "~g~%s",aVehicleNames[vModeVehicle - 400]);
		GameTextForPlayer(playerid,String,1000,3);
	}
	return 1;
}

public OnPlayerEnterDynamicCP(playerid,checkpointid)
{
	if(checkpointid == Server[bikeGameCP])
	{
		ShowPlayerDialog(playerid,DIALOG_BIKEGAME,DIALOG_STYLE_MSGBOX,"Minigame","Minigame: ` NRG Bike Stunt`\n\nReward: $20000\n\nDo you want to start?","Yes","No");
	}
	
	if(checkpointid == Players[playerid][DeliveryCP])
	{
		Players[playerid][Delivery] = false;
		DestroyDynamicCP(Players[playerid][DeliveryCP]);

		switch(Players[playerid][DeliveryID])
		{
			case 1:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Fake Chips to the LV Casino and recieved $12000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,12000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $12000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 2:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Sex Toys to the LV Sex Shop and recieved $10000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,10000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $10000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 3:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Condoms to the LV Sex Shop and recieved $15000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,15000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $15000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 4:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Gun Supplies to the LV Ammunation and recieved $12000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,12000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $12000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 5:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Police Batons to the Police Station and recieved $13000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,13000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $13000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 6:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered CD's to the LV Music Shop and recieved $10000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,10000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $10000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 7:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Vibrators to the LV Sex Shop and recieved $12000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,12000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $12000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 8:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Medical Supplies to the LV Hospital and recieved $15000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,15000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $15000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 9:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Textbooks to the College and recieved $15000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,15000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $15000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 10:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Boxes to the Burger Shot and recieved $12000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,12000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $12000",3000,3);
				Players[playerid][Expierience]+=10;
			}


			case 11:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Jerry Cans to the Gas Station and recieved $13000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,13000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $13000",3000,3);
				Players[playerid][Expierience]+=10;
			}


			case 12:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Paint Cans to the Pay and Spray and recieved $13000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,13000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $13000",3000,3);
				Players[playerid][Expierience]+=10;
			}


			case 13:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Boxes to the 24/7 and recieved $13000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,13000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $13000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			// COUNTRY
			case 30:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Logs to a Campsite and recieved $10000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,10000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $10000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 31:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Hay to the Farmer and recieved $10000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,10000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $10000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 32:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Explosives to the Trailer Park and recieved $15000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,15000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $15000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 33:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered parts to the Factory and recieved $15000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,15000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $15000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 34:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Blankets to the Motel and recieved $13000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,13000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $13000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 35:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Lottery Tickets to the 69c Store and recieved $15000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,15000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $15000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 36:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Gas to the Gas Station and recieved $17000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,17000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $17000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 37:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered beer to the Liquor Store and recieved $15000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,15000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $15000",3000,3);
				Players[playerid][Expierience]+=10;
			}

			case 38:
			{
				format(xstring,sizeof xstring,"*** %p (ID:%d) delivered Fake Money to the Loan Store and recieved $18000",playerid,playerid);
				SendClientMessageToAll(COLOR_YELLOW,xstring);
				GivePlayerCash(playerid,18000);
				GameTextForPlayer(playerid,"~g~Delivery Finished~n~+ $18000",3000,3);
				Players[playerid][Expierience]+=10;
			}
		}

		PlayerPlaySound(playerid,1054,0,0,0);
		Players[playerid][DeliveryTotal]++;
		
		//100 EXP each LEVEL-
		CheckRankForLevelUp(playerid);
		

		/*
		if(PlayerAch[playerid][Deliveries5] == false && Players[playerid][DeliveryTotal] >= 5)
		{
			PlayerAch[playerid][Deliveries5] = true;
			PlayerPlaySound(playerid,5201,0,0,0);
			GameTextForPlayer(playerid,"~n~~n~~n~~g~Achivement Recieved:~n~~w~5 Deliveries",3500,3);
		}
		*/

		SendClientMessage(playerid,COLOR_YELLOW,"* Want another delivery? Type /delivery.");

	}
	return 1;
}

CheckRankForLevelUp(playerid)
{
	switch(Players[playerid][Expierience])
	{
		case 100 .. 199:
		{
			if(Players[playerid][Rank] == 0)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~1/10",3000,3);		
				Players[playerid][Rank] = 1;	
			}		
		}	
			
		case 200 .. 299:
		{
			if(Players[playerid][Rank] == 1)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~2/10",3000,3);		
				Players[playerid][Rank] = 2;			
			}				
		}	
		
		case 300 .. 399:
		{
			if(Players[playerid][Rank] == 2)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~3/10",3000,3);		
				Players[playerid][Rank] = 3;	
			}		
		}	
			
		case 400 .. 499:
		{
			if(Players[playerid][Rank] == 3)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~4/10",3000,3);		
				Players[playerid][Rank] = 4;			
			}				
		}	
		
		case 500 .. 599:
		{
			if(Players[playerid][Rank] == 4)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~5/10",3000,3);		
				Players[playerid][Rank] = 5;	
			}		
		}	
			
		case 600 .. 699:
		{
			if(Players[playerid][Rank] == 5)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~6/10",3000,3);		
				Players[playerid][Rank] = 6;			
			}				
		}	
		
		case 700 .. 799:
		{
			if(Players[playerid][Rank] == 6)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~7/10",3000,3);		
				Players[playerid][Rank] = 7;	
			}		
		}	
			
		case 800 .. 899:
		{
			if(Players[playerid][Rank] == 7)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~8/10",3000,3);		
				Players[playerid][Rank] = 8;			
			}				
		}	
		
		case 900 .. 999:
		{
			if(Players[playerid][Rank] == 8)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~9/10",3000,3);		
				Players[playerid][Rank] = 9;	
			}		
		}	
			
		case 1000 .. 1999:
		{
			if(Players[playerid][Rank] == 9)
			{
				GameTextForPlayer(playerid,"~p~Rank Up!~n~~w~You are rank ~p~10/10~n~+$10,000,000",3000,3);		
				Players[playerid][Rank] = 10;
				GivePlayerCash(playerid,10000000);			
			}				
		}	
	}	
	return 1;	
}

stock DB_StreamObjects(const setname[])
{
	print("StreamObjects Called DB_Stream");
	format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setname` = '%s'", setname);
	mysql_query(SQL, xstring);
	if(cache_num_rows() == 0) return 1;
	new total,setID;
	new creator[24];
	
	cache_get_value_name_int(0,"setID",setID);
	cache_get_value_name(0,"SCreator",creator);
	new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,aModel;

	format(xstring,sizeof xstring,"SELECT * FROM `objectdata` WHERE `setID` = '%d'", setID);
	mysql_query(SQL, xstring);

	if(cache_num_rows() == 0) return 1;

	total = cache_num_rows();

	for(new a=0; a < total; a++)
	{
		cache_get_value_name_int(a,"oModel",aModel);
		cache_get_value_name_float(a,"oX",x);
		cache_get_value_name_float(a,"oY",y);
		cache_get_value_name_float(a,"oZ",z);
		cache_get_value_name_float(a,"rX",rx);
		cache_get_value_name_float(a,"rY",ry);
		cache_get_value_name_float(a,"rZ",rz);
			
		if(aModel != 0) CreateDynamicObject(aModel,x,y,z,rx,ry,rz,0);
	}
	
	format(xstring,sizeof xstring,"SELECT * FROM `objmaterials` WHERE `setID` = '%d'", setID);
	mysql_query(SQL, xstring);
	new materials = cache_num_rows();
	new txdnm[45],txdname[45],mindex,mod,col,ref_id;
		// ref_id refrences from table - if the ID of the loaded object is the same as the one that uses materials, apply.
	
	new objids[1000]; //this is 1000 because it's impossible for pawn to do objids[total];	
		
	for(new a=0; a <= CountDynamicObjects(); a++)
	{
 		for(new k=0; k <= total; k++)
		{
			if(objids[k] == a)
			{
   				for(new c=0; c <= materials; c++)
				{
					cache_get_value_name_int(c,"objID",ref_id);
					cache_get_value_name_int(c,"mI",mindex);
					cache_get_value_name(c,"mTxd",txdnm);
					cache_get_value_name(c,"mTxtName",txdname);
					cache_get_value_name_int(c,"mM",mod);
					cache_get_value_name_int(c,"maColor",col);
					if(ref_id == k) if(strcmp(txdnm, "NULL", true) && strcmp(txdname, "NULL", true)) SetDynamicObjectMaterial(objids[k],mindex,mod,txdnm,txdname,col);

				}
			}
		}
	}	
	return 1;
}

forward Token_Weapons(playerid,weapontype);
public Token_Weapons(playerid,weapontype)
{
	if(Players[playerid][Token] < 500) { TokenUsing[playerid]=false; return SendClientMessage(playerid,COLOR_RED,"* You need least 500 Tokens to use this dyanmic weapon"); }
	if(TokenUsing[playerid]==true)
	{
		switch(weapontype)
		{
			//rpg
			case 35: GivePlayerWeapon(playerid, WEAPON:35, 100);
			// flame throw
			case 37: GivePlayerWeapon(playerid, WEAPON:37, 9999);
			// c4
			case 39: GivePlayerWeapon(playerid, WEAPON:39, 100);
			 //grenade
			case 16: GivePlayerWeapon(playerid, WEAPON:16, 100);
			 //Tear  gas
			case 17: GivePlayerWeapon(playerid, WEAPON:17, 100);
			//Molotov
			case 18: GivePlayerWeapon(playerid, WEAPON:18, 100);
			 //Sniper
			case 34: GivePlayerWeapon(playerid, WEAPON:34, 9999);
		}
		Players[playerid][Token]-=500;
		GameTextForPlayer(playerid,"~r~-500 Tokens",500,3);
		TokenUsing[playerid]=false;
		new string[100];
		format(string,sizeof(string),"* %p[%d] has Swapped 500 Tokens for Weapon: %W[%d]",playerid,playerid,weapontype,weapontype);
		Chat_SendMessageToAdmins(COLOR_AMSG,1,string);
	}
	return 1;
}

forward Token_Vehicle(playerid,token,modelid,time,bool:type);
public Token_Vehicle(playerid,token,modelid,time,bool:type)
{
	if(TokenUsing[playerid]==true)
	{
		new Float:a,Float:x,Float:y,Float:z,String[100],Float:_Z;
		if(type==true)//unlimited for x mins
		{
			if(TokenUltimate[playerid]==false) UltimateTimer[playerid]=SetTimerEx("nofun",time*60000,true,"u",playerid);
			TokenUltimate[playerid]=true;
			AllowedVehicle[playerid]=true;
			GetPlayerFacingAngle(playerid, a);
			GetPlayerPos(playerid, x, y, z);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),_Z);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),_Z+360);
			new PlayersVehicle;
			if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
			{
				DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
				PlayersVehicle = CreateVehicle(modelid, x, y, z, _Z+360, -1, -1, -1);
			}
			else
			{
				PlayersVehicle = CreateVehicle(modelid, x, y, z, a+360, -1, -1, -1);
			}
			LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,PlayersVehicle, 0);
			format(String, sizeof(String), "~g~%s",aVehicleNames[modelid - 400]);
			GameTextForPlayer(playerid,String,1000,3);
		}
		if(type==false)//limited - spawn once
		{
			GetPlayerFacingAngle(playerid, a);
			GetPlayerPos(playerid, x, y, z);
			GetVehicleZAngle(GetPlayerVehicleID(playerid),_Z);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),_Z+360);
			new PlayersVehicle;
			if(IsPlayerInAnyVehicle(playerid) == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER )
			{
				DestroyVehicleEx(GetPlayerVehicleID(playerid)); // now removes last vehicle if a player in it.
				PlayersVehicle = CreateVehicle(modelid, x, y, z, _Z+360, -1, -1, -1);
			}
			else
			{
				PlayersVehicle = CreateVehicle(modelid, x, y, z, a+360, -1, -1, -1);
			}
			LinkVehicleToInterior(PlayersVehicle, GetPlayerInterior(playerid));
			PutPlayerInVehicle(playerid,PlayersVehicle, 0);
			format(String, sizeof(String), "~g~%s",aVehicleNames[modelid - 400]);
			GameTextForPlayer(playerid,String,1000,3);
			TokenUsing[playerid]=false;
			Players[playerid][Token]-=token;
			GameTextForPlayer(playerid,"~r~-5000 Tokens",500,3);
			new string[120];
			format(string,sizeof(string),"* %p[%d] has Swapped 5000 Tokens for Vehicle: %v[%d] - Limited",playerid,playerid,modelid,modelid);
			Chat_SendMessageToAdmins(COLOR_AMSG,1,string);
			AllowedVehicle[playerid]=false;
			if(TokenUltimate[playerid]==true)
			{
				TokenUltimate[playerid]=false;
				TokenUltimate[playerid]=false;
				SendClientMessage(playerid,COLOR_YELLOW,"* Your Fun Time Ended for given Tokens = ultimate spawn");
				SendClientMessage(playerid,COLOR_YELLOW,"* You have used your token for limited from ulitmated.");
				KillTimer(UltimateTimer[playerid]);
				AllowedVehicle[playerid]=false;
			}
		}
		if(Players[playerid][TDMJoined] == true) { SetPlayerVirtualWorld(playerid,100); SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 100); }
	}
	return 1;
}
forward nofun(playerid);
public nofun(playerid)
{
	if(TokenUltimate[playerid]==true && IsPlayerConnected(playerid))
	{
		TokenUltimate[playerid]=false;
		SendClientMessage(playerid,COLOR_YELLOW,"* Your Fun Time Ended for given Tokens");
		KillTimer(UltimateTimer[playerid]);
		DestroyVehicleEx(GetPlayerVehicleID(playerid));
		AllowedVehicle[playerid]=false;
	}
	else TokenUltimate[playerid]=true;
//	return TokenUltimate[playerid]=false;
}
SetToken(playerid,token)
{
	Players[playerid][Token]=token;
}

GiveToken(playerid,token)
{
	Players[playerid][Token]+=token;
	/*
 	format(query, sizeof(query), "UPDATE `users` SET `Token` = '%d' WHERE `Name` = '%p'",Players[playerid][Token],playerid);
   	mysql_query(SQL,query);
	*/
}
forward AddNeon(playerid,listitem);
public AddNeon(playerid,listitem)
{
	isNeonON[playerid]=true;
	DestroyObject(neons[playerid][0]);
	DestroyObject(neons[playerid][1]);
	DestroyObject(neons[playerid][2]);
	DestroyObject(neons[playerid][3]);

	if(listitem == 0)
	{
		neons[playerid][0] = CreateObject(18648,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18648,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18648,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18648,0,0,0,0,0,0);
	}
	if(listitem == 1)
	{
		neons[playerid][0] = CreateObject(18647,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18647,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18647,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18647,0,0,0,0,0,0);
	}
	if(listitem == 2)
	{
		neons[playerid][0] = CreateObject(18649,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18649,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18649,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18649,0,0,0,0,0,0);
	}
	if(listitem == 3)
	{
		neons[playerid][0] = CreateObject(18652,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18652,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18652,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18652,0,0,0,0,0,0);
	}
	if(listitem == 4)
	{
		neons[playerid][0] = CreateObject(18651,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18651,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18651,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18651,0,0,0,0,0,0);
	}
	if(listitem == 5)
	{
		neons[playerid][0] = CreateObject(18650,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18650,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18650,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18650,0,0,0,0,0,0);
	}
	if(listitem == 6)
	{
		neons[playerid][0] = CreateObject(18648,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18648,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18649,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18649,0,0,0,0,0,0);
	}
	if(listitem == 7)
	{
		neons[playerid][0] = CreateObject(18648,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18648,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18652,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18652,0,0,0,0,0,0);
	}
	if(listitem == 8)
	{
		neons[playerid][0] = CreateObject(18647,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18647,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18652,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18652,0,0,0,0,0,0);
	}
	if(listitem == 9)
	{
		neons[playerid][0] = CreateObject(18647,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18647,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18650,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18650,0,0,0,0,0,0);
	}
	if(listitem == 10)
	{
		neons[playerid][0] = CreateObject(18649,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18649,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18652,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18652,0,0,0,0,0,0);
	}
	if(listitem == 11)
	{
		neons[playerid][0] = CreateObject(18652,0,0,0,0,0,0);
		neons[playerid][1] = CreateObject(18652,0,0,0,0,0,0);
		neons[playerid][2] = CreateObject(18650,0,0,0,0,0,0);
		neons[playerid][3] = CreateObject(18650,0,0,0,0,0,0);
	}
	cNeon[playerid]=listitem;
	AttachObjectToVehicle(neons[playerid][0], GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(neons[playerid][1], GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(neons[playerid][2], GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	AttachObjectToVehicle(neons[playerid][3], GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
//	GameTextForPlayer(playerid,"~g~Neon ~b~Installed!",1000,3);
}
RemoveNeon(playerid)
{
	//cNeon[playerid]=-1;
//	isNeonON[playerid]=false;
    DestroyObject(neons[playerid][0]);
    DestroyObject(neons[playerid][1]);
	DestroyObject(neons[playerid][2]);
    DestroyObject(neons[playerid][3]);
  //  GameTextForPlayer(playerid,"~w~Neon ~r~Removed!",1000,3);
}
stock MegaJump(playerid, Float:infront, Float:height)
{
    new Float:__x, Float:__y, Float:__z;
    new Float:__angle;
    GetPlayerFacingAngle(playerid, __angle);
    __angle = 360 - __angle;

    GetPlayerVelocity(playerid, __x, __y, __z);
    SetPlayerVelocity(playerid, __x + infront * floatsin(__angle, degrees), __y + infront * floatcos(__angle, degrees), __z + height);
    return 1;
}

RaceSound(playerid,sound)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	PlayerPlaySound(playerid,sound,x,y,z);
}


CMD:gamestats(playerid,params[])
{
	format(xstring,sizeof xstring,"{FFDD00}Total Deliveries\t{FFFFFF}%d\n{FFDD00}Capture The Flag Games Won\t{FFFFFF}%d\n{FFDD00}Races Joined\t{FFFFFF}%d\n{FFDD00}Races Won\t{FFFFFF}%d",Players[playerid][DeliveryTotal],Players[playerid][ctf_wins],Players[playerid][RacesJoined],Players[playerid][RacesWon]);
    ShowPlayerDialog(playerid,29,DIALOG_STYLE_TABLIST,"Stats",xstring,"Ok","Cancel");
	return 1;
}

CMD:rtpall(playerid,params[])
{
	if(TPsystem == false) return SendClientMessage(playerid,COLOR_RED," * Teleportion System has been disabled!");
	for(new i=0;i<MAX_PLAYERS;i++)
	{
	    if(IsPlayerConnected(i))
	    {
   			CanTP[playerid][i] = true;
	    }
	}
	format(xstring,sizeof xstring,"* %p[ID: %d] is now allowing everyone to teleport to him.. [ /tp %d ]",playerid,playerid,playerid);
	SendClientMessageToAll(COLOR_GREEN,xstring);
	SendClientMessage(playerid,COLOR_GREEN,"** You have enabled everyone to teleport to you.");
	return 1;
}


CMD:rtp(playerid,params[])
{
	if(TPsystem == false) return SendClientMessage(playerid,COLOR_RED," * Teleportion System has been disabled!");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /rtp <playerid>");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	if(id == playerid) return SendClientMessage(playerid,COLOR_RED,"* You cant use this CMD at yourself!");
	if(CanTP[playerid][id] == false)
	{
		CanTP[playerid][id] = true;
		format(xstring,sizeof xstring,"* %p (ID:%d) has %s To Teleport to you! ( To Teleport - /tp %d )",playerid,playerid,"Enabled",playerid);
		SendClientMessage(id,COLOR_GREEN,xstring);
		format(xstring,sizeof xstring,"* To Enable Teleportion for %p (ID:%d) (/rtp %d)",playerid,playerid,playerid);
		SendClientMessage(id,COLOR_GREEN,xstring);
		format(xstring,sizeof xstring,"* %p (ID:%d) has %s To Teleport to %p (ID:%d)! ( To Disable Teleport - /rtp %d )",playerid,playerid,"Enabled",id,id,id);
		SendClientMessage(playerid,COLOR_GREEN,xstring);
	}
	else
	{
		CanTP[playerid][id] = false;
		format(xstring,sizeof xstring,"* %p (ID:%d) has %s To Teleport to you!",playerid,playerid,"Disabled");
		SendClientMessage(id,COLOR_SYSTEM,xstring);
		format(xstring,sizeof xstring,"* %p (ID:%d) has %s To Teleport to %p {ID:%d}! ( To Enable Teleport Again - /rtp %d )",playerid,playerid,"Disabled",id,id,id);
		SendClientMessage(playerid,COLOR_SYSTEM,xstring);
	}
	return 1;
}

CMD:requestteleport(playerid,params[]) cmd_rtp(playerid,params);
CMD:tp(playerid,params[])
{
	if(TPsystem == false) return SendClientMessage(playerid,COLOR_RED," * Teleportion System has been disabled!");
	new id;
	if(sscanf(params,"u",id)) return SendClientMessage(playerid,COLOR_RED,"USAGE: /tp <playerid>");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,COLOR_RED,"* Player not connected!");
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[playerid][AmRacing] == true) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	if(Players[id][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cant teleport to him now as he is at a minigame!");
	if(Players[id][AmRacing] == true) return SendClientMessage(playerid,COLOR_RED,"You cant teleport to him now as he is Racing!");
	if(gSpectateID[id] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_RED, "You cannot teleport to a admin who is specing");
	if(CanTP[id][playerid] == false)
	{
		format(xstring,sizeof xstring,"* Sorry! %p [ID: %d] has not enabled you for teleporting at him",id,id);
		SendClientMessage(playerid,COLOR_RED,xstring);
		format(xstring,sizeof xstring,"* * You could request him to enable teleport to him (/rtp %d) via PM",id);
		SendClientMessage(playerid,COLOR_RED,xstring);
		return 1;
	}
	format(xstring,sizeof xstring,"* %p (ID:%d) Teleported to you! ( To Disable Teleport - /rtp %d )",playerid,playerid,playerid);
	SendClientMessage(id,COLOR_YELLOW,xstring);
	format(xstring,sizeof xstring,"* %p (ID:%d) Teleported to %p (ID:%d)!",playerid,playerid,id,id);
	SendClientMessage(playerid,COLOR_YELLOW,xstring);
	format(xstring,sizeof xstring,"%p (ID:%d) Teleported to %p (ID:%d)!",playerid,playerid,id,id);
	SendMessageToAdmins_Tele(playerid,1,0xD6DB7BFF,xstring);
	new Float:a,Float:y,Float:x,Float:z;
	GetPlayerPos(id,x,y,z);
	GetPlayerFacingAngle(id,a);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		SetPlayerPos(playerid,x,y,z+5);
		SetPlayerFacingAngle(playerid,a);
		SetPlayerInterior(playerid,GetPlayerInterior(id));
	}
	else
	{
		SetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),a);
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerInterior(id));
	}
	return 1;
}

CMD:teleport(playerid,params[]) cmd_tp(playerid,params);
CMD:cmtp(playerid,params[])
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		CanTP[playerid][i] = false;
	}
	return SendClientMessage(playerid,COLOR_RED,"* Disabled All of your Enabled Teleports for players!");
}
CMD:clearmyteleport(playerid,params[]) cmd_cmtp(playerid,params);

CMD:tps(playerid,params[])
{
	if(!IsPlayerAdminLevel(playerid,8)) return 0;
	if(TPsystem == true)
	{
		TPsystem = false;
		SendClientMessage(playerid,COLOR_RED,"*** Teleportion System Disabled!");
	}
	else
	{
		TPsystem = true;
		SendClientMessage(playerid,COLOR_YELLOW,"*** Teleportion System Enabled!");
	}
	return 1;
}
CMD:teleportsystem(playerid,params[]) cmd_tps(playerid,params);
CMD:tpsystem(playerid,params[]) cmd_tps(playerid,params);

stock Float:GetPosInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	switch(IsPlayerInAnyVehicle(playerid))
	{
	    case 0: GetPlayerFacingAngle(playerid, a);
	    case 1: GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return a;
}
stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid)) // vehicle
    GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]); // foot.. speed on foot hack?
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 179.28625;
    return floatround(ST[3]);
}

GetRaceTick()
{
	new tick, race;
	tick=GetTickCount();
	race=tick-RaceTick;
	return race;
}



stock LoadDerbyMap(mapname[])
{

	format(xstring,sizeof xstring,"SELECT * FROM `objects` WHERE `setname` = '%s'", mapname);
	mysql_query(SQL, xstring);

	if(cache_num_rows() == 0) return 1;
	new total,setID;
	new creator[24];

	cache_get_value_name_int(0,"setID",setID);
	cache_get_value_name(0,"sCreator",creator);

	new Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,aModel,an;

	format(xstring,sizeof xstring,"SELECT * FROM `objectdata` WHERE `setID` = '%d'", setID);
	mysql_query(SQL, xstring);

	if(cache_num_rows() == 0) return 1;

	total = cache_num_rows();
	

	for(new a=0; a < total; a++)
	{
		cache_get_value_name_int(a,"oModel",aModel);
		cache_get_value_name_float(a,"oX",x);
		cache_get_value_name_float(a,"oY",y);
		cache_get_value_name_float(a,"oZ",z);
		cache_get_value_name_float(a,"rX",rx);
		cache_get_value_name_float(a,"rY",ry);
		cache_get_value_name_float(a,"rZ",rz);
		// Actually Create the object!
		if(aModel != 0)
		{
			an = CreateDynamicObject(aModel,x,y,z,rx,ry,rz,205,-1,-1);
   			Streamer_SetIntData(STREAMER_TYPE_OBJECT,an,E_STREAMER_EXTRA_ID,500); // ID 500 for derby

		}

	}
	return 1;
}

stock StringScan(string[],scanchar[])
{
	new len = strlen(string);
	for(new i; i<len; i++)
	{
	    if(string[i] == scanchar[0]) return i;
	}
	return -1;
}

/* Holding Object Subs */
HO_load(playerid,setname[])
{
	new query[100],t,i2=0;
	format(query,sizeof(query),"SELECT * FROM `ho` WHERE `hName`='%s' LIMIT 11",setname);
	mysql_query(SQL,query);
	//mysql_store_result();
	//new line[500];
	/*					ARGUEMENT VARIABLES
		playerid, slot, modelID , BONE, ox,oy,oz,rx,ry,rx,sx,sy,sz
						DATABASE VARIABLES
		 `hID`, `hName`, `hSaved`, `AllowedLoad`, `modelID`, `slots`, `bone`, `ox`, `oy`, `oz`, `rx`, `ry`, `rz`, `sx`, `sy`, `sz`
	*/
	if(cache_num_rows() != 0)
	{
		new total = cache_num_rows();
		for(new i=0; i< total; i++)
		{
			cache_get_value_name_int(i,"hID",HO2[playerid][ID]);				
			cache_get_value_name(i,"hName",HO2[playerid][hName]);
			cache_get_value_name(i,"hSaved",HO2[playerid][SavedBy]);
			cache_get_value_name_int(i,"AllowedLoad",t);		
            if(t == 0) { HO2[playerid][Allowed] = false; } else { HO2[playerid][Allowed] = true; }

			cache_get_value_name_int(i,"modelID", HO[playerid][i2][modelID]);
			cache_get_value_name_int(i,"slots", HO[playerid][i2][slots]);
			cache_get_value_name_int(i,"bone", HO[playerid][i2][bone]);

			cache_get_value_name_float(i,"ox",HO[playerid][i2][oX]);
			cache_get_value_name_float(i,"oy",HO[playerid][i2][oY]);	
			cache_get_value_name_float(i,"oz",HO[playerid][i2][oZ]);	
			cache_get_value_name_float(i,"rx",HO[playerid][i2][rX]);
			cache_get_value_name_float(i,"ry",HO[playerid][i2][rY]);	
			cache_get_value_name_float(i,"rz",HO[playerid][i2][rZ]);	
			cache_get_value_name_float(i,"sx",HO[playerid][i2][sX]);
			cache_get_value_name_float(i,"sy",HO[playerid][i2][sY]);	
			cache_get_value_name_float(i,"sz",HO[playerid][i2][sZ]);	
            SetPlayerAttachedObject(playerid,HO[playerid][i2][slots],HO[playerid][i2][modelID],HO[playerid][i2][bone],HO[playerid][i2][oX],HO[playerid][i2][oY],HO[playerid][i2][oZ],HO[playerid][i2][rX],HO[playerid][i2][rY],HO[playerid][i2][rZ],HO[playerid][i2][sX],HO[playerid][i2][sY],HO[playerid][i2][sZ]);
            HO2[playerid][eXist][i]=true;
		    ++i2;
		}
	}
	return 1;
}
HO_save(playerid,setname[])
{
	if(HO2[playerid][ID]==-1) return 0;

	new name[20],str[250];
	GetPlayerName(playerid,name,sizeof name);
	for(new loop=0; loop<=HO2[playerid][ID]; loop++)
	{
		if(HO2[playerid][eXist][loop]==true)
		{
			HO[playerid][loop][slots]=loop;
			format(str,sizeof(str), "INSERT INTO `ho`(`hID`, `hName`, `hSaved`, `AllowedLoad`, `modelID`, `slots`, `bone`) VALUES ('%d','%s','%s','%d','%d','%d','%d')",loop,setname,name,HO2[playerid][Allowed],HO[playerid][loop][modelID],HO[playerid][loop][slots],HO[playerid][loop][bone]);
			mysql_query(SQL,str);
			format(str,sizeof(str), "UPDATE `ho` SET `ox`='%f', `oy`='%f', `oz`='%f', `rx`='%f', `ry`='%f', `rz`='%f', `sx`='%f', `sy`='%f', `sz`='%f' WHERE `hID` = '%d' AND `hName` ='%s'",HO[playerid][loop][oX],HO[playerid][loop][oY],HO[playerid][loop][oZ],HO[playerid][loop][rX],HO[playerid][loop][rY],HO[playerid][loop][rZ],HO[playerid][loop][sX],HO[playerid][loop][sY],HO[playerid][loop][sZ],loop,setname);
			mysql_query(SQL,str);
		}
	}
	return 1;
}
HO_exist(setname[])
{
	new query[100];
	format(query,sizeof(query),"SELECT `hID` FROM `ho` WHERE `hName`='%s'",setname);
	mysql_query(SQL,query);
	if(cache_num_rows()== 0) return 0;
	else return 1;
}
HO_delete(setname[])
{
	if(!HO_exist(setname)) return 0;
	new query[100],hID;
	new str[128];
	format(query,sizeof(query),"SELECT `hID` FROM `ho` WHERE `hName`='%s'",setname);
	mysql_query(SQL,query);
	new total;
	if(cache_num_rows() != 0)
	{
	    total = cache_num_rows();
		for(new i=0; i< total; i++)
		{
			//sscanf(query,"p<|>d",hID);
			cache_get_value_name_int(i,"hID",hID);
			format(str,sizeof str,"DELETE FROM `ho` WHERE `hName` = '%s' AND `hID`='%d' LIMIT 11",setname,hID);
			mysql_query(SQL,str);
		}
	}
	return 1;
}
_ResetHO_coOrdination(playerid,hID)
{
			HO[playerid][hID][oX]=0.0,
			HO[playerid][hID][oY]=0.0,
			HO[playerid][hID][oZ]=0.0,
			HO[playerid][hID][rX]=0.0,
			HO[playerid][hID][rY]=0.0,
			HO[playerid][hID][rZ]=0.0,
			HO[playerid][hID][sX]=1.0,
			HO[playerid][hID][sY]=1.0,
			HO[playerid][hID][sZ]=1.0;
}
stock HO_Addons(playerid,Float:var0,Float:var1,Float:var2,Float:var3,Float:var4,Float:var5,var6)
{
	new str[100],temp;
	HO2[playerid][ID]+=1;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]= var6;
	HO[playerid][HO2[playerid][ID]][bone]= 2;
	HO[playerid][HO2[playerid][ID]][slots]= HO2[playerid][ID];
	HO[playerid][HO2[playerid][ID]][oX]= var0;
	HO[playerid][HO2[playerid][ID]][oY]= var1;
	HO[playerid][HO2[playerid][ID]][oZ]= var2;
	HO[playerid][HO2[playerid][ID]][rX]= var3;
	HO[playerid][HO2[playerid][ID]][rY]= var4;
	HO[playerid][HO2[playerid][ID]][rZ]= var5;
	HO[playerid][HO2[playerid][ID]][sX]= 1.0;
	HO[playerid][HO2[playerid][ID]][sY]= 1.0;
	HO[playerid][HO2[playerid][ID]][sZ]= 1.0;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone],HO[playerid][HO2[playerid][ID]][oX],HO[playerid][HO2[playerid][ID]][oY],HO[playerid][HO2[playerid][ID]][oZ],HO[playerid][HO2[playerid][ID]][rX],HO[playerid][HO2[playerid][ID]][rY],HO[playerid][HO2[playerid][ID]][rZ],HO[playerid][HO2[playerid][ID]][sX],HO[playerid][HO2[playerid][ID]][sY],HO[playerid][HO2[playerid][ID]][sZ]);
	format(str,sizeof str,"* HO ID: %d has been Created with Model %d (Bone:%d)",HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone]);
	SendClientMessage(playerid,-1,str);
	SendClientMessage(playerid,-1,"* To Remove your holding object -  /raho or rho <ID>");
	HO2[playerid][ID]=temp;
}
stock HO_Addons2(playerid,var6,Float:var0,Float:var1,Float:var2,Float:var3,Float:var4,Float:var5)
{
	new str[100],temp;
	HO2[playerid][ID]+=1;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]= var6;
	HO[playerid][HO2[playerid][ID]][bone]= 2;
	HO[playerid][HO2[playerid][ID]][slots]= HO2[playerid][ID];
	HO[playerid][HO2[playerid][ID]][oX]= var0;
	HO[playerid][HO2[playerid][ID]][oY]= var1;
	HO[playerid][HO2[playerid][ID]][oZ]= var2;
	HO[playerid][HO2[playerid][ID]][rX]= var3;
	HO[playerid][HO2[playerid][ID]][rY]= var4;
	HO[playerid][HO2[playerid][ID]][rZ]= var5;
	HO[playerid][HO2[playerid][ID]][sX]= 1.0;
	HO[playerid][HO2[playerid][ID]][sY]= 1.0;
	HO[playerid][HO2[playerid][ID]][sZ]= 1.0;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone],HO[playerid][HO2[playerid][ID]][oX],HO[playerid][HO2[playerid][ID]][oY],HO[playerid][HO2[playerid][ID]][oZ],HO[playerid][HO2[playerid][ID]][rX],HO[playerid][HO2[playerid][ID]][rY],HO[playerid][HO2[playerid][ID]][rZ],HO[playerid][HO2[playerid][ID]][sX],HO[playerid][HO2[playerid][ID]][sY],HO[playerid][HO2[playerid][ID]][sZ]);
	format(str,sizeof str,"* HO ID: %d has been Created with Model %d (Bone:%d)",HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone]);
	SendClientMessage(playerid,-1,str);
	SendClientMessage(playerid,-1,"* To Remove your holding object -  /raho or rho <ID>");
	HO2[playerid][ID]=temp;
}


stock HO_Addons3(playerid,var6,Float:var0,Float:var1,Float:var2,Float:var3,Float:var4,Float:var5,Float:var7)
{
	new str[100],temp;
	HO2[playerid][ID]+=1;
	temp=HO2[playerid][ID];
	new i=0;
	for( i=0; i<=9; i++)
	{
		if(HO2[playerid][eXist][i]==false)
		{
			HO2[playerid][ID]=i;
			HO2[playerid][eXist][i]=true;
			break;
		}
	}
	HO[playerid][HO2[playerid][ID]][modelID]= var6;
	HO[playerid][HO2[playerid][ID]][bone]= 2;
	HO[playerid][HO2[playerid][ID]][slots]= HO2[playerid][ID];
	HO[playerid][HO2[playerid][ID]][oX]= var0;
	HO[playerid][HO2[playerid][ID]][oY]= var1;
	HO[playerid][HO2[playerid][ID]][oZ]= var2;
	HO[playerid][HO2[playerid][ID]][rX]= var3;
	HO[playerid][HO2[playerid][ID]][rY]= var4;
	HO[playerid][HO2[playerid][ID]][rZ]= var5;
	HO[playerid][HO2[playerid][ID]][sX]= var7;
	HO[playerid][HO2[playerid][ID]][sY]= var7;
	HO[playerid][HO2[playerid][ID]][sZ]= var7;
	SetPlayerAttachedObject(playerid,HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone],HO[playerid][HO2[playerid][ID]][oX],HO[playerid][HO2[playerid][ID]][oY],HO[playerid][HO2[playerid][ID]][oZ],HO[playerid][HO2[playerid][ID]][rX],HO[playerid][HO2[playerid][ID]][rY],HO[playerid][HO2[playerid][ID]][rZ],HO[playerid][HO2[playerid][ID]][sX],HO[playerid][HO2[playerid][ID]][sY],HO[playerid][HO2[playerid][ID]][sZ]);
	format(str,sizeof str,"* HO ID: %d has been Created with Model %d (Bone:%d)",HO2[playerid][ID],HO[playerid][HO2[playerid][ID]][modelID],HO[playerid][HO2[playerid][ID]][bone]);
	SendClientMessage(playerid,-1,str);
	SendClientMessage(playerid,-1,"* To Remove your holding object -  /raho or rho <ID>");
	HO2[playerid][ID]=temp;
}

AutoAssign(/*playerid */)
{
	new g[2];//,cTeam[MAX_PLAYERS] = { 1 , 2};
	for(new x; x < MAX_PLAYERS; x++)
	{
	    if(IsPlayerConnected(x) && Players[x][TDMJoined] == true)
	    {
		    if(GetPlayerTeam(x)==1) g[0]++;
			if(GetPlayerTeam(x)==2) g[1]++;
		}
	}
 	if(g[0]>g[1]) return 2;//cTeam[playerid]=2;
	else if(g[0]<g[1]) return 1;//cTeam[playerid]=1;
 	else return 1;//cTeam[playerid]=1;
}

stock GetPlayerVehicleModel(playerid)	return 	GetVehicleModel(GetPlayerVehicleID(playerid));
stock GetPName(playerid) { new name[21]; GetPlayerName(playerid,name,sizeof name); return name; }
stock ReturnPlayerHealth(playerid) { new Float:armor; return floatround(GetPlayerHealth(playerid,armor)); }
stock ReturnPlayerArmour(playerid) { new Float:armor; return floatround(GetPlayerArmour(playerid,armor)); }
stock KillServer() { return SendRconCommand("exit"); } // use at own risk

stock stringContainsIP(const string[])
{
    new
        dotCount
    ;
    for(new i; string[i] != EOS; ++i)
    {
        if(('0' <= string[i] <= '9') || string[i] == '.' || string[i] == ':')
        {
            if((string[i] == '.') && (string[i + 1] != '.') && ('0' <= string[i - 1] <= '9'))
            {
                ++dotCount;
            }
            continue;
        }
    }
    return (dotCount > 2);
}

stock split(const strsrc[], strdest[][], delimiter)
{
    new i, li;
    new aNum;
    new len;
    while(i <= strlen(strsrc))
    {
        if(strsrc[i] == delimiter || i == strlen(strsrc))
        {
            len = strmid(strdest[aNum], strsrc, li, i, 128);
            strdest[aNum][len] = 0;
            li = i+1;
            aNum++;
        }
        i++;
    }
    return 1;
}

stock FindSeat(vehicleid)
{
    for(new i=0; i<=4; i++)
    {
  		if(!IsSeatTaken(vehicleid,i)) return i;
    }
	return -1;
}



stock AutoNewsChange(a)
{
	new highestid=0,highest=-1,tstr[128];
	if( a == 0 )
	{
		foreach(new i : Player)
		{
			if(Players[i][Deaths] >= highest)
			{
				highestid = i;
				highest = Players[i][Deaths];
			}
		}
		format(tstr,sizeof tstr,"~b~~h~Tr~h~iv~h~ia: ~y~%p ~h~ is the~h~ worst player~w~! (~r~%d ~h~Deaths~w~)",highestid,highest);
		TextDrawSetString(RXDM[5],tstr);
	}
	else if( a == 1 )
	{
		foreach(new i : Player)
		{
			if(Players[i][score] >= highest)
			{
				highestid = i;
				highest = Players[i][score];
			}
		}
		format(tstr,sizeof tstr,"~b~~h~Tr~h~iv~h~ia: ~y~%p ~h~ is the~h~ best player~w~! (~r~%d ~h~score~w~)",highestid,highest);
		TextDrawSetString(RXDM[5],tstr);
	}
	else if( a == 2 )
	{
		foreach(new i : Player)
		{
			if(Players[i][RacesWon] >= highest)
			{
				highestid = i;
				highest = Players[i][RacesWon];
			}
		}
		format(tstr,sizeof tstr,"~b~~h~Tr~h~iv~h~ia: ~y~%p ~h~ is the~h~ best racer~w~! (~r~%d ~h~wins~w~)",highestid,highest);
		TextDrawSetString(RXDM[5],tstr);
	}
	else if( a == 3 )
	{
		foreach(new i : Player)
		{
			if(Players[i][Token] >= highest)
			{
				highestid = i;
				highest = Players[i][Token];
			}
		}
		format(tstr,sizeof tstr,"~b~~h~Tr~h~iv~h~ia: ~y~%p ~h~ is the~h~ most favorite player~w~! (~r~%d ~h~tokens~w~)",highestid,highest);
		TextDrawSetString(RXDM[5],tstr);
	}
	else if( a == 4 )
	{
		foreach(new i : Player)
		{
			if(Players[i][Money] >= highest)
			{
				highestid = i;
				highest = Players[i][Money];
			}
		}
		format(tstr,sizeof tstr,"~b~~h~Tr~h~iv~h~ia: ~y~%p ~h~ is the~h~ richest player~w~! (~r~$%d ~h~cash~w~)",highestid,highest);
		TextDrawSetString(RXDM[5],tstr);
	}
	else if( a == 5 )
	{
		foreach(new i : Player)
		{
			if(Players[i][PlayTime] >= highest)
			{
				highestid = i;
				highest = Players[i][PlayTime];
			}
		}
		format(tstr,sizeof tstr,"~b~~h~Tr~h~iv~h~ia: ~y~%p ~h~ is the~h~ Dedicated player~w~! (~r~%d ~h~mins~w~)",highestid,highest);
		TextDrawSetString(RXDM[5],tstr);
	}
	else TextDrawSetString(RXDM[5],"~b~~h~Tr~h~iv~h~ia: ~y~NickName ~h~ is the~h~ best racer~w~! (~r~9999 ~h~records~w~)");
	return 1;
}

Kick2(playerid) return SetTimerEx("delaykick",1500,false,"d",playerid);
BanEx2(playerid,const reason[]) return SetTimerEx("DelayBanEx",1500,false,"ds",playerid,reason);
forward DelayBanEx(playerid,reason[]);
public DelayBanEx(playerid,reason[]) return BanEx(playerid,reason);
forward delaykick(playerid);
public delaykick(playerid) return Kick(playerid);


CreateNewTeleport(tName2[],Float:TpX,Float:TpY,Float:TpZ,Float:TpAng)
{
	new tID = ReturnTeleportID();
	if(tID == -1) return -1;
	format(TeleportSystem[tID][tName],21,"%s",tName2);
	TeleportSystem[tID][teleX] = TpX;
	TeleportSystem[tID][teleY] = TpY;
	TeleportSystem[tID][teleZ] = TpZ;
	TeleportSystem[tID][teleAng] = TpAng;
	
	return tID;
}

forward LoadEasterEggs(playerid);
public LoadEasterEggs(playerid)
{

	new rows,data;
	format(xstring,sizeof(xstring), "SELECT * FROM `eastereggs` WHERE `UserID` = %d LIMIT 1",GetUserID(playerid));
	mysql_query(SQL,xstring);
	rows = cache_num_rows();
	new egg[10];
    if(rows > 0)
    {
		for(new x=1; x<sizeof(EasterEgg)+1; x++)
		{
			format(egg,sizeof egg,"Egg%d",x);
			cache_get_value_name_int(x,egg,data);
		  	MyEggs[playerid][x-1] = data;
	    }
    }
    return 1;
}
stock EasterEggPickup(playerid,pickupid)
{
	 if(GetUserID(playerid) == -1)
	 {
        SendInfoText(playerid, 5000, "~r~YOU ~w~NEED ~g~TO ~p~/REGISTER");
		return 1;
	 }
	 for(new Egg=0; Egg<sizeof(EasterEgg); Egg++)
	 {
		  if(pickupid == EasterPickup[Egg])
		  {
			if(MyEggs[playerid][Egg] == 1)
			{
               SendInfoText(playerid,3000, "~r~You have already found this easter egg");
			}
			else
			{
               MyEggs[playerid][Egg] =1;

			   format(xstring,sizeof(xstring),"~r~%d ~w~OF ~g~%d ~p~EASTER EGGS ~w~FOUND!",CountPlayerEggs(playerid),sizeof(EasterEgg));
               SendInfoText(playerid, 5000, xstring);
               ApplyAnimation(playerid,"MISC","Case_pickup",1.0, false, true, true, false, false,FORCE_SYNC:1);
			   Easter_Egg_Update(playerid,Egg+1);
			   Reward_Send(playerid,EASTEREGG,C_PICKUP);
		       if(CountPlayerEggs(playerid) == sizeof(EasterEgg))
		       {
				   format(xstring,sizeof(xstring)," ? Easter eggs ? %p has found all the easter eggs",playerid);
				   SendClientMessageToAll(0xFAF0CEFF,xstring);

	  		       ShowPlayerDialog(playerid,400,DIALOG_STYLE_MSGBOX,"Easter Eggs","{1FC4A6}Congratulations!\n{FFFFFF}You have found all the hidden easter eggs\n\n{FFFFFF}Reward : {255F17}$10000000 {FFFFFF}and {FFA600}25 Score points","Ok","");
	   		       PlayerPlaySound(playerid,5450 ,0.0,0.0,0.0);
				   Reward_Send(playerid,EASTEREGG,C_COMPLETED);

		       }
			}
			break;
		  }
	 }
	 return 1;
}


forward Easter_Egg_Update(playerid,slot);
public Easter_Egg_Update(playerid,slot)
{
	format(xstring,sizeof(xstring), "SELECT `Egg1`,`Egg2` FROM `eastereggs` WHERE `UserID` = %d",GetUserID(playerid));
	mysql_query(SQL,xstring);
	new rows = cache_num_rows();
	if(GetUserID(playerid) == -1)
	{
        SendInfoText(playerid, 5000, "~r~YOU ~w~NEED ~g~TO ~p~/REGISTER");
		return 1;
	}
    new suck[10];
	format(suck,sizeof(suck),"Egg%d",slot);
    if(rows > 0)
	{
		 format(xstring,sizeof(xstring),"UPDATE `eastereggs` SET `%s` = 1,eName = '%p' WHERE `UserID` = %d",suck,playerid,GetUserID(playerid));
	     mysql_query(SQL,xstring);

	}
    else
    {
		 format(xstring,sizeof(xstring),"INSERT INTO `eastereggs` (`eName`,`UserID`,`%s`) VALUES ('%p',%d,1)",suck,playerid,GetUserID(playerid));
	     mysql_query(SQL,xstring);

	}
    return 1;
}
stock CountPlayerEggs(playerid)
{
	 new count=0;
	 for(new Egg=0; Egg<sizeof(EasterEgg); Egg++)
	 {
         if(MyEggs[playerid][Egg] == 1)
         {
			count ++;
         }
     }
     return count;
}

forward SendInfoText(playerid, time, const text[]);
public SendInfoText(playerid, time, const text[])
{
	if(IsPlayerConnected(playerid))
	{
		if(AnnTextShown[playerid] == 1)
		{
			KillTimer(HideAnnTextTimer[playerid]);
			HideAnnTextTimer[playerid]=-1;
		}


		PlayerTextDrawSetString(playerid, AnnText[playerid],text);
		PlayerTextDrawShow(playerid, AnnText[playerid]);
		AnnTextShown[playerid] = 1;

		if(time > 0)
		{
			HideAnnTextTimer[playerid] = SetTimerEx("DestroyAnnText", time,false, "i", playerid);
        }
    }
    return 1;
}
forward DestroyAnnText(playerid);
public DestroyAnnText(playerid)
{
	PlayerTextDrawHide(playerid,AnnText[playerid]);
	AnnTextShown[playerid] = 0;
}
forward Reward_Send(playerid,mode,type);
public Reward_Send(playerid,mode,type)
{
	if(type == C_COMPLETED) // collected all collection 100/100
	{
		if(mode == EASTEREGG )
		{
			// 500 token
			GiveToken(playerid,500);
			GameTextForPlayer(playerid,"~g~+500 Token!",2000,3);
		}
	}
	else // picked up one of the collection
	{
		if(mode == EASTEREGG )
		{
			GiveToken(playerid,10);
			GameTextForPlayer(playerid,"~g~+10 Token!",2000,3);
		}

	}

	return 1;
}
forward GetUserID(playerid);
public GetUserID(playerid)
{
	if(!IsPlayerConnected(playerid)) return -2;

	format(xstring,sizeof(xstring),"SELECT `userID` FROM `users` WHERE `Name` = '%p' LIMIT 1",playerid);
	mysql_query(SQL,xstring);
	if(cache_num_rows()!= 0)
	{
		new idxx;
		cache_get_value_name_int(0,"userID",idxx);
	}
	else return -1;
	
	return 1;
}

stock AddDrift(pname[],dname[],Float:x,Float:y,Float:z,Float:ang)
{
	format(xstring,sizeof xstring,"INSERT INTO `drift`(`dName`, `X`, `Y`, `Z`, `A`, `By`) VALUES ('%s','%f','%f','%f','%f','%s')",dname,x,y,z,ang,pname);
	mysql_query(SQL,xstring);
    return 1;
}
forward CountDownDriftTimer(playerid);
public CountDownDriftTimer(playerid)
{
	if(TDrif[playerid] == false) return 1;
	if(TimeLeft[playerid] == 0) return DriftSave(playerid);
	//if(TimeLeft[playerid] == 170) return DriftSave(playerid);

	TimeLeft[playerid]--;
	//SendClientMessage(playerid,-1,"mmm");
	new DBn[300];
	format(DBn,sizeof(DBn),"Drift HUD~n~ ~w~Total Points: ~y~%d~n~ ~w~Points: ~y~%d~n~~w~ Bonus:  ~y~X %d~n~~w~Time Left: ~y~%d Seconds~n~~n~~r~Record:~n~~w~%s    ~y~%d",TDriftPointsNow[playerid],DriftPointsNow[playerid],DriftBonus[playerid],TimeLeft[playerid],DriftRecordName[playerid],DriftRecord[playerid]);
	//SendClientMessage(playerid,-1,"mmm2");
    TextDrawSetString(TDDrift[playerid],DBn);// == 0) SendClientMessage(playerid,-1,"not printing");
	//SendClientMessage(playerid,-1,"mmm3");
    //TextDrawSetString(TDDrift[playerid],"test");
	//SendClientMessage(playerid,-1,DBn);
	return 1;

}stock DriftSave(playerid)
{
	TDriftPointsNow[playerid] += DriftPointsNow[playerid] * DriftBonus[playerid];
	new str[128];
	format(str,sizeof str,"[DRIFT] %p has scored \"%d\" in \"%s\" Track . Want to try drifting? Type /drift",playerid,TDriftPointsNow[playerid],DriftName[playerid]);
	SendClientMessageToAll(0x98817BFF,str);
	format(str,sizeof str,"INSERT INTO `driftscore`(`dID`, `dPlayer`, `score`, `dVehicle`) VALUES (%d,'%p',%d,'%v')",DriftID[playerid],playerid,TDriftPointsNow[playerid],DriftVehicle[playerid]);
	mysql_query(SQL,str);
	TDriftPointsNow[playerid] = 0; PlayerDriftCancellation[playerid] = 0;
	TextDrawHideForPlayer(playerid,TDDrift[playerid]);
	DriftBonus[playerid]=1;
	TextDrawSetString(TDDrift[playerid]," ");
	DriftPointsNow[playerid] = 0;
	TextDrawHideForPlayer(playerid,TDDrift[playerid]);
	KillTimer(eDriftTimer[playerid]);
	KillTimer(TimerA[playerid]);
	KillTimer(TimerC[playerid]);
	TimeLeft[playerid] = 180;
	TDrif[playerid] = false;
	DriftID[playerid] = -1;
	Players[playerid][Minigame] = 0;
	SetPlayerVirtualWorld(playerid, 0);
	SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerVirtualWorld(playerid));
	SpeedBoostDisabled[playerid] = false;
	return 1;
}
Float:GetPlayerTheoreticAngle(i)
{
        new Float:sin;
        new Float:dis;
        new Float:angle2;
        new Float:x,Float:y,Float:z;
        new Float:tmp3;
        new Float:tmp4;
        new Float:MindAngle;

        if(IsPlayerConnected(i)){

                GetPlayerPos(i,x,y,z);

                dis = floatsqroot(floatpower(floatabs(floatsub(x,ppos[i][0])),2)+floatpower(floatabs(floatsub(y,ppos[i][1])),2));

                if(IsPlayerInAnyVehicle(i)){GetVehicleZAngle(GetPlayerVehicleID(i), angle2);}else{GetPlayerFacingAngle(i, angle2);}

                if(x>ppos[i][0]){tmp3=x-ppos[i][0];}else{tmp3=ppos[i][0]-x;}
                if(y>ppos[i][1]){tmp4=y-ppos[i][1];}else{tmp4=ppos[i][1]-y;}

                if(ppos[i][1]>y && ppos[i][0]>x){
                	sin = asin(tmp3/dis);
                    MindAngle = floatsub(floatsub(floatadd(sin, 90), floatmul(sin, 2)), -90.0);
                }

                if(ppos[i][1]<y && ppos[i][0]>x){
                    sin = asin(tmp3/dis);
                    MindAngle = floatsub(floatadd(sin, 180), 180.0);
                }

                if(ppos[i][1]<y && ppos[i][0]<x){
                    sin = acos(tmp4/dis);
                    MindAngle = floatsub(floatadd(sin, 360), floatmul(sin, 2));
                }

                if(ppos[i][1]>y && ppos[i][0]<x){
                    sin = asin(tmp3/dis);
                    MindAngle = floatadd(sin, 180);
                }
        }

        if(MindAngle == 0.0){return angle2;}else{return MindAngle;}
}
forward DriftExit(playerid);
public DriftExit(playerid){
        PlayerDriftCancellation[playerid] = 0;

       /*
        TextDrawHideForPlayer(playerid,TDDrift[playerid]);*/
        TDriftPointsNow[playerid] += DriftPointsNow[playerid] * DriftBonus[playerid];
        DriftBonus[playerid]=1;
        DriftPointsNow[playerid] = 0;
	   /* new DBn[300];
	    TextDrawShowForPlayer(playerid,TDDrift[playerid]);
		format(DBn,sizeof(DBn),"Drift HUD~n~ ~w~Total Points: ~y~%d~n~ ~w~Points: ~y~%d~n~~w~ Bonus:  ~y~X %d~n~~w~Time Left: ~y~%d Seconds~n~~n~~r~Record:~n~~w~J0hn_X    ~y~968547598541257598756",TDriftPointsNow[playerid],DriftPointsNow[playerid],DriftBonus[playerid],TimeLeft[playerid]);
        TextDrawSetString(TDDrift[playerid],DBn);*/
}

Float:ReturnPlayerAngle(playerid){
        new Float:Ang;
        if(IsPlayerInAnyVehicle(playerid))GetVehicleZAngle(GetPlayerVehicleID(playerid), Ang); else GetPlayerFacingAngle(playerid, Ang);
        return Ang;
}
forward Drift(g);
public Drift(g){
        new Float:Angle1, Float:Angle2, Float:BySpeed;
        new Float:Z;
        new Float:X;
        new Float:Y;
        new Float:SpeedX;
		if(TDrif[g] == false) return 1;
        GetPlayerPos(g, X, Y, Z);
        SpeedX = floatsqroot(floatadd(floatadd(floatpower(floatabs(floatsub(X,SavedPos[ g ][ sXX ])),2),floatpower(floatabs(floatsub(Y,SavedPos[ g ][ sYY ])),2)),floatpower(floatabs(floatsub(Z,SavedPos[ g ][ sZZ ])),2)));
        Angle1 = ReturnPlayerAngle(g);
        Angle2 = GetPlayerTheoreticAngle(g);
        BySpeed = floatmul(SpeedX, 12);
        if(IsPlayerInAnyVehicle(g) && GetVType(GetPlayerVehicleID(g)) && floatabs(floatsub(Angle1, Angle2)) > DRIFT_MINKAT && floatabs(floatsub(Angle1, Angle2)) < DRIFT_MAXKAT && BySpeed > DRIFT_SPEED)
		{
			if(PlayerDriftCancellation[g] > 0)KillTimer(PlayerDriftCancellation[g]);
            PlayerDriftCancellation[g] = 0;
            DriftPointsNow[g] += floatval( floatabs(floatsub(Angle1, Angle2)) * 3 * (BySpeed*0.1) ) / 30;
            PlayerDriftCancellation[g] =  SetTimerEx("DriftExit", 5000, false, "d", g);
			//DriftPointsNow[g] = 0;
        }

        if(DriftPointsNow[g] > 0 && DriftPointsNow[g]<1000000)
		{
                    if(DriftPointsNow[g]<2000){
                        DriftBonus[g]=1;
					}
					if(DriftPointsNow[g]>2000){
                        DriftBonus[g]=2;
					}
                    if(DriftPointsNow[g]>3000){
                        DriftBonus[g]=3;
					}
					if(DriftPointsNow[g]>5000){
                        DriftBonus[g]=4;
					}
					if(DriftPointsNow[g]>10000){
                        DriftBonus[g]=5;
					}
	               /* TextDrawShowForPlayer(g,TDDrift[g]);

	                new DBn[300];
					format(DBn,sizeof(DBn),"Drift HUD~n~ ~w~Total Points: ~y~%d~n~ ~w~Points: ~y~%d~n~~w~ Bonus:  ~y~X %d~n~~n~~r~Record:~n~~w~J0hn_X    ~y~968547598541257598756",TDriftPointsNow[g],DriftPointsNow[g],DriftBonus[g]);
                    TextDrawSetString(TDDrift[g],DBn);*/
        }
        SavedPos[ g ][ sXX ] = X;
        SavedPos[ g ][ sYY ] = Y;
        SavedPos[ g ][ sZZ ] = Z;
        return 1;
}
forward AngleUpdate(g);
public AngleUpdate(g){
				if(TDrif[g] == false) return 1;
                new Float:x, Float:y, Float:z;
                if(IsPlayerInAnyVehicle(g))GetVehiclePos(GetPlayerVehicleID(g), x, y, z); else GetPlayerPos(g, x, y, z);
                ppos[g][0] = x;
                ppos[g][1] = y;
                ppos[g][2] = z;
				return 1;
}

floatval(Float:val){
        new str[256];
        format(str, 256, "%.0f", val);
        return todec(str);
}

todec(const str[]){
        return strval(str);
}
DestroyTextDraws(i)
{
	//for(new i=0;i<MAX_PLAYERS;i++){
		return TextDrawDestroy(TDDrift[i]);
	//}
	//return 1;
}

LoadTextDraws(g){
		TDDrift[g] = TextDrawCreate(5.646995, 215.833343, "Total Drift Points:~n~Drift Points:~n~Drift Bonus:~n~~n~Record:~n~[XXX]MyLongestNameEver");
		TextDrawLetterSize(TDDrift[g], 0.121529, 1.360833);
		TextDrawTextSize(TDDrift[g], 127.058799, -109.083343);
		TextDrawAlignment(TDDrift[g], TEXT_DRAW_ALIGN_LEFT);
		TextDrawColour(TDDrift[g], -65281);
		TextDrawUseBox(TDDrift[g], true);
		TextDrawBoxColour(TDDrift[g], 16);
		TextDrawSetShadow(TDDrift[g], 0);
		TextDrawSetOutline(TDDrift[g], 1);
		TextDrawBackgroundColour(TDDrift[g], 32);
		TextDrawFont(TDDrift[g], TEXT_DRAW_FONT_1);
		TextDrawSetProportional(TDDrift[g], true);

		return 1;
}
forward CheckPlayerState(i);
public CheckPlayerState(i)
{
		new PLAYER_STATE:cs;

		if(TDrif[i] == false) return 1;
	    cs=GetPlayerState(i);
	    if(DriftMode[i] && cs==PLAYER_STATE_DRIVER && DriftPointsNow[i]>70)
		{
	        new Float:h;
	        GetVehicleHealth(GetPlayerVehicleID(i),h);
	        if(h<HealthInit[i]){
	        	KillTimer(DriftTimer[i]);
	        	//DriftExit(i);
				DriftPointsNow[i] = 0;
				DriftBonus[i]=1;
	        	GameTextForPlayer(i,"~n~~n~~n~~n~~n~~n~~n~~r~Boom",800,5);
	        	DriftMode[i]=false;
			}
		}
	    if(cs==PLAYER_STATE_DRIVER && DriftMode[i]==false)
		{
	        if(GetVType(GetPlayerVehicleID(i)))
			{
		        DriftMode[i]=true;
		        GetVehicleHealth(GetPlayerVehicleID(i),HealthInit[i]);
		        //AutoFixBool[i]=false;
		        DriftTimer[i]=SetTimerEx("Drift", 200, true, "i", i);
			}
		}
		else if(cs!=PLAYER_STATE_DRIVER && DriftMode[i]==true)
		{
		    KillTimer(DriftTimer[i]);
		    DriftMode[i]=false;
		    //AutoFixBool[i]=true;
		}
		else{}
		return 1;
}
GetVType(vid){

	new Convertibles[4]={480, 533, 439, 555};
	new Industrial[26]={499, 422, 482, 498, 609, 524, 578, 455, 403, 414, 582, 443, 514, 413, 515, 440, 543, 605, 459, 531, 408, 552, 478, 456, 554};
	new LowRider[8]={536, 575, 534, 567, 535, 566, 576, 412};
	new OffRoad[13]={568, 424, 573, 579, 400, 500, 444, 556, 557, 470, 489, 505, 595};
	new Service[19]={416, 433, 431, 438, 437, 523, 427, 490, 528, 407, 544, 596, 596, 597, 598, 599, 432, 601, 420};
	new Saloon[35]={445, 504, 401, 518, 527, 542, 507, 562, 585, 419, 526, 604, 466, 492, 474, 546, 517, 410, 551, 516, 467, 600, 426, 436, 547, 405, 580, 560, 550, 549, 540, 491, 529, 421};
	new Sports[20]={602, 429, 496, 402, 541, 415, 589, 587, 565, 494, 502, 503, 411, 559, 603, 475, 506, 451, 558, 477};
	new Wagons[5]={418, 404, 479, 458, 561};

	new modelid=GetVehicleModel(vid);
	new i;
	for(i=0;i<3;i++){
		    if(Convertibles[i]==modelid) return 1;
	}
	for(i=0;i<25;i++){
		    if(Industrial[i]==modelid) return 1;
	}
	for(i=0;i<7;i++){
		    if(LowRider[i]==modelid) return 1;
	}
	for(i=0;i<12;i++){
		    if(OffRoad[i]==modelid) return 1;
	}
	for(i=0;i<19;i++){
		    if(Service[i]==modelid) return 1;
	}
	for(i=0;i<35;i++){
		    if(Saloon[i]==modelid) return 1;
	}
	for(i=0;i<20;i++){
		    if(Sports[i]==modelid) return 1;
	}
	for(i=0;i<5;i++){
		    if(Wagons[i]==modelid) return 1;
	}
	return 0;
}
stock clearstring(string[])
{
	new l = strlen(string);
	strdel(string,0,l);
	return 1;
}

stock _B@Fetch(playerid, _@@State) return B@Status[playerid][_@@State];

stock _B@EchoS(playerid, _@@State)
{
	new str[72];
	switch(B@Status[playerid][_@@State])
	{
		case 0: str = " Nothing";
		case 1: str = " NOS";
		case 2: str = " Speed Booster";
		case 3: str = " Directional Speed Booster Forward";
		case 4: str = " Directional Speed Booster Behind";
		case 5: str = " Directional Speed Booster Left";
		case 6: str = " Directional Speed Booster Right";
		case 7: str = " Car Colour Changer";
		case 8: str = " Vehicle Jump";
		case 9: str = " Spin Vehicle X-Axis";
		case 10: str = " Spin Vehicle Y-Axis";
		case 11: str = " Spin Vehicle Z-Axis";
		case 12: str = " Flip Vehicle";
		case 13: str = " 90 Degree Turn";
		case 14: str = " 180 Degree Turn";
		case 15: str = " Instant Stop";
	}
	format(str,sizeof str,"{79F2F2}%s",str);
	return str;
}
stock _B@EchoP(_@@ctrl)
{
	new str[72];
	switch(_@@ctrl)
	{
		case 0: str = "Nothing";
		case 1: str = "NOS";
		case 2: str = "Speed Booster";
		case 3: str = "Directional Speed Booster Forward";
		case 4: str = "Directional Speed Booster Behind";
		case 5: str = "Directional Speed Booster Left";
		case 6: str = "Directional Speed Booster Right";
		case 7: str = "Car Colour Changer";
		case 8: str = "Vehicle Jump";
		case 9: str = "Spin Vehicle X-Axis";
		case 10: str = "Spin Vehicle Y-Axis";
		case 11: str = "Spin Vehicle Z-Axis";
		case 12: str = "Flip Vehicle";
		case 13: str = "90 Degree Turn";
		case 14: str = "180 Degree Turn";
		case 15: str = "Instant Stop";
	}
	format(str,sizeof str,"{87C9FF}%s",str);
	return str;
}
stock _B@ResetValue(playerid)
{
	B@Value[playerid][_@NOS] = 1;
	B@Value[playerid][_@SSB] = 1.67;
	B@Value[playerid][_@DSSBF] = 1.67;
	B@Value[playerid][_@DSSBB] = 1.67;
	B@Value[playerid][_@DSSBL] = 1.67;
	B@Value[playerid][_@DSSBR] = 1.67;
	B@Value[playerid][_@CColor] = 1;
	B@Value[playerid][_@VJump] = 0.4;
	B@Value[playerid][_@SpinX] = 0.67;
	B@Value[playerid][_@SpinY] = 0.67;
	B@Value[playerid][_@SpinZ] = 0.67;
	B@Value[playerid][_@VFlip] = 1;
	B@Value[playerid][_@V90] = 1;
	B@Value[playerid][_@V180] = 1;
	return 1;
}
stock _B@ResetKey(playerid)
{
	for(new i=0;i<_@State;i++) B@Status[playerid][i] = _@NADA;
	B@Status[playerid][_@FIREKEY] = _@NOS;
	B@Status[playerid][_@HORNKEY] = _@SSB;
	return 1;
}
stock _B@Action(playerid,_@@ctrl)
{
	if(_@@ctrl == _@NADA) return 1;
	if(_@@ctrl == _@NOS)
	{
		if(RaceActive == true && RaceNOS == false && Players[playerid][AmRacing] == true) return 1;
		else return AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
	}
	if(_@@ctrl == _@CColor) return ChangeVehicleColours(GetPlayerVehicleID(playerid),random(255),random(255));
	if( SpeedBoostDisabled[playerid] == false ) {
		if(_@@ctrl == _@InstantStop) return SetVehicleVelocity(GetPlayerVehicleID(playerid),0,0,0);
		if(_@@ctrl == _@SpinX) return SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), B@Value[playerid][_@SpinX], 0.0, 0.0);
		if(_@@ctrl == _@SpinY) return SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), 0.0, B@Value[playerid][_@SpinY],0.0);
		if(_@@ctrl == _@SpinZ) return SetVehicleAngularVelocity(GetPlayerVehicleID(playerid),  0.0, 0.0, B@Value[playerid][_@SpinZ]);
		if(_@@ctrl == _@VFlip)
		{
			new Float:_@@ZAngle;
			GetVehicleZAngle(GetPlayerVehicleID(playerid),_@@ZAngle);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),_@@ZAngle+360);
			SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
			RepairVehicle(GetPlayerVehicleID(playerid));
			SetVehicleVelocity(GetPlayerVehicleID(playerid),0,0,0);
			PlayerPlaySound(playerid,1054,0,0,0);
		}
		if(_@@ctrl == _@V90)
		{
			new Float:_@@ZAngle;
			GetVehicleZAngle(GetPlayerVehicleID(playerid),_@@ZAngle);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),_@@ZAngle+90);
			SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
			RepairVehicle(GetPlayerVehicleID(playerid));
			SetVehicleVelocity(GetPlayerVehicleID(playerid),0,0,0);
			PlayerPlaySound(playerid,1054,0,0,0);
		}
		if(_@@ctrl == _@V180)
		{
			new Float:_@@ZAngle;
			GetVehicleZAngle(GetPlayerVehicleID(playerid),_@@ZAngle);
			SetVehicleZAngle(GetPlayerVehicleID(playerid),_@@ZAngle+180);
			SetVehicleHealth(GetPlayerVehicleID(playerid),1000.0);
			RepairVehicle(GetPlayerVehicleID(playerid));
			SetVehicleVelocity(GetPlayerVehicleID(playerid),0,0,0);
			PlayerPlaySound(playerid,1054,0,0,0);
		}
		if(_@@ctrl == _@SSB)
		{

			new Float:_@calc[3];
			GetVehicleVelocity(GetPlayerVehicleID(playerid), _@calc[0], _@calc[1], _@calc[2]);
			if (floatabs(_@calc[0]) < 3.0 && floatabs(_@calc[1]) < 3.0 && floatabs(_@calc[2]) < 3.0)
			{
				SetVehicleVelocity(GetPlayerVehicleID(playerid), _@calc[0] * B@Value[playerid][_@SSB], _@calc[1] * B@Value[playerid][_@SSB], _@calc[2] * B@Value[playerid][_@SSB]);
			}
			return 1;
		}
		if(_@@ctrl == _@VJump)
		{

			new Float:_@calc[3];
			GetVehicleVelocity(GetPlayerVehicleID(playerid), _@calc[0], _@calc[1], _@calc[2]);
			if (floatabs(_@calc[0]) < 3.0 && floatabs(_@calc[1]) < 3.0 && floatabs(_@calc[2]) < 3.0)
			{
				SetVehicleVelocity(GetPlayerVehicleID(playerid), _@calc[0], _@calc[1], _@calc[2] + B@Value[playerid][_@VJump]);
			}
			return 1;
		}
		if(_@@ctrl == _@DSSBF)
		{
			new Float:_@calc[3], Float:_@faceangle[3], Float:_@velocity;
			GetVehicleVelocity(GetPlayerVehicleID(playerid), _@calc[0], _@calc[1], _@calc[2]);
			_@velocity = floatsqroot((_@calc[0] * _@calc[0]) + (_@calc[1] * _@calc[1]) + (_@calc[2] * _@calc[2]));
			_@velocity += 0.7;
			new Float:_@force[3] = {0.0, -1.0, 0.0};
			RotatePointVehicleRotation(GetPlayerVehicleID(playerid), _@force, _@faceangle[0], _@faceangle[1], _@faceangle[2]);
			if(_@velocity< 3) SetVehicleVelocity(GetPlayerVehicleID(playerid), _@faceangle[0] * _@velocity, _@faceangle[1] * _@velocity, _@faceangle[2] * _@velocity);
			return 1;
		}
		if(_@@ctrl == _@DSSBB)
		{
			new Float:_@calc[3], Float:_@faceangle[3], Float:_@velocity;
			GetVehicleVelocity(GetPlayerVehicleID(playerid), _@calc[0], _@calc[1], _@calc[2]);
			_@velocity = floatsqroot((_@calc[0] * _@calc[0]) + (_@calc[1] * _@calc[1]) + (_@calc[2] * _@calc[2]));
			_@velocity += 0.7;
			new Float:_@force[3] = {0.0, 1.0, 0.0};
			RotatePointVehicleRotation(GetPlayerVehicleID(playerid), _@force, _@faceangle[0], _@faceangle[1], _@faceangle[2]);
			if(_@velocity< 3) SetVehicleVelocity(GetPlayerVehicleID(playerid), _@faceangle[0] * _@velocity, _@faceangle[1] * _@velocity, _@faceangle[2] * _@velocity);
			return 1;
		}
		if(_@@ctrl == _@DSSBR)
		{
			new Float:_@calc[3], Float:_@faceangle[3], Float:_@velocity;
			GetVehicleVelocity(GetPlayerVehicleID(playerid), _@calc[0], _@calc[1], _@calc[2]);
			_@velocity = floatsqroot((_@calc[0] * _@calc[0]) + (_@calc[1] * _@calc[1]) + (_@calc[2] * _@calc[2]));
			_@velocity += 0.7;
			new Float:_@force[3] = {1.0, 0.0, 0.0};
			RotatePointVehicleRotation(GetPlayerVehicleID(playerid), _@force, _@faceangle[0], _@faceangle[1], _@faceangle[2]);
			if(_@velocity< 3) SetVehicleVelocity(GetPlayerVehicleID(playerid), _@faceangle[0] * _@velocity, _@faceangle[1] * _@velocity, _@faceangle[2] * _@velocity);
			return 1;
		}
		if(_@@ctrl == _@DSSBL)
		{
			new Float:_@calc[3], Float:_@faceangle[3], Float:_@velocity;
			GetVehicleVelocity(GetPlayerVehicleID(playerid), _@calc[0], _@calc[1], _@calc[2]);
			_@velocity = floatsqroot((_@calc[0] * _@calc[0]) + (_@calc[1] * _@calc[1]) + (_@calc[2] * _@calc[2]));
			_@velocity += 0.7;
			new Float:_@force[3] = {-1.0, 0.0, 0.0};
			RotatePointVehicleRotation(GetPlayerVehicleID(playerid), _@force, _@faceangle[0], _@faceangle[1], _@faceangle[2]);
			if(_@velocity< 3) SetVehicleVelocity(GetPlayerVehicleID(playerid), _@faceangle[0] * _@velocity, _@faceangle[1] * _@velocity, _@faceangle[2] * _@velocity);
			return 1;
		}
	}
	return 1;
}
stock MatrixTransformVector(const Float:vector[3], const Float:m[4][4], &Float:resx, &Float:resy, &Float:resz) 
{
        resz = vector[2] * m[0][0] + vector[1] * m[0][1] + vector[0] * m[0][2] + m[0][3];
        resy = vector[2] * m[1][0] + vector[1] * m[1][1] + vector[0] * m[1][2] + m[1][3];
        resx = -(vector[2] * m[2][0] + vector[1] * m[2][1] + vector[0] * m[2][2] + m[2][3]); // don't ask why -x was needed, i don't know either.
}

stock RotatePointVehicleRotation(vehid, const Float:Invector[3], &Float:resx, &Float:resy, &Float:resz, worldspace=0)
{
	new Float:Quaternion[4];
 	new Float:transformationmatrix[4][4];

	GetVehicleRotationQuat(vehid, Quaternion[0], Quaternion[1], Quaternion[2], Quaternion[3]);

  	new Float:xx = Quaternion[0] * Quaternion[0];
   	new Float:xy = Quaternion[0] * Quaternion[1];
    new Float:xz = Quaternion[0] * Quaternion[2];
    new Float:xw = Quaternion[0] * Quaternion[3];
    new Float:yy = Quaternion[1] * Quaternion[1];
    new Float:yz = Quaternion[1] * Quaternion[2];
    new Float:yw = Quaternion[1] * Quaternion[3];
    new Float:zz = Quaternion[2] * Quaternion[2];
    new Float:zw = Quaternion[2] * Quaternion[3];

	transformationmatrix[0][0] = 1 - 2 * ( yy + zz );
 	transformationmatrix[0][1] =     2 * ( xy - zw );
  	transformationmatrix[0][2] =     2 * ( xz + yw );
   	transformationmatrix[0][3] = 0.0;

	transformationmatrix[1][0] =     2 * ( xy + zw );
	transformationmatrix[1][1] = 1 - 2 * ( xx + zz );
 	transformationmatrix[1][2] =     2 * ( yz - xw );
  	transformationmatrix[1][3] = 0.0;

	transformationmatrix[2][0] =     2 * ( xz - yw );
 	transformationmatrix[2][1] =     2 * ( yz + xw );
  	transformationmatrix[2][2] = 1 - 2 * ( xx + yy );
   	transformationmatrix[2][3] = 0;

	transformationmatrix[3][0] = 0;
 	transformationmatrix[3][1] = 0;
  	transformationmatrix[3][2] = 0;
   	transformationmatrix[3][3] = 1;
    MatrixTransformVector(Invector, transformationmatrix, resx, resy, resz);
    if (worldspace == 1) {
    	new Float:fX, Float:fY, Float:fZ;
     	GetVehiclePos(vehid, fX, fY, fZ);
      	resx += fX;
      	resy += fY;
      	resz += fZ;
    }
}

stock GetNPCNameByID(const name[])
{
	new name2[21],id = -1;
	for(new i;i<MAX_PLAYERS;i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        GetPlayerName(i,name2,sizeof name2);
		    if(!strcmp(name,name2,true))
		    {
				id = i;
				return id;
		    }
	    }
	}
	return id;
}


stock ResetVariables(playerid)
{
	Players[playerid][Expierience] = 0;
	Players[playerid][Rank] = 0;
	Players[playerid][SPoints] = 0;
	Players[playerid][fs] = 0;
	Players[playerid][acceptpms] = true;
	Players[playerid][Lotto] = 0;
	Players[playerid][SpawnProtect] = false;
    Players[playerid][reporteda] = INVALID_PLAYER_ID;
	Players[playerid][sessiontime] = 0;
	Players[playerid][mytime] = 7;
	Players[playerid][crashwarns] = 0;
	Players[playerid][oranges] = 0;
	Players[playerid][apples] = 0;
	Players[playerid][reporteda] = 0;
	Players[playerid][ctfflags] = 0;
	Players[playerid][Wash] = 0;
	Players[playerid][allowmg] = false;
	Players[playerid][rockets] = false;
	Players[playerid][Collisions] = false;
	Players[playerid][userID] = -1;
	Players[playerid][dueling] = -1;
	Players[playerid][duelloc] = 0;
	Players[playerid][invited] = false;
	Players[playerid][afob] = false;
	Players[playerid][favwpn] = 0;
	Players[playerid][hidden] = false;
	Players[playerid][bounty] = 0;
	Players[playerid][hydra] = false;
	Players[playerid][rhino] = false;
	Players[playerid][readpms] = true;
	Players[playerid][autofix] = true;
    gSpectateID[playerid] = INVALID_PLAYER_ID;
    Players[playerid][AdminMsgs] = true;
	Players[playerid][PMs] = true;
	Players[playerid][AdminLvl] = 0;
	Players[playerid][Minigame] = 0;
	Players[playerid][LastCar] = -1;
	Players[playerid][PlayTime] = 0;
	Players[playerid][Logged] = false;
	Players[playerid][Registered] = false;
	Players[playerid][Spawned] = false;
	Players[playerid][Money] = 0;
	Players[playerid][Deaths] = 0;
	Players[playerid][Skin] = -1;
	Players[playerid][Color] = 0;
	Players[playerid][Muted] = false;
	Players[playerid][God] = false;
	Players[playerid][VIP] = 0;
	Players[playerid][Banned] = false;
	Players[playerid][RacesWon] = 0;
	Players[playerid][RacesJoined] = 0;
	Players[playerid][TDMJoined] = false;
	Players[playerid][AutoGM] = false;
	Players[playerid][banked] = 0;
	Players[playerid][KSpree] = 0;
	Players[playerid][AC_JackAlerts] = 0;
	Players[playerid][AC_HealthAlerts] = 0;
	Players[playerid][AC_MoneyAlerts] = 0;
	Players[playerid][AC_ArmourAlerts] = 0;
	Players[playerid][TDMJoined] = false;
	isNeonON[playerid]=false;
	cNeon[playerid]=-1;
	TokenUsing[playerid]=false;
	TokenUltimate[playerid]=false;
	AllowedVehicle[playerid]=false;
	Players[playerid][Token] = 0;
	Players[playerid][Spam] = 0;
	Players[playerid][Editing] = 0;
	Players[playerid][MyCar] = 0;
	Players[playerid][IPLookups] = false;
	megajump[playerid] = false;
	MJ_Value[playerid][0] = 0.10;
	MJ_Value[playerid][1] = 2.0;
	FPS_bool[playerid]=false;
	SpeedBoostDisabled[playerid] = false;
	Players[playerid][AdminChat] = 0;
	Players[playerid][explosions] = 5;
	Players[playerid][AmRacing] = false;
	MyCurrentCP[playerid] = -1;
	Players[playerid][MyRank] = -1;
	Players[playerid][AmBuilding] = false;
	strdel(Players[playerid][groupName],0,strlen(Players[playerid][groupName]));
	Players[playerid][ctf_wins] = 0;

}
/*
			REMOTE FUNCTIONS for GLOBAL VARIABLES
*/

forward GetPlayerMinigame(playerid); public GetPlayerMinigame(playerid) return Players[playerid][Minigame];
forward SetPlayerMinigame(playerid,value); public SetPlayerMinigame(playerid,value) return Players[playerid][Minigame]=value;
forward GetPlayerKB(playerid); public GetPlayerKB(playerid) return SpeedBoostDisabled[playerid];
forward SetPlayerKB(playerid,bool:value); public SetPlayerKB(playerid,bool:value) return SpeedBoostDisabled[playerid]=value;

forward SetPlayerToken(playerid,value); public SetPlayerToken(playerid,value) return Players[playerid][Token]=value;
forward GetPlayerToken(playerid,value); public GetPlayerToken(playerid,value) return Players[playerid][Token]+=value;
//forward GetUserID(playerid);


forward IsUserAdmin(playerid);
public IsUserAdmin(playerid) 
{
	if(Players[playerid][AdminLvl] > 0) return 1;
	return 0;
}

forward CheckAdminLevel(playerid,level);
public CheckAdminLevel(playerid,level)
{
	if(Players[playerid][AdminLvl] >= level) return 1;
	return 0;
}
forward GetPlayerAdminLevel(playerid);
public GetPlayerAdminLevel(playerid) return Players[playerid][AdminLvl];
forward IsAdminInSpec(playerid);
public IsAdminInSpec(playerid)
{
	if(gSpectateID[playerid] != INVALID_PLAYER_ID) return 1;
	else return 0;
}
forward IsPlayerLoggedIn(playerid);
public IsPlayerLoggedIn(playerid)
{
	if(Players[playerid][Logged] == true) return 1;
	else return 0;
}


stock MinigameCounter(id)
{
	new total = 0;
	for(new i; i<=MAX_PLAYERS; i++)
	{
        if(Players[i][Minigame] == id) total++;
	} 
 	return total;
}


CMD:road1(playerid, params[]) return StuntTele(playerid,836.0416,-2033.6246,12.8672,0);
CMD:road2(playerid, params[]) return StuntTele(playerid,1175.0767,1843.3232,405.8687,0);
CMD:road3(playerid, params[]) return StuntTele(playerid,-2309.8647,-2716.9883,44.3047,0);
CMD:road4(playerid, params[]) return StuntTele(playerid,1402.3422,-5243.7520,448.9688,0);
CMD:parkournrg(playerid, params[]) return StuntTele(playerid,-1484.1837, 734.4379, 1119.5100,0);
CMD:parkour1(playerid, params[]) return StuntTele(playerid,1172.6533,-2063.4160,432.7214,0);
CMD:parkour2(playerid, params[]) return StuntTele(playerid,2056.1323,2370.8943,150.4766,0);
CMD:parkour3(playerid, params[]) return StuntTele(playerid,1543.4668,-1358.5482,329.4654,0);
CMD:road5(playerid, params[]) return StuntTele(playerid,-2744.3052,-1368.5472,585.5021,0);
CMD:road6(playerid, params[]) return StuntTele(playerid,-2259.1152,1265.1099,42.1497,0);
CMD:road7(playerid, params[]) return StuntTele(playerid,-2261.9001,2334.1746,4.8125,0);
CMD:road8(playerid, params[]) return StuntTele(playerid,1658.8309,5156.0610,51.5501,0);
CMD:road9(playerid, params[]) return StuntTele(playerid,-2076.3281,1410.7878,7.1016,0);
CMD:road10(playerid, params[]) return StuntTele(playerid,-1174.6399,36.0273,14.1484,0);
CMD:road11(playerid, params[]) return StuntTele(playerid,340.1289,152.5560,4.8739,0);
CMD:road12(playerid, params[]) return StuntTele(playerid, -668.5000000,-1734.1992200,40.0900000,0);
CMD:road13(playerid, params[]) return StuntTele(playerid,  2794.54199, -2566.74048, 16.50828,0);
CMD:road14(playerid, params[]) return StuntTele(playerid, 2883.2971,-778.8366,10.8497,269.9920);
CMD:tripzenx1(playerid, params[]) return StuntTele(playerid,2584.6453,-2204.6306,-0.2188,182.8190);
CMD:tripzenx2(playerid, params[]) return StuntTele(playerid,-2750.8999,1479.2836,3.8285,0);
CMD:tripzenx3(playerid, params[]) return StuntTele(playerid, 2108.1013,-2698.3770,17.5469,0);
CMD:road15(playerid, params[]) return StuntTele(playerid,2890.2957,-1139.8040,10.6021,269.9920);
CMD:lastroad(playerid, params[]) return StuntTele(playerid,2890.2957,-1139.8040,10.6021,269.9920);
CMD:bmxparkour(playerid, params[]) return StuntTele(playerid,1068.8763,1181.3750,617.2766,224.8565);
CMD:racetrack(playerid, params[]) return StuntTele(playerid,3975.4968,1632.2523,11.1306,0.4863);
CMD:rcity(playerid, params[]) { 
	GameTextForPlayer(playerid,"~y~ Made by ~g~RaveN",2000,4);
	return StuntTele(playerid,212.81180,2137.90063,709.76874,0);
}
CMD:viphideout(playerid, params[]) {
	if(IsAdmin(playerid) || IsVIP(playerid)) {
		return StuntTele(playerid, -2037.36914,404.94742,35.17229 ,0); 
	}
	else return SendClientMessage(playerid,COLOR_RED,"this is VIP command!");
}
CMD:sftower(playerid, params[]) {
	if(IsAdmin(playerid) || IsVIP(playerid)) {
		return StuntTele(playerid, -1752.7588,885.4930,295.8750 ,0);
	}
	else return SendClientMessage(playerid,COLOR_RED,"this is VIP command!");
}


//forward StuntTele(playerid,Float:x,Float:y,Float:z,Float:a=-1.000000000);
forward StuntTele(playerid,Float:x,Float:y,Float:z,Float:a);
public StuntTele(playerid,Float:x,Float:y,Float:z,Float:a)
{
	if(Players[playerid][Minigame] != 0) return SendClientMessage(playerid,COLOR_RED,"You cannot use commands in minigames (or in jail)");
	SetPlayerInterior(playerid,0);
	if(a==-1.000000000 || a==0)
	{
		if(IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
		else GetPlayerFacingAngle(playerid,a);
	}
 	GotoPosition(playerid,x,y,z+5,true);
	if(IsPlayerInAnyVehicle(playerid)) SetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else SetPlayerFacingAngle(playerid,a);
  	GameTextForPlayer(playerid,"~y~ TELEPORTED!",500,4);
	GotoPosition(playerid,x,y,z+5,true);
	return 1;

}

forward StartRace();
public StartRace()
{
		if(RaceActive == false)
		{
			mysql_query(SQL,"SELECT `raceID`, `TotalCP`, `racename`, `vehicleID`, `deleted`,`Interior`,`CreatedBy` FROM `race` WHERE `deleted` = 0 ORDER BY RAND()  LIMIT 1");
			if(cache_num_rows()!= 0)
			{
					new del;
					//sscanf(line,"p<|>dds[24]ddds[24]",rID,TotalCP,R_Name,VehicleID,del,R_Interior,RCreator);
					cache_get_value_name_int(0,"raceID",rID);
					cache_get_value_name_int(0,"TotalCP",TotalCP);
					cache_get_value_name(0,"racename",R_Name);
					cache_get_value_name_int(0,"vehicleID",VehicleID);
					cache_get_value_name_int(0,"deleted",del);
					cache_get_value_name_int(0,"Interior",R_Interior);
					cache_get_value_name(0,"CreatedBy",RCreator);


					if(del == 1) return Race_Rotation();//SendClientMessage(playerid,COLOR_RED,"*** This race have been deleted!"),SendClientMessage(playerid,COLOR_RED,"*** Contract Owner to re-store!");
					else
					{
						new query[300];
						format(query,sizeof(query),"SELECT `X`, `Y`, `Z`, `A`, `CPsize` FROM `racecp` WHERE `raceID`=%d",rID);
						mysql_query(SQL,query);
						if(cache_num_rows()!= 0)
						{
							new rows = cache_num_rows();
							for(new i=0;i<rows;i++)
							{
								cache_get_value_name_float(i,"X",CPs[i][0]);
								cache_get_value_name_float(i,"Y",CPs[i][1]);
								cache_get_value_name_float(i,"Z",CPs[i][2]);
								cache_get_value_name_float(i,"A",CPs[i][3]);
								cache_get_value_name_float(i,"CPsize",CPsize[i]);
							}
						}
						//else return SendClientMessage(playerid,COLOR_RED,"*** Critical Error: Race~CP ^^ Loading Failed!");
						format(query,sizeof(query),"SELECT `Name`, `Time`, `VehicleUsed` FROM`racetimes` WHERE `raceID`=%d ORDER BY`racetimes`.`Time`ASC LIMIT 5",rID);
						mysql_query(SQL,query);
						if(cache_num_rows()!= 0)
						{
							isRecordEmpty = false;
							new rows;
							rows = cache_num_rows();
							for(new i=0;i<rows;i++)
							{
								cache_get_value_name(i,"Name",RecordName[i]);
								cache_get_value_name_float(i,"Time",RecordTime[i]);
								cache_get_value_name(i,"VehicleUsed",RecordVehicle[i]);
							}
						}
						else isRecordEmpty = true;
						return RaceDetails();
					}
			}
			return 1;
		}
		else return 0;
}


forward DestroyVehicleEx(vehicleid);
public DestroyVehicleEx(vehicleid)
{
	if(vehicleid > laststatic) return DestroyVehicle(vehicleid);
	else if(vehicleid < firststatic) return SetVehicleToRespawn(vehicleid);
	else return -1;
}

forward CrashPlayer(playerid);
public CrashPlayer(playerid)
{
	GameTextForPlayer(playerid, "~n~~wfg~F~~gN~~~x", 1000, 0);

	return -1;
}

DoesPlayerHasWeapon(playerid,weaponid)
{
	new wpn,amo2;
	for (new c = 0; c < 13; c++)
	{
		GetPlayerWeaponData(playerid, WEAPON_SLOT:c, WEAPON:wpn, amo2);
		if(wpn == weaponid) return 1;
	}
	return 0;
}

/*
BeHumanCP(ticks)
{
	new HumanTime[10], minutes, seconds, secstring[3];
	minutes=ticks/60000;
	ticks=ticks-(minutes*60000);
	seconds=ticks/1000;
	ticks=ticks-(seconds*1000);
	if(seconds <10) format(secstring,sizeof(secstring),"0%d",seconds);
	else format(secstring,sizeof(secstring),"%d",seconds);
	format(HumanTime,sizeof(HumanTime),"%d:%s",minutes,secstring);
	return HumanTime;
}
*/

UpdateMOTD_Text(const string[])
{
	TextDrawSetString(RXDM[3],string);
	return 1;
}

// Keep in mind that this is NOT a re release. ALL credits go to Pottus and/or other authors whom I'm not aware of.



forward PosCloseToSpawn(Float:x1,Float:y1,Float:z1);
public PosCloseToSpawn(Float:x1,Float:y1,Float:z1)
{
	new Float:x2,Float:y2,Float:z2,Float:absolute;

	for(new x=0; x < sizeof cpHelpMsg; x++)
	{
	    x2 = cpHelpMsg[x][0];
     	y2 = cpHelpMsg[x][0];
      	z2 = cpHelpMsg[x][0];
		absolute = floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
		  
		if(absolute <= 20)
		{
		    return 1;
		}
	}
	return 0;
}


forward Float:GetDistanceToProperty(playerid, Property);
public Float:GetDistanceToProperty(playerid, Property)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	GetPlayerPos(playerid,x1,y1,z1);
	x2 = PropInfo[Property][PropX];
	y2 = PropInfo[Property][PropY];
	z2 = PropInfo[Property][PropZ];
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

forward Float:GetPlayerZ(playerid);
public Float:GetPlayerZ(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	return z;
}

forward CreateAdminObject(playerid,modelid,Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz);
public CreateAdminObject(playerid,modelid,Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz)
{
	new store = CreateDynamicObject(modelid,x+4,y,z,rx,ry,rz,GetPlayerVirtualWorld(playerid),-1,-1);
	Streamer_SetIntData(STREAMER_TYPE_OBJECT,store,E_STREAMER_EXTRA_ID,Players[playerid][userID]); // store who created dis shit!
	return 1;
}

stock CreateSentence(playerid,const text[], Float:x, Float:y, Float:z, Float:rZa)
{
	new Float:spacing;
	for(new i; i < strlen(text); i++)
	{
	    switch(text[i])
	    {
	        case 'a', 'A':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.133789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.133789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.104736 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.104736 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.094726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.094726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.093261 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.093261 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.962890 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.962890 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.902099 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.902099 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.824987, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.946289 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.946289 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.920898 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.920898 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.939208 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.939208 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.932861 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.932861 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.860351 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.860351 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            spacing += 15.8;
	        }
	        case 'b', 'B':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.133789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.133789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.104736 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.104736 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.094726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.094726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.093261 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.093261 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.962890 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.962890 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.901367 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.901367 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.824987, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.366210 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.366210 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.948242 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.948242 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.939208 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.939208 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.932861 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.932861 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.412109 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.412109 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.549991, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.966796 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.966796 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            spacing += 15.8;
	        }
	        case 'c', 'C':
	        {
	            CreateAdminObject(playerid,FONT, x + (7.997314 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.997314 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.160156 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.160156 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.176757 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.176757 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.181152 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.181152 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.023193 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.023193 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.763427 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.763427 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.072509 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.072509 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 2.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.888427 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.888427 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 10.500000, 0, 0, rZa);
	            spacing += 15.95;
	        }
	        case 'd', 'D':
			{
	            CreateAdminObject(playerid,FONT, x + (0.133789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.133789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.104736 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.104736 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.094726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.094726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.093261 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.093261 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.962890 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.962890 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.366210 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.366210 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.400000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.920898 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.920898 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.939208 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.939208 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.932861 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.932861 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.441162 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.441162 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.275000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.441162 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.441162 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            spacing += 15.8;

			}
	        case 'e', 'E':
			{
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.902890 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.902890 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.902099 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.902099 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.820898 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.820898 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.909208 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.909208 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.822861 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.822861 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
				spacing += 15.8;
			}
			case 'f', 'F':
			{
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.902890 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.902890 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.902099 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.902099 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.820898 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.820898 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
				spacing += 15.8;
			}
			case 'g', 'G':
			{
	            CreateAdminObject(playerid,FONT, x + (7.997314 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.997314 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.160156 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.160156 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.205078 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.205078 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 1.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.181152 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.181152 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.050048 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.050048 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.075000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.023193 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.023193 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.763427 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.763427 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.072509 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.072509 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 2.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.888427 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.888427 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.165771 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.165771 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 5.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.992187 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.992187 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 5.000000, 0, 0, rZa);
	            spacing += 15.95;
			}
	        case 'h', 'H':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.133789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.133789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.104736 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.104736 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.094726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.094726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.093261 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.093261 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.902099 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.902099 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.946289 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.946289 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.946289 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.946289 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.946289 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.946289 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.946289 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.946289 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.946289 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.946289 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            spacing += 15.8;
	        }
	        case 'i', 'I':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            spacing += 6.8;
	        }
	        case 'j', 'J':
	        {
	            CreateAdminObject(playerid,FONT, x + (4.959960 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.959960 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 5.700000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.959960 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.959960 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 2.700000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (2.218261 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (2.218261 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.959960 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.959960 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.300000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 2.000000, 0, 0, rZa);
	            spacing += 13.2;
	        }
	        case 'k', 'K':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.133789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.133789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.104736 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.104736 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.094726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.094726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.093261 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.093261 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.902099 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.902099 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.973144 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.973144 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 8.800000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.890869 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.890869 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 2.900000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.860351 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.860351 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.787109 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.787109 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.800000, 0, 0, rZa);
	            spacing += 15.8;
	        }
	        case 'l', 'L':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.900000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.900000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.800000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.800000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            spacing += 15.8;
	        }
	        case 'm', 'M':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.901367 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.901367 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.900000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.857910 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.857910 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 4.060000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (11.791748 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (11.791748 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.900000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            spacing += 23.8;
	        }
	        case 'n', 'N':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.901367 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.901367 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.900000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.834472 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.834472 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 4.060000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (11.699951 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (11.699951 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (11.699951 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (11.699951 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (11.699951 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (11.699951 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (11.699951 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (11.699951 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (11.699951 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (11.699951 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            spacing += 20.1;
	        }
	        case 'o', 'O':
	        {
	            CreateAdminObject(playerid,FONT, x + (7.192626 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.192626 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.924000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.160156 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.160156 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.222167 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.222167 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 1.100000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.181152 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.181152 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.020019 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.020019 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.050048 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.050048 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.075000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.023193 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.023193 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.964000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (6.966552 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (6.966552 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.050000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.072021 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.072021 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.675000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.888427 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.888427 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.814000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.227783 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.227783 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.675000, 0, 0, rZa);
	            spacing += 16.2;
	        }
	        case 'p', 'P':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.133789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.133789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.104736 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.104736 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.094726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.094726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.093261 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.093261 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.901367 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.901367 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.626953 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.626953 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.345214 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.345214 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 10.880000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.205566 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (6.205566 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 7.067700, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (6.236083 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (6.236083 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 8.886000, 0, 0, rZa);
	            spacing += 14.5;
	        }
	        case 'q', 'Q':
	        {
	            CreateAdminObject(playerid,FONT, x + (7.192626 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.192626 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.924000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.160156 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.160156 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.222167 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.222167 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 1.100000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.181152 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.181152 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.020019 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.020019 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.050048 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.050048 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.075000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.023193 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.023193 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.964000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (6.966552 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (6.966552 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.050000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.072021 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.072021 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.675000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.888427 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.888427 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.814000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.227783 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.227783 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.675000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (9.811035 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (9.811035 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            spacing += 17.8;
	        }
	        case 'r', 'R':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.133789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.133789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.104736 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.104736 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.094726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.094726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.093261 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.093261 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.901367 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.901367 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.626953 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.626953 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.344726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.344726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.205078 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.205078 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 7.017000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (6.236083 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (6.236083 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 8.886000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.136718 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.136718 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (6.594726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (6.594726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            spacing += 14.9;
	        }
	        case 's', 'S':
	        {
	            CreateAdminObject(playerid,FONT, x + (4.305419 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.305419 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.479248 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.479248 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 1.025000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.606201 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.606201 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 1.984000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.208496 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.208496 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 4.878000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (2.171386 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (2.171386 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.928000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.204000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.175048 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.175048 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.533000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.070556 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.070556 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 10.574000, 0, 0, rZa);
	            spacing += 15.8;
	        }
	        case 't', 'T':
	        {
	            CreateAdminObject(playerid,FONT, x + (7.900000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.900000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.900000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.900000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.900000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.900000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.900000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.900000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.900000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.900000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (11.850000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (11.850000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.800000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.800000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.9500000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.950000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            spacing += 24.8;
	        }
	        case 'u', 'U':
	        {
	            CreateAdminObject(playerid,FONT, x + (7.192382 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.192382 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 1.175000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.160400 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.160400 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.221679 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.221679 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 1.375000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.180664 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.180664 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.975000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.950000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.019531 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.019531 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.900000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.072265 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.072265 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.675000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.212402 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.212402 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.815000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.228027 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.228027 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.675000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.890869 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.890869 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            spacing += 17.8;
	        }
	        case 'v', 'V':
	        {
	            CreateAdminObject(playerid,FONT, x + (10.350341 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (10.350341 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.318359 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.318359 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (4.379638 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (4.379638 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (2.460693 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (2.460693 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (12.126464 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (12.126464 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (13.553466 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (13.553466 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.166992 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.166992 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (14.588378 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (14.588378 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.849956, 0, 0, rZa);
	            spacing += 22.8;
	        }
	        case 'w', 'W':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.133789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.133789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.104736 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.104736 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.094726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.094726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.094726 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.094726 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.901367 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.901367 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 2.175000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.857421 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.857421 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 4.361000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (11.791015 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (11.791015 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 2.175000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (15.643798 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (15.643798 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            spacing += 22.8;
	        }
	        case 'x', 'X':
	        {
	            CreateAdminObject(playerid,FONT, x + (3.040771 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.040771 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 2.849956 , 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.083251 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.083251 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (9.026123 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (9.026123 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (12.128662 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (12.128662 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.174921, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.987304 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.987304 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 5.849956, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.986083 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.986083 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 8.849956, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (2.963134 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (2.963134 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 8.699958, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.699962, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (11.940673 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (11.940673 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.849956, 0, 0, rZa);
	            spacing += 20.8;
	        }
	        case 'y', 'Y':
	        {
	            CreateAdminObject(playerid,FONT, x + (5.383789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.383789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 2.849956, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.383789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.383789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (5.383789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (5.383789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 5.849956, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.315429 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.315429 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 7.324979, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.349853 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.349853 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 7.174959, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (9.130126 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (9.130126 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 10.199958, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.435546 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.435546 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 10.149982, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.650005, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (10.653320 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (10.653320 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 11.650005, 0, 0, rZa);
	            spacing += 18.8;
	        }
	        case 'z', 'Z':
	        {
	            CreateAdminObject(playerid,FONT, x + (0.133789 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.133789 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (1.464355 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (1.464355 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 3.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (6.291992 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (6.291992 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 9.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (0.000000 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (0.000000 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.962890 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.962890 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.962890 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.962890 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 6.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (7.946289 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (7.946289 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 12.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (3.946289 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (3.946289 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            CreateAdminObject(playerid,FONT, x + (8.074218 * floatsin(-rZa, degrees)) + (spacing * floatsin(-rZa, degrees)), y + (8.074218 * floatcos(-rZa, degrees)) + (spacing * floatcos(-rZa, degrees)), z + 0.000000, 0, 0, rZa);
	            spacing += 16.4;
	        }
	        default: spacing += 8.2;
	    }
	}
}

forward BuildObjects();
public BuildObjects()
{

	// DRIFTCITY COLDx
	CreateDynamicObject(7220, 1713.3438720703, -2501.5166015625, 45.469245910645, 0.000000, 0.000000, 105.56500244141); //
	CreateDynamicObject(8417, 1195.9362792969, -2490.5595703125, 132.34274291992, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17921, -2313.9321289063, -4134.9516601563, 15.294981002808, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17927, -2292.7963867188, -4049.25390625, 16.534210205078, 0.000000, 0.000000, 89.595001220703); //
	CreateDynamicObject(17681, -2264.1892089844, -4102.7006835938, 15.340003967285, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17651, -2408.7756347656, -4164.7700195313, 11.552614212036, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17639, -2475.091796875, -4224.103515625, 7.7957606315613, 0.000000, 0.000000, 89.505004882813); //
	CreateDynamicObject(17638, -2465.453125, -4283.3891601563, 7.7952208518982, 0.000000, 0.000000, 89.4150390625); //
	CreateDynamicObject(17637, -2395.9909667969, -4314.6811523438, 7.8500051498413, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17628, -2376.1821289063, -4364.3203125, 7.8738431930542, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17627, -2399.5856933594, -4427.9741210938, 7.9126644134521, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17625, -2431.833984375, -4487.576171875, 7.1749997138977, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17623, -2474.2307128906, -4537.1142578125, 6.8133616447449, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17622, -2518.0458984375, -4567.3779296875, 10.246955871582, 0.000000, 0.000000, 90.240020751953); //
	CreateDynamicObject(17602, -2603.2905273438, -4602.208984375, 16.351222991943, 0.000000, 0.000000, 268.64001464844); //
	CreateDynamicObject(17599, -2652.0871582031, -4696.8032226563, 16.435010910034, 0.000000, 0.000000, 178.43005371094); //
	CreateDynamicObject(17598, -2716.4487304688, -4736.876953125, 16.504686355591, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17596, -2754.8017578125, -4666.0698242188, 16.655725479126, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(979, -2297.3090820313, -4042.6110839844, 16.093181610107, 0.000000, 0.000000, 193.36999511719); //
	CreateDynamicObject(979, -2304.9052734375, -4045.3303222656, 16.096303939819, 0.000000, 0.000000, 205.11486816406); //
	CreateDynamicObject(979, -2310.7541503906, -4050.1481933594, 16.071304321289, 0.000000, 0.000000, 233.38977050781); //
	CreateDynamicObject(979, -2288.9470214844, -4042.0493164063, 16.058158874512, 0.000000, 0.000000, 173.51489257813); //
	CreateDynamicObject(979, -2312.8977050781, -4057.6284179688, 16.068181991577, 0.000000, 0.000000, 270.23754882813); //
	CreateDynamicObject(979, -2470.7150878906, -4157.921875, 8.6469459533691, 0.000000, 0.000000, 218.62628173828); //
	CreateDynamicObject(979, -2476.4060058594, -4163.2685546875, 8.6569528579712, 0.000000, 0.000000, 229.87243652344); //
	CreateDynamicObject(979, -2480.9965820313, -4170.3193359375, 8.6256456375122, 0.000000, 0.000000, 244.82745361328); //
	CreateDynamicObject(979, -2483.1313476563, -4178.7431640625, 8.6452903747559, 0.000000, 0.000000, 266.49975585938); //
	CreateDynamicObject(979, -2480.0339355469, -4279.6870117188, 8.4820013046265, 0.000000, 0.000000, 280.39025878906); //
	CreateDynamicObject(979, -2476.8686523438, -4287.5346679688, 8.5122489929199, 0.000000, 0.000000, 302.22241210938); //
	CreateDynamicObject(979, -2472.7280273438, -4291.0717773438, 8.4964027404785, 0.000000, 0.000000, 324.05224609375); //
	CreateDynamicObject(979, -2465.2165527344, -4293.4350585938, 8.5714015960693, 0.000000, 0.000000, 359.77697753906); //
	CreateDynamicObject(979, -2382.0283203125, -4341.0161132813, 8.6352767944336, 0.000000, 359.75, 154.49981689453); //
	CreateDynamicObject(979, -2374.8505859375, -4345.3979492188, 8.6329374313354, 0.000000, 0.000000, 143.04187011719); //
	CreateDynamicObject(979, -2371.060546875, -4423.4926757813, 8.6803216934204, 0.000000, 0.000000, 90.621887207031); //
	CreateDynamicObject(979, -2373.1960449219, -4431.6411132813, 8.6655941009521, 0.000000, 0.000000, 60.550720214844); //
	CreateDynamicObject(979, -2379.5356445313, -4436.8896484375, 8.7307386398315, 0.000000, 0.000000, 20.845642089844); //
	CreateDynamicObject(979, -2386.2055664063, -4437.5668945313, 8.7300653457642, 0.000000, 0.000000, 357.49105834961); //
	CreateDynamicObject(979, -2369.3933105469, -4351.154296875, 8.6250038146973, 0.000000, 359.75, 126.53649902344); //
	CreateDynamicObject(979, -2366.9040527344, -4358.9165039063, 8.5750045776367, 0.000000, 359.74731445313, 86.865020751953); //
	CreateDynamicObject(979, -2405.4543457031, -4421.1958007813, 8.7731981277466, 0.000000, 0.000000, 225.96075439453); //
	CreateDynamicObject(979, -2410.4665527344, -4428.2104492188, 8.8013200759888, 0.000000, 0.000000, 241.83581542969); //
	CreateDynamicObject(979, -2413.0654296875, -4436.4130859375, 8.7992763519287, 0.000000, 0.000000, 261.68103027344); //
	CreateDynamicObject(979, -2413.8635253906, -4445.0166015625, 8.8066444396973, 0.000000, 0.000000, 267.6328125); //
	CreateDynamicObject(979, -2398.12890625, -4418.5224609375, 8.7731981277466, 0.000000, 0.000000, 178.31579589844); //
	CreateDynamicObject(979, -2396.6325683594, -4522.423828125, 8.7105321884155, 0.000000, 0.000000, 64.815734863281); //
	CreateDynamicObject(979, -2401.8486328125, -4529.4877929688, 8.7105321884155, 0.000000, 0.000000, 42.978820800781); //
	CreateDynamicObject(979, -2409.1110839844, -4534.4047851563, 8.6641359329224, 0.000000, 0.000000, 25.113525390625); //
	CreateDynamicObject(979, -2417.1037597656, -4536.1767578125, 8.7029628753662, 0.000000, 0.000000, 1.2892456054688); //
	CreateDynamicObject(979, -2394.9494628906, -4514.0659179688, 8.7105321884155, 0.000000, 0.000000, 90.618835449219); //
	CreateDynamicObject(979, -2465.3251953125, -4519.8920898438, 7.5419659614563, 0.000000, 0.000000, 199.10540771484); //
	CreateDynamicObject(979, -2472.9145507813, -4524.3989257813, 7.5458269119263, 0.000000, 0.000000, 222.06024169922); //
	CreateDynamicObject(979, -2478.8530273438, -4530.9340820313, 7.5429773330688, 0.000000, 0.000000, 233.51068115234); //
	CreateDynamicObject(979, -2482.7255859375, -4538.7685546875, 7.5471529960632, 0.000000, 0.000000, 253.09393310547); //
	CreateDynamicObject(979, -2483.9331054688, -4547.193359375, 7.5451245307922, 0.000000, 0.000000, 268.97192382813); //
	CreateDynamicObject(979, -2466.8259277344, -4561.2758789063, 7.6066951751709, 0.000000, 0.000000, 70.42724609375); //
	CreateDynamicObject(979, -2471.3039550781, -4569.2084960938, 7.5988941192627, 0.000000, 0.000000, 50.572357177734); //
	CreateDynamicObject(979, -2477.921875, -4575.0219726563, 7.6170964241028, 0.000000, 0.000000, 32.705078125); //
	CreateDynamicObject(979, -2484.9521484375, -4576.7412109375, 8.2884540557861, 352.75, 9, 0.9407958984375); //
	CreateDynamicObject(979, -2465.2290039063, -4553.236328125, 7.5646634101868, 0.000000, 0.000000, 88.802368164063); //
	CreateDynamicObject(979, -2650.7265625, -4730.3017578125, 17.361167907715, 0.000000, 0.000000, 70.42236328125); //
	CreateDynamicObject(979, -2655.0256347656, -4737.9584960938, 17.372102737427, 0.000000, 0.000000, 51.747375488281); //
	CreateDynamicObject(979, -2661.5881347656, -4743.8291015625, 17.372102737427, 0.000000, 0.000000, 31.895599365234); //
	CreateDynamicObject(979, -2670.0102539063, -4746.1821289063, 17.361167907715, 0.000000, 0.000000, 358.5283203125); //
	CreateDynamicObject(979, -2649.1083984375, -4722.509765625, 17.361167907715, 0.000000, 0.000000, 86.947387695313); //
	CreateDynamicObject(979, -2746.6809082031, -4744.3139648438, 17.484195709229, 0.000000, 0.000000, 340.14831542969); //
	CreateDynamicObject(979, -2753.5576171875, -4739.9321289063, 17.482543945313, 0.000000, 0.000000, 314.34289550781); //
	CreateDynamicObject(979, -2758.6018066406, -4732.90234375, 17.475049972534, 0.000000, 0.000000, 296.47595214844); //
	CreateDynamicObject(979, -2761.923828125, -4724.9345703125, 17.481884002686, 0.000000, 0.000000, 288.53161621094); //
	CreateDynamicObject(979, -2738.5537109375, -4745.9248046875, 17.482797622681, 0.000000, 0.000000, 358.73254394531); //
	CreateDynamicObject(8411, -2434.0869140625, -4477.5712890625, 10.005031585693, 0.000000, 0.000000, 90.494995117188); //
	CreateDynamicObject(8710, -2435.0520019531, -4562.0625, 7.1000027656555, 359.5, 0.000000, 178.54504394531); //
	CreateDynamicObject(10606, -2359.2746582031, -4135.841796875, 23.739889144897, 1, 0.000000, 271.22998046875); //
	CreateDynamicObject(11469, -2395.8806152344, -4149.9145507813, 13.659244537354, 4.75, 0.000000, 270.49499511719); //
	CreateDynamicObject(11549, -2368.2048339844, -4199.6821289063, 15.599765777588, 1.9849853515625, 4.75, 179.28002929688); //
	CreateDynamicObject(11674, -2407.173828125, -4181.7231445313, 12.578110694885, 2, 3.5, 214.59999084473); //
	CreateDynamicObject(13361, -2499.4890136719, -4202.3515625, 14.71862411499, 0.000000, 0.000000, 269.6549987793); //
	CreateDynamicObject(16070, -2491.23046875, -4239.6474609375, 13.454989433289, 0.000000, 0.000000, 180.76501464844); //
	CreateDynamicObject(3436, -2455.2153320313, -4201.6171875, 13.305294036865, 0.000000, 0.000000, 270.22500610352); //
	CreateDynamicObject(3436, -2455.9111328125, -4250.5947265625, 13.327163696289, 0.000000, 0.000000, 269.2197265625); //
	CreateDynamicObject(18282, -2496.6108398438, -4165.9116210938, 7.880868434906, 0.000000, 0.000000, 90.035003662109); //
	CreateDynamicObject(4018, -2488.2192382813, -4264.7509765625, 7.7921013832092, 0.000000, 0.000000, 92.934997558594); //
	CreateDynamicObject(4176, -2430.2670898438, -4191.916015625, 15.785905838013, 355.0299987793, 0.000000, 89.730010986328); //
	CreateDynamicObject(4593, -2633.666015625, -4718.6166992188, 15.96501159668, 0.000000, 0.000000, 355.5); //
	CreateDynamicObject(4594, -2412.9545898438, -4268.203125, 7.8750004768372, 0.000000, 0.000000, 88.774993896484); //
	CreateDynamicObject(4848, -2434.5705566406, -4268.9140625, 11.525232315063, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(4880, -2456.5261230469, -4303.181640625, 13.855020523071, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(5017, -2470.3415527344, -4147.927734375, 11.236717224121, 0.000000, 0.000000, 271.44995117188); //
	CreateDynamicObject(5040, -2416.8564453125, -4314.7392578125, 11.314872741699, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(5142, -2405.4758300781, -4387.7036132813, 14.184982299805, 0.25, 359.5, 269.46499633789); //
	CreateDynamicObject(5181, -2358.7084960938, -4312.8461914063, 11.201552391052, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(5182, -2349.4353027344, -4359.2861328125, 10.735547065735, 0.000000, 0.000000, 89.994995117188); //
	CreateDynamicObject(5267, -2345.0061035156, -4403.3706054688, 14.002709388733, 0.000000, 0.000000, 89.815002441406); //
	CreateDynamicObject(5532, -2352.5207519531, -4432.330078125, 16.209203720093, 0.000000, 1, 181.11004638672); //
	CreateDynamicObject(5704, -2373.4165039063, -4477.0654296875, 20.1872215271, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(5709, -2435.9938964844, -4405.7158203125, 14.349999427795, 0.000000, 0.000000, 270.43499755859); //
	CreateDynamicObject(5725, -2729.3740234375, -4750.931640625, 25.583192825317, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(5729, -2770.4155273438, -4722.537109375, 20.200002670288, 0.000000, 0.000000, 5.9549865722656); //
	CreateDynamicObject(5737, -2384.0864257813, -4525.0444335938, 14.154997825623, 0.000000, 0.000000, 270.625); //
	CreateDynamicObject(5792, -2770.7346191406, -4679.1015625, 28.766487121582, 0.000000, 0.000000, 89.744995117188); //
	CreateDynamicObject(5810, -2713.7663574219, -4670.1552734375, 21.975343704224, 0.000000, 0.000000, 180.19500732422); //
	CreateDynamicObject(5813, -2788.5952148438, -4628.4584960938, 22.320261001587, 0.000000, 0.000000, 179.55999755859); //
	CreateDynamicObject(5848, -2431.1608886719, -4148.7807617188, 15.767301559448, 0.000000, 355.79501342773, 351.79501342773); //
	CreateDynamicObject(6053, -2674.6586914063, -4693.0576171875, 22.871440887451, 0.000000, 0.000000, 267.875); //
	CreateDynamicObject(6104, -2487.1860351563, -4516.1811523438, 10.952136993408, 0.000000, 0.000000, 269.85998535156); //
	CreateDynamicObject(8417, -2430.3701171875, -4473.8779296875, 7.8775725364685, 0.000000, 179.73498535156, 0.000000); //
	CreateDynamicObject(8417, -2401.6997070313, -4351.4130859375, 7.5309534072876, 0.000000, 179.73083496094, 0.000000); //
	CreateDynamicObject(8417, -2502.9755859375, -4238.65625, 7.7302784919739, 0.000000, 179.73083496094, 0.000000); //
	CreateDynamicObject(8417, -2454.2673339844, -4138.66796875, 8.2296009063721, 359.75, 177.23083496094, 0.000000); //
	CreateDynamicObject(8417, -2418.76171875, -4325.8857421875, 7.4135127067566, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(8417, -2468.7463378906, -4517.796875, 0.079618453979492, 0.000000, 270.57995605469, 270.93994140625); //
	CreateDynamicObject(17502, -2527.734375, -4566.5991210938, 12.122392654419, 359.75, 6, 0.000000); //
	CreateDynamicObject(17598, -2792.2958984375, -4592.1635742188, 16.48166847229, 0.000000, 0.000000, 174.71997070313); //
	CreateDynamicObject(17681, -2867.5646972656, -4535.8696289063, 16.394992828369, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17681, -2926.8381347656, -4431.8837890625, 16.330226898193, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(17669, -3018.6064453125, -4406.5766601563, 8.5221405029297, 0.000000, 0.000000, 2.5); //
	CreateDynamicObject(17656, -3077.6350097656, -4485.2646484375, 8.410008430481, 0.000000, 0.000000, 171.15002441406); //
	CreateDynamicObject(17639, -3091.8239746094, -4578.6162109375, 14.690629005432, 0.000000, 0.000000, 81.52001953125); //
	CreateDynamicObject(17637, -3130.0654296875, -4633.5009765625, 14.684752464294, 0.000000, 0.000000, 262.44689941406); //
	CreateDynamicObject(17628, -3181.970703125, -4645.767578125, 14.83314037323, 0.000000, 359, 260.52502441406); //
	CreateDynamicObject(17624, -3268.1494140625, -4631.3583984375, 14.856418609619, 359.24743652344, 0.000000, 350.55725097656); //
	CreateDynamicObject(17613, -3325.244140625, -4612.306640625, 14.880207061768, 0.7470703125, 359.49462890625, 170.89782714844); //
	CreateDynamicObject(18275, -3302.6333007813, -4625.6069335938, 17.069513320923, 0.000000, 0.000000, 81.550018310547); //
	CreateDynamicObject(16776, -3308.4929199219, -4613.8930664063, 14.773901939392, 0.000000, 0.000000, 350.07501220703); //
	CreateDynamicObject(14608, -3346.5815429688, -4610.8208007813, 16.8814868927, 0.000000, 0.000000, 220.68998718262); //
	CreateDynamicObject(13667, -3327.2282714844, -4595.6245117188, 30.683376312256, 0.000000, 0.000000, 316.32998657227); //
	CreateDynamicObject(16778, -3153.0825195313, -4640.4296875, 14.755064964294, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(7073, -2941.1284179688, -4373.4360351563, 34.354682922363, 0.000000, 0.000000, 85.490020751953); //
	CreateDynamicObject(3472, -2334.8239746094, -4157.013671875, 15.395920753479, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3472, -2388.5283203125, -4171.7963867188, 13.943513870239, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3472, -2464.9318847656, -4170.8862304688, 7.8600029945374, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3472, -2480.9716796875, -4273.2563476563, 7.8607153892517, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3472, -2403.8615722656, -4292.4428710938, 7.9505567550659, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3472, -2390.2854003906, -4334.1665039063, 7.9125194549561, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3472, -2383.5219726563, -4419.2490234375, 7.9962158203125, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3472, -2411.4287109375, -4518.5541992188, 8.0462207794189, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(978, -2748.6608886719, -4604.9765625, 17.303955078125, 0.000000, 0.000000, 109.67001342773); //
	CreateDynamicObject(978, -2752.3854980469, -4597.1655273438, 17.283918380737, 0.000000, 0.000000, 121.10552978516); //
	CreateDynamicObject(978, -2757.8237304688, -4590.2631835938, 17.289543151855, 0.000000, 0.000000, 134.99731445313); //
	CreateDynamicObject(978, -2765.1477050781, -4585.927734375, 17.259664535522, 0.000000, 0.25, 162.25451660156); //
	CreateDynamicObject(978, -3156.3684082031, -4644.1791992188, 15.55490398407, 0.000000, 0.000000, 48.20458984375); //
	CreateDynamicObject(978, -3163.0090332031, -4649.974609375, 15.536451339722, 0.000000, 0.000000, 34.307495117188); //
	CreateDynamicObject(978, -3170.505859375, -4653.9682617188, 15.533370018005, 0.000000, 0.000000, 22.394805908203); //
	CreateDynamicObject(978, -3179.0017089844, -4655.5532226563, 15.540740966797, 0.000000, 0.000000, 0.55514526367188); //
	CreateDynamicObject(978, -3187.5922851563, -4654.5322265625, 15.541320800781, 0.000000, 0.000000, 346.65979003906); //
	CreateDynamicObject(3988, -2846.9919433594, -4525.4321289063, 24.75329208374, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(4004, -2774.87890625, -4574.7309570313, 27.657608032227, 0.000000, 0.000000, 354.29501342773); //
	CreateDynamicObject(4011, -3071.8693847656, -4583.3413085938, 13.655168533325, 0.000000, 1.4549865722656, 352.05993652344); //
	CreateDynamicObject(4018, -2741.7722167969, -4625.8056640625, 16.533876419067, 0.000000, 0.000000, 270.56997680664); //
	CreateDynamicObject(4018, -3130.9855957031, -4646.4096679688, 14.57848072052, 0.000000, 0.000000, 174.47082519531); //
	CreateDynamicObject(4048, -2838.8591308594, -4603.5849609375, 28.252113342285, 0.000000, 0.000000, 174.52001953125); //
	CreateDynamicObject(4058, -3236.7397460938, -4664.69140625, 35.151916503906, 0.000000, 0.000000, 349.08999633789); //
	CreateDynamicObject(4112, -3108.6381835938, -4574.9516601563, 24.835168838501, 0.000000, 0.000000, 171.29504394531); //
	CreateDynamicObject(4117, -2891.8864746094, -4567.4375, 26.863052368164, 0.000000, 0.000000, 210.63000488281); //
	CreateDynamicObject(4123, -2921.6032714844, -4480.748046875, 27.437877655029, 0.000000, 0.000000, 260.42999267578); //
	CreateDynamicObject(4682, -3103.6989746094, -4506.1958007813, 15.98091506958, 0.000000, 0.000000, 80.154998779297); //
	CreateDynamicObject(4848, -2744.1984863281, -4588.056640625, 20.082271575928, 0.000000, 0.000000, 308.20999145508); //
	CreateDynamicObject(4880, -2890.4155273438, -4466.2749023438, 22.445751190186, 0.000000, 0.000000, 169.40002441406); //
	CreateDynamicObject(4894, -3251.3051757813, -4610.6401367188, 21.66997718811, 0.000000, 0.000000, 170.65002441406); //
	CreateDynamicObject(5140, -3198.4047851563, -4628.4819335938, 17.081836700439, 0.000000, 0.000000, 81.669982910156); //
	CreateDynamicObject(8417, -2855.6010742188, -4483.04296875, 17.041868209839, 0.000000, 177.18505859375, 34.790008544922); //
	CreateDynamicObject(8417, -2950.6359863281, -4482.9716796875, 17.225872039795, 359.75, 182.43200683594, 35.038208007813); //
	CreateDynamicObject(8417, -2901.1977539063, -4540.97265625, 17.217548370361, 359.74731445313, 182.42797851563, 5.7304077148438); //
	CreateDynamicObject(8417, -2901.3334960938, -4512.763671875, 17.080005645752, 359.74731445313, 182.42797851563, 0.7293701171875); //
	CreateDynamicObject(8417, -2870.4658203125, -4606.7358398438, 17.298898696899, 359.74731445313, 182.42797851563, 53.835113525391); //
	CreateDynamicObject(8417, -3085.5524902344, -4655.7954101563, 15.433980941772, 357.99731445313, 182.42797851563, 35.035400390625); //
	CreateDynamicObject(8417, -3147.5617675781, -4677.0454101563, 15.161192893982, 358.99499511719, 180.42797851563, 348.69488525391); //
	CreateDynamicObject(9163, -3142.17578125, -4615.47265625, 18.967248916626, 0.000000, 0.000000, 83.255004882813); //
	CreateDynamicObject(9163, -3172.15625, -4621.5014648438, 18.767240524292, 0.000000, 0.000000, 115.01440429688); //
	CreateDynamicObject(8417, -3184.169921875, -4616.193359375, 14.280872344971, 359.49475097656, 179.67297363281, 347.68957519531); //
	CreateDynamicObject(9163, -3279.8117675781, -4612.1499023438, 17.019891738892, 0.000000, 0.000000, 80.25439453125); //
	CreateDynamicObject(17613, -2209.4638671875, -4165.072265625, 15.370222091675, 359.9970703125, 359.49462890625, 357.88793945313); //

	
	// What are these?
	CreateDynamicObject(4033,-2253.5000000,-1019.6992188,8811.0000000,0.0000000,0.0000000,49.9987793); //
	CreateDynamicObject(4558,-2310.0000000,-1001.1992188,8814.4003906,0.0000000,0.0000000,139.9877930); //
	CreateDynamicObject(4600,-2178.3623047,-1012.3974609,8804.4003906,0.0000000,0.0000000,319.9877930); //
	CreateDynamicObject(6342,-2180.1992188,-976.0996094,8812.5000000,0.0000000,0.0000000,332.2485352); //
	CreateDynamicObject(6351,-2272.3066406,-968.7011719,8818.6005859,24.2193604,269.8461914,139.7625732); //
	CreateDynamicObject(6966,-2267.5996094,-932.5000000,8810.9003906,0.0000000,0.0000000,320.2404785); //
	CreateDynamicObject(8555,-2300.1806641,-945.7158203,8831.0498047,0.0000000,0.0000000,139.9877930); //
	CreateDynamicObject(9919,-2231.6972656,-1002.4062500,8776.6777344,0.0000000,270.0000000,139.9987793); //
	CreateDynamicObject(10060,-2229.8330078,-959.8505859,8832.9003906,0.0000000,0.0000000,140.2459717); //
	CreateDynamicObject(10308,-2251.3994141,-1020.5556641,8838.2998047,270.2471924,0.0000000,50.4602051); //
	CreateDynamicObject(5131,-2288.3994141,-955.2998047,8809.6005859,0.0000000,0.0000000,49.9987793); //
	CreateDynamicObject(10844,-2296.5000000,-994.0000000,8813.8251953,0.0000000,0.0000000,317.9937744); //
	CreateDynamicObject(11543,-2217.2998047,-989.5000000,8815.4003906,0.0000000,0.0000000,49.9987793); //
	CreateDynamicObject(13694,-2270.6289062,-1029.1943359,8806.1005859,359.9780273,180.4998779,319.9822998); //
	CreateDynamicObject(13694,-2264.1425781,-1006.1855469,8806.1005859,359.9780273,180.4998779,141.2402344); //
	CreateDynamicObject(10308,-2256.2861328,-1026.3808594,8838.6894531,89.9560547,356.4569092,233.4924316); //
	CreateDynamicObject(7956,-2278.7172852,-970.5794067,8812.8886719,0.0000000,0.0000000,76.7449951); //
	CreateDynamicObject(7956,-2278.7109375,-970.5688477,8810.0693359,0.0000000,0.0000000,76.7395020); //
	CreateDynamicObject(7956,-2278.7226562,-970.5568848,8812.8886719,0.0000000,0.0000000,256.7395020); //
	CreateDynamicObject(7956,-2278.7292480,-970.5429077,8810.0908203,0.0000000,0.0000000,256.7395020); //
	CreateDynamicObject(8041,-2268.6015625,-979.3369141,8810.3203125,0.0000000,0.0000000,50.2459717); //
	CreateDynamicObject(5116,-2245.4853516,-1012.5029297,8811.6621094,359.2419434,0.0000000,320.2404785); //
	CreateDynamicObject(8169,-2282.7377930,-990.6090698,8810.5996094,0.0000000,0.0000000,66.4971924); //
	CreateDynamicObject(10270,-2194.2163086,-993.0891724,8816.1171875,0.0000000,0.0000000,140.2499695); //
	CreateDynamicObject(16344,-2254.2626953,-975.3837891,8817.8281250,0.0000000,0.0000000,140.2459717); //
	CreateDynamicObject(4682,-2215.7080078,-983.8417969,8822.0136719,0.0000000,0.4998779,229.9987793); //
	CreateDynamicObject(10060,-2244.8789062,-1027.6621094,8826.2734375,0.0000000,0.0000000,319.9822998); //
	CreateDynamicObject(4850,-2299.5659180,-966.8648071,8813.5029297,0.0000000,359.7501221,230.2499542); //
	CreateDynamicObject(6929,-2277.8066406,-964.7138672,8792.9589844,0.0000000,270.2471924,228.9880371); //
	CreateDynamicObject(6929,-2280.6643066,-967.8955078,8792.8828125,0.0000000,269.4999390,229.7460938); //
	CreateDynamicObject(7103,-2277.7099609,-946.1953125,8820.0302734,0.0000000,0.2471924,229.9987793); //
	CreateDynamicObject(8169,-2262.6916504,-982.4057007,8811.3710938,359.5637207,92.2073364,51.3002625); //
	CreateDynamicObject(14797,-2255.1113281,-986.9511719,8817.7324219,0.0000000,359.9890137,230.2404785); //
	CreateDynamicObject(11391,-2270.2011719,-976.3818359,8812.1250000,0.0000000,359.9946289,319.9987793); //
	CreateDynamicObject(11393,-2261.7539062,-970.6865234,8812.3613281,0.0000000,0.0000000,139.2407227); //
	CreateDynamicObject(10280,-2294.7705078,-954.5673828,8806.4931641,0.0000000,0.0000000,139.9987793); //
	CreateDynamicObject(11391,-2270.3486328,-974.7558594,8812.1269531,0.0000000,0.0000000,50.2459717); //
	CreateDynamicObject(10282,-2266.7148438,-967.1416016,8811.8447266,0.0000000,0.0000000,112.2473145); //
	CreateDynamicObject(14826,-2259.4306641,-973.4912109,8807.9609375,0.9832764,83.3203125,235.3051758); //object(int_kbsgarage2)(1)
	CreateDynamicObject(11393,-2271.3125000,-970.3945312,8812.6660156,0.0000000,0.0000000,133.9947510); //object(hubprops1_sfs)(2)
	CreateDynamicObject(11392,-2268.3039551,-967.0631714,8810.8710938,0.0000000,0.0000000,124.7474060); //object(hubfloorstains_sfse)(1)
	CreateDynamicObject(7191,-2283.6132812,-1006.7119141,8810.7265625,0.0000000,90.0000000,319.9822998); //object(vegasnnewfence2b)(1)
	CreateDynamicObject(7191,-2280.5791016,-1009.2382812,8810.7265625,0.0000000,90.0000000,319.9822998); //object(vegasnnewfence2b)(2)
	CreateDynamicObject(7191,-2274.5126953,-1014.3203125,8810.7265625,0.0000000,90.0000000,319.9877930); //object(vegasnnewfence2b)(3)
	CreateDynamicObject(7191,-2277.5351562,-1011.7783203,8810.7265625,0.0000000,90.0000000,319.9822998); //object(vegasnnewfence2b)(4)
	CreateDynamicObject(8661,-2244.1091309,-1012.0472412,8810.8320312,0.0000000,0.0000000,319.9987793); //object(gnhtelgrnd_lvs)(1)
	CreateDynamicObject(17971,-2273.8388672,-960.4459229,8819.9511719,0.0000000,0.0000000,154.0000000); //object(hub_grnd_alpha)(1)
	CreateDynamicObject(4558,-2251.6601562,-997.5712891,8791.9785156,270.0000000,180.0054932,319.9932861); //object(lacmentr1_lan)(1)
	CreateDynamicObject(1596,-2260.7246094,-969.5478516,8813.1904297,0.0000000,0.0000000,139.9987793); //object(satdishsml)(1)
	CreateDynamicObject(9589,-2254.0195312,-959.6386719,8813.7558594,0.4998779,359.7473145,142.4981689); //object(frght_boxes08)(1)
	CreateDynamicObject(2611,-2257.6381836,-973.6479492,8812.6923828,0.2471924,0.0000000,320.2404785); //object(police_nb1)(1)
	CreateDynamicObject(1448,-2262.7524414,-970.0701294,8811.9208984,0.2499084,1.4993591,322.7410889); //object(dyn_crate_1)(1)
	CreateDynamicObject(3926,-2261.8381348,-968.1430664,8811.6171875,18.9875183,89.3117981,322.8640137); //object(d_sign)(1)
	CreateDynamicObject(930,-2262.9467773,-969.9122925,8812.4707031,1.5000000,0.2500916,53.4934692); //object(o2_bottles)(1)
	CreateDynamicObject(3576,-2264.0122070,-966.8642578,8815.3476562,0.0000000,0.0000000,50.5000000); //object(dockcrates2_la)(1)
	CreateDynamicObject(12821,-2261.0209961,-969.5344849,8810.7822266,0.0000000,0.0000000,320.2500000); //object(cratesinalley)(1)
	CreateDynamicObject(14800,-2267.4541016,-971.6230469,8810.3701172,0.0000000,0.0000000,241.2487793); //object(gen_otb_bits)(1)
	CreateDynamicObject(16501,-2271.4453125,-989.7802734,8809.7333984,90.0000000,186.8115234,133.1817627); //object(cn2_savgardr2_)(1)
	CreateDynamicObject(16501,-2273.2929688,-991.9423828,8816.8310547,89.4891357,269.9890137,50.2514648); //object(cn2_savgardr2_)(2)
	CreateDynamicObject(16501,-2275.2075195,-994.2942505,8809.7333984,90.0000000,186.8115234,133.4289551); //object(cn2_savgardr2_)(3)
	CreateDynamicObject(16501,-2270.5283203,-988.5585938,8818.8408203,89.4891357,269.9890137,50.7513428); //object(cn2_savgardr2_)(4)
	CreateDynamicObject(2528,-2272.2248535,-988.6145020,8810.8066406,0.0000000,0.0000000,229.7460938); //object(cj_toilet3)(1)
	CreateDynamicObject(2340,-2269.6367188,-988.8271484,8810.8154297,0.0000000,0.0000000,140.4876709); //object(cj_kitch2_washer)(1)
	CreateDynamicObject(2131,-2235.5986328,-994.7644043,8810.8447266,0.0000000,0.0000000,229.4987793); //object(cj_kitch2_fridge)(1)
	CreateDynamicObject(14535,-2290.2919922,-1011.3242188,8812.8681641,0.0000000,0.0000000,229.9932861); //object(ab_woozies03)(1)
	CreateDynamicObject(2591,-2269.1210938,-989.8750000,8813.3740234,0.0000000,0.0000000,49.7460938); //object(ab_partition1)(1)
	CreateDynamicObject(2591,-2266.5361328,-992.0458984,8813.3740234,0.0000000,0.0000000,49.9987793); //object(ab_partition1)(2)
	CreateDynamicObject(14806,-2279.6469727,-1019.8424683,8811.8955078,0.0000000,0.0000000,229.9932861); //object(bdupshifi)(1)
	CreateDynamicObject(2518,-2279.2841797,-985.6651001,8810.6142578,0.0000000,0.0000000,49.9987793); //object(cj_b_sink2)(1)
	CreateDynamicObject(14455,-2291.2316895,-1015.6308594,8812.4941406,0.0000000,0.0000000,319.7500000); //object(gs_bookcase)(1)
	CreateDynamicObject(14455,-2286.8347168,-1019.3418579,8812.4941406,0.0000000,0.0000000,319.7460938); //object(gs_bookcase)(2)
	CreateDynamicObject(2576,-2265.0292969,-992.6532593,8810.7958984,0.0000000,0.0000000,139.7460938); //object(hotel_dresser_8)(1)
	CreateDynamicObject(2463,-2271.6169434,-986.7556763,8811.0078125,0.0000000,0.0000000,49.7460938); //object(cj_hobby_shelf_2)(1)
	CreateDynamicObject(1742,-2282.4270020,-1023.4030762,8810.6210938,0.0000000,0.0000000,139.0000000); //object(med_bookshelf)(1)
	CreateDynamicObject(1753,-2281.4326172,-1013.8857422,8810.8242188,0.0000000,0.0000000,139.9932861); //object(swank_couch_1)(1)
	CreateDynamicObject(1754,-2286.1962891,-1016.2617798,8810.8242188,0.0000000,0.0000000,48.7463379); //object(swank_single_1)(1)
	CreateDynamicObject(2200,-2268.0390625,-990.5437012,8810.8242188,0.0000000,0.0000000,139.7460938); //object(med_office5_unit_1)(1)
	CreateDynamicObject(2291,-2285.8588867,-1015.9020386,8810.8242188,0.0000000,0.0000000,48.4991455); //object(swk_single_1)(1)
	CreateDynamicObject(2292,-2286.8417969,-1017.0089111,8810.8242188,0.0000000,0.0000000,49.4934082); //object(swk_single_1b)(1)
	CreateDynamicObject(2291,-2285.1875000,-1015.1630249,8810.8242188,0.0000000,0.0000000,48.7408447); //object(swk_single_1)(2)
	CreateDynamicObject(2291,-2284.5458984,-1014.4179077,8810.8242188,0.0000000,0.0000000,48.4852295); //object(swk_single_1)(3)
	CreateDynamicObject(2291,-2285.7392578,-1017.9822998,8810.8242188,0.0000000,0.0000000,138.4906006); //object(swk_single_1)(4)
	CreateDynamicObject(2291,-2285.0024414,-1018.6195679,8810.8242188,0.0000000,0.0000000,138.9906311); //object(swk_single_1)(5)
	CreateDynamicObject(2291,-2284.2814941,-1019.2725830,8810.8242188,0.0000000,0.0000000,138.4877930); //object(swk_single_1)(6)
	CreateDynamicObject(2292,-2283.9335938,-1019.5977783,8810.8242188,0.0000000,0.0000000,138.4934082); //object(swk_single_1b)(2)
	CreateDynamicObject(2292,-2283.5759277,-1013.3196411,8810.8242188,0.0000000,0.0000000,318.4855957); //object(swk_single_1b)(3)
	CreateDynamicObject(2291,-2283.2023926,-1013.6177979,8810.8242188,0.0000000,0.0000000,317.9827881); //object(swk_single_1)(7)
	CreateDynamicObject(2291,-2282.4787598,-1014.2681274,8810.8242188,0.0000000,0.0000000,317.9827881); //object(swk_single_1)(8)
	CreateDynamicObject(2291,-2281.7292480,-1014.9287109,8810.8242188,0.0000000,0.0000000,318.9827881); //object(swk_single_1)(9)
	CreateDynamicObject(2292,-2280.6113281,-1015.8882446,8810.8242188,0.0000000,0.0000000,229.2325439); //object(swk_single_1b)(4)
	CreateDynamicObject(1742,-2282.7741699,-1023.0944824,8814.2910156,0.2500000,180.2500000,138.9979248); //object(med_bookshelf)(3)
	CreateDynamicObject(1742,-2282.1088867,-1023.0575562,8810.5156250,270.0559692,0.0380554,139.0936279); //object(med_bookshelf)(4)
	CreateDynamicObject(1753,-2279.2434082,-1015.7847900,8810.8242188,0.0000000,0.0000000,139.4967041); //object(swank_couch_1)(2)
	CreateDynamicObject(3440,-2291.8837891,-1014.9472656,8811.9335938,0.0000000,0.0000000,345.9979248); //object(arptpillar01_lvs)(1)
	CreateDynamicObject(2357,-2282.3759766,-1016.7978516,8811.0673828,359.7473145,0.0000000,317.9937744); //object(dunc_dinning)(1)
	CreateDynamicObject(2357,-2283.2490234,-1017.7608643,8811.0673828,0.0000000,0.0000000,317.9937744); //object(dunc_dinning)(2)
	CreateDynamicObject(2964,-2278.4033203,-1012.4189453,8810.8242188,0.0000000,0.0000000,318.9990234); //object(k_pooltablesm)(1)
	CreateDynamicObject(2965,-2282.9506836,-1012.6206665,8811.5097656,0.0000000,42.0000000,6.7500000); //object(k_pooltriangle01)(1)
	CreateDynamicObject(2966,-2280.3549805,-1020.1871948,8811.9482422,89.4408264,243.4257812,166.0753784); //object(mobile1993b)(1)
	CreateDynamicObject(2967,-2283.4213867,-1015.5147705,8811.4775391,0.0000000,0.0000000,190.0000000); //object(mobile1993a)(1)
	CreateDynamicObject(2994,-2267.9370117,-972.9255371,8811.3515625,0.0000000,0.0000000,319.2500000); //object(kmb_trolley)(1)
	CreateDynamicObject(3004,-2282.9892578,-1012.1484375,8812.3310547,282.0739746,60.5731201,60.0238037); //object(k_poolq2)(1)
	CreateDynamicObject(3350,-2268.5830078,-982.9692993,8812.3261719,0.0000000,0.0000000,228.9987793); //object(torino_mic)(1)
	CreateDynamicObject(3101,-2278.0336914,-1013.0363159,8811.7539062,325.1254883,340.3680420,348.4719849); //object(k_poolballspt03)(1)
	CreateDynamicObject(3100,-2278.4599609,-1012.0164185,8811.7539062,1.8543701,270.7495117,247.9877930); //object(k_poolballspt02)(1)
	CreateDynamicObject(3003,-2279.0229492,-1012.1533813,8811.7539062,0.0000000,0.0000000,0.0000000); //object(k_poolballcue)(1)
	CreateDynamicObject(3000,-2278.9873047,-1012.2919922,8811.7539062,49.9987793,270.0000000,39.9969482); //object(k_poolballstp06)(1)
	CreateDynamicObject(2995,-2277.6682129,-1012.8853149,8811.7539062,0.0000000,57.5000000,0.0000000); //object(k_poolballstp01)(1)
	CreateDynamicObject(2055,-2283.7148438,-1017.2470703,8811.5185547,270.0000000,196.7541504,140.7458496); //object(cj_target5)(1)
	CreateDynamicObject(3017,-2288.2187500,-1014.3602295,8811.6738281,0.7470703,0.0000000,49.7465820); //object(arch_plans)(1)
	CreateDynamicObject(16661,-2274.6777344,-977.1210938,8809.3964844,0.0000000,0.0000000,48.9990234); //object(a51_sci_stair)(1)
	CreateDynamicObject(11496,-2285.2929688,-1001.7763672,8810.6289062,0.0000000,0.0000000,139.9987793); //object(des_wjetty)(1)
	CreateDynamicObject(3119,-2279.8759766,-1022.3075562,8813.3623047,0.9997559,0.4998779,38.9892578); //object(cs_ry_props)(1)
	CreateDynamicObject(2838,-2282.7346191,-1017.2796021,8811.4804688,0.0000000,0.0000000,194.0000000); //object(gb_takeaway03)(1)
	CreateDynamicObject(2684,-2283.0244141,-1015.7237549,8811.5322266,271.0309753,75.9716797,219.9693909); //object(cj_food_post)(1)
	CreateDynamicObject(2588,-2268.5341797,-972.9747925,8813.5859375,0.0000000,1.0000000,50.0000000); //object(sex_3)(1)
	CreateDynamicObject(2587,-2269.1286621,-973.6651001,8813.4101562,0.0000000,0.0000000,49.0000000); //object(sex_2)(1)
	CreateDynamicObject(1320,-2266.0175781,-970.0556641,8812.3378906,6.7291260,175.9680176,323.7121582); //object(ws_roadwarning_05)(1)
	CreateDynamicObject(2028,-2280.1459961,-1019.9854126,8811.5097656,0.0000000,0.0000000,229.5000000); //object(swank_console)(1)
	CreateDynamicObject(2006,-2283.4443359,-1018.0625000,8811.5185547,270.4998779,89.9615479,123.9587402); //object(cr_safe_dial)(1)
	CreateDynamicObject(1797,-2279.4973145,-1023.1738892,8809.9667969,75.2453613,180.0000000,49.9987793); //object(swank_bed_3)(1)
	CreateDynamicObject(1797,-2275.3842773,-1018.2899170,8809.9648438,75.2398682,179.9945068,49.9987793); //object(swank_bed_3)(2)
	CreateDynamicObject(14811,-2279.3510742,-1029.0322266,8814.0917969,0.0000000,359.5000000,317.5000000); //object(strip2_neon)(1)
	CreateDynamicObject(14678,-2267.7844238,-982.5082397,8810.3339844,0.0000000,269.4946289,228.9935303); //object(int_tatooa08)(1)
	CreateDynamicObject(2059,-2283.7485352,-1016.4027100,8811.5136719,0.0000000,0.0000000,0.0000000); //object(cj_gunstuff1)(1)
	CreateDynamicObject(2037,-2269.0815430,-974.4341431,8811.8066406,0.0000000,0.0000000,58.0000000); //object(cj_pistol_ammo)(1)
	CreateDynamicObject(14842,-2270.6210938,-980.0771484,8812.0517578,0.0000000,0.0000000,319.7406006); //object(int_policea07)(1)
	CreateDynamicObject(14887,-2239.8476562,-960.7021484,8812.4863281,0.0000000,0.0000000,319.7460938); //object(polvegsigns3)(1)
	CreateDynamicObject(2886,-2282.0544434,-995.9314575,8812.4267578,0.0000000,0.0000000,47.7500000); //object(sec_keypad)(1)
	CreateDynamicObject(2922,-2244.9309082,-971.0362549,8812.6513672,0.0000000,0.0000000,140.2499695); //object(kmb_keypad)(1)
	CreateDynamicObject(18253,-2228.8254395,-1004.3730469,8812.3857422,0.0000000,0.0000000,320.0000000); //object(cuntwjunk09)(1)
	CreateDynamicObject(2676,-2267.0463867,-979.2966919,8811.9492188,0.0000000,0.0000000,295.7474365); //object(proc_rubbish_8)(1)
	CreateDynamicObject(3398,-2236.7116699,-1001.3127441,8803.6113281,0.0000000,0.0000000,228.5000000); //object(cxrf_floodlite_)(1)
	CreateDynamicObject(3398,-2236.5559082,-1001.3360596,8803.6367188,0.2500000,0.0000000,48.4982910); //object(cxrf_floodlite_)(2)
	CreateDynamicObject(15038,-2263.1748047,-1002.2042236,8811.4580078,0.0000000,0.0000000,162.2500000); //object(plant_pot_3_sv)(1)
	CreateDynamicObject(8837,-2262.9506836,-1020.8358154,8812.8281250,3.7498474,359.4989319,319.0327454); //object(pirtetrees03_lvs)(1)
	CreateDynamicObject(6372,-2274.9736328,-909.9184570,8815.2402344,0.0000000,0.0000000,50.0000000); //object(rodeo04tr_law2)(1)
	CreateDynamicObject(3811,-2271.8129883,-991.4636230,8816.1972656,0.0000000,0.0000000,272.0000000); //object(sfx_winplant08)(1)
	CreateDynamicObject(3806,-2270.4199219,-990.7217407,8816.2832031,0.0000000,0.0000000,319.7500000); //object(sfx_winplant07)(1)
	CreateDynamicObject(3532,-2271.0913086,-1004.4855347,8816.6894531,0.0000000,0.0000000,141.2500000); //object(triadbush)(1)
	CreateDynamicObject(3520,-2270.0388184,-1005.6765747,8816.2949219,0.0000000,0.0000000,128.7500000); //object(vgsn_flwrbdsm)(1)
	CreateDynamicObject(3409,-2235.6967773,-1001.7235107,8810.8476562,0.0000000,0.0000000,139.9987793); //object(grassplant)(1)
	CreateDynamicObject(3409,-2239.0419922,-999.1604004,8810.8476562,0.0000000,0.0000000,229.7460938); //object(grassplant)(2)
	CreateDynamicObject(2811,-2284.0881348,-1004.6655884,8810.8242188,0.0000000,0.0000000,280.0000000); //object(gb_romanpot01)(1)
	CreateDynamicObject(2345,-2270.7951660,-992.0476685,8816.1230469,21.9859314,357.8430176,48.5578918); //object(plant_pot_23)(1)
	CreateDynamicObject(2251,-2268.3110352,-990.0065918,8813.5732422,0.0000000,0.0000000,170.0000000); //object(plant_pot_20)(1)
	CreateDynamicObject(948,-2274.9499512,-1001.1411743,8811.5605469,0.0000000,0.0000000,264.2500000); //object(plant_pot_10)(1)
	CreateDynamicObject(949,-2275.5656738,-1003.1810303,8812.4609375,0.0000000,0.0000000,80.0000000); //
	CreateDynamicObject(2811,-2278.2624512,-997.7476196,8810.8242188,0.0000000,0.0000000,186.9975586); //
	CreateDynamicObject(843,-2274.4790039,-1003.6967773,8810.6601562,13.3329773,324.4019775,110.6246033); //
	CreateDynamicObject(18014,-2257.5869141,-996.4932251,8811.2773438,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(3440,-2291.8837891,-1014.9472656,8811.9335938,0.0000000,0.0000000,345.9979248); //
	CreateDynamicObject(16022,-2259.6562500,-986.1420898,8765.8974609,90.0000000,168.9631958,240.5368652); //
	CreateDynamicObject(11492,-2284.6127930,-985.1831665,8802.2070312,0.0000000,270.0000000,50.5000000); //
	CreateDynamicObject(11492,-2293.3535156,-986.0781250,8813.6191406,0.7470703,359.7473145,320.4986572); //
	CreateDynamicObject(1673,-2287.7172852,-981.7464600,8812.0908203,4.5000000,0.0000000,319.5000000); //
	CreateDynamicObject(3965,-2266.5551758,-979.4258423,8812.0957031,0.0000000,0.0000000,141.7456055); //
	CreateDynamicObject(2289,-2276.2976074,-996.4248657,8812.7871094,0.0000000,0.0000000,50.0000000); //
	CreateDynamicObject(2287,-2274.4001465,-994.8184204,8812.4589844,0.0000000,0.0000000,50.0000000); //
	CreateDynamicObject(2275,-2266.8110352,-991.1249390,8813.0683594,0.0000000,0.0000000,140.0000000); //
	CreateDynamicObject(2076,-2273.9492188,-1002.2239990,8816.2441406,0.0000000,0.0000000,350.0000000); //
	CreateDynamicObject(2071,-2285.4748535,-1009.6433716,8814.4238281,0.0000000,90.0000000,320.1429443); //
	CreateDynamicObject(2071,-2283.0830078,-1011.4437866,8814.4238281,0.0000000,90.0000000,139.8916016); //
	CreateDynamicObject(2071,-2280.8698730,-1013.4974976,8814.4238281,0.0000000,90.0000000,320.3889160); //
	CreateDynamicObject(2071,-2278.4340820,-1015.2951660,8814.4238281,0.0000000,90.0000000,140.6387939); //
	CreateDynamicObject(1565,-2287.8881836,-1013.3067017,8814.2666016,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(14860,-2260.2534180,-968.3295898,8813.3173828,0.0000000,0.0000000,140.5000000); //
	CreateDynamicObject(936,-2258.1064453,-973.8319702,8811.3281250,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(1743,-2280.9558105,-997.7006836,8810.8242188,0.0000000,0.0000000,319.9987793); //
	CreateDynamicObject(2063,-2254.7998047,-976.3256836,8811.7626953,0.0000000,0.0000000,320.2500000); //
	CreateDynamicObject(2418,-2257.0673828,-974.8041992,8810.8535156,0.0000000,0.0000000,319.5000000); //
	CreateDynamicObject(2573,-2288.6901855,-1004.6292725,8810.9042969,0.0000000,0.0000000,48.0000000); //
	CreateDynamicObject(1418,-2268.6787109,-982.2212524,8811.4179688,0.4945374,180.2472076,50.2466431); //
	CreateDynamicObject(1418,-2268.6621094,-982.2211914,8812.8593750,359.9835205,180.2416992,49.9987793); //
	CreateDynamicObject(3253,-2273.4316406,-978.9619141,8812.9228516,0.0000000,180.2416992,319.9877930); //
	CreateDynamicObject(16501,-2271.4726562,-982.0996094,8813.5888672,0.0000000,270.0000000,320.2459717); //
	CreateDynamicObject(16501,-2274.8522949,-979.3001099,8813.5888672,0.0000000,270.0000000,320.4958496); //
	CreateDynamicObject(2136,-2266.0598145,-982.5183105,8810.8193359,0.0000000,0.0000000,320.2500000); //
	CreateDynamicObject(2135,-2268.0646973,-983.4129028,8810.8193359,0.0000000,0.0000000,49.0000000); //
	CreateDynamicObject(2305,-2266.7880859,-981.9199219,8810.8193359,0.0000000,0.0000000,49.4934082); //
	CreateDynamicObject(2137,-2268.7148438,-984.1630859,8810.8193359,0.0000000,0.0000000,49.2462158); //
	CreateDynamicObject(2138,-2267.4277344,-982.6640625,8810.8193359,0.0000000,0.0000000,49.2462158); //
	CreateDynamicObject(2140,-2269.3486328,-984.9160156,8810.8193359,0.0000000,0.0000000,50.2459717); //
	CreateDynamicObject(2140,-2269.9814453,-985.6582031,8810.8193359,0.0000000,0.0000000,48.9935303); //
	CreateDynamicObject(2140,-2270.6220703,-986.3925781,8810.8193359,0.0000000,0.0000000,49.4879150); //
	CreateDynamicObject(14678,-2276.9418945,-981.8086548,8811.5585938,359.2477417,0.2420349,57.7454529); //
	CreateDynamicObject(2139,-2263.0346680,-985.0406494,8810.8193359,359.7500000,0.2500000,319.7510986); //
	CreateDynamicObject(2136,-2264.5434570,-983.7821045,8810.8193359,359.5000000,359.9971924,320.9957275); //
	CreateDynamicObject(2303,-2262.2910156,-985.6494751,8810.8193359,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(2139,-2261.5407715,-986.2982788,8810.8193359,359.7473145,0.2471924,319.9960938); //
	CreateDynamicObject(2341,-2260.7341309,-986.8684692,8810.8193359,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(2139,-2261.3713379,-987.6090698,8810.8193359,359.7500000,0.0000000,230.0000000); //
	CreateDynamicObject(2139,-2261.9987793,-988.3541870,8810.8193359,359.7500000,0.0000000,229.9987946); //
	CreateDynamicObject(2139,-2261.2351074,-989.0393677,8810.8193359,359.7500000,0.0000000,49.2487793); //
	CreateDynamicObject(2139,-2260.5988770,-988.2966309,8810.8193359,359.7473145,0.0000000,49.7462158); //
	CreateDynamicObject(2139,-2259.9948730,-987.5665894,8810.8193359,359.7473145,0.0000000,49.4960938); //
	CreateDynamicObject(3599,-2232.8935547,-992.0200195,8820.7695312,0.0000000,0.0000000,49.9987793); //
	CreateDynamicObject(3034,-2279.4267578,-983.6230469,8812.4960938,0.0000000,0.0000000,49.9987793); //
	CreateDynamicObject(2560,-2238.0644531,-1002.4755859,8812.8300781,0.0000000,0.4998779,139.7460938); //
	CreateDynamicObject(1810,-2258.8413086,-973.2688599,8810.8535156,0.0000000,0.0000000,324.0000000); //
	CreateDynamicObject(1670,-2284.5595703,-1016.7999878,8811.5029297,0.0000000,0.0000000,96.0000000); //
	CreateDynamicObject(15040,-2236.0048828,-988.8818359,8813.2333984,0.0000000,0.0000000,49.7460938); //
	CreateDynamicObject(15040,-2262.0927734,-962.0361328,8812.6494141,0.0000000,0.0000000,319.9932861); //
	CreateDynamicObject(2518,-2278.1862793,-984.3317261,8810.6142578,0.0000000,0.0000000,49.9987793); //
	CreateDynamicObject(14879,-2255.1391602,-970.7740479,8812.0429688,359.7501221,1.7500305,340.2575989); //
	CreateDynamicObject(5153,-2279.4892578,-983.4511719,8812.7109375,271.1151123,26.5704346,233.0639648); //
	CreateDynamicObject(1322,-2280.6083984,-985.0351562,8813.1162109,0.0000000,0.0000000,321.9982910); //
	CreateDynamicObject(1322,-2278.2333984,-982.2302246,8813.1162109,0.0000000,0.0000000,321.9982910); //
	CreateDynamicObject(3359,-2289.6628418,-993.2858887,8813.6230469,0.0000000,179.9974365,317.9992676); //
	CreateDynamicObject(13360,-2274.5756836,-981.8449707,8811.8095703,0.0000000,0.0000000,319.9987793); //
	CreateDynamicObject(2878,-2273.8532715,-992.5046387,8812.0605469,0.0000000,0.0000000,151.2500000); //
	CreateDynamicObject(3851,-2240.6977539,-1001.9841919,8812.5410156,0.0000000,0.0000000,50.0000000); //
	CreateDynamicObject(14874,-2285.2224121,-994.3538208,8813.3193359,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(14394,-2275.5959473,-986.8695679,8809.9384766,0.0000000,0.0000000,319.7500000); //
	CreateDynamicObject(11472,-2234.7338867,-999.0919189,8808.1171875,359.7464600,0.0000000,50.2535400); //
	CreateDynamicObject(14779,-2235.5908203,-1004.3387451,8813.2353516,0.0000000,359.7500000,320.0000000); //
	CreateDynamicObject(7017,-2280.9248047,-968.4050293,8810.3261719,0.0000000,0.0000000,319.0000000); //
	CreateDynamicObject(2342,-2261.4453125,-988.2595215,8811.9873047,0.7470703,1.2469482,249.9835205); //
	CreateDynamicObject(18061,-2264.3815918,-982.8591919,8812.0273438,0.0000000,0.0000000,136.5000000); //
	CreateDynamicObject(14653,-2275.9897461,-1022.0781860,8812.6748047,0.0000000,359.7500000,175.5000610); //
	CreateDynamicObject(2871,-2265.7341309,-981.7178345,8810.3574219,359.5000000,0.0000000,50.2499695); //
	CreateDynamicObject(2752,-2279.2031250,-984.0635986,8811.6220703,0.0000000,0.0000000,130.0000000); //
	CreateDynamicObject(2751,-2279.5305176,-984.0968018,8811.6689453,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2750,-2280.1574707,-985.4138184,8811.6884766,270.9013672,146.2962646,238.2995605); //
	CreateDynamicObject(2749,-2279.2839355,-983.8571777,8811.6220703,0.0000000,0.0000000,278.0000000); //
	CreateDynamicObject(2601,-2283.9746094,-1016.2539062,8811.5615234,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2543,-2270.9807129,-986.6719971,8809.3017578,359.0000000,359.7500000,42.7456360); //
	CreateDynamicObject(2542,-2267.1613770,-981.4644775,8811.6630859,359.7499695,0.0000000,319.0000000); //
	CreateDynamicObject(2539,-2265.1455078,-982.6356812,8810.2861328,0.0000000,0.0000000,343.7500000); //
	CreateDynamicObject(2486,-2276.6394043,-1017.1500854,8813.0839844,355.7863464,7.5204468,299.5557861); //
	CreateDynamicObject(1988,-2269.9523926,-984.9313354,8812.5390625,0.0000000,0.0000000,50.2500000); //
	CreateDynamicObject(3044,-2282.0168457,-1016.4732666,8811.6181641,25.4976807,0.8311157,305.1423340); //
	CreateDynamicObject(3027,-2284.0229492,-1015.7773438,8811.5527344,359.8306580,260.2513733,82.2355347); //
	CreateDynamicObject(15037,-2239.3232422,-992.8386841,8811.1757812,0.0000000,0.0000000,50.0000000); //
	CreateDynamicObject(1510,-2282.1140137,-1016.6293335,8811.5029297,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1510,-2284.0522461,-1015.8895264,8811.5029297,0.0000000,0.0000000,331.5000000); //
	CreateDynamicObject(1509,-2276.8886719,-1017.3883057,8813.2714844,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(1484,-2260.9169922,-988.6283569,8812.0664062,349.7332764,31.5582275,96.2457275); //
	CreateDynamicObject(2601,-2282.7736816,-1018.1575317,8811.5615234,0.0000000,0.0000000,100.0000000); //
	CreateDynamicObject(1950,-2276.9741211,-1017.5539551,8813.2578125,0.0000000,0.0000000,72.0000000); //
	CreateDynamicObject(1518,-2266.7587891,-991.3514404,8812.1962891,0.0000000,0.0000000,142.0000000); //
	CreateDynamicObject(1718,-2267.2182617,-990.9683228,8811.9755859,0.0000000,0.0000000,139.7500000); //
	CreateDynamicObject(1736,-2279.3935547,-1020.1141968,8813.8056641,0.0000000,0.0000000,230.0000000); //
	CreateDynamicObject(2958,-2277.3007812,-1017.9487305,8813.1650391,359.5194092,343.9995117,145.8620605); //
	CreateDynamicObject(1666,-2282.5798340,-1016.3071289,8811.5576172,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2816,-2281.7456055,-1016.9243164,8811.4775391,0.0000000,0.0000000,194.0000000); //
	CreateDynamicObject(16500,-2246.3339844,-997.3394165,8812.7207031,0.0000000,0.0000000,49.7500000); //
	CreateDynamicObject(16500,-2250.1066895,-994.1586304,8815.3105469,0.0000000,0.0000000,49.9987793); //
	CreateDynamicObject(16500,-2253.8747559,-990.9129028,8812.7050781,359.9999695,0.0000000,48.4987793); //
	CreateDynamicObject(3354,-2249.3825684,-993.2562256,8814.0605469,0.0000000,54.9999695,50.0000000); //
	CreateDynamicObject(14817,-2268.1435547,-1017.0346680,8812.4941406,0.0000000,0.0000000,124.5000000); //
	CreateDynamicObject(14817,-2268.6125488,-1017.6272583,8807.1718750,359.5982666,288.7459106,110.5634155); //
	CreateDynamicObject(5154,-2242.0695801,-1013.1694336,8815.3750000,0.2500000,0.2500000,292.9989014); //
	CreateDynamicObject(10830,-2277.6931152,-947.2313232,8804.8681641,359.7500000,180.0000000,185.2500000); //
	CreateDynamicObject(3383,-2279.0417480,-983.4416504,8815.4804688,356.2499390,180.0000000,229.9999847); //
	CreateDynamicObject(2149,-2269.1318359,-984.0503540,8812.0273438,0.0000000,0.0000000,50.0000000); //
	CreateDynamicObject(2822,-2264.4738770,-983.6859741,8811.8710938,0.0000000,0.0000000,0.0000000); //
	
	// SEXY COWS
	CreateDynamicObject(16442,-1370.6999500,-524.5999800,15.1000000,0.0000000,0.0000000,24.0000000); //
	CreateDynamicObject(321,-1373.0999800,-525.2000100,14.7000000,0.0000000,106.0000000,14.0000000); //
	CreateDynamicObject(16442,-1372.6999500,-525.2000100,16.0000000,0.0000000,318.0000000,24.0000000); //
	CreateDynamicObject(321,-1431.0000000,-964.2000100,201.1000100,0.0000000,108.0000000,352.0000000); //
	CreateDynamicObject(16442,-1427.8000500,-964.5000000,201.1000100,0.0000000,6.0000000,0.0000000); //
	CreateDynamicObject(16442,-1430.5999800,-964.2999900,202.6000100,0.0000000,317.9950000,0.0000000); //
	CreateDynamicObject(16442,-1227.5000000,51.3000000,17.9000000,0.0000000,0.0000000,316.0000000); //
	CreateDynamicObject(16442,-1229.0999800,53.0000000,19.1000000,0.0000000,330.0000000,316.0000000); //
	CreateDynamicObject(321,-1229.5000000,53.5000000,17.7000000,0.0000000,102.0000000,316.0000000); //
	CreateDynamicObject(321,-1522.1999500,490.1000100,10.5000000,0.0000000,70.0000000,274.0000000); //
	CreateDynamicObject(16442,-1522.0999800,487.2999900,11.0000000,0.0000000,18.0000000,92.0000000); //
	CreateDynamicObject(16442,-1522.3000500,485.6000100,13.3000000,0.0000000,340.0000000,92.0000000); //
	CreateDynamicObject(16442,-1522.1999500,490.7999900,11.8000000,0.0000000,276.0000000,268.0000000); //
	CreateDynamicObject(321,-1522.3000500,484.7999900,11.9000000,0.0000000,154.0000000,86.0000000); //
	CreateDynamicObject(16442,-103.2000000,1369.5999800,14.0000000,0.0000000,284.0000000,98.0000000); //
	CreateDynamicObject(16442,-103.3994100,1370.0000000,10.5000000,0.0000000,179.9950000,273.9940000); //
	CreateDynamicObject(321,-102.4000000,1368.9000200,11.3000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(16442,252.5000000,1700.5999800,23.0000000,0.0000000,0.0000000,284.0000000); //
	CreateDynamicObject(16442,252.2000000,1703.0999800,23.8000000,0.0000000,316.0000000,283.9970000); //
	CreateDynamicObject(321,252.3000000,1703.1999500,22.4000000,0.0000000,132.0000000,248.0000000); //
	CreateDynamicObject(321,2151.3000500,1275.6999500,17.3000000,0.0000000,132.0000000,294.0000000); //
	CreateDynamicObject(16442,2151.1001000,1273.0999800,17.4000000,0.0000000,0.0000000,268.0000000); //
	CreateDynamicObject(16442,2151.1999500,1275.5000000,18.7000000,0.0000000,320.0000000,267.9950000); //
	CreateDynamicObject(16442,-2129.6999500,-832.2999900,32.7000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(16442,-2129.8999000,-834.4000200,33.6000000,0.0000000,330.0000000,90.0000000); //
	CreateDynamicObject(321,-2129.8999000,-835.0000000,32.1000000,0.0000000,126.0000000,98.0000000); //
	CreateDynamicObject(321,1998.4000200,1563.3000500,15.4000000,0.0000000,136.0000000,44.0000000); //
	CreateDynamicObject(16442,1999.5999800,1565.5999800,15.8000000,0.0000000,0.0000000,66.0000000); //
	CreateDynamicObject(16442,1998.5999800,1563.5999800,16.9000000,0.0000000,318.0000000,65.9950000); //
	CreateDynamicObject(16442,2272.8999000,1391.5999800,43.2000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(16442,2272.8999000,1389.3000500,44.2000000,0.0000000,322.0000000,90.0000000); //
	CreateDynamicObject(16442,-783.0000000,2448.1999500,157.3000000,0.0000000,0.0000000,24.0000000); //
	CreateDynamicObject(16442,-785.2999900,2447.3000500,158.6000100,0.0000000,322.0000000,24.0000000); //
	CreateDynamicObject(16442,-916.9000200,2700.0000000,43.3000000,0.0000000,0.0000000,148.0000000); //
	CreateDynamicObject(16442,-915.0999800,2698.8000500,44.0000000,0.0000000,322.0000000,147.9970000); //
	CreateDynamicObject(16442,-848.2000100,1633.0999800,27.6000000,0.0000000,0.0000000,14.0000000); //
	CreateDynamicObject(16442,-850.2000100,1632.5000000,28.9000000,0.0000000,330.0000000,17.9970000); //
	CreateDynamicObject(16442,-1039.0999800,487.2000100,14.8000000,0.0000000,0.0000000,320.0000000); //
	CreateDynamicObject(16442,-1040.5000000,488.6000100,15.5000000,0.0000000,326.0000000,319.9990000); //
	

	// bmx parkour 
	CreateDynamicObject(9254,1087.6000000,1177.9000000,616.7999900,0.0000000,0.0000000,0.0000000); //object(carpark_sfn01) (1)
	CreateDynamicObject(10828,1098.4000000,1161.9000000,628.2999900,0.0000000,0.0000000,0.0000000); //object(drydock1_sfse) (1)
	CreateDynamicObject(10828,1076.9000000,1161.9000000,628.2999900,0.0000000,0.0000000,0.0000000); //object(drydock1_sfse) (2)
	CreateDynamicObject(10828,1115.1000000,1177.5000000,628.2999900,0.0000000,0.0000000,90.0000000); //object(drydock1_sfse) (3)
	CreateDynamicObject(10828,1060.3000000,1177.9000000,628.2999900,0.0000000,0.0000000,90.0000000); //object(drydock1_sfse) (4)
	CreateDynamicObject(3578,1095.4000000,1194.1000000,617.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (1)
	CreateDynamicObject(3578,1105.6000000,1194.1000000,617.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (2)
	CreateDynamicObject(3578,1108.8000000,1194.1000000,617.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (3)
	CreateDynamicObject(3578,1074.2000000,1194.0000000,617.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (4)
	CreateDynamicObject(3578,1066.0000000,1194.0000000,617.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (5)
	CreateDynamicObject(3437,1101.2000000,1162.9000000,622.2999900,0.0000000,0.0000000,0.0000000); //object(ballypllr01_lvs) (1)
	CreateDynamicObject(3437,1101.2000000,1162.9000000,633.5000000,0.0000000,0.0000000,0.0000000); //object(ballypllr01_lvs) (2)
	CreateDynamicObject(3437,1096.7000000,1163.1000000,637.7999900,0.0000000,88.0000000,356.4650000); //object(ballypllr01_lvs) (3)
	CreateDynamicObject(3437,1096.3000000,1163.1000000,634.0000000,0.0000000,125.9950000,356.4620000); //object(ballypllr01_lvs) (5)
	CreateDynamicObject(3437,1096.4000000,1163.0000000,626.2999900,0.0000000,219.9910000,356.4620000); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1091.0000000,1163.3000000,619.7999900,0.0000000,219.9900000,356.4620000); //object(ballypllr01_lvs) (7)
	CreateDynamicObject(3437,1080.0000000,1163.6000000,619.7999900,0.0000000,330.0000000,356.4620000); //object(ballypllr01_lvs) (9)
	CreateDynamicObject(3437,1074.3000000,1163.9000000,629.7999900,0.0000000,329.9960000,356.4620000); //object(ballypllr01_lvs) (10)
	CreateDynamicObject(3437,1080.8000000,1164.0000000,628.2999900,0.0000000,38.0000000,7.8840000); //object(ballypllr01_lvs) (11)
	CreateDynamicObject(3437,1075.3000000,1163.2000000,621.0999800,0.0000000,37.9960000,7.8830000); //object(ballypllr01_lvs) (12)
	CreateDynamicObject(3437,1069.6000000,1162.4000000,613.7999900,0.0000000,37.9960000,7.8830000); //object(ballypllr01_lvs) (13)
	CreateDynamicObject(1632,1085.3000000,1162.7000000,621.2999900,68.0000000,0.0000000,186.7250000); //object(waterjump1) (1)
	CreateDynamicObject(8838,1087.7000000,1212.3000000,614.7000100,0.0000000,0.0000000,90.0000000); //object(vgehshade01_lvs) (1)
	CreateDynamicObject(8838,1082.6000000,1212.3000000,614.7000100,0.0000000,0.0000000,90.0000000); //object(vgehshade01_lvs) (2)
	CreateDynamicObject(8838,1087.7000000,1246.8000000,614.7000100,0.0000000,0.0000000,90.0000000); //object(vgehshade01_lvs) (5)
	CreateDynamicObject(8838,1082.6000000,1246.8000000,614.7000100,0.0000000,0.0000000,90.0000000); //object(vgehshade01_lvs) (7)
	CreateDynamicObject(8838,1073.7000000,1267.1000000,616.2000100,0.0000000,0.0000000,180.0000000); //object(vgehshade01_lvs) (9)
	CreateDynamicObject(8838,1071.4000000,1272.6000000,617.7000100,0.0000000,0.0000000,179.9950000); //object(vgehshade01_lvs) (10)
	CreateDynamicObject(8838,1069.2000000,1278.2000000,619.5000000,0.0000000,0.0000000,179.9950000); //object(vgehshade01_lvs) (11)
	CreateDynamicObject(8838,1065.1000000,1283.4000000,621.7999900,0.0000000,0.0000000,179.9950000); //object(vgehshade01_lvs) (12)
	CreateDynamicObject(8838,1061.2000000,1288.9000000,623.2999900,0.0000000,0.0000000,179.9950000); //object(vgehshade01_lvs) (13)
	CreateDynamicObject(8838,1058.3000000,1294.4000000,625.7999900,0.0000000,0.0000000,179.9950000); //object(vgehshade01_lvs) (14)
	CreateDynamicObject(8838,1055.6000000,1299.8000000,628.2999900,0.0000000,0.0000000,179.9950000); //object(vgehshade01_lvs) (16)
	CreateDynamicObject(8661,1053.7000000,1312.0000000,629.7999900,0.0000000,0.0000000,0.0000000); //object(gnhtelgrnd_lvs) (1)
	CreateDynamicObject(18365,1048.5000000,1393.5000000,637.9000200,0.0000000,0.0000000,314.0000000); //object(sawmill) (1)
	CreateDynamicObject(13638,1044.3000000,1446.4000000,640.5000000,0.0000000,0.0000000,0.0000000); //object(stunt1) (1)
	CreateDynamicObject(13638,1039.0000000,1465.1000000,641.0999800,0.0000000,0.0000000,180.0000000); //object(stunt1) (4)
	CreateDynamicObject(13638,1027.1000000,1477.6000000,633.0999800,0.0000000,0.0000000,179.9950000); //object(stunt1) (5)
	CreateDynamicObject(13648,999.0999800,1483.3000000,629.0000000,0.0000000,0.0000000,272.0000000); //object(wall2) (1)
	CreateDynamicObject(13648,999.0999800,1482.7000000,629.0000000,0.0000000,0.0000000,272.0000000); //object(wall2) (2)
	CreateDynamicObject(13648,999.0999800,1482.1000000,629.0000000,0.0000000,0.0000000,272.0000000); //object(wall2) (3)
	CreateDynamicObject(13648,999.0999800,1483.9000000,629.0000000,0.0000000,0.0000000,272.0000000); //object(wall2) (4)
	CreateDynamicObject(2960,976.0999800,1483.1000000,629.0999800,0.0000000,0.0000000,4.0000000); //object(kmb_beam) (1)
	CreateDynamicObject(2960,976.0999800,1482.7000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (2)
	CreateDynamicObject(2960,976.0999800,1482.3000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (3)
	CreateDynamicObject(2960,976.0999800,1481.9000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (4)
	CreateDynamicObject(2960,976.0999800,1481.5000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (5)
	CreateDynamicObject(2960,976.0999800,1481.1000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (6)
	CreateDynamicObject(2960,971.5999800,1482.0000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (8)
	CreateDynamicObject(2960,971.5999800,1481.6000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (9)
	CreateDynamicObject(2960,967.2000100,1481.5000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (11)
	CreateDynamicObject(2960,962.7000100,1481.2000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (14)
	CreateDynamicObject(2960,958.2999900,1480.9000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (19)
	CreateDynamicObject(2960,953.9000200,1480.6000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (21)
	CreateDynamicObject(2960,949.4000200,1480.3000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (23)
	CreateDynamicObject(2960,945.2000100,1480.0000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (25)
	CreateDynamicObject(2960,971.5999800,1481.7000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (27)
	CreateDynamicObject(2960,976.0000000,1482.1000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (28)
	CreateDynamicObject(2960,941.0999800,1479.7000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (30)
	CreateDynamicObject(2960,937.0999800,1479.3000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (35)
	CreateDynamicObject(2960,937.0999800,1479.6000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (36)
	CreateDynamicObject(2960,935.9000200,1479.0000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (38)
	CreateDynamicObject(2960,935.9000200,1479.3000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (39)
	CreateDynamicObject(2960,935.9000200,1479.6000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (40)
	CreateDynamicObject(2960,935.7999900,1479.9000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (45)
	CreateDynamicObject(2960,935.9000200,1478.7000000,629.0999800,0.0000000,0.0000000,3.9990000); //object(kmb_beam) (46)
	CreateDynamicObject(5400,884.5999800,1464.9000000,625.0999800,0.0000000,0.0000000,4.0000000); //object(laeskatetube1) (1)
	CreateDynamicObject(5400,886.0999800,1443.3000000,625.0999800,0.0000000,0.0000000,3.9990000); //object(laeskatetube1) (2)
	CreateDynamicObject(5400,887.5000000,1423.0000000,625.0999800,0.0000000,0.0000000,4.0000000); //object(laeskatetube1) (3)
	CreateDynamicObject(5400,888.9000200,1402.1000000,625.0999800,0.0000000,0.0000000,3.9990000); //object(laeskatetube1) (4)
	CreateDynamicObject(5400,897.9000200,1402.7000000,625.0999800,0.0000000,0.0000000,3.9990000); //object(laeskatetube1) (7)
	CreateDynamicObject(5400,906.0000000,1403.3000000,625.0999800,0.0000000,0.0000000,3.9990000); //object(laeskatetube1) (8)
	CreateDynamicObject(5400,914.7000100,1403.9000000,625.0999800,0.0000000,0.0000000,3.9990000); //object(laeskatetube1) (9)
	CreateDynamicObject(5400,923.7000100,1404.6000000,625.0999800,0.0000000,0.0000000,3.9990000); //object(laeskatetube1) (10)
	CreateDynamicObject(5400,933.4000200,1405.3000000,625.0999800,0.0000000,0.0000000,3.9990000); //object(laeskatetube1) (11)
	CreateDynamicObject(5400,943.0999800,1406.0000000,625.0999800,0.0000000,0.0000000,3.9990000); //object(laeskatetube1) (12)
	CreateDynamicObject(5400,938.0999800,1405.6000000,625.0999800,0.0000000,0.0000000,3.9990000); //object(laeskatetube1) (14)
	CreateDynamicObject(987,925.0000000,1408.7000000,630.5000000,0.0000000,0.0000000,4.0000000); //object(elecfence_bar) (1)
	CreateDynamicObject(987,937.0000000,1409.2000000,630.5000000,0.0000000,0.0000000,31.9990000); //object(elecfence_bar) (2)
	CreateDynamicObject(987,926.5000000,1397.2000000,630.5000000,0.0000000,0.0000000,97.9980000); //object(elecfence_bar) (3)
	CreateDynamicObject(987,926.5000000,1397.2000000,624.7999900,0.0000000,0.0000000,97.9930000); //object(elecfence_bar) (4)
	CreateDynamicObject(987,947.0999800,1415.5000000,630.5000000,0.0000000,0.0000000,3.9990000); //object(elecfence_bar) (6)
	CreateDynamicObject(987,959.0000000,1416.1000000,630.5000000,0.0000000,0.0000000,3.9990000); //object(elecfence_bar) (7)
	CreateDynamicObject(1318,925.2999900,1415.9000000,631.0000000,0.0000000,94.0000000,0.0000000); //object(arrow) (1)
	CreateDynamicObject(1318,923.7000100,1415.8000000,631.0000000,0.0000000,93.9990000,0.0000000); //object(arrow) (2)
	CreateDynamicObject(1318,921.7000100,1415.7000000,631.0000000,0.0000000,93.9990000,0.0000000); //object(arrow) (3)
	CreateDynamicObject(1318,919.9000200,1415.6000000,631.0000000,0.0000000,93.9990000,0.0000000); //object(arrow) (4)
	CreateDynamicObject(1318,918.2999900,1415.5000000,630.9000200,0.0000000,77.9990000,0.0000000); //object(arrow) (5)
	CreateDynamicObject(1318,917.0999800,1415.4000000,630.4000200,0.0000000,67.9970000,0.0000000); //object(arrow) (6)
	CreateDynamicObject(1318,916.0000000,1415.3000000,629.7999900,0.0000000,61.9940000,0.0000000); //object(arrow) (7)
	CreateDynamicObject(1318,915.0000000,1415.2000000,629.0000000,0.0000000,51.9900000,0.0000000); //object(arrow) (8)
	CreateDynamicObject(1318,913.7999900,1415.1000000,628.2000100,358.9400000,58.0030000,359.6960000); //object(arrow) (11)
	CreateDynamicObject(1318,912.5999800,1414.9000000,627.4000200,358.9400000,58.0020000,359.6920000); //object(arrow) (13)
	CreateDynamicObject(1318,911.4000200,1414.8000000,626.7000100,359.6520000,79.9930000,359.9660000); //object(arrow) (15)
	CreateDynamicObject(1318,910.0000000,1414.6000000,626.5000000,359.6480000,79.9910000,359.9620000); //object(arrow) (17)
	CreateDynamicObject(1318,908.7999900,1414.4000000,626.2999900,359.5100000,75.9940000,359.9320000); //object(arrow) (19)
	CreateDynamicObject(11472,926.7999900,1479.5000000,626.5000000,0.0000000,0.0000000,92.0000000); //object(des_swtstairs1) (1)
	CreateDynamicObject(11472,926.7999900,1478.6000000,627.0999800,0.0000000,0.0000000,92.0000000); //object(des_swtstairs1) (2)
	CreateDynamicObject(11472,926.9000200,1477.5000000,627.5000000,0.0000000,0.0000000,92.0000000); //object(des_swtstairs1) (3)
	CreateDynamicObject(3437,921.7000100,1465.7000000,629.0999800,0.0000000,90.0000000,94.0000000); //object(ballypllr01_lvs) (15)
	CreateDynamicObject(3437,931.4000200,1444.5000000,629.0999800,0.0000000,90.0000000,93.9990000); //object(ballypllr01_lvs) (16)
	CreateDynamicObject(3437,924.7999900,1423.6000000,629.0999800,0.0000000,90.0000000,93.9990000); //object(ballypllr01_lvs) (17)
	CreateDynamicObject(14566,850.7000100,1410.3000000,624.5000000,0.0000000,0.0000000,45.9990000); //object(budha_whel1b) (3)
	CreateDynamicObject(14566,848.7999900,1410.3000000,624.5000000,0.0000000,0.0000000,45.9940000); //object(budha_whel1b) (5)
	CreateDynamicObject(14566,847.0000000,1410.3000000,624.5000000,0.0000000,0.0000000,45.9940000); //object(budha_whel1b) (6)
	CreateDynamicObject(2992,807.9000200,1404.3000000,625.5000000,0.0000000,0.0000000,0.0000000); //object(roulette_marker) (1)
	CreateDynamicObject(3584,808.0999800,1442.5000000,627.0000000,0.0000000,0.0000000,0.0000000); //object(compproj01_la) (1)
	CreateDynamicObject(3114,808.5999800,1402.1000000,624.7999900,0.0000000,0.0000000,0.0000000); //object(carrier_lift2_sfse) (1)
	CreateDynamicObject(3114,808.5999800,1409.6000000,624.7999900,0.0000000,0.0000000,0.0000000); //object(carrier_lift2_sfse) (3)
	CreateDynamicObject(7312,808.4000200,1405.3000000,627.5999800,0.0000000,0.0000000,266.0000000); //object(vgsn_carwash01) (1)
	CreateDynamicObject(7312,808.4003900,1405.2998000,627.5999800,0.0000000,0.0000000,83.9950000); //object(vgsn_carwash01) (2)
	CreateDynamicObject(354,808.4000200,1405.2000000,624.5999800,0.0000000,0.0000000,0.0000000); //object(1)
	CreateDynamicObject(8567,845.0999800,1492.5000000,626.5999800,0.0000000,0.0000000,0.0000000); //object(vgsebuild04_lvs) (1)
	CreateDynamicObject(10810,854.4000200,1492.7000000,621.2999900,0.0000000,0.0000000,106.0000000); //object(ap_smallradar1_sfse) (1)
	CreateDynamicObject(10810,851.2000100,1492.9000000,622.5000000,0.0000000,0.0000000,105.9960000); //object(ap_smallradar1_sfse) (2)
	CreateDynamicObject(10810,848.5000000,1493.1000000,624.0000000,0.0000000,0.0000000,105.9960000); //object(ap_smallradar1_sfse) (3)
	CreateDynamicObject(10810,844.9000200,1493.4000000,625.0000000,0.0000000,0.0000000,105.9960000); //object(ap_smallradar1_sfse) (4)
	CreateDynamicObject(969,824.5000000,1476.4000000,625.4000200,90.0000000,90.0000000,0.0000000); //object(electricgate) (1)
	CreateDynamicObject(969,821.2999900,1485.2000000,626.7000100,90.0000000,90.0000000,0.0000000); //object(electricgate) (2)
	CreateDynamicObject(969,818.0999800,1493.9000000,627.7999900,90.0000000,90.0000000,0.0000000); //object(electricgate) (3)
	CreateDynamicObject(969,820.7999900,1502.3000000,629.2000100,90.0000000,90.0000000,0.0000000); //object(electricgate) (5)
	CreateDynamicObject(969,824.5000000,1500.1000000,631.0000000,90.0000000,90.0000000,0.0000000); //object(electricgate) (6)
	CreateDynamicObject(1391,831.5999800,1530.5000000,631.7000100,0.0000000,76.0000000,100.0000000); //object(twrcrane_s_03) (1)
	CreateDynamicObject(969,834.2999900,1506.6000000,630.2999900,90.0000000,10.0250000,87.9750000); //object(electricgate) (9)
	CreateDynamicObject(1391,802.5999800,1541.0000000,632.7000100,0.0000000,93.9980000,183.9980000); //object(twrcrane_s_03) (3)
	CreateDynamicObject(1391,786.2000100,1509.6000000,625.0000000,0.0000000,93.9940000,271.9940000); //object(twrcrane_s_03) (5)
	CreateDynamicObject(17950,786.7000100,1492.2000000,624.2000100,0.0000000,0.0000000,176.0000000); //object(cjsaveg) (1)
	CreateDynamicObject(17950,791.9000200,1491.9000000,626.0000000,0.0000000,0.0000000,175.9950000); //object(cjsaveg) (2)
	CreateDynamicObject(17950,796.2000100,1491.6000000,627.5000000,0.0000000,0.0000000,175.9950000); //object(cjsaveg) (3)
	CreateDynamicObject(17950,800.5000000,1491.3000000,629.0000000,0.0000000,0.0000000,175.9950000); //object(cjsaveg) (4)
	CreateDynamicObject(17950,804.0999800,1491.1000000,630.5999800,0.0000000,0.0000000,175.9950000); //object(cjsaveg) (5)
	CreateDynamicObject(17950,807.5999800,1490.9000000,632.0999800,0.0000000,0.0000000,175.9950000); //object(cjsaveg) (6)
	CreateDynamicObject(17950,807.0000000,1482.3000000,632.0999800,0.0000000,0.0000000,175.9950000); //object(cjsaveg) (8)
	CreateDynamicObject(17950,806.4000200,1473.8000000,630.2999900,0.0000000,0.0000000,175.9950000); //object(cjsaveg) (9)
	CreateDynamicObject(17950,806.0000000,1468.9000000,630.2999900,0.0000000,0.0000000,175.9950000); //object(cjsaveg) (10)
	CreateDynamicObject(17950,805.5999800,1460.5000000,630.2999900,0.0000000,0.0000000,355.9950000); //object(cjsaveg) (11)
	CreateDynamicObject(11292,849.4000200,1459.1000000,618.7999900,0.0000000,0.0000000,4.0000000); //object(gasstatiohut) (1)
	CreateDynamicObject(11292,850.5000000,1438.0000000,618.7999900,0.0000000,0.0000000,3.9990000); //object(gasstatiohut) (2)
	CreateDynamicObject(11292,851.0999800,1417.3000000,618.7999900,0.0000000,0.0000000,3.9990000); //object(gasstatiohut) (3)
	CreateDynamicObject(11292,845.7000100,1414.4000000,621.0000000,0.0000000,0.0000000,3.9990000); //object(gasstatiohut) (5)
	CreateDynamicObject(11292,840.9000200,1413.6000000,623.0000000,0.0000000,0.0000000,3.9990000); //object(gasstatiohut) (6)
	CreateDynamicObject(11292,842.5999800,1467.1000000,621.5000000,0.0000000,0.0000000,183.9990000); //object(gasstatiohut) (9)
	CreateDynamicObject(11292,841.7999900,1471.0000000,622.5999800,0.0000000,0.0000000,183.9990000); //object(gasstatiohut) (14)
	CreateDynamicObject(11292,841.7000100,1473.3000000,623.7999900,0.0000000,0.0000000,183.9990000); //object(gasstatiohut) (15)
	CreateDynamicObject(11292,841.5999800,1474.7000000,625.0000000,0.0000000,0.0000000,181.9990000); //object(gasstatiohut) (16)	

		// race track spade
	CreateDynamicObject(8172,3946.500000,1705.800048,10.199999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8172,3946.500000,1866.900024,10.199999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8172,3946.500000,2028.199951,10.199999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8172,3946.500000,2189.500000,10.199999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8172,3946.500000,2350.600097,10.199999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8172,3946.399902,2511.699951,10.199999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8343,3970.500000,2640.100097,10.199999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8343,4058.100585,2678.700195,10.199999,0.000000,0.000000,181.533004,0);
	CreateDynamicObject(8172,4078.699951,2808.000000,10.199999,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,4074.399902,2968.399902,10.199999,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,4070.100097,3128.800048,10.199999,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,4065.800048,3289.300048,10.199999,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8344,4039.399902,3431.600097,10.100000,0.000000,0.000000,180.000000,0);
	CreateDynamicObject(8344,3930.199951,3447.699951,10.100000,0.000000,0.000000,269.265991,0);
	CreateDynamicObject(8172,3892.199951,3324.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3896.500000,3164.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3900.800048,3005.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3905.100097,2845.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8343,3885.200195,2718.700195,10.100000,0.000000,0.000000,182.136993,0);
	CreateDynamicObject(8172,3863.500000,2626.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3867.899902,2466.399902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3872.100585,2310.600585,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3876.100097,2160.300048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3880.399902,2000.099975,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3884.699951,1841.099975,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3888.899902,1680.900024,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8344,3914.800048,1617.099975,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(8172,3946.500000,1638.000000,10.199999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(7520,3981.100585,1641.700195,10.100000,0.000000,0.000000,268.462005,0);
	CreateDynamicObject(973,3977.399902,1612.000000,10.899999,0.000000,0.000000,60.000000,0);
	CreateDynamicObject(973,3972.200195,1604.799804,10.899999,0.000000,0.000000,47.729999,0);
	CreateDynamicObject(973,3969.500000,1601.800048,10.899999,0.000000,0.000000,47.729999,0);
	CreateDynamicObject(973,3978.000000,1659.300048,10.899999,0.000000,0.000000,132.031005,0);
	CreateDynamicObject(973,3971.199951,1665.300048,10.899999,0.000000,0.000000,145.822006,0);
	CreateDynamicObject(973,3970.299804,1665.900390,10.899999,0.000000,0.000000,145.822006,0);
	CreateDynamicObject(8838,3966.300048,1615.599975,8.600000,0.000000,0.000000,83.065002,0);
	CreateDynamicObject(8838,3962.000000,1598.099609,8.600000,0.000000,0.000000,46.273998,0);
	CreateDynamicObject(8838,3980.800048,1623.199951,8.600000,0.000000,0.000000,60.068000,0);
	CreateDynamicObject(8838,3975.199951,1621.800048,8.600000,0.000000,0.000000,60.068000,0);
	CreateDynamicObject(8838,3975.500000,1631.300048,8.600000,0.000000,0.000000,60.068000,0);
	CreateDynamicObject(8838,3976.100097,1640.500000,8.600000,0.000000,0.000000,60.068000,0);
	CreateDynamicObject(8838,3968.899902,1644.800048,8.600000,0.000000,0.000000,43.208999,0);
	CreateDynamicObject(8838,3970.000000,1642.000000,8.600000,0.000000,0.000000,43.203998,0);
	CreateDynamicObject(8838,3971.399902,1637.900024,8.600000,0.000000,0.000000,43.203998,0);
	CreateDynamicObject(8838,3965.600097,1648.199951,8.600000,0.000000,0.000000,43.203998,0);
	CreateDynamicObject(8838,3964.199951,1649.800048,8.600000,0.000000,0.000000,43.203998,0);
	CreateDynamicObject(8838,3964.200195,1649.799804,8.600000,0.000000,0.000000,56.998001,0);
	CreateDynamicObject(8838,3960.000000,1652.800048,8.600000,0.000000,0.000000,56.997001,0);
	CreateDynamicObject(8838,3958.300048,1653.699951,8.600000,0.000000,0.000000,56.997001,0);
	CreateDynamicObject(973,3967.100097,1629.800048,10.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(973,3967.100097,1639.000000,10.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(973,3967.100097,1647.500000,10.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(973,3967.100097,1649.699951,10.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(1568,3967.000000,1654.400024,8.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1568,3966.500000,1668.500000,8.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1568,3966.299804,1598.400390,8.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1568,3967.000000,1615.199951,8.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(973,3967.100097,1621.099975,10.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(973,3967.100585,1619.900390,10.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(1504,3979.899902,1619.800048,10.100000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(1504,3979.899902,1622.800048,10.100000,0.000000,0.000000,269.045013,0);
	CreateDynamicObject(2714,3979.600097,1621.300048,13.100000,0.000000,0.000000,272.337005,0);
	CreateDynamicObject(6959,3985.000000,1661.400390,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3984.899902,1622.699951,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3984.899902,1606.300048,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(10828,3984.199951,1681.900024,21.600000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(10828,3987.899902,1681.900024,21.600000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(10828,4004.300048,1665.500000,21.600000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,4004.199951,1631.099975,21.600000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,4004.300048,1603.000000,21.600000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,3988.000000,1586.500000,21.600000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(10828,3983.300048,1586.599975,21.600000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3406,3969.300048,1682.099975,20.200000,0.000000,270.000000,0.000000,0);
	CreateDynamicObject(3406,3969.300048,1682.099975,13.300000,0.000000,270.000000,0.000000,0);
	CreateDynamicObject(3406,3968.300048,1586.500000,13.300000,0.000000,270.000000,0.000000,0);
	CreateDynamicObject(3406,3968.300048,1586.500000,20.200000,0.000000,270.000000,0.000000,0);
	CreateDynamicObject(8838,3957.800048,1669.500000,8.600000,0.000000,0.000000,56.997001,0);
	CreateDynamicObject(16133,3970.100097,1564.199951,9.800000,0.000000,0.000000,180.652999,0);
	CreateDynamicObject(16133,3947.699951,1551.599975,9.800000,0.000000,0.000000,86.930000,0);
	CreateDynamicObject(16133,3908.100097,1554.099975,9.800000,0.000000,0.000000,62.407001,0);
	CreateDynamicObject(16133,3879.699951,1578.500000,9.800000,0.000000,0.000000,37.880001,0);
	CreateDynamicObject(16133,3865.300048,1614.199951,9.800000,0.000000,0.000000,2.624000,0);
	CreateDynamicObject(16133,3864.199951,1651.599975,9.800000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3862.399902,1689.000000,9.800000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3861.800048,1722.800048,9.800000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3860.800048,1757.199951,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3860.500000,1785.199951,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3859.399902,1816.599975,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3858.100097,1849.500000,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3857.399902,1882.199951,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3856.399902,1916.599975,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3855.399902,1952.599975,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3854.399902,1987.000000,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3853.699951,2020.800048,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3852.600097,2052.600097,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3851.800048,2086.800048,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3851.500000,2120.399902,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3850.300048,2154.399902,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3849.500000,2190.000000,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3848.000000,2226.399902,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3847.399902,2261.800048,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3846.399902,2296.199951,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3845.300048,2328.600097,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3844.399902,2361.000000,9.600000,0.000000,0.000000,2.619999,0);
	CreateDynamicObject(16133,3844.100097,2393.000000,9.600000,0.000000,0.000000,1.088000,0);
	CreateDynamicObject(16133,3842.399902,2435.899902,9.600000,0.000000,0.000000,1.082000,0);
	CreateDynamicObject(16133,3841.199951,2466.600097,9.600000,0.000000,0.000000,1.082000,0);
	CreateDynamicObject(16133,3841.100097,2499.399902,9.600000,0.000000,0.000000,1.082000,0);
	CreateDynamicObject(16133,3840.199951,2538.300048,9.600000,0.000000,0.000000,1.082000,0);
	CreateDynamicObject(16133,3838.399902,2583.199951,9.600000,0.000000,0.000000,1.082000,0);
	CreateDynamicObject(16133,3837.500000,2622.100097,9.600000,0.000000,0.000000,1.082000,0);
	CreateDynamicObject(16133,3836.500000,2660.100097,9.600000,0.000000,0.000000,1.082000,0);
	CreateDynamicObject(16133,3835.399902,2698.100097,9.600000,0.000000,0.000000,1.082000,0);
	CreateDynamicObject(16133,3846.699951,2722.000000,9.600000,0.000000,0.000000,251.962005,0);
	CreateDynamicObject(16133,3883.000000,2737.699951,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3875.800048,2734.899902,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3880.699951,2782.100097,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3879.899902,2822.800048,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3878.699951,2869.199951,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3877.500000,2915.399902,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3876.500000,2961.800048,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3874.500000,3005.300048,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3873.899902,3047.800048,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3872.100097,3090.500000,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3870.699951,3133.399902,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3870.899902,3172.899902,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3870.199951,3218.199951,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3869.600097,3261.899902,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3868.899902,3307.800048,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3867.800048,3352.100097,9.600000,0.000000,0.000000,359.472991,0);
	CreateDynamicObject(16133,3864.699951,3395.199951,9.600000,0.000000,0.000000,5.603000,0);
	CreateDynamicObject(16133,3863.000000,3441.500000,9.600000,0.000000,0.000000,347.210998,0);
	CreateDynamicObject(16133,3879.100097,3472.600097,9.600000,0.000000,0.000000,314.794006,0);
	CreateDynamicObject(16133,3910.000000,3493.100097,9.600000,0.000000,0.000000,281.072998,0);
	CreateDynamicObject(16133,3950.600097,3496.600097,9.600000,0.000000,0.000000,267.274993,0);
	CreateDynamicObject(16133,4000.399902,3498.199951,9.600000,0.000000,0.000000,276.466003,0);
	CreateDynamicObject(16133,4043.000000,3495.899902,9.600000,0.000000,0.000000,238.727005,0);
	CreateDynamicObject(16133,4079.000000,3466.100097,9.600000,0.000000,0.000000,208.069000,0);
	CreateDynamicObject(16133,4088.100097,3428.899902,9.600000,0.000000,0.000000,180.477005,0);
	CreateDynamicObject(16133,4087.199951,3379.600097,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4089.300048,3336.000000,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4090.600097,3290.500000,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4091.899902,3246.500000,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4093.600097,3200.500000,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4095.300048,3152.300048,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4096.200195,3110.399902,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4097.799804,3065.100097,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4098.799804,3019.800048,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4099.899902,2973.300048,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4101.299804,2928.000000,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4102.299804,2881.699951,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4103.200195,2840.000000,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4104.200195,2797.500000,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4105.200195,2755.000000,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4106.100097,2714.500000,9.600000,0.000000,0.000000,180.472000,0);
	CreateDynamicObject(16133,4103.799804,2673.199951,9.600000,0.000000,0.000000,159.744003,0);
	CreateDynamicObject(16133,4085.300048,2645.000000,9.600000,0.000000,0.000000,126.023002,0);
	CreateDynamicObject(16133,4051.699951,2627.800048,9.600000,0.000000,0.000000,96.898002,0);
	CreateDynamicObject(16133,4039.899902,2623.899902,9.600000,0.000000,0.000000,78.501998,0);
	CreateDynamicObject(16133,4017.000000,2628.000000,9.600000,0.000000,0.000000,55.507999,0);
	CreateDynamicObject(16133,3972.199951,2613.399902,9.600000,0.000000,0.000000,176.582992,0);
	CreateDynamicObject(16133,3985.199951,2626.199951,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3976.800048,2622.399902,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3972.600097,2571.600097,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3972.399902,2529.500000,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3972.500000,2482.500000,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3971.399902,2442.000000,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3970.800048,2398.500000,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3970.500000,2351.699951,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3970.300048,2303.800048,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3971.899902,2259.000000,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3970.500000,2210.300048,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3969.699951,2161.600097,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3970.100097,2116.100097,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3969.800048,2069.199951,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3970.699951,2022.400024,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3971.000000,1977.699951,9.600000,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3970.300048,1932.800048,9.199999,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3969.600097,1888.300048,9.199999,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3969.000000,1847.800048,9.199999,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3968.300048,1801.300048,9.199999,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3967.800048,1766.699951,9.199999,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3967.600097,1756.199951,9.199999,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3967.000000,1718.199951,9.199999,0.000000,0.000000,176.578002,0);
	CreateDynamicObject(16133,3981.000000,1691.500000,9.199999,0.000000,0.000000,274.894012,0);
	CreateDynamicObject(6959,3912.100585,1604.599609,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3914.199951,1644.199951,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3918.000000,1682.000000,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3917.800048,1721.199951,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3917.600097,1759.900024,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3917.399902,1798.800048,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3917.199951,1837.900024,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3917.000000,1876.599975,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3916.800048,1915.099975,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3916.600097,1951.699951,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3916.399902,1992.400024,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3916.500000,1974.199951,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3916.199951,2032.099975,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3915.500000,2070.500000,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3914.899902,2105.300048,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3914.199951,2143.699951,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3913.600585,2176.299804,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3912.900390,2213.100585,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3912.100585,2253.600585,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3911.399902,2289.600097,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3910.700195,2326.000000,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3910.100585,2359.200195,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3909.300048,2401.899902,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3909.600097,2385.100097,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3908.600097,2439.899902,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3907.899902,2479.300048,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3907.199951,2515.500000,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3906.000000,2530.399902,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3905.600097,2569.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3903.400390,2609.700195,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3929.300048,2583.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3911.199951,2617.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3893.200195,2642.100585,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3919.500000,2643.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3891.199951,2671.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3916.699951,2683.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3953.500000,2684.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3953.600097,2683.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3994.199951,2685.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4032.399902,2686.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4055.500000,2690.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4041.500000,2724.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4000.800048,2723.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3960.300048,2722.199951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3939.500000,2721.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3937.899902,2758.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3978.699951,2759.899902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4020.000000,2762.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4060.500000,2763.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4039.000000,2802.899902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3998.699951,2801.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3979.699951,2777.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3941.500000,2776.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3959.600097,2800.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3926.800048,2800.300048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3941.000000,2838.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3979.399902,2839.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4014.400390,2840.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4045.000000,2840.900390,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(4285,4031.899902,2903.699951,9.119999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(4285,4033.100097,3031.199951,9.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(4285,4025.600097,3156.800048,9.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(4285,4018.600097,3285.699951,9.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(4285,4008.000000,3409.899902,9.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(4285,4013.799804,3453.600585,9.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(2774,3958.199951,1681.199951,10.899999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(2774,3931.699951,1681.300048,10.899999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(2774,3945.699951,1681.199951,22.899999,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3943.399902,1681.300048,22.899999,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3945.600097,1681.199951,18.200000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3945.600097,1681.199951,19.600000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3945.600097,1681.199951,21.000000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3945.600097,1681.199951,21.799999,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(1262,3943.800048,1680.300048,18.200000,0.000000,0.000000,180.000000,0);
	CreateDynamicObject(1262,3944.199951,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3944.600097,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3945.000000,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3945.399902,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3945.800048,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3946.199951,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3946.600097,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3947.000000,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3947.399902,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3947.800048,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3948.199951,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3948.699951,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3949.199951,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3949.699951,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3950.199951,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3943.300048,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3942.800048,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3942.300048,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3941.800048,1680.300048,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3941.300048,1680.199951,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3940.800048,1680.099975,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(1262,3940.300048,1680.099975,18.200000,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(16000,3945.299804,1680.299804,19.000000,337.006011,0.000000,180.647994,0);
	CreateDynamicObject(2774,3945.000000,1681.199951,21.799999,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3945.000000,1681.199951,20.600000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3945.000000,1681.199951,19.200000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3945.000000,1681.199951,18.200000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3946.199951,1681.199951,20.600000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3946.199951,1681.199951,21.399999,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3946.199951,1681.199951,19.200000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3946.199951,1681.199951,18.100000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(2774,3946.199951,1681.199951,22.899999,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(16000,3870.300048,2708.699951,15.899999,19.924999,0.000000,194.442001,0);
	CreateDynamicObject(16000,4018.800048,3492.399902,9.000000,0.000000,0.000000,186.777999,0);
	CreateDynamicObject(3115,3913.300048,1981.699951,9.800000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3115,3913.300048,2000.300048,9.800000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3115,3913.399902,2018.800048,9.800000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3115,3913.399902,2037.500000,9.800000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3437,3918.600585,1975.400390,16.000000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3918.600585,1975.400390,26.799999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3906.700195,2044.700195,15.399999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3906.699951,2044.699951,25.600000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3907.500000,2005.900024,14.199999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3907.500000,2005.900024,24.899999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3907.699951,2001.599975,27.500000,0.000000,64.000000,90.000000,0);
	CreateDynamicObject(3437,3907.699951,2001.800048,12.600000,0.000000,118.000000,90.000000,0);
	CreateDynamicObject(3437,3908.300048,1991.199951,23.000000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3115,3917.299804,2037.900390,18.500000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(3115,3917.200195,2019.500000,18.500000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(3115,3917.199951,2001.000000,18.500000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(3115,3917.199951,1982.500000,18.500000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(3115,3909.000000,1982.400390,18.500000,0.000000,270.000000,0.000000,0);
	CreateDynamicObject(3115,3909.000000,2000.800048,18.500000,0.000000,270.000000,0.000000,0);
	CreateDynamicObject(3115,3908.899902,2019.199951,18.500000,0.000000,270.000000,0.000000,0);
	CreateDynamicObject(3115,3908.899902,2037.800048,18.500000,0.000000,270.000000,0.000000,0);
	CreateDynamicObject(3095,3913.000000,1977.500000,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.100585,1985.400390,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.100097,1993.900024,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.100097,2002.400024,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.100585,2010.900390,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.100585,2019.299804,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.000000,2024.400024,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.000000,2033.000000,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.000000,2041.699951,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.000000,2042.699951,28.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.199951,2047.300048,24.200000,90.000000,180.000000,180.000000,0);
	CreateDynamicObject(3095,3913.199951,2047.300048,9.699999,90.000000,179.994995,179.994995,0);
	CreateDynamicObject(3095,3913.000000,1973.199951,8.699999,90.000000,0.000000,180.000000,0);
	CreateDynamicObject(3095,3913.000000,1973.199951,22.500000,90.000000,0.000000,179.994995,0);
	CreateDynamicObject(3095,3913.000000,1973.199951,24.600000,90.000000,0.000000,179.994995,0);
	CreateDynamicObject(1553,3961.100097,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3958.500000,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3955.899902,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3953.699951,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3951.100097,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3948.699951,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3946.300048,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3943.699951,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3941.500000,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3938.899902,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3936.100097,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3934.500000,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3931.899902,1668.699951,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3961.100097,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3958.399902,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3955.600097,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3952.899902,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3950.199951,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3947.399902,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3945.000000,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3942.399902,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3940.000000,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3937.399902,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3935.000000,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3932.399902,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1553,3931.899902,1669.099975,9.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3911.200195,1969.000000,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.300048,1969.000000,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3914.899902,2040.800048,10.600000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3911.000000,2040.800048,10.600000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(11495,3909.600097,2047.300048,28.899999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(11495,3909.600097,2068.000000,28.899999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(11495,3909.600097,2087.800048,22.600000,324.597991,0.000000,0.000000,0);
	CreateDynamicObject(11495,3909.600585,2099.600585,14.199999,324.596984,0.000000,0.000000,0);
	CreateDynamicObject(13590,3912.000000,2166.899902,11.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8375,3910.600585,2328.900390,12.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8375,3909.699951,2325.399902,12.000000,0.000000,0.000000,89.271003,0);
	CreateDynamicObject(8375,3909.699951,2323.399902,12.000000,0.000000,0.000000,89.268997,0);
	CreateDynamicObject(8375,3909.699951,2321.000000,12.000000,0.000000,0.000000,89.268997,0);
	CreateDynamicObject(8375,3909.699951,2318.800048,12.000000,0.000000,0.000000,89.268997,0);
	CreateDynamicObject(8375,3909.699951,2329.100097,12.000000,0.000000,0.000000,89.268997,0);
	CreateDynamicObject(8375,3909.699951,2332.600097,12.000000,0.000000,0.000000,89.268997,0);
	CreateDynamicObject(8375,3909.700195,2334.600585,12.000000,0.000000,0.000000,89.263999,0);
	CreateDynamicObject(3625,3907.699951,2417.699951,12.699999,0.000000,0.000000,90.728996,0);
	CreateDynamicObject(1634,3906.800048,2464.899902,11.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3906.699951,2485.500000,11.000000,0.000000,0.000000,181.608001,0);
	CreateDynamicObject(13592,3906.300048,2522.500000,20.000000,0.000000,355.402008,10.729000,0);
	CreateDynamicObject(13592,3906.199951,2527.600097,20.000000,0.000000,355.397003,10.727999,0);
	CreateDynamicObject(13592,3906.000000,2533.500000,20.000000,0.000000,355.397003,10.727999,0);
	CreateDynamicObject(13592,3905.699951,2539.399902,20.000000,0.000000,355.397003,10.727999,0);
	CreateDynamicObject(13592,3905.500000,2545.000000,20.000000,0.000000,355.397003,10.727999,0);
	CreateDynamicObject(13592,3905.199951,2550.899902,20.000000,0.000000,355.397003,10.727999,0);
	CreateDynamicObject(13592,3904.899902,2556.600097,20.000000,0.000000,355.397003,10.727999,0);
	CreateDynamicObject(13592,3904.699951,2560.699951,20.000000,0.000000,355.397003,10.727999,0);
	CreateDynamicObject(13592,3904.399902,2567.800048,20.000000,0.000000,355.397003,10.727999,0);
	CreateDynamicObject(13592,3904.199951,2573.500000,20.000000,0.000000,355.397003,10.727999,0);
	CreateDynamicObject(13592,3903.899902,2578.000000,20.000000,0.000000,3.059999,10.727999,0);
	CreateDynamicObject(13592,3903.699951,2582.699951,20.000000,0.000000,3.059999,10.727999,0);
	CreateDynamicObject(13592,3903.399902,2588.899902,20.000000,0.000000,3.059999,10.727999,0);
	CreateDynamicObject(13641,3906.199951,2488.500000,10.100000,0.000000,0.000000,271.105987,0);
	CreateDynamicObject(1225,3906.800048,2475.800048,14.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1225,3906.800048,2475.800048,25.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1225,3901.800048,2475.699951,20.000000,0.000000,271.759002,0.000000,0);
	CreateDynamicObject(1225,3913.100097,2476.100097,20.000000,0.000000,271.757995,0.000000,0);
	CreateDynamicObject(3461,3906.800048,2475.699951,14.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3461,3907.500000,2476.000000,12.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3461,3908.500000,2476.000000,12.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3461,3909.300048,2476.000000,12.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3461,3905.600097,2475.899902,12.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3461,3904.399902,2476.000000,12.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3461,3903.199951,2476.100097,12.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8550,1986.900024,917.599975,21.200000,341.608001,0.000000,4.598000,0);
	CreateDynamicObject(1504,1987.599975,909.599975,19.799999,341.608001,0.000000,4.598000,0);
	CreateDynamicObject(1504,1987.699951,909.700012,19.799999,16.858999,0.000000,183.430999,0);
	CreateDynamicObject(2714,1987.500000,910.500000,22.600000,0.000000,0.000000,4.598000,0);
	CreateDynamicObject(2714,1995.400024,911.599975,22.600000,0.000000,0.000000,360.000000,0);
	CreateDynamicObject(2773,1986.199951,908.700012,20.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(2773,1986.199951,906.799987,20.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(2773,1989.099975,908.700012,20.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(2773,1989.099975,906.799987,20.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1568,1989.099975,905.900024,17.200000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1568,1986.199951,905.799987,17.200000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1568,1986.199951,907.799987,17.700000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1568,1989.099975,907.799987,17.700000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3912.100585,2251.200195,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(973,3948.799804,2671.100585,10.899999,0.000000,0.000000,222.335998,0);
	CreateDynamicObject(973,3956.199951,2676.600097,10.899999,0.000000,0.000000,211.606994,0);
	CreateDynamicObject(973,3964.399902,2680.600097,10.899999,0.000000,0.000000,200.873992,0);
	CreateDynamicObject(973,3973.000000,2683.600097,10.899999,0.000000,0.000000,197.802993,0);
	CreateDynamicObject(973,3981.899902,2685.699951,10.899999,0.000000,0.000000,188.602005,0);
	CreateDynamicObject(973,3990.899902,2685.899902,10.899999,0.000000,0.000000,173.270004,0);
	CreateDynamicObject(973,4000.100097,2684.800048,10.899999,0.000000,0.000000,173.264999,0);
	CreateDynamicObject(973,4009.000000,2682.500000,10.899999,0.000000,0.000000,157.938995,0);
	CreateDynamicObject(973,4016.800048,2677.800048,10.899999,0.000000,0.000000,139.542007,0);
	CreateDynamicObject(973,4024.100097,2672.100097,10.899999,0.000000,0.000000,144.134994,0);
	CreateDynamicObject(973,4032.300048,2668.300048,10.899999,0.000000,0.000000,165.591995,0);
	CreateDynamicObject(973,4041.199951,2667.899902,10.899999,0.000000,0.000000,190.113998,0);
	CreateDynamicObject(973,4049.800048,2671.199951,10.899999,0.000000,0.000000,211.570007,0);
	CreateDynamicObject(973,4056.899902,2677.100097,10.899999,0.000000,0.000000,228.427993,0);
	CreateDynamicObject(973,4061.700195,2684.900390,10.899999,0.000000,0.000000,248.350997,0);
	CreateDynamicObject(973,3897.100097,2683.699951,10.899999,0.000000,0.000000,33.178001,0);
	CreateDynamicObject(973,3904.199951,2689.399902,10.899999,0.000000,0.000000,43.902000,0);
	CreateDynamicObject(973,3910.699951,2695.899902,10.899999,0.000000,0.000000,46.966999,0);
	CreateDynamicObject(973,3916.300048,2703.199951,10.899999,0.000000,0.000000,57.694999,0);
	CreateDynamicObject(973,3920.200195,2711.500000,10.899999,0.000000,0.000000,71.487998,0);
	CreateDynamicObject(973,3889.100097,2679.300048,10.899999,0.000000,0.000000,23.976999,0);
	CreateDynamicObject(973,3882.699951,2673.199951,10.899999,0.000000,0.000000,62.287998,0);
	CreateDynamicObject(973,3880.899902,2664.300048,10.899999,0.000000,0.000000,94.472999,0);
	CreateDynamicObject(973,4009.800048,3458.899902,10.899999,0.000000,0.000000,16.313999,0);
	CreateDynamicObject(973,4018.899902,3460.199951,10.899999,0.000000,0.000000,0.982999,0);
	CreateDynamicObject(973,4027.899902,3458.899902,10.899999,0.000000,0.000000,342.591003,0);
	CreateDynamicObject(973,4035.800048,3454.699951,10.899999,0.000000,0.000000,321.130004,0);
	CreateDynamicObject(973,4042.300048,3448.399902,10.899999,0.000000,0.000000,310.395996,0);
	CreateDynamicObject(973,4046.500000,3440.399902,10.899999,0.000000,0.000000,285.868988,0);
	CreateDynamicObject(973,4047.899902,3431.300048,10.899999,0.000000,0.000000,272.070007,0);
	CreateDynamicObject(973,4048.199951,3422.699951,10.899999,0.000000,0.000000,272.065002,0);
	CreateDynamicObject(973,4048.300048,3413.899902,10.899999,0.000000,0.000000,269.000000,0);
	CreateDynamicObject(973,4048.200195,3404.799804,10.899999,0.000000,0.000000,268.994995,0);
	CreateDynamicObject(973,4001.699951,3454.899902,10.899999,0.000000,0.000000,36.234001,0);
	CreateDynamicObject(973,3993.500000,3452.100097,10.899999,0.000000,0.000000,0.981999,0);
	CreateDynamicObject(973,3984.399902,3451.899902,10.899999,0.000000,0.000000,0.977999,0);
	CreateDynamicObject(973,3975.600097,3451.800048,10.899999,0.000000,0.000000,0.977999,0);
	CreateDynamicObject(973,3966.699951,3451.699951,10.899999,0.000000,0.000000,0.977999,0);
	CreateDynamicObject(973,3958.100097,3451.800048,10.899999,0.000000,0.000000,357.911987,0);
	CreateDynamicObject(973,3949.300048,3452.199951,10.899999,0.000000,0.000000,357.907012,0);
	CreateDynamicObject(973,3940.600097,3452.500000,10.899999,0.000000,0.000000,357.907012,0);
	CreateDynamicObject(973,3931.800048,3452.800048,10.899999,0.000000,0.000000,357.907012,0);
	CreateDynamicObject(973,3922.699951,3451.899902,10.899999,0.000000,0.000000,14.765999,0);
	CreateDynamicObject(973,3914.800048,3447.699951,10.899999,0.000000,0.000000,40.820999,0);
	CreateDynamicObject(973,3908.300048,3441.000000,10.899999,0.000000,0.000000,51.548000,0);
	CreateDynamicObject(973,3903.800048,3433.000000,10.899999,0.000000,0.000000,69.940002,0);
	CreateDynamicObject(973,3903.399902,3424.199951,10.899999,0.000000,0.000000,105.190002,0);
	CreateDynamicObject(973,3906.600097,3415.600097,10.899999,0.000000,0.000000,114.385002,0);
	CreateDynamicObject(973,3908.899902,3406.800048,10.899999,0.000000,0.000000,95.991996,0);
	CreateDynamicObject(973,3909.699951,3397.699951,10.899999,0.000000,0.000000,94.455001,0);
	CreateDynamicObject(973,3922.699951,1596.900024,10.899999,0.000000,0.000000,151.022003,0);
	CreateDynamicObject(973,3915.800048,1602.800048,10.899999,0.000000,0.000000,128.027999,0);
	CreateDynamicObject(973,3911.500000,1610.699951,10.899999,0.000000,0.000000,108.098999,0);
	CreateDynamicObject(973,3910.100585,1619.500000,10.899999,0.000000,0.000000,89.697998,0);
	CreateDynamicObject(973,3966.500000,1593.800048,10.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(973,3966.500000,1592.000000,10.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(973,3966.399902,1682.300048,10.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(973,3926.600097,1599.099975,10.800000,0.000000,0.000000,270.729003,0);
	CreateDynamicObject(973,3926.500000,1608.300048,10.800000,0.000000,0.000000,270.725006,0);
	CreateDynamicObject(973,3926.399902,1616.900024,10.800000,0.000000,0.000000,270.725006,0);
	CreateDynamicObject(979,3917.199951,2017.800048,29.299999,0.000000,0.000000,90.652999,0);
	CreateDynamicObject(979,3917.100097,2027.099975,29.299999,0.000000,0.000000,90.648002,0);
	CreateDynamicObject(979,3917.000000,2036.000000,29.299999,0.000000,0.000000,90.652999,0);
	CreateDynamicObject(979,3916.899902,2042.500000,29.299999,0.000000,0.000000,90.648002,0);
	CreateDynamicObject(979,3917.300048,2008.599975,29.299999,0.000000,0.000000,90.648002,0);
	CreateDynamicObject(979,3917.399902,1999.699951,29.299999,0.000000,0.000000,90.648002,0);
	CreateDynamicObject(979,3917.500000,1990.900024,29.299999,0.000000,0.000000,90.648002,0);
	CreateDynamicObject(979,3917.600097,1981.599975,29.299999,0.000000,0.000000,90.648002,0);
	CreateDynamicObject(979,3917.600097,1977.699951,29.299999,0.000000,0.000000,90.648002,0);
	CreateDynamicObject(979,3908.699951,2074.199951,29.500000,0.000000,0.000000,270.880004,0);
	CreateDynamicObject(979,3908.800048,2064.800048,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3908.899902,2055.500000,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.000000,2046.099975,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.100097,2036.900024,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.199951,2027.800048,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.300048,2018.500000,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.399902,2009.300048,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.500000,2000.199951,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.600097,1991.000000,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.700195,1981.799804,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.699951,1977.599975,29.500000,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(1634,3912.500000,2042.800048,28.200000,0.000000,0.000000,346.205993,0);
	CreateDynamicObject(1634,3915.199951,2042.099975,28.200000,0.000000,0.000000,346.200988,0);
	CreateDynamicObject(1634,3911.899902,1975.400024,30.100000,0.000000,0.000000,179.919998,0);
	CreateDynamicObject(1634,3915.500000,1975.400024,30.100000,0.000000,0.000000,179.917999,0);
	CreateDynamicObject(1634,3913.300048,1967.699951,34.500000,9.196000,0.000000,179.917999,0);
	CreateDynamicObject(1634,3911.899902,1967.699951,34.500000,9.196000,0.000000,179.912002,0);
	CreateDynamicObject(1634,3915.500000,1967.699951,34.500000,9.196000,0.000000,179.912002,0);
	CreateDynamicObject(1634,3915.399902,1960.500000,39.900001,15.326000,0.000000,179.912002,0);
	CreateDynamicObject(1634,3911.899902,1960.500000,39.900001,15.326000,0.000000,179.912002,0);
	CreateDynamicObject(1634,3911.800048,1954.400024,46.599998,29.120000,0.000000,179.912002,0);
	CreateDynamicObject(1634,3915.399902,1954.400024,46.599998,29.118999,0.000000,179.912002,0);
	CreateDynamicObject(3851,3982.300048,1672.599975,12.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3851,3976.699951,1678.000000,12.100000,0.000000,0.000000,91.457000,0);
	CreateDynamicObject(3851,3976.699951,1667.000000,12.100000,0.000000,0.000000,91.456001,0);
	CreateDynamicObject(3851,3980.399902,1672.500000,14.100000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(3851,3976.500000,1672.500000,14.100000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(3851,3973.000000,1672.500000,14.100000,0.000000,90.000000,0.000000,0);
	CreateDynamicObject(3498,3971.299804,1673.700195,14.000000,0.000000,90.000000,90.000000,0);
	CreateDynamicObject(3498,3971.299804,1671.299804,14.000000,0.000000,90.000000,90.000000,0);
	CreateDynamicObject(3499,3971.300048,1678.000000,8.899999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3499,3971.299804,1666.900390,12.399999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1568,3966.399902,1677.599975,8.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3578,3966.699951,1663.300048,9.399999,0.000000,0.000000,89.925003,0);
	CreateDynamicObject(3578,3966.800048,1659.099975,9.399999,0.000000,0.000000,91.456001,0);
	CreateDynamicObject(3578,3966.699951,1659.099975,9.399999,0.000000,0.000000,89.922996,0);
	CreateDynamicObject(3578,3966.699951,1610.099975,9.399999,0.000000,0.000000,89.922996,0);
	CreateDynamicObject(3578,3966.699951,1604.300048,9.399999,0.000000,0.000000,89.917999,0);
	CreateDynamicObject(3578,3966.699951,1603.500000,9.399999,0.000000,0.000000,89.917999,0);
	CreateDynamicObject(973,3971.100097,1678.000000,10.800000,0.000000,0.000000,181.231002,0);
	CreateDynamicObject(973,3971.100097,1667.300048,10.899999,0.000000,0.000000,348.308990,0);
	CreateDynamicObject(10281,3970.299804,1672.400390,15.899999,0.000000,0.000000,266.934997,0);
	CreateDynamicObject(3498,3971.300048,1671.300048,15.000000,0.000000,90.000000,90.000000,0);
	CreateDynamicObject(3498,3971.299804,1671.299804,16.200000,0.000000,90.000000,90.000000,0);
	CreateDynamicObject(3498,3971.299804,1671.299804,17.399999,0.000000,90.000000,90.000000,0);
	CreateDynamicObject(3498,3971.300048,1673.300048,15.000000,0.000000,90.000000,90.000000,0);
	CreateDynamicObject(3498,3971.299804,1673.099609,16.200000,0.000000,90.000000,90.000000,0);
	CreateDynamicObject(3498,3971.299804,1673.299804,17.399999,0.000000,90.000000,90.000000,0);
	CreateDynamicObject(3499,3971.299804,1678.000000,12.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3851,3971.500000,1672.599975,15.899999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3578,3966.700195,1673.000000,9.399999,0.000000,0.000000,89.917999,0);
	CreateDynamicObject(7909,3950.699951,2675.199951,13.399999,0.000000,0.000000,39.924999,0);
	CreateDynamicObject(7909,3950.800048,2675.199951,13.399999,0.000000,0.000000,219.119995,0);
	CreateDynamicObject(2592,3926.300048,1642.500000,10.100000,0.000000,0.000000,270.000000,0);
	CreateDynamicObject(2592,3926.300048,1637.400024,10.100000,0.000000,0.000000,270.000000,0);
	CreateDynamicObject(2592,3926.300048,1632.099975,10.100000,0.000000,0.000000,270.000000,0);
	CreateDynamicObject(2592,3926.300048,1626.599975,10.100000,0.000000,0.000000,270.000000,0);
	CreateDynamicObject(2592,3926.300048,1647.400024,10.100000,0.000000,0.000000,270.000000,0);
	CreateDynamicObject(2592,3926.300048,1652.699951,10.100000,0.000000,0.000000,270.000000,0);
	CreateDynamicObject(2592,3926.300048,1658.400024,10.100000,0.000000,0.000000,270.000000,0);
	CreateDynamicObject(2592,3926.300048,1676.699951,10.100000,0.000000,0.000000,270.000000,0);
	CreateDynamicObject(2592,3926.300048,1681.400024,10.100000,0.000000,0.000000,270.000000,0);
	CreateDynamicObject(973,3926.399902,1620.000000,10.800000,0.000000,0.000000,270.725006,0);
	CreateDynamicObject(973,3926.399902,1688.300048,10.800000,0.000000,0.000000,270.725006,0);
	CreateDynamicObject(1634,3915.399902,1949.599975,54.000000,35.250000,0.000000,179.912002,0);
	CreateDynamicObject(1634,3911.800048,1949.599975,54.000000,35.250000,0.000000,179.912002,0);
	CreateDynamicObject(1634,3915.399902,1946.199951,62.099998,49.043998,0.000000,179.912002,0);
	CreateDynamicObject(1634,3911.800048,1946.199951,62.099998,49.042999,0.000000,179.912002,0);
	CreateDynamicObject(3095,3913.600097,1941.500000,65.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3095,3913.600097,1932.800048,65.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3916.100097,1924.800048,66.800003,308.385009,0.000000,0.637000,0);
	CreateDynamicObject(1634,3912.000000,1924.699951,66.800003,308.381011,0.000000,0.632000,0);
	CreateDynamicObject(1634,3911.300048,1924.699951,66.800003,308.381011,0.000000,0.632000,0);
	CreateDynamicObject(979,3909.199951,1941.300048,66.599998,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3909.300048,1932.900024,66.599998,0.000000,0.000000,270.878997,0);
	CreateDynamicObject(979,3918.100097,1933.199951,66.599998,0.000000,0.000000,89.271003,0);
	CreateDynamicObject(979,3918.100097,1941.099975,66.599998,0.000000,0.000000,89.268997,0);
	CreateDynamicObject(3437,3918.399902,1979.599975,30.299999,0.000000,284.000000,90.000000,0);
	CreateDynamicObject(3437,3918.399902,1979.599975,25.799999,0.000000,233.996994,90.000000,0);
	CreateDynamicObject(3437,3918.399902,1978.900024,18.299999,0.000000,333.992004,90.000000,0);
	CreateDynamicObject(3437,3918.300048,1981.300048,13.300000,0.000000,333.989990,90.000000,0);
	CreateDynamicObject(3437,3918.399902,1989.000000,13.300000,0.000000,32.000000,90.000000,0);
	CreateDynamicObject(3437,3918.399902,1993.699951,20.799999,0.000000,31.997999,90.000000,0);
	CreateDynamicObject(3437,3918.100097,1989.199951,20.000000,0.000000,325.997985,90.000000,0);
	CreateDynamicObject(3437,3918.100097,1993.300048,14.000000,0.000000,325.997009,90.000000,0);
	CreateDynamicObject(3437,3917.899902,2001.400024,16.000000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3917.899902,2001.400024,23.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3917.899902,2005.699951,26.799999,0.000000,108.000000,90.000000,0);
	CreateDynamicObject(3437,3917.899902,2010.199951,20.299999,0.000000,179.996002,90.000000,0);
	CreateDynamicObject(3437,3917.899902,2005.900024,12.600000,0.000000,237.994995,90.000000,0);
	CreateDynamicObject(3437,3917.800048,2016.699951,15.600000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3917.800048,2016.699951,24.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3917.800048,2019.900024,24.500000,0.000000,328.000000,90.000000,0);
	CreateDynamicObject(3437,3917.800048,2022.500000,20.299999,0.000000,327.997009,90.000000,0);
	CreateDynamicObject(3437,3917.699951,2028.000000,19.600000,0.000000,27.996999,90.000000,0);
	CreateDynamicObject(3437,3917.899902,2030.099975,23.600000,0.000000,27.993000,90.000000,0);
	CreateDynamicObject(3437,3917.899902,2032.800048,23.600000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3917.899902,2032.800048,14.399999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3907.800048,1997.300048,20.000000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3906.600097,2040.199951,29.399999,0.000000,82.000000,90.000000,0);
	CreateDynamicObject(3437,3906.699951,2039.599975,25.399999,0.000000,131.996002,90.000000,0);
	CreateDynamicObject(3437,3906.600097,2040.300048,18.399999,0.000000,225.994995,90.000000,0);
	CreateDynamicObject(3437,3906.600097,2037.000000,15.300000,0.000000,225.994003,90.000000,0);
	CreateDynamicObject(3437,3908.300048,2024.199951,15.300000,0.000000,225.994003,90.000000,0);
	CreateDynamicObject(3437,3908.399902,2028.500000,19.500000,0.000000,225.994003,90.000000,0);
	CreateDynamicObject(3437,3908.399902,2024.500000,19.500000,0.000000,331.993988,90.000000,0);
	CreateDynamicObject(3437,3908.399902,2027.599975,13.899999,0.000000,331.989990,90.000000,0);
	CreateDynamicObject(3437,3908.300048,1991.199951,14.800000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3908.399902,1989.000000,23.299999,0.000000,26.000000,90.000000,0);
	CreateDynamicObject(3437,3908.600097,1984.000000,23.299999,0.000000,327.998992,90.000000,0);
	CreateDynamicObject(3437,3908.699951,1981.400024,22.799999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3437,3908.699951,1981.400024,12.399999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(1634,3913.199951,1978.400024,9.300000,308.000000,0.000000,0.000000,0);
	CreateDynamicObject(7017,3926.399902,1730.000000,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,1803.300048,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,1876.000000,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,1948.300048,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,2020.500000,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,2092.399902,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,2163.800048,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,2235.600097,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,2307.300048,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,2372.699951,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,2445.699951,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.399902,2518.000000,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(7017,3926.300048,2582.100097,7.099999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(973,3942.199951,2664.600097,10.899999,0.000000,0.000000,226.335998,0);
	CreateDynamicObject(973,3936.600097,2657.500000,10.899999,0.000000,0.000000,236.335006,0);
	CreateDynamicObject(973,3932.199951,2649.800048,10.899999,0.000000,0.000000,244.332000,0);
	CreateDynamicObject(973,3928.800048,2641.300048,10.899999,0.000000,0.000000,252.330001,0);
	CreateDynamicObject(973,3926.800048,2632.500000,10.899999,0.000000,0.000000,262.328002,0);
	CreateDynamicObject(973,3926.100097,2623.500000,10.899999,0.000000,0.000000,268.325988,0);
	CreateDynamicObject(7017,4061.100097,2734.500000,7.099999,0.000000,0.000000,91.750000,0);
	CreateDynamicObject(7017,4058.800048,2807.800048,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,4056.600097,2880.399902,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,4054.399902,2953.800048,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,4052.199951,3027.100097,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,4050.000000,3100.399902,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,4047.800048,3173.399902,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,4045.500000,3246.800048,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,4043.199951,3320.199951,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,4042.199951,3393.500000,7.099999,0.000000,0.000000,89.747001,0);
	CreateDynamicObject(6959,4038.600097,2876.300048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4036.199951,2913.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4035.100097,2954.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4033.699951,2992.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4032.199951,3032.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4030.500000,3070.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4029.600097,3109.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4028.300048,3145.300048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4027.399902,3183.300048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4026.100097,3219.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(7017,3911.199951,3356.699951,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,3913.399902,3283.199951,7.099999,0.000000,0.000000,91.747001,0);
	CreateDynamicObject(7017,3915.500000,3209.800048,7.099999,0.000000,0.000000,91.497001,0);
	CreateDynamicObject(7017,3917.399902,3136.199951,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3919.300048,3062.699951,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3921.199951,2989.600097,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3923.100097,2916.300048,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3925.000000,2844.300048,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3926.899902,2771.199951,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(973,3923.000000,2719.899902,10.899999,0.000000,0.000000,71.487998,0);
	CreateDynamicObject(973,3926.100097,2728.600097,10.899999,0.000000,0.000000,69.487998,0);
	CreateDynamicObject(7017,3927.000000,2769.800048,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(8375,3909.899902,2328.899902,12.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8375,3912.500000,2328.899902,12.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8375,3915.300048,2328.899902,12.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8375,3908.300048,2328.800048,12.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8375,3909.699951,2338.300048,12.000000,0.000000,0.000000,89.263999,0);
	CreateDynamicObject(8375,3909.800048,2342.199951,12.000000,0.000000,0.000000,89.263999,0);
	CreateDynamicObject(8375,3904.699951,2328.800048,12.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8375,3916.500000,2328.899902,12.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3903.399902,2608.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(7017,3882.199951,2623.000000,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3884.100097,2549.800048,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3886.000000,2476.399902,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3887.899902,2403.399902,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3889.800048,2329.899902,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(8375,3903.300048,2328.800048,12.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(7017,3891.699951,2256.500000,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3893.600097,2183.199951,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3895.500000,2109.899902,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3897.399902,2036.599975,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3899.300048,1963.400024,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3901.199951,1890.000000,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3903.100097,1816.500000,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3905.000000,1743.400024,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(7017,3906.800048,1671.199951,7.099999,0.000000,0.000000,91.494003,0);
	CreateDynamicObject(973,3909.000000,1628.599975,10.899999,0.000000,0.000000,103.697998,0);
	CreateDynamicObject(973,3908.699951,1629.900024,10.899999,0.000000,0.000000,103.694000,0);
	CreateDynamicObject(6986,3927.699951,1681.099975,22.899999,0.000000,0.000000,267.994995,0);
	CreateDynamicObject(6986,3962.399902,1681.099975,22.799999,0.000000,0.000000,89.989997,0);
	CreateDynamicObject(16090,3926.500000,1667.400024,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,10.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,17.700000,0.000000,0.000000,178.000000,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,24.899999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,32.099998,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,39.099998,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,46.200000,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,52.900001,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,59.900001,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,66.699996,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,73.500000,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,80.199996,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,87.199996,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,94.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,101.099998,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,108.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,115.099998,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,121.900001,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,128.899993,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,135.800003,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,142.800003,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,149.699996,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,156.800003,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,163.899993,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13638,3919.800048,1642.800048,171.100006,0.000000,0.000000,177.994995,0);
	CreateDynamicObject(13638,3914.800048,1642.599975,177.899993,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18368,3909.199951,1667.000000,179.100006,0.000000,0.000000,172.000000,0);
	CreateDynamicObject(1318,3905.000000,1676.500000,184.800003,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.800048,2237.100097,10.800000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.800048,2243.600097,15.100000,16.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.800048,2248.600097,21.100000,33.995998,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.800048,2251.699951,28.200000,47.992000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.899902,2252.500000,36.000000,69.987998,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.899902,2222.000000,36.400001,10.000000,0.000000,179.143005,0);
	CreateDynamicObject(11495,3916.800048,2236.899902,34.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(11495,3915.100097,2236.899902,34.299999,0.000000,0.000000,180.000000,0);
	CreateDynamicObject(1634,3915.800048,2216.199951,42.500000,31.997999,0.000000,179.138000,0);
	CreateDynamicObject(1634,3915.800048,2213.100097,49.500000,49.992000,0.000000,179.138000,0);
	CreateDynamicObject(1634,3915.800048,2212.199951,55.799999,63.987998,0.000000,179.138000,0);
	CreateDynamicObject(11495,3914.899902,2228.600097,52.099998,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(11495,3916.699951,2228.600097,52.099998,0.000000,0.000000,359.994995,0);
	CreateDynamicObject(1634,3915.899902,2243.899902,53.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.899902,2250.300048,58.799999,30.000000,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.800048,2253.800048,66.400001,49.998001,0.000000,0.000000,0);
	CreateDynamicObject(1634,3915.800048,2254.399902,72.900001,69.992996,0.000000,0.000000,0);
	CreateDynamicObject(11495,3916.600097,2238.000000,67.000000,0.000000,0.000000,359.989013,0);
	CreateDynamicObject(11495,3914.899902,2238.000000,67.000000,0.000000,0.000000,179.988998,0);
	CreateDynamicObject(1634,3915.399902,2223.000000,69.099998,9.998000,0.000000,179.138000,0);
	CreateDynamicObject(1634,3915.300048,2216.800048,75.000000,25.997999,0.000000,179.138000,0);
	CreateDynamicObject(12956,3942.600097,2708.300048,13.500000,0.000000,0.000000,208.000000,0);
	CreateDynamicObject(6959,3998.100097,2872.899902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3997.199951,2912.100097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3996.300048,2951.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3996.000000,2990.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3995.399902,3027.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3994.500000,3065.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3993.399902,3105.399902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3992.500000,3144.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3991.600097,3183.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3990.699951,3222.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(5390,3980.399902,3349.899902,17.000000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(973,4045.300048,3396.600097,10.899999,0.000000,0.000000,230.994995,0);
	CreateDynamicObject(10828,3948.399902,3292.199951,22.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(10828,4012.899902,3292.199951,22.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(10828,4029.000000,3308.699951,22.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,4029.000000,3342.199951,22.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,4029.000000,3375.399902,22.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,4029.000000,3389.600097,22.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,4012.500000,3406.899902,22.299999,0.000000,0.000000,178.000000,0);
	CreateDynamicObject(10828,3978.100097,3407.500000,22.299999,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(10828,3947.899902,3407.600097,22.299999,0.000000,0.000000,179.994995,0);
	CreateDynamicObject(10828,3931.600097,3391.300048,22.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,3931.600097,3363.100097,22.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,3931.600097,3328.300048,22.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(10828,3931.500000,3308.500000,22.299999,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(3749,3979.100097,3293.399902,19.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(6959,3963.300048,3268.899902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3989.100097,3277.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4024.800048,3277.399902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,4025.300048,3248.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3949.800048,3254.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3948.600097,3273.199951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3931.000000,3271.399902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3934.899902,3233.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3959.399902,3219.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3935.000000,3194.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3956.300048,3177.199951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3951.899902,3142.899902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3933.600097,3158.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3936.899902,3118.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3937.699951,3079.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3938.600097,3040.500000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3939.899902,3001.300048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3941.100097,2961.699951,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3941.800048,2923.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3942.500000,2883.899902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3942.300048,2861.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3966.399902,2880.899902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3966.300048,2871.300048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3966.600097,2912.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3966.899902,2945.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3967.199951,2985.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3967.500000,3024.000000,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3967.800048,3062.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3968.100097,3103.100097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3968.399902,3137.100097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3968.800048,3194.600097,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(10828,4006.399902,3292.100097,22.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(10828,3952.000000,3292.199951,22.299999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(8947,3979.100097,3298.800048,10.300000,0.000000,0.000000,90.000000,0);
	CreateDynamicObject(8947,3979.399902,3285.199951,8.399999,0.000000,344.000000,90.000000,0);
	CreateDynamicObject(6959,3991.199951,3249.800048,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(6959,3960.199951,3246.899902,10.100000,0.000000,0.000000,1.532999,0);
	CreateDynamicObject(13592,3987.000000,3347.899902,22.899999,0.000000,2.000000,316.000000,0);
	CreateDynamicObject(5400,3951.399902,3343.199951,18.600000,0.000000,0.000000,88.000000,0);
	CreateDynamicObject(9104,3988.199951,3133.800048,1.600000,0.000000,34.000000,272.000000,0);
	CreateDynamicObject(9104,3988.800048,3096.199951,1.600000,0.000000,33.997001,90.000000,0);
	CreateDynamicObject(2903,3891.399902,1656.300048,206.699996,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(2903,3900.100097,1657.800048,191.199996,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(2903,3918.399902,1660.900024,190.399993,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(2903,3908.100097,1659.199951,204.500000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13636,3915.699951,1738.900024,12.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13643,3913.300048,1767.199951,11.300000,0.000000,0.000000,92.000000,0);
	CreateDynamicObject(13647,3911.100097,1796.900024,10.000000,0.000000,0.000000,272.000000,0);
	CreateDynamicObject(13647,3913.199951,1797.099975,10.000000,0.000000,0.000000,272.000000,0);
	CreateDynamicObject(16084,3913.600097,1860.099975,4.599999,358.019012,351.994995,103.722000,0);
	CreateDynamicObject(16084,3914.399902,1898.099975,4.599999,358.016998,351.990997,283.716003,0);
	CreateDynamicObject(18451,4024.100097,2802.199951,10.600000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18451,4026.399902,2802.000000,10.600000,0.000000,0.000000,348.000000,0);
	CreateDynamicObject(18451,4021.300048,2801.600097,10.600000,0.000000,0.000000,25.996999,0);
	CreateDynamicObject(1503,3993.100097,2787.500000,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13639,3993.500000,2797.399902,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13639,3993.600097,2813.600097,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13639,3993.600097,2829.300048,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13639,3993.600097,2844.699951,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(3663,3993.600097,2856.600097,11.600000,0.000000,0.000000,274.000000,0);
	CreateDynamicObject(18566,3993.899902,2863.699951,10.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3993.899902,2866.199951,10.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3993.899902,2868.199951,10.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3993.899902,2870.000000,10.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(16401,3994.000000,2875.300048,8.600000,0.000000,0.000000,84.842002,0);
	CreateDynamicObject(16401,3994.600097,2883.399902,8.600000,0.000000,0.000000,266.835998,0);
	CreateDynamicObject(18262,3994.899902,2889.500000,10.600000,0.000000,0.000000,356.000000,0);
	CreateDynamicObject(13639,3995.100097,2902.100097,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13639,3995.199951,2917.699951,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13639,3995.199951,2928.699951,13.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13639,3995.199951,2931.699951,16.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13639,3995.199951,2934.800048,13.000000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(13639,3995.199951,2938.000000,9.800000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3995.300048,2947.300048,10.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3995.300048,2949.800048,10.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3995.300048,2952.500000,10.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3995.300048,2954.500000,10.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3995.300048,2957.199951,10.300000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3995.300048,2957.699951,10.600000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3995.300048,2960.199951,10.600000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(18566,3995.300048,2962.000000,10.100000,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1225,3986.500000,3115.100097,35.799999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1225,3986.500000,3115.100097,36.900001,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1225,3986.500000,3115.100097,37.799999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1225,3986.500000,3115.100097,38.799999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1225,3986.500000,3115.100097,39.799999,0.000000,0.000000,0.000000,0);
	CreateDynamicObject(1225,3987.000000,3115.199951,40.200000,0.000000,88.000000,0.000000,0);
	CreateDynamicObject(1225,3987.899902,3115.199951,40.200000,0.000000,87.995002,0.000000,0);
	CreateDynamicObject(1225,3988.199951,3115.199951,39.900001,0.000000,207.994995,0.000000,0);
	CreateDynamicObject(1225,3987.699951,3115.199951,39.000000,0.000000,207.992996,0.000000,0);
	CreateDynamicObject(1225,3987.199951,3115.199951,38.099998,0.000000,207.992996,0.000000,0);
	CreateDynamicObject(1225,3987.199951,3115.199951,36.900001,357.325012,311.930999,4.690999,0);
	CreateDynamicObject(1225,3988.000000,3115.300048,36.099998,357.319000,311.928985,4.685999,0);
	CreateDynamicObject(1225,3989.699951,3115.199951,37.599998,357.319000,311.928985,4.685999,0);
	CreateDynamicObject(1225,3990.500000,3115.100097,36.900001,357.319000,311.928985,4.685999,0);
	CreateDynamicObject(1225,3990.699951,3115.100097,38.099998,3.157000,218.067001,5.196000,0);
	CreateDynamicObject(1225,3989.800048,3115.199951,36.900001,3.153000,218.061996,5.190999,0);
	CreateDynamicObject(1318,3985.300048,3108.699951,34.599998,67.996002,180.000000,231.992996,0);
	CreateDynamicObject(1318,3987.199951,3107.300048,34.099998,67.994003,179.994995,231.992996,0);
	CreateDynamicObject(1318,3991.300048,3106.399902,34.200000,53.990001,180.003005,111.985000,0);
	CreateDynamicObject(1318,3992.500000,3106.699951,34.900001,53.986999,180.000000,111.984001,0);	
	
	// tripzenx4 //

	CreateDynamicObject(978,2063.7998000,-2718.5996100,13.4000000,0.0000000,0.0000000,0.0000000); //object(sub_roadright) (1)
	CreateDynamicObject(978,2054.7998000,-2718.5996100,13.4000000,0.0000000,0.0000000,0.0000000); //object(sub_roadright) (2)
	CreateDynamicObject(978,2045.7995600,-2718.5991200,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(3)
	CreateDynamicObject(978,2036.7993200,-2718.5986300,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(4)
	CreateDynamicObject(978,2027.7990700,-2718.5981400,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(5)
	CreateDynamicObject(978,2018.7988300,-2718.5976600,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(6)
	CreateDynamicObject(978,2009.7985800,-2718.5971700,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(7)
	CreateDynamicObject(978,2000.7983400,-2718.5966800,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(8)
	CreateDynamicObject(978,1991.7981000,-2718.5961900,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(9)
	CreateDynamicObject(978,1982.7978500,-2718.5957000,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(10)
	CreateDynamicObject(978,1973.7976100,-2718.5952100,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(11)
	CreateDynamicObject(978,1964.7973600,-2718.5947300,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(12)
	CreateDynamicObject(978,1955.7971200,-2718.5942400,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(13)
	CreateDynamicObject(978,1946.7968800,-2718.5937500,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(14)
	CreateDynamicObject(978,1937.7966300,-2718.5932600,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(15)
	CreateDynamicObject(978,1928.7963900,-2718.5927700,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(16)
	CreateDynamicObject(978,1919.7961400,-2718.5922900,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(17)
	CreateDynamicObject(978,1910.7959000,-2718.5918000,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(18)
	CreateDynamicObject(978,1901.7956500,-2718.5913100,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(19)
	CreateDynamicObject(978,1892.7954100,-2718.5908200,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(20)
	CreateDynamicObject(978,1883.7951700,-2718.5903300,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(21)
	CreateDynamicObject(978,1874.7949200,-2718.5898400,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(22)
	CreateDynamicObject(978,1865.7946800,-2718.5893600,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(23)
	CreateDynamicObject(978,1856.7944300,-2718.5888700,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(24)
	CreateDynamicObject(978,1847.7941900,-2718.5883800,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(25)
	CreateDynamicObject(978,1838.7939500,-2718.5878900,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(26)
	CreateDynamicObject(978,1829.7937000,-2718.5874000,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(27)
	CreateDynamicObject(978,1820.7934600,-2718.5869100,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(28)
	CreateDynamicObject(978,1811.7932100,-2718.5864300,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(29)
	CreateDynamicObject(978,1802.7929700,-2718.5859400,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(30)
	CreateDynamicObject(978,1793.7927200,-2718.5854500,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(31)
	CreateDynamicObject(978,1784.7924800,-2718.5849600,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(32)
	CreateDynamicObject(978,1775.7922400,-2718.5844700,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(33)
	CreateDynamicObject(978,1766.7919900,-2718.5839800,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(34)
	CreateDynamicObject(978,1757.7917500,-2718.5835000,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(35)
	CreateDynamicObject(978,1748.7915000,-2718.5830100,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(36)
	CreateDynamicObject(978,1739.7912600,-2718.5825200,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(37)
	CreateDynamicObject(978,1730.7910200,-2718.5820300,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(38)
	CreateDynamicObject(978,1721.7907700,-2718.5815400,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(39)
	CreateDynamicObject(978,1712.7905300,-2718.5810500,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(40)
	CreateDynamicObject(978,1703.7902800,-2718.5805700,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(41)
	CreateDynamicObject(978,1694.7900400,-2718.5800800,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(42)
	CreateDynamicObject(978,1685.7897900,-2718.5795900,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(43)
	CreateDynamicObject(978,1676.7895500,-2718.5791000,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(44)
	CreateDynamicObject(978,1667.7893100,-2718.5786100,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(45)
	CreateDynamicObject(978,1658.7890600,-2718.5781200,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(46)
	CreateDynamicObject(978,1649.7888200,-2718.5776400,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(47)
	CreateDynamicObject(978,1640.7885700,-2718.5771500,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(48)
	CreateDynamicObject(978,1631.7883300,-2718.5766600,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(49)
	CreateDynamicObject(978,1622.7880900,-2718.5761700,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(50)
	CreateDynamicObject(978,1613.7878400,-2718.5756800,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(51)
	CreateDynamicObject(978,1604.7876000,-2718.5752000,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(52)
	CreateDynamicObject(3578,2062.2998000,-2706.5996100,11.8000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (1)
	CreateDynamicObject(3578,2050.2998000,-2706.5996100,11.8000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (2)
	CreateDynamicObject(3578,2038.2995600,-2706.5991200,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(3)
	CreateDynamicObject(3578,2026.2993200,-2706.5986300,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(4)
	CreateDynamicObject(3578,2014.2990700,-2706.5981400,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(5)
	CreateDynamicObject(3578,2002.2988300,-2706.5976600,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(6)
	CreateDynamicObject(3578,1990.2985800,-2706.5971700,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(7)
	CreateDynamicObject(3578,1978.2983400,-2706.5966800,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(8)
	CreateDynamicObject(3578,1966.2981000,-2706.5961900,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(9)
	CreateDynamicObject(3578,1954.2978500,-2706.5957000,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(10)
	CreateDynamicObject(3578,1942.2976100,-2706.5952100,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(11)
	CreateDynamicObject(3578,1930.2973600,-2706.5947300,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(12)
	CreateDynamicObject(3578,1918.2971200,-2706.5942400,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(13)
	CreateDynamicObject(3578,1906.2968800,-2706.5937500,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(14)
	CreateDynamicObject(3578,1894.2966300,-2706.5932600,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(15)
	CreateDynamicObject(3578,1882.2963900,-2706.5927700,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(16)
	CreateDynamicObject(3578,1870.2961400,-2706.5922900,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(17)
	CreateDynamicObject(3578,1858.2959000,-2706.5918000,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(18)
	CreateDynamicObject(3578,1846.2956500,-2706.5913100,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(19)
	CreateDynamicObject(3578,1834.2954100,-2706.5908200,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(20)
	CreateDynamicObject(3578,1822.2951700,-2706.5903300,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(21)
	CreateDynamicObject(3578,1810.2949200,-2706.5898400,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(22)
	CreateDynamicObject(3578,1798.2946800,-2706.5893600,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(23)
	CreateDynamicObject(3578,1786.2944300,-2706.5888700,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(24)
	CreateDynamicObject(3578,1774.2941900,-2706.5883800,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(25)
	CreateDynamicObject(3578,1762.2939500,-2706.5878900,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(26)
	CreateDynamicObject(3578,1750.2937000,-2706.5874000,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(27)
	CreateDynamicObject(3578,1738.2934600,-2706.5869100,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(28)
	CreateDynamicObject(3578,1726.2932100,-2706.5864300,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(29)
	CreateDynamicObject(3578,1714.2929700,-2706.5859400,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(30)
	CreateDynamicObject(3578,1702.2927200,-2706.5854500,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(31)
	CreateDynamicObject(3578,1690.2924800,-2706.5849600,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(32)
	CreateDynamicObject(3578,1678.2922400,-2706.5844700,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(33)
	CreateDynamicObject(3578,1666.2919900,-2706.5839800,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(34)
	CreateDynamicObject(3578,1654.2917500,-2706.5835000,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(35)
	CreateDynamicObject(3578,1642.2915000,-2706.5830100,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(36)
	CreateDynamicObject(3578,1630.2912600,-2706.5825200,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(37)
	CreateDynamicObject(3578,1618.2910200,-2706.5820300,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(38)
	CreateDynamicObject(3578,1606.2907700,-2706.5815400,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(39)
	CreateDynamicObject(3578,1594.2905300,-2706.5810500,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(40)
	CreateDynamicObject(3578,1582.2902800,-2706.5805700,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(41)
	CreateDynamicObject(3578,1570.2900400,-2706.5800800,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(42)
	CreateDynamicObject(3578,1558.2897900,-2706.5795900,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(43)
	CreateDynamicObject(3578,1546.2895500,-2706.5791000,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(44)
	CreateDynamicObject(3578,1534.2893100,-2706.5786100,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(45)
	CreateDynamicObject(3578,1522.2890600,-2706.5781200,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(46)
	CreateDynamicObject(3578,1510.2888200,-2706.5776400,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(47)
	CreateDynamicObject(3578,1498.2885700,-2706.5771500,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(48)
	CreateDynamicObject(3578,1486.2883300,-2706.5766600,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(49)
	CreateDynamicObject(3578,1474.2880900,-2706.5761700,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(50)
	CreateDynamicObject(3578,1462.2878400,-2706.5756800,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(51)
	CreateDynamicObject(3578,1450.2876000,-2706.5752000,11.8000000,0.0000000,0.0000000,0.0000000); //amt 3578(52)
	CreateDynamicObject(978,1595.7873500,-2718.5747100,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(53)
	CreateDynamicObject(978,1586.7871100,-2718.5742200,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(54)
	CreateDynamicObject(978,1577.7868700,-2718.5737300,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(55)
	CreateDynamicObject(978,1568.7866200,-2718.5732400,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(56)
	CreateDynamicObject(978,1559.7863800,-2718.5727500,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(57)
	CreateDynamicObject(978,1550.7861300,-2718.5722700,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(58)
	CreateDynamicObject(978,1541.7858900,-2718.5717800,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(59)
	CreateDynamicObject(978,1532.7856400,-2718.5712900,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(60)
	CreateDynamicObject(978,1523.7854000,-2718.5708000,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(61)
	CreateDynamicObject(978,1514.7851600,-2718.5703100,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(62)
	CreateDynamicObject(978,1505.7849100,-2718.5698200,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(63)
	CreateDynamicObject(978,1496.7846700,-2718.5693400,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(64)
	CreateDynamicObject(978,1487.7844200,-2718.5688500,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(65)
	CreateDynamicObject(978,1478.7841800,-2718.5683600,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(66)
	CreateDynamicObject(978,1469.7832000,-2718.5673800,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(67)
	CreateDynamicObject(11461,1482.3994100,-2725.8994100,4.4000000,0.0000000,0.0000000,43.9950000); //object(des_nwwtower) (1)
	CreateDynamicObject(16667,2068.3999000,-2741.0000000,10.1000000,0.0000000,0.0000000,196.0000000); //object(des_rockgp2_14) (1)
	CreateDynamicObject(16667,2108.0000000,-2734.3994100,11.1000000,0.0000000,0.0000000,227.9990000); //object(des_rockgp2_14) (2)
	CreateDynamicObject(16667,2139.1001000,-2710.1001000,11.1000000,0.0000000,0.0000000,237.9970000); //object(des_rockgp2_14) (3)
	CreateDynamicObject(9623,2085.6999500,-2716.0000000,9.7000000,0.0000000,0.0000000,0.0000000); //object(toll_sfw) (1)
	CreateDynamicObject(9623,2085.5000000,-2724.8000500,9.7000000,0.0000000,0.0000000,0.0000000); //object(toll_sfw) (2)
	CreateDynamicObject(9623,2085.3000500,-2733.1001000,9.7000000,0.0000000,0.0000000,0.0000000); //object(toll_sfw) (3)
	CreateDynamicObject(11546,2095.1999500,-2727.0000000,12.5000000,0.0000000,0.0000000,202.0000000); //object(desn_fuelpay) (1)
	CreateDynamicObject(11546,2081.8994100,-2729.5000000,12.5000000,0.0000000,0.0000000,179.9950000); //object(desn_fuelpay) (2)
	CreateDynamicObject(16037,1393.6992200,-2708.3994100,16.5000000,0.0000000,0.0000000,0.0000000); //object(des_railbr_twr10) (1)
	CreateDynamicObject(978,1460.4000200,-2718.5678700,13.4000000,0.0000000,0.0000000,0.0000000); //amt 978(67)
	CreateDynamicObject(16037,179.0000000,-5477.0000000,65.9000000,0.0000000,0.0000000,73.9970000); //object(des_railbr_twr10) (2)
	CreateDynamicObject(8172,1304.3994100,-2714.5996100,12.6000000,0.0000000,179.9950000,83.9960000); //object(vgssairportland07) (1)
	CreateDynamicObject(16157,1134.5000000,-2879.6999500,28.5000000,0.0000000,0.0000000,194.0000000); //object(n_bit_01) (1)
	CreateDynamicObject(16223,1038.0999800,-2775.8000500,10.7000000,0.0000000,0.0000000,218.5000000); //object(s_bit_13) (1)
	CreateDynamicObject(17014,977.5996100,-2750.1992200,11.8000000,0.0000000,0.0000000,193.9970000); //object(cuntwplant01) (1)
	CreateDynamicObject(16224,852.2000100,-2863.3999000,-2.8000000,0.0000000,0.0000000,217.2500000); //object(s_bit_14) (1)
	CreateDynamicObject(16685,660.7000100,-2942.1999500,10.4000000,0.0000000,0.0000000,34.0000000); //object(cn2_rnway_bit2) (1)
	CreateDynamicObject(16168,756.0000000,-2912.8999000,-2.8000000,0.0000000,0.0000000,84.0000000); //object(n_bit_13) (1)
	CreateDynamicObject(16168,707.4000200,-2950.1001000,-2.8000000,0.0000000,0.0000000,79.9960000); //object(n_bit_13) (2)
	CreateDynamicObject(16168,647.0000000,-2989.1999500,27.6000000,0.0000000,0.0000000,81.9910000); //object(n_bit_13) (3)
	CreateDynamicObject(16168,596.9000200,-2943.8000500,27.0000000,0.0000000,354.0000000,273.9910000); //object(n_bit_13) (4)
	CreateDynamicObject(16168,652.9000200,-2874.0000000,27.0000000,0.0000000,353.9960000,325.9880000); //object(n_bit_13) (5)
	CreateDynamicObject(1681,543.5000000,-3016.1001000,34.8000000,355.7480000,279.6090000,142.3530000); //object(ap_learjet1_01) (1)
	CreateDynamicObject(16684,512.4000200,-3154.0000000,10.4000000,0.0000000,0.0000000,254.0000000); //object(cn2_rnway_bit) (1)
	CreateDynamicObject(16168,528.5000000,-2997.0000000,27.0000000,0.0000000,353.9960000,273.9880000); //object(n_bit_13) (6)
	CreateDynamicObject(16168,508.7000100,-3040.6999500,27.0000000,0.0000000,353.9960000,307.9880000); //object(n_bit_13) (7)
	CreateDynamicObject(16168,572.0000000,-3045.3999000,27.6000000,0.0000000,0.0000000,121.9910000); //object(n_bit_13) (9)
	CreateDynamicObject(16684,538.7999900,-3246.6999500,10.6000000,0.0000000,0.0000000,253.9980000); //object(cn2_rnway_bit) (2)
	CreateDynamicObject(16684,444.1000100,-3206.3999000,9.8000000,0.0000000,0.0000000,253.9930000); //object(cn2_rnway_bit) (3)
	CreateDynamicObject(16684,451.2999900,-3350.1999500,10.2000000,0.0000000,0.0000000,73.9980000); //object(cn2_rnway_bit) (4)
	CreateDynamicObject(16115,440.0000000,-3117.1001000,14.3000000,1.9950000,355.9970000,71.8850000); //object(des_rockgp1_03) (1)
	CreateDynamicObject(16115,578.5999800,-3193.1001000,12.5000000,1.9890000,353.9960000,271.9520000); //object(des_rockgp1_03) (2)
	CreateDynamicObject(16667,569.5000000,-3121.8000500,15.7000000,19.9460000,4.2520000,310.5450000); //object(des_rockgp2_14) (4)
	CreateDynamicObject(3269,477.0000000,-3107.0000000,9.1000000,0.0000000,0.0000000,338.0000000); //object(bonyrd_block1_) (1)
	CreateDynamicObject(3271,447.1000100,-3220.0000000,9.3000000,0.0000000,0.0000000,319.9990000); //object(bonyrd_block3_) (1)
	CreateDynamicObject(7236,464.8999900,-3438.1999500,34.8000000,0.0000000,0.0000000,0.0000000); //object(vegasplant03b) (1)
	CreateDynamicObject(3287,406.7000100,-3398.0000000,13.8000000,0.0000000,0.0000000,165.9980000); //object(cxrf_oiltank) (1)
	CreateDynamicObject(3271,523.7000100,-3281.1999500,9.8000000,0.0000000,0.0000000,5.9990000); //object(bonyrd_block3_) (2)
	CreateDynamicObject(3269,558.0999800,-3167.5000000,9.1000000,0.0000000,0.0000000,101.9970000); //object(bonyrd_block1_) (2)
	CreateDynamicObject(16326,519.7000100,-3245.5000000,10.3000000,0.0000000,0.0000000,344.9980000); //object(des_byoffice) (1)
	CreateDynamicObject(9484,398.6992200,-3459.0000000,19.7000000,0.0000000,0.0000000,73.9930000); //object(land_46_sfw) (1)
	CreateDynamicObject(3458,429.2000100,-3477.3999000,8.5000000,0.0000000,0.0000000,73.9980000); //object(vgncarshade1) (1)
	CreateDynamicObject(8557,424.2999900,-3476.0000000,8.5000000,0.0000000,0.0000000,73.9980000); //object(vgshseing27) (1)
	CreateDynamicObject(3458,419.3999600,-3474.6001000,8.5000000,0.0000000,0.0000000,73.9980000); //amt 8557(4)
	CreateDynamicObject(3458,414.4999400,-3473.2002000,8.5000000,0.0000000,0.0000000,73.9980000); //amt 3458(4)
	CreateDynamicObject(3458,409.5999100,-3471.8002900,8.5000000,0.0000000,0.0000000,73.9980000); //amt 8557(5)
	CreateDynamicObject(8557,422.0891100,-3483.7094700,8.6072200,0.0000000,1.5320000,73.9980000); //amt 8557(6)
	CreateDynamicObject(8557,419.8798500,-3491.4133300,8.9288200,0.0000000,3.0640000,73.9980000); //amt 8557(7)
	CreateDynamicObject(8557,417.6737400,-3499.1062000,9.4645500,0.0000000,4.5960000,73.9980000); //amt 8557(8)
	CreateDynamicObject(8557,415.4723500,-3506.7824700,10.2140400,0.0000000,6.1280000,73.9980000); //amt 8557(9)
	CreateDynamicObject(8557,413.2772500,-3514.4367700,11.1767500,0.0000000,7.6600000,73.9980000); //amt 8557(10)
	CreateDynamicObject(8557,411.0900600,-3522.0637200,12.3520000,0.0000000,9.1910000,73.9980000); //amt 8557(11)
	CreateDynamicObject(8557,408.9123200,-3529.6574700,13.7389400,0.0000000,10.7230000,73.9980000); //amt 8557(12)
	CreateDynamicObject(8557,406.7455700,-3537.2131300,15.3365800,0.0000000,12.2550000,73.9980000); //amt 8557(13)
	CreateDynamicObject(8557,404.5913700,-3544.7251000,17.1437800,0.0000000,13.7870000,73.9980000); //amt 8557(14)
	CreateDynamicObject(8557,402.4512300,-3552.1877400,19.1592500,0.0000000,15.3190000,73.9980000); //amt 8557(15)
	CreateDynamicObject(8557,400.3267500,-3559.5959500,21.3815400,0.0000000,16.8510000,73.9980000); //amt 8557(16)
	CreateDynamicObject(8557,398.2193900,-3566.9443400,23.8090800,0.0000000,18.3830000,73.9980000); //amt 8557(17)
	CreateDynamicObject(8557,396.1306800,-3574.2277800,26.4401100,0.0000000,19.9150000,73.9980000); //amt 8557(18)
	CreateDynamicObject(8557,394.0620700,-3581.4411600,29.2727800,0.0000000,21.4470000,73.9980000); //amt 8557(19)
	CreateDynamicObject(8557,392.0151100,-3588.5791000,32.3050300,0.0000000,22.9790000,73.9980000); //amt 8557(20)
	CreateDynamicObject(8557,389.9912100,-3595.6364700,35.5347200,0.0000000,24.5110000,73.9980000); //amt 8557(21)
	CreateDynamicObject(8557,387.9918500,-3602.6084000,38.9595300,0.0000000,26.0430000,73.9980000); //amt 8557(22)
	CreateDynamicObject(8557,386.0184300,-3609.4897500,42.5770200,0.0000000,27.5740000,73.9980000); //amt 8557(23)
	CreateDynamicObject(8557,384.0723900,-3616.2756300,46.3845900,0.0000000,29.1060000,73.9980000); //amt 8557(24)
	CreateDynamicObject(8557,382.1550900,-3622.9614300,50.3795300,0.0000000,30.6380000,73.9980000); //amt 8557(25)
	CreateDynamicObject(8557,380.2679400,-3629.5419900,54.5589800,0.0000000,32.1700000,73.9980000); //amt 8557(26)
	CreateDynamicObject(8557,378.4122300,-3636.0129400,58.9199400,0.0000000,33.7020000,73.9980000); //amt 8557(27)
	CreateDynamicObject(8557,376.5893600,-3642.3693800,63.4593200,0.0000000,35.2340000,73.9980000); //amt 8557(28)
	CreateDynamicObject(8557,374.8005700,-3648.6069300,68.1738600,0.0000000,36.7660000,73.9980000); //amt 8557(29)
	CreateDynamicObject(3458,426.9891400,-3485.1093700,8.6072200,0.0000000,1.5320000,73.9980000); //amt 3458(5)
	CreateDynamicObject(3458,424.7798800,-3492.8132300,8.9288200,0.0000000,3.0640000,73.9980000); //amt 3458(6)
	CreateDynamicObject(3458,422.5737600,-3500.5061000,9.4645500,0.0000000,4.5960000,73.9980000); //amt 3458(7)
	CreateDynamicObject(3458,420.3723800,-3508.1823700,10.2140400,0.0000000,6.1280000,73.9980000); //amt 3458(8)
	CreateDynamicObject(3458,418.1772800,-3515.8366700,11.1767500,0.0000000,7.6600000,73.9980000); //amt 3458(9)
	CreateDynamicObject(3458,415.9900800,-3523.4636200,12.3520000,0.0000000,9.1910000,73.9980000); //amt 3458(10)
	CreateDynamicObject(3458,413.8123500,-3531.0573700,13.7389400,0.0000000,10.7230000,73.9980000); //amt 3458(11)
	CreateDynamicObject(3458,411.6456000,-3538.6130400,15.3365800,0.0000000,12.2550000,73.9980000); //amt 3458(12)
	CreateDynamicObject(3458,409.4913900,-3546.1250000,17.1437800,0.0000000,13.7870000,73.9980000); //amt 3458(13)
	CreateDynamicObject(3458,407.3512600,-3553.5876500,19.1592500,0.0000000,15.3190000,73.9980000); //amt 3458(14)
	CreateDynamicObject(3458,405.2267800,-3560.9958500,21.3815400,0.0000000,16.8510000,73.9980000); //amt 3458(15)
	CreateDynamicObject(3458,403.1194200,-3568.3442400,23.8090800,0.0000000,18.3830000,73.9980000); //amt 3458(16)
	CreateDynamicObject(3458,401.0307000,-3575.6276900,26.4401100,0.0000000,19.9150000,73.9980000); //amt 3458(17)
	CreateDynamicObject(3458,398.9621000,-3582.8410600,29.2727800,0.0000000,21.4470000,73.9980000); //amt 3458(18)
	CreateDynamicObject(3458,396.9151300,-3589.9790000,32.3050300,0.0000000,22.9790000,73.9980000); //amt 3458(19)
	CreateDynamicObject(3458,394.8912400,-3597.0363800,35.5347200,0.0000000,24.5110000,73.9980000); //amt 3458(20)
	CreateDynamicObject(3458,392.8918800,-3604.0083000,38.9595300,0.0000000,26.0430000,73.9980000); //amt 3458(21)
	CreateDynamicObject(3458,390.9184600,-3610.8896500,42.5770200,0.0000000,27.5740000,73.9980000); //amt 3458(22)
	CreateDynamicObject(3458,388.9724100,-3617.6755400,46.3845900,0.0000000,29.1060000,73.9980000); //amt 3458(23)
	CreateDynamicObject(3458,387.0551100,-3624.3613300,50.3795300,0.0000000,30.6380000,73.9980000); //amt 3458(24)
	CreateDynamicObject(3458,385.1679700,-3630.9418900,54.5589800,0.0000000,32.1700000,73.9980000); //amt 3458(25)
	CreateDynamicObject(3458,383.3122600,-3637.4128400,58.9199400,0.0000000,33.7020000,73.9980000); //amt 3458(26)
	CreateDynamicObject(3458,381.4893800,-3643.7692900,63.4593200,0.0000000,35.2340000,73.9980000); //amt 3458(27)
	CreateDynamicObject(3458,379.7005900,-3650.0068400,68.1738600,0.0000000,36.7660000,73.9980000); //amt 3458(28)
	CreateDynamicObject(3458,417.1890900,-3482.3095700,8.6072200,0.0000000,1.5320000,73.9980000); //amt 8557(30)
	CreateDynamicObject(3458,414.9798300,-3490.0134300,8.9288200,0.0000000,3.0640000,73.9980000); //amt 8557(31)
	CreateDynamicObject(3458,412.7737100,-3497.7063000,9.4645500,0.0000000,4.5960000,73.9980000); //amt 8557(32)
	CreateDynamicObject(3458,410.5723300,-3505.3825700,10.2140400,0.0000000,6.1280000,73.9980000); //amt 8557(33)
	CreateDynamicObject(3458,408.3772300,-3513.0368700,11.1767500,0.0000000,7.6600000,73.9980000); //amt 8557(34)
	CreateDynamicObject(3458,406.1900300,-3520.6638200,12.3520000,0.0000000,9.1910000,73.9980000); //amt 8557(35)
	CreateDynamicObject(3458,404.0123000,-3528.2575700,13.7389400,0.0000000,10.7230000,73.9980000); //amt 8557(36)
	CreateDynamicObject(3458,401.8455500,-3535.8132300,15.3365800,0.0000000,12.2550000,73.9980000); //amt 8557(37)
	CreateDynamicObject(3458,399.6913500,-3543.3252000,17.1437800,0.0000000,13.7870000,73.9980000); //amt 8557(38)
	CreateDynamicObject(3458,397.5512100,-3550.7878400,19.1592500,0.0000000,15.3190000,73.9980000); //amt 8557(39)
	CreateDynamicObject(3458,395.4267300,-3558.1960400,21.3815400,0.0000000,16.8510000,73.9980000); //amt 8557(40)
	CreateDynamicObject(3458,393.3193700,-3565.5444300,23.8090800,0.0000000,18.3830000,73.9980000); //amt 8557(41)
	CreateDynamicObject(3458,391.2306500,-3572.8278800,26.4401100,0.0000000,19.9150000,73.9980000); //amt 8557(42)
	CreateDynamicObject(3458,389.1620500,-3580.0412600,29.2727800,0.0000000,21.4470000,73.9980000); //amt 8557(43)
	CreateDynamicObject(3458,387.1150800,-3587.1792000,32.3050300,0.0000000,22.9790000,73.9980000); //amt 8557(44)
	CreateDynamicObject(3458,385.0911900,-3594.2365700,35.5347200,0.0000000,24.5110000,73.9980000); //amt 8557(45)
	CreateDynamicObject(3458,383.0918300,-3601.2085000,38.9595300,0.0000000,26.0430000,73.9980000); //amt 8557(46)
	CreateDynamicObject(3458,381.1184100,-3608.0898400,42.5770200,0.0000000,27.5740000,73.9980000); //amt 8557(47)
	CreateDynamicObject(3458,379.1723600,-3614.8757300,46.3845900,0.0000000,29.1060000,73.9980000); //amt 8557(48)
	CreateDynamicObject(3458,377.2550700,-3621.5615200,50.3795300,0.0000000,30.6380000,73.9980000); //amt 8557(49)
	CreateDynamicObject(3458,375.3679200,-3628.1420900,54.5589800,0.0000000,32.1700000,73.9980000); //amt 8557(50)
	CreateDynamicObject(3458,373.5122100,-3634.6130400,58.9199400,0.0000000,33.7020000,73.9980000); //amt 8557(51)
	CreateDynamicObject(3458,371.6893300,-3640.9694800,63.4593200,0.0000000,35.2340000,73.9980000); //amt 8557(52)
	CreateDynamicObject(3458,369.9005400,-3647.2070300,68.1738600,0.0000000,36.7660000,73.9980000); //amt 8557(53)
	CreateDynamicObject(3458,412.2890600,-3480.9096700,8.6072200,0.0000000,1.5320000,73.9980000); //amt 3458(29)
	CreateDynamicObject(3458,410.0798000,-3488.6135300,8.9288200,0.0000000,3.0640000,73.9980000); //amt 3458(30)
	CreateDynamicObject(3458,407.8736900,-3496.3064000,9.4645500,0.0000000,4.5960000,73.9980000); //amt 3458(31)
	CreateDynamicObject(3458,405.6723000,-3503.9826700,10.2140400,0.0000000,6.1280000,73.9980000); //amt 3458(32)
	CreateDynamicObject(3458,403.4772000,-3511.6369600,11.1767500,0.0000000,7.6600000,73.9980000); //amt 3458(33)
	CreateDynamicObject(3458,401.2900100,-3519.2639200,12.3520000,0.0000000,9.1910000,73.9980000); //amt 3458(34)
	CreateDynamicObject(3458,399.1122700,-3526.8576700,13.7389400,0.0000000,10.7230000,73.9980000); //amt 3458(35)
	CreateDynamicObject(3458,396.9455300,-3534.4133300,15.3365800,0.0000000,12.2550000,73.9980000); //amt 3458(36)
	CreateDynamicObject(3458,394.7913200,-3541.9252900,17.1437800,0.0000000,13.7870000,73.9980000); //amt 3458(37)
	CreateDynamicObject(3458,392.6511800,-3549.3879400,19.1592500,0.0000000,15.3190000,73.9980000); //amt 3458(38)
	CreateDynamicObject(3458,390.5267000,-3556.7961400,21.3815400,0.0000000,16.8510000,73.9980000); //amt 3458(39)
	CreateDynamicObject(3458,388.4193400,-3564.1445300,23.8090800,0.0000000,18.3830000,73.9980000); //amt 3458(40)
	CreateDynamicObject(3458,386.3306300,-3571.4279800,26.4401100,0.0000000,19.9150000,73.9980000); //amt 3458(41)
	CreateDynamicObject(3458,384.2620200,-3578.6413600,29.2727800,0.0000000,21.4470000,73.9980000); //amt 3458(42)
	CreateDynamicObject(3458,382.2150600,-3585.7793000,32.3050300,0.0000000,22.9790000,73.9980000); //amt 3458(43)
	CreateDynamicObject(3458,380.1911600,-3592.8366700,35.5347200,0.0000000,24.5110000,73.9980000); //amt 3458(44)
	CreateDynamicObject(3458,378.1918000,-3599.8085900,38.9595300,0.0000000,26.0430000,73.9980000); //amt 3458(45)
	CreateDynamicObject(3458,376.2183800,-3606.6899400,42.5770200,0.0000000,27.5740000,73.9980000); //amt 3458(46)
	CreateDynamicObject(3458,374.2723400,-3613.4758300,46.3845900,0.0000000,29.1060000,73.9980000); //amt 3458(47)
	CreateDynamicObject(3458,372.3550400,-3620.1616200,50.3795300,0.0000000,30.6380000,73.9980000); //amt 3458(48)
	CreateDynamicObject(3458,370.4679000,-3626.7421900,54.5589800,0.0000000,32.1700000,73.9980000); //amt 3458(49)
	CreateDynamicObject(3458,368.6121800,-3633.2131300,58.9199400,0.0000000,33.7020000,73.9980000); //amt 3458(50)
	CreateDynamicObject(3458,366.7893100,-3639.5695800,63.4593200,0.0000000,35.2340000,73.9980000); //amt 3458(51)
	CreateDynamicObject(3458,365.0005200,-3645.8071300,68.1738600,0.0000000,36.7660000,73.9980000); //amt 3458(52)
	CreateDynamicObject(3458,407.3890400,-3479.5097700,8.6072200,0.0000000,1.5320000,73.9980000); //amt 8557(54)
	CreateDynamicObject(3458,405.1797800,-3487.2136200,8.9288200,0.0000000,3.0640000,73.9980000); //amt 8557(55)
	CreateDynamicObject(3458,402.9736600,-3494.9064900,9.4645500,0.0000000,4.5960000,73.9980000); //amt 8557(56)
	CreateDynamicObject(3458,400.7722800,-3502.5827600,10.2140400,0.0000000,6.1280000,73.9980000); //amt 8557(57)
	CreateDynamicObject(3458,398.5771800,-3510.2370600,11.1767500,0.0000000,7.6600000,73.9980000); //amt 8557(58)
	CreateDynamicObject(3458,396.3899800,-3517.8640100,12.3520000,0.0000000,9.1910000,73.9980000); //amt 8557(59)
	CreateDynamicObject(3458,394.2122500,-3525.4577600,13.7389400,0.0000000,10.7230000,73.9980000); //amt 8557(60)
	CreateDynamicObject(3458,392.0455000,-3533.0134300,15.3365800,0.0000000,12.2550000,73.9980000); //amt 8557(61)
	CreateDynamicObject(3458,389.8913000,-3540.5253900,17.1437800,0.0000000,13.7870000,73.9980000); //amt 8557(62)
	CreateDynamicObject(3458,387.7511600,-3547.9880400,19.1592500,0.0000000,15.3190000,73.9980000); //amt 8557(63)
	CreateDynamicObject(3458,385.6266800,-3555.3962400,21.3815400,0.0000000,16.8510000,73.9980000); //amt 8557(64)
	CreateDynamicObject(3458,383.5193200,-3562.7446300,23.8090800,0.0000000,18.3830000,73.9980000); //amt 8557(65)
	CreateDynamicObject(3458,381.4306000,-3570.0280800,26.4401100,0.0000000,19.9150000,73.9980000); //amt 8557(66)
	CreateDynamicObject(3458,379.3620000,-3577.2414600,29.2727800,0.0000000,21.4470000,73.9980000); //amt 8557(67)
	CreateDynamicObject(3458,377.3150300,-3584.3793900,32.3050300,0.0000000,22.9790000,73.9980000); //amt 8557(68)
	CreateDynamicObject(3458,375.2911400,-3591.4367700,35.5347200,0.0000000,24.5110000,73.9980000); //amt 8557(69)
	CreateDynamicObject(3458,373.2917800,-3598.4086900,38.9595300,0.0000000,26.0430000,73.9980000); //amt 8557(70)
	CreateDynamicObject(3458,371.3183600,-3605.2900400,42.5770200,0.0000000,27.5740000,73.9980000); //amt 8557(71)
	CreateDynamicObject(3458,369.3723100,-3612.0759300,46.3845900,0.0000000,29.1060000,73.9980000); //amt 8557(72)
	CreateDynamicObject(3458,367.4550200,-3618.7617200,50.3795300,0.0000000,30.6380000,73.9980000); //amt 8557(73)
	CreateDynamicObject(3458,365.5678700,-3625.3422900,54.5589800,0.0000000,32.1700000,73.9980000); //amt 8557(74)
	CreateDynamicObject(3458,363.7121600,-3631.8132300,58.9199400,0.0000000,33.7020000,73.9980000); //amt 8557(75)
	CreateDynamicObject(3458,361.8892800,-3638.1696800,63.4593200,0.0000000,35.2340000,73.9980000); //amt 8557(76)
	CreateDynamicObject(3458,360.1004900,-3644.4072300,68.1738600,0.0000000,36.7660000,73.9980000); //amt 8557(77)
	CreateDynamicObject(9484,359.6992200,-3781.0996100,110.8000000,0.0000000,0.0000000,74.9980000); //object(land_46_sfw) (5)
	CreateDynamicObject(9484,293.6992200,-3810.0996100,110.8000000,0.0000000,0.0000000,254.9930000); //object(land_46_sfw) (7)
	CreateDynamicObject(8172,318.5000000,-3904.8994100,101.6000000,0.0000000,179.9950000,0.0000000); //object(vgssairportland07) (2)
	CreateDynamicObject(8483,332.0000000,-4134.2002000,106.6000000,0.0000000,0.0000000,123.9950000); //object(pirateland02_lvs) (2)
	CreateDynamicObject(789,324.2999900,-3854.8999000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (1)
	CreateDynamicObject(789,309.0000000,-3852.1999500,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (3)
	CreateDynamicObject(789,307.6000100,-3870.3999000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (4)
	CreateDynamicObject(789,326.5000000,-3874.1999500,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (5)
	CreateDynamicObject(789,329.7999900,-3893.3000500,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (6)
	CreateDynamicObject(789,309.3999900,-3891.8000500,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (7)
	CreateDynamicObject(789,308.7000100,-3911.3000500,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (8)
	CreateDynamicObject(789,328.3999900,-3913.0000000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (9)
	CreateDynamicObject(789,330.2999900,-3935.1001000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (10)
	CreateDynamicObject(789,307.3999900,-3935.0000000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (11)
	CreateDynamicObject(789,307.7000100,-3953.8999000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (12)
	CreateDynamicObject(789,332.0000000,-3951.3999000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (13)
	CreateDynamicObject(789,332.0000000,-3969.3999000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (14)
	CreateDynamicObject(789,311.1000100,-3972.3999000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (15)
	CreateDynamicObject(789,327.8999900,-3988.1001000,94.4000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (16)
	CreateDynamicObject(789,324.5996100,-4004.8994100,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (17)
	CreateDynamicObject(789,309.8999900,-4004.5000000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (18)
	CreateDynamicObject(789,309.2000100,-4030.1999500,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (19)
	CreateDynamicObject(789,334.7999900,-4043.5000000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (20)
	CreateDynamicObject(789,328.3999900,-4027.3999000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (21)
	CreateDynamicObject(789,303.7999900,-4050.3999000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (22)
	CreateDynamicObject(789,329.2999900,-4066.1999500,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (23)
	CreateDynamicObject(789,307.2999900,-4068.8999000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (24)
	CreateDynamicObject(789,333.1000100,-4085.8999000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (25)
	CreateDynamicObject(789,311.1000100,-4088.6001000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (26)
	CreateDynamicObject(789,310.1000100,-4116.0000000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (27)
	CreateDynamicObject(789,331.3999900,-4128.2998000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (28)
	CreateDynamicObject(789,333.3999900,-4155.6001000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (29)
	CreateDynamicObject(789,310.6000100,-4155.7998000,87.7000000,0.0000000,0.0000000,0.0000000); //object(hashburytree4sfs) (30)
	CreateDynamicObject(16162,316.6992200,-4399.2002000,18.3000000,0.0000000,0.0000000,270.0000000); //object(n_bit_06) (1)
	CreateDynamicObject(8172,318.2998000,-4066.0000000,101.6000000,0.0000000,180.0000000,0.0000000); //object(vgssairportland07) (4)
	CreateDynamicObject(8172,192.8994100,-5345.2998000,62.0000000,0.0000000,179.9950000,8.9980000); //object(vgssairportland07) (5)
	CreateDynamicObject(16157,370.0000000,-4446.0996100,30.4000000,341.7460000,0.0000000,81.9960000); //object(n_bit_01) (2)
	CreateDynamicObject(16157,295.6992200,-4448.2998000,30.2000000,337.7420000,0.0000000,259.9860000); //object(n_bit_01) (3)
	CreateDynamicObject(16163,248.5000000,-4639.7998000,84.9000000,0.0000000,0.0000000,271.7470000); //object(n_bit_07) (1)
	CreateDynamicObject(16164,282.0000000,-4852.1001000,53.1000000,357.9970000,357.4960000,262.1610000); //object(n_bit_08) (1)
	CreateDynamicObject(3877,346.8999900,-4589.2998000,36.4000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (1)
	CreateDynamicObject(3877,355.7999900,-4628.5000000,44.2000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (2)
	CreateDynamicObject(3877,372.6992200,-4674.7002000,47.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (3)
	CreateDynamicObject(3877,363.8999900,-4729.5000000,48.4000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (4)
	CreateDynamicObject(3877,344.1000100,-4758.3999000,52.1000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (5)
	CreateDynamicObject(3877,327.2000100,-4810.7998000,55.7000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,323.1000100,-4879.2998000,55.3000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (7)
	CreateDynamicObject(3873,372.2998000,-4533.3994100,43.8000000,0.0000000,0.0000000,0.0000000); //object(silicon04_sfs) (1)
	CreateDynamicObject(16397,248.2998000,-5072.7002000,43.9000000,358.7480000,0.0000000,261.7440000); //object(n_bit_09) (1)
	CreateDynamicObject(16610,188.5000000,-5209.8994100,65.5000000,0.0000000,0.0000000,267.4950000); //object(des_nbridgebit_02) (1)
	CreateDynamicObject(3255,229.0000000,-5139.2998000,61.8000000,1.2500000,0.0000000,170.5000000); //object(ref_oiltank01) (1)
	CreateDynamicObject(3255,240.7000000,-5080.5000000,60.6000000,0.0000000,0.0000000,170.4970000); //object(ref_oiltank01) (2)
	CreateDynamicObject(3255,246.6000100,-5017.1001000,60.7000000,0.0000000,0.0000000,170.4970000); //object(ref_oiltank01) (3)
	CreateDynamicObject(16011,271.2000100,-4945.1001000,60.1000000,357.5040000,356.7470000,209.8580000); //object(des_westrn2_) (1)
	CreateDynamicObject(16011,307.0000000,-4921.1001000,56.8000000,357.5010000,356.7430000,224.3550000); //object(des_westrn2_) (2)
	CreateDynamicObject(16011,240.7000000,-4968.1001000,62.2000000,357.4980000,357.9940000,229.9100000); //object(des_westrn2_) (3)
	CreateDynamicObject(16157,285.7000100,-4794.8999000,49.1000000,337.7470000,0.0000000,259.9910000); //object(n_bit_01) (3)
	CreateDynamicObject(16157,234.2000000,-4917.7002000,49.1000000,339.1540000,338.5320000,178.0250000); //object(n_bit_01) (3)
	CreateDynamicObject(16157,197.8000000,-4972.7998000,49.1000000,339.1530000,338.5270000,218.0220000); //object(n_bit_01) (3)
	CreateDynamicObject(16157,186.0000000,-5063.8994100,49.1000000,339.1480000,338.5220000,218.0130000); //object(n_bit_01) (3)
	CreateDynamicObject(16037,1223.0000000,-2730.7998000,16.5000000,0.0000000,0.0000000,13.9970000); //object(des_railbr_twr10) (2)
	CreateDynamicObject(8172,164.6000100,-5612.0000000,62.1000000,0.0000000,180.0000000,2.9980000); //object(vgssairportland07) (5)
	CreateDynamicObject(16037,175.1000100,-5750.2998000,65.9000000,0.0000000,0.0000000,95.0000000); //object(des_railbr_twr10) (2)
	CreateDynamicObject(9139,205.0996100,-5375.3994100,59.1000000,0.0000000,0.0000000,179.9950000); //object(sbvgseseafloor06) (2)
	CreateDynamicObject(9139,175.6000100,-5315.7002000,59.1000000,0.0000000,357.5000000,0.4950000); //object(sbvgseseafloor06) (3)
	CreateDynamicObject(13158,185.7998000,-5655.5000000,24.8000000,345.6520000,26.8950000,133.1600000); //object(cunteground27) (1)
	CreateDynamicObject(13158,140.5996100,-5576.8994100,24.8000000,345.6520000,26.8950000,311.1550000); //object(cunteground27) (2)
	CreateDynamicObject(17672,192.1992200,-5876.7002000,82.0000000,0.0000000,0.0000000,94.9990000); //object(lae2_roads68) (1)
	CreateDynamicObject(17672,235.8999900,-6142.2998000,182.7000000,358.2590000,5.9990000,92.9280000); //object(lae2_roads68) (2)
	CreateDynamicObject(8172,311.6992200,-4275.8994100,31.9000000,0.0000000,179.9950000,8.9980000); //object(vgssairportland07) (5)
	CreateDynamicObject(17672,215.6992200,-6010.2002000,128.6000100,358.2590000,5.9990000,92.9280000); //object(lae2_roads68) (2)
	CreateDynamicObject(6959,245.8999900,-6248.6001000,205.1000100,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (3)
	CreateDynamicObject(6959,245.8999900,-6288.6001000,205.1000100,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (4)
	CreateDynamicObject(6959,245.8994100,-6288.5996100,205.1000100,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (5)
	CreateDynamicObject(6959,245.8999900,-6328.6001000,205.1000100,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (6)
	CreateDynamicObject(8557,245.5000000,-6351.1001000,203.5000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (2)
	CreateDynamicObject(8557,245.4668400,-6356.2500000,203.5000000,359.9910000,359.2680000,359.9940000); //amt 8557(27)
	CreateDynamicObject(8557,245.3673900,-6361.3994100,203.5000000,359.9630000,358.5370000,359.9880000); //amt 8557(28)
	CreateDynamicObject(8557,245.2016400,-6366.5468700,203.5000000,359.9160000,357.8070000,359.9800000); //amt 8557(29)
	CreateDynamicObject(8557,244.9696400,-6371.6914100,203.5000000,359.8510000,357.0770000,359.9720000); //amt 8557(30)
	CreateDynamicObject(8557,244.6714000,-6376.8330100,203.5000000,359.7670000,356.3490000,359.9630000); //amt 8557(31)
	CreateDynamicObject(8557,244.3070100,-6381.9702100,203.5000000,359.6640000,355.6230000,359.9510000); //amt 8557(32)
	CreateDynamicObject(8557,243.8765000,-6387.1025400,203.5000000,359.5430000,354.8980000,359.9380000); //amt 8557(33)
	CreateDynamicObject(8557,243.3799400,-6392.2285200,203.5000000,359.4040000,354.1770000,359.9220000); //amt 8557(34)
	CreateDynamicObject(8557,242.8174400,-6397.3476600,203.5000000,359.2460000,353.4580000,359.9030000); //amt 8557(35)
	CreateDynamicObject(8557,242.1890700,-6402.4594700,203.5000000,359.0710000,352.7420000,359.8810000); //amt 8557(36)
	CreateDynamicObject(8557,241.4949300,-6407.5625000,203.5000000,358.8770000,352.0290000,359.8560000); //amt 8557(37)
	CreateDynamicObject(8557,240.7351500,-6412.6562500,203.5000000,358.6650000,351.3210000,359.8270000); //amt 8557(38)
	CreateDynamicObject(8557,239.9098700,-6417.7397500,203.5000000,358.4350000,350.6160000,359.7940000); //amt 8557(39)
	CreateDynamicObject(8557,239.0191800,-6422.8125000,203.5000000,358.1880000,349.9160000,359.7560000); //amt 8557(40)
	CreateDynamicObject(8557,238.0632600,-6427.8730500,203.5000000,357.9230000,349.2200000,359.7140000); //amt 8557(41)
	CreateDynamicObject(8557,237.0422700,-6432.9209000,203.5000000,357.6400000,348.5300000,359.6670000); //amt 8557(42)
	CreateDynamicObject(8557,235.9563800,-6437.9550800,203.5000000,357.3410000,347.8440000,359.6150000); //amt 8557(43)
	CreateDynamicObject(8557,234.8057600,-6442.9751000,203.5000000,357.0240000,347.1640000,359.5570000); //amt 8557(44)
	CreateDynamicObject(8557,233.5905900,-6447.9799800,203.5000000,356.6910000,346.4900000,359.4940000); //amt 8557(45)
	CreateDynamicObject(8557,232.3111000,-6452.9687500,203.5000000,356.3400000,345.8210000,359.4250000); //amt 8557(46)
	CreateDynamicObject(8557,230.9674700,-6457.9404300,203.5000000,355.9740000,345.1590000,359.3490000); //amt 8557(47)
	CreateDynamicObject(8557,229.5599500,-6462.8945300,203.5000000,355.5910000,344.5030000,359.2680000); //amt 8557(48)
	CreateDynamicObject(8557,228.0887600,-6467.8300800,203.5000000,355.1920000,343.8530000,359.1800000); //amt 8557(49)
	CreateDynamicObject(8557,226.5541500,-6472.7460900,203.5000000,354.7770000,343.2100000,359.0850000); //amt 8557(50)
	CreateDynamicObject(8557,224.9563800,-6477.6420900,203.5000000,354.3460000,342.5740000,358.9830000); //amt 8557(51)
	CreateDynamicObject(8557,223.2956800,-6482.5170900,203.5000000,353.9000000,341.9460000,358.8740000); //amt 8557(52)
	CreateDynamicObject(8557,221.5723900,-6487.3701200,203.5000000,353.4390000,341.3240000,358.7580000); //amt 8557(53)
	CreateDynamicObject(8557,219.7867300,-6492.2011700,203.5000000,352.9630000,340.7100000,358.6350000); //amt 8557(54)
	CreateDynamicObject(8557,217.9390300,-6497.0083000,203.5000000,352.4730000,340.1030000,358.5040000); //amt 8557(55)
	CreateDynamicObject(8557,216.0295900,-6501.7910200,203.5000000,351.9670000,339.5030000,358.3650000); //amt 8557(56)
	CreateDynamicObject(8557,214.0587200,-6506.5493200,203.5000000,351.4480000,338.9120000,358.2190000); //amt 8557(57)
	CreateDynamicObject(8557,212.0267600,-6511.2817400,203.5000000,350.9140000,338.3280000,358.0650000); //amt 8557(58)
	CreateDynamicObject(8557,209.9340400,-6515.9873000,203.5000000,350.3670000,337.7520000,357.9040000); //amt 8557(59)
	CreateDynamicObject(8557,207.7809100,-6520.6660200,203.5000000,349.8060000,337.1840000,357.7340000); //amt 8557(60)
	CreateDynamicObject(8557,205.5677200,-6525.3164100,203.5000000,349.2320000,336.6240000,357.5560000); //amt 8557(61)
	CreateDynamicObject(8557,203.2948300,-6529.9375000,203.5000000,348.6450000,336.0720000,357.3700000); //amt 8557(62)
	CreateDynamicObject(8557,200.9626500,-6534.5293000,203.5000000,348.0450000,335.5280000,357.1770000); //amt 8557(63)
	CreateDynamicObject(8557,198.5715200,-6539.0908200,203.5000000,347.4330000,334.9930000,356.9740000); //amt 8557(64)
	CreateDynamicObject(8557,196.1218700,-6543.6210900,203.5000000,346.8080000,334.4650000,356.7640000); //amt 8557(65)
	CreateDynamicObject(8557,193.6141100,-6548.1191400,203.5000000,346.1710000,333.9460000,356.5460000); //amt 8557(66)
	CreateDynamicObject(8557,191.0486100,-6552.5849600,203.5000000,345.5220000,333.4350000,356.3190000); //amt 8557(67)
	CreateDynamicObject(8557,188.4258400,-6557.0170900,203.5000000,344.8620000,332.9320000,356.0840000); //amt 8557(68)
	CreateDynamicObject(8557,185.7462500,-6561.4155300,203.5000000,344.1910000,332.4380000,355.8410000); //amt 8557(69)
	CreateDynamicObject(8557,183.0102200,-6565.7788100,203.5000000,343.5080000,331.9510000,355.5900000); //amt 8557(70)
	CreateDynamicObject(8557,180.2182600,-6570.1064500,203.5000000,342.8150000,331.4730000,355.3300000); //amt 8557(71)
	CreateDynamicObject(8557,177.3708000,-6574.3974600,203.5000000,342.1100000,331.0030000,355.0630000); //amt 8557(72)
	CreateDynamicObject(8557,174.4683400,-6578.6518600,203.5000000,341.3960000,330.5410000,354.7870000); //amt 8557(73)
	CreateDynamicObject(8557,171.5113400,-6582.8686500,203.5000000,340.6710000,330.0870000,354.5030000); //amt 8557(74)
	CreateDynamicObject(8557,168.5002900,-6587.0468700,203.5000000,339.9360000,329.6420000,354.2110000); //amt 8557(75)
	CreateDynamicObject(8557,165.4357000,-6591.1860400,203.5000000,339.1920000,329.2040000,353.9110000); //amt 8557(76)
	CreateDynamicObject(8557,162.3180700,-6595.2851600,203.5000000,338.4380000,328.7750000,353.6020000); //amt 8557(77)
	CreateDynamicObject(8557,159.1479200,-6599.3437500,203.5000000,337.6750000,328.3530000,353.2860000); //amt 8557(78)
	CreateDynamicObject(8557,155.9257800,-6603.3613300,203.5000000,336.9020000,327.9400000,352.9620000); //amt 8557(79)
	CreateDynamicObject(8557,152.6521800,-6607.3374000,203.5000000,336.1210000,327.5340000,352.6300000); //amt 8557(80)
	CreateDynamicObject(8557,149.3276700,-6611.2705100,203.5000000,335.3310000,327.1360000,352.2900000); //amt 8557(81)
	CreateDynamicObject(8557,145.9527700,-6615.1611300,203.5000000,334.5330000,326.7460000,351.9430000); //amt 8557(82)
	CreateDynamicObject(8557,142.5280800,-6619.0073200,203.5000000,333.7260000,326.3630000,351.5880000); //amt 8557(83)
	CreateDynamicObject(8557,139.0541400,-6622.8095700,203.5000000,332.9120000,325.9880000,351.2250000); //amt 8557(84)
	CreateDynamicObject(8557,135.5315600,-6626.5664100,203.5000000,332.0890000,325.6210000,350.8540000); //amt 8557(85)
	CreateDynamicObject(8557,131.9608800,-6630.2778300,203.5000000,331.2590000,325.2610000,350.4760000); //amt 8557(86)
	CreateDynamicObject(8557,128.3427100,-6633.9428700,203.5000000,330.4220000,324.9090000,350.0910000); //amt 8557(87)
	CreateDynamicObject(8557,124.6776700,-6637.5610400,203.5000000,329.5770000,324.5640000,349.6980000); //amt 8557(88)
	CreateDynamicObject(8557,120.9663300,-6641.1318400,203.5000000,328.7250000,324.2260000,349.2980000); //amt 8557(89)
	CreateDynamicObject(8557,117.2093400,-6644.6543000,203.5000000,327.8660000,323.8960000,348.8910000); //amt 8557(90)
	CreateDynamicObject(8557,113.4073000,-6648.1279300,203.5000000,327.0000000,323.5730000,348.4760000); //amt 8557(91)
	CreateDynamicObject(8557,109.5608500,-6651.5527300,203.5000000,326.1280000,323.2570000,348.0550000); //amt 8557(92)
	CreateDynamicObject(8557,105.6706200,-6654.9277300,203.5000000,325.2490000,322.9480000,347.6260000); //amt 8557(93)
	CreateDynamicObject(8557,101.7372700,-6658.2524400,203.5000000,324.3640000,322.6450000,347.1910000); //amt 8557(94)
	CreateDynamicObject(8557,97.7614400,-6661.5258800,203.5000000,323.4730000,322.3500000,346.7480000); //amt 8557(95)
	CreateDynamicObject(8557,93.7437900,-6664.7480500,203.5000000,322.5770000,322.0620000,346.2990000); //amt 8557(96)
	CreateDynamicObject(8557,89.6850000,-6667.9179700,203.5000000,321.6740000,321.7800000,345.8430000); //amt 8557(97)
	CreateDynamicObject(8557,85.5857100,-6671.0356400,203.5000000,320.7660000,321.5050000,345.3800000); //amt 8557(98)
	CreateDynamicObject(8557,81.4466400,-6674.1005900,203.5000000,319.8520000,321.2370000,344.9110000); //amt 8557(99)
	CreateDynamicObject(8557,77.2684300,-6677.1113300,203.5000000,318.9330000,320.9750000,344.4350000); //amt 8557(100)
	CreateDynamicObject(8557,73.0518200,-6680.0683600,203.5000000,318.0090000,320.7190000,343.9530000); //amt 8557(101)
	CreateDynamicObject(8557,68.7974900,-6682.9707000,203.5000000,317.0800000,320.4700000,343.4640000); //amt 8557(102)
	CreateDynamicObject(8557,64.5061300,-6685.8183600,203.5000000,316.1470000,320.2280000,342.9690000); //amt 8557(103)
	CreateDynamicObject(8557,60.1784800,-6688.6103500,203.5000000,315.2080000,319.9910000,342.4680000); //amt 8557(104)
	CreateDynamicObject(8557,55.8152300,-6691.3461900,203.5000000,314.2650000,319.7610000,341.9610000); //amt 8557(105)
	CreateDynamicObject(8557,51.4171100,-6694.0258800,203.5000000,313.3170000,319.5370000,341.4470000); //amt 8557(106)
	CreateDynamicObject(8557,46.9848800,-6696.6489300,203.5000000,312.3660000,319.3190000,340.9270000); //amt 8557(107)
	CreateDynamicObject(8557,42.5192300,-6699.2143600,203.5000000,311.4100000,319.1070000,340.4020000); //amt 8557(108)
	CreateDynamicObject(8557,38.0209200,-6701.7221700,203.5000000,310.4500000,318.9010000,339.8700000); //amt 8557(109)
	CreateDynamicObject(8557,33.4906900,-6704.1718700,203.5000000,309.4860000,318.7000000,339.3320000); //amt 8557(110)
	CreateDynamicObject(8557,28.9293100,-6706.5625000,203.5000000,308.5180000,318.5060000,338.7890000); //amt 8557(111)
	CreateDynamicObject(8557,24.3375200,-6708.8950200,203.5000000,307.5470000,318.3170000,338.2400000); //amt 8557(112)
	CreateDynamicObject(8557,19.7160800,-6711.1679700,203.5000000,306.5720000,318.1340000,337.6850000); //amt 8557(113)
	CreateDynamicObject(8557,15.0657500,-6713.3808600,203.5000000,305.5930000,317.9570000,337.1250000); //amt 8557(114)
	CreateDynamicObject(8557,10.3873300,-6715.5341800,203.5000000,304.6120000,317.7860000,336.5590000); //amt 8557(115)
	CreateDynamicObject(8557,5.6815600,-6717.6269500,203.5000000,303.6270000,317.6190000,335.9870000); //amt 8557(116)
	CreateDynamicObject(8557,0.9492500,-6719.6586900,203.5000000,302.6390000,317.4590000,335.4100000); //amt 8557(117)
	CreateDynamicObject(8557,-3.8088400,-6721.6298800,203.5000000,301.6480000,317.3040000,334.8270000); //amt 8557(118)
	CreateDynamicObject(8557,-8.5919000,-6723.5390600,203.5000000,300.6540000,317.1540000,334.2390000); //amt 8557(119)
	CreateDynamicObject(8557,-13.3991700,-6725.3867200,203.5000000,299.6580000,317.0100000,333.6460000); //amt 8557(120)
	CreateDynamicObject(8557,-18.2298000,-6727.1723600,203.5000000,298.6580000,316.8710000,333.0470000); //amt 8557(121)
	CreateDynamicObject(8557,-23.0830400,-6728.8960000,203.5000000,297.6570000,316.7370000,332.4440000); //amt 8557(122)
	CreateDynamicObject(8557,-27.9580700,-6730.5566400,203.5000000,296.6530000,316.6080000,331.8340000); //amt 8557(123)
	CreateDynamicObject(8557,-32.8540600,-6732.1543000,203.5000000,295.6460000,316.4850000,331.2200000); //amt 8557(124)
	CreateDynamicObject(8557,-37.7702300,-6733.6889600,203.5000000,294.6370000,316.3670000,330.6010000); //amt 8557(125)
	CreateDynamicObject(8557,-42.7057500,-6735.1601600,203.5000000,293.6260000,316.2540000,329.9760000); //amt 8557(126)
	CreateDynamicObject(8557,-47.6597900,-6736.5673800,203.5000000,292.6140000,316.1460000,329.3460000); //amt 8557(127)
	CreateDynamicObject(8557,-52.6315600,-6737.9111300,203.5000000,291.5990000,316.0430000,328.7120000); //amt 8557(128)
	CreateDynamicObject(8557,-57.6202100,-6739.1904300,203.5000000,290.5820000,315.9450000,328.0720000); //amt 8557(129)
	CreateDynamicObject(8557,-62.6249100,-6740.4057600,203.5000000,289.5640000,315.8520000,327.4270000); //amt 8557(130)
	CreateDynamicObject(8557,-67.6448400,-6741.5566400,203.5000000,288.5430000,315.7640000,326.7770000); //amt 8557(131)
	CreateDynamicObject(8557,-72.6791700,-6742.6425800,203.5000000,287.5220000,315.6800000,326.1230000); //amt 8557(132)
	CreateDynamicObject(8557,-77.7270800,-6743.6635700,203.5000000,286.4990000,315.6020000,325.4630000); //amt 8557(133)
	CreateDynamicObject(8557,-82.7876900,-6744.6191400,203.5000000,285.4740000,315.5290000,324.7990000); //amt 8557(134)
	CreateDynamicObject(8557,-87.8602000,-6745.5097700,203.5000000,284.4480000,315.4600000,324.1300000); //amt 8557(135)
	CreateDynamicObject(8557,-92.9437600,-6746.3354500,203.5000000,283.4210000,315.3970000,323.4560000); //amt 8557(136)
	CreateDynamicObject(8557,-98.0375400,-6747.0952100,203.5000000,282.3930000,315.3380000,322.7770000); //amt 8557(137)
	CreateDynamicObject(8557,-103.1406600,-6747.7890600,203.5000000,281.3640000,315.2840000,322.0930000); //amt 8557(138)
	CreateDynamicObject(8557,-108.2522900,-6748.4174800,203.5000000,280.3340000,315.2340000,321.4050000); //amt 8557(139)
	CreateDynamicObject(8557,-113.3716100,-6748.9799800,203.5000000,279.3030000,315.1900000,320.7120000); //amt 8557(140)
	CreateDynamicObject(8557,-118.4977100,-6749.4765600,203.5000000,278.2710000,315.1500000,320.0140000); //amt 8557(141)
	CreateDynamicObject(8557,-123.6298200,-6749.9072300,203.5000000,277.2390000,315.1150000,319.3120000); //amt 8557(142)
	CreateDynamicObject(8557,-128.7670300,-6750.2714800,203.5000000,276.2060000,315.0840000,318.6040000); //amt 8557(143)
	CreateDynamicObject(8557,-133.9085100,-6750.5698200,203.5000000,275.1720000,315.0580000,317.8920000); //amt 8557(144)
	CreateDynamicObject(8557,-139.0533800,-6750.8017600,203.5000000,274.1380000,315.0370000,317.1760000); //amt 8557(145)
	CreateDynamicObject(8557,-144.2008400,-6750.9672900,203.5000000,273.1040000,315.0210000,316.4540000); //amt 8557(146)
	CreateDynamicObject(8557,-149.3499800,-6751.0668900,203.5000000,272.0690000,315.0090000,315.7280000); //amt 8557(147)
	CreateDynamicObject(8557,-154.5000000,-6751.1001000,203.5000000,271.0350000,315.0020000,314.9970000); //amt 8557(148)
	CreateDynamicObject(8557,-159.6500200,-6751.0668900,203.5000000,270.0000000,90.0000000,89.2620000); //amt 8557(149)
	CreateDynamicObject(8557,-159.6000100,-6749.1001000,207.8999900,0.0000000,180.0000000,180.0000000); //amt 8557(149)
	CreateDynamicObject(8557,-172.8965100,-6750.8964800,202.2350200,280.9090000,270.0000000,269.2620000); //amt 8557(151)
	CreateDynamicObject(8557,-185.6642500,-6750.7319300,198.4857500,291.8180000,270.0000000,269.2620000); //amt 8557(152)
	CreateDynamicObject(8557,-197.4917400,-6750.5795900,192.3877400,302.7270000,270.0000000,269.2620000); //amt 8557(153)
	CreateDynamicObject(8557,-207.9515500,-6750.4448200,184.1613800,313.6360000,270.0000000,269.2620000); //amt 8557(154)
	CreateDynamicObject(8557,-216.6656200,-6750.3325200,174.1039900,324.5450000,270.0000000,269.2620000); //amt 8557(155)
	CreateDynamicObject(8557,-223.3189800,-6750.2470700,162.5790600,335.4550000,270.0000000,269.2620000); //amt 8557(156)
	CreateDynamicObject(8557,-227.6712000,-6750.1909200,150.0031300,346.3640000,270.0000000,269.2620000); //amt 8557(157)
	CreateDynamicObject(8557,-229.5649400,-6750.1665000,136.8307300,357.2730000,270.0000000,269.2620000); //amt 8557(158)
	CreateDynamicObject(8557,-230.2000000,-6750.1001000,123.5000000,2.9310000,270.0000000,269.0120000); //amt 8557(159)
	CreateDynamicObject(8557,-167.4396400,-6749.1001000,207.4891400,0.0000000,186.0000000,180.0000000); //amt 8557(160)
	CreateDynamicObject(8557,-175.1933900,-6749.1001000,206.2610600,0.0000000,192.0000000,180.0000000); //amt 8557(161)
	CreateDynamicObject(8557,-182.7762800,-6749.1001000,204.2292300,0.0000000,198.0000000,180.0000000); //amt 8557(162)
	CreateDynamicObject(8557,-190.1052600,-6749.1001000,201.4158900,0.0000000,204.0000000,180.0000000); //amt 8557(163)
	CreateDynamicObject(8557,-197.1000100,-6749.1001000,197.8519000,0.0000000,210.0000000,180.0000000); //amt 8557(164)
	CreateDynamicObject(8557,-203.6839000,-6749.1001000,193.5762600,0.0000000,216.0000000,180.0000000); //amt 8557(165)
	CreateDynamicObject(8557,-209.7848100,-6749.1001000,188.6358500,0.0000000,222.0000000,180.0000000); //amt 8557(166)
	CreateDynamicObject(8557,-215.3358600,-6749.1001000,183.0847800,0.0000000,228.0000000,180.0000000); //amt 8557(167)
	CreateDynamicObject(8557,-220.2762800,-6749.1001000,176.9838900,0.0000000,234.0000000,180.0000000); //amt 8557(168)
	CreateDynamicObject(8557,-224.5519100,-6749.1001000,170.3999900,0.0000000,240.0000000,180.0000000); //amt 8557(169)
	CreateDynamicObject(8557,-228.1159100,-6749.1001000,163.4052400,0.0000000,246.0000000,180.0000000); //amt 8557(170)
	CreateDynamicObject(8557,-230.9292300,-6749.1001000,156.0762600,0.0000000,252.0000000,180.0000000); //amt 8557(171)
	CreateDynamicObject(8557,-232.9610600,-6749.1001000,148.4933600,0.0000000,258.0000000,180.0000000); //amt 8557(172)
	CreateDynamicObject(8557,-234.1891500,-6749.1001000,140.7396200,0.0000000,264.0000000,180.0000000); //amt 8557(173)
	CreateDynamicObject(8557,-234.6000100,-6749.1001000,132.8999900,0.0000000,270.0000000,180.0000000); //amt 8557(174)
	CreateDynamicObject(8557,-235.3999900,-6749.0000000,125.1000000,0.0000000,276.0000000,180.0000000); //amt 8557(175)
	CreateDynamicObject(8557,-144.3000000,-6749.0000000,207.8999900,0.0000000,179.9950000,179.9950000); //amt 8557(149)
	CreateDynamicObject(8557,-221.8000000,-6746.5000000,106.4000000,281.5000000,0.0000000,90.0000000); //amt 8557(159)
	CreateDynamicObject(8557,-222.9829600,-6746.5000000,101.4100500,285.1730000,0.0000000,90.0000000); //amt 8557(178)
	CreateDynamicObject(8557,-224.4831800,-6746.5000000,96.5061500,288.8470000,0.0000000,90.0000000); //amt 8557(179)
	CreateDynamicObject(8557,-226.2945300,-6746.5000000,91.7084400,292.5200000,0.0000000,90.0000000); //amt 8557(180)
	CreateDynamicObject(8557,-228.4095300,-6746.5000000,87.0366400,296.1940000,0.0000000,90.0000000); //amt 8557(181)
	CreateDynamicObject(8557,-230.8195200,-6746.5000000,82.5099500,299.8670000,0.0000000,90.0000000); //amt 8557(182)
	CreateDynamicObject(8557,-233.5145900,-6746.5000000,78.1469700,303.5410000,0.0000000,90.0000000); //amt 8557(183)
	CreateDynamicObject(8557,-236.4836400,-6746.5000000,73.9656200,307.2140000,0.0000000,90.0000000); //amt 8557(184)
	CreateDynamicObject(8557,-239.7145100,-6746.5000000,69.9830900,310.8880000,0.0000000,90.0000000); //amt 8557(185)
	CreateDynamicObject(8557,-243.1938800,-6746.5000000,66.2157500,314.5610000,0.0000000,90.0000000); //amt 8557(186)
	CreateDynamicObject(8557,-246.9075000,-6746.5000000,62.6790800,318.2350000,0.0000000,90.0000000); //amt 8557(187)
	CreateDynamicObject(8557,-250.8400700,-6746.5000000,59.3876000,321.9080000,0.0000000,90.0000000); //amt 8557(188)
	CreateDynamicObject(8557,-254.9754500,-6746.5000000,56.3548400,325.5820000,0.0000000,90.0000000); //amt 8557(189)
	CreateDynamicObject(8557,-259.2966300,-6746.5000000,53.5932800,329.2550000,0.0000000,90.0000000); //amt 8557(190)
	CreateDynamicObject(8557,-263.7858900,-6746.5000000,51.1142400,332.9290000,0.0000000,90.0000000); //amt 8557(191)
	CreateDynamicObject(8557,-268.4247400,-6746.5000000,48.9279300,336.6020000,0.0000000,90.0000000); //amt 8557(192)
	CreateDynamicObject(8557,-273.1941500,-6746.5000000,47.0433100,340.2760000,0.0000000,90.0000000); //amt 8557(193)
	CreateDynamicObject(8557,-278.0745200,-6746.5000000,45.4681500,343.9490000,0.0000000,90.0000000); //amt 8557(194)
	CreateDynamicObject(8557,-283.0457500,-6746.5000000,44.2089200,347.6220000,0.0000000,90.0000000); //amt 8557(195)
	CreateDynamicObject(8557,-288.0874600,-6746.5000000,43.2707700,351.2960000,0.0000000,90.0000000); //amt 8557(196)
	CreateDynamicObject(8557,-293.1789200,-6746.5000000,42.6575900,354.9690000,0.0000000,90.0000000); //amt 8557(197)
	CreateDynamicObject(8557,-298.2992200,-6746.5000000,42.3718600,358.6430000,0.0000000,90.0000000); //amt 8557(198)
	CreateDynamicObject(8557,-303.4273100,-6746.5000000,42.4147900,2.3160000,0.0000000,90.0000000); //amt 8557(199)
	CreateDynamicObject(8557,-308.5420800,-6746.5000000,42.7861900,5.9900000,0.0000000,90.0000000); //amt 8557(200)
	CreateDynamicObject(8557,-313.6225600,-6746.5000000,43.4845100,9.6630000,0.0000000,90.0000000); //amt 8557(201)
	CreateDynamicObject(8557,-318.6478600,-6746.5000000,44.5069200,13.3370000,0.0000000,90.0000000); //amt 8557(202)
	CreateDynamicObject(6959,-348.6000100,-6746.2002000,46.2000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (7)
	CreateDynamicObject(6959,-389.7999900,-6746.2002000,46.2000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (8)
	CreateDynamicObject(8557,-227.0000000,-6751.1001000,123.5000000,8.9280000,270.0000000,327.0110000); //amt 8557(159)
	CreateDynamicObject(6959,-431.0000000,-6746.2002000,46.2000000,0.0000000,0.0000000,0.0000000); //amt 6959(9)
	CreateDynamicObject(6959,-472.2000100,-6746.2002000,46.2000000,0.0000000,0.0000000,0.0000000); //amt 6959(10)
	CreateDynamicObject(6959,-513.4000200,-6746.2002000,46.2000000,0.0000000,0.0000000,0.0000000); //amt 6959(11)
	CreateDynamicObject(6959,-554.5999800,-6746.2002000,46.2000000,0.0000000,0.0000000,0.0000000); //amt 6959(12)
	CreateDynamicObject(6959,-595.7999900,-6746.2002000,46.2000000,0.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(1634,-614.7000100,-6764.2998000,47.3000000,0.0000000,0.0000000,90.0000000); //object(landjump2) (1)
	CreateDynamicObject(1634,-614.7000100,-6760.3999000,47.3000000,0.0000000,0.0000000,90.0000000); //object(landjump2) (2)
	CreateDynamicObject(1634,-614.7000100,-6756.5000000,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(3)
	CreateDynamicObject(1634,-614.7000100,-6752.6001000,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(4)
	CreateDynamicObject(1634,-614.7000100,-6748.7002000,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(5)
	CreateDynamicObject(1634,-614.7000100,-6744.8002900,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(6)
	CreateDynamicObject(1634,-614.7000100,-6740.9003900,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(7)
	CreateDynamicObject(1634,-614.7000100,-6756.5000000,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(8)
	CreateDynamicObject(1634,-614.7000100,-6752.6001000,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(9)
	CreateDynamicObject(1634,-614.7000100,-6748.7002000,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(10)
	CreateDynamicObject(1634,-614.7000100,-6744.8002900,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(11)
	CreateDynamicObject(1634,-614.7000100,-6740.9003900,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(12)
	CreateDynamicObject(1634,-614.7000100,-6737.0004900,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(13)
	CreateDynamicObject(1634,-614.7000100,-6733.1005900,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(14)
	CreateDynamicObject(1634,-614.7000100,-6729.2006800,47.3000000,0.0000000,0.0000000,90.0000000); //amt 1634(15)
	CreateDynamicObject(6959,-617.9000200,-6746.6001000,67.7000000,0.0000000,90.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-616.7999900,-6746.6001000,75.1000000,0.0000000,90.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-638.5999800,-6746.6001000,88.3000000,0.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-679.7000100,-6746.6001000,88.3000000,0.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-721.0000000,-6746.6001000,88.3000000,0.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-638.5999800,-6766.6001000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-762.2999900,-6746.6001000,88.3000000,0.0000000,0.0000000,0.0000000); //amt 6959(25)
	CreateDynamicObject(6959,-803.5999800,-6746.6001000,88.3000000,0.0000000,0.0000000,0.0000000); //amt 6959(26)
	CreateDynamicObject(6959,-844.8999600,-6746.6001000,88.3000000,0.0000000,0.0000000,0.0000000); //amt 6959(27)
	CreateDynamicObject(6959,-886.1999500,-6746.6001000,88.3000000,0.0000000,0.0000000,0.0000000); //amt 6959(28)
	CreateDynamicObject(6959,-927.4999400,-6746.6001000,88.3000000,0.0000000,0.0000000,0.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-679.9000200,-6766.6001000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-721.2000700,-6766.6001000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(31)
	CreateDynamicObject(6959,-762.5001200,-6766.6001000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(32)
	CreateDynamicObject(6959,-803.8001700,-6766.6001000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(33)
	CreateDynamicObject(6959,-845.1002200,-6766.6001000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(34)
	CreateDynamicObject(6959,-886.4002700,-6766.6001000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(35)
	CreateDynamicObject(6959,-638.5999800,-6726.7002000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-679.9000200,-6726.7002000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-721.2000700,-6726.7002000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(38)
	CreateDynamicObject(6959,-762.5001200,-6726.7002000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(39)
	CreateDynamicObject(6959,-803.8001700,-6726.7002000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(40)
	CreateDynamicObject(6959,-845.1002200,-6726.7002000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(41)
	CreateDynamicObject(6959,-886.4002700,-6726.7002000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(42)
	CreateDynamicObject(6959,-927.7003200,-6726.7002000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(43)
	CreateDynamicObject(6959,-638.5999800,-6746.6001000,127.8000000,0.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-679.9000200,-6746.6001000,127.8000000,0.0000000,0.0000000,0.0000000); //amt 6959(13)
	CreateDynamicObject(6959,-721.2000700,-6746.6001000,127.8000000,0.0000000,0.0000000,0.0000000); //amt 6959(46)
	CreateDynamicObject(6959,-762.5001200,-6746.6001000,127.8000000,0.0000000,0.0000000,0.0000000); //amt 6959(47)
	CreateDynamicObject(6959,-803.8001700,-6746.6001000,127.8000000,0.0000000,0.0000000,0.0000000); //amt 6959(48)
	CreateDynamicObject(6959,-845.1002200,-6746.6001000,127.8000000,0.0000000,0.0000000,0.0000000); //amt 6959(49)
	CreateDynamicObject(6959,-886.4002700,-6746.6001000,127.8000000,0.0000000,0.0000000,0.0000000); //amt 6959(50)
	CreateDynamicObject(6959,-927.7003200,-6746.6001000,127.8000000,0.0000000,0.0000000,0.0000000); //amt 6959(51)
	CreateDynamicObject(6959,-927.5999800,-6766.6001000,108.2000000,90.0000000,0.0000000,0.0000000); //amt 6959(35)
	CreateDynamicObject(3374,-614.2999900,-6761.7002000,66.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (1)
	CreateDynamicObject(3374,-614.2999900,-6761.7002000,69.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (2)
	CreateDynamicObject(3374,-614.2999900,-6761.7002000,72.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (3)
	CreateDynamicObject(3374,-614.2999900,-6757.7002000,66.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (4)
	CreateDynamicObject(3374,-614.2999900,-6753.7002000,66.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (5)
	CreateDynamicObject(3374,-614.2999900,-6753.7002000,63.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (6)
	CreateDynamicObject(3374,-614.2999900,-6753.7002000,60.8000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (7)
	CreateDynamicObject(3374,-614.2999900,-6757.7002000,72.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (9)
	CreateDynamicObject(3374,-614.2999900,-6753.7002000,72.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (10)
	CreateDynamicObject(3374,-614.2999900,-6757.7002000,60.8000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (12)
	CreateDynamicObject(3374,-614.2999900,-6761.7002000,60.8000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (13)
	CreateDynamicObject(3374,-613.9000200,-6748.6001000,72.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (14)
	CreateDynamicObject(3437,-942.2999900,-6748.2998000,87.0000000,0.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (1)
	CreateDynamicObject(3374,-613.9000200,-6748.6001000,69.6000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (15)
	CreateDynamicObject(3374,-613.9000200,-6748.6001000,66.6000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (16)
	CreateDynamicObject(3374,-613.9000200,-6748.6001000,63.8000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (17)
	CreateDynamicObject(3374,-613.9000200,-6748.6001000,60.9000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (18)
	CreateDynamicObject(3374,-613.7999900,-6744.6001000,72.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (19)
	CreateDynamicObject(3374,-613.7000100,-6741.7002000,72.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (20)
	CreateDynamicObject(3374,-613.7000100,-6741.7002000,69.6000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (21)
	CreateDynamicObject(3374,-613.7000100,-6741.7002000,66.7000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (22)
	CreateDynamicObject(3374,-613.7000100,-6745.1001000,66.7000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (23)
	CreateDynamicObject(3374,-613.7000100,-6744.1001000,63.7000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (24)
	CreateDynamicObject(3374,-613.7000100,-6741.7998000,61.0000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (25)
	CreateDynamicObject(3374,-613.5999800,-6736.7002000,72.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (26)
	CreateDynamicObject(3374,-613.5999800,-6736.7002000,69.6000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (27)
	CreateDynamicObject(3374,-613.5999800,-6736.7002000,66.6000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (28)
	CreateDynamicObject(3374,-613.5999800,-6732.7998000,72.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (29)
	CreateDynamicObject(3374,-613.7000100,-6728.7998000,72.5000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (30)
	CreateDynamicObject(3374,-613.7999900,-6732.7998000,66.6000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (31)
	CreateDynamicObject(3374,-613.7999900,-6728.7998000,66.6000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (32)
	CreateDynamicObject(3374,-613.7999900,-6728.7998000,63.6000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (33)
	CreateDynamicObject(3374,-613.7999900,-6728.7998000,60.7000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (34)
	CreateDynamicObject(3374,-613.7999900,-6732.7998000,60.7000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (35)
	CreateDynamicObject(3374,-613.7999900,-6736.7998000,60.7000000,0.0000000,0.0000000,0.0000000); //object(sw_haybreak02) (36)
	CreateDynamicObject(8557,-965.0000000,-6748.0000000,86.7000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (3)
	CreateDynamicObject(6959,-2521.1999500,-6752.2998000,233.1000100,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-948.0999800,-6725.7002000,108.9000000,0.0000000,90.0000000,0.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-948.0999800,-6746.6001000,114.8000000,0.0000000,90.0000000,0.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-968.4000200,-6750.6001000,106.9000000,90.0000000,0.0000000,0.0000000); //amt 6959(35)
	CreateDynamicObject(6959,-968.7000100,-6745.7002000,106.9000000,90.0000000,0.0000000,0.0000000); //amt 6959(35)
	CreateDynamicObject(6959,-969.0999800,-6747.6001000,95.8000000,0.0000000,0.0000000,0.0000000); //amt 6959(51)
	CreateDynamicObject(8557,-1004.5999800,-6748.0000000,86.7000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (4)
	CreateDynamicObject(8557,-1044.8000500,-6748.0000000,86.7000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (5)
	CreateDynamicObject(8557,-1052.8201900,-6748.0000000,86.8072200,0.0000000,1.5320000,0.0000000); //amt 8557(207)
	CreateDynamicObject(8557,-1060.8345900,-6748.0000000,87.1288100,0.0000000,3.0640000,0.0000000); //amt 8557(208)
	CreateDynamicObject(8557,-1068.8375200,-6748.0000000,87.6645500,0.0000000,4.5960000,0.0000000); //amt 8557(209)
	CreateDynamicObject(8557,-1076.8232400,-6748.0000000,88.4140400,0.0000000,6.1280000,0.0000000); //amt 8557(210)
	CreateDynamicObject(8557,-1084.7861300,-6748.0000000,89.3767500,0.0000000,7.6600000,0.0000000); //amt 8557(211)
	CreateDynamicObject(8557,-1092.7204600,-6748.0000000,90.5519900,0.0000000,9.1910000,0.0000000); //amt 8557(212)
	CreateDynamicObject(8557,-1100.6204800,-6748.0000000,91.9389300,0.0000000,10.7230000,0.0000000); //amt 8557(213)
	CreateDynamicObject(8557,-1108.4805900,-6748.0000000,93.5365800,0.0000000,12.2550000,0.0000000); //amt 8557(214)
	CreateDynamicObject(8557,-1116.2951700,-6748.0000000,95.3437700,0.0000000,13.7870000,0.0000000); //amt 8557(215)
	CreateDynamicObject(8557,-1124.0587200,-6748.0000000,97.3592500,0.0000000,15.3190000,0.0000000); //amt 8557(216)
	CreateDynamicObject(8557,-1131.7655000,-6748.0000000,99.5815400,0.0000000,16.8510000,0.0000000); //amt 8557(217)
	CreateDynamicObject(8557,-1139.4101600,-6748.0000000,102.0090700,0.0000000,18.3830000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1268.0999800,-6750.3999000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1268.0999800,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1308.4000200,-6750.3999000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1308.4000200,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1346.8000500,-6756.8999000,111.8000000,0.0000000,0.0000000,20.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1346.4000200,-6738.8999000,111.8000000,0.0000000,0.0000000,340.0050000); //amt 8557(218)
	CreateDynamicObject(8557,-1384.9000200,-6763.6001000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1384.5999800,-6732.1001000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(3877,-1329.6999500,-6747.7998000,112.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (8)
	CreateDynamicObject(3877,-1365.5000000,-6760.7002000,112.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (9)
	CreateDynamicObject(3877,-1365.3000500,-6734.8999000,112.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (11)
	CreateDynamicObject(8557,-1421.3000500,-6753.7998000,111.8000000,0.0000000,0.0000000,330.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1421.0000000,-6741.7998000,111.8000000,0.0000000,0.0000000,30.0000000); //amt 8557(218)
	CreateDynamicObject(3877,-1403.4000200,-6760.7002000,112.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (12)
	CreateDynamicObject(3877,-1403.4000200,-6735.0000000,112.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (13)
	CreateDynamicObject(3877,-1425.6999500,-6747.8999000,112.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (14)
	CreateDynamicObject(8557,-1446.9000200,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1446.9000200,-6750.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1446.8994100,-6750.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1487.0999800,-6750.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1487.0999800,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-1527.3005400,-6750.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(235)
	CreateDynamicObject(8557,-1567.5011000,-6750.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(236)
	CreateDynamicObject(8557,-1607.7016600,-6750.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(237)
	CreateDynamicObject(8557,-1647.9022200,-6750.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(238)
	CreateDynamicObject(8557,-1688.1027800,-6750.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(239)
	CreateDynamicObject(8557,-1728.3033400,-6750.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(240)
	CreateDynamicObject(8557,-1527.2999300,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(241)
	CreateDynamicObject(8557,-1567.4998800,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(242)
	CreateDynamicObject(8557,-1607.6998300,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(243)
	CreateDynamicObject(8557,-1647.8997800,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(244)
	CreateDynamicObject(8557,-1688.0997300,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(245)
	CreateDynamicObject(8557,-1728.2996800,-6745.2998000,111.8000000,0.0000000,0.0000000,0.0000000); //amt 8557(246)
	CreateDynamicObject(8557,-1733.9126000,-6750.2998000,111.8786800,0.0000000,1.6070000,0.0000000); //amt 8557(247)
	CreateDynamicObject(8557,-1739.5174600,-6750.2998000,112.1146400,0.0000000,3.2140000,0.0000000); //amt 8557(248)
	CreateDynamicObject(8557,-1745.1134000,-6750.2998000,112.5077100,0.0000000,4.8210000,0.0000000); //amt 8557(249)
	CreateDynamicObject(8557,-1750.6962900,-6750.2998000,113.0575600,0.0000000,6.4290000,0.0000000); //amt 8557(250)
	CreateDynamicObject(8557,-1756.2614700,-6750.2998000,113.7637800,0.0000000,8.0360000,0.0000000); //amt 8557(251)
	CreateDynamicObject(8557,-1761.8045700,-6750.2998000,114.6258000,0.0000000,9.6430000,0.0000000); //amt 8557(252)
	CreateDynamicObject(8557,-1767.3214100,-6750.2998000,115.6429400,0.0000000,11.2500000,0.0000000); //amt 8557(253)
	CreateDynamicObject(8557,-1772.8075000,-6750.2998000,116.8144200,0.0000000,12.8570000,0.0000000); //amt 8557(254)
	CreateDynamicObject(8557,-1778.2586700,-6750.2998000,118.1393000,0.0000000,14.4640000,0.0000000); //amt 8557(255)
	CreateDynamicObject(8557,-1783.6704100,-6750.2998000,119.6165400,0.0000000,16.0710000,0.0000000); //amt 8557(256)
	CreateDynamicObject(8557,-1789.0387000,-6750.2998000,121.2449800,0.0000000,17.6790000,0.0000000); //amt 8557(257)
	CreateDynamicObject(8557,-1794.3591300,-6750.2998000,123.0233400,0.0000000,19.2860000,0.0000000); //amt 8557(258)
	CreateDynamicObject(8557,-1799.6276900,-6750.2998000,124.9502200,0.0000000,20.8930000,0.0000000); //amt 8557(259)
	CreateDynamicObject(8557,-1804.8400900,-6750.2998000,127.0240900,0.0000000,22.5000000,0.0000000); //amt 8557(260)
	CreateDynamicObject(8557,-1809.9921900,-6750.2998000,129.2433500,0.0000000,24.1070000,0.0000000); //amt 8557(261)
	CreateDynamicObject(8557,-1815.0800800,-6750.2998000,131.6062300,0.0000000,25.7140000,0.0000000); //amt 8557(262)
	CreateDynamicObject(8557,-1820.0997300,-6750.2998000,134.1108700,0.0000000,27.3210000,0.0000000); //amt 8557(263)
	CreateDynamicObject(8557,-1825.0471200,-6750.2998000,136.7553300,0.0000000,28.9290000,0.0000000); //amt 8557(264)
	CreateDynamicObject(8557,-1829.9184600,-6750.2998000,139.5374800,0.0000000,30.5360000,0.0000000); //amt 8557(265)
	CreateDynamicObject(8557,-1834.7097200,-6750.2998000,142.4551700,0.0000000,32.1430000,0.0000000); //amt 8557(266)
	CreateDynamicObject(8557,-1839.4173600,-6750.2998000,145.5060700,0.0000000,33.7500000,0.0000000); //amt 8557(267)
	CreateDynamicObject(8557,-1844.0376000,-6750.2998000,148.6878400,0.0000000,35.3570000,0.0000000); //amt 8557(268)
	CreateDynamicObject(8557,-1848.5667700,-6750.2998000,151.9979100,0.0000000,36.9640000,0.0000000); //amt 8557(269)
	CreateDynamicObject(8557,-1733.9089400,-6745.2998000,111.8786800,0.0000000,1.6070000,0.0000000); //amt 8557(270)
	CreateDynamicObject(8557,-1739.5137900,-6745.2998000,112.1146400,0.0000000,3.2140000,0.0000000); //amt 8557(271)
	CreateDynamicObject(8557,-1745.1097400,-6745.2998000,112.5077100,0.0000000,4.8210000,0.0000000); //amt 8557(272)
	CreateDynamicObject(8557,-1750.6926300,-6745.2998000,113.0575600,0.0000000,6.4290000,0.0000000); //amt 8557(273)
	CreateDynamicObject(8557,-1756.2578100,-6745.2998000,113.7637800,0.0000000,8.0360000,0.0000000); //amt 8557(274)
	CreateDynamicObject(8557,-1761.8009000,-6745.2998000,114.6258000,0.0000000,9.6430000,0.0000000); //amt 8557(275)
	CreateDynamicObject(8557,-1767.3177500,-6745.2998000,115.6429400,0.0000000,11.2500000,0.0000000); //amt 8557(276)
	CreateDynamicObject(8557,-1772.8038300,-6745.2998000,116.8144200,0.0000000,12.8570000,0.0000000); //amt 8557(277)
	CreateDynamicObject(8557,-1778.2550000,-6745.2998000,118.1393000,0.0000000,14.4640000,0.0000000); //amt 8557(278)
	CreateDynamicObject(8557,-1783.6667500,-6745.2998000,119.6165400,0.0000000,16.0710000,0.0000000); //amt 8557(279)
	CreateDynamicObject(8557,-1789.0350300,-6745.2998000,121.2449800,0.0000000,17.6790000,0.0000000); //amt 8557(280)
	CreateDynamicObject(8557,-1794.3554700,-6745.2998000,123.0233400,0.0000000,19.2860000,0.0000000); //amt 8557(281)
	CreateDynamicObject(8557,-1799.6240200,-6745.2998000,124.9502200,0.0000000,20.8930000,0.0000000); //amt 8557(282)
	CreateDynamicObject(8557,-1804.8364300,-6745.2998000,127.0240900,0.0000000,22.5000000,0.0000000); //amt 8557(283)
	CreateDynamicObject(8557,-1809.9885300,-6745.2998000,129.2433500,0.0000000,24.1070000,0.0000000); //amt 8557(284)
	CreateDynamicObject(8557,-1815.0764200,-6745.2998000,131.6062300,0.0000000,25.7140000,0.0000000); //amt 8557(285)
	CreateDynamicObject(8557,-1820.0960700,-6745.2998000,134.1108700,0.0000000,27.3210000,0.0000000); //amt 8557(286)
	CreateDynamicObject(8557,-1825.0434600,-6745.2998000,136.7553300,0.0000000,28.9290000,0.0000000); //amt 8557(287)
	CreateDynamicObject(8557,-1829.9147900,-6745.2998000,139.5374800,0.0000000,30.5360000,0.0000000); //amt 8557(288)
	CreateDynamicObject(8557,-1834.7060500,-6745.2998000,142.4551700,0.0000000,32.1430000,0.0000000); //amt 8557(289)
	CreateDynamicObject(8557,-1839.4137000,-6745.2998000,145.5060700,0.0000000,33.7500000,0.0000000); //amt 8557(290)
	CreateDynamicObject(8557,-1844.0339400,-6745.2998000,148.6878400,0.0000000,35.3570000,0.0000000); //amt 8557(291)
	CreateDynamicObject(8557,-1848.5631100,-6745.2998000,151.9979100,0.0000000,36.9640000,0.0000000); //amt 8557(292)
	CreateDynamicObject(8557,-1955.4000200,-6744.7998000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(292)
	CreateDynamicObject(8557,-1955.4000200,-6749.8999000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(292)
	CreateDynamicObject(8557,-1995.8000500,-6749.8999000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(292)
	CreateDynamicObject(8557,-1995.8000500,-6744.7998000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(292)
	CreateDynamicObject(8557,-2036.2000700,-6749.8999000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(297)
	CreateDynamicObject(8557,-2076.6001000,-6749.8999000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(298)
	CreateDynamicObject(8557,-2117.0001200,-6749.8999000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(299)
	CreateDynamicObject(8557,-2157.4001500,-6749.8999000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(300)
	CreateDynamicObject(8557,-2197.8001700,-6749.8999000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(301)
	CreateDynamicObject(8557,-2238.2002000,-6749.8999000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(302)
	CreateDynamicObject(8557,-2036.2000700,-6744.7998000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(303)
	CreateDynamicObject(8557,-2076.6001000,-6744.7998000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(304)
	CreateDynamicObject(8557,-2117.0001200,-6744.7998000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(305)
	CreateDynamicObject(8557,-2157.4001500,-6744.7998000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(306)
	CreateDynamicObject(8557,-2197.8001700,-6744.7998000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(307)
	CreateDynamicObject(8557,-2238.2002000,-6744.7998000,191.3000000,0.0000000,0.0000000,0.0000000); //amt 8557(308)
	CreateDynamicObject(8557,-2243.1084000,-6749.8999000,191.3602400,0.0000000,1.4060000,0.0000000); //amt 8557(309)
	CreateDynamicObject(8557,-2248.0136700,-6749.8999000,191.5409100,0.0000000,2.8130000,0.0000000); //amt 8557(310)
	CreateDynamicObject(8557,-2252.9130900,-6749.8999000,191.8419200,0.0000000,4.2190000,0.0000000); //amt 8557(311)
	CreateDynamicObject(8557,-2257.8037100,-6749.8999000,192.2630600,0.0000000,5.6250000,0.0000000); //amt 8557(312)
	CreateDynamicObject(8557,-2262.6823700,-6749.8999000,192.8040900,0.0000000,7.0310000,0.0000000); //amt 8557(313)
	CreateDynamicObject(8557,-2267.5463900,-6749.8999000,193.4647100,0.0000000,8.4380000,0.0000000); //amt 8557(314)
	CreateDynamicObject(8557,-2272.3925800,-6749.8999000,194.2444800,0.0000000,9.8440000,0.0000000); //amt 8557(315)
	CreateDynamicObject(8557,-2277.2182600,-6749.8999000,195.1429400,0.0000000,11.2500000,0.0000000); //amt 8557(316)
	CreateDynamicObject(8557,-2282.0205100,-6749.8999000,196.1595800,0.0000000,12.6560000,0.0000000); //amt 8557(317)
	CreateDynamicObject(8557,-2286.7961400,-6749.8999000,197.2937500,0.0000000,14.0630000,0.0000000); //amt 8557(318)
	CreateDynamicObject(8557,-2291.5427200,-6749.8999000,198.5447800,0.0000000,15.4690000,0.0000000); //amt 8557(319)
	CreateDynamicObject(8557,-2296.2570800,-6749.8999000,199.9119400,0.0000000,16.8750000,0.0000000); //amt 8557(320)
	CreateDynamicObject(8557,-2300.9365200,-6749.8999000,201.3943600,0.0000000,18.2810000,0.0000000); //amt 8557(321)
	CreateDynamicObject(8557,-2305.5781200,-6749.8999000,202.9912000,0.0000000,19.6880000,0.0000000); //amt 8557(322)
	CreateDynamicObject(8557,-2310.1792000,-6749.8999000,204.7014500,0.0000000,21.0940000,0.0000000); //amt 8557(323)
	CreateDynamicObject(8557,-2314.7368200,-6749.8999000,206.5240900,0.0000000,22.5000000,0.0000000); //amt 8557(324)
	CreateDynamicObject(8557,-2319.2485400,-6749.8999000,208.4580500,0.0000000,23.9060000,0.0000000); //amt 8557(325)
	CreateDynamicObject(8557,-2323.7111800,-6749.8999000,210.5021400,0.0000000,25.3130000,0.0000000); //amt 8557(326)
	CreateDynamicObject(8557,-2328.1225600,-6749.8999000,212.6551500,0.0000000,26.7190000,0.0000000); //amt 8557(327)
	CreateDynamicObject(8557,-2332.4794900,-6749.8999000,214.9157600,0.0000000,28.1250000,0.0000000); //amt 8557(328)
	CreateDynamicObject(8557,-2336.7797900,-6749.8999000,217.2826100,0.0000000,29.5310000,0.0000000); //amt 8557(329)
	CreateDynamicObject(8557,-2341.0207500,-6749.8999000,219.7542900,0.0000000,30.9380000,0.0000000); //amt 8557(330)
	CreateDynamicObject(8557,-2345.1997100,-6749.8999000,222.3292800,0.0000000,32.3440000,0.0000000); //amt 8557(331)
	CreateDynamicObject(8557,-2349.3142100,-6749.8999000,225.0060700,0.0000000,33.7500000,0.0000000); //amt 8557(332)
	CreateDynamicObject(8557,-2353.3618200,-6749.8999000,227.7830400,0.0000000,35.1560000,0.0000000); //amt 8557(333)
	CreateDynamicObject(8557,-2357.3400900,-6749.8999000,230.6584900,0.0000000,36.5630000,0.0000000); //amt 8557(334)
	CreateDynamicObject(8557,-2243.1084000,-6744.7998000,191.3602400,0.0000000,1.4060000,0.0000000); //amt 8557(335)
	CreateDynamicObject(8557,-2248.0136700,-6744.7998000,191.5409100,0.0000000,2.8130000,0.0000000); //amt 8557(336)
	CreateDynamicObject(8557,-2252.9130900,-6744.7998000,191.8419200,0.0000000,4.2190000,0.0000000); //amt 8557(337)
	CreateDynamicObject(8557,-2257.8037100,-6744.7998000,192.2630600,0.0000000,5.6250000,0.0000000); //amt 8557(338)
	CreateDynamicObject(8557,-2262.6823700,-6744.7998000,192.8040900,0.0000000,7.0310000,0.0000000); //amt 8557(339)
	CreateDynamicObject(8557,-2267.5463900,-6744.7998000,193.4647100,0.0000000,8.4380000,0.0000000); //amt 8557(340)
	CreateDynamicObject(8557,-2272.3925800,-6744.7998000,194.2444800,0.0000000,9.8440000,0.0000000); //amt 8557(341)
	CreateDynamicObject(8557,-2277.2182600,-6744.7998000,195.1429400,0.0000000,11.2500000,0.0000000); //amt 8557(342)
	CreateDynamicObject(8557,-2282.0205100,-6744.7998000,196.1595800,0.0000000,12.6560000,0.0000000); //amt 8557(343)
	CreateDynamicObject(8557,-2286.7961400,-6744.7998000,197.2937500,0.0000000,14.0630000,0.0000000); //amt 8557(344)
	CreateDynamicObject(8557,-2291.5427200,-6744.7998000,198.5447800,0.0000000,15.4690000,0.0000000); //amt 8557(345)
	CreateDynamicObject(8557,-2296.2570800,-6744.7998000,199.9119400,0.0000000,16.8750000,0.0000000); //amt 8557(346)
	CreateDynamicObject(8557,-2300.9365200,-6744.7998000,201.3943600,0.0000000,18.2810000,0.0000000); //amt 8557(347)
	CreateDynamicObject(8557,-2305.5781200,-6744.7998000,202.9912000,0.0000000,19.6880000,0.0000000); //amt 8557(348)
	CreateDynamicObject(8557,-2310.1792000,-6744.7998000,204.7014500,0.0000000,21.0940000,0.0000000); //amt 8557(349)
	CreateDynamicObject(8557,-2314.7368200,-6744.7998000,206.5240900,0.0000000,22.5000000,0.0000000); //amt 8557(350)
	CreateDynamicObject(8557,-2319.2485400,-6744.7998000,208.4580500,0.0000000,23.9060000,0.0000000); //amt 8557(351)
	CreateDynamicObject(8557,-2323.7111800,-6744.7998000,210.5021400,0.0000000,25.3130000,0.0000000); //amt 8557(352)
	CreateDynamicObject(8557,-2328.1225600,-6744.7998000,212.6551500,0.0000000,26.7190000,0.0000000); //amt 8557(353)
	CreateDynamicObject(8557,-2332.4794900,-6744.7998000,214.9157600,0.0000000,28.1250000,0.0000000); //amt 8557(354)
	CreateDynamicObject(8557,-2336.7797900,-6744.7998000,217.2826100,0.0000000,29.5310000,0.0000000); //amt 8557(355)
	CreateDynamicObject(8557,-2341.0207500,-6744.7998000,219.7542900,0.0000000,30.9380000,0.0000000); //amt 8557(356)
	CreateDynamicObject(8557,-2345.1997100,-6744.7998000,222.3292800,0.0000000,32.3440000,0.0000000); //amt 8557(357)
	CreateDynamicObject(8557,-2349.3142100,-6744.7998000,225.0060700,0.0000000,33.7500000,0.0000000); //amt 8557(358)
	CreateDynamicObject(8557,-2353.3618200,-6744.7998000,227.7830400,0.0000000,35.1560000,0.0000000); //amt 8557(359)
	CreateDynamicObject(8557,-2357.3400900,-6744.7998000,230.6584900,0.0000000,36.5630000,0.0000000); //amt 8557(360)
	CreateDynamicObject(8557,-2529.6001000,-6749.8999000,239.8999900,0.0000000,132.5570000,0.0000000); //amt 8557(334)
	CreateDynamicObject(8557,-2532.7373000,-6749.8999000,236.1271700,0.0000000,126.9320000,0.0000000); //amt 8557(362)
	CreateDynamicObject(8557,-2535.4897500,-6749.8999000,232.0650200,0.0000000,121.3070000,0.0000000); //amt 8557(363)
	CreateDynamicObject(8557,-2537.8305700,-6749.8999000,227.7526400,0.0000000,115.6820000,0.0000000); //amt 8557(364)
	CreateDynamicObject(8557,-2539.7375500,-6749.8999000,223.2315800,0.0000000,110.0570000,0.0000000); //amt 8557(365)
	CreateDynamicObject(8557,-2541.1921400,-6749.8999000,218.5453900,0.0000000,104.4320000,0.0000000); //amt 8557(366)
	CreateDynamicObject(8557,-2542.1804200,-6749.8999000,213.7391800,0.0000000,98.8070000,0.0000000); //amt 8557(367)
	CreateDynamicObject(8557,-2542.6928700,-6749.8999000,208.8592500,0.0000000,93.1820000,0.0000000); //amt 8557(368)
	CreateDynamicObject(8557,-2542.7246100,-6749.8999000,203.9525800,0.0000000,87.5570000,0.0000000); //amt 8557(369)
	CreateDynamicObject(8557,-2542.2751500,-6749.8999000,199.0664400,0.0000000,81.9320000,0.0000000); //amt 8557(370)
	CreateDynamicObject(8557,-2541.3488800,-6749.8999000,194.2478800,0.0000000,76.3070000,0.0000000); //amt 8557(371)
	CreateDynamicObject(8557,-2539.9548300,-6749.8999000,189.5433000,0.0000000,70.6820000,0.0000000); //amt 8557(372)
	CreateDynamicObject(8557,-2538.1064500,-6749.8999000,184.9980200,0.0000000,65.0570000,0.0000000); //amt 8557(373)
	CreateDynamicObject(8557,-2535.8212900,-6749.8999000,180.6558100,0.0000000,59.4320000,0.0000000); //amt 8557(374)
	CreateDynamicObject(8557,-2533.1215800,-6749.8999000,176.5584700,0.0000000,53.8070000,0.0000000); //amt 8557(375)
	CreateDynamicObject(8557,-2530.0334500,-6749.8999000,172.7454800,0.0000000,48.1820000,0.0000000); //amt 8557(376)
	CreateDynamicObject(8557,-2526.5861800,-6749.8999000,169.2535700,0.0000000,42.5570000,0.0000000); //amt 8557(377)
	CreateDynamicObject(8557,-2522.8134800,-6749.8999000,166.1163500,0.0000000,36.9320000,0.0000000); //amt 8557(378)
	CreateDynamicObject(8557,-2529.6001000,-6744.7998000,239.8999900,0.0000000,132.5560000,0.0000000); //amt 8557(334)
	CreateDynamicObject(8557,-2532.7373000,-6744.7998000,236.1270900,0.0000000,126.9310000,0.0000000); //amt 8557(380)
	CreateDynamicObject(8557,-2535.4895000,-6744.7998000,232.0648500,0.0000000,121.3060000,0.0000000); //amt 8557(381)
	CreateDynamicObject(8557,-2537.8303200,-6744.7998000,227.7524100,0.0000000,115.6810000,0.0000000); //amt 8557(382)
	CreateDynamicObject(8557,-2539.7370600,-6744.7998000,223.2313100,0.0000000,110.0560000,0.0000000); //amt 8557(383)
	CreateDynamicObject(8557,-2541.1914100,-6744.7998000,218.5450700,0.0000000,104.4310000,0.0000000); //amt 8557(384)
	CreateDynamicObject(8557,-2542.1796900,-6744.7998000,213.7388300,0.0000000,98.8060000,0.0000000); //amt 8557(385)
	CreateDynamicObject(8557,-2542.6918900,-6744.7998000,208.8588900,0.0000000,93.1810000,0.0000000); //amt 8557(386)
	CreateDynamicObject(8557,-2542.7233900,-6744.7998000,203.9522200,0.0000000,87.5560000,0.0000000); //amt 8557(387)
	CreateDynamicObject(8557,-2542.2739300,-6744.7998000,199.0660900,0.0000000,81.9310000,0.0000000); //amt 8557(388)
	CreateDynamicObject(8557,-2541.3476600,-6744.7998000,194.2475600,0.0000000,76.3060000,0.0000000); //amt 8557(389)
	CreateDynamicObject(8557,-2539.9533700,-6744.7998000,189.5430300,0.0000000,70.6810000,0.0000000); //amt 8557(390)
	CreateDynamicObject(8557,-2538.1047400,-6744.7998000,184.9977900,0.0000000,65.0560000,0.0000000); //amt 8557(391)
	CreateDynamicObject(8557,-2535.8195800,-6744.7998000,180.6556400,0.0000000,59.4310000,0.0000000); //amt 8557(392)
	CreateDynamicObject(8557,-2533.1198700,-6744.7998000,176.5583800,0.0000000,53.8060000,0.0000000); //amt 8557(393)
	CreateDynamicObject(8557,-2530.0314900,-6744.7998000,172.7454800,0.0000000,48.1810000,0.0000000); //amt 8557(394)
	CreateDynamicObject(8557,-2526.5842300,-6744.7998000,169.2536600,0.0000000,42.5560000,0.0000000); //amt 8557(395)
	CreateDynamicObject(8557,-2522.8112800,-6744.7998000,166.1165500,0.0000000,36.9310000,0.0000000); //amt 8557(396)
	CreateDynamicObject(8557,-2484.6999500,-6749.8999000,141.8999900,0.0000000,326.9310000,0.0000000); //amt 8557(378)
	CreateDynamicObject(8557,-2484.6992200,-6744.7998000,141.8999900,0.0000000,326.9260000,0.0000000); //amt 8557(378)
	CreateDynamicObject(6959,-948.0996100,-6770.5000000,108.9000000,0.0000000,90.0000000,0.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2521.1999500,-6742.2998000,233.1000100,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2532.6001000,-6745.2002000,253.7000000,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2492.1001000,-6746.3999000,240.6000100,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2501.1999500,-6747.2002000,229.7000000,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2521.1999500,-6752.2998000,191.8000000,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2521.1999500,-6742.2998000,192.0000000,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2521.1999500,-6752.2998000,150.7000000,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(8557,-2491.4843700,-6744.7998000,137.5585300,0.0000000,327.8490000,0.0000000); //amt 8557(401)
	CreateDynamicObject(8557,-2498.3386200,-6744.7998000,133.3269300,0.0000000,328.7720000,0.0000000); //amt 8557(402)
	CreateDynamicObject(8557,-2505.2602500,-6744.7998000,129.2063100,0.0000000,329.6950000,0.0000000); //amt 8557(403)
	CreateDynamicObject(8557,-2512.2473100,-6744.7998000,125.1977400,0.0000000,330.6180000,0.0000000); //amt 8557(404)
	CreateDynamicObject(8557,-2519.2981000,-6744.7998000,121.3022500,0.0000000,331.5410000,0.0000000); //amt 8557(405)
	CreateDynamicObject(8557,-2526.4106400,-6744.7998000,117.5208400,0.0000000,332.4640000,0.0000000); //amt 8557(406)
	CreateDynamicObject(8557,-2533.5832500,-6744.7998000,113.8545200,0.0000000,333.3870000,0.0000000); //amt 8557(407)
	CreateDynamicObject(8557,-2540.8139600,-6744.7998000,110.3042100,0.0000000,334.3100000,0.0000000); //amt 8557(408)
	CreateDynamicObject(8557,-2548.1008300,-6744.7998000,106.8708600,0.0000000,335.2330000,0.0000000); //amt 8557(409)
	CreateDynamicObject(8557,-2555.4421400,-6744.7998000,103.5553400,0.0000000,336.1560000,0.0000000); //amt 8557(410)
	CreateDynamicObject(8557,-2562.8359400,-6744.7998000,100.3585200,0.0000000,337.0790000,0.0000000); //amt 8557(411)
	CreateDynamicObject(8557,-2570.2802700,-6744.7998000,97.2812300,0.0000000,338.0030000,0.0000000); //amt 8557(412)
	CreateDynamicObject(8557,-2577.7731900,-6744.7998000,94.3242600,0.0000000,338.9260000,0.0000000); //amt 8557(413)
	CreateDynamicObject(8557,-2585.3127400,-6744.7998000,91.4884000,0.0000000,339.8490000,0.0000000); //amt 8557(414)
	CreateDynamicObject(8557,-2592.8969700,-6744.7998000,88.7743700,0.0000000,340.7720000,0.0000000); //amt 8557(415)
	CreateDynamicObject(8557,-2600.5239300,-6744.7998000,86.1828700,0.0000000,341.6950000,0.0000000); //amt 8557(416)
	CreateDynamicObject(8557,-2608.1918900,-6744.7998000,83.7145800,0.0000000,342.6180000,0.0000000); //amt 8557(417)
	CreateDynamicObject(8557,-2615.8984400,-6744.7998000,81.3701400,0.0000000,343.5410000,0.0000000); //amt 8557(418)
	CreateDynamicObject(8557,-2623.6416000,-6744.7998000,79.1501500,0.0000000,344.4640000,0.0000000); //amt 8557(419)
	CreateDynamicObject(8557,-2631.4199200,-6744.7998000,77.0552000,0.0000000,345.3870000,0.0000000); //amt 8557(420)
	CreateDynamicObject(8557,-2639.2307100,-6744.7998000,75.0858200,0.0000000,346.3100000,0.0000000); //amt 8557(421)
	CreateDynamicObject(8557,-2647.0722700,-6744.7998000,73.2425400,0.0000000,347.2330000,0.0000000); //amt 8557(422)
	CreateDynamicObject(8557,-2654.9423800,-6744.7998000,71.5258100,0.0000000,348.1560000,0.0000000); //amt 8557(423)
	CreateDynamicObject(8557,-2662.8393600,-6744.7998000,69.9361000,0.0000000,349.0790000,0.0000000); //amt 8557(424)
	CreateDynamicObject(8557,-2670.7607400,-6744.7998000,68.4738200,0.0000000,350.0030000,0.0000000); //amt 8557(425)
	CreateDynamicObject(8557,-2678.7045900,-6744.7998000,67.1393400,0.0000000,350.9260000,0.0000000); //amt 8557(426)
	CreateDynamicObject(8557,-2686.6691900,-6744.7998000,65.9330300,0.0000000,351.8490000,0.0000000); //amt 8557(427)
	CreateDynamicObject(8557,-2694.6518600,-6744.7998000,64.8551500,0.0000000,352.7720000,0.0000000); //amt 8557(428)
	CreateDynamicObject(8557,-2702.6511200,-6744.7998000,63.9060400,0.0000000,353.6950000,0.0000000); //amt 8557(429)
	CreateDynamicObject(8557,-2710.6645500,-6744.7998000,63.0859000,0.0000000,354.6180000,0.0000000); //amt 8557(430)
	CreateDynamicObject(8557,-2718.6901900,-6744.7998000,62.3949700,0.0000000,355.5410000,0.0000000); //amt 8557(431)
	CreateDynamicObject(8557,-2726.7258300,-6744.7998000,61.8334400,0.0000000,356.4640000,0.0000000); //amt 8557(432)
	CreateDynamicObject(8557,-2734.7695300,-6744.7998000,61.4014200,0.0000000,357.3870000,0.0000000); //amt 8557(433)
	CreateDynamicObject(8557,-2742.8190900,-6744.7998000,61.0990500,0.0000000,358.3100000,0.0000000); //amt 8557(434)
	CreateDynamicObject(8557,-2750.8725600,-6744.7998000,60.9263900,0.0000000,359.2330000,0.0000000); //amt 8557(435)
	CreateDynamicObject(8557,-2758.9277300,-6744.7998000,60.8834800,0.0000000,0.1560000,0.0000000); //amt 8557(436)
	CreateDynamicObject(8557,-2766.9824200,-6744.7998000,60.9703800,0.0000000,1.0790000,0.0000000); //amt 8557(437)
	CreateDynamicObject(8557,-2775.0349100,-6744.7998000,61.1870100,0.0000000,2.0030000,0.0000000); //amt 8557(438)
	CreateDynamicObject(8557,-2783.0827600,-6744.7998000,61.5333300,0.0000000,2.9260000,0.0000000); //amt 8557(439)
	CreateDynamicObject(8557,-2791.1240200,-6744.7998000,62.0092600,0.0000000,3.8490000,0.0000000); //amt 8557(440)
	CreateDynamicObject(8557,-2491.4856000,-6749.8999000,137.5591100,0.0000000,327.8540000,0.0000000); //amt 8557(441)
	CreateDynamicObject(8557,-2498.3400900,-6749.8999000,133.3280900,0.0000000,328.7770000,0.0000000); //amt 8557(442)
	CreateDynamicObject(8557,-2505.2622100,-6749.8999000,129.2080700,0.0000000,329.7000000,0.0000000); //amt 8557(443)
	CreateDynamicObject(8557,-2512.2495100,-6749.8999000,125.2000800,0.0000000,330.6230000,0.0000000); //amt 8557(444)
	CreateDynamicObject(8557,-2519.3005400,-6749.8999000,121.3051800,0.0000000,331.5460000,0.0000000); //amt 8557(445)
	CreateDynamicObject(8557,-2526.4133300,-6749.8999000,117.5243800,0.0000000,332.4690000,0.0000000); //amt 8557(446)
	CreateDynamicObject(8557,-2533.5861800,-6749.8999000,113.8586700,0.0000000,333.3920000,0.0000000); //amt 8557(447)
	CreateDynamicObject(8557,-2540.8173800,-6749.8999000,110.3089800,0.0000000,334.3150000,0.0000000); //amt 8557(448)
	CreateDynamicObject(8557,-2548.1044900,-6749.8999000,106.8762400,0.0000000,335.2380000,0.0000000); //amt 8557(449)
	CreateDynamicObject(8557,-2555.4460400,-6749.8999000,103.5613400,0.0000000,336.1610000,0.0000000); //amt 8557(450)
	CreateDynamicObject(8557,-2562.8400900,-6749.8999000,100.3651600,0.0000000,337.0840000,0.0000000); //amt 8557(451)
	CreateDynamicObject(8557,-2570.2846700,-6749.8999000,97.2885000,0.0000000,338.0070000,0.0000000); //amt 8557(452)
	CreateDynamicObject(8557,-2577.7778300,-6749.8999000,94.3321700,0.0000000,338.9310000,0.0000000); //amt 8557(453)
	CreateDynamicObject(8557,-2585.3176300,-6749.8999000,91.4969400,0.0000000,339.8540000,0.0000000); //amt 8557(454)
	CreateDynamicObject(8557,-2592.9023400,-6749.8999000,88.7835500,0.0000000,340.7770000,0.0000000); //amt 8557(455)
	CreateDynamicObject(8557,-2600.5295400,-6749.8999000,86.1927000,0.0000000,341.7000000,0.0000000); //amt 8557(456)
	CreateDynamicObject(8557,-2608.1975100,-6749.8999000,83.7250600,0.0000000,342.6230000,0.0000000); //amt 8557(457)
	CreateDynamicObject(8557,-2615.9043000,-6749.8999000,81.3812700,0.0000000,343.5460000,0.0000000); //amt 8557(458)
	CreateDynamicObject(8557,-2623.6477100,-6749.8999000,79.1619400,0.0000000,344.4690000,0.0000000); //amt 8557(459)
	CreateDynamicObject(8557,-2631.4260300,-6749.8999000,77.0676400,0.0000000,345.3920000,0.0000000); //amt 8557(460)
	CreateDynamicObject(8557,-2639.2370600,-6749.8999000,75.0989300,0.0000000,346.3150000,0.0000000); //amt 8557(461)
	CreateDynamicObject(8557,-2647.0786100,-6749.8999000,73.2563200,0.0000000,347.2380000,0.0000000); //amt 8557(462)
	CreateDynamicObject(8557,-2654.9492200,-6749.8999000,71.5402600,0.0000000,348.1610000,0.0000000); //amt 8557(463)
	CreateDynamicObject(8557,-2662.8461900,-6749.8999000,69.9512200,0.0000000,349.0840000,0.0000000); //amt 8557(464)
	CreateDynamicObject(8557,-2670.7675800,-6749.8999000,68.4896100,0.0000000,350.0070000,0.0000000); //amt 8557(465)
	CreateDynamicObject(8557,-2678.7116700,-6749.8999000,67.1558200,0.0000000,350.9310000,0.0000000); //amt 8557(466)
	CreateDynamicObject(8557,-2686.6762700,-6749.8999000,65.9501600,0.0000000,351.8540000,0.0000000); //amt 8557(467)
	CreateDynamicObject(8557,-2694.6591800,-6749.8999000,64.8729700,0.0000000,352.7770000,0.0000000); //amt 8557(468)
	CreateDynamicObject(8557,-2702.6584500,-6749.8999000,63.9245300,0.0000000,353.7000000,0.0000000); //amt 8557(469)
	CreateDynamicObject(8557,-2710.6718700,-6749.8999000,63.1050800,0.0000000,354.6230000,0.0000000); //amt 8557(470)
	CreateDynamicObject(8557,-2718.6975100,-6749.8999000,62.4148300,0.0000000,355.5460000,0.0000000); //amt 8557(471)
	CreateDynamicObject(8557,-2726.7334000,-6749.8999000,61.8539700,0.0000000,356.4690000,0.0000000); //amt 8557(472)
	CreateDynamicObject(8557,-2734.7771000,-6749.8999000,61.4226400,0.0000000,357.3920000,0.0000000); //amt 8557(473)
	CreateDynamicObject(8557,-2742.8266600,-6749.8999000,61.1209600,0.0000000,358.3150000,0.0000000); //amt 8557(474)
	CreateDynamicObject(8557,-2750.8801300,-6749.8999000,60.9489700,0.0000000,359.2380000,0.0000000); //amt 8557(475)
	CreateDynamicObject(8557,-2758.9353000,-6749.8999000,60.9067600,0.0000000,0.1610000,0.0000000); //amt 8557(476)
	CreateDynamicObject(8557,-2766.9902300,-6749.8999000,60.9943200,0.0000000,1.0840000,0.0000000); //amt 8557(477)
	CreateDynamicObject(8557,-2775.0424800,-6749.8999000,61.2116500,0.0000000,2.0070000,0.0000000); //amt 8557(478)
	CreateDynamicObject(8557,-2783.0903300,-6749.8999000,61.5586400,0.0000000,2.9310000,0.0000000); //amt 8557(479)
	CreateDynamicObject(8557,-2791.1313500,-6749.8999000,62.0352700,0.0000000,3.8540000,0.0000000); //amt 8557(480)
	CreateDynamicObject(6959,-2501.1999500,-6747.2002000,189.7000000,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2521.1999500,-6742.2998000,150.7000000,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2521.1999500,-6752.2998000,110.3000000,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2521.1999500,-6742.2998000,110.1000000,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2501.1999500,-6747.2002000,182.2000000,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2483.8999000,-6752.2998000,150.7000000,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2483.8000500,-6742.2998000,150.7000000,0.0000000,90.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2484.0000000,-6746.8999000,171.3000000,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-2468.6999500,-6747.7998000,154.7000000,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(8557,-2813.8999000,-6747.0000000,64.5000000,27.2500000,0.0000000,90.0000000); //amt 8557(480)
	CreateDynamicObject(8557,-2818.4860800,-6747.0000000,66.8433700,26.8810000,0.0000000,90.0000000); //amt 8557(482)
	CreateDynamicObject(8557,-2823.0871600,-6747.0000000,69.1571600,26.5120000,0.0000000,90.0000000); //amt 8557(483)
	CreateDynamicObject(8557,-2827.7031200,-6747.0000000,71.4412800,26.1430000,0.0000000,90.0000000); //amt 8557(484)
	CreateDynamicObject(8557,-2832.3330100,-6747.0000000,73.6956500,25.7740000,0.0000000,90.0000000); //amt 8557(485)
	CreateDynamicObject(8557,-2836.9785200,-6747.0000000,75.9201500,25.4060000,0.0000000,90.0000000); //amt 8557(486)
	CreateDynamicObject(8557,-2841.6377000,-6747.0000000,78.1147200,25.0320000,0.0000000,90.0000000); //amt 8557(487)
	CreateDynamicObject(8557,-2846.3110400,-6747.0000000,80.2792300,24.6680000,0.0000000,90.0000000); //amt 8557(488)
	CreateDynamicObject(8557,-2850.9980500,-6747.0000000,82.4136200,24.2990000,0.0000000,90.0000000); //amt 8557(489)
	CreateDynamicObject(8557,-2855.6987300,-6747.0000000,84.5177900,23.9300000,0.0000000,90.0000000); //amt 8557(490)
	CreateDynamicObject(8557,-2860.4128400,-6747.0000000,86.5916500,23.5610000,0.0000000,90.0000000); //amt 8557(491)
	CreateDynamicObject(8557,-2865.1401400,-6747.0000000,88.6351300,23.1930000,0.0000000,90.0000000); //amt 8557(492)
	CreateDynamicObject(8557,-2869.8806200,-6747.0000000,90.6481300,22.8240000,0.0000000,90.0000000); //amt 8557(493)
	CreateDynamicObject(8557,-2874.6340300,-6747.0000000,92.6305700,22.4550000,0.0000000,90.0000000); //amt 8557(494)
	CreateDynamicObject(8557,-2879.3999000,-6747.0000000,94.5823700,22.0860000,0.0000000,90.0000000); //amt 8557(495)
	CreateDynamicObject(8557,-2884.1782200,-6747.0000000,96.5034400,21.7170000,0.0000000,90.0000000); //amt 8557(496)
	CreateDynamicObject(8557,-2888.9689900,-6747.0000000,98.3937200,21.3480000,0.0000000,90.0000000); //amt 8557(497)
	CreateDynamicObject(8557,-2893.7717300,-6747.0000000,100.2531100,20.9790000,0.0000000,90.0000000); //amt 8557(498)
	CreateDynamicObject(8557,-2898.5864300,-6747.0000000,102.0815600,20.6110000,0.0000000,90.0000000); //amt 8557(499)
	CreateDynamicObject(8557,-2903.4128400,-6747.0000000,103.8789600,20.2420000,0.0000000,90.0000000); //amt 8557(500)
	CreateDynamicObject(8557,-2908.2504900,-6747.0000000,105.6452600,19.8730000,0.0000000,90.0000000); //amt 8557(501)
	CreateDynamicObject(8557,-2913.0996100,-6747.0000000,107.3803700,19.5040000,0.0000000,90.0000000); //amt 8557(502)
	CreateDynamicObject(8557,-2917.9597200,-6747.0000000,109.0842400,19.1350000,0.0000000,90.0000000); //amt 8557(503)
	CreateDynamicObject(8557,-2922.8308100,-6747.0000000,110.7567700,18.7660000,0.0000000,90.0000000); //amt 8557(504)
	CreateDynamicObject(8557,-2927.7124000,-6747.0000000,112.3979300,18.3980000,0.0000000,90.0000000); //amt 8557(505)
	CreateDynamicObject(8557,-2932.6044900,-6747.0000000,114.0076300,18.0290000,0.0000000,90.0000000); //amt 8557(506)
	CreateDynamicObject(8557,-2937.5068400,-6747.0000000,115.5857800,17.6600000,0.0000000,90.0000000); //amt 8557(507)
	CreateDynamicObject(8557,-2942.4194300,-6747.0000000,117.1323500,17.2910000,0.0000000,90.0000000); //amt 8557(508)
	CreateDynamicObject(8557,-2947.3415500,-6747.0000000,118.6472700,16.9220000,0.0000000,90.0000000); //amt 8557(509)
	CreateDynamicObject(8557,-2952.2736800,-6747.0000000,120.1304600,16.5530000,0.0000000,90.0000000); //amt 8557(510)
	CreateDynamicObject(8557,-2957.2150900,-6747.0000000,121.5818700,16.1840000,0.0000000,90.0000000); //amt 8557(511)
	CreateDynamicObject(8557,-2962.1655300,-6747.0000000,123.0014400,15.8160000,0.0000000,90.0000000); //amt 8557(512)
	CreateDynamicObject(8557,-2967.1252400,-6747.0000000,124.3891100,15.4470000,0.0000000,90.0000000); //amt 8557(513)
	CreateDynamicObject(8557,-2972.0937500,-6747.0000000,125.7448300,15.0780000,0.0000000,90.0000000); //amt 8557(514)
	CreateDynamicObject(8557,-2977.0708000,-6747.0000000,127.0685300,14.7090000,0.0000000,90.0000000); //amt 8557(515)
	CreateDynamicObject(8557,-2982.0564000,-6747.0000000,128.3601700,14.3400000,0.0000000,90.0000000); //amt 8557(516)
	CreateDynamicObject(8557,-2987.0502900,-6747.0000000,129.6196700,13.9710000,0.0000000,90.0000000); //amt 8557(517)
	CreateDynamicObject(8557,-2992.0520000,-6747.0000000,130.8470200,13.6020000,0.0000000,90.0000000); //amt 8557(518)
	CreateDynamicObject(8557,-2997.0615200,-6747.0000000,132.0421100,13.2340000,0.0000000,90.0000000); //amt 8557(519)
	CreateDynamicObject(8557,-3002.0786100,-6747.0000000,133.2049600,12.8650000,0.0000000,90.0000000); //amt 8557(520)
	CreateDynamicObject(8557,-3007.1032700,-6747.0000000,134.3354600,12.4960000,0.0000000,90.0000000); //amt 8557(521)
	CreateDynamicObject(8557,-3012.1350100,-6747.0000000,135.4336200,12.1270000,0.0000000,90.0000000); //amt 8557(522)
	CreateDynamicObject(8557,-3017.1735800,-6747.0000000,136.4993600,11.7580000,0.0000000,90.0000000); //amt 8557(523)
	CreateDynamicObject(8557,-3022.2189900,-6747.0000000,137.5326200,11.3890000,0.0000000,90.0000000); //amt 8557(524)
	CreateDynamicObject(8557,-3027.2710000,-6747.0000000,138.5333900,11.0200000,0.0000000,90.0000000); //amt 8557(525)
	CreateDynamicObject(8557,-3032.3293500,-6747.0000000,139.5016200,10.6520000,0.0000000,90.0000000); //amt 8557(526)
	CreateDynamicObject(8557,-3037.3938000,-6747.0000000,140.4372600,10.2830000,0.0000000,90.0000000); //amt 8557(527)
	CreateDynamicObject(8557,-3042.4641100,-6747.0000000,141.3402700,9.9140000,0.0000000,90.0000000); //amt 8557(528)
	CreateDynamicObject(8557,-3047.5402800,-6747.0000000,142.2106300,9.5450000,0.0000000,90.0000000); //amt 8557(529)
	CreateDynamicObject(8557,-3052.6218300,-6747.0000000,143.0482900,9.1760000,0.0000000,90.0000000); //amt 8557(530)
	CreateDynamicObject(8557,-3057.7085000,-6747.0000000,143.8532100,8.8070000,0.0000000,90.0000000); //amt 8557(531)
	CreateDynamicObject(8557,-3062.8005400,-6747.0000000,144.6254000,8.4390000,0.0000000,90.0000000); //amt 8557(532)
	CreateDynamicObject(8557,-3067.8972200,-6747.0000000,145.3647600,8.0700000,0.0000000,90.0000000); //amt 8557(533)
	CreateDynamicObject(8557,-3072.9987800,-6747.0000000,146.0713000,7.7010000,0.0000000,90.0000000); //amt 8557(534)
	CreateDynamicObject(8557,-3078.1047400,-6747.0000000,146.7450000,7.3320000,0.0000000,90.0000000); //amt 8557(535)
	CreateDynamicObject(8557,-3083.2148400,-6747.0000000,147.3858000,6.9630000,0.0000000,90.0000000); //amt 8557(536)
	CreateDynamicObject(8557,-3088.3288600,-6747.0000000,147.9936800,6.5940000,0.0000000,90.0000000); //amt 8557(537)
	CreateDynamicObject(8557,-3093.4467800,-6747.0000000,148.5686500,6.2250000,0.0000000,90.0000000); //amt 8557(538)
	CreateDynamicObject(8557,-3098.5683600,-6747.0000000,149.1106600,5.8570000,0.0000000,90.0000000); //amt 8557(539)
	CreateDynamicObject(8557,-3103.6933600,-6747.0000000,149.6196900,5.4880000,0.0000000,90.0000000); //amt 8557(540)
	CreateDynamicObject(8557,-3108.8212900,-6747.0000000,150.0957000,5.1190000,0.0000000,90.0000000); //amt 8557(541)
	CreateDynamicObject(8557,-3113.9526400,-6747.0000000,150.5386800,4.7500000,0.0000000,90.0000000); //amt 8557(542)
	CreateDynamicObject(8557,-3119.0861800,-6747.0000000,150.9486400,4.3810000,0.0000000,90.0000000); //amt 8557(543)
	CreateDynamicObject(8557,-3124.2226600,-6747.0000000,151.3255300,4.0120000,0.0000000,90.0000000); //amt 8557(544)
	CreateDynamicObject(8557,-3129.3613300,-6747.0000000,151.6693400,3.6430000,0.0000000,90.0000000); //amt 8557(545)
	CreateDynamicObject(8557,-3134.5019500,-6747.0000000,151.9800700,3.2750000,0.0000000,90.0000000); //amt 8557(546)
	CreateDynamicObject(8557,-3139.6447800,-6747.0000000,152.2577100,2.9060000,0.0000000,90.0000000); //amt 8557(547)
	CreateDynamicObject(8557,-3144.7890600,-6747.0000000,152.5022300,2.5370000,0.0000000,90.0000000); //amt 8557(548)
	CreateDynamicObject(8557,-3149.9348100,-6747.0000000,152.7136200,2.1680000,0.0000000,90.0000000); //amt 8557(549)
	CreateDynamicObject(8557,-3155.0820300,-6747.0000000,152.8919100,1.7990000,0.0000000,90.0000000); //amt 8557(550)
	CreateDynamicObject(8557,-3160.2299800,-6747.0000000,153.0370200,1.4300000,0.0000000,90.0000000); //amt 8557(551)
	CreateDynamicObject(8557,-3165.3789100,-6747.0000000,153.1490000,1.0610000,0.0000000,90.0000000); //amt 8557(552)
	CreateDynamicObject(8557,-3170.5283200,-6747.0000000,153.2278300,0.6930000,0.0000000,90.0000000); //amt 8557(553)
	CreateDynamicObject(8557,-3175.6782200,-6747.0000000,153.2735000,0.3240000,0.0000000,90.0000000); //amt 8557(554)
	CreateDynamicObject(8557,-3180.8000500,-6747.0000000,154.3999900,23.4550000,0.0000000,90.0000000); //amt 8557(555)
	CreateDynamicObject(8557,-3185.5351600,-6747.0000000,156.4255400,22.8650000,0.0000000,90.0000000); //amt 8557(580)
	CreateDynamicObject(8557,-3190.2907700,-6747.0000000,158.4021900,22.2750000,0.0000000,90.0000000); //amt 8557(581)
	CreateDynamicObject(8557,-3195.0666500,-6747.0000000,160.3297600,21.6840000,0.0000000,90.0000000); //amt 8557(582)
	CreateDynamicObject(8557,-3199.8620600,-6747.0000000,162.2080200,21.0940000,0.0000000,90.0000000); //amt 8557(583)
	CreateDynamicObject(8557,-3204.6765100,-6747.0000000,164.0368000,20.5040000,0.0000000,90.0000000); //amt 8557(584)
	CreateDynamicObject(8557,-3209.5095200,-6747.0000000,165.8159000,19.9140000,0.0000000,90.0000000); //amt 8557(585)
	CreateDynamicObject(8557,-3214.3608400,-6747.0000000,167.5451200,19.3240000,0.0000000,90.0000000); //amt 8557(586)
	CreateDynamicObject(8557,-3219.2294900,-6747.0000000,169.2242700,18.7340000,0.0000000,90.0000000); //amt 8557(587)
	CreateDynamicObject(8557,-3224.1152300,-6747.0000000,170.8532100,18.1430000,0.0000000,90.0000000); //amt 8557(588)
	CreateDynamicObject(8557,-3229.0175800,-6747.0000000,172.4317200,17.5530000,0.0000000,90.0000000); //amt 8557(589)
	CreateDynamicObject(8557,-3233.9357900,-6747.0000000,173.9596600,16.9630000,0.0000000,90.0000000); //amt 8557(590)
	CreateDynamicObject(8557,-3238.8693800,-6747.0000000,175.4368400,16.3730000,0.0000000,90.0000000); //amt 8557(591)
	CreateDynamicObject(8557,-3243.8181200,-6747.0000000,176.8631400,15.7830000,0.0000000,90.0000000); //amt 8557(592)
	CreateDynamicObject(8557,-3248.7812500,-6747.0000000,178.2383900,15.1930000,0.0000000,90.0000000); //amt 8557(593)
	CreateDynamicObject(8557,-3253.7583000,-6747.0000000,179.5624500,14.6030000,0.0000000,90.0000000); //amt 8557(594)
	CreateDynamicObject(8557,-3258.7487800,-6747.0000000,180.8351700,14.0120000,0.0000000,90.0000000); //amt 8557(595)
	CreateDynamicObject(8557,-3263.7519500,-6747.0000000,182.0564300,13.4220000,0.0000000,90.0000000); //amt 8557(596)
	CreateDynamicObject(8557,-3268.7673300,-6747.0000000,183.2260700,12.8320000,0.0000000,90.0000000); //amt 8557(597)
	CreateDynamicObject(8557,-3273.7946800,-6747.0000000,184.3440100,12.2420000,0.0000000,90.0000000); //amt 8557(598)
	CreateDynamicObject(8557,-3278.8332500,-6747.0000000,185.4101000,11.6520000,0.0000000,90.0000000); //amt 8557(599)
	CreateDynamicObject(8557,-3283.8825700,-6747.0000000,186.4242400,11.0620000,0.0000000,90.0000000); //amt 8557(600)
	CreateDynamicObject(8557,-3288.9421400,-6747.0000000,187.3863200,10.4710000,0.0000000,90.0000000); //amt 8557(601)
	CreateDynamicObject(8557,-3294.0112300,-6747.0000000,188.2962300,9.8810000,0.0000000,90.0000000); //amt 8557(602)
	CreateDynamicObject(8557,-3299.0893600,-6747.0000000,189.1538700,9.2910000,0.0000000,90.0000000); //amt 8557(603)
	CreateDynamicObject(8557,-3304.1762700,-6747.0000000,189.9591700,8.7010000,0.0000000,90.0000000); //amt 8557(604)
	CreateDynamicObject(8557,-3309.2710000,-6747.0000000,190.7120400,8.1110000,0.0000000,90.0000000); //amt 8557(605)
	CreateDynamicObject(8557,-3314.3732900,-6747.0000000,191.4123700,7.5210000,0.0000000,90.0000000); //amt 8557(606)
	CreateDynamicObject(8557,-3319.4824200,-6747.0000000,192.0601200,6.9300000,0.0000000,90.0000000); //amt 8557(607)
	CreateDynamicObject(8557,-3324.5981400,-6747.0000000,192.6552100,6.3400000,0.0000000,90.0000000); //amt 8557(608)
	CreateDynamicObject(8557,-3329.7197300,-6747.0000000,193.1975900,5.7500000,0.0000000,90.0000000); //amt 8557(609)
	CreateDynamicObject(8557,-3334.8464400,-6747.0000000,193.6871600,5.1600000,0.0000000,90.0000000); //amt 8557(610)
	CreateDynamicObject(8557,-3339.9780300,-6747.0000000,194.1239300,4.5700000,0.0000000,90.0000000); //amt 8557(611)
	CreateDynamicObject(8557,-3345.1137700,-6747.0000000,194.5078000,3.9800000,0.0000000,90.0000000); //amt 8557(612)
	CreateDynamicObject(8557,-3350.2534200,-6747.0000000,194.8387500,3.3890000,0.0000000,90.0000000); //amt 8557(613)
	CreateDynamicObject(8557,-3355.3960000,-6747.0000000,195.1167600,2.7990000,0.0000000,90.0000000); //amt 8557(614)
	CreateDynamicObject(8557,-3360.5412600,-6747.0000000,195.3417800,2.2090000,0.0000000,90.0000000); //amt 8557(615)
	CreateDynamicObject(8557,-3365.6884800,-6747.0000000,195.5137900,1.6190000,0.0000000,90.0000000); //amt 8557(616)
	CreateDynamicObject(8557,-3370.8371600,-6747.0000000,195.6327700,1.0290000,0.0000000,90.0000000); //amt 8557(617)
	CreateDynamicObject(8557,-3375.9868200,-6747.0000000,195.6987200,0.4390000,0.0000000,90.0000000); //amt 8557(618)
	CreateDynamicObject(8557,-3381.1369600,-6747.0000000,195.7116100,359.8480000,0.0000000,90.0000000); //amt 8557(619)
	CreateDynamicObject(8557,-3386.2871100,-6747.0000000,195.6714600,359.2580000,0.0000000,90.0000000); //amt 8557(620)
	CreateDynamicObject(8557,-3391.4362800,-6747.0000000,195.5782800,358.6680000,0.0000000,90.0000000); //amt 8557(621)
	CreateDynamicObject(8557,-3396.5842300,-6747.0000000,195.4320400,358.0780000,0.0000000,90.0000000); //amt 8557(622)
	CreateDynamicObject(8557,-3401.7304700,-6747.0000000,195.2328000,357.4880000,0.0000000,90.0000000); //amt 8557(623)
	CreateDynamicObject(8557,-3406.8745100,-6747.0000000,194.9805600,356.8980000,0.0000000,90.0000000); //amt 8557(624)
	CreateDynamicObject(8557,-3412.0156200,-6747.0000000,194.6753400,356.3070000,0.0000000,90.0000000); //amt 8557(625)
	CreateDynamicObject(8557,-3417.1533200,-6747.0000000,194.3171800,355.7170000,0.0000000,90.0000000); //amt 8557(626)
	CreateDynamicObject(8557,-3422.2868700,-6747.0000000,193.9061400,355.1270000,0.0000000,90.0000000); //amt 8557(627)
	CreateDynamicObject(8557,-3427.4162600,-6747.0000000,193.4422300,354.5370000,0.0000000,90.0000000); //amt 8557(628)
	CreateDynamicObject(8557,-3432.5402800,-6747.0000000,192.9255400,353.9470000,0.0000000,90.0000000); //amt 8557(629)
	CreateDynamicObject(8557,-3437.6589400,-6747.0000000,192.3560800,353.3570000,0.0000000,90.0000000); //amt 8557(630)
	CreateDynamicObject(8557,-3442.7712400,-6747.0000000,191.7339200,352.7660000,0.0000000,90.0000000); //amt 8557(631)
	CreateDynamicObject(8557,-3447.8769500,-6747.0000000,191.0591300,352.1760000,0.0000000,90.0000000); //amt 8557(632)
	CreateDynamicObject(8557,-3452.9755900,-6747.0000000,190.3318000,351.5860000,0.0000000,90.0000000); //amt 8557(633)
	CreateDynamicObject(8557,-3458.0661600,-6747.0000000,189.5519900,350.9960000,0.0000000,90.0000000); //amt 8557(634)
	CreateDynamicObject(8557,-3463.1486800,-6747.0000000,188.7197900,350.4060000,0.0000000,90.0000000); //amt 8557(635)
	CreateDynamicObject(8557,-3468.2224100,-6747.0000000,187.8352700,349.8160000,0.0000000,90.0000000); //amt 8557(636)
	CreateDynamicObject(13666,-3458.8000500,-6748.7002000,195.1000100,0.0000000,0.0000000,5.0000000); //object(loopwee) (1)
	CreateDynamicObject(13666,-3462.1001000,-6748.5000000,195.1000100,0.0000000,0.0000000,4.9990000); //object(loopwee) (4)
	CreateDynamicObject(13666,-3465.4001500,-6748.2998000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(5)
	CreateDynamicObject(13666,-3468.7002000,-6748.0996100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(6)
	CreateDynamicObject(13666,-3472.0002400,-6747.8994100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(7)
	CreateDynamicObject(13666,-3475.3002900,-6747.6992200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(8)
	CreateDynamicObject(13666,-3478.6003400,-6747.4990200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(9)
	CreateDynamicObject(13666,-3481.9003900,-6747.2988300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(10)
	CreateDynamicObject(13666,-3485.2004400,-6747.0986300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(11)
	CreateDynamicObject(13666,-3488.5004900,-6746.8984400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(12)
	CreateDynamicObject(13666,-3491.8005400,-6746.6982400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(13)
	CreateDynamicObject(13666,-3495.1005900,-6746.4980500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(14)
	CreateDynamicObject(13666,-3498.4006300,-6746.2978500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(15)
	CreateDynamicObject(13666,-3501.7006800,-6746.0976600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(16)
	CreateDynamicObject(13666,-3505.0007300,-6745.8974600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(17)
	CreateDynamicObject(13666,-3508.3007800,-6745.6972700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(18)
	CreateDynamicObject(13666,-3511.6008300,-6745.4970700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(19)
	CreateDynamicObject(13666,-3514.9008800,-6745.2968700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(20)
	CreateDynamicObject(13666,-3518.2009300,-6745.0966800,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(21)
	CreateDynamicObject(13666,-3521.5009800,-6744.8964800,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(22)
	CreateDynamicObject(13666,-3524.8010300,-6744.6962900,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(23)
	CreateDynamicObject(13666,-3528.1010700,-6744.4960900,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(24)
	CreateDynamicObject(13666,-3531.4011200,-6744.2959000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(25)
	CreateDynamicObject(13666,-3534.7011700,-6744.0957000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(26)
	CreateDynamicObject(13666,-3538.0012200,-6743.8955100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(27)
	CreateDynamicObject(13666,-3541.3012700,-6743.6953100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(28)
	CreateDynamicObject(13666,-3544.6013200,-6743.4951200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(29)
	CreateDynamicObject(13666,-3547.9013700,-6743.2949200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(30)
	CreateDynamicObject(13666,-3551.2014200,-6743.0947300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(31)
	CreateDynamicObject(13666,-3554.5014600,-6742.8945300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(32)
	CreateDynamicObject(13666,-3557.8015100,-6742.6943400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(33)
	CreateDynamicObject(13666,-3561.1015600,-6742.4941400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(34)
	CreateDynamicObject(13666,-3564.4016100,-6742.2939500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(35)
	CreateDynamicObject(13666,-3567.7016600,-6742.0937500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(36)
	CreateDynamicObject(13666,-3571.0017100,-6741.8935500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(37)
	CreateDynamicObject(13666,-3574.3017600,-6741.6933600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(38)
	CreateDynamicObject(13666,-3577.6018100,-6741.4931600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(39)
	CreateDynamicObject(13666,-3580.9018600,-6741.2929700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(40)
	CreateDynamicObject(13666,-3584.2019000,-6741.0927700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(41)
	CreateDynamicObject(13666,-3587.5019500,-6740.8925800,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(42)
	CreateDynamicObject(13666,-3590.8020000,-6740.6923800,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(43)
	CreateDynamicObject(13666,-3594.1020500,-6740.4921900,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(44)
	CreateDynamicObject(6959,-3458.1001000,-6774.5000000,194.2000000,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3457.6999500,-6722.8999000,194.2000000,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3458.0000000,-6749.7998000,221.7000000,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(13666,-3597.4021000,-6740.2919900,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(45)
	CreateDynamicObject(13666,-3600.7021500,-6740.0918000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(46)
	CreateDynamicObject(13666,-3604.0022000,-6739.8916000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(47)
	CreateDynamicObject(13666,-3607.3022500,-6739.6914100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(48)
	CreateDynamicObject(13666,-3610.6022900,-6739.4912100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(49)
	CreateDynamicObject(13666,-3613.9023400,-6739.2910200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(50)
	CreateDynamicObject(13666,-3617.2023900,-6739.0908200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(51)
	CreateDynamicObject(13666,-3620.5024400,-6738.8906200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(52)
	CreateDynamicObject(13666,-3623.8024900,-6738.6904300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(53)
	CreateDynamicObject(13666,-3627.1025400,-6738.4902300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(54)
	CreateDynamicObject(13666,-3630.4025900,-6738.2900400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(55)
	CreateDynamicObject(13666,-3633.7026400,-6738.0898400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(56)
	CreateDynamicObject(13666,-3637.0026900,-6737.8896500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(57)
	CreateDynamicObject(13666,-3640.3027300,-6737.6894500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(58)
	CreateDynamicObject(13666,-3643.6027800,-6737.4892600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(59)
	CreateDynamicObject(13666,-3646.9028300,-6737.2890600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(60)
	CreateDynamicObject(13666,-3650.2028800,-6737.0888700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(61)
	CreateDynamicObject(13666,-3653.5029300,-6736.8886700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(62)
	CreateDynamicObject(13666,-3656.8029800,-6736.6884800,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(63)
	CreateDynamicObject(13666,-3660.1030300,-6736.4882800,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(64)
	CreateDynamicObject(13666,-3663.4030800,-6736.2880900,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(65)
	CreateDynamicObject(13666,-3666.7031200,-6736.0878900,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(66)
	CreateDynamicObject(13666,-3670.0031700,-6735.8877000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(67)
	CreateDynamicObject(13666,-3673.3032200,-6735.6875000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(68)
	CreateDynamicObject(13666,-3676.6032700,-6735.4873000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(69)
	CreateDynamicObject(13666,-3679.9033200,-6735.2871100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(70)
	CreateDynamicObject(13666,-3683.2033700,-6735.0869100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(71)
	CreateDynamicObject(13666,-3686.5034200,-6734.8867200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(72)
	CreateDynamicObject(13666,-3689.8034700,-6734.6865200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(73)
	CreateDynamicObject(13666,-3693.1035200,-6734.4863300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(74)
	CreateDynamicObject(13666,-3696.4035600,-6734.2861300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(75)
	CreateDynamicObject(13666,-3699.7036100,-6734.0859400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(76)
	CreateDynamicObject(13666,-3703.0036600,-6733.8857400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(77)
	CreateDynamicObject(13666,-3706.3037100,-6733.6855500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(78)
	CreateDynamicObject(13666,-3709.6037600,-6733.4853500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(79)
	CreateDynamicObject(13666,-3712.9038100,-6733.2851600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(80)
	CreateDynamicObject(13666,-3716.2038600,-6733.0849600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(81)
	CreateDynamicObject(13666,-3719.5039100,-6732.8847700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(82)
	CreateDynamicObject(13666,-3722.8039600,-6732.6845700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(83)
	CreateDynamicObject(13666,-3726.1040000,-6732.4843700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(84)
	CreateDynamicObject(13666,-3729.4040500,-6732.2841800,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(85)
	CreateDynamicObject(13666,-3732.7041000,-6732.0839800,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(86)
	CreateDynamicObject(13666,-3736.0041500,-6731.8837900,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(87)
	CreateDynamicObject(13666,-3739.3042000,-6731.6835900,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(88)
	CreateDynamicObject(13666,-3742.6042500,-6731.4834000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(89)
	CreateDynamicObject(13666,-3745.9043000,-6731.2832000,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(90)
	CreateDynamicObject(13666,-3749.2043500,-6731.0830100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(91)
	CreateDynamicObject(13666,-3752.5043900,-6730.8828100,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(92)
	CreateDynamicObject(13666,-3755.8044400,-6730.6826200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(93)
	CreateDynamicObject(13666,-3759.1044900,-6730.4824200,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(94)
	CreateDynamicObject(13666,-3762.4045400,-6730.2822300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(95)
	CreateDynamicObject(13666,-3765.7045900,-6730.0820300,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(96)
	CreateDynamicObject(13666,-3769.0046400,-6729.8818400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(97)
	CreateDynamicObject(13666,-3772.3046900,-6729.6816400,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(98)
	CreateDynamicObject(13666,-3775.6047400,-6729.4814500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(99)
	CreateDynamicObject(13666,-3778.9047900,-6729.2812500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(100)
	CreateDynamicObject(13666,-3782.2048300,-6729.0810500,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(101)
	CreateDynamicObject(13666,-3785.5048800,-6728.8808600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(102)
	CreateDynamicObject(13666,-3788.8049300,-6728.6806600,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(103)
	CreateDynamicObject(13666,-3792.1049800,-6728.4804700,195.1000100,0.0000000,0.0000000,5.0000000); //amt 13666(104)
	CreateDynamicObject(6959,-3561.0000000,-6742.6001000,175.0000000,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3572.3999000,-6741.1001000,175.0000000,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3665.1999500,-6545.7002000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(8557,-3797.3000500,-6735.0000000,196.3999900,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (33)
	CreateDynamicObject(8557,-3802.4480000,-6734.8671900,197.2196700,0.0000000,90.0000000,87.0490000); //amt 8557(643)
	CreateDynamicObject(8557,-3807.5820300,-6734.4702100,198.0393400,0.0000000,90.0000000,84.0980000); //amt 8557(644)
	CreateDynamicObject(8557,-3812.6892100,-6733.8085900,198.8590100,0.0000000,90.0000000,81.1480000); //amt 8557(645)
	CreateDynamicObject(8557,-3817.7553700,-6732.8857400,199.6786800,0.0000000,90.0000000,78.1970000); //amt 8557(646)
	CreateDynamicObject(8557,-3822.7670900,-6731.7026400,200.4983500,0.0000000,90.0000000,75.2460000); //amt 8557(647)
	CreateDynamicObject(8557,-3827.7114300,-6730.2636700,201.3180200,0.0000000,90.0000000,72.2950000); //amt 8557(648)
	CreateDynamicObject(8557,-3832.5752000,-6728.5717800,202.1377000,0.0000000,90.0000000,69.3440000); //amt 8557(649)
	CreateDynamicObject(8557,-3837.3454600,-6726.6318400,202.9573700,0.0000000,90.0000000,66.3930000); //amt 8557(650)
	CreateDynamicObject(8557,-3842.0095200,-6724.4487300,203.7770400,0.0000000,90.0000000,63.4430000); //amt 8557(651)
	CreateDynamicObject(8557,-3846.5549300,-6722.0283200,204.5967100,0.0000000,90.0000000,60.4920000); //amt 8557(652)
	CreateDynamicObject(8557,-3850.9697300,-6719.3774400,205.4163800,0.0000000,90.0000000,57.5410000); //amt 8557(653)
	CreateDynamicObject(8557,-3855.2421900,-6716.5029300,206.2360500,0.0000000,90.0000000,54.5900000); //amt 8557(654)
	CreateDynamicObject(8557,-3859.3610800,-6713.4121100,207.0557300,0.0000000,90.0000000,51.6390000); //amt 8557(655)
	CreateDynamicObject(8557,-3863.3151900,-6710.1132800,207.8754000,0.0000000,90.0000000,48.6890000); //amt 8557(656)
	CreateDynamicObject(8557,-3867.0944800,-6706.6152300,208.6950700,0.0000000,90.0000000,45.7380000); //amt 8557(657)
	CreateDynamicObject(8557,-3870.6884800,-6702.9272500,209.5147400,0.0000000,90.0000000,42.7870000); //amt 8557(658)
	CreateDynamicObject(8557,-3874.0881300,-6699.0590800,210.3344100,0.0000000,90.0000000,39.8360000); //amt 8557(659)
	CreateDynamicObject(8557,-3877.2839400,-6695.0214800,211.1540800,0.0000000,90.0000000,36.8850000); //amt 8557(660)
	CreateDynamicObject(8557,-3880.2678200,-6690.8242200,211.9737500,0.0000000,90.0000000,33.9340000); //amt 8557(661)
	CreateDynamicObject(8557,-3883.0314900,-6686.4794900,212.7934300,0.0000000,90.0000000,30.9840000); //amt 8557(662)
	CreateDynamicObject(8557,-3885.5678700,-6681.9975600,213.6131100,0.0000000,90.0000000,28.0330000); //amt 8557(663)
	CreateDynamicObject(8557,-3887.8703600,-6677.3916000,214.4327900,0.0000000,90.0000000,25.0820000); //amt 8557(664)
	CreateDynamicObject(8557,-3889.9323700,-6672.6728500,215.2524600,0.0000000,90.0000000,22.1310000); //amt 8557(665)
	CreateDynamicObject(8557,-3891.7490200,-6667.8540000,216.0721100,0.0000000,90.0000000,19.1800000); //amt 8557(666)
	CreateDynamicObject(8557,-3893.3149400,-6662.9487300,216.8918000,0.0000000,90.0000000,16.2300000); //amt 8557(667)
	CreateDynamicObject(8557,-3894.6264600,-6657.9687500,217.7114700,0.0000000,90.0000000,13.2790000); //amt 8557(668)
	CreateDynamicObject(8557,-3895.6799300,-6652.9282200,218.5311400,0.0000000,90.0000000,10.3280000); //amt 8557(669)
	CreateDynamicObject(8557,-3896.4724100,-6647.8398400,219.3508100,0.0000000,90.0000000,7.3770000); //amt 8557(670)
	CreateDynamicObject(8557,-3897.0017100,-6642.7177700,220.1704900,0.0000000,90.0000000,4.4260000); //amt 8557(671)
	CreateDynamicObject(8557,-3897.2668500,-6637.5747100,220.9901600,0.0000000,90.0000000,1.4750000); //amt 8557(672)
	CreateDynamicObject(8557,-3897.2668500,-6632.4252900,221.8098300,0.0000000,90.0000000,358.5250000); //amt 8557(673)
	CreateDynamicObject(8557,-3897.0017100,-6627.2822300,222.6295000,0.0000000,90.0000000,355.5740000); //amt 8557(674)
	CreateDynamicObject(8557,-3896.4724100,-6622.1601600,223.4491700,0.0000000,90.0000000,352.6230000); //amt 8557(675)
	CreateDynamicObject(8557,-3895.6799300,-6617.0717800,224.2688400,0.0000000,90.0000000,349.6720000); //amt 8557(676)
	CreateDynamicObject(8557,-3894.6264600,-6612.0312500,225.0885200,0.0000000,90.0000000,346.7210000); //amt 8557(677)
	CreateDynamicObject(8557,-3893.3149400,-6607.0512700,225.9081900,0.0000000,90.0000000,343.7710000); //amt 8557(678)
	CreateDynamicObject(8557,-3891.7490200,-6602.1460000,226.7278600,0.0000000,90.0000000,340.8200000); //amt 8557(679)
	CreateDynamicObject(8557,-3889.9323700,-6597.3271500,227.5475300,0.0000000,90.0000000,337.8690000); //amt 8557(680)
	CreateDynamicObject(8557,-3887.8703600,-6592.6084000,228.3672000,0.0000000,90.0000000,334.9180000); //amt 8557(681)
	CreateDynamicObject(8557,-3885.5678700,-6588.0024400,229.1868700,0.0000000,90.0000000,331.9670000); //amt 8557(682)
	CreateDynamicObject(8557,-3883.0314900,-6583.5205100,230.0065500,0.0000000,90.0000000,329.0160000); //amt 8557(683)
	CreateDynamicObject(8557,-3880.2678200,-6579.1757800,230.8262200,0.0000000,90.0000000,326.0660000); //amt 8557(684)
	CreateDynamicObject(8557,-3877.2839400,-6574.9785200,231.6458900,0.0000000,90.0000000,323.1150000); //amt 8557(685)
	CreateDynamicObject(8557,-3874.0881300,-6570.9409200,232.4655600,0.0000000,90.0000000,320.1640000); //amt 8557(686)
	CreateDynamicObject(8557,-3870.6884800,-6567.0727500,233.2852300,0.0000000,90.0000000,317.2130000); //amt 8557(687)
	CreateDynamicObject(8557,-3867.0944800,-6563.3847700,234.1049000,0.0000000,90.0000000,314.2620000); //amt 8557(688)
	CreateDynamicObject(8557,-3863.3151900,-6559.8867200,234.9245800,0.0000000,90.0000000,311.3110000); //amt 8557(689)
	CreateDynamicObject(8557,-3859.3610800,-6556.5878900,235.7442500,0.0000000,90.0000000,308.3610000); //amt 8557(690)
	CreateDynamicObject(8557,-3855.2421900,-6553.4970700,236.5639200,0.0000000,90.0000000,305.4100000); //amt 8557(691)
	CreateDynamicObject(8557,-3850.9697300,-6550.6225600,237.3835900,0.0000000,90.0000000,302.4590000); //amt 8557(692)
	CreateDynamicObject(8557,-3846.5549300,-6547.9716800,238.2032600,0.0000000,90.0000000,299.5080000); //amt 8557(693)
	CreateDynamicObject(8557,-3842.0095200,-6545.5512700,239.0229300,0.0000000,90.0000000,296.5570000); //amt 8557(694)
	CreateDynamicObject(8557,-3837.3454600,-6543.3681600,239.8426100,0.0000000,90.0000000,293.6070000); //amt 8557(695)
	CreateDynamicObject(8557,-3832.5752000,-6541.4282200,240.6622800,0.0000000,90.0000000,290.6560000); //amt 8557(696)
	CreateDynamicObject(8557,-3827.7114300,-6539.7363300,241.4819500,0.0000000,90.0000000,287.7050000); //amt 8557(697)
	CreateDynamicObject(8557,-3822.7670900,-6538.2973600,242.3016200,0.0000000,90.0000000,284.7540000); //amt 8557(698)
	CreateDynamicObject(8557,-3817.7553700,-6537.1142600,243.1212900,0.0000000,90.0000000,281.8030000); //amt 8557(699)
	CreateDynamicObject(8557,-3812.6892100,-6536.1914100,243.9409800,0.0000000,90.0000000,278.8520000); //amt 8557(700)
	CreateDynamicObject(8557,-3807.5822800,-6535.5297900,244.7606500,0.0000000,90.0000000,275.9020000); //amt 8557(701)
	CreateDynamicObject(8557,-3802.4480000,-6535.1328100,245.5803200,0.0000000,90.0000000,272.9510000); //amt 8557(702)
	CreateDynamicObject(8557,-3797.3000500,-6535.0000000,246.3999900,0.0000000,90.0000000,270.0000000); //amt 8557(703)
	CreateDynamicObject(8557,-3792.1521000,-6535.1328100,247.2196700,0.0000000,90.0000000,267.0490000); //amt 8557(704)
	CreateDynamicObject(6959,-3650.2998000,-6733.2998000,215.8999900,90.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3625.3999000,-6545.7002000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3585.3999000,-6545.7002000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3545.6001000,-6545.7002000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3505.8999000,-6545.7002000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3465.8999000,-6545.7002000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3465.8999000,-6504.3999000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(6959,-3465.8999000,-6463.0996100,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(92)
	CreateDynamicObject(6959,-3465.8999000,-6421.7993200,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(93)
	CreateDynamicObject(6959,-3465.8999000,-6380.4990200,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(94)
	CreateDynamicObject(6959,-3465.8999000,-6339.1987300,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(95)
	CreateDynamicObject(6959,-3505.8000500,-6339.2002000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(95)
	CreateDynamicObject(6959,-3545.7002000,-6339.2016600,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(97)
	CreateDynamicObject(6959,-3585.6003400,-6339.2031200,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(98)
	CreateDynamicObject(6959,-3625.5004900,-6339.2045900,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(99)
	CreateDynamicObject(6959,-3665.4006300,-6339.2060500,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(100)
	CreateDynamicObject(6959,-3665.3999000,-6297.8999000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(100)
	CreateDynamicObject(6959,-3665.3991700,-6256.5937500,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(102)
	CreateDynamicObject(6959,-3665.3984400,-6215.2876000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(103)
	CreateDynamicObject(6959,-3665.3977100,-6173.9814500,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(104)
	CreateDynamicObject(6959,-3665.3969700,-6132.6752900,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(105)
	CreateDynamicObject(4016,-3627.1999500,-6488.7002000,229.8999900,0.0000000,0.0000000,0.0000000); //object(fighotbase_lan) (1)
	CreateDynamicObject(4002,-3639.5000000,-6577.8999000,248.1000100,0.0000000,0.0000000,180.0000000); //object(lacityhall2_lan) (1)
	CreateDynamicObject(4005,-3571.5000000,-6579.2998000,237.8999900,0.0000000,0.0000000,90.0000000); //object(decoblok2_lan) (1)
	CreateDynamicObject(3689,-3438.1001000,-6497.0000000,232.7000000,0.0000000,0.0000000,270.0000000); //object(rdwarhusbig) (1)
	CreateDynamicObject(3755,-3482.8000500,-6484.1001000,230.3000000,0.0000000,0.0000000,90.0000000); //object(las2warhus_las2) (1)
	CreateDynamicObject(5137,-3535.8999000,-6506.2998000,228.7000000,0.0000000,0.0000000,0.0000000); //object(brkwrhus3_las2) (1)
	CreateDynamicObject(6925,-3533.5000000,-6570.6001000,227.6000100,0.0000000,0.0000000,180.0000000); //object(vgnlowbuild235) (1)
	CreateDynamicObject(6959,-3547.1999500,-6586.5000000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(29)
	CreateDynamicObject(7019,-3454.8000500,-6589.7998000,228.3999900,0.0000000,0.0000000,90.0000000); //object(vgnhseing111) (1)
	CreateDynamicObject(7020,-3485.8999000,-6425.5000000,228.2000000,0.0000000,0.0000000,90.0000000); //object(vgnhseing112) (1)
	CreateDynamicObject(7020,-3485.6999500,-6397.2002000,228.2000000,0.0000000,0.0000000,90.0000000); //object(vgnhseing112) (2)
	CreateDynamicObject(3755,-3458.8999000,-6386.7998000,230.3000000,0.0000000,0.0000000,270.0000000); //object(las2warhus_las2) (2)
	CreateDynamicObject(7035,-3476.6001000,-6329.2002000,229.7000000,0.0000000,0.0000000,0.0000000); //object(vgsnwrehse17) (1)
	CreateDynamicObject(6959,-3465.8999000,-6299.2998000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(95)
	CreateDynamicObject(8260,-3543.1999500,-6370.2002000,228.6000100,0.0000000,0.0000000,90.0000000); //object(vgswrehse18) (1)
	CreateDynamicObject(8260,-3589.6999500,-6370.2002000,228.6000100,0.0000000,0.0000000,90.0000000); //object(vgswrehse18) (2)
	CreateDynamicObject(8545,-3553.8000500,-6304.5000000,229.8999900,0.0000000,0.0000000,0.0000000); //object(vgsewrehse01) (1)
	CreateDynamicObject(8545,-3616.1999500,-6304.3999000,229.8999900,0.0000000,0.0000000,0.0000000); //object(vgsewrehse01) (2)
	CreateDynamicObject(9243,-3688.1001000,-6336.5000000,229.8999900,0.0000000,0.0000000,0.0000000); //object(hrborbuild_sfn02) (1)
	CreateDynamicObject(10775,-3695.3000500,-6248.0000000,246.3000000,0.0000000,0.0000000,0.0000000); //object(bigfactory_sfse) (1)
	CreateDynamicObject(6959,-3705.1999500,-6297.8999000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(100)
	CreateDynamicObject(16398,-3626.6001000,-6361.3999000,224.8999900,0.0000000,0.0000000,270.0000000); //object(desn2_peckfac1) (1)
	CreateDynamicObject(16398,-3647.3000500,-6361.3999000,224.8999900,0.0000000,0.0000000,269.9950000); //object(desn2_peckfac1) (2)
	CreateDynamicObject(16398,-3668.0000000,-6361.3999000,224.8999900,0.0000000,0.0000000,269.9950000); //object(desn2_peckfac1) (3)
	CreateDynamicObject(17021,-3632.1001000,-6263.6001000,234.1000100,0.0000000,0.0000000,180.0000000); //object(cuntplant06) (1)
	CreateDynamicObject(17021,-3632.1001000,-6221.7998000,234.1000100,0.0000000,0.0000000,179.9950000); //object(cuntplant06) (2)
	CreateDynamicObject(6959,-3665.3962400,-6091.3691400,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(112)
	CreateDynamicObject(6959,-3665.3955100,-6050.0629900,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(113)
	CreateDynamicObject(6959,-3665.3945300,-6008.7568400,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(114)
	CreateDynamicObject(6959,-3665.3940400,-5967.4506800,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(115)
	CreateDynamicObject(17021,-3632.1001000,-6180.0000000,234.1000100,0.0000000,0.0000000,179.9950000); //object(cuntplant06) (3)
	CreateDynamicObject(8557,-3671.5000000,-5955.2002000,223.3000000,90.0000000,0.0000000,90.0000000); //object(vgshseing27) (34)
	CreateDynamicObject(8557,-3672.6001000,-5955.2002000,224.3000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (35)
	CreateDynamicObject(8557,-3690.1999500,-5973.8999000,223.3000000,90.0000000,0.0000000,0.0000000); //object(vgshseing27) (36)
	CreateDynamicObject(8557,-3664.1999500,-5955.2002000,223.3000000,90.0000000,0.0000000,270.0000000); //object(vgshseing27) (39)
	CreateDynamicObject(8557,-3645.5000000,-5973.8999000,223.3000000,90.0000000,0.0000000,0.0000000); //object(vgshseing27) (40)
	CreateDynamicObject(8557,-3663.1001000,-5955.2002000,224.3000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (41)
	CreateDynamicObject(8557,-3658.0000000,-5955.2002000,224.3000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (42)
	CreateDynamicObject(8557,-3652.8999000,-5955.2002000,224.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(714)
	CreateDynamicObject(8557,-3647.7998000,-5955.2002000,224.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(715)
	CreateDynamicObject(8557,-3677.6999500,-5955.2002000,224.3000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (43)
	CreateDynamicObject(8557,-3682.7998000,-5955.2002000,224.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(717)
	CreateDynamicObject(8557,-3687.8996600,-5955.2002000,224.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(718)
	CreateDynamicObject(8557,-3671.5000000,-5929.7998000,225.1000100,90.0000000,0.0000000,90.0000000); //object(vgshseing27) (44)
	CreateDynamicObject(8557,-3671.3457000,-5921.9477500,225.1000100,90.0000000,-45.0220000,132.7720000); //amt 8557(720)
	CreateDynamicObject(8557,-3670.8835400,-5914.1079100,225.1000100,90.0000000,-45.0880000,130.5880000); //amt 8557(721)
	CreateDynamicObject(8557,-3670.1137700,-5906.2924800,225.1000100,90.0000000,-45.1990000,128.4490000); //amt 8557(722)
	CreateDynamicObject(8557,-3669.0376000,-5898.5127000,225.1000100,90.0000000,-45.3550000,126.3550000); //amt 8557(723)
	CreateDynamicObject(8557,-3667.6569800,-5890.7817400,225.1000100,90.0000000,-45.5560000,124.3060000); //amt 8557(724)
	CreateDynamicObject(8557,-3665.9738800,-5883.1108400,225.1000100,90.0000000,-45.8030000,122.3030000); //amt 8557(725)
	CreateDynamicObject(8557,-3663.9909700,-5875.5117200,225.1000100,90.0000000,-46.0960000,120.3460000); //amt 8557(726)
	CreateDynamicObject(8557,-3661.7114300,-5867.9965800,225.1000100,90.0000000,-46.4370000,118.4370000); //amt 8557(727)
	CreateDynamicObject(8557,-3659.1381800,-5860.5761700,225.1000100,90.0000000,-46.8270000,116.5770000); //amt 8557(728)
	CreateDynamicObject(8557,-3656.2758800,-5853.2631800,225.1000100,90.0000000,-47.2660000,114.7660000); //amt 8557(729)
	CreateDynamicObject(8557,-3653.1286600,-5846.0678700,225.1000100,90.0000000,-47.7560000,113.0060000); //amt 8557(730)
	CreateDynamicObject(8557,-3649.7014200,-5839.0014600,225.1000100,90.0000000,-48.2990000,111.2990000); //amt 8557(731)
	CreateDynamicObject(8557,-3645.9992700,-5832.0756800,225.1000100,90.0000000,-48.8950000,109.6450000); //amt 8557(732)
	CreateDynamicObject(8557,-3642.0280800,-5825.3002900,225.1000100,90.0000000,-49.5480000,108.0480000); //amt 8557(733)
	CreateDynamicObject(8557,-3637.7939500,-5818.6855500,225.1000100,90.0000000,-50.2580000,106.5080000); //amt 8557(734)
	CreateDynamicObject(8557,-3633.3034700,-5812.2426800,225.1000100,90.0000000,-51.0270000,105.0270000); //amt 8557(735)
	CreateDynamicObject(8557,-3628.5634800,-5805.9809600,225.1000100,90.0000000,-51.8570000,103.6070000); //amt 8557(736)
	CreateDynamicObject(8557,-3623.5813000,-5799.9101600,225.1000100,90.0000000,-52.7500000,102.2500000); //amt 8557(737)
	CreateDynamicObject(8557,-3618.3645000,-5794.0395500,225.1000100,90.0000000,-53.7090000,100.9590000); //amt 8557(738)
	CreateDynamicObject(8557,-3612.9213900,-5788.3784200,225.1000100,90.0000000,-54.7360000,99.7360000); //amt 8557(739)
	CreateDynamicObject(8557,-3607.2602500,-5782.9355500,225.1000100,90.0000000,-55.8310000,98.5810000); //amt 8557(740)
	CreateDynamicObject(8557,-3601.3896500,-5777.7187500,225.1000100,90.0000000,-56.9980000,97.4980000); //amt 8557(741)
	CreateDynamicObject(8557,-3595.3188500,-5772.7363300,225.1000100,90.0000000,-58.2390000,96.4890000); //amt 8557(742)
	CreateDynamicObject(8557,-3589.0571300,-5767.9965800,225.1000100,90.0000000,-59.5540000,95.5540000); //amt 8557(743)
	CreateDynamicObject(8557,-3582.6140100,-5763.5058600,225.1000100,90.0000000,-60.9450000,94.6950000); //amt 8557(744)
	CreateDynamicObject(8557,-3575.9997600,-5759.2719700,225.1000100,90.0000000,-62.4130000,93.9130000); //amt 8557(745)
	CreateDynamicObject(8557,-3569.2243700,-5755.3007800,225.1000100,90.0000000,-63.9590000,93.2090000); //amt 8557(746)
	CreateDynamicObject(8557,-3562.2981000,-5751.5986300,225.1000100,90.0000000,-65.5820000,92.5820000); //amt 8557(747)
	CreateDynamicObject(8557,-3555.2319300,-5748.1713900,225.1000100,90.0000000,-67.2830000,92.0330000); //amt 8557(748)
	CreateDynamicObject(8557,-3548.0366200,-5745.0239300,225.1000100,90.0000000,-69.0590000,91.5590000); //amt 8557(749)
	CreateDynamicObject(8557,-3540.7233900,-5742.1616200,225.1000100,90.0000000,-70.9080000,91.1580000); //amt 8557(750)
	CreateDynamicObject(8557,-3533.3034700,-5739.5883800,225.1000100,90.0000000,-72.8280000,90.8280000); //amt 8557(751)
	CreateDynamicObject(8557,-3525.7880900,-5737.3085900,225.1000100,90.0000000,-74.8140000,90.5640000); //amt 8557(752)
	CreateDynamicObject(8557,-3518.1889600,-5735.3256800,225.1000100,90.0000000,-76.8600000,90.3600000); //amt 8557(753)
	CreateDynamicObject(8557,-3510.5180700,-5733.6425800,225.1000100,90.0000000,-78.9610000,90.2110000); //amt 8557(754)
	CreateDynamicObject(8557,-3502.7868700,-5732.2622100,225.1000100,90.0000000,-81.1090000,90.1090000); //amt 8557(755)
	CreateDynamicObject(8557,-3495.0075700,-5731.1860400,225.0999900,90.0000000,-83.2960000,90.0460000); //amt 8557(756)
	CreateDynamicObject(8557,-3487.1918900,-5730.4165000,225.0999900,90.0000000,-85.5140000,90.0140000); //amt 8557(757)
	CreateDynamicObject(8557,-3479.3520500,-5729.9541000,225.0999900,90.0000000,-87.7520000,90.0020000); //amt 8557(758)
	CreateDynamicObject(8557,-3471.5000000,-5729.7998000,225.0999900,90.0000000,-90.0000000,90.0000000); //amt 8557(759)
	CreateDynamicObject(6959,-3660.1001000,-5927.7002000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(115)
	CreateDynamicObject(6959,-3660.1999500,-5891.6001000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(115)
	CreateDynamicObject(6959,-3660.1001000,-5927.7002000,227.6000100,0.0000000,0.0000000,90.0000000); //amt 6959(115)
	CreateDynamicObject(3437,-3669.6999500,-5949.7998000,223.8999900,350.5630000,87.5360000,87.2970000); //object(ballypllr01_lvs) (3)
	CreateDynamicObject(6959,-3660.1999500,-5850.6001000,224.8999900,0.0000000,0.0000000,90.0000000); //amt 6959(115)
	CreateDynamicObject(8557,-3453.3994100,-5731.3994100,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(760)
	CreateDynamicObject(8557,-3458.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(764)
	CreateDynamicObject(8557,-3463.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(765)
	CreateDynamicObject(8557,-3468.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(766)
	CreateDynamicObject(8557,-3473.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(767)
	CreateDynamicObject(8557,-3478.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(768)
	CreateDynamicObject(8557,-3483.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(853)
	CreateDynamicObject(8557,-3488.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(854)
	CreateDynamicObject(8557,-3493.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(855)
	CreateDynamicObject(8557,-3498.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(856)
	CreateDynamicObject(8557,-3503.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(857)
	CreateDynamicObject(8557,-3508.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(858)
	CreateDynamicObject(8557,-3513.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(859)
	CreateDynamicObject(8557,-3518.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(860)
	CreateDynamicObject(8557,-3523.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(861)
	CreateDynamicObject(8557,-3528.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(862)
	CreateDynamicObject(8557,-3483.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(863)
	CreateDynamicObject(8557,-3488.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(864)
	CreateDynamicObject(8557,-3493.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(865)
	CreateDynamicObject(8557,-3498.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(866)
	CreateDynamicObject(8557,-3503.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(867)
	CreateDynamicObject(8557,-3508.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(868)
	CreateDynamicObject(8557,-3513.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(869)
	CreateDynamicObject(8557,-3518.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(870)
	CreateDynamicObject(8557,-3523.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(871)
	CreateDynamicObject(8557,-3528.3999000,-5731.3999000,221.0000000,0.0000000,0.0000000,90.0000000); //amt 8557(872)
	CreateDynamicObject(6959,-3107.1999500,-5516.5000000,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(114)
	CreateDynamicObject(6959,-3107.1992200,-5555.5996100,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(114)
	CreateDynamicObject(6959,-3107.1999500,-5477.3999000,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(128)
	CreateDynamicObject(6959,-3107.1999500,-5438.2998000,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(129)
	CreateDynamicObject(6959,-3107.1992200,-5399.1992200,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(130)
	CreateDynamicObject(6959,-3107.1999500,-5360.0996100,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(131)
	CreateDynamicObject(6959,-3107.1992200,-5320.9990200,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(132)
	CreateDynamicObject(18226,338.2000100,-4914.6001000,41.5000000,0.0000000,0.0000000,322.0000000); //object(cunt_rockgp2_19) (2)
	CreateDynamicObject(18226,348.7999900,-4864.8999000,41.5000000,0.0000000,0.0000000,333.9980000); //object(cunt_rockgp2_19) (3)
	CreateDynamicObject(18226,349.7999900,-4815.7002000,41.5000000,0.0000000,0.0000000,325.9950000); //object(cunt_rockgp2_19) (4)
	CreateDynamicObject(18226,369.5000000,-4780.2998000,41.5000000,0.0000000,0.0000000,323.9870000); //object(cunt_rockgp2_19) (5)
	CreateDynamicObject(18226,391.7000100,-4727.3999000,41.5000000,0.0000000,0.0000000,319.9870000); //object(cunt_rockgp2_19) (6)
	CreateDynamicObject(18226,396.3999900,-4683.7998000,41.5000000,0.0000000,0.0000000,341.9820000); //object(cunt_rockgp2_19) (7)
	CreateDynamicObject(18226,383.0000000,-4632.7998000,41.5000000,0.0000000,0.0000000,345.9760000); //object(cunt_rockgp2_19) (8)
	CreateDynamicObject(18226,369.0000000,-4595.7002000,21.1000000,355.9950000,0.0000000,335.9730000); //object(cunt_rockgp2_19) (9)
	CreateDynamicObject(18226,309.7998000,-4959.2002000,48.0000000,0.0000000,0.0000000,299.9930000); //object(cunt_rockgp2_19) (10)
	CreateDynamicObject(18226,266.3994100,-4982.0996100,47.3000000,0.0000000,0.0000000,283.9970000); //object(cunt_rockgp2_19) (11)
	CreateDynamicObject(8557,-3107.3999000,-5283.3999000,220.6000100,0.0000000,0.0000000,90.0000000); //amt 8557(850)
	CreateDynamicObject(8557,-3107.3999000,-5243.1001000,220.6000100,0.0000000,0.0000000,90.0000000); //amt 8557(850)
	CreateDynamicObject(8557,-3103.3999000,-5283.3999000,219.6000100,30.0000000,0.0000000,90.0000000); //amt 8557(850)
	CreateDynamicObject(8557,-3111.3000500,-5283.3999000,219.6000100,330.0020000,0.0000000,90.0000000); //amt 8557(850)
	CreateDynamicObject(8557,-3107.3999000,-5202.8002900,220.6000100,0.0000000,0.0000000,90.0000000); //amt 8557(851)
	CreateDynamicObject(8557,-3107.3999000,-5162.5004900,220.6000100,0.0000000,0.0000000,90.0000000); //amt 8557(852)
	CreateDynamicObject(8557,-3107.3999000,-5122.2006800,220.6000100,0.0000000,0.0000000,90.0000000); //amt 8557(853)
	CreateDynamicObject(8557,-3107.3999000,-5081.9008800,220.6000100,0.0000000,0.0000000,90.0000000); //amt 8557(854)
	CreateDynamicObject(8557,-3107.3999000,-5041.6010700,220.6000100,0.0000000,0.0000000,90.0000000); //amt 8557(855)
	CreateDynamicObject(8557,-3111.2998000,-5243.0000000,219.6000100,330.0020000,0.0000000,90.0000000); //amt 8557(850)
	CreateDynamicObject(8557,-3103.3994100,-5243.0000000,219.6000100,29.9980000,0.0000000,90.0000000); //amt 8557(850)
	CreateDynamicObject(8557,-3111.2995600,-5202.6001000,219.6000100,330.0020000,0.0000000,90.0000000); //amt 8557(858)
	CreateDynamicObject(8557,-3111.2993200,-5162.2002000,219.6000100,330.0020000,0.0000000,90.0000000); //amt 8557(859)
	CreateDynamicObject(8557,-3111.2990700,-5121.8002900,219.6000100,330.0020000,0.0000000,90.0000000); //amt 8557(860)
	CreateDynamicObject(8557,-3111.2988300,-5081.4003900,219.6000100,330.0020000,0.0000000,90.0000000); //amt 8557(861)
	CreateDynamicObject(8557,-3111.2985800,-5041.0004900,219.6000100,330.0020000,0.0000000,90.0000000); //amt 8557(862)
	CreateDynamicObject(8557,-3103.3989300,-5202.6001000,219.6000100,30.0000000,0.0000000,90.0000000); //amt 8557(863)
	CreateDynamicObject(8557,-3103.3984400,-5162.2002000,219.6000100,30.0000000,0.0000000,90.0000000); //amt 8557(864)
	CreateDynamicObject(8557,-3103.3979500,-5121.8002900,219.6000100,30.0000000,0.0000000,90.0000000); //amt 8557(865)
	CreateDynamicObject(8557,-3103.3974600,-5081.4003900,219.6000100,30.0000000,0.0000000,90.0000000); //amt 8557(866)
	CreateDynamicObject(8557,-3103.3969700,-5041.0004900,219.6000100,30.0000000,0.0000000,90.0000000); //amt 8557(867)
	CreateDynamicObject(8557,-3107.3999000,-5033.8798800,220.9734800,0.0000000,354.4620000,90.0000000); //amt 8557(868)
	CreateDynamicObject(8557,-3107.3999000,-5026.2309600,222.0903900,0.0000000,348.9230000,90.0000000); //amt 8557(869)
	CreateDynamicObject(8557,-3107.3999000,-5018.7255900,223.9403400,0.0000000,343.3850000,90.0000000); //amt 8557(870)
	CreateDynamicObject(8557,-3107.3999000,-5011.4335900,226.5060300,0.0000000,337.8460000,90.0000000); //amt 8557(871)
	CreateDynamicObject(8557,-3107.3999000,-5004.4233400,229.7635200,0.0000000,332.3080000,90.0000000); //amt 8557(872)
	CreateDynamicObject(8557,-3107.3999000,-4997.7602500,233.6823900,0.0000000,326.7690000,90.0000000); //amt 8557(873)
	CreateDynamicObject(18450,-3107.8999000,-4811.5000000,257.0000000,0.0000000,130.0000000,90.0000000); //object(cs_roadbridge04) (1)
	CreateDynamicObject(18450,-3108.0000000,-4763.6001000,319.5000000,0.0000000,125.0000000,90.0000000); //object(cs_roadbridge04) (3)
	CreateDynamicObject(8557,-3107.1001000,-4838.2002000,228.7000000,299.9980000,0.0000000,0.0000000); //amt 8557(873)
	CreateDynamicObject(18450,-3108.0000000,-4721.7002000,379.2999900,0.0000000,124.9970000,90.0000000); //object(cs_roadbridge04) (4)
	CreateDynamicObject(18450,-3107.8999000,-4676.2002000,378.5000000,0.0000000,125.0000000,270.0000000); //object(cs_roadbridge04) (5)
	CreateDynamicObject(18450,-3107.8999000,-4666.6948200,365.9996300,0.0000000,129.5000000,270.0000000); //amt 18450(6)
	CreateDynamicObject(18450,-3107.8999000,-4656.2377900,354.2836300,0.0000000,134.0000000,270.0000000); //amt 18450(7)
	CreateDynamicObject(18450,-3107.8999000,-4644.8935500,343.4241300,0.0000000,138.5000000,270.0000000); //amt 18450(8)
	CreateDynamicObject(18450,-3107.8999000,-4632.7329100,333.4881900,0.0000000,143.0000000,270.0000000); //amt 18450(9)
	CreateDynamicObject(18450,-3107.8999000,-4619.8295900,324.5369900,0.0000000,147.5000000,270.0000000); //amt 18450(10)
	CreateDynamicObject(18450,-3107.8999000,-4606.2641600,316.6257600,0.0000000,152.0000000,270.0000000); //amt 18450(11)
	CreateDynamicObject(18450,-3107.8999000,-4592.1196300,309.8032800,0.0000000,156.5000000,270.0000000); //amt 18450(12)
	CreateDynamicObject(18450,-3107.8999000,-4577.4834000,304.1115700,0.0000000,161.0000000,270.0000000); //amt 18450(13)
	CreateDynamicObject(18450,-3107.8999000,-4562.4458000,299.5857500,0.0000000,165.5000000,270.0000000); //amt 18450(14)
	CreateDynamicObject(18450,-3107.8999000,-4547.0996100,296.2537200,0.0000000,170.0000000,270.0000000); //amt 18450(15)
	CreateDynamicObject(18450,-3107.8999000,-4531.5390600,294.1360500,0.0000000,174.5000000,270.0000000); //amt 18450(16)
	CreateDynamicObject(18450,-3107.8999000,-4515.8603500,293.2457600,0.0000000,179.0000000,270.0000000); //amt 18450(17)
	CreateDynamicObject(6959,-3107.8999000,-4332.7002000,229.1000100,325.5030000,0.0000000,0.0000000); //amt 6959(132)
	CreateDynamicObject(6959,-3107.8999000,-4300.1001000,206.7000000,325.5000000,0.0000000,0.0000000); //amt 6959(121)
	CreateDynamicObject(6959,-3107.8994100,-4267.5000000,184.2000000,325.4920000,0.0000000,0.0000000); //amt 6959(122)
	CreateDynamicObject(8557,-3108.3999000,-4252.6001000,170.3000000,270.0000000,0.0000000,0.0000000); //object(vgshseing27) (13)
	CreateDynamicObject(8557,-3108.3999000,-4248.2998000,170.3000000,90.0050000,0.0000000,0.0000000); //object(vgshseing27) (13)
	CreateDynamicObject(8557,-3108.3999000,-4248.2998000,173.5000000,90.0000000,0.0000000,0.0000000); //object(vgshseing27) (13)
	CreateDynamicObject(8557,-3108.3000500,-4249.2002000,168.7000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (13)
	CreateDynamicObject(8557,-3130.0000000,-4249.1001000,153.7000000,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (13)
	CreateDynamicObject(8557,-3068.3000500,-4248.2998000,170.3000000,90.0000000,0.0000000,0.0000000); //object(vgshseing27) (13)
	CreateDynamicObject(8557,-3068.3000500,-4252.5996100,170.3000000,269.9950000,0.0000000,0.0000000); //object(vgshseing27) (13)
	CreateDynamicObject(8557,-3068.3000500,-4249.2002000,168.7000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (13)
	CreateDynamicObject(8557,-3028.2002000,-4248.2998000,170.3000000,90.0050000,0.0000000,0.0000000); //amt 8557(884)
	CreateDynamicObject(8557,-2988.1003400,-4248.2998000,170.3000000,90.0050000,0.0000000,0.0000000); //amt 8557(885)
	CreateDynamicObject(8557,-2948.0004900,-4248.2998000,170.3000000,90.0050000,0.0000000,0.0000000); //amt 8557(886)
	CreateDynamicObject(8557,-2907.9006300,-4248.2998000,170.3000000,90.0050000,0.0000000,0.0000000); //amt 8557(887)
	CreateDynamicObject(8557,-2867.8007800,-4248.2998000,170.3000000,90.0050000,0.0000000,0.0000000); //amt 8557(888)
	CreateDynamicObject(8557,-3028.2002000,-4252.5991200,170.3000000,270.0000000,0.0000000,0.0000000); //amt 8557(889)
	CreateDynamicObject(8557,-2988.1003400,-4252.5986300,170.3000000,270.0000000,0.0000000,0.0000000); //amt 8557(890)
	CreateDynamicObject(8557,-2948.0004900,-4252.5981400,170.3000000,270.0000000,0.0000000,0.0000000); //amt 8557(891)
	CreateDynamicObject(8557,-2907.9006300,-4252.5976600,170.3000000,270.0000000,0.0000000,0.0000000); //amt 8557(892)
	CreateDynamicObject(8557,-2867.8007800,-4252.5971700,170.3000000,270.0000000,0.0000000,0.0000000); //amt 8557(893)
	CreateDynamicObject(8557,-3028.3000500,-4249.2002000,168.7000000,0.0000000,0.0000000,0.0000000); //amt 8557(894)
	CreateDynamicObject(8557,-2988.3000500,-4249.2002000,168.7000000,0.0000000,0.0000000,0.0000000); //amt 8557(895)
	CreateDynamicObject(8557,-2948.3000500,-4249.2002000,168.7000000,0.0000000,0.0000000,0.0000000); //amt 8557(896)
	CreateDynamicObject(8557,-2908.3000500,-4249.2002000,168.7000000,0.0000000,0.0000000,0.0000000); //amt 8557(897)
	CreateDynamicObject(8557,-2868.3000500,-4249.2002000,168.7000000,0.0000000,0.0000000,0.0000000); //amt 8557(898)
	CreateDynamicObject(8557,-3108.5000000,-4247.2998000,174.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (13)
	CreateDynamicObject(6959,-2829.6001000,-4251.0000000,170.2000000,0.0000000,0.0000000,0.0000000); //amt 6959(122)
	CreateDynamicObject(9076,-2813.8999000,-4242.2998000,172.2000000,0.0000000,0.0000000,0.0000000); //object(sphinx01_lvs) (1)
	CreateDynamicObject(9076,-2814.0000000,-4259.5000000,172.2000000,0.0000000,0.0000000,0.0000000); //object(sphinx01_lvs) (2)
	CreateDynamicObject(9076,-2828.0000000,-4228.3999000,172.2000000,0.0000000,0.0000000,90.0000000); //object(sphinx01_lvs) (3)
	CreateDynamicObject(9076,-2827.8000500,-4273.2002000,172.2000000,0.0000000,0.0000000,270.0000000); //object(sphinx01_lvs) (4)
	CreateDynamicObject(5429,-2813.3000500,-4214.8999000,173.7000000,0.0000000,306.0000000,86.0000000); //object(xwhattfk_lae) (1)
	CreateDynamicObject(5429,-2796.0000000,-4244.7998000,173.7000000,0.0000000,305.9970000,21.9950000); //object(xwhattfk_lae) (2)
	CreateDynamicObject(5429,-2813.8000500,-4292.7002000,173.7000000,0.0000000,305.9910000,297.9950000); //object(xwhattfk_lae) (3)
	CreateDynamicObject(5429,-2850.3000500,-4281.5000000,173.7000000,0.0000000,305.9910000,247.9930000); //object(xwhattfk_lae) (4)
	CreateDynamicObject(5429,-2835.5000000,-4207.7002000,173.7000000,0.0000000,305.9970000,107.9950000); //object(xwhattfk_lae) (5)
	CreateDynamicObject(5429,-2860.8000500,-4258.5000000,162.0000000,0.0000000,357.9910000,267.9890000); //object(xwhattfk_lae) (6)
	CreateDynamicObject(17069,333.2000100,-4289.3999000,20.3000000,0.0000000,24.0000000,329.9960000); //object(cunt_rockgp2_24) (1)
	CreateDynamicObject(17069,333.2000100,-4289.3999000,18.3000000,0.0000000,24.0000000,329.9960000); //object(cunt_rockgp2_24) (2)
	CreateDynamicObject(17069,294.2000100,-4315.7002000,18.3000000,0.0000000,24.0000000,39.9960000); //object(cunt_rockgp2_24) (3)
	CreateDynamicObject(17069,294.2000100,-4315.7002000,33.6000000,0.0000000,24.0000000,39.9960000); //object(cunt_rockgp2_24) (4)
	CreateDynamicObject(17069,370.2999900,-4332.7002000,31.6000000,0.0000000,24.0000000,251.9960000); //object(cunt_rockgp2_24) (5)
	CreateDynamicObject(17069,370.2999900,-4332.7002000,19.8000000,0.0000000,24.0000000,251.9930000); //object(cunt_rockgp2_24) (6)
	CreateDynamicObject(17069,370.2999900,-4332.7002000,13.9000000,0.0000000,24.0000000,251.9930000); //object(cunt_rockgp2_24) (7)
	CreateDynamicObject(17069,370.7999900,-4333.3999000,28.6000000,0.0000000,24.0000000,65.9930000); //object(cunt_rockgp2_24) (8)
	CreateDynamicObject(17069,280.8999900,-4363.8999000,23.9000000,0.0000000,24.0000000,227.9890000); //object(cunt_rockgp2_24) (9)
	CreateDynamicObject(18226,384.7000100,-4607.2002000,35.5000000,0.0000000,0.0000000,345.9760000); //object(cunt_rockgp2_19) (8)
	CreateDynamicObject(10060,300.2000100,-4571.8999000,40.3000000,0.0000000,0.0000000,270.0000000); //object(aprtmnts01_sfe) (1)
	CreateDynamicObject(10060,300.1992200,-4512.2002000,53.7000000,0.0000000,0.0000000,269.9950000); //object(aprtmnts01_sfe) (2)
	CreateDynamicObject(17533,303.5996100,-4747.0996100,83.8000000,0.0000000,0.0000000,325.9970000); //object(templb1_lae2) (1)
	CreateDynamicObject(18248,309.8999900,-4377.7002000,38.8000000,1.9690000,10.0060000,199.6520000); //object(cuntwjunk01) (1)
	CreateDynamicObject(16112,319.6000100,-4304.6001000,18.2000000,0.0000000,0.0000000,0.0000000); //object(des_rockfl1_) (1)
	CreateDynamicObject(16112,324.2999900,-4326.1001000,18.2000000,0.0000000,0.0000000,0.0000000); //object(des_rockfl1_) (2)
	CreateDynamicObject(16112,295.0000000,-4331.7002000,18.2000000,0.0000000,0.0000000,0.0000000); //object(des_rockfl1_) (3)
	CreateDynamicObject(16112,291.1000100,-4306.7998000,18.0000000,0.0000000,0.0000000,0.0000000); //object(des_rockfl1_) (4)
	CreateDynamicObject(16124,169.0000000,-5187.0000000,65.7000000,0.0000000,12.0000000,0.0000000); //object(des_rockgp1_06) (1)
	CreateDynamicObject(16124,173.0000000,-5154.0000000,65.7000000,0.0000000,25.9970000,352.0000000); //object(des_rockgp1_06) (2)
	CreateDynamicObject(16124,237.3994100,-5164.3994100,65.7000000,0.0000000,349.9910000,59.9910000); //object(des_rockgp1_06) (3)
	CreateDynamicObject(16124,209.3994100,-5167.8994100,67.2000000,0.0000000,349.9860000,175.9950000); //object(des_rockgp1_06) (4)
	CreateDynamicObject(16124,208.5000000,-5201.1001000,67.2000000,0.0000000,349.9910000,175.9950000); //object(des_rockgp1_06) (5)
	CreateDynamicObject(16124,207.1000100,-5234.0000000,67.2000000,0.0000000,349.9910000,175.9950000); //object(des_rockgp1_06) (6)
	CreateDynamicObject(672,186.3999900,-5146.8999000,63.0000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree5) (1)
	CreateDynamicObject(672,186.0000000,-5139.2002000,63.0000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree5) (2)
	CreateDynamicObject(672,184.6000100,-5131.2998000,63.0000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree5) (3)
	CreateDynamicObject(672,184.1000100,-5123.0000000,61.3000000,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree5) (4)
	CreateDynamicObject(3638,233.7000000,-5105.0000000,64.5000000,0.0000000,0.0000000,82.0000000); //object(elecstionv_las) (1)
	CreateDynamicObject(3638,241.3000000,-5042.7998000,64.5000000,0.0000000,0.0000000,81.9960000); //object(elecstionv_las) (2)
	CreateDynamicObject(16124,212.8000000,-5235.0000000,80.7000000,0.0000000,11.9910000,175.9950000); //object(des_rockgp1_06) (7)
	CreateDynamicObject(978,193.2000000,-5171.5000000,62.8000000,0.0000000,0.0000000,0.0000000); //object(sub_roadright) (3)
	CreateDynamicObject(978,188.5000000,-5185.3999000,62.8000000,0.0000000,0.0000000,90.0000000); //object(sub_roadright) (4)
	CreateDynamicObject(978,188.5000000,-5176.1001000,62.8000000,0.0000000,0.0000000,90.0000000); //object(sub_roadright) (5)
	CreateDynamicObject(13158,193.0000000,-5589.2998000,24.8000000,345.6520000,26.8950000,133.1600000); //object(cunteground27) (1)
	CreateDynamicObject(13158,169.5996100,-5422.7998000,24.8000000,345.6520000,26.8950000,299.1520000); //object(cunteground27) (2)
	CreateDynamicObject(18228,199.1000100,-5425.6001000,38.1000000,0.0000000,0.0000000,36.0000000); //object(cunt_rockgp2_21) (39)
	CreateDynamicObject(18228,181.3000000,-5409.3999000,40.6000000,0.0000000,0.0000000,35.9970000); //object(cunt_rockgp2_21) (40)
	CreateDynamicObject(18228,187.5000000,-5377.2998000,39.0000000,0.0000000,0.0000000,29.9930000); //object(cunt_rockgp2_21) (41)
	CreateDynamicObject(18228,187.7000000,-5342.7998000,40.6000000,0.0000000,0.0000000,21.9930000); //object(cunt_rockgp2_21) (42)
	CreateDynamicObject(18228,214.8000000,-5520.2002000,72.3000000,0.0000000,18.0000000,225.9880000); //object(cunt_rockgp2_21) (43)
	CreateDynamicObject(18228,210.3999900,-5606.3999000,71.6000000,0.0000000,0.0000000,47.9830000); //object(cunt_rockgp2_21) (44)
	CreateDynamicObject(18228,205.5000000,-5649.2002000,71.6000000,0.0000000,0.0000000,47.9830000); //object(cunt_rockgp2_21) (45)
	CreateDynamicObject(18228,153.0000000,-5443.5000000,69.9000000,0.0000000,0.0000000,27.9840000); //object(cunt_rockgp2_21) (46)
	CreateDynamicObject(18228,139.6000100,-5484.7002000,68.7000000,0.0000000,0.0000000,33.9810000); //object(cunt_rockgp2_21) (47)
	CreateDynamicObject(18228,125.2000000,-5616.0000000,68.7000000,0.0000000,0.0000000,53.9760000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,117.6000000,-5664.3999000,67.2000000,0.0000000,3.9990000,63.9730000); //object(cunt_rockgp2_21) (49)
	CreateDynamicObject(689,211.3999900,-5487.1001000,68.2000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (1)
	CreateDynamicObject(689,224.8000000,-5535.2002000,77.4000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (2)
	CreateDynamicObject(689,200.8999900,-5502.1001000,66.7000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (3)
	CreateDynamicObject(689,204.5000000,-5550.5000000,65.2000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (4)
	CreateDynamicObject(689,211.3999900,-5595.5000000,79.7000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (5)
	CreateDynamicObject(689,212.3999900,-5577.2002000,77.2000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (6)
	CreateDynamicObject(689,211.6000100,-5562.2998000,80.2000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (7)
	CreateDynamicObject(689,217.8999900,-5546.2002000,77.3000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (8)
	CreateDynamicObject(689,215.0000000,-5514.8999000,80.4000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (9)
	CreateDynamicObject(689,214.6000100,-5495.3999000,91.4000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (10)
	CreateDynamicObject(689,213.8999900,-5626.0000000,84.4000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (11)
	CreateDynamicObject(689,204.0000000,-5663.1001000,78.2000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (12)
	CreateDynamicObject(689,209.3000000,-5647.1001000,83.2000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (13)
	CreateDynamicObject(689,204.2000000,-5608.3999000,71.1000000,0.0000000,0.0000000,0.0000000); //object(sm_fir_copse1) (14)
	CreateDynamicObject(7236,121.0000000,-5656.5000000,92.3000000,0.0000000,0.0000000,0.0000000); //object(vegasplant03b) (2)
	CreateDynamicObject(7236,118.5000000,-5588.0000000,95.8000000,0.0000000,0.0000000,0.0000000); //object(vegasplant03b) (3)
	CreateDynamicObject(7236,121.0996100,-5520.2998000,95.8000000,0.0000000,0.0000000,0.0000000); //object(vegasplant03b) (4)
	CreateDynamicObject(7236,153.5996100,-5444.2998000,87.6000000,0.0000000,0.0000000,0.0000000); //object(vegasplant03b) (5)
	CreateDynamicObject(3472,295.2000100,-4355.1001000,47.4000000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (1)
	CreateDynamicObject(3472,292.8999900,-4296.5000000,45.4000000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (2)
	CreateDynamicObject(3472,351.1000100,-4296.5000000,45.4000000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (3)
	CreateDynamicObject(3472,359.2000100,-4350.7998000,49.2000000,0.0000000,0.0000000,0.0000000); //object(circuslampost03) (4)
	CreateDynamicObject(16667,2076.1001000,-2741.1001000,10.1000000,0.0000000,0.0000000,195.9960000); //object(des_rockgp2_14) (1)
	CreateDynamicObject(16667,2098.8999000,-2738.0000000,14.4000000,0.0000000,0.0000000,209.9960000); //object(des_rockgp2_14) (1)
	CreateDynamicObject(16667,2120.8000500,-2722.6999500,11.1000000,0.0000000,0.0000000,237.9970000); //object(des_rockgp2_14) (3)
	CreateDynamicObject(16667,2122.8999000,-2725.8000500,15.9000000,0.0000000,0.0000000,237.9970000); //object(des_rockgp2_14) (3)
	CreateDynamicObject(16667,2144.5000000,-2706.6999500,15.9000000,0.0000000,0.0000000,237.9970000); //object(des_rockgp2_14) (3)
	CreateDynamicObject(16684,399.0000000,-3366.0000000,9.8000000,0.0000000,0.0000000,253.9930000); //object(cn2_rnway_bit) (3)
	CreateDynamicObject(16684,484.7000100,-3432.1001000,9.8000000,0.0000000,0.0000000,253.9930000); //object(cn2_rnway_bit) (3)
	CreateDynamicObject(3269,454.8999900,-3149.5000000,9.1000000,0.0000000,0.0000000,338.0000000); //object(bonyrd_block1_) (1)
	CreateDynamicObject(3269,458.5000000,-3183.1999500,9.1000000,0.0000000,0.0000000,338.0000000); //object(bonyrd_block1_) (1)
	CreateDynamicObject(3271,430.6000100,-3253.0000000,9.3000000,0.0000000,0.0000000,267.9990000); //object(bonyrd_block3_) (1)
	CreateDynamicObject(1683,398.7000100,-3351.3999000,16.3000000,0.0000000,0.0000000,18.4950000); //object(ap_jumbo_01) (1)
	CreateDynamicObject(1683,414.7999900,-3299.3999000,16.3000000,0.0000000,0.0000000,18.4950000); //object(ap_jumbo_01) (1)
	CreateDynamicObject(3287,402.6000100,-3381.3999000,13.8000000,0.0000000,0.0000000,165.9980000); //object(cxrf_oiltank) (1)
	CreateDynamicObject(3287,386.2999900,-3391.3000500,13.8000000,0.0000000,0.0000000,165.9980000); //object(cxrf_oiltank) (1)
	CreateDynamicObject(3287,395.3999900,-3403.3000500,13.8000000,0.0000000,0.0000000,165.9980000); //object(cxrf_oiltank) (1)
	CreateDynamicObject(3287,383.7999900,-3411.1001000,13.8000000,0.0000000,0.0000000,165.9980000); //object(cxrf_oiltank) (1)
	CreateDynamicObject(3287,393.6000100,-3423.6999500,13.8000000,0.0000000,0.0000000,165.9980000); //object(cxrf_oiltank) (1)
	CreateDynamicObject(16115,415.1000100,-3189.1999500,12.8000000,1.9980000,357.9970000,81.8140000); //object(des_rockgp1_03) (1)
	CreateDynamicObject(16115,394.6000100,-3257.8999000,12.8000000,1.9940000,357.9950000,93.8100000); //object(des_rockgp1_03) (1)
	CreateDynamicObject(16115,374.2999900,-3343.1001000,12.8000000,1.9890000,357.9900000,93.8070000); //object(des_rockgp1_03) (1)
	CreateDynamicObject(16115,374.0000000,-3417.5000000,12.8000000,1.9890000,357.9900000,111.8070000); //object(des_rockgp1_03) (1)
	CreateDynamicObject(3269,551.5999800,-3201.5000000,9.1000000,0.0000000,0.0000000,101.9970000); //object(bonyrd_block1_) (2)
	CreateDynamicObject(3271,514.7000100,-3314.1001000,9.8000000,0.0000000,0.0000000,27.9990000); //object(bonyrd_block3_) (2)
	CreateDynamicObject(3271,503.7999900,-3365.3999000,9.8000000,0.0000000,0.0000000,65.9930000); //object(bonyrd_block3_) (2)
	CreateDynamicObject(16667,574.4000200,-3132.8000500,15.7000000,19.9460000,4.2520000,310.5450000); //object(des_rockgp2_14) (4)
	CreateDynamicObject(16667,582.2999900,-3149.8999000,15.7000000,19.9460000,4.2520000,300.5450000); //object(des_rockgp2_14) (4)
	CreateDynamicObject(16115,553.4000200,-3261.1001000,12.5000000,1.9830000,353.9960000,261.9500000); //object(des_rockgp1_03) (2)
	CreateDynamicObject(16115,528.5999800,-3352.8000500,12.5000000,1.9780000,353.9960000,261.9470000); //object(des_rockgp1_03) (2)
	CreateDynamicObject(16115,487.1000100,-3437.1001000,12.5000000,1.9580000,349.9940000,240.0850000); //object(des_rockgp1_03) (2)
	CreateDynamicObject(7236,493.3999900,-3411.5000000,34.8000000,0.0000000,0.0000000,0.0000000); //object(vegasplant03b) (1)
	CreateDynamicObject(18248,296.2000100,-4390.3999000,47.8000000,31.4550000,11.7420000,153.8050000); //object(cuntwjunk01) (1)
	CreateDynamicObject(3873,365.2000100,-4393.2002000,53.1000000,0.0000000,0.0000000,0.0000000); //object(silicon04_sfs) (1)
	CreateDynamicObject(3877,190.3000000,-5171.1001000,61.4000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (3)
	CreateDynamicObject(3877,194.7000000,-5170.7998000,61.4000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (3)
	CreateDynamicObject(16157,296.1000100,-5077.5000000,49.1000000,339.1480000,338.5220000,58.0120000); //object(n_bit_01) (3)
	CreateDynamicObject(16157,271.7000100,-5169.5000000,49.1000000,339.1420000,338.5220000,44.0080000); //object(n_bit_01) (3)
	CreateDynamicObject(18226,304.0000000,-4971.2998000,64.1000000,0.0000000,0.0000000,283.9970000); //object(cunt_rockgp2_19) (11)
	CreateDynamicObject(18228,220.3000000,-5623.6001000,77.9000000,0.0000000,0.0000000,47.9830000); //object(cunt_rockgp2_21) (45)
	CreateDynamicObject(18228,227.3000000,-5579.3999000,81.1000000,0.0000000,0.0000000,47.9830000); //object(cunt_rockgp2_21) (44)
	CreateDynamicObject(18228,212.6000100,-5561.0000000,74.4000000,0.0000000,0.0000000,47.9830000); //object(cunt_rockgp2_21) (44)
	CreateDynamicObject(18228,228.7000000,-5534.6001000,78.9000000,0.0000000,0.0000000,47.9830000); //object(cunt_rockgp2_21) (44)
	CreateDynamicObject(18228,129.2000000,-5435.6001000,80.7000000,0.0000000,0.0000000,27.9820000); //object(cunt_rockgp2_21) (46)
	CreateDynamicObject(18228,118.0000000,-5476.0000000,81.9000000,0.0000000,0.0000000,33.9810000); //object(cunt_rockgp2_21) (47)
	CreateDynamicObject(18228,109.0000000,-5519.1001000,81.9000000,0.0000000,0.0000000,33.9810000); //object(cunt_rockgp2_21) (47)
	CreateDynamicObject(18228,131.3000000,-5518.7002000,63.9000000,0.0000000,0.0000000,33.9810000); //object(cunt_rockgp2_21) (47)
	CreateDynamicObject(18228,126.4000000,-5579.2002000,68.7000000,0.0000000,0.0000000,53.9760000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,121.8000000,-5556.1001000,68.7000000,0.0000000,0.0000000,53.9760000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,100.6000000,-5565.3999000,81.7000000,0.0000000,0.0000000,53.9760000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,106.6000000,-5600.2998000,81.7000000,0.0000000,0.0000000,53.9760000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,107.2000000,-5645.8999000,81.7000000,0.0000000,0.0000000,53.9760000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,127.7000000,-5651.6001000,66.9000000,0.0000000,0.0000000,53.9760000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,161.3000000,-5680.1001000,37.9000000,0.0000000,0.0000000,53.9760000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,164.7000000,-5693.6001000,37.9000000,346.0090000,357.9390000,179.4770000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,186.6000100,-5704.2002000,37.9000000,346.0030000,357.9350000,179.4730000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,149.5000000,-5712.6001000,37.9000000,346.0030000,357.9350000,179.4730000); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(10794,-2717.3000500,-6772.2002000,53.4000000,0.0000000,0.0000000,180.0000000); //object(car_ship_04_sfse) (1)
	CreateDynamicObject(10795,-2714.8000500,-6772.2998000,63.7000000,0.0000000,0.0000000,180.0000000); //object(car_ship_05_sfse) (1)
	CreateDynamicObject(10793,-2641.8000500,-6772.2002000,81.6000000,0.0000000,0.0000000,180.0000000); //object(car_ship_03_sfse) (1)
	CreateDynamicObject(1655,854.2000100,-2820.1001000,12.1000000,0.0000000,0.0000000,116.0000000); //object(waterjumpx2) (1)
	CreateDynamicObject(1655,859.4000200,-2835.3000500,12.1000000,0.0000000,0.0000000,115.9990000); //object(waterjumpx2) (2)
	CreateDynamicObject(8483,300.7000100,-4132.6001000,106.6000000,0.0000000,0.0000000,43.9950000); //object(pirateland02_lvs) (2)
	CreateDynamicObject(5291,334.6000100,-4087.0000000,112.2000000,0.0000000,0.0000000,0.0000000); //object(snpedscrsap_las01) (1)
	CreateDynamicObject(5291,300.2000100,-3893.1001000,112.4000000,0.0000000,0.0000000,178.0000000); //object(snpedscrsap_las01) (2)
	CreateDynamicObject(9596,-1287.3000500,-6739.2002000,105.4000000,354.0080000,3.0170000,2.3150000); //object(land_04_sfw) (1)
	CreateDynamicObject(9596,-1132.8000500,-6766.2002000,90.4000000,0.0000000,16.0000000,0.0000000); //object(land_04_sfw) (2)
	CreateDynamicObject(9596,-1046.0000000,-6765.8994100,77.9000000,0.0000000,0.0000000,0.0000000); //object(land_04_sfw) (3)
	CreateDynamicObject(9596,-1393.8000500,-6739.1001000,105.4000000,354.0070000,3.0160000,2.3130000); //object(land_04_sfw) (4)
	CreateDynamicObject(9596,-1499.5000000,-6741.6001000,105.4000000,354.0070000,3.0160000,2.3130000); //object(land_04_sfw) (5)
	CreateDynamicObject(9596,-1594.4000200,-6741.2002000,105.4000000,354.0070000,3.0160000,2.3130000); //object(land_04_sfw) (6)
	CreateDynamicObject(9596,-1699.5999800,-6745.6001000,105.4000000,354.0070000,3.0160000,2.3130000); //object(land_04_sfw) (7)
	CreateDynamicObject(9596,-1993.4000200,-6746.2002000,184.8999900,354.0070000,3.0160000,2.3130000); //object(land_04_sfw) (8)
	CreateDynamicObject(9596,-1937.5999800,-6746.0000000,133.3000000,359.9650000,90.0000000,0.0000000); //object(land_04_sfw) (9)
	CreateDynamicObject(9596,-2097.1999500,-6747.8999000,184.8999900,354.0070000,3.0160000,2.3130000); //object(land_04_sfw) (10)
	CreateDynamicObject(9596,-2209.8000500,-6751.7002000,184.8999900,354.0070000,3.0160000,2.3130000); //object(land_04_sfw) (11)
	CreateDynamicObject(9596,-2310.1001000,-6750.2002000,184.8999900,354.0070000,3.0160000,2.3130000); //object(land_04_sfw) (12)
	CreateDynamicObject(16121,-1031.5999800,-6778.2998000,84.2000000,0.0000000,0.0000000,72.0000000); //object(des_rockgp2_09) (1)
	CreateDynamicObject(16121,-1140.3000500,-6775.7998000,90.7000000,0.0000000,0.0000000,71.9990000); //object(des_rockgp2_09) (2)
	CreateDynamicObject(16121,-1091.1999500,-6726.5000000,83.1000000,0.0000000,0.0000000,71.9990000); //object(des_rockgp2_09) (3)
	CreateDynamicObject(16121,-1278.0000000,-6732.7002000,107.2000000,0.0000000,0.0000000,65.9990000); //object(des_rockgp2_09) (4)
	CreateDynamicObject(16121,-1309.0999800,-6764.1001000,104.7000000,0.0000000,0.0000000,65.9950000); //object(des_rockgp2_09) (5)
	CreateDynamicObject(16121,-1381.6999500,-6748.2998000,103.0000000,0.0000000,0.0000000,65.9950000); //object(des_rockgp2_09) (6)
	CreateDynamicObject(6232,-1455.0999800,-6747.0000000,129.3999900,0.0000000,0.0000000,90.0000000); //object(canal_arch) (1)
	CreateDynamicObject(6232,-1528.9000200,-6747.3999000,121.4000000,0.0000000,0.0000000,90.0000000); //object(canal_arch) (2)
	CreateDynamicObject(6232,-1609.1999500,-6747.3999000,116.9000000,0.0000000,0.0000000,90.0000000); //object(canal_arch) (3)
	CreateDynamicObject(1655,-3454.6001000,-5731.6001000,223.6000100,0.0000000,0.0000000,270.0000000); //object(waterjumpx2) (3)
	CreateDynamicObject(8557,-3372.1999500,-5734.0000000,233.5000000,0.0000000,0.0000000,0.0000000); //amt 8557(760)
	CreateDynamicObject(8557,-3332.0000000,-5734.0000000,233.5000000,0.0000000,0.0000000,0.0000000); //amt 8557(760)
	CreateDynamicObject(8557,-3291.6999500,-5734.0000000,233.5000000,0.0000000,0.0000000,0.0000000); //amt 8557(760)
	CreateDynamicObject(8557,-3251.3999000,-5734.0000000,233.5000000,0.0000000,0.0000000,0.0000000); //amt 8557(902)
	CreateDynamicObject(8557,-3211.0998500,-5734.0000000,233.5000000,0.0000000,0.0000000,0.0000000); //amt 8557(903)
	CreateDynamicObject(8557,-3170.7998000,-5734.0000000,233.5000000,0.0000000,0.0000000,0.0000000); //amt 8557(904)
	CreateDynamicObject(8557,-3130.4997600,-5734.0000000,233.5000000,0.0000000,0.0000000,0.0000000); //amt 8557(905)
	CreateDynamicObject(8557,-3126.1001000,-5734.0000000,230.6000100,0.0000000,339.0000000,0.0000000); //amt 8557(905)
	CreateDynamicObject(8557,-2951.6999500,-5738.6001000,201.1000100,0.0000000,90.0000000,90.0000000); //amt 8557(905)
	CreateDynamicObject(8557,-2946.5520000,-5738.4672900,198.8049300,0.0000000,90.0000000,92.9510000); //amt 8557(908)
	CreateDynamicObject(8557,-2941.4179700,-5738.0703100,196.5098400,0.0000000,90.0000000,95.9020000); //amt 8557(909)
	CreateDynamicObject(8557,-2936.3107900,-5737.4086900,194.2147700,0.0000000,90.0000000,98.8520000); //amt 8557(910)
	CreateDynamicObject(8557,-2931.2446300,-5736.4858400,191.9196800,0.0000000,90.0000000,101.8030000); //amt 8557(911)
	CreateDynamicObject(8557,-2926.2329100,-5735.3027300,189.6246000,0.0000000,90.0000000,104.7540000); //amt 8557(912)
	CreateDynamicObject(8557,-2921.2885700,-5733.8637700,187.3295100,0.0000000,90.0000000,107.7050000); //amt 8557(913)
	CreateDynamicObject(8557,-2916.4248000,-5732.1718700,185.0344200,0.0000000,90.0000000,110.6560000); //amt 8557(914)
	CreateDynamicObject(8557,-2911.6545400,-5730.2319300,182.7393500,0.0000000,90.0000000,113.6070000); //amt 8557(915)
	CreateDynamicObject(8557,-2906.9904800,-5728.0488300,180.4442700,0.0000000,90.0000000,116.5570000); //amt 8557(916)
	CreateDynamicObject(8557,-2902.4450700,-5725.6284200,178.1491900,0.0000000,90.0000000,119.5080000); //amt 8557(917)
	CreateDynamicObject(8557,-2898.0302700,-5722.9775400,175.8541100,0.0000000,90.0000000,122.4590000); //amt 8557(918)
	CreateDynamicObject(8557,-2893.7578100,-5720.1030300,173.5590200,0.0000000,90.0000000,125.4100000); //amt 8557(919)
	CreateDynamicObject(8557,-2889.6389200,-5717.0122100,171.2639500,0.0000000,90.0000000,128.3610000); //amt 8557(920)
	CreateDynamicObject(8557,-2885.6848100,-5713.7133800,168.9688600,0.0000000,90.0000000,131.3110000); //amt 8557(921)
	CreateDynamicObject(8557,-2881.9055200,-5710.2153300,166.6737700,0.0000000,90.0000000,134.2620000); //amt 8557(922)
	CreateDynamicObject(8557,-2878.3115200,-5706.5273400,164.3786900,0.0000000,90.0000000,137.2130000); //amt 8557(923)
	CreateDynamicObject(8557,-2874.9118700,-5702.6591800,162.0836200,0.0000000,90.0000000,140.1640000); //amt 8557(924)
	CreateDynamicObject(8557,-2871.7160600,-5698.6215800,159.7885300,0.0000000,90.0000000,143.1150000); //amt 8557(925)
	CreateDynamicObject(8557,-2868.7321800,-5694.4243200,157.4934400,0.0000000,90.0000000,146.0660000); //amt 8557(926)
	CreateDynamicObject(8557,-2865.9685100,-5690.0795900,155.1983600,0.0000000,90.0000000,149.0160000); //amt 8557(927)
	CreateDynamicObject(8557,-2863.4321300,-5685.5976600,152.9032900,0.0000000,90.0000000,151.9670000); //amt 8557(928)
	CreateDynamicObject(8557,-2861.1296400,-5680.9917000,150.6082000,0.0000000,90.0000000,154.9180000); //amt 8557(929)
	CreateDynamicObject(8557,-2859.0676300,-5676.2729500,148.3131100,0.0000000,90.0000000,157.8690000); //amt 8557(930)
	CreateDynamicObject(8557,-2857.2509800,-5671.4541000,146.0180400,0.0000000,90.0000000,160.8200000); //amt 8557(931)
	CreateDynamicObject(8557,-2855.6850600,-5666.5488300,143.7229600,0.0000000,90.0000000,163.7710000); //amt 8557(932)
	CreateDynamicObject(8557,-2854.3735400,-5661.5688500,141.4278700,0.0000000,90.0000000,166.7210000); //amt 8557(933)
	CreateDynamicObject(8557,-2853.3200700,-5656.5283200,139.1327800,0.0000000,90.0000000,169.6720000); //amt 8557(934)
	CreateDynamicObject(8557,-2852.5275900,-5651.4399400,136.8377100,0.0000000,90.0000000,172.6230000); //amt 8557(935)
	CreateDynamicObject(8557,-2851.9982900,-5646.3178700,134.5426200,0.0000000,90.0000000,175.5740000); //amt 8557(936)
	CreateDynamicObject(8557,-2851.7331500,-5641.1748000,132.2475300,0.0000000,90.0000000,178.5250000); //amt 8557(937)
	CreateDynamicObject(8557,-2851.7331500,-5636.0253900,129.9524500,0.0000000,90.0000000,181.4750000); //amt 8557(938)
	CreateDynamicObject(8557,-2851.9982900,-5630.8823200,127.6573800,0.0000000,90.0000000,184.4260000); //amt 8557(939)
	CreateDynamicObject(8557,-2852.5275900,-5625.7602500,125.3623000,0.0000000,90.0000000,187.3770000); //amt 8557(940)
	CreateDynamicObject(8557,-2853.3200700,-5620.6718700,123.0672100,0.0000000,90.0000000,190.3280000); //amt 8557(941)
	CreateDynamicObject(8557,-2854.3735400,-5615.6313500,120.7721300,0.0000000,90.0000000,193.2790000); //amt 8557(942)
	CreateDynamicObject(8557,-2855.6850600,-5610.6513700,118.4770500,0.0000000,90.0000000,196.2290000); //amt 8557(943)
	CreateDynamicObject(8557,-2857.2509800,-5605.7460900,116.1819700,0.0000000,90.0000000,199.1800000); //amt 8557(944)
	CreateDynamicObject(8557,-2859.0676300,-5600.9272500,113.8868900,0.0000000,90.0000000,202.1310000); //amt 8557(945)
	CreateDynamicObject(8557,-2861.1296400,-5596.2085000,111.5918000,0.0000000,90.0000000,205.0820000); //amt 8557(946)
	CreateDynamicObject(8557,-2863.4321300,-5591.6025400,109.2967200,0.0000000,90.0000000,208.0330000); //amt 8557(947)
	CreateDynamicObject(8557,-2865.9685100,-5587.1206100,107.0016400,0.0000000,90.0000000,210.9840000); //amt 8557(948)
	CreateDynamicObject(8557,-2868.7321800,-5582.7758800,104.7065600,0.0000000,90.0000000,213.9340000); //amt 8557(949)
	CreateDynamicObject(8557,-2871.7160600,-5578.5786100,102.4114800,0.0000000,90.0000000,216.8850000); //amt 8557(950)
	CreateDynamicObject(8557,-2874.9118700,-5574.5410200,100.1163900,0.0000000,90.0000000,219.8360000); //amt 8557(951)
	CreateDynamicObject(8557,-2878.3115200,-5570.6728500,97.8213100,0.0000000,90.0000000,222.7870000); //amt 8557(952)
	CreateDynamicObject(8557,-2881.9055200,-5566.9848600,95.5262300,0.0000000,90.0000000,225.7380000); //amt 8557(953)
	CreateDynamicObject(8557,-2885.6848100,-5563.4868200,93.2311500,0.0000000,90.0000000,228.6890000); //amt 8557(954)
	CreateDynamicObject(8557,-2889.6389200,-5560.1879900,90.9360700,0.0000000,90.0000000,231.6390000); //amt 8557(955)
	CreateDynamicObject(8557,-2893.7578100,-5557.0971700,88.6409800,0.0000000,90.0000000,234.5900000); //amt 8557(956)
	CreateDynamicObject(8557,-2898.0302700,-5554.2226600,86.3459000,0.0000000,90.0000000,237.5410000); //amt 8557(957)
	CreateDynamicObject(8557,-2902.4450700,-5551.5717800,84.0508200,0.0000000,90.0000000,240.4920000); //amt 8557(958)
	CreateDynamicObject(8557,-2906.9904800,-5549.1513700,81.7557400,0.0000000,90.0000000,243.4430000); //amt 8557(959)
	CreateDynamicObject(8557,-2911.6545400,-5546.9682600,79.4606600,0.0000000,90.0000000,246.3930000); //amt 8557(960)
	CreateDynamicObject(8557,-2916.4248000,-5545.0283200,77.1655700,0.0000000,90.0000000,249.3440000); //amt 8557(961)
	CreateDynamicObject(8557,-2921.2885700,-5543.3364300,74.8704900,0.0000000,90.0000000,252.2950000); //amt 8557(962)
	CreateDynamicObject(8557,-2926.2329100,-5541.8974600,72.5753900,0.0000000,90.0000000,255.2460000); //amt 8557(963)
	CreateDynamicObject(8557,-2931.2448700,-5540.7143600,70.2803200,0.0000000,90.0000000,258.1970000); //amt 8557(964)
	CreateDynamicObject(8557,-2936.3107900,-5539.7915000,67.9852300,0.0000000,90.0000000,261.1480000); //amt 8557(965)
	CreateDynamicObject(8557,-2941.4179700,-5539.1298800,65.6901600,0.0000000,90.0000000,264.0980000); //amt 8557(966)
	CreateDynamicObject(8557,-2946.5520000,-5538.7329100,63.3950700,0.0000000,90.0000000,267.0490000); //amt 8557(967)
	CreateDynamicObject(8557,-2951.6999500,-5538.6001000,61.0999900,0.0000000,90.0000000,270.0000000); //amt 8557(968)
	CreateDynamicObject(8557,-2956.8479000,-5538.7329100,58.8049200,0.0000000,90.0000000,272.9510000); //amt 8557(969)
	CreateDynamicObject(6959,-2974.0000000,-5541.2002000,59.3000000,0.0000000,90.0000000,272.9500000); //amt 6959(114)
	CreateDynamicObject(6959,-2974.0000000,-5542.2998000,59.3000000,0.0000000,90.0000000,272.9500000); //amt 6959(114)
	CreateDynamicObject(8557,-2962.0996100,-5540.2998000,61.1000000,0.0000000,90.0000000,0.0000000); //amt 8557(968)
	CreateDynamicObject(8557,-2962.1001000,-5540.2998000,40.4000000,0.0000000,0.0000000,0.0000000); //amt 8557(968)
	CreateDynamicObject(3877,-3217.3000500,-5732.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (10)
	CreateDynamicObject(3877,-3217.3000500,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (15)
	CreateDynamicObject(3877,-3210.0000000,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (16)
	CreateDynamicObject(3877,-3202.6999500,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(19)
	CreateDynamicObject(3877,-3195.3999000,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(20)
	CreateDynamicObject(3877,-3188.0998500,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(21)
	CreateDynamicObject(3877,-3180.7998000,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(22)
	CreateDynamicObject(3877,-3173.4997600,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(23)
	CreateDynamicObject(3877,-3166.1997100,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(24)
	CreateDynamicObject(3877,-3158.8996600,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(25)
	CreateDynamicObject(3877,-3151.5996100,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(26)
	CreateDynamicObject(3877,-3144.2995600,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(27)
	CreateDynamicObject(3877,-3136.9995100,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(28)
	CreateDynamicObject(3877,-3129.6994600,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(29)
	CreateDynamicObject(3877,-3122.3994100,-5733.0000000,234.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(30)
	CreateDynamicObject(3877,-3115.1001000,-5733.0000000,235.8000000,0.0000000,0.0000000,0.0000000); //amt 3877(31)
	CreateDynamicObject(3877,-3107.8000500,-5733.0000000,238.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(32)
	CreateDynamicObject(3877,-3107.6999500,-5731.8999000,238.6000100,0.0000000,0.0000000,0.0000000); //amt 3877(32)
	CreateDynamicObject(6959,-3066.0000000,-5555.7002000,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(114)
	CreateDynamicObject(6959,-2974.0000000,-5541.2002000,100.0000000,0.0000000,90.0000000,272.9500000); //amt 6959(114)
	CreateDynamicObject(6959,-2974.0000000,-5542.2998000,100.0000000,0.0000000,90.0000000,272.9500000); //amt 6959(114)
	CreateDynamicObject(6959,-2974.0000000,-5541.2002000,140.7000000,0.0000000,90.0000000,272.9510000); //amt 6959(123)
	CreateDynamicObject(6959,-2974.0000000,-5541.2002000,181.4000000,0.0000000,90.0000000,272.9510000); //amt 6959(124)
	CreateDynamicObject(6959,-2974.0000000,-5541.2002000,222.1000000,0.0000000,90.0000000,272.9510000); //amt 6959(125)
	CreateDynamicObject(6959,-2974.0000000,-5542.2998000,140.7000000,0.0000000,90.0000000,272.9510000); //amt 6959(126)
	CreateDynamicObject(6959,-2974.0000000,-5542.2998000,181.4000000,0.0000000,90.0000000,272.9510000); //amt 6959(127)
	CreateDynamicObject(6959,-2974.0000000,-5542.2998000,222.1000100,0.0000000,90.0000000,272.9510000); //amt 6959(128)
	CreateDynamicObject(8557,-2962.0996100,-5540.2998000,100.0000000,0.0000000,90.0000000,0.0000000); //amt 8557(968)
	CreateDynamicObject(8557,-2962.0996100,-5540.2998000,138.9000000,0.0000000,90.0000000,0.0000000); //amt 8557(973)
	CreateDynamicObject(8557,-2962.0996100,-5540.2998000,177.8000000,0.0000000,90.0000000,0.0000000); //amt 8557(974)
	CreateDynamicObject(8557,-2962.0996100,-5540.2998000,216.7000000,0.0000000,90.0000000,0.0000000); //amt 8557(975)
	CreateDynamicObject(8557,-2962.0996100,-5540.2998000,138.9000000,0.0000000,90.0000000,0.0000000); //amt 8557(976)
	CreateDynamicObject(8557,-2962.0996100,-5540.2998000,177.8000000,0.0000000,90.0000000,0.0000000); //amt 8557(977)
	CreateDynamicObject(8557,-2962.0996100,-5540.2998000,216.7000100,0.0000000,90.0000000,0.0000000); //amt 8557(978)
	CreateDynamicObject(6959,-2974.5000000,-5562.2002000,242.7000000,0.0000000,0.0000000,2.5000000); //amt 6959(128)
	CreateDynamicObject(6959,-2976.1001000,-5521.1001000,242.7000000,0.0000000,0.0000000,2.4990000); //amt 6959(128)
	CreateDynamicObject(8557,-2962.1001000,-5540.2998000,222.8000000,0.0000000,90.0000000,0.0000000); //amt 8557(978)
	CreateDynamicObject(6959,-3026.5000000,-5516.2002000,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(114)
	CreateDynamicObject(6959,-3024.6999500,-5555.8999000,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(114)
	CreateDynamicObject(6959,-3066.1001000,-5516.8999000,222.1000100,0.0000000,0.0000000,0.0000000); //amt 6959(114)

	//tripzenx 4 end
	// FrancyR7 -> another map
	CreateDynamicObject(3524,2467.6992200,2283.2998000,97.9000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(16000,2463.5996100,2283.7998000,90.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3524,2470.8999000,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2468.5000000,2283.2998000,97.9000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2469.2998000,2283.2998000,97.9000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2470.0000000,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2470.8994100,2283.2998000,96.7000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2470.8994100,2283.2998000,97.9000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2470.0996100,2283.1992200,97.9000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2467.6001000,2283.3000500,94.2000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2469.1999500,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2468.3994100,2283.2998000,95.4000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2468.3999000,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2467.5996100,2283.2998000,95.4000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2464.8000500,2283.3000500,97.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2467.5996100,2283.1992200,92.9000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2469.1999500,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2470.0000000,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2470.8999000,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2464.0000000,2283.3000500,97.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(16000,2460.1999500,2283.8000500,8.2000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3524,2462.3994100,2283.2998000,97.9000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2463.1999500,2283.3000500,97.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2465.6001000,2283.3000500,94.2000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2463.8999000,2283.3000500,94.2000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2465.6001000,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2462.3000500,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2462.3999000,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2463.1001000,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2465.6001000,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2462.3000500,2283.3000500,96.7000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2463.8994100,2283.2998000,95.4000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2465.6001000,2283.3000500,97.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2465.5996100,2283.2998000,96.7000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2464.8000500,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2463.1001000,2283.3000500,93.6000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2460.3000500,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2457.6001000,2283.3000500,97.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2459.3999000,2283.3000500,97.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2460.3000500,2283.3000500,97.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2456.6999500,2283.3000500,94.2000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2459.3000500,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2460.3000500,2283.3000500,96.7000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2458.5000000,2283.3000500,97.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2457.6001000,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2456.8000500,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2459.5000000,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2458.6001000,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2458.5000000,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2456.6999500,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2457.6999500,2283.3000500,95.4000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2456.6992200,2283.2998000,97.9000000,11.9920000,0.0000000,181.7470000); //
	CreateDynamicObject(3524,2460.1999500,2283.3000500,92.9000000,11.9970000,0.0000000,181.7470000); //
	CreateDynamicObject(3877,2470.8999000,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2470.1001000,2282.6001000,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2468.6001000,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2467.6999500,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2469.3000500,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2469.1999500,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2470.8999000,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2470.0000000,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2468.3999000,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2467.6001000,2282.6999500,96.6000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2469.1999500,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2468.3999000,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2470.0000000,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2467.6001000,2282.6001000,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2467.6001000,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2470.8999000,2282.8000500,99.0000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2470.8999000,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2464.8000500,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2464.0000000,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2462.3000500,2282.6001000,99.1000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2465.6001000,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2463.8999000,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2463.1001000,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2462.3999000,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2465.6001000,2282.6999500,99.1000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2464.8000500,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2465.6999500,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2463.1999500,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2465.6001000,2282.6999500,96.6000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2465.6001000,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2463.8999000,2282.6999500,96.6000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2463.1001000,2282.6999500,96.0000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2462.3999000,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2460.3000500,2282.6001000,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2459.3999000,2282.6001000,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2460.3000500,2282.6999500,99.1000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2462.3000500,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2458.6001000,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2459.5000000,2282.6001000,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2456.6999500,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2457.6001000,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2457.6999500,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2460.3000500,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2456.8000500,2282.6999500,97.8000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2460.1999500,2282.6001000,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2459.3000500,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2458.5000000,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2456.6999500,2282.6999500,96.6000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2456.6999500,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2457.6001000,2282.6999500,95.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(3877,2458.5000000,2282.6999500,100.3000000,0.0000000,94.9990000,91.9890000); //
	CreateDynamicObject(744,2449.3994100,2282.0000000,90.6000000,0.0000000,0.0000000,345.4980000); //
	CreateDynamicObject(745,2453.2998000,2284.0000000,90.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(750,2450.3994100,2286.6992200,90.6000000,0.0000000,0.0000000,37.9960000); //
	CreateDynamicObject(749,2475.3999000,2284.1001000,90.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(744,2478.8999000,2282.1001000,90.6000000,0.0000000,0.0000000,345.4980000); //
	CreateDynamicObject(744,2484.0000000,2282.1001000,90.6000000,0.0000000,0.0000000,345.4980000); //
	CreateDynamicObject(745,2482.8000500,2286.3999000,90.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(745,2480.3999000,2284.3000500,95.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2477.6001000,2284.1999500,96.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2478.8000500,2285.1001000,98.5000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2482.1999500,2287.0000000,94.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2479.8999000,2286.6001000,93.4000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2475.3999000,2285.1001000,97.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2481.0000000,2286.8999000,96.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2479.6001000,2285.0000000,95.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2452.8999000,2284.5000000,94.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2450.8000500,2283.6999500,96.5000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2451.0000000,2287.6999500,95.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2452.8999000,2286.3000500,91.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2449.5000000,2288.1001000,91.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2444.1999500,2284.3999000,91.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2936,2446.5000000,2285.3999000,91.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(751,2446.8000500,2283.1001000,90.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(751,2452.1001000,2283.1999500,94.5000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(744,2449.0996100,2281.3994100,96.0000000,0.0000000,0.0000000,145.4970000); //
	CreateDynamicObject(744,2441.6999500,2279.3000500,90.6000000,0.0000000,0.0000000,345.4980000); //
	CreateDynamicObject(744,2444.6999500,2281.3000500,93.1000000,0.0000000,0.0000000,345.4980000); //
	CreateDynamicObject(744,2477.0000000,2282.8000500,95.1000000,0.0000000,0.0000000,145.4970000); //
	CreateDynamicObject(744,2480.6992200,2282.6992200,97.4000000,0.0000000,0.0000000,237.4970000); //
	CreateDynamicObject(2780,2448.1001000,2282.5000000,96.2000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2780,2478.5000000,2284.1999500,95.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(745,2477.3000500,2285.1001000,90.9000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,2450.6001000,2288.0000000,90.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,2477.3000500,2286.5000000,90.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(9833,2453.5000000,2286.1999500,93.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(9833,2473.3000500,2287.0000000,93.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,2463.7998000,2292.6992200,91.5000000,0.0000000,0.0000000,267.9950000); //
	CreateDynamicObject(2976,2454.0000000,2286.3999000,97.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2976,2473.8000500,2286.8000500,97.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(354,2451.6001000,2287.6999500,90.9000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(354,2477.1001000,2286.5000000,91.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(10281,2463.8999000,2283.3000500,101.8000000,0.0000000,346.0000000,180.0000000); //
	CreateDynamicObject(14637,2464.0000000,2284.8999000,103.1000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2780,2463.8999000,2275.3999000,100.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(839,2468.6001000,2287.1001000,93.3000000,0.0000000,0.0000000,316.0000000); //
	CreateDynamicObject(837,2461.8000500,2287.3999000,92.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(836,2458.1999500,2291.0000000,93.1000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(833,2464.8000500,2290.3000500,92.4000000,0.0000000,42.0000000,98.0000000); //
	CreateDynamicObject(1010,2463.5703100,2290.7666000,92.7488800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2464.1999500,2299.1001000,91.9000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2465.1999500,2298.6001000,91.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2465.8000500,2297.6001000,91.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2465.8000500,2296.5000000,91.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2465.1999500,2295.6001000,91.9000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2464.1999500,2294.8999000,91.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2463.1999500,2295.6001000,91.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2462.6001000,2296.6001000,91.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2462.6001000,2297.6999500,91.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3385,2463.3000500,2298.6999500,91.8000000,0.0000000,0.0000000,0.0000000); //
	
	//END TRIPZEN	
	
	// YENX - 1
	//YeNx//
	CreateDynamicObject(18450,2589.5000000,-2249.3000500,1.3000000,0.0000000,4.1000000,90.0000000); //object(cs_roadbridge04) (1)
	CreateDynamicObject(18450,2542.0000000,-2296.6999500,4.1000000,0.0000000,0.0000000,0.0000000); //object(cs_roadbridge04) (2)
	CreateDynamicObject(8557,2577.3000500,-2291.3999000,2.9000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (1)
	CreateDynamicObject(8557,2577.3000500,-2296.5000000,2.9000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (2)
	CreateDynamicObject(8557,2577.3999000,-2301.6001000,2.9000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (3)
	CreateDynamicObject(18450,2467.3000500,-2325.3999000,4.1000000,0.0000000,0.0000000,42.0000000); //object(cs_roadbridge04) (4)
	CreateDynamicObject(18450,2408.0000000,-2378.8000500,4.1000000,0.0000000,0.0000000,41.9950000); //object(cs_roadbridge04) (5)
	CreateDynamicObject(18450,2349.0000000,-2431.8999000,4.1000000,0.0000000,0.0000000,41.9950000); //object(cs_roadbridge04) (6)
	CreateDynamicObject(18450,2316.8999000,-2504.1999500,4.1000000,0.0000000,0.0000000,90.0000000); //object(cs_roadbridge04) (7)
	CreateDynamicObject(18450,2316.8994100,-2540.0000000,4.1000000,0.0000000,5.0000000,90.0000000); //object(cs_roadbridge04) (9)
	CreateDynamicObject(18450,2316.8994100,-2570.0000000,6.0000000,0.0000000,10.0000000,90.0000000); //object(cs_roadbridge04) (10)
	CreateDynamicObject(18450,2316.8994100,-2570.0000000,6.0000000,0.0000000,9.9980000,90.0000000); //object(cs_roadbridge04) (11)
	CreateDynamicObject(18450,2316.8994100,-2590.0000000,9.0000000,0.0000000,15.0000000,90.0000000); //object(cs_roadbridge04) (12)
	CreateDynamicObject(18450,2316.8994100,-2605.0000000,15.0000000,0.0000000,20.0000000,90.0000000); //object(cs_roadbridge04) (13)
	CreateDynamicObject(8557,2321.6001000,-2472.8999000,2.9000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (4)
	CreateDynamicObject(8557,2316.6001000,-2473.1999500,2.9000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (5)
	CreateDynamicObject(8557,2311.6001000,-2472.8000500,2.9000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (6)
	CreateDynamicObject(8557,2513.0000000,-2301.6001000,2.9000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (7)
	CreateDynamicObject(8557,2511.0000000,-2296.5000000,2.9000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (8)
	CreateDynamicObject(8557,2511.6999500,-2291.5000000,2.9000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (9)
	CreateDynamicObject(18450,2316.6001000,-2796.5000000,4.1000000,0.0000000,0.0000000,90.0000000); //object(cs_roadbridge04) (15)
	CreateDynamicObject(18450,2316.6001000,-2876.5000000,4.1000000,0.0000000,0.0000000,90.0000000); //object(cs_roadbridge04) (16)
	CreateDynamicObject(18450,2316.6001000,-2956.5000000,4.1000000,0.0000000,0.0000000,90.0000000); //object(cs_roadbridge04) (17)
	CreateDynamicObject(18450,2316.6001000,-3036.5000000,4.1000000,0.0000000,0.0000000,90.0000000); //object(cs_roadbridge04) (18)
	CreateDynamicObject(8557,2316.5000000,-3078.8999000,2.9000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (10)
	CreateDynamicObject(8557,2315.3371600,-3081.4548300,2.9933700,355.8140000,0.0000000,0.0000000); //amt 8557(11)
	CreateDynamicObject(8557,2314.1743200,-3083.9958500,3.2729800,351.6280000,0.0000000,0.0000000); //amt 8557(12)
	CreateDynamicObject(8557,2313.0117200,-3086.5100100,3.7373400,347.4420000,0.0000000,0.0000000); //amt 8557(13)
	CreateDynamicObject(8557,2311.8488800,-3088.9834000,4.3839800,343.2560000,0.0000000,0.0000000); //amt 8557(14)
	CreateDynamicObject(8557,2310.6860400,-3091.4030800,5.2094400,339.0700000,0.0000000,0.0000000); //amt 8557(15)
	CreateDynamicObject(8557,2309.5231900,-3093.7558600,6.2093100,334.8840000,0.0000000,0.0000000); //amt 8557(16)
	CreateDynamicObject(8557,2308.3603500,-3096.0295400,7.3782700,330.6980000,0.0000000,0.0000000); //amt 8557(17)
	CreateDynamicObject(8557,2307.1977500,-3098.2116700,8.7100800,326.5120000,0.0000000,0.0000000); //amt 8557(18)
	CreateDynamicObject(8557,2306.0349100,-3100.2910200,10.1976200,322.3260000,0.0000000,0.0000000); //amt 8557(19)
	CreateDynamicObject(8557,2304.8720700,-3102.2561000,11.8329700,318.1400000,0.0000000,0.0000000); //amt 8557(20)
	CreateDynamicObject(8557,2303.7092300,-3104.0964400,13.6074000,313.9530000,0.0000000,0.0000000); //amt 8557(21)
	CreateDynamicObject(8557,2302.5466300,-3105.8024900,15.5114400,309.7670000,0.0000000,0.0000000); //amt 8557(22)
	CreateDynamicObject(8557,2301.3837900,-3107.3649900,17.5349400,305.5810000,0.0000000,0.0000000); //amt 8557(23)
	CreateDynamicObject(8557,2300.2209500,-3108.7756300,19.6670900,301.3950000,0.0000000,0.0000000); //amt 8557(24)
	CreateDynamicObject(8557,2299.0581100,-3110.0268600,21.8965200,297.2090000,0.0000000,0.0000000); //amt 8557(25)
	CreateDynamicObject(8557,2297.8952600,-3111.1120600,24.2113300,293.0230000,0.0000000,0.0000000); //amt 8557(26)
	CreateDynamicObject(8557,2296.7326700,-3112.0253900,26.5991900,288.8370000,0.0000000,0.0000000); //amt 8557(27)
	CreateDynamicObject(8557,2295.5698200,-3112.7617200,29.0473300,284.6510000,0.0000000,0.0000000); //amt 8557(28)
	CreateDynamicObject(8557,2294.4069800,-3113.3176300,31.5427100,280.4650000,0.0000000,0.0000000); //amt 8557(29)
	CreateDynamicObject(8557,2293.2441400,-3113.6899400,34.0720100,276.2790000,0.0000000,0.0000000); //amt 8557(30)
	CreateDynamicObject(8557,2292.0813000,-3113.8764600,36.6217300,272.0930000,0.0000000,0.0000000); //amt 8557(31)
	CreateDynamicObject(8557,2290.9187000,-3113.8764600,39.1782700,272.0930000,180.0000000,180.0000000); //amt 8557(32)
	CreateDynamicObject(8557,2289.7558600,-3113.6899400,41.7279900,276.2790000,180.0000000,180.0000000); //amt 8557(33)
	CreateDynamicObject(8557,2288.5930200,-3113.3176300,44.2572900,280.4650000,180.0000000,180.0000000); //amt 8557(34)
	CreateDynamicObject(8557,2287.4301800,-3112.7617200,46.7526700,284.6510000,180.0000000,180.0000000); //amt 8557(35)
	CreateDynamicObject(8557,2286.2673300,-3112.0253900,49.2008200,288.8370000,180.0000000,180.0000000); //amt 8557(36)
	CreateDynamicObject(8557,2285.1047400,-3111.1120600,51.5886700,293.0230000,180.0000000,180.0000000); //amt 8557(37)
	CreateDynamicObject(8557,2283.9418900,-3110.0268600,53.9034800,297.2090000,180.0000000,180.0000000); //amt 8557(38)
	CreateDynamicObject(8557,2282.7790500,-3108.7756300,56.1329100,301.3950000,180.0000000,180.0000000); //amt 8557(39)
	CreateDynamicObject(8557,2281.6162100,-3107.3649900,58.2650600,305.5810000,180.0000000,180.0000000); //amt 8557(40)
	CreateDynamicObject(8557,2280.4533700,-3105.8024900,60.2885600,309.7670000,180.0000000,180.0000000); //amt 8557(41)
	CreateDynamicObject(8557,2279.2907700,-3104.0964400,62.1926000,313.9530000,180.0000000,180.0000000); //amt 8557(42)
	CreateDynamicObject(8557,2278.1279300,-3102.2561000,63.9670300,318.1400000,180.0000000,180.0000000); //amt 8557(43)
	CreateDynamicObject(8557,2276.9650900,-3100.2910200,65.6023800,322.3260000,180.0000000,180.0000000); //amt 8557(44)
	CreateDynamicObject(8557,2275.8022500,-3098.2116700,67.0899300,326.5120000,180.0000000,180.0000000); //amt 8557(45)
	CreateDynamicObject(8557,2274.6396500,-3096.0295400,68.4217300,330.6980000,180.0000000,180.0000000); //amt 8557(46)
	CreateDynamicObject(8557,2273.4768100,-3093.7558600,69.5906900,334.8840000,180.0000000,180.0000000); //amt 8557(47)
	CreateDynamicObject(8557,2272.3139600,-3091.4030800,70.5905700,339.0700000,180.0000000,180.0000000); //amt 8557(48)
	CreateDynamicObject(8557,2271.1511200,-3088.9834000,71.4160200,343.2560000,180.0000000,180.0000000); //amt 8557(49)
	CreateDynamicObject(8557,2269.9882800,-3086.5100100,72.0626600,347.4420000,180.0000000,180.0000000); //amt 8557(50)
	CreateDynamicObject(8557,2268.8256800,-3083.9958500,72.5270200,351.6280000,180.0000000,180.0000000); //amt 8557(51)
	CreateDynamicObject(8557,2267.6628400,-3081.4548300,72.8066300,355.8140000,180.0000000,180.0000000); //amt 8557(52)
	CreateDynamicObject(8557,2266.5000000,-3078.8999000,72.9000000,0.0000000,180.0000000,180.0000000); //amt 8557(53)
	CreateDynamicObject(8557,2265.3371600,-3076.3449700,72.8066300,4.1860000,180.0000000,180.0000000); //amt 8557(54)
	CreateDynamicObject(8557,2264.1743200,-3073.8039600,72.5270200,8.3720000,180.0000000,180.0000000); //amt 8557(55)
	CreateDynamicObject(8557,2263.0117200,-3071.2897900,72.0626600,12.5580000,180.0000000,180.0000000); //amt 8557(56)
	CreateDynamicObject(8557,2261.8488800,-3068.8164100,71.4160200,16.7440000,180.0000000,180.0000000); //amt 8557(57)
	CreateDynamicObject(8557,2260.6860400,-3066.3967300,70.5905700,20.9300000,180.0000000,180.0000000); //amt 8557(58)
	CreateDynamicObject(8557,2259.5231900,-3064.0439500,69.5906900,25.1160000,180.0000000,180.0000000); //amt 8557(59)
	CreateDynamicObject(8557,2258.3603500,-3061.7702600,68.4217300,29.3020000,180.0000000,180.0000000); //amt 8557(60)
	CreateDynamicObject(8557,2257.1977500,-3059.5881300,67.0899300,33.4880000,180.0000000,180.0000000); //amt 8557(61)
	CreateDynamicObject(8557,2256.0349100,-3057.5087900,65.6023800,37.6740000,180.0000000,180.0000000); //amt 8557(62)
	CreateDynamicObject(8557,2254.8720700,-3055.5437000,63.9670300,41.8600000,180.0000000,180.0000000); //amt 8557(63)
	CreateDynamicObject(8557,2253.7092300,-3053.7033700,62.1926000,46.0470000,180.0000000,180.0000000); //amt 8557(64)
	CreateDynamicObject(8557,2252.5466300,-3051.9973100,60.2885600,50.2330000,180.0000000,180.0000000); //amt 8557(65)
	CreateDynamicObject(8557,2251.3837900,-3050.4348100,58.2650600,54.4190000,180.0000000,180.0000000); //amt 8557(66)
	CreateDynamicObject(8557,2250.2209500,-3049.0241700,56.1329100,58.6050000,180.0000000,180.0000000); //amt 8557(67)
	CreateDynamicObject(8557,2249.0581100,-3047.7729500,53.9034800,62.7910000,180.0000000,180.0000000); //amt 8557(68)
	CreateDynamicObject(8557,2247.8952600,-3046.6877400,51.5886700,66.9770000,180.0000000,180.0000000); //amt 8557(69)
	CreateDynamicObject(8557,2246.7326700,-3045.7744100,49.2008200,71.1630000,180.0000000,180.0000000); //amt 8557(70)
	CreateDynamicObject(8557,2245.5698200,-3045.0380900,46.7526700,75.3490000,180.0000000,180.0000000); //amt 8557(71)
	CreateDynamicObject(8557,2244.4069800,-3044.4821800,44.2572900,79.5350000,180.0000000,180.0000000); //amt 8557(72)
	CreateDynamicObject(8557,2243.2441400,-3044.1098600,41.7279900,83.7210000,180.0000000,180.0000000); //amt 8557(73)
	CreateDynamicObject(8557,2242.0813000,-3043.9233400,39.1782700,87.9070000,180.0000000,180.0000000); //amt 8557(74)
	CreateDynamicObject(8557,2240.9187000,-3043.9233400,36.6217300,87.9070000,0.0000000,0.0000000); //amt 8557(75)
	CreateDynamicObject(8557,2239.7558600,-3044.1098600,34.0720100,83.7210000,0.0000000,0.0000000); //amt 8557(76)
	CreateDynamicObject(8557,2238.5930200,-3044.4821800,31.5427100,79.5350000,0.0000000,0.0000000); //amt 8557(77)
	CreateDynamicObject(8557,2237.4301800,-3045.0380900,29.0473300,75.3490000,0.0000000,0.0000000); //amt 8557(78)
	CreateDynamicObject(8557,2236.2673300,-3045.7744100,26.5991900,71.1630000,0.0000000,0.0000000); //amt 8557(79)
	CreateDynamicObject(8557,2235.1047400,-3046.6877400,24.2113300,66.9770000,0.0000000,0.0000000); //amt 8557(80)
	CreateDynamicObject(8557,2233.9418900,-3047.7729500,21.8965200,62.7910000,0.0000000,0.0000000); //amt 8557(81)
	CreateDynamicObject(8557,2232.7790500,-3049.0241700,19.6670900,58.6050000,0.0000000,0.0000000); //amt 8557(82)
	CreateDynamicObject(8557,2231.6162100,-3050.4348100,17.5349400,54.4190000,0.0000000,0.0000000); //amt 8557(83)
	CreateDynamicObject(8557,2230.4536100,-3051.9973100,15.5114400,50.2330000,0.0000000,0.0000000); //amt 8557(84)
	CreateDynamicObject(8557,2229.2907700,-3053.7033700,13.6074000,46.0470000,0.0000000,0.0000000); //amt 8557(85)
	CreateDynamicObject(8557,2228.1279300,-3055.5437000,11.8329700,41.8600000,0.0000000,0.0000000); //amt 8557(86)
	CreateDynamicObject(8557,2226.9650900,-3057.5087900,10.1976200,37.6740000,0.0000000,0.0000000); //amt 8557(87)
	CreateDynamicObject(8557,2225.8022500,-3059.5881300,8.7100800,33.4880000,0.0000000,0.0000000); //amt 8557(88)
	CreateDynamicObject(8557,2224.6396500,-3061.7702600,7.3782700,29.3020000,0.0000000,0.0000000); //amt 8557(89)
	CreateDynamicObject(8557,2223.4768100,-3064.0439500,6.2093100,25.1160000,0.0000000,0.0000000); //amt 8557(90)
	CreateDynamicObject(8557,2222.3139600,-3066.3967300,5.2094400,20.9300000,0.0000000,0.0000000); //amt 8557(91)
	CreateDynamicObject(8557,2221.1511200,-3068.8164100,4.3839800,16.7440000,0.0000000,0.0000000); //amt 8557(92)
	CreateDynamicObject(8557,2219.9882800,-3071.2897900,3.7373400,12.5580000,0.0000000,0.0000000); //amt 8557(93)
	CreateDynamicObject(8557,2218.8256800,-3073.8039600,3.2729800,8.3720000,0.0000000,0.0000000); //amt 8557(94)
	CreateDynamicObject(8557,2217.6628400,-3076.3449700,2.9933700,4.1860000,0.0000000,0.0000000); //amt 8557(95)
	CreateDynamicObject(8557,2216.5000000,-3078.8999000,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(96)
	CreateDynamicObject(8557,2215.3371600,-3081.4548300,2.9933700,355.8140000,0.0000000,0.0000000); //amt 8557(97)
	CreateDynamicObject(8557,2214.1743200,-3083.9958500,3.2729800,351.6280000,0.0000000,0.0000000); //amt 8557(98)
	CreateDynamicObject(8557,2213.0117200,-3086.5100100,3.7373400,347.4420000,0.0000000,0.0000000); //amt 8557(99)
	CreateDynamicObject(8557,2211.8488800,-3088.9834000,4.3839800,343.2560000,0.0000000,0.0000000); //amt 8557(100)
	CreateDynamicObject(8557,2210.6860400,-3091.4030800,5.2094400,339.0700000,0.0000000,0.0000000); //amt 8557(101)
	CreateDynamicObject(8557,2209.5231900,-3093.7558600,6.2093100,334.8840000,0.0000000,0.0000000); //amt 8557(102)
	CreateDynamicObject(8557,2208.3603500,-3096.0295400,7.3782700,330.6980000,0.0000000,0.0000000); //amt 8557(103)
	CreateDynamicObject(8557,2207.1977500,-3098.2116700,8.7100800,326.5120000,0.0000000,0.0000000); //amt 8557(104)
	CreateDynamicObject(8557,2206.0349100,-3100.2910200,10.1976200,322.3260000,0.0000000,0.0000000); //amt 8557(105)
	CreateDynamicObject(8557,2204.8720700,-3102.2561000,11.8329700,318.1400000,0.0000000,0.0000000); //amt 8557(106)
	CreateDynamicObject(8557,2203.7092300,-3104.0964400,13.6074000,313.9530000,0.0000000,0.0000000); //amt 8557(107)
	CreateDynamicObject(8557,2202.5463900,-3105.8024900,15.5114400,309.7670000,0.0000000,0.0000000); //amt 8557(108)
	CreateDynamicObject(8557,2201.3837900,-3107.3649900,17.5349400,305.5810000,0.0000000,0.0000000); //amt 8557(109)
	CreateDynamicObject(8557,2200.2209500,-3108.7756300,19.6670900,301.3950000,0.0000000,0.0000000); //amt 8557(110)
	CreateDynamicObject(8557,2199.0581100,-3110.0268600,21.8965200,297.2090000,0.0000000,0.0000000); //amt 8557(111)
	CreateDynamicObject(8557,2197.8952600,-3111.1120600,24.2113300,293.0230000,0.0000000,0.0000000); //amt 8557(112)
	CreateDynamicObject(8557,2196.7326700,-3112.0253900,26.5991900,288.8370000,0.0000000,0.0000000); //amt 8557(113)
	CreateDynamicObject(8557,2195.5698200,-3112.7617200,29.0473300,284.6510000,0.0000000,0.0000000); //amt 8557(114)
	CreateDynamicObject(8557,2194.4069800,-3113.3176300,31.5427100,280.4650000,0.0000000,0.0000000); //amt 8557(115)
	CreateDynamicObject(8557,2193.2441400,-3113.6899400,34.0720100,276.2790000,0.0000000,0.0000000); //amt 8557(116)
	CreateDynamicObject(8557,2192.0813000,-3113.8764600,36.6217300,272.0930000,0.0000000,0.0000000); //amt 8557(117)
	CreateDynamicObject(8557,2190.9187000,-3113.8764600,39.1782700,272.0930000,180.0000000,180.0000000); //amt 8557(118)
	CreateDynamicObject(8557,2189.7558600,-3113.6899400,41.7279900,276.2790000,180.0000000,180.0000000); //amt 8557(119)
	CreateDynamicObject(8557,2188.5930200,-3113.3176300,44.2572900,280.4650000,180.0000000,180.0000000); //amt 8557(120)
	CreateDynamicObject(8557,2187.4301800,-3112.7617200,46.7526700,284.6510000,180.0000000,180.0000000); //amt 8557(121)
	CreateDynamicObject(8557,2186.2673300,-3112.0253900,49.2008200,288.8370000,180.0000000,180.0000000); //amt 8557(122)
	CreateDynamicObject(8557,2185.1047400,-3111.1120600,51.5886700,293.0230000,180.0000000,180.0000000); //amt 8557(123)
	CreateDynamicObject(8557,2183.9418900,-3110.0268600,53.9034800,297.2090000,180.0000000,180.0000000); //amt 8557(124)
	CreateDynamicObject(8557,2182.7790500,-3108.7756300,56.1329100,301.3950000,180.0000000,180.0000000); //amt 8557(125)
	CreateDynamicObject(8557,2181.6162100,-3107.3649900,58.2650600,305.5810000,180.0000000,180.0000000); //amt 8557(126)
	CreateDynamicObject(8557,2180.4536100,-3105.8024900,60.2885600,309.7670000,180.0000000,180.0000000); //amt 8557(127)
	CreateDynamicObject(8557,2179.2907700,-3104.0964400,62.1926000,313.9530000,180.0000000,180.0000000); //amt 8557(128)
	CreateDynamicObject(8557,2178.1279300,-3102.2561000,63.9670300,318.1400000,180.0000000,180.0000000); //amt 8557(129)
	CreateDynamicObject(8557,2176.9650900,-3100.2910200,65.6023800,322.3260000,180.0000000,180.0000000); //amt 8557(130)
	CreateDynamicObject(8557,2175.8022500,-3098.2116700,67.0899300,326.5120000,180.0000000,180.0000000); //amt 8557(131)
	CreateDynamicObject(8557,2174.6396500,-3096.0295400,68.4217300,330.6980000,180.0000000,180.0000000); //amt 8557(132)
	CreateDynamicObject(8557,2173.4768100,-3093.7558600,69.5906900,334.8840000,180.0000000,180.0000000); //amt 8557(133)
	CreateDynamicObject(8557,2172.3139600,-3091.4030800,70.5905700,339.0700000,180.0000000,180.0000000); //amt 8557(134)
	CreateDynamicObject(8557,2171.1511200,-3088.9834000,71.4160200,343.2560000,180.0000000,180.0000000); //amt 8557(135)
	CreateDynamicObject(8557,2169.9882800,-3086.5100100,72.0626600,347.4420000,180.0000000,180.0000000); //amt 8557(136)
	CreateDynamicObject(8557,2168.8256800,-3083.9958500,72.5270200,351.6280000,180.0000000,180.0000000); //amt 8557(137)
	CreateDynamicObject(8557,2167.6628400,-3081.4548300,72.8066300,355.8140000,180.0000000,180.0000000); //amt 8557(138)
	CreateDynamicObject(8557,2166.5000000,-3078.8999000,72.9000000,0.0000000,180.0000000,180.0000000); //amt 8557(139)
	CreateDynamicObject(8557,2165.3371600,-3076.3449700,72.8066300,4.1860000,180.0000000,180.0000000); //amt 8557(140)
	CreateDynamicObject(8557,2164.1743200,-3073.8039600,72.5270200,8.3720000,180.0000000,180.0000000); //amt 8557(141)
	CreateDynamicObject(8557,2163.0117200,-3071.2897900,72.0626600,12.5580000,180.0000000,180.0000000); //amt 8557(142)
	CreateDynamicObject(8557,2161.8488800,-3068.8164100,71.4160200,16.7440000,180.0000000,180.0000000); //amt 8557(143)
	CreateDynamicObject(8557,2160.6860400,-3066.3967300,70.5905700,20.9300000,180.0000000,180.0000000); //amt 8557(144)
	CreateDynamicObject(8557,2159.5231900,-3064.0439500,69.5906900,25.1160000,180.0000000,180.0000000); //amt 8557(145)
	CreateDynamicObject(8557,2158.3603500,-3061.7702600,68.4217300,29.3020000,180.0000000,180.0000000); //amt 8557(146)
	CreateDynamicObject(8557,2157.1977500,-3059.5881300,67.0899300,33.4880000,180.0000000,180.0000000); //amt 8557(147)
	CreateDynamicObject(8557,2156.0349100,-3057.5087900,65.6023800,37.6740000,180.0000000,180.0000000); //amt 8557(148)
	CreateDynamicObject(8557,2154.8720700,-3055.5437000,63.9670300,41.8600000,180.0000000,180.0000000); //amt 8557(149)
	CreateDynamicObject(8557,2153.7092300,-3053.7033700,62.1926000,46.0470000,180.0000000,180.0000000); //amt 8557(150)
	CreateDynamicObject(8557,2152.5463900,-3051.9973100,60.2885600,50.2330000,180.0000000,180.0000000); //amt 8557(151)
	CreateDynamicObject(8557,2151.3837900,-3050.4348100,58.2650600,54.4190000,180.0000000,180.0000000); //amt 8557(152)
	CreateDynamicObject(8557,2150.2209500,-3049.0241700,56.1329100,58.6050000,180.0000000,180.0000000); //amt 8557(153)
	CreateDynamicObject(8557,2149.0581100,-3047.7729500,53.9034800,62.7910000,180.0000000,180.0000000); //amt 8557(154)
	CreateDynamicObject(8557,2147.8952600,-3046.6877400,51.5886700,66.9770000,180.0000000,180.0000000); //amt 8557(155)
	CreateDynamicObject(8557,2146.7326700,-3045.7744100,49.2008200,71.1630000,180.0000000,180.0000000); //amt 8557(156)
	CreateDynamicObject(8557,2145.5698200,-3045.0380900,46.7526700,75.3490000,180.0000000,180.0000000); //amt 8557(157)
	CreateDynamicObject(8557,2144.4069800,-3044.4821800,44.2572900,79.5350000,180.0000000,180.0000000); //amt 8557(158)
	CreateDynamicObject(8557,2143.2441400,-3044.1098600,41.7279900,83.7210000,180.0000000,180.0000000); //amt 8557(159)
	CreateDynamicObject(8557,2142.0813000,-3043.9233400,39.1782700,87.9070000,180.0000000,180.0000000); //amt 8557(160)
	CreateDynamicObject(8557,2140.9187000,-3043.9233400,36.6217300,87.9070000,0.0000000,0.0000000); //amt 8557(161)
	CreateDynamicObject(8557,2139.7558600,-3044.1098600,34.0720100,83.7210000,0.0000000,0.0000000); //amt 8557(162)
	CreateDynamicObject(8557,2138.5930200,-3044.4821800,31.5427100,79.5350000,0.0000000,0.0000000); //amt 8557(163)
	CreateDynamicObject(8557,2137.4301800,-3045.0380900,29.0473300,75.3490000,0.0000000,0.0000000); //amt 8557(164)
	CreateDynamicObject(8557,2136.2673300,-3045.7744100,26.5991900,71.1630000,0.0000000,0.0000000); //amt 8557(165)
	CreateDynamicObject(8557,2135.1047400,-3046.6877400,24.2113300,66.9770000,0.0000000,0.0000000); //amt 8557(166)
	CreateDynamicObject(8557,2133.9418900,-3047.7729500,21.8965200,62.7910000,0.0000000,0.0000000); //amt 8557(167)
	CreateDynamicObject(8557,2132.7790500,-3049.0241700,19.6670900,58.6050000,0.0000000,0.0000000); //amt 8557(168)
	CreateDynamicObject(8557,2131.6162100,-3050.4348100,17.5349400,54.4190000,0.0000000,0.0000000); //amt 8557(169)
	CreateDynamicObject(8557,2130.4536100,-3051.9973100,15.5114400,50.2330000,0.0000000,0.0000000); //amt 8557(170)
	CreateDynamicObject(8557,2129.2907700,-3053.7033700,13.6074000,46.0470000,0.0000000,0.0000000); //amt 8557(171)
	CreateDynamicObject(8557,2128.1279300,-3055.5437000,11.8329700,41.8600000,0.0000000,0.0000000); //amt 8557(172)
	CreateDynamicObject(8557,2126.9650900,-3057.5087900,10.1976200,37.6740000,0.0000000,0.0000000); //amt 8557(173)
	CreateDynamicObject(8557,2125.8022500,-3059.5881300,8.7100800,33.4880000,0.0000000,0.0000000); //amt 8557(174)
	CreateDynamicObject(8557,2124.6396500,-3061.7702600,7.3782700,29.3020000,0.0000000,0.0000000); //amt 8557(175)
	CreateDynamicObject(8557,2123.4768100,-3064.0439500,6.2093100,25.1160000,0.0000000,0.0000000); //amt 8557(176)
	CreateDynamicObject(8557,2122.3139600,-3066.3967300,5.2094400,20.9300000,0.0000000,0.0000000); //amt 8557(177)
	CreateDynamicObject(8557,2121.1511200,-3068.8164100,4.3839800,16.7440000,0.0000000,0.0000000); //amt 8557(178)
	CreateDynamicObject(8557,2119.9882800,-3071.2897900,3.7373400,12.5580000,0.0000000,0.0000000); //amt 8557(179)
	CreateDynamicObject(8557,2118.8256800,-3073.8039600,3.2729800,8.3720000,0.0000000,0.0000000); //amt 8557(180)
	CreateDynamicObject(8557,2117.6628400,-3076.3449700,2.9933700,4.1860000,0.0000000,0.0000000); //amt 8557(181)
	CreateDynamicObject(8557,2116.5000000,-3078.8999000,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(182)
	CreateDynamicObject(8557,2115.3000500,-3084.0000000,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(182)
	CreateDynamicObject(8557,2113.8000500,-3089.1001000,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(182)
	CreateDynamicObject(8557,2112.3000500,-3094.2002000,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(185)
	CreateDynamicObject(8557,2110.8000500,-3099.3002900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(186)
	CreateDynamicObject(8557,2109.3000500,-3104.4003900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(187)
	CreateDynamicObject(8557,2107.8000500,-3109.5004900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(188)
	CreateDynamicObject(8557,2106.3000500,-3114.6005900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(189)
	CreateDynamicObject(8557,2104.8000500,-3119.7006800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(190)
	CreateDynamicObject(8557,2103.3000500,-3124.8007800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(191)
	CreateDynamicObject(8557,2101.8000500,-3129.9008800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(192)
	CreateDynamicObject(8557,2100.3000500,-3135.0009800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(193)
	CreateDynamicObject(8557,2098.8000500,-3140.1010700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(194)
	CreateDynamicObject(8557,2097.3000500,-3145.2011700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(195)
	CreateDynamicObject(8557,2095.8000500,-3150.3012700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(196)
	CreateDynamicObject(8557,2094.3000500,-3155.4013700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(197)
	CreateDynamicObject(8557,2092.8000500,-3160.5014600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(198)
	CreateDynamicObject(8557,2091.3000500,-3165.6015600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(199)
	CreateDynamicObject(8557,2089.8000500,-3170.7016600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(200)
	CreateDynamicObject(8557,2088.3000500,-3175.8017600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(201)
	CreateDynamicObject(8557,2086.8000500,-3180.9018600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(202)
	CreateDynamicObject(8557,2085.3000500,-3186.0019500,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(203)
	CreateDynamicObject(8557,2083.8000500,-3191.1020500,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(204)
	CreateDynamicObject(8557,2082.3000500,-3196.2021500,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(205)
	CreateDynamicObject(8557,2080.8000500,-3201.3022500,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(206)
	CreateDynamicObject(8557,2079.3000500,-3206.4023400,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(207)
	CreateDynamicObject(8557,2077.8000500,-3211.5024400,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(208)
	CreateDynamicObject(8557,2076.3000500,-3216.6025400,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(209)
	CreateDynamicObject(8557,2074.8000500,-3221.7026400,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(210)
	CreateDynamicObject(8557,2073.3000500,-3226.8027300,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(211)
	CreateDynamicObject(8557,2071.8000500,-3231.9028300,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(212)
	CreateDynamicObject(8557,2070.3000500,-3237.0029300,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(213)
	CreateDynamicObject(8557,2068.8000500,-3242.1030300,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(214)
	CreateDynamicObject(8557,2067.3000500,-3247.2031200,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(215)
	CreateDynamicObject(8557,2065.8000500,-3252.3032200,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(216)
	CreateDynamicObject(8557,2064.3000500,-3257.4033200,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(217)
	CreateDynamicObject(8557,2062.8000500,-3262.5034200,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(218)
	CreateDynamicObject(8557,2061.3000500,-3267.6035200,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(219)
	CreateDynamicObject(8557,2070.0000000,-3272.6992200,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(219)
	CreateDynamicObject(8557,2045.0000000,-3278.0000000,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(219)
	CreateDynamicObject(8557,2060.0000000,-3283.3007800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(228)
	CreateDynamicObject(8557,2050.0000000,-3293.9023400,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(230)
	CreateDynamicObject(8557,2040.0000000,-3304.5039100,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(232)
	CreateDynamicObject(8557,2030.0000000,-3315.1054700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(234)
	CreateDynamicObject(8557,2020.0000000,-3325.7070300,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(236)
	CreateDynamicObject(8557,2010.0000000,-3336.3085900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(238)
	CreateDynamicObject(8557,2000.0000000,-3346.9101600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(240)
	CreateDynamicObject(8557,1990.0000000,-3357.5117200,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(242)
	CreateDynamicObject(8557,1980.0000000,-3368.1132800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(244)
	CreateDynamicObject(8557,1970.0000000,-3378.7148400,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(246)
	CreateDynamicObject(8557,1960.0000000,-3389.3164100,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(248)
	CreateDynamicObject(8557,1950.0000000,-3399.9179700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(250)
	CreateDynamicObject(8557,1940.0000000,-3410.5195300,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(252)
	CreateDynamicObject(8557,1930.0000000,-3421.1210900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(254)
	CreateDynamicObject(8557,1920.0000000,-3431.7226600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(256)
	CreateDynamicObject(8557,1910.0000000,-3442.3242200,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(258)
	CreateDynamicObject(8557,1900.0000000,-3452.9257800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(260)
	CreateDynamicObject(8557,1890.0000000,-3463.5273400,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(262)
	CreateDynamicObject(8557,2035.0000000,-3288.6001000,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(264)
	CreateDynamicObject(8557,2025.0000000,-3299.2002000,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(266)
	CreateDynamicObject(8557,2015.0000000,-3309.8002900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(268)
	CreateDynamicObject(8557,2005.0000000,-3320.4003900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(270)
	CreateDynamicObject(8557,1995.0000000,-3331.0004900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(272)
	CreateDynamicObject(8557,1985.0000000,-3341.6005900,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(274)
	CreateDynamicObject(8557,1975.0000000,-3352.2006800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(276)
	CreateDynamicObject(8557,1965.0000000,-3362.8007800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(278)
	CreateDynamicObject(8557,1955.0000000,-3373.4008800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(280)
	CreateDynamicObject(8557,1945.0000000,-3384.0009800,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(282)
	CreateDynamicObject(8557,1935.0000000,-3394.6010700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(284)
	CreateDynamicObject(8557,1925.0000000,-3405.2011700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(286)
	CreateDynamicObject(8557,1915.0000000,-3415.8012700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(288)
	CreateDynamicObject(8557,1905.0000000,-3426.4013700,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(290)
	CreateDynamicObject(8557,1895.0000000,-3437.0014600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(292)
	CreateDynamicObject(8557,1885.0000000,-3447.6015600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(294)
	CreateDynamicObject(8557,1875.0000000,-3458.2016600,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(296)
	CreateDynamicObject(8557,1885.7376700,-3473.7548800,3.9572200,348.1970000,0.0000000,0.0000000); //amt 8557(299)
	CreateDynamicObject(8557,1881.4754600,-3483.5500500,7.0841600,336.3930000,0.0000000,0.0000000); //amt 8557(301)
	CreateDynamicObject(8557,1877.2131300,-3492.4982900,12.1485800,324.5900000,0.0000000,0.0000000); //amt 8557(303)
	CreateDynamicObject(8557,1872.9508100,-3500.2216800,18.9363300,312.7870000,0.0000000,0.0000000); //amt 8557(305)
	CreateDynamicObject(8557,1868.6884800,-3506.3930700,27.1603600,300.9840000,0.0000000,0.0000000); //amt 8557(307)
	CreateDynamicObject(8557,1864.4262700,-3510.7517100,36.4728800,289.1800000,0.0000000,0.0000000); //amt 8557(309)
	CreateDynamicObject(8557,1860.1639400,-3513.1135300,46.4800800,277.3770000,0.0000000,0.0000000); //amt 8557(311)
	CreateDynamicObject(8557,1855.9016100,-3513.3781700,56.7587700,274.4260000,180.0000000,180.0000000); //amt 8557(313)
	CreateDynamicObject(8557,1851.6394000,-3511.5349100,66.8742800,286.2290000,180.0000000,180.0000000); //amt 8557(315)
	CreateDynamicObject(8557,1847.3770800,-3507.6613800,76.3988400,298.0330000,180.0000000,180.0000000); //amt 8557(317)
	CreateDynamicObject(8557,1843.1147500,-3501.9213900,84.9296600,309.8360000,180.0000000,180.0000000); //amt 8557(319)
	CreateDynamicObject(8557,1838.8524200,-3494.5578600,92.1060000,321.6390000,180.0000000,180.0000000); //amt 8557(321)
	CreateDynamicObject(8557,1834.5902100,-3485.8820800,97.6243600,333.4430000,180.0000000,180.0000000); //amt 8557(323)
	CreateDynamicObject(8557,1830.3278800,-3476.2609900,101.2513900,345.2460000,180.0000000,180.0000000); //amt 8557(325)
	CreateDynamicObject(8557,1826.0655500,-3466.1013200,102.8337100,357.0490000,180.0000000,180.0000000); //amt 8557(327)
	CreateDynamicObject(8557,1821.8032200,-3455.8327600,102.3044000,8.8520000,180.0000000,180.0000000); //amt 8557(329)
	CreateDynamicObject(8557,1817.5410200,-3445.8896500,99.6858400,20.6560000,180.0000000,180.0000000); //amt 8557(331)
	CreateDynamicObject(8557,1813.2786900,-3436.6926300,95.0887800,32.4590000,180.0000000,180.0000000); //amt 8557(333)
	CreateDynamicObject(8557,1809.0163600,-3428.6301300,88.7076100,44.2620000,180.0000000,180.0000000); //amt 8557(335)
	CreateDynamicObject(8557,1804.7541500,-3422.0434600,80.8121900,56.0660000,180.0000000,180.0000000); //amt 8557(337)
	CreateDynamicObject(8557,1800.4918200,-3417.2111800,71.7364000,67.8690000,180.0000000,180.0000000); //amt 8557(339)
	CreateDynamicObject(8557,1796.2294900,-3414.3374000,61.8640400,79.6720000,180.0000000,180.0000000); //amt 8557(341)
	CreateDynamicObject(8557,1791.9671600,-3413.5439500,51.6126100,88.5250000,0.0000000,0.0000000); //amt 8557(343)
	CreateDynamicObject(8557,1787.7049600,-3414.8640100,41.4156200,76.7210000,0.0000000,0.0000000); //amt 8557(345)
	CreateDynamicObject(8557,1783.4426300,-3418.2421900,31.7042800,64.9180000,0.0000000,0.0000000); //amt 8557(347)
	CreateDynamicObject(8557,1779.1803000,-3423.5354000,22.8892900,53.1150000,0.0000000,0.0000000); //amt 8557(349)
	CreateDynamicObject(8557,1774.9179700,-3430.5197800,15.3434000,41.3110000,0.0000000,0.0000000); //amt 8557(351)
	CreateDynamicObject(8557,1770.6557600,-3438.8999000,9.3857400,29.5080000,0.0000000,0.0000000); //amt 8557(353)
	CreateDynamicObject(8557,1766.3934300,-3448.3215300,5.2682300,17.7050000,0.0000000,0.0000000); //amt 8557(355)
	CreateDynamicObject(8557,1762.1311000,-3458.3862300,3.1650100,5.9020000,0.0000000,0.0000000); //amt 8557(357)
	CreateDynamicObject(8557,1757.8689000,-3468.6684600,3.1650100,354.0980000,0.0000000,0.0000000); //amt 8557(359)
	CreateDynamicObject(8557,1753.6065700,-3478.7331500,5.2682300,342.2950000,0.0000000,0.0000000); //amt 8557(361)
	CreateDynamicObject(8557,1749.3442400,-3488.1547900,9.3857400,330.4920000,0.0000000,0.0000000); //amt 8557(363)
	CreateDynamicObject(8557,1745.0820300,-3496.5349100,15.3434000,318.6890000,0.0000000,0.0000000); //amt 8557(365)
	CreateDynamicObject(8557,1740.8197000,-3503.5192900,22.8892900,306.8850000,0.0000000,0.0000000); //amt 8557(367)
	CreateDynamicObject(8557,1736.5573700,-3508.8125000,31.7042800,295.0820000,0.0000000,0.0000000); //amt 8557(369)
	CreateDynamicObject(8557,1732.2950400,-3512.1906700,41.4156200,283.2790000,0.0000000,0.0000000); //amt 8557(371)
	CreateDynamicObject(8557,1728.0328400,-3513.5107400,51.6126100,271.4750000,0.0000000,0.0000000); //amt 8557(373)
	CreateDynamicObject(8557,1723.7705100,-3512.7172900,61.8640400,280.3280000,180.0000000,180.0000000); //amt 8557(375)
	CreateDynamicObject(8557,1719.5081800,-3509.8435100,71.7364000,292.1310000,180.0000000,180.0000000); //amt 8557(377)
	CreateDynamicObject(8557,1715.2458500,-3505.0112300,80.8121900,303.9340000,180.0000000,180.0000000); //amt 8557(379)
	CreateDynamicObject(8557,1710.9836400,-3498.4245600,88.7076100,315.7380000,180.0000000,180.0000000); //amt 8557(381)
	CreateDynamicObject(8557,1706.7213100,-3490.3620600,95.0887800,327.5410000,180.0000000,180.0000000); //amt 8557(383)
	CreateDynamicObject(8557,1702.4589800,-3481.1650400,99.6858400,339.3440000,180.0000000,180.0000000); //amt 8557(385)
	CreateDynamicObject(8557,1698.1967800,-3471.2219200,102.3044000,351.1480000,180.0000000,180.0000000); //amt 8557(387)
	CreateDynamicObject(8557,1693.9344500,-3460.9533700,102.8337100,2.9510000,180.0000000,180.0000000); //amt 8557(389)
	CreateDynamicObject(8557,1689.6721200,-3450.7937000,101.2513900,14.7540000,180.0000000,180.0000000); //amt 8557(391)
	CreateDynamicObject(8557,1685.4097900,-3441.1726100,97.6243600,26.5570000,180.0000000,180.0000000); //amt 8557(393)
	CreateDynamicObject(8557,1681.1475800,-3432.4968300,92.1060000,38.3610000,180.0000000,180.0000000); //amt 8557(395)
	CreateDynamicObject(8557,1676.8852500,-3425.1333000,84.9296600,50.1640000,180.0000000,180.0000000); //amt 8557(397)
	CreateDynamicObject(8557,1672.6229200,-3419.3933100,76.3988400,61.9670000,180.0000000,180.0000000); //amt 8557(399)
	CreateDynamicObject(8557,1668.3606000,-3415.5197800,66.8742800,73.7710000,180.0000000,180.0000000); //amt 8557(401)
	CreateDynamicObject(8557,1664.0983900,-3413.6765100,56.7587700,85.5740000,180.0000000,180.0000000); //amt 8557(403)
	CreateDynamicObject(8557,1659.8360600,-3413.9411600,46.4800800,82.6230000,0.0000000,0.0000000); //amt 8557(405)
	CreateDynamicObject(8557,1655.5737300,-3416.3029800,36.4728800,70.8200000,0.0000000,0.0000000); //amt 8557(407)
	CreateDynamicObject(8557,1651.3115200,-3420.6616200,27.1603600,59.0160000,0.0000000,0.0000000); //amt 8557(409)
	CreateDynamicObject(8557,1647.0491900,-3426.8330100,18.9363300,47.2130000,0.0000000,0.0000000); //amt 8557(411)
	CreateDynamicObject(8557,1642.7868700,-3434.5564000,12.1485800,35.4100000,0.0000000,0.0000000); //amt 8557(413)
	CreateDynamicObject(8557,1638.5246600,-3443.5046400,7.0841600,23.6070000,0.0000000,0.0000000); //amt 8557(415)
	CreateDynamicObject(8557,1634.2623300,-3453.2998000,3.9572200,11.8030000,0.0000000,0.0000000); //amt 8557(417)
	CreateDynamicObject(8557,1630.0000000,-3463.5273400,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(419)
	CreateDynamicObject(8557,1867.8689000,-3468.6428200,3.1650100,354.0980000,0.0000000,0.0000000); //amt 8557(420)
	CreateDynamicObject(8557,1863.6065700,-3478.7075200,5.2682300,342.2950000,0.0000000,0.0000000); //amt 8557(422)
	CreateDynamicObject(8557,1859.3442400,-3488.1291500,9.3857400,330.4920000,0.0000000,0.0000000); //amt 8557(424)
	CreateDynamicObject(8557,1855.0819100,-3496.5092800,15.3434000,318.6890000,0.0000000,0.0000000); //amt 8557(426)
	CreateDynamicObject(8557,1850.8197000,-3503.4936500,22.8892900,306.8850000,0.0000000,0.0000000); //amt 8557(428)
	CreateDynamicObject(8557,1846.5573700,-3508.7868700,31.7042800,295.0820000,0.0000000,0.0000000); //amt 8557(430)
	CreateDynamicObject(8557,1842.2950400,-3512.1650400,41.4156200,283.2790000,0.0000000,0.0000000); //amt 8557(432)
	CreateDynamicObject(8557,1838.0328400,-3513.4851100,51.6126100,271.4750000,0.0000000,0.0000000); //amt 8557(434)
	CreateDynamicObject(8557,1833.7705100,-3512.6916500,61.8640400,280.3280000,180.0000000,180.0000000); //amt 8557(436)
	CreateDynamicObject(8557,1829.5081800,-3509.8178700,71.7364000,292.1310000,180.0000000,180.0000000); //amt 8557(438)
	CreateDynamicObject(8557,1825.2458500,-3504.9856000,80.8121900,303.9340000,180.0000000,180.0000000); //amt 8557(440)
	CreateDynamicObject(8557,1820.9836400,-3498.3989300,88.7076100,315.7380000,180.0000000,180.0000000); //amt 8557(442)
	CreateDynamicObject(8557,1816.7213100,-3490.3364300,95.0887800,327.5410000,180.0000000,180.0000000); //amt 8557(444)
	CreateDynamicObject(8557,1812.4589800,-3481.1394000,99.6858400,339.3440000,180.0000000,180.0000000); //amt 8557(446)
	CreateDynamicObject(8557,1808.1967800,-3471.1962900,102.3044000,351.1480000,180.0000000,180.0000000); //amt 8557(448)
	CreateDynamicObject(8557,1803.9344500,-3460.9277300,102.8337100,2.9510000,180.0000000,180.0000000); //amt 8557(450)
	CreateDynamicObject(8557,1799.6721200,-3450.7680700,101.2513900,14.7540000,180.0000000,180.0000000); //amt 8557(452)
	CreateDynamicObject(8557,1795.4097900,-3441.1469700,97.6243600,26.5570000,180.0000000,180.0000000); //amt 8557(454)
	CreateDynamicObject(8557,1791.1475800,-3432.4711900,92.1060000,38.3610000,180.0000000,180.0000000); //amt 8557(456)
	CreateDynamicObject(8557,1786.8852500,-3425.1076700,84.9296600,50.1640000,180.0000000,180.0000000); //amt 8557(458)
	CreateDynamicObject(8557,1782.6229200,-3419.3676800,76.3988400,61.9670000,180.0000000,180.0000000); //amt 8557(460)
	CreateDynamicObject(8557,1778.3606000,-3415.4941400,66.8742800,73.7710000,180.0000000,180.0000000); //amt 8557(462)
	CreateDynamicObject(8557,1774.0983900,-3413.6508800,56.7587700,85.5740000,180.0000000,180.0000000); //amt 8557(464)
	CreateDynamicObject(8557,1769.8360600,-3413.9155300,46.4800800,82.6230000,0.0000000,0.0000000); //amt 8557(466)
	CreateDynamicObject(8557,1765.5737300,-3416.2773400,36.4728800,70.8200000,0.0000000,0.0000000); //amt 8557(468)
	CreateDynamicObject(8557,1761.3115200,-3420.6359900,27.1603600,59.0160000,0.0000000,0.0000000); //amt 8557(470)
	CreateDynamicObject(8557,1757.0491900,-3426.8073700,18.9363300,47.2130000,0.0000000,0.0000000); //amt 8557(472)
	CreateDynamicObject(8557,1752.7868700,-3434.5307600,12.1485800,35.4100000,0.0000000,0.0000000); //amt 8557(474)
	CreateDynamicObject(8557,1748.5245400,-3443.4790000,7.0841600,23.6070000,0.0000000,0.0000000); //amt 8557(476)
	CreateDynamicObject(8557,1744.2623300,-3453.2741700,3.9572200,11.8030000,0.0000000,0.0000000); //amt 8557(478)
	CreateDynamicObject(8557,1740.0000000,-3463.5017100,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(480)
	CreateDynamicObject(8557,1735.7376700,-3473.7292500,3.9572200,348.1970000,0.0000000,0.0000000); //amt 8557(482)
	CreateDynamicObject(8557,1731.4753400,-3483.5244100,7.0841600,336.3930000,0.0000000,0.0000000); //amt 8557(484)
	CreateDynamicObject(8557,1727.2131300,-3492.4726600,12.1485800,324.5900000,0.0000000,0.0000000); //amt 8557(486)
	CreateDynamicObject(8557,1722.9508100,-3500.1960400,18.9363300,312.7870000,0.0000000,0.0000000); //amt 8557(488)
	CreateDynamicObject(8557,1718.6884800,-3506.3674300,27.1603600,300.9840000,0.0000000,0.0000000); //amt 8557(490)
	CreateDynamicObject(8557,1714.4262700,-3510.7260700,36.4728800,289.1800000,0.0000000,0.0000000); //amt 8557(492)
	CreateDynamicObject(8557,1710.1639400,-3513.0878900,46.4800800,277.3770000,0.0000000,0.0000000); //amt 8557(494)
	CreateDynamicObject(8557,1705.9016100,-3513.3525400,56.7587700,274.4260000,180.0000000,180.0000000); //amt 8557(496)
	CreateDynamicObject(8557,1701.6394000,-3511.5092800,66.8742800,286.2290000,180.0000000,180.0000000); //amt 8557(498)
	CreateDynamicObject(8557,1697.3770800,-3507.6357400,76.3988400,298.0330000,180.0000000,180.0000000); //amt 8557(500)
	CreateDynamicObject(8557,1693.1147500,-3501.8957500,84.9296600,309.8360000,180.0000000,180.0000000); //amt 8557(502)
	CreateDynamicObject(8557,1688.8524200,-3494.5322300,92.1060000,321.6390000,180.0000000,180.0000000); //amt 8557(504)
	CreateDynamicObject(8557,1684.5902100,-3485.8564500,97.6243600,333.4430000,180.0000000,180.0000000); //amt 8557(506)
	CreateDynamicObject(8557,1680.3278800,-3476.2353500,101.2513900,345.2460000,180.0000000,180.0000000); //amt 8557(508)
	CreateDynamicObject(8557,1676.0655500,-3466.0756800,102.8337100,357.0490000,180.0000000,180.0000000); //amt 8557(510)
	CreateDynamicObject(8557,1671.8032200,-3455.8071300,102.3044000,8.8520000,180.0000000,180.0000000); //amt 8557(512)
	CreateDynamicObject(8557,1667.5410200,-3445.8640100,99.6858400,20.6560000,180.0000000,180.0000000); //amt 8557(514)
	CreateDynamicObject(8557,1663.2786900,-3436.6669900,95.0887800,32.4590000,180.0000000,180.0000000); //amt 8557(516)
	CreateDynamicObject(8557,1659.0163600,-3428.6044900,88.7076100,44.2620000,180.0000000,180.0000000); //amt 8557(518)
	CreateDynamicObject(8557,1654.7541500,-3422.0178200,80.8121900,56.0660000,180.0000000,180.0000000); //amt 8557(520)
	CreateDynamicObject(8557,1650.4918200,-3417.1855500,71.7364000,67.8690000,180.0000000,180.0000000); //amt 8557(522)
	CreateDynamicObject(8557,1646.2294900,-3414.3117700,61.8640400,79.6720000,180.0000000,180.0000000); //amt 8557(524)
	CreateDynamicObject(8557,1641.9671600,-3413.5183100,51.6126100,88.5250000,0.0000000,0.0000000); //amt 8557(526)
	CreateDynamicObject(8557,1637.7049600,-3414.8383800,41.4156200,76.7210000,0.0000000,0.0000000); //amt 8557(528)
	CreateDynamicObject(8557,1633.4426300,-3418.2165500,31.7042800,64.9180000,0.0000000,0.0000000); //amt 8557(530)
	CreateDynamicObject(8557,1629.1803000,-3423.5097700,22.8892900,53.1150000,0.0000000,0.0000000); //amt 8557(532)
	CreateDynamicObject(8557,1624.9179700,-3430.4941400,15.3434000,41.3110000,0.0000000,0.0000000); //amt 8557(534)
	CreateDynamicObject(8557,1620.6557600,-3438.8742700,9.3857400,29.5080000,0.0000000,0.0000000); //amt 8557(536)
	CreateDynamicObject(8557,1616.3934300,-3448.2959000,5.2682300,17.7050000,0.0000000,0.0000000); //amt 8557(538)
	CreateDynamicObject(8557,1612.1311000,-3458.3606000,3.1650100,5.9020000,0.0000000,0.0000000); //amt 8557(540)
	CreateDynamicObject(8557,1608.0000000,-3468.5996100,2.9000000,0.0000000,0.0000000,0.0000000); //amt 8557(419)
	CreateDynamicObject(8557,1630.0000000,-3473.6001000,2.9000000,0.0000000,0.0000000,1.0000000); //amt 8557(419)
	CreateDynamicObject(8557,1630.1025400,-3479.4770500,4.8098300,324.0000000,0.0000000,1.0000000); //amt 8557(547)
	CreateDynamicObject(8557,1598.5539600,-3476.8896500,3.3894300,342.0000000,0.0000000,1.0000000); //amt 8557(552)
	CreateDynamicObject(8172,1518.4000200,-3637.3000500,7.1000000,0.0000000,0.0000000,354.0000000); //object(vgssairportland07) (1)
	CreateDynamicObject(8172,1558.0000000,-3641.6999500,7.1000000,0.0000000,0.0000000,353.9960000); //object(vgssairportland07) (2)
	CreateDynamicObject(8172,1597.6999500,-3645.6999500,7.1000000,0.0000000,0.0000000,353.9960000); //object(vgssairportland07) (4)
	CreateDynamicObject(8172,1540.4000200,-3802.1001000,7.1000000,0.0000000,0.0000000,353.9960000); //object(vgssairportland07) (5)
	CreateDynamicObject(8078,1519.9000200,-3903.1001000,11.1000000,0.0000000,0.0000000,264.2500000); //object(vgsfrates07) (1)
	CreateDynamicObject(8172,1523.5999800,-3962.6001000,7.1000000,0.0000000,0.0000000,353.9960000); //object(vgssairportland07) (6)
	CreateDynamicObject(8078,1535.3000500,-3946.8999000,11.1000000,0.0000000,0.0000000,84.4960000); //object(vgsfrates07) (2)
	CreateDynamicObject(8078,1512.0999800,-3975.8000500,11.1000000,0.0000000,0.0000000,264.2490000); //object(vgsfrates07) (3)
	CreateDynamicObject(8172,1506.6999500,-4123.0000000,7.1000000,0.0000000,0.0000000,353.9960000); //object(vgssairportland07) (7)
	CreateDynamicObject(8078,1527.6999500,-4019.0000000,11.1000000,0.0000000,0.0000000,84.4960000); //object(vgsfrates07) (4)
	CreateDynamicObject(8078,1502.4000200,-4069.8000500,11.1000000,0.0000000,0.0000000,264.2490000); //object(vgsfrates07) (6)
	CreateDynamicObject(8172,1489.9000200,-4283.2998000,7.1000000,0.0000000,0.0000000,353.9960000); //object(vgssairportland07) (8)
	CreateDynamicObject(7515,1514.6999500,-4143.8999000,13.1000000,0.0000000,0.0000000,84.5000000); //object(vegasnfrates1) (1)
	CreateDynamicObject(7515,1509.4000200,-4198.7002000,13.1000000,0.0000000,0.0000000,84.4960000); //object(vegasnfrates1) (2)
	CreateDynamicObject(8172,1473.1001000,-4443.5996100,7.1000000,0.0000000,0.0000000,354.0000000); //amt 8172(9)
	CreateDynamicObject(8172,1456.3001700,-4603.8994100,7.1000000,0.0000000,0.0000000,354.0000000); //amt 8172(10)
	CreateDynamicObject(8172,1411.5999800,-4737.8999000,7.1000000,0.0000000,0.0000000,330.0000000); //amt 8172(11)
	CreateDynamicObject(8172,1320.4000200,-4859.2002000,7.1000000,0.0000000,0.0000000,316.0000000); //amt 8172(12)
	CreateDynamicObject(5309,1478.0000000,-4259.0000000,12.0000000,0.0000000,0.0000000,265.0000000); //object(las2lnew3_las2) (1)
	CreateDynamicObject(7515,1498.1999500,-4306.0000000,13.1000000,0.0000000,0.0000000,84.4960000); //object(vegasnfrates1) (3)
	CreateDynamicObject(5309,1471.5000000,-4333.2998000,12.0000000,0.0000000,0.0000000,264.9960000); //object(las2lnew3_las2) (2)
	CreateDynamicObject(5309,1465.0000000,-4407.6001000,12.0000000,0.0000000,0.0000000,264.9960000); //object(las2lnew3_las2) (3)
	CreateDynamicObject(7515,1492.9000200,-4360.7002000,13.1000000,0.0000000,0.0000000,84.4960000); //object(vegasnfrates1) (4)
	CreateDynamicObject(7515,1479.5999800,-4487.3999000,13.1000000,0.0000000,0.0000000,84.4960000); //object(vegasnfrates1) (5)
	CreateDynamicObject(7515,1457.5000000,-4471.5000000,13.1000000,0.0000000,0.0000000,83.0000000); //object(vegasnfrates1) (6)
	CreateDynamicObject(7515,1473.9000200,-4539.6001000,13.1000000,0.0000000,0.0000000,82.9960000); //object(vegasnfrates1) (7)
	CreateDynamicObject(7515,1451.3000500,-4526.0000000,13.1000000,0.0000000,0.0000000,84.4960000); //object(vegasnfrates1) (8)
	CreateDynamicObject(8172,1198.5999800,-4911.0000000,7.1000000,0.0000000,0.0000000,90.0000000); //amt 8172(12)
	CreateDynamicObject(8172,1079.9000200,-4911.2998000,20.4000000,20.0000000,0.0000000,90.0000000); //amt 8172(12)
	CreateDynamicObject(8172,956.0000000,-4911.2998000,77.1000000,30.0000000,0.0000000,90.0000000); //amt 8172(12)
	CreateDynamicObject(8172,828.0999800,-4911.2998000,166.8000000,40.0000000,0.0000000,90.0000000); //amt 8172(12)
	CreateDynamicObject(8172,704.7000100,-4911.2998000,270.2000100,39.9960000,0.0000000,90.0000000); //amt 8172(12)
	CreateDynamicObject(8172,562.0999800,-4911.3999000,322.1000100,0.0000000,0.0000000,90.0000000); //amt 8172(12)
	CreateDynamicObject(8557,478.8999900,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (26)
	CreateDynamicObject(8557,473.7999900,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (27)
	CreateDynamicObject(8557,468.6999800,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(559)
	CreateDynamicObject(8557,463.5999800,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(560)
	CreateDynamicObject(8557,458.4999700,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(561)
	CreateDynamicObject(8557,453.3999600,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(562)
	CreateDynamicObject(8557,448.2999600,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(563)
	CreateDynamicObject(8557,443.1999500,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(564)
	CreateDynamicObject(8557,438.0999500,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(565)
	CreateDynamicObject(8557,432.9999400,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(566)
	CreateDynamicObject(8557,427.8999300,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(567)
	CreateDynamicObject(8557,422.7999300,-4911.2998000,320.3999900,0.0000000,0.0000000,90.0000000); //amt 8557(568)
	CreateDynamicObject(8557,418.1069000,-4909.0498000,320.7693500,9.0000000,0.0000000,90.0000000); //amt 8557(569)
	CreateDynamicObject(8557,413.5294200,-4906.7998000,321.8682900,18.0000000,0.0000000,90.0000000); //amt 8557(570)
	CreateDynamicObject(8557,409.1802100,-4904.5498000,323.6698000,27.0000000,0.0000000,90.0000000); //amt 8557(571)
	CreateDynamicObject(8557,405.1663800,-4902.2998000,326.1294900,36.0000000,0.0000000,90.0000000); //amt 8557(572)
	CreateDynamicObject(8557,401.5867300,-4900.0498000,329.1868000,45.0000000,0.0000000,90.0000000); //amt 8557(573)
	CreateDynamicObject(8557,398.5294200,-4897.7998000,332.7664500,54.0000000,0.0000000,90.0000000); //amt 8557(574)
	CreateDynamicObject(8557,396.0697300,-4895.5498000,336.7802700,63.0000000,0.0000000,90.0000000); //amt 8557(575)
	CreateDynamicObject(8557,394.2682200,-4893.2998000,341.1294900,72.0000000,0.0000000,90.0000000); //amt 8557(576)
	CreateDynamicObject(8557,393.1692800,-4891.0498000,345.7069700,81.0000000,0.0000000,90.0000000); //amt 8557(577)
	CreateDynamicObject(8557,392.7999900,-4891.0000000,349.7999900,0.0000000,90.0000000,0.0000000); //amt 8557(577)
	CreateDynamicObject(8557,393.0412600,-4886.3964800,350.9666400,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (29)
	CreateDynamicObject(8557,393.7623600,-4881.8437500,352.1333300,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (30)
	CreateDynamicObject(8557,394.9554700,-4877.3906200,353.2999900,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (31)
	CreateDynamicObject(8557,396.6074800,-4873.0874000,354.4666400,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (32)
	CreateDynamicObject(8557,398.7002600,-4868.9799800,355.6333300,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (33)
	CreateDynamicObject(8557,401.2109400,-4865.1137700,356.7999900,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (34)
	CreateDynamicObject(8557,404.1119700,-4861.5312500,357.9666400,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (35)
	CreateDynamicObject(8557,407.3715800,-4858.2714800,359.1333300,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (36)
	CreateDynamicObject(8557,410.9540400,-4855.3706100,360.2999900,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (37)
	CreateDynamicObject(8557,414.8201300,-4852.8598600,361.4666400,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (38)
	CreateDynamicObject(8557,418.9274900,-4850.7670900,362.6333300,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (39)
	CreateDynamicObject(8557,423.2310800,-4849.1152300,363.7999900,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (40)
	CreateDynamicObject(8557,427.6838100,-4847.9218700,364.9666400,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (41)
	CreateDynamicObject(8557,432.2368200,-4847.2011700,366.1333300,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (42)
	CreateDynamicObject(8557,436.8403000,-4846.9594700,367.2999900,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (43)
	CreateDynamicObject(8557,441.4437600,-4847.2011700,368.4666400,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (44)
	CreateDynamicObject(8557,445.9968000,-4847.9218700,369.6333300,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (45)
	CreateDynamicObject(8557,450.4494900,-4849.1152300,370.7999900,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (46)
	CreateDynamicObject(8557,454.7530800,-4850.7670900,371.9666400,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (47)
	CreateDynamicObject(8557,458.8604400,-4852.8598600,373.1333300,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (48)
	CreateDynamicObject(8557,462.7265300,-4855.3706100,374.2999900,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (49)
	CreateDynamicObject(8557,466.3089900,-4858.2714800,375.4666400,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (50)
	CreateDynamicObject(8557,469.5686000,-4861.5312500,376.6333300,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (51)
	CreateDynamicObject(8557,472.4696400,-4865.1137700,377.7999900,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (52)
	CreateDynamicObject(8557,474.9803200,-4868.9799800,378.9666400,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (53)
	CreateDynamicObject(8557,477.0730900,-4873.0874000,380.1333300,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (54)
	CreateDynamicObject(8557,478.7251000,-4877.3906200,381.2999900,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (55)
	CreateDynamicObject(8557,479.9182100,-4881.8437500,382.4666400,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (56)
	CreateDynamicObject(8557,480.6393400,-4886.3964800,383.6333300,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (57)
	CreateDynamicObject(8557,480.8805800,-4891.0000000,384.7999900,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (58)
	CreateDynamicObject(8557,480.6393400,-4895.6035200,385.9666400,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (59)
	CreateDynamicObject(8557,479.9182100,-4900.1562500,387.1333300,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (60)
	CreateDynamicObject(8557,478.7251000,-4904.6093700,388.2999900,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (61)
	CreateDynamicObject(8557,477.0730900,-4908.9126000,389.4666400,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (62)
	CreateDynamicObject(8557,474.9803200,-4913.0200200,390.6333300,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (63)
	CreateDynamicObject(8557,472.4696400,-4916.8862300,391.7999900,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (64)
	CreateDynamicObject(8557,469.5686000,-4920.4687500,392.9666400,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (65)
	CreateDynamicObject(8557,466.3089900,-4923.7285200,394.1333300,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (66)
	CreateDynamicObject(8557,462.7265300,-4926.6293900,395.2999900,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (67)
	CreateDynamicObject(8557,458.8604400,-4929.1401400,396.4666400,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (68)
	CreateDynamicObject(8557,454.7530800,-4931.2329100,397.6333300,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (69)
	CreateDynamicObject(8557,450.4494900,-4932.8847700,398.7999900,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (70)
	CreateDynamicObject(8557,445.9968000,-4934.0781200,399.9666400,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (71)
	CreateDynamicObject(8557,441.4437600,-4934.7988300,401.1333300,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (72)
	CreateDynamicObject(8557,436.8403000,-4935.0405300,402.2999900,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (73)
	CreateDynamicObject(8557,432.2368200,-4934.7988300,403.4666400,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (74)
	CreateDynamicObject(8557,427.6838100,-4934.0781200,404.6333300,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (75)
	CreateDynamicObject(8557,423.2310800,-4932.8847700,405.7999900,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (76)
	CreateDynamicObject(8557,418.9274900,-4931.2329100,406.9666400,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (77)
	CreateDynamicObject(8557,414.8201300,-4929.1401400,408.1333300,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (78)
	CreateDynamicObject(8557,410.9540400,-4926.6293900,409.2999900,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (79)
	CreateDynamicObject(8557,407.3715800,-4923.7285200,410.4666400,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (80)
	CreateDynamicObject(8557,404.1119700,-4920.4687500,411.6333300,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (81)
	CreateDynamicObject(8557,401.2109400,-4916.8862300,412.7999900,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (82)
	CreateDynamicObject(8557,398.7002600,-4913.0200200,413.9666400,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (83)
	CreateDynamicObject(8557,396.6074800,-4908.9126000,415.1333300,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (84)
	CreateDynamicObject(8557,394.9554700,-4904.6093700,416.2999900,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (85)
	CreateDynamicObject(8557,393.7623600,-4900.1562500,417.4666400,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (86)
	CreateDynamicObject(8557,393.0412600,-4895.6035200,418.6333300,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (87)
	CreateDynamicObject(8557,392.7999900,-4891.0000000,419.7999900,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (88)
	CreateDynamicObject(8557,393.0412600,-4886.3964800,420.9666400,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (89)
	CreateDynamicObject(8557,393.7623600,-4881.8437500,422.1333300,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (90)
	CreateDynamicObject(8557,394.9554700,-4877.3906200,423.2999900,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (91)
	CreateDynamicObject(8557,396.6074800,-4873.0874000,424.4666400,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (92)
	CreateDynamicObject(8557,398.7002600,-4868.9799800,425.6333300,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (93)
	CreateDynamicObject(8557,401.2109400,-4865.1137700,426.7999900,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (94)
	CreateDynamicObject(8557,404.1119700,-4861.5312500,427.9666400,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (95)
	CreateDynamicObject(8557,407.3715800,-4858.2714800,429.1333300,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (96)
	CreateDynamicObject(8557,410.9540400,-4855.3706100,430.2999900,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (97)
	CreateDynamicObject(8557,414.8201300,-4852.8598600,431.4666400,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (98)
	CreateDynamicObject(8557,418.9274900,-4850.7670900,432.6333300,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (99)
	CreateDynamicObject(8557,423.2310800,-4849.1152300,433.7999900,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (100)
	CreateDynamicObject(8557,427.6838100,-4847.9218700,434.9666400,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (101)
	CreateDynamicObject(8557,432.2368200,-4847.2011700,436.1333300,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (102)
	CreateDynamicObject(8557,436.8403000,-4846.9594700,437.2999900,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (103)
	CreateDynamicObject(8557,441.4437600,-4847.2011700,438.4666400,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (104)
	CreateDynamicObject(8557,445.9968000,-4847.9218700,439.6333300,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (105)
	CreateDynamicObject(8557,450.4494900,-4849.1152300,440.7999900,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (106)
	CreateDynamicObject(8557,454.7530800,-4850.7670900,441.9666400,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (107)
	CreateDynamicObject(8557,458.8604400,-4852.8598600,443.1333300,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (108)
	CreateDynamicObject(8557,462.7265300,-4855.3706100,444.2999900,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (109)
	CreateDynamicObject(8557,466.3089900,-4858.2714800,445.4666400,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (110)
	CreateDynamicObject(8557,469.5686000,-4861.5312500,446.6333300,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (111)
	CreateDynamicObject(8557,472.4696400,-4865.1137700,447.7999900,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (112)
	CreateDynamicObject(8557,474.9803200,-4868.9799800,448.9666400,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (113)
	CreateDynamicObject(8557,477.0730900,-4873.0874000,450.1333300,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (114)
	CreateDynamicObject(8557,478.7251000,-4877.3906200,451.2999900,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (115)
	CreateDynamicObject(8557,479.9182100,-4881.8437500,452.4666400,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (116)
	CreateDynamicObject(8557,480.6393400,-4886.3964800,453.6333300,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (117)
	CreateDynamicObject(8557,480.8805800,-4891.0000000,454.7999900,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (118)
	CreateDynamicObject(8557,480.6393400,-4895.6035200,455.9666400,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (119)
	CreateDynamicObject(8557,479.9182100,-4900.1562500,457.1333300,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (120)
	CreateDynamicObject(8557,478.7251000,-4904.6093700,458.2999900,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (121)
	CreateDynamicObject(8557,477.0730900,-4908.9126000,459.4666400,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (122)
	CreateDynamicObject(8557,474.9803200,-4913.0200200,460.6333300,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (123)
	CreateDynamicObject(8557,472.4696400,-4916.8862300,461.7999900,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (124)
	CreateDynamicObject(8557,469.5686000,-4920.4687500,462.9666400,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (125)
	CreateDynamicObject(8557,466.3089900,-4923.7285200,464.1333300,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (126)
	CreateDynamicObject(8557,462.7265300,-4926.6293900,465.2999900,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (127)
	CreateDynamicObject(8557,458.8604400,-4929.1401400,466.4666400,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (128)
	CreateDynamicObject(8557,454.7530800,-4931.2329100,467.6333300,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (129)
	CreateDynamicObject(8557,450.4494900,-4932.8847700,468.7999900,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (130)
	CreateDynamicObject(8557,445.9968000,-4934.0781200,469.9666400,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (131)
	CreateDynamicObject(8557,441.4437600,-4934.7988300,471.1333300,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (132)
	CreateDynamicObject(8557,436.8403000,-4935.0405300,472.2999900,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (133)
	CreateDynamicObject(8557,432.2368200,-4934.7988300,473.4666400,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (134)
	CreateDynamicObject(8557,427.6838100,-4934.0781200,474.6333300,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (135)
	CreateDynamicObject(8557,423.2310800,-4932.8847700,475.7999900,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (136)
	CreateDynamicObject(8557,418.9274900,-4931.2329100,476.9666400,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (137)
	CreateDynamicObject(8557,414.8201300,-4929.1401400,478.1333300,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (138)
	CreateDynamicObject(8557,410.9540400,-4926.6293900,479.2999900,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (139)
	CreateDynamicObject(8557,407.3715800,-4923.7285200,480.4666400,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (140)
	CreateDynamicObject(8557,404.1119700,-4920.4687500,481.6333300,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (141)
	CreateDynamicObject(8557,401.2109400,-4916.8862300,482.7999900,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (142)
	CreateDynamicObject(8557,398.7002600,-4913.0200200,483.9666400,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (143)
	CreateDynamicObject(8557,396.6074800,-4908.9126000,485.1333300,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (144)
	CreateDynamicObject(8557,394.9554700,-4904.6093700,486.2999900,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (145)
	CreateDynamicObject(8557,393.7623600,-4900.1562500,487.4666400,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (146)
	CreateDynamicObject(8557,393.0412600,-4895.6035200,488.6333300,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (147)
	CreateDynamicObject(8557,392.7999900,-4891.0000000,489.7999900,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (148)
	CreateDynamicObject(8557,393.0412600,-4886.3964800,490.9666400,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (149)
	CreateDynamicObject(8557,393.7623600,-4881.8437500,492.1333300,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (150)
	CreateDynamicObject(8557,394.9554700,-4877.3906200,493.2999900,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (151)
	CreateDynamicObject(8557,396.6074800,-4873.0874000,494.4666400,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (152)
	CreateDynamicObject(8557,398.7002600,-4868.9799800,495.6333300,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (153)
	CreateDynamicObject(8557,401.2109400,-4865.1137700,496.7999900,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (154)
	CreateDynamicObject(8557,404.1119700,-4861.5312500,497.9666400,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (155)
	CreateDynamicObject(8557,407.3715800,-4858.2714800,499.1333300,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (156)
	CreateDynamicObject(8557,410.9540400,-4855.3706100,500.2999900,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (157)
	CreateDynamicObject(8557,414.8201300,-4852.8598600,501.4666400,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (158)
	CreateDynamicObject(8557,418.9274900,-4850.7670900,502.6333300,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (159)
	CreateDynamicObject(8557,423.2310800,-4849.1152300,503.7999900,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (160)
	CreateDynamicObject(8557,427.6838100,-4847.9218700,504.9666400,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (161)
	CreateDynamicObject(8557,432.2368200,-4847.2011700,506.1333300,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (162)
	CreateDynamicObject(8557,436.8403000,-4846.9594700,507.2999900,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (163)
	CreateDynamicObject(8557,441.4437600,-4847.2011700,508.4666400,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (164)
	CreateDynamicObject(8557,445.9968000,-4847.9218700,509.6333300,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (165)
	CreateDynamicObject(8557,450.4494900,-4849.1152300,510.7999900,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (166)
	CreateDynamicObject(8557,454.7530800,-4850.7670900,511.9666400,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (167)
	CreateDynamicObject(8557,458.8604400,-4852.8598600,513.1333000,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (168)
	CreateDynamicObject(8557,462.7265300,-4855.3706100,514.2999900,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (169)
	CreateDynamicObject(8557,466.3089900,-4858.2714800,515.4666700,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (170)
	CreateDynamicObject(8557,469.5686000,-4861.5312500,516.6333000,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (171)
	CreateDynamicObject(8557,472.4696400,-4865.1137700,517.7999900,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (172)
	CreateDynamicObject(8557,474.9803200,-4868.9799800,518.9666700,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (173)
	CreateDynamicObject(8557,477.0730900,-4873.0874000,520.1333000,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (174)
	CreateDynamicObject(8557,478.7251000,-4877.3906200,521.2999900,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (175)
	CreateDynamicObject(8557,479.9182100,-4881.8437500,522.4666700,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (176)
	CreateDynamicObject(8557,480.6393400,-4886.3964800,523.6333000,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (177)
	CreateDynamicObject(8557,480.8805800,-4891.0000000,524.7999900,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (178)
	CreateDynamicObject(8557,480.6393400,-4895.6035200,525.9666700,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (179)
	CreateDynamicObject(8557,479.9182100,-4900.1562500,527.1333000,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (180)
	CreateDynamicObject(8557,478.7251000,-4904.6093700,528.2999900,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (181)
	CreateDynamicObject(8557,477.0730900,-4908.9126000,529.4666700,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (182)
	CreateDynamicObject(8557,474.9803200,-4913.0200200,530.6333000,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (183)
	CreateDynamicObject(8557,472.4696400,-4916.8862300,531.7999900,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (184)
	CreateDynamicObject(8557,469.5686000,-4920.4687500,532.9666700,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (185)
	CreateDynamicObject(8557,466.3089900,-4923.7285200,534.1333000,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (186)
	CreateDynamicObject(8557,462.7265300,-4926.6293900,535.2999900,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (187)
	CreateDynamicObject(8557,458.8604400,-4929.1401400,536.4666700,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (188)
	CreateDynamicObject(8557,454.7530800,-4931.2329100,537.6333000,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (189)
	CreateDynamicObject(8557,450.4494900,-4932.8847700,538.7999900,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (190)
	CreateDynamicObject(8557,445.9968000,-4934.0781200,539.9666700,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (191)
	CreateDynamicObject(8557,441.4437600,-4934.7988300,541.1333000,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (192)
	CreateDynamicObject(8557,436.8403000,-4935.0405300,542.2999900,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (193)
	CreateDynamicObject(8557,432.2368200,-4934.7988300,543.4666700,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (194)
	CreateDynamicObject(8557,427.6838100,-4934.0781200,544.6333000,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (195)
	CreateDynamicObject(8557,423.2310800,-4932.8847700,545.7999900,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (196)
	CreateDynamicObject(8557,418.9274900,-4931.2329100,546.9666700,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (197)
	CreateDynamicObject(8557,414.8201300,-4929.1401400,548.1333000,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (198)
	CreateDynamicObject(8557,410.9540400,-4926.6293900,549.2999900,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (199)
	CreateDynamicObject(8557,407.3715800,-4923.7285200,550.4666700,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (200)
	CreateDynamicObject(8557,404.1119700,-4920.4687500,551.6333000,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (201)
	CreateDynamicObject(8557,401.2109400,-4916.8862300,552.7999900,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (202)
	CreateDynamicObject(8557,398.7002600,-4913.0200200,553.9666700,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (203)
	CreateDynamicObject(8557,396.6074800,-4908.9126000,555.1333000,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (204)
	CreateDynamicObject(8557,394.9554700,-4904.6093700,556.2999900,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (205)
	CreateDynamicObject(8557,393.7623600,-4900.1562500,557.4666700,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (206)
	CreateDynamicObject(8557,393.0412600,-4895.6035200,558.6333000,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (207)
	CreateDynamicObject(8557,392.7998000,-4891.0000000,559.7999900,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (208)
	CreateDynamicObject(8557,409.5000000,-4885.7998000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (209)
	CreateDynamicObject(8557,409.5000000,-4880.7002000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (210)
	CreateDynamicObject(8557,409.5000000,-4875.6005900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(761)
	CreateDynamicObject(8557,409.5000000,-4870.5009800,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(762)
	CreateDynamicObject(8557,409.5000000,-4865.4013700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(763)
	CreateDynamicObject(8557,409.5000000,-4860.3017600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(764)
	CreateDynamicObject(8557,409.5000000,-4855.2021500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(765)
	CreateDynamicObject(8557,409.5000000,-4850.1025400,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(766)
	CreateDynamicObject(8557,409.5000000,-4845.0029300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(767)
	CreateDynamicObject(8557,409.5000000,-4839.9033200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(768)
	CreateDynamicObject(8557,409.5000000,-4834.8037100,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(769)
	CreateDynamicObject(8557,409.5000000,-4829.7041000,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(770)
	CreateDynamicObject(8557,409.5000000,-4824.6044900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(771)
	CreateDynamicObject(8557,409.5000000,-4819.5048800,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(772)
	CreateDynamicObject(8557,409.5000000,-4814.4052700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(773)
	CreateDynamicObject(8557,409.5000000,-4809.3056600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(774)
	CreateDynamicObject(8557,409.5000000,-4804.2060500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(775)
	CreateDynamicObject(8557,409.5000000,-4799.1064500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(776)
	CreateDynamicObject(8557,409.5000000,-4794.0068400,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(777)
	CreateDynamicObject(8557,409.5000000,-4788.9072300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(778)
	CreateDynamicObject(8557,409.5000000,-4783.8076200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(779)
	CreateDynamicObject(8557,409.5000000,-4778.7080100,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(780)
	CreateDynamicObject(8557,409.5000000,-4773.6084000,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(781)
	CreateDynamicObject(8557,409.5000000,-4768.5087900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(782)
	CreateDynamicObject(8557,409.5000000,-4763.4091800,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(783)
	CreateDynamicObject(8557,409.5000000,-4758.3095700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(784)
	CreateDynamicObject(8557,409.5000000,-4753.2099600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(785)
	CreateDynamicObject(8557,409.5000000,-4748.1103500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(786)
	CreateDynamicObject(8557,409.5000000,-4743.0107400,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(787)
	CreateDynamicObject(8557,409.5000000,-4737.9111300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(788)
	CreateDynamicObject(8557,409.5000000,-4732.8115200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(789)
	CreateDynamicObject(8557,409.5000000,-4727.7119100,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(790)
	CreateDynamicObject(8557,409.5000000,-4875.6005900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (211)
	CreateDynamicObject(8557,409.5000000,-4870.5009800,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (212)
	CreateDynamicObject(8557,409.5000000,-4865.4013700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (213)
	CreateDynamicObject(8557,409.5000000,-4860.3017600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (214)
	CreateDynamicObject(8557,409.5000000,-4855.2021500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (215)
	CreateDynamicObject(8557,409.5000000,-4850.1025400,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (216)
	CreateDynamicObject(8557,409.5000000,-4845.0029300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (217)
	CreateDynamicObject(8557,409.5000000,-4839.9033200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (218)
	CreateDynamicObject(8557,409.5000000,-4834.8037100,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (219)
	CreateDynamicObject(8557,409.5000000,-4829.7041000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (220)
	CreateDynamicObject(8557,409.5000000,-4824.6044900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (221)
	CreateDynamicObject(8557,409.5000000,-4819.5048800,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (222)
	CreateDynamicObject(8557,409.5000000,-4814.4052700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (223)
	CreateDynamicObject(8557,409.5000000,-4809.3056600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (224)
	CreateDynamicObject(8557,409.5000000,-4804.2060500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (225)
	CreateDynamicObject(8557,409.5000000,-4799.1064500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (226)
	CreateDynamicObject(8557,409.5000000,-4794.0068400,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (227)
	CreateDynamicObject(8557,409.5000000,-4788.9072300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (228)
	CreateDynamicObject(8557,409.5000000,-4783.8076200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (229)
	CreateDynamicObject(8557,409.5000000,-4778.7080100,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (230)
	CreateDynamicObject(8557,409.5000000,-4773.6084000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (231)
	CreateDynamicObject(8557,409.5000000,-4768.5087900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (232)
	CreateDynamicObject(8557,409.5000000,-4763.4091800,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (233)
	CreateDynamicObject(8557,409.5000000,-4758.3095700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (234)
	CreateDynamicObject(8557,409.5000000,-4753.2099600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (235)
	CreateDynamicObject(8557,409.5000000,-4748.1103500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (236)
	CreateDynamicObject(8557,409.5000000,-4743.0107400,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (237)
	CreateDynamicObject(8557,409.5000000,-4737.9111300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (238)
	CreateDynamicObject(8557,409.5000000,-4732.8115200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (239)
	CreateDynamicObject(8557,409.5000000,-4727.7119100,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (240)
	CreateDynamicObject(8557,409.5000000,-4721.0000000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (241)
	CreateDynamicObject(8557,409.5000000,-4714.2880900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(822)
	CreateDynamicObject(8557,409.5000000,-4707.5761700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(823)
	CreateDynamicObject(8557,409.5000000,-4700.8642600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(824)
	CreateDynamicObject(8557,409.5000000,-4694.1523400,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(825)
	CreateDynamicObject(8557,409.5000000,-4687.4404300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(826)
	CreateDynamicObject(8557,409.5000000,-4680.7285200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(827)
	CreateDynamicObject(8557,409.5000000,-4674.0166000,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(828)
	CreateDynamicObject(8557,409.5000000,-4667.3046900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(829)
	CreateDynamicObject(8557,409.5000000,-4660.5927700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(830)
	CreateDynamicObject(8557,409.5000000,-4653.8808600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(831)
	CreateDynamicObject(8557,409.5000000,-4647.1689500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(832)
	CreateDynamicObject(8557,409.5000000,-4640.4570300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(833)
	CreateDynamicObject(8557,409.5000000,-4633.7451200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(834)
	CreateDynamicObject(8557,409.5000000,-4627.0332000,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(835)
	CreateDynamicObject(8557,409.5000000,-4620.3212900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(836)
	CreateDynamicObject(8557,409.5000000,-4613.6093700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(837)
	CreateDynamicObject(8557,409.5000000,-4606.8974600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(838)
	CreateDynamicObject(8557,409.5000000,-4600.1855500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(839)
	CreateDynamicObject(8557,409.5000000,-4593.4736300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(840)
	CreateDynamicObject(8557,409.5000000,-4586.7617200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(841)
	CreateDynamicObject(8557,409.5000000,-4580.0498000,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(842)
	CreateDynamicObject(8557,409.5000000,-4573.3378900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(843)
	CreateDynamicObject(8557,409.5000000,-4566.6259800,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(844)
	CreateDynamicObject(8557,409.5000000,-4559.9140600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(845)
	CreateDynamicObject(8557,409.5000000,-4553.2021500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(846)
	CreateDynamicObject(8557,409.5000000,-4546.4902300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(847)
	CreateDynamicObject(8557,409.5000000,-4539.7783200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(848)
	CreateDynamicObject(8557,409.5000000,-4533.0664100,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(849)
	CreateDynamicObject(8557,409.5000000,-4526.3544900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(850)
	CreateDynamicObject(8557,409.5000000,-4519.6425800,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(851)
	CreateDynamicObject(8557,409.5000000,-4714.2880900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (242)
	CreateDynamicObject(8557,409.5000000,-4707.5761700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (243)
	CreateDynamicObject(8557,409.5000000,-4700.8642600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (244)
	CreateDynamicObject(8557,409.5000000,-4694.1523400,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (245)
	CreateDynamicObject(8557,409.5000000,-4687.4404300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (246)
	CreateDynamicObject(8557,409.5000000,-4680.7285200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (247)
	CreateDynamicObject(8557,409.5000000,-4674.0166000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (248)
	CreateDynamicObject(8557,409.5000000,-4667.3046900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (249)
	CreateDynamicObject(8557,409.5000000,-4660.5927700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (250)
	CreateDynamicObject(8557,409.5000000,-4653.8808600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (251)
	CreateDynamicObject(8557,409.5000000,-4647.1689500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (252)
	CreateDynamicObject(8557,409.5000000,-4640.4570300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (253)
	CreateDynamicObject(8557,409.5000000,-4633.7451200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (254)
	CreateDynamicObject(8557,409.5000000,-4627.0332000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (255)
	CreateDynamicObject(8557,409.5000000,-4620.3212900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (256)
	CreateDynamicObject(8557,409.5000000,-4613.6093700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (257)
	CreateDynamicObject(8557,409.5000000,-4606.8974600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (258)
	CreateDynamicObject(8557,409.5000000,-4600.1855500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (259)
	CreateDynamicObject(8557,409.5000000,-4593.4736300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (260)
	CreateDynamicObject(8557,409.5000000,-4586.7617200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (261)
	CreateDynamicObject(8557,409.5000000,-4580.0498000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (262)
	CreateDynamicObject(8557,409.5000000,-4573.3378900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (263)
	CreateDynamicObject(8557,409.5000000,-4566.6259800,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (264)
	CreateDynamicObject(8557,409.5000000,-4559.9140600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (265)
	CreateDynamicObject(8557,409.5000000,-4553.2021500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (266)
	CreateDynamicObject(8557,409.5000000,-4546.4902300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (267)
	CreateDynamicObject(8557,409.5000000,-4539.7783200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (268)
	CreateDynamicObject(8557,409.5000000,-4533.0664100,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (269)
	CreateDynamicObject(8557,409.5000000,-4526.3544900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (270)
	CreateDynamicObject(8557,409.5000000,-4519.6425800,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (271)
	CreateDynamicObject(8557,409.5000000,-4514.6001000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (272)
	CreateDynamicObject(8557,409.5000000,-4509.5576200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(883)
	CreateDynamicObject(8557,409.5000000,-4504.5151400,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(884)
	CreateDynamicObject(8557,409.5000000,-4499.4726600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(885)
	CreateDynamicObject(8557,409.5000000,-4494.4301800,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(886)
	CreateDynamicObject(8557,409.5000000,-4489.3877000,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(887)
	CreateDynamicObject(8557,409.5000000,-4484.3452100,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(888)
	CreateDynamicObject(8557,409.5000000,-4479.3027300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(889)
	CreateDynamicObject(8557,409.5000000,-4474.2602500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(890)
	CreateDynamicObject(8557,409.5000000,-4469.2177700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(891)
	CreateDynamicObject(8557,409.5000000,-4464.1752900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(892)
	CreateDynamicObject(8557,409.5000000,-4459.1328100,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(893)
	CreateDynamicObject(8557,409.5000000,-4454.0903300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(894)
	CreateDynamicObject(8557,409.5000000,-4449.0478500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(895)
	CreateDynamicObject(8557,409.5000000,-4444.0053700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(896)
	CreateDynamicObject(8557,409.5000000,-4438.9628900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(897)
	CreateDynamicObject(8557,409.5000000,-4433.9204100,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(898)
	CreateDynamicObject(8557,409.5000000,-4428.8779300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(899)
	CreateDynamicObject(8557,409.5000000,-4423.8354500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(900)
	CreateDynamicObject(8557,409.5000000,-4418.7929700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(901)
	CreateDynamicObject(8557,409.5000000,-4413.7504900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(902)
	CreateDynamicObject(8557,409.5000000,-4408.7080100,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(903)
	CreateDynamicObject(8557,409.5000000,-4403.6655300,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(904)
	CreateDynamicObject(8557,409.5000000,-4398.6230500,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(905)
	CreateDynamicObject(8557,409.5000000,-4393.5805700,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(906)
	CreateDynamicObject(8557,409.5000000,-4388.5380900,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(907)
	CreateDynamicObject(8557,409.5000000,-4378.4531200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(909)
	CreateDynamicObject(8557,409.5000000,-4368.3681600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(911)
	CreateDynamicObject(8557,409.5000000,-4358.2832000,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(913)
	CreateDynamicObject(8557,409.5000000,-4348.1982400,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(915)
	CreateDynamicObject(8557,409.5000000,-4338.1132800,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(917)
	CreateDynamicObject(8557,409.5000000,-4333.0708000,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(918)
	CreateDynamicObject(8557,409.5000000,-4328.0283200,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(919)
	CreateDynamicObject(8557,409.5000000,-4322.9858400,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(920)
	CreateDynamicObject(8557,409.5000000,-4317.9433600,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(921)
	CreateDynamicObject(8557,409.5000000,-4312.9008800,538.0000000,0.0000000,0.0000000,0.0000000); //amt 8557(922)
	CreateDynamicObject(8557,409.5000000,-4509.5576200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (273)
	CreateDynamicObject(8557,409.5000000,-4504.5151400,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (274)
	CreateDynamicObject(8557,409.5000000,-4499.4726600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (275)
	CreateDynamicObject(8557,409.5000000,-4494.4301800,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (276)
	CreateDynamicObject(8557,409.5000000,-4489.3877000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (277)
	CreateDynamicObject(8557,409.5000000,-4484.3452100,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (278)
	CreateDynamicObject(8557,409.5000000,-4479.3027300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (279)
	CreateDynamicObject(8557,409.5000000,-4474.2602500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (280)
	CreateDynamicObject(8557,409.5000000,-4469.2177700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (281)
	CreateDynamicObject(8557,409.5000000,-4464.1752900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (282)
	CreateDynamicObject(8557,409.5000000,-4459.1328100,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (283)
	CreateDynamicObject(8557,409.5000000,-4454.0903300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (284)
	CreateDynamicObject(8557,409.5000000,-4449.0478500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (285)
	CreateDynamicObject(8557,409.5000000,-4444.0053700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (286)
	CreateDynamicObject(8557,409.5000000,-4438.9628900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (287)
	CreateDynamicObject(8557,409.5000000,-4433.9204100,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (288)
	CreateDynamicObject(8557,409.5000000,-4428.8779300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (289)
	CreateDynamicObject(8557,409.5000000,-4423.8354500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (290)
	CreateDynamicObject(8557,409.5000000,-4418.7929700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (291)
	CreateDynamicObject(8557,409.5000000,-4413.7504900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (292)
	CreateDynamicObject(8557,409.5000000,-4408.7080100,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (293)
	CreateDynamicObject(8557,409.5000000,-4403.6655300,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (294)
	CreateDynamicObject(8557,409.5000000,-4398.6230500,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (295)
	CreateDynamicObject(8557,409.5000000,-4393.5805700,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (296)
	CreateDynamicObject(8557,409.5000000,-4388.5380900,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (297)
	CreateDynamicObject(8557,409.5000000,-4383.4956100,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (298)
	CreateDynamicObject(8557,409.5000000,-4373.4106400,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (300)
	CreateDynamicObject(8557,409.5000000,-4363.3256800,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (302)
	CreateDynamicObject(8557,409.5000000,-4353.2407200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (304)
	CreateDynamicObject(8557,409.5000000,-4343.1557600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (306)
	CreateDynamicObject(8557,409.5000000,-4338.1132800,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (307)
	CreateDynamicObject(8557,409.5000000,-4333.0708000,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (308)
	CreateDynamicObject(8557,409.5000000,-4328.0283200,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (309)
	CreateDynamicObject(8557,409.5000000,-4322.9858400,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (310)
	CreateDynamicObject(8557,409.5000000,-4317.9433600,538.0000000,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (311)
	CreateDynamicObject(8557,398.2999900,-4307.8999000,538.0000000,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (312)
	CreateDynamicObject(8557,398.5412600,-4303.2963900,536.6666900,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (313)
	CreateDynamicObject(8557,399.2623600,-4298.7436500,535.3333100,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (314)
	CreateDynamicObject(8557,400.4554700,-4294.2905300,534.0000000,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (315)
	CreateDynamicObject(8557,402.1074800,-4289.9873000,532.6666900,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (316)
	CreateDynamicObject(8557,404.2002600,-4285.8798800,531.3333100,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (317)
	CreateDynamicObject(8557,406.7109400,-4282.0136700,530.0000000,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (318)
	CreateDynamicObject(8557,409.6119700,-4278.4311500,528.6666900,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (319)
	CreateDynamicObject(8557,412.8715800,-4275.1713900,527.3333100,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (320)
	CreateDynamicObject(8557,416.4540400,-4272.2705100,526.0000000,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (321)
	CreateDynamicObject(8557,420.3201300,-4269.7597700,524.6666900,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (322)
	CreateDynamicObject(8557,424.4274900,-4267.6669900,523.3333100,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (323)
	CreateDynamicObject(8557,428.7310800,-4266.0151400,522.0000000,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (324)
	CreateDynamicObject(8557,433.1838100,-4264.8217800,520.6666900,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (325)
	CreateDynamicObject(8557,437.7368200,-4264.1010700,519.3333100,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (326)
	CreateDynamicObject(8557,442.3403000,-4263.8593700,518.0000000,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (327)
	CreateDynamicObject(8557,446.9437600,-4264.1010700,516.6666900,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (328)
	CreateDynamicObject(8557,451.4968000,-4264.8217800,515.3333100,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (329)
	CreateDynamicObject(8557,455.9494900,-4266.0151400,514.0000000,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (330)
	CreateDynamicObject(8557,460.2530800,-4267.6669900,512.6666900,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (331)
	CreateDynamicObject(8557,464.3604400,-4269.7597700,511.3333400,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (332)
	CreateDynamicObject(8557,468.2265300,-4272.2705100,510.0000000,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (333)
	CreateDynamicObject(8557,471.8089900,-4275.1713900,508.6666600,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (334)
	CreateDynamicObject(8557,475.0686000,-4278.4311500,507.3333400,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (335)
	CreateDynamicObject(8557,477.9696400,-4282.0136700,506.0000000,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (336)
	CreateDynamicObject(8557,480.4803200,-4285.8798800,504.6666600,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (337)
	CreateDynamicObject(8557,482.5730900,-4289.9873000,503.3333400,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (338)
	CreateDynamicObject(8557,484.2251000,-4294.2905300,502.0000000,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (339)
	CreateDynamicObject(8557,485.4182100,-4298.7436500,500.6666600,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (340)
	CreateDynamicObject(8557,486.1393400,-4303.2963900,499.3333400,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (341)
	CreateDynamicObject(8557,486.3805800,-4307.8999000,498.0000000,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (342)
	CreateDynamicObject(8557,486.1393400,-4312.5034200,496.6666600,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (343)
	CreateDynamicObject(8557,485.4182100,-4317.0561500,495.3333400,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (344)
	CreateDynamicObject(8557,484.2251000,-4321.5092800,494.0000000,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (345)
	CreateDynamicObject(8557,482.5730900,-4325.8125000,492.6666600,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (346)
	CreateDynamicObject(8557,480.4803200,-4329.9199200,491.3333400,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (347)
	CreateDynamicObject(8557,477.9696400,-4333.7861300,490.0000000,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (348)
	CreateDynamicObject(8557,475.0686000,-4337.3686500,488.6666600,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (349)
	CreateDynamicObject(8557,471.8089900,-4340.6284200,487.3333400,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (350)
	CreateDynamicObject(8557,468.2265300,-4343.5293000,486.0000000,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (351)
	CreateDynamicObject(8557,464.3604400,-4346.0400400,484.6666600,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (352)
	CreateDynamicObject(8557,460.2530800,-4348.1328100,483.3333400,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (353)
	CreateDynamicObject(8557,455.9494900,-4349.7846700,482.0000000,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (354)
	CreateDynamicObject(8557,451.4968000,-4350.9780300,480.6666600,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (355)
	CreateDynamicObject(8557,446.9437600,-4351.6987300,479.3333400,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (356)
	CreateDynamicObject(8557,442.3403000,-4351.9404300,478.0000000,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (357)
	CreateDynamicObject(8557,437.7368200,-4351.6987300,476.6666600,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (358)
	CreateDynamicObject(8557,433.1838100,-4350.9780300,475.3333400,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (359)
	CreateDynamicObject(8557,428.7310800,-4349.7846700,474.0000000,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (360)
	CreateDynamicObject(8557,424.4274900,-4348.1328100,472.6666600,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (361)
	CreateDynamicObject(8557,420.3201300,-4346.0400400,471.3333400,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (362)
	CreateDynamicObject(8557,416.4540400,-4343.5293000,470.0000000,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (363)
	CreateDynamicObject(8557,412.8715800,-4340.6284200,468.6666600,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (364)
	CreateDynamicObject(8557,409.6119700,-4337.3686500,467.3333400,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (365)
	CreateDynamicObject(8557,406.7109400,-4333.7861300,466.0000000,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (366)
	CreateDynamicObject(8557,404.2002600,-4329.9199200,464.6666600,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (367)
	CreateDynamicObject(8557,402.1074800,-4325.8125000,463.3333400,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (368)
	CreateDynamicObject(8557,400.4554700,-4321.5092800,462.0000000,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (369)
	CreateDynamicObject(8557,399.2623600,-4317.0561500,460.6666600,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (370)
	CreateDynamicObject(8557,398.5412600,-4312.5034200,459.3333400,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (371)
	CreateDynamicObject(8557,398.2999900,-4307.8999000,458.0000000,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (372)
	CreateDynamicObject(8557,398.5412600,-4303.2963900,456.6666600,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (373)
	CreateDynamicObject(8557,399.2623600,-4298.7436500,455.3333400,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (374)
	CreateDynamicObject(8557,400.4554700,-4294.2905300,454.0000000,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (375)
	CreateDynamicObject(8557,402.1074800,-4289.9873000,452.6666600,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (376)
	CreateDynamicObject(8557,404.2002600,-4285.8798800,451.3333400,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (377)
	CreateDynamicObject(8557,406.7109400,-4282.0136700,450.0000000,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (378)
	CreateDynamicObject(8557,409.6119700,-4278.4311500,448.6666600,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (379)
	CreateDynamicObject(8557,412.8715800,-4275.1713900,447.3333400,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (380)
	CreateDynamicObject(8557,416.4540400,-4272.2705100,446.0000000,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (381)
	CreateDynamicObject(8557,420.3201300,-4269.7597700,444.6666600,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (382)
	CreateDynamicObject(8557,424.4274900,-4267.6669900,443.3333400,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (383)
	CreateDynamicObject(8557,428.7310800,-4266.0151400,442.0000000,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (384)
	CreateDynamicObject(8557,433.1838100,-4264.8217800,440.6666600,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (385)
	CreateDynamicObject(8557,437.7368200,-4264.1010700,439.3333400,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (386)
	CreateDynamicObject(8557,442.3403000,-4263.8593700,438.0000000,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (387)
	CreateDynamicObject(8557,446.9437600,-4264.1010700,436.6666600,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (388)
	CreateDynamicObject(8557,451.4968000,-4264.8217800,435.3333400,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (389)
	CreateDynamicObject(8557,455.9494900,-4266.0151400,434.0000000,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (390)
	CreateDynamicObject(8557,460.2530800,-4267.6669900,432.6666600,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (391)
	CreateDynamicObject(8557,464.3604400,-4269.7597700,431.3333400,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (392)
	CreateDynamicObject(8557,468.2265300,-4272.2705100,430.0000000,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (393)
	CreateDynamicObject(8557,471.8089900,-4275.1713900,428.6666600,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (394)
	CreateDynamicObject(8557,475.0686000,-4278.4311500,427.3333400,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (395)
	CreateDynamicObject(8557,477.9696400,-4282.0136700,426.0000000,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (396)
	CreateDynamicObject(8557,480.4803200,-4285.8798800,424.6666600,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (397)
	CreateDynamicObject(8557,482.5730900,-4289.9873000,423.3333400,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (398)
	CreateDynamicObject(8557,484.2251000,-4294.2905300,422.0000000,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (399)
	CreateDynamicObject(8557,485.4182100,-4298.7436500,420.6666600,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (400)
	CreateDynamicObject(8557,486.1393400,-4303.2963900,419.3333400,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (401)
	CreateDynamicObject(8557,486.3805800,-4307.8999000,418.0000000,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (402)
	CreateDynamicObject(8557,486.1393400,-4312.5034200,416.6666600,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (403)
	CreateDynamicObject(8557,485.4182100,-4317.0561500,415.3333400,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (404)
	CreateDynamicObject(8557,484.2251000,-4321.5092800,414.0000000,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (405)
	CreateDynamicObject(8557,482.5730900,-4325.8125000,412.6666600,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (406)
	CreateDynamicObject(8557,480.4803200,-4329.9199200,411.3333400,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (407)
	CreateDynamicObject(8557,477.9696400,-4333.7861300,410.0000000,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (408)
	CreateDynamicObject(8557,475.0686000,-4337.3686500,408.6666600,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (409)
	CreateDynamicObject(8557,471.8089900,-4340.6284200,407.3333400,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (410)
	CreateDynamicObject(8557,468.2265300,-4343.5293000,406.0000000,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (411)
	CreateDynamicObject(8557,464.3604400,-4346.0400400,404.6666600,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (412)
	CreateDynamicObject(8557,460.2530800,-4348.1328100,403.3333400,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (413)
	CreateDynamicObject(8557,455.9494900,-4349.7846700,402.0000000,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (414)
	CreateDynamicObject(8557,451.4968000,-4350.9780300,400.6666600,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (415)
	CreateDynamicObject(8557,446.9437600,-4351.6987300,399.3333400,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (416)
	CreateDynamicObject(8557,442.3403000,-4351.9404300,398.0000000,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (417)
	CreateDynamicObject(8557,437.7368200,-4351.6987300,396.6666600,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (418)
	CreateDynamicObject(8557,433.1838100,-4350.9780300,395.3333400,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (419)
	CreateDynamicObject(8557,428.7310800,-4349.7846700,394.0000000,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (420)
	CreateDynamicObject(8557,424.4274900,-4348.1328100,392.6666600,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (421)
	CreateDynamicObject(8557,420.3201300,-4346.0400400,391.3333400,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (422)
	CreateDynamicObject(8557,416.4540400,-4343.5293000,390.0000000,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (423)
	CreateDynamicObject(8557,412.8715800,-4340.6284200,388.6666600,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (424)
	CreateDynamicObject(8557,409.6119700,-4337.3686500,387.3333400,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (425)
	CreateDynamicObject(8557,406.7109400,-4333.7861300,386.0000000,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (426)
	CreateDynamicObject(8557,404.2002600,-4329.9199200,384.6666600,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (427)
	CreateDynamicObject(8557,402.1074800,-4325.8125000,383.3333400,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (428)
	CreateDynamicObject(8557,400.4554700,-4321.5092800,382.0000000,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (429)
	CreateDynamicObject(8557,399.2623600,-4317.0561500,380.6666600,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (430)
	CreateDynamicObject(8557,398.5412600,-4312.5034200,379.3333400,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (431)
	CreateDynamicObject(8557,398.2999900,-4307.8999000,378.0000000,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (432)
	CreateDynamicObject(8557,398.5412600,-4303.2963900,376.6666600,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (433)
	CreateDynamicObject(8557,399.2623600,-4298.7436500,375.3333400,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (434)
	CreateDynamicObject(8557,400.4554700,-4294.2905300,374.0000000,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (435)
	CreateDynamicObject(8557,402.1074800,-4289.9873000,372.6666600,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (436)
	CreateDynamicObject(8557,404.2002600,-4285.8798800,371.3333400,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (437)
	CreateDynamicObject(8557,406.7109400,-4282.0136700,370.0000000,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (438)
	CreateDynamicObject(8557,409.6119700,-4278.4311500,368.6666600,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (439)
	CreateDynamicObject(8557,412.8715800,-4275.1713900,367.3333400,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (440)
	CreateDynamicObject(8557,416.4540400,-4272.2705100,366.0000000,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (441)
	CreateDynamicObject(8557,420.3201300,-4269.7597700,364.6666600,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (442)
	CreateDynamicObject(8557,424.4274900,-4267.6669900,363.3333400,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (443)
	CreateDynamicObject(8557,428.7310800,-4266.0151400,362.0000000,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (444)
	CreateDynamicObject(8557,433.1838100,-4264.8217800,360.6666600,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (445)
	CreateDynamicObject(8557,437.7368200,-4264.1010700,359.3333400,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (446)
	CreateDynamicObject(8557,442.3403000,-4263.8593700,358.0000000,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (447)
	CreateDynamicObject(8557,446.9437600,-4264.1010700,356.6666600,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (448)
	CreateDynamicObject(8557,451.4968000,-4264.8217800,355.3333400,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (449)
	CreateDynamicObject(8557,455.9494900,-4266.0151400,354.0000000,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (450)
	CreateDynamicObject(8557,460.2530800,-4267.6669900,352.6666600,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (451)
	CreateDynamicObject(8557,464.3604400,-4269.7597700,351.3333400,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (452)
	CreateDynamicObject(8557,468.2265300,-4272.2705100,350.0000000,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (453)
	CreateDynamicObject(8557,471.8089900,-4275.1713900,348.6666600,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (454)
	CreateDynamicObject(8557,475.0686000,-4278.4311500,347.3333400,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (455)
	CreateDynamicObject(8557,477.9696400,-4282.0136700,346.0000000,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (456)
	CreateDynamicObject(8557,480.4803200,-4285.8798800,344.6666600,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (457)
	CreateDynamicObject(8557,482.5730900,-4289.9873000,343.3333400,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (458)
	CreateDynamicObject(8557,484.2251000,-4294.2905300,342.0000000,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (459)
	CreateDynamicObject(8557,485.4182100,-4298.7436500,340.6666600,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (460)
	CreateDynamicObject(8557,486.1393400,-4303.2963900,339.3333400,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (461)
	CreateDynamicObject(8557,486.3805800,-4307.8999000,338.0000000,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (462)
	CreateDynamicObject(8557,486.1393400,-4312.5034200,336.6666600,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (463)
	CreateDynamicObject(8557,485.4182100,-4317.0561500,335.3333400,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (464)
	CreateDynamicObject(8557,484.2251000,-4321.5092800,334.0000000,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (465)
	CreateDynamicObject(8557,482.5730900,-4325.8125000,332.6666600,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (466)
	CreateDynamicObject(8557,480.4803200,-4329.9199200,331.3333400,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (467)
	CreateDynamicObject(8557,477.9696400,-4333.7861300,330.0000000,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (468)
	CreateDynamicObject(8557,475.0686000,-4337.3686500,328.6666600,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (469)
	CreateDynamicObject(8557,471.8089900,-4340.6284200,327.3333400,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (470)
	CreateDynamicObject(8557,468.2265300,-4343.5293000,326.0000000,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (471)
	CreateDynamicObject(8557,464.3604400,-4346.0400400,324.6666600,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (472)
	CreateDynamicObject(8557,460.2530800,-4348.1328100,323.3333400,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (473)
	CreateDynamicObject(8557,455.9494900,-4349.7846700,322.0000000,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (474)
	CreateDynamicObject(8557,451.4968000,-4350.9780300,320.6666600,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (475)
	CreateDynamicObject(8557,446.9437600,-4351.6987300,319.3333400,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (476)
	CreateDynamicObject(8557,442.3403000,-4351.9404300,318.0000000,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (477)
	CreateDynamicObject(8557,437.7368200,-4351.6987300,316.6666600,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (478)
	CreateDynamicObject(8557,433.1838100,-4350.9780300,315.3333400,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (479)
	CreateDynamicObject(8557,428.7310800,-4349.7846700,314.0000000,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (480)
	CreateDynamicObject(8557,424.4274900,-4348.1328100,312.6666600,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (481)
	CreateDynamicObject(8557,420.3201300,-4346.0400400,311.3333400,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (482)
	CreateDynamicObject(8557,416.4540400,-4343.5293000,310.0000000,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (483)
	CreateDynamicObject(8557,412.8715800,-4340.6284200,308.6666600,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (484)
	CreateDynamicObject(8557,409.6119700,-4337.3686500,307.3333400,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (485)
	CreateDynamicObject(8557,406.7109400,-4333.7861300,306.0000000,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (486)
	CreateDynamicObject(8557,404.2002600,-4329.9199200,304.6666600,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (487)
	CreateDynamicObject(8557,402.1074800,-4325.8125000,303.3333400,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (488)
	CreateDynamicObject(8557,400.4554700,-4321.5092800,302.0000000,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (489)
	CreateDynamicObject(8557,399.2623600,-4317.0561500,300.6666600,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (490)
	CreateDynamicObject(8557,398.5412600,-4312.5034200,299.3333400,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (491)
	CreateDynamicObject(8557,398.2999900,-4307.8999000,298.0000000,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (492)
	CreateDynamicObject(8557,398.5412600,-4303.2963900,536.6666900,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (493)
	CreateDynamicObject(8557,399.2623600,-4298.7436500,535.3333100,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (494)
	CreateDynamicObject(8557,400.4554700,-4294.2905300,534.0000000,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (495)
	CreateDynamicObject(8557,402.1074800,-4289.9873000,532.6666900,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (496)
	CreateDynamicObject(8557,404.2002600,-4285.8798800,531.3333100,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (497)
	CreateDynamicObject(8557,406.7109400,-4282.0136700,530.0000000,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (498)
	CreateDynamicObject(8557,409.6119700,-4278.4311500,528.6666900,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (499)
	CreateDynamicObject(8557,412.8715800,-4275.1713900,527.3333100,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (500)
	CreateDynamicObject(8557,416.4540400,-4272.2705100,526.0000000,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (501)
	CreateDynamicObject(8557,420.3201300,-4269.7597700,524.6666900,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (502)
	CreateDynamicObject(8557,424.4274900,-4267.6669900,523.3333100,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (503)
	CreateDynamicObject(8557,428.7310800,-4266.0151400,522.0000000,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (504)
	CreateDynamicObject(8557,433.1838100,-4264.8217800,520.6666900,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (505)
	CreateDynamicObject(8557,437.7368200,-4264.1010700,519.3333100,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (506)
	CreateDynamicObject(8557,442.3403000,-4263.8593700,518.0000000,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (507)
	CreateDynamicObject(8557,446.9437600,-4264.1010700,516.6666900,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (508)
	CreateDynamicObject(8557,451.4968000,-4264.8217800,515.3333100,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (509)
	CreateDynamicObject(8557,455.9494900,-4266.0151400,514.0000000,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (510)
	CreateDynamicObject(8557,460.2530800,-4267.6669900,512.6666900,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (511)
	CreateDynamicObject(8557,464.3604400,-4269.7597700,511.3333400,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (512)
	CreateDynamicObject(8557,468.2265300,-4272.2705100,510.0000000,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (513)
	CreateDynamicObject(8557,471.8089900,-4275.1713900,508.6666600,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (514)
	CreateDynamicObject(8557,475.0686000,-4278.4311500,507.3333400,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (515)
	CreateDynamicObject(8557,477.9696400,-4282.0136700,506.0000000,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (516)
	CreateDynamicObject(8557,480.4803200,-4285.8798800,504.6666600,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (517)
	CreateDynamicObject(8557,482.5730900,-4289.9873000,503.3333400,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (518)
	CreateDynamicObject(8557,484.2251000,-4294.2905300,502.0000000,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (519)
	CreateDynamicObject(8557,485.4182100,-4298.7436500,500.6666600,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (520)
	CreateDynamicObject(8557,486.1393400,-4303.2963900,499.3333400,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (521)
	CreateDynamicObject(8557,486.3805800,-4307.8999000,498.0000000,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (522)
	CreateDynamicObject(8557,486.1393400,-4312.5034200,496.6666600,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (523)
	CreateDynamicObject(8557,485.4182100,-4317.0561500,495.3333400,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (524)
	CreateDynamicObject(8557,484.2251000,-4321.5092800,494.0000000,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (525)
	CreateDynamicObject(8557,482.5730900,-4325.8125000,492.6666600,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (526)
	CreateDynamicObject(8557,480.4803200,-4329.9199200,491.3333400,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (527)
	CreateDynamicObject(8557,477.9696400,-4333.7861300,490.0000000,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (528)
	CreateDynamicObject(8557,475.0686000,-4337.3686500,488.6666600,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (529)
	CreateDynamicObject(8557,471.8089900,-4340.6284200,487.3333400,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (530)
	CreateDynamicObject(8557,468.2265300,-4343.5293000,486.0000000,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (531)
	CreateDynamicObject(8557,464.3604400,-4346.0400400,484.6666600,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (532)
	CreateDynamicObject(8557,460.2530800,-4348.1328100,483.3333400,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (533)
	CreateDynamicObject(8557,455.9494900,-4349.7846700,482.0000000,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (534)
	CreateDynamicObject(8557,451.4968000,-4350.9780300,480.6666600,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (535)
	CreateDynamicObject(8557,446.9437600,-4351.6987300,479.3333400,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (536)
	CreateDynamicObject(8557,442.3403000,-4351.9404300,478.0000000,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (537)
	CreateDynamicObject(8557,437.7368200,-4351.6987300,476.6666600,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (538)
	CreateDynamicObject(8557,433.1838100,-4350.9780300,475.3333400,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (539)
	CreateDynamicObject(8557,428.7310800,-4349.7846700,474.0000000,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (540)
	CreateDynamicObject(8557,424.4274900,-4348.1328100,472.6666600,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (541)
	CreateDynamicObject(8557,420.3201300,-4346.0400400,471.3333400,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (542)
	CreateDynamicObject(8557,416.4540400,-4343.5293000,470.0000000,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (543)
	CreateDynamicObject(8557,412.8715800,-4340.6284200,468.6666600,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (544)
	CreateDynamicObject(8557,409.6119700,-4337.3686500,467.3333400,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (545)
	CreateDynamicObject(8557,406.7109400,-4333.7861300,466.0000000,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (546)
	CreateDynamicObject(8557,404.2002600,-4329.9199200,464.6666600,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (547)
	CreateDynamicObject(8557,402.1074800,-4325.8125000,463.3333400,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (548)
	CreateDynamicObject(8557,400.4554700,-4321.5092800,462.0000000,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (549)
	CreateDynamicObject(8557,399.2623600,-4317.0561500,460.6666600,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (550)
	CreateDynamicObject(8557,398.5412600,-4312.5034200,459.3333400,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (551)
	CreateDynamicObject(8557,398.2999900,-4307.8999000,458.0000000,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (552)
	CreateDynamicObject(8557,398.5412600,-4303.2963900,456.6666600,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (553)
	CreateDynamicObject(8557,399.2623600,-4298.7436500,455.3333400,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (554)
	CreateDynamicObject(8557,400.4554700,-4294.2905300,454.0000000,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (555)
	CreateDynamicObject(8557,402.1074800,-4289.9873000,452.6666600,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (556)
	CreateDynamicObject(8557,404.2002600,-4285.8798800,451.3333400,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (557)
	CreateDynamicObject(8557,406.7109400,-4282.0136700,450.0000000,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (558)
	CreateDynamicObject(8557,409.6119700,-4278.4311500,448.6666600,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (559)
	CreateDynamicObject(8557,412.8715800,-4275.1713900,447.3333400,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (560)
	CreateDynamicObject(8557,416.4540400,-4272.2705100,446.0000000,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (561)
	CreateDynamicObject(8557,420.3201300,-4269.7597700,444.6666600,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (562)
	CreateDynamicObject(8557,424.4274900,-4267.6669900,443.3333400,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (563)
	CreateDynamicObject(8557,428.7310800,-4266.0151400,442.0000000,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (564)
	CreateDynamicObject(8557,433.1838100,-4264.8217800,440.6666600,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (565)
	CreateDynamicObject(8557,437.7368200,-4264.1010700,439.3333400,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (566)
	CreateDynamicObject(8557,442.3403000,-4263.8593700,438.0000000,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (567)
	CreateDynamicObject(8557,446.9437600,-4264.1010700,436.6666600,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (568)
	CreateDynamicObject(8557,451.4968000,-4264.8217800,435.3333400,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (569)
	CreateDynamicObject(8557,455.9494900,-4266.0151400,434.0000000,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (570)
	CreateDynamicObject(8557,460.2530800,-4267.6669900,432.6666600,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (571)
	CreateDynamicObject(8557,464.3604400,-4269.7597700,431.3333400,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (572)
	CreateDynamicObject(8557,468.2265300,-4272.2705100,430.0000000,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (573)
	CreateDynamicObject(8557,471.8089900,-4275.1713900,428.6666600,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (574)
	CreateDynamicObject(8557,475.0686000,-4278.4311500,427.3333400,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (575)
	CreateDynamicObject(8557,477.9696400,-4282.0136700,426.0000000,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (576)
	CreateDynamicObject(8557,480.4803200,-4285.8798800,424.6666600,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (577)
	CreateDynamicObject(8557,482.5730900,-4289.9873000,423.3333400,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (578)
	CreateDynamicObject(8557,484.2251000,-4294.2905300,422.0000000,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (579)
	CreateDynamicObject(8557,485.4182100,-4298.7436500,420.6666600,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (580)
	CreateDynamicObject(8557,486.1393400,-4303.2963900,419.3333400,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (581)
	CreateDynamicObject(8557,486.3805800,-4307.8999000,418.0000000,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (582)
	CreateDynamicObject(8557,486.1393400,-4312.5034200,416.6666600,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (583)
	CreateDynamicObject(8557,485.4182100,-4317.0561500,415.3333400,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (584)
	CreateDynamicObject(8557,484.2251000,-4321.5092800,414.0000000,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (585)
	CreateDynamicObject(8557,482.5730900,-4325.8125000,412.6666600,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (586)
	CreateDynamicObject(8557,480.4803200,-4329.9199200,411.3333400,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (587)
	CreateDynamicObject(8557,477.9696400,-4333.7861300,410.0000000,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (588)
	CreateDynamicObject(8557,475.0686000,-4337.3686500,408.6666600,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (589)
	CreateDynamicObject(8557,471.8089900,-4340.6284200,407.3333400,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (590)
	CreateDynamicObject(8557,468.2265300,-4343.5293000,406.0000000,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (591)
	CreateDynamicObject(8557,464.3604400,-4346.0400400,404.6666600,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (592)
	CreateDynamicObject(8557,460.2530800,-4348.1328100,403.3333400,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (593)
	CreateDynamicObject(8557,455.9494900,-4349.7846700,402.0000000,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (594)
	CreateDynamicObject(8557,451.4968000,-4350.9780300,400.6666600,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (595)
	CreateDynamicObject(8557,446.9437600,-4351.6987300,399.3333400,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (596)
	CreateDynamicObject(8557,442.3403000,-4351.9404300,398.0000000,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (597)
	CreateDynamicObject(8557,437.7368200,-4351.6987300,396.6666600,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (598)
	CreateDynamicObject(8557,433.1838100,-4350.9780300,395.3333400,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (599)
	CreateDynamicObject(8557,428.7310800,-4349.7846700,394.0000000,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (600)
	CreateDynamicObject(8557,424.4274900,-4348.1328100,392.6666600,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (601)
	CreateDynamicObject(8557,420.3201300,-4346.0400400,391.3333400,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (602)
	CreateDynamicObject(8557,416.4540400,-4343.5293000,390.0000000,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (603)
	CreateDynamicObject(8557,412.8715800,-4340.6284200,388.6666600,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (604)
	CreateDynamicObject(8557,409.6119700,-4337.3686500,387.3333400,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (605)
	CreateDynamicObject(8557,406.7109400,-4333.7861300,386.0000000,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (606)
	CreateDynamicObject(8557,404.2002600,-4329.9199200,384.6666600,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (607)
	CreateDynamicObject(8557,402.1074800,-4325.8125000,383.3333400,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (608)
	CreateDynamicObject(8557,400.4554700,-4321.5092800,382.0000000,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (609)
	CreateDynamicObject(8557,399.2623600,-4317.0561500,380.6666600,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (610)
	CreateDynamicObject(8557,398.5412600,-4312.5034200,379.3333400,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (611)
	CreateDynamicObject(8557,398.2999900,-4307.8999000,378.0000000,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (612)
	CreateDynamicObject(8557,398.5412600,-4303.2963900,376.6666600,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (613)
	CreateDynamicObject(8557,399.2623600,-4298.7436500,375.3333400,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (614)
	CreateDynamicObject(8557,400.4554700,-4294.2905300,374.0000000,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (615)
	CreateDynamicObject(8557,402.1074800,-4289.9873000,372.6666600,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (616)
	CreateDynamicObject(8557,404.2002600,-4285.8798800,371.3333400,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (617)
	CreateDynamicObject(8557,406.7109400,-4282.0136700,370.0000000,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (618)
	CreateDynamicObject(8557,409.6119700,-4278.4311500,368.6666600,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (619)
	CreateDynamicObject(8557,412.8715800,-4275.1713900,367.3333400,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (620)
	CreateDynamicObject(8557,416.4540400,-4272.2705100,366.0000000,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (621)
	CreateDynamicObject(8557,420.3201300,-4269.7597700,364.6666600,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (622)
	CreateDynamicObject(8557,424.4274900,-4267.6669900,363.3333400,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (623)
	CreateDynamicObject(8557,428.7310800,-4266.0151400,362.0000000,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (624)
	CreateDynamicObject(8557,433.1838100,-4264.8217800,360.6666600,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (625)
	CreateDynamicObject(8557,437.7368200,-4264.1010700,359.3333400,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (626)
	CreateDynamicObject(8557,442.3403000,-4263.8593700,358.0000000,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (627)
	CreateDynamicObject(8557,446.9437600,-4264.1010700,356.6666600,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (628)
	CreateDynamicObject(8557,451.4968000,-4264.8217800,355.3333400,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (629)
	CreateDynamicObject(8557,455.9494900,-4266.0151400,354.0000000,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (630)
	CreateDynamicObject(8557,460.2530800,-4267.6669900,352.6666600,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (631)
	CreateDynamicObject(8557,464.3604400,-4269.7597700,351.3333400,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (632)
	CreateDynamicObject(8557,468.2265300,-4272.2705100,350.0000000,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (633)
	CreateDynamicObject(8557,471.8089900,-4275.1713900,348.6666600,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (634)
	CreateDynamicObject(8557,475.0686000,-4278.4311500,347.3333400,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (635)
	CreateDynamicObject(8557,477.9696400,-4282.0136700,346.0000000,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (636)
	CreateDynamicObject(8557,480.4803200,-4285.8798800,344.6666600,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (637)
	CreateDynamicObject(8557,482.5730900,-4289.9873000,343.3333400,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (638)
	CreateDynamicObject(8557,484.2251000,-4294.2905300,342.0000000,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (639)
	CreateDynamicObject(8557,485.4182100,-4298.7436500,340.6666600,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (640)
	CreateDynamicObject(8557,486.1393400,-4303.2963900,339.3333400,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (641)
	CreateDynamicObject(8557,486.3805800,-4307.8999000,338.0000000,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (642)
	CreateDynamicObject(8557,486.1393400,-4312.5034200,336.6666600,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (643)
	CreateDynamicObject(8557,485.4182100,-4317.0561500,335.3333400,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (644)
	CreateDynamicObject(8557,484.2251000,-4321.5092800,334.0000000,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (645)
	CreateDynamicObject(8557,482.5730900,-4325.8125000,332.6666600,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (646)
	CreateDynamicObject(8557,480.4803200,-4329.9199200,331.3333400,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (647)
	CreateDynamicObject(8557,477.9696400,-4333.7861300,330.0000000,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (648)
	CreateDynamicObject(8557,475.0686000,-4337.3686500,328.6666600,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (649)
	CreateDynamicObject(8557,471.8089900,-4340.6284200,327.3333400,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (650)
	CreateDynamicObject(8557,468.2265300,-4343.5293000,326.0000000,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (651)
	CreateDynamicObject(8557,464.3604400,-4346.0400400,324.6666600,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (652)
	CreateDynamicObject(8557,460.2530800,-4348.1328100,323.3333400,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (653)
	CreateDynamicObject(8557,455.9494900,-4349.7846700,322.0000000,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (654)
	CreateDynamicObject(8557,451.4968000,-4350.9780300,320.6666600,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (655)
	CreateDynamicObject(8557,446.9437600,-4351.6987300,319.3333400,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (656)
	CreateDynamicObject(8557,442.3403000,-4351.9404300,318.0000000,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (657)
	CreateDynamicObject(8557,437.7368200,-4351.6987300,316.6666600,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (658)
	CreateDynamicObject(8557,433.1838100,-4350.9780300,315.3333400,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (659)
	CreateDynamicObject(8557,428.7310800,-4349.7846700,314.0000000,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (660)
	CreateDynamicObject(8557,424.4274900,-4348.1328100,312.6666600,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (661)
	CreateDynamicObject(8557,420.3201300,-4346.0400400,311.3333400,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (662)
	CreateDynamicObject(8557,416.4540400,-4343.5293000,310.0000000,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (663)
	CreateDynamicObject(8557,412.8715800,-4340.6284200,308.6666600,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (664)
	CreateDynamicObject(8557,409.6119700,-4337.3686500,307.3333400,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (665)
	CreateDynamicObject(8557,406.7109400,-4333.7861300,306.0000000,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (666)
	CreateDynamicObject(8557,404.2002600,-4329.9199200,304.6666600,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (667)
	CreateDynamicObject(8557,402.1074800,-4325.8125000,303.3333400,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (668)
	CreateDynamicObject(8557,400.4554700,-4321.5092800,302.0000000,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (669)
	CreateDynamicObject(8557,399.2623600,-4317.0561500,300.6666600,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (670)
	CreateDynamicObject(8557,398.5412600,-4312.5034200,299.3333400,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (671)
	CreateDynamicObject(8557,398.2999900,-4307.8999000,298.0000000,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (672)
	CreateDynamicObject(8557,398.5412600,-4303.2963900,296.6666600,0.0000000,90.0000000,354.0000000); //object(vgshseing27) (673)
	CreateDynamicObject(8557,399.2623600,-4298.7436500,295.3333400,0.0000000,90.0000000,348.0000000); //object(vgshseing27) (674)
	CreateDynamicObject(8557,400.4554700,-4294.2905300,294.0000000,0.0000000,90.0000000,342.0000000); //object(vgshseing27) (675)
	CreateDynamicObject(8557,402.1074800,-4289.9873000,292.6666600,0.0000000,90.0000000,336.0000000); //object(vgshseing27) (676)
	CreateDynamicObject(8557,404.2002600,-4285.8798800,291.3333400,0.0000000,90.0000000,330.0000000); //object(vgshseing27) (677)
	CreateDynamicObject(8557,406.7109400,-4282.0136700,290.0000000,0.0000000,90.0000000,324.0000000); //object(vgshseing27) (678)
	CreateDynamicObject(8557,409.6119700,-4278.4311500,288.6666600,0.0000000,90.0000000,318.0000000); //object(vgshseing27) (679)
	CreateDynamicObject(8557,412.8715800,-4275.1713900,287.3333400,0.0000000,90.0000000,312.0000000); //object(vgshseing27) (680)
	CreateDynamicObject(8557,416.4540400,-4272.2705100,286.0000000,0.0000000,90.0000000,306.0000000); //object(vgshseing27) (681)
	CreateDynamicObject(8557,420.3201300,-4269.7597700,284.6666600,0.0000000,90.0000000,300.0000000); //object(vgshseing27) (682)
	CreateDynamicObject(8557,424.4274900,-4267.6669900,283.3333400,0.0000000,90.0000000,294.0000000); //object(vgshseing27) (683)
	CreateDynamicObject(8557,428.7310800,-4266.0151400,282.0000000,0.0000000,90.0000000,288.0000000); //object(vgshseing27) (684)
	CreateDynamicObject(8557,433.1838100,-4264.8217800,280.6666600,0.0000000,90.0000000,282.0000000); //object(vgshseing27) (685)
	CreateDynamicObject(8557,437.7368200,-4264.1010700,279.3333400,0.0000000,90.0000000,276.0000000); //object(vgshseing27) (686)
	CreateDynamicObject(8557,442.3403000,-4263.8593700,278.0000000,0.0000000,90.0000000,270.0000000); //object(vgshseing27) (687)
	CreateDynamicObject(8557,446.9437600,-4264.1010700,276.6666600,0.0000000,90.0000000,264.0000000); //object(vgshseing27) (688)
	CreateDynamicObject(8557,451.4968000,-4264.8217800,275.3333400,0.0000000,90.0000000,258.0000000); //object(vgshseing27) (689)
	CreateDynamicObject(8557,455.9494900,-4266.0151400,274.0000000,0.0000000,90.0000000,252.0000000); //object(vgshseing27) (690)
	CreateDynamicObject(8557,460.2530800,-4267.6669900,272.6666600,0.0000000,90.0000000,246.0000000); //object(vgshseing27) (691)
	CreateDynamicObject(8557,464.3604400,-4269.7597700,271.3333400,0.0000000,90.0000000,240.0000000); //object(vgshseing27) (692)
	CreateDynamicObject(8557,468.2265300,-4272.2705100,270.0000000,0.0000000,90.0000000,234.0000000); //object(vgshseing27) (693)
	CreateDynamicObject(8557,471.8089900,-4275.1713900,268.6666600,0.0000000,90.0000000,228.0000000); //object(vgshseing27) (694)
	CreateDynamicObject(8557,475.0686000,-4278.4311500,267.3333400,0.0000000,90.0000000,222.0000000); //object(vgshseing27) (695)
	CreateDynamicObject(8557,477.9696400,-4282.0136700,266.0000000,0.0000000,90.0000000,216.0000000); //object(vgshseing27) (696)
	CreateDynamicObject(8557,480.4803200,-4285.8798800,264.6666600,0.0000000,90.0000000,210.0000000); //object(vgshseing27) (697)
	CreateDynamicObject(8557,482.5730900,-4289.9873000,263.3333400,0.0000000,90.0000000,204.0000000); //object(vgshseing27) (698)
	CreateDynamicObject(8557,484.2251000,-4294.2905300,262.0000000,0.0000000,90.0000000,198.0000000); //object(vgshseing27) (699)
	CreateDynamicObject(8557,485.4182100,-4298.7436500,260.6666600,0.0000000,90.0000000,192.0000000); //object(vgshseing27) (700)
	CreateDynamicObject(8557,486.1393400,-4303.2963900,259.3333400,0.0000000,90.0000000,186.0000000); //object(vgshseing27) (701)
	CreateDynamicObject(8557,486.3805800,-4307.8999000,258.0000000,0.0000000,90.0000000,180.0000000); //object(vgshseing27) (702)
	CreateDynamicObject(8557,486.1393400,-4312.5034200,256.6666600,0.0000000,90.0000000,174.0000000); //object(vgshseing27) (703)
	CreateDynamicObject(8557,485.4182100,-4317.0561500,255.3333300,0.0000000,90.0000000,168.0000000); //object(vgshseing27) (704)
	CreateDynamicObject(8557,484.2251000,-4321.5092800,254.0000000,0.0000000,90.0000000,162.0000000); //object(vgshseing27) (705)
	CreateDynamicObject(8557,482.5730900,-4325.8125000,252.6666700,0.0000000,90.0000000,156.0000000); //object(vgshseing27) (706)
	CreateDynamicObject(8557,480.4803200,-4329.9199200,251.3333300,0.0000000,90.0000000,150.0000000); //object(vgshseing27) (707)
	CreateDynamicObject(8557,477.9696400,-4333.7861300,250.0000000,0.0000000,90.0000000,144.0000000); //object(vgshseing27) (708)
	CreateDynamicObject(8557,475.0686000,-4337.3686500,248.6666700,0.0000000,90.0000000,138.0000000); //object(vgshseing27) (709)
	CreateDynamicObject(8557,471.8089900,-4340.6284200,247.3333300,0.0000000,90.0000000,132.0000000); //object(vgshseing27) (710)
	CreateDynamicObject(8557,468.2265300,-4343.5293000,246.0000000,0.0000000,90.0000000,126.0000000); //object(vgshseing27) (711)
	CreateDynamicObject(8557,464.3604400,-4346.0400400,244.6666700,0.0000000,90.0000000,120.0000000); //object(vgshseing27) (712)
	CreateDynamicObject(8557,460.2530800,-4348.1328100,243.3333300,0.0000000,90.0000000,114.0000000); //object(vgshseing27) (713)
	CreateDynamicObject(8557,455.9494900,-4349.7846700,242.0000000,0.0000000,90.0000000,108.0000000); //object(vgshseing27) (714)
	CreateDynamicObject(8557,451.4968000,-4350.9780300,240.6666700,0.0000000,90.0000000,102.0000000); //object(vgshseing27) (715)
	CreateDynamicObject(8557,446.9437600,-4351.6987300,239.3333300,0.0000000,90.0000000,96.0000000); //object(vgshseing27) (716)
	CreateDynamicObject(8557,442.3403000,-4351.9404300,238.0000000,0.0000000,90.0000000,90.0000000); //object(vgshseing27) (717)
	CreateDynamicObject(8557,437.7368200,-4351.6987300,236.6666700,0.0000000,90.0000000,84.0000000); //object(vgshseing27) (718)
	CreateDynamicObject(8557,433.1838100,-4350.9780300,235.3333300,0.0000000,90.0000000,78.0000000); //object(vgshseing27) (719)
	CreateDynamicObject(8557,428.7310800,-4349.7846700,234.0000000,0.0000000,90.0000000,72.0000000); //object(vgshseing27) (720)
	CreateDynamicObject(8557,424.4274900,-4348.1328100,232.6666700,0.0000000,90.0000000,66.0000000); //object(vgshseing27) (721)
	CreateDynamicObject(8557,420.3201300,-4346.0400400,231.3333300,0.0000000,90.0000000,60.0000000); //object(vgshseing27) (722)
	CreateDynamicObject(8557,416.4540400,-4343.5293000,230.0000000,0.0000000,90.0000000,54.0000000); //object(vgshseing27) (723)
	CreateDynamicObject(8557,412.8715800,-4340.6284200,228.6666700,0.0000000,90.0000000,48.0000000); //object(vgshseing27) (724)
	CreateDynamicObject(8557,409.6119700,-4337.3686500,227.3333300,0.0000000,90.0000000,42.0000000); //object(vgshseing27) (725)
	CreateDynamicObject(8557,406.7109400,-4333.7861300,226.0000000,0.0000000,90.0000000,36.0000000); //object(vgshseing27) (726)
	CreateDynamicObject(8557,404.2002600,-4329.9199200,224.6666700,0.0000000,90.0000000,30.0000000); //object(vgshseing27) (727)
	CreateDynamicObject(8557,402.1074800,-4325.8125000,223.3333300,0.0000000,90.0000000,24.0000000); //object(vgshseing27) (728)
	CreateDynamicObject(8557,400.4554700,-4321.5092800,222.0000000,0.0000000,90.0000000,18.0000000); //object(vgshseing27) (729)
	CreateDynamicObject(8557,399.2623600,-4317.0561500,220.6666700,0.0000000,90.0000000,12.0000000); //object(vgshseing27) (730)
	CreateDynamicObject(8557,398.5412600,-4312.5034200,219.3333300,0.0000000,90.0000000,6.0000000); //object(vgshseing27) (731)
	CreateDynamicObject(8557,398.2998000,-4307.8994100,218.0000000,0.0000000,90.0000000,0.0000000); //object(vgshseing27) (732)
	CreateDynamicObject(979,426.1000100,-4310.6001000,540.2999900,0.0000000,0.0000000,180.0000000); //object(sub_roadleft) (1)
	CreateDynamicObject(979,417.0000000,-4310.6001000,540.2999900,0.0000000,0.0000000,179.9950000); //object(sub_roadleft) (2)
	CreateDynamicObject(979,412.7000100,-4310.6001000,540.2999900,0.0000000,0.0000000,179.9950000); //object(sub_roadleft) (3)
	CreateDynamicObject(979,394.1000100,-4310.6001000,540.2999900,0.0000000,0.0000000,179.9950000); //object(sub_roadleft) (4)
	CreateDynamicObject(8557,418.1000100,-4302.5000000,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (733)
	CreateDynamicObject(8557,418.1000100,-4297.3999000,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (734)
	CreateDynamicObject(8557,418.1000100,-4292.2998000,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1385)
	CreateDynamicObject(8557,418.1000100,-4287.1997100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1386)
	CreateDynamicObject(8557,418.1000100,-4282.0996100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1387)
	CreateDynamicObject(8557,418.1000100,-4276.9995100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1388)
	CreateDynamicObject(8557,418.1000100,-4271.8994100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1389)
	CreateDynamicObject(8557,418.1000100,-4266.7993200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1390)
	CreateDynamicObject(8557,418.1000100,-4261.6992200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1391)
	CreateDynamicObject(8557,418.1000100,-4256.5991200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1392)
	CreateDynamicObject(8557,418.1000100,-4251.4990200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1393)
	CreateDynamicObject(8557,418.1000100,-4246.3989300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1394)
	CreateDynamicObject(8557,418.1000100,-4241.2988300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1395)
	CreateDynamicObject(8557,418.1000100,-4236.1987300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1396)
	CreateDynamicObject(8557,418.1000100,-4231.0986300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1397)
	CreateDynamicObject(8557,418.1000100,-4225.9985400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1398)
	CreateDynamicObject(8557,418.1000100,-4220.8984400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1399)
	CreateDynamicObject(8557,418.1000100,-4215.7983400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1400)
	CreateDynamicObject(8557,418.1000100,-4210.6982400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1401)
	CreateDynamicObject(8557,418.1000100,-4205.5981400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1402)
	CreateDynamicObject(8557,418.1000100,-4200.4980500,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1403)
	CreateDynamicObject(8557,418.1000100,-4195.3979500,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1404)
	CreateDynamicObject(8557,418.1000100,-4180.0976600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1407)
	CreateDynamicObject(8557,418.1000100,-4174.9975600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1408)
	CreateDynamicObject(8557,418.1000100,-4169.8974600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1409)
	CreateDynamicObject(8557,418.1000100,-4164.7973600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1410)
	CreateDynamicObject(8557,418.1000100,-4159.6972700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1411)
	CreateDynamicObject(8557,418.1000100,-4154.5971700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1412)
	CreateDynamicObject(8557,418.1000100,-4149.4970700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1413)
	CreateDynamicObject(8557,418.1000100,-4144.3969700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1414)
	CreateDynamicObject(8557,418.1000100,-4292.2998000,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (735)
	CreateDynamicObject(8557,418.1000100,-4287.1997100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (736)
	CreateDynamicObject(8557,418.1000100,-4282.0996100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (737)
	CreateDynamicObject(8557,418.1000100,-4276.9995100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (738)
	CreateDynamicObject(8557,418.1000100,-4271.8994100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (739)
	CreateDynamicObject(8557,418.1000100,-4266.7993200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (740)
	CreateDynamicObject(8557,418.1000100,-4261.6992200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (741)
	CreateDynamicObject(8557,418.1000100,-4256.5991200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (742)
	CreateDynamicObject(8557,418.1000100,-4251.4990200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (743)
	CreateDynamicObject(8557,418.1000100,-4246.3989300,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (744)
	CreateDynamicObject(8557,418.1000100,-4241.2988300,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (745)
	CreateDynamicObject(8557,418.1000100,-4236.1987300,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (746)
	CreateDynamicObject(8557,418.1000100,-4231.0986300,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (747)
	CreateDynamicObject(8557,418.1000100,-4225.9985400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (748)
	CreateDynamicObject(8557,418.1000100,-4220.8984400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (749)
	CreateDynamicObject(8557,418.1000100,-4215.7983400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (750)
	CreateDynamicObject(8557,418.1000100,-4210.6982400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (751)
	CreateDynamicObject(8557,418.1000100,-4205.5981400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (752)
	CreateDynamicObject(8557,418.1000100,-4200.4980500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (753)
	CreateDynamicObject(8557,418.1000100,-4195.3979500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (754)
	CreateDynamicObject(8557,418.1000100,-4190.2978500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (755)
	CreateDynamicObject(8557,418.1000100,-4185.1977500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (756)
	CreateDynamicObject(8557,418.1000100,-4180.0976600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (757)
	CreateDynamicObject(8557,418.1000100,-4174.9975600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (758)
	CreateDynamicObject(8557,418.1000100,-4169.8974600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (759)
	CreateDynamicObject(8557,418.1000100,-4164.7973600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (760)
	CreateDynamicObject(8557,418.1000100,-4159.6972700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (761)
	CreateDynamicObject(8557,418.1000100,-4154.5971700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (762)
	CreateDynamicObject(8557,418.1000100,-4149.4970700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (763)
	CreateDynamicObject(8557,418.1000100,-4144.3969700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (764)
	CreateDynamicObject(8557,418.1000100,-4292.2998000,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1445)
	CreateDynamicObject(8557,418.1000100,-4287.1997100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1446)
	CreateDynamicObject(8557,418.1000100,-4282.0996100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1447)
	CreateDynamicObject(8557,418.1000100,-4276.9995100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1448)
	CreateDynamicObject(8557,418.1000100,-4271.8994100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1449)
	CreateDynamicObject(8557,418.1000100,-4266.7993200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1450)
	CreateDynamicObject(8557,418.1000100,-4261.6992200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1451)
	CreateDynamicObject(8557,418.1000100,-4256.5991200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1452)
	CreateDynamicObject(8557,418.1000100,-4251.4990200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1453)
	CreateDynamicObject(8557,418.1000100,-4246.3989300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1454)
	CreateDynamicObject(8557,418.1000100,-4241.2988300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1455)
	CreateDynamicObject(8557,418.1000100,-4236.1987300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1456)
	CreateDynamicObject(8557,418.1000100,-4231.0986300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1457)
	CreateDynamicObject(8557,418.1000100,-4225.9985400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1458)
	CreateDynamicObject(8557,418.1000100,-4220.8984400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1459)
	CreateDynamicObject(8557,418.1000100,-4215.7983400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1460)
	CreateDynamicObject(8557,418.1000100,-4210.6982400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1461)
	CreateDynamicObject(8557,418.1000100,-4205.5981400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1462)
	CreateDynamicObject(8557,418.1000100,-4200.4980500,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1463)
	CreateDynamicObject(8557,418.1000100,-4180.0976600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1467)
	CreateDynamicObject(8557,418.1000100,-4144.3969700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1474)
	CreateDynamicObject(8557,418.1000100,-4292.2998000,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (765)
	CreateDynamicObject(8557,418.1000100,-4287.1997100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (766)
	CreateDynamicObject(8557,418.1000100,-4282.0996100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (767)
	CreateDynamicObject(8557,418.1000100,-4276.9995100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (768)
	CreateDynamicObject(8557,418.1000100,-4271.8994100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (769)
	CreateDynamicObject(8557,418.1000100,-4266.7993200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (770)
	CreateDynamicObject(8557,418.1000100,-4261.6992200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (771)
	CreateDynamicObject(8557,418.1000100,-4256.5991200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (772)
	CreateDynamicObject(8557,418.1000100,-4251.4990200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (773)
	CreateDynamicObject(8557,418.1000100,-4246.3989300,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (774)
	CreateDynamicObject(8557,418.1000100,-4241.2988300,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (775)
	CreateDynamicObject(8557,418.1000100,-4236.1987300,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (776)
	CreateDynamicObject(8557,418.1000100,-4231.0986300,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (777)
	CreateDynamicObject(8557,418.1000100,-4225.9985400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (778)
	CreateDynamicObject(8557,418.1000100,-4220.8984400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (779)
	CreateDynamicObject(8557,418.1000100,-4215.7983400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (780)
	CreateDynamicObject(8557,418.1000100,-4210.6982400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (781)
	CreateDynamicObject(8557,418.1000100,-4205.5981400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (782)
	CreateDynamicObject(8557,418.1000100,-4195.3979500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (784)
	CreateDynamicObject(8557,418.1000100,-4190.2978500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (785)
	CreateDynamicObject(8557,418.1000100,-4185.1977500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (786)
	CreateDynamicObject(8557,418.1000100,-4180.0976600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (787)
	CreateDynamicObject(8557,418.1000100,-4174.9975600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (788)
	CreateDynamicObject(8557,418.1000100,-4169.8974600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (789)
	CreateDynamicObject(8557,418.1000100,-4164.7973600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (790)
	CreateDynamicObject(8557,418.0996100,-4159.6972700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (791)
	CreateDynamicObject(8557,418.1000100,-4154.5971700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (792)
	CreateDynamicObject(8557,418.1000100,-4149.4970700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (793)
	CreateDynamicObject(8557,418.0996100,-4144.3964800,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (794)
	CreateDynamicObject(6959,438.3999900,-4284.8999000,207.2000000,0.0000000,90.0000000,0.0000000); //object(vegasnbball1) (1)
	CreateDynamicObject(6959,398.0000000,-4287.1001000,207.2000000,0.0000000,90.0000000,0.0000000); //object(vegasnbball1) (2)
	CreateDynamicObject(6959,438.3999900,-4245.0000000,207.2000000,0.0000000,90.0000000,0.0000000); //object(vegasnbball1) (3)
	CreateDynamicObject(8557,418.0996100,-4141.2675800,195.8462400,9.0000000,0.0000000,0.0000000); //amt 8557(1505)
	CreateDynamicObject(8557,418.0996100,-4138.2163100,196.5788700,18.0000000,0.0000000,0.0000000); //amt 8557(1506)
	CreateDynamicObject(8557,418.0996100,-4135.3168900,197.7798800,27.0000000,0.0000000,0.0000000); //amt 8557(1507)
	CreateDynamicObject(8557,418.7999900,-4007.1999500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (795)
	CreateDynamicObject(8557,418.7999900,-4012.3000500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (796)
	CreateDynamicObject(8557,418.7999900,-4017.3999000,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (797)
	CreateDynamicObject(8557,418.7999900,-4022.4997600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1519)
	CreateDynamicObject(8557,418.7999900,-4027.5996100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1520)
	CreateDynamicObject(8557,418.7999900,-4032.6994600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1521)
	CreateDynamicObject(8557,418.7999900,-4037.7993200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1522)
	CreateDynamicObject(8557,418.7999900,-4042.8991700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1523)
	CreateDynamicObject(8557,418.7999900,-4047.9990200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1524)
	CreateDynamicObject(8557,418.7999900,-4053.0988800,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1525)
	CreateDynamicObject(8557,418.7999900,-4022.4997600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (798)
	CreateDynamicObject(8557,418.7999900,-4027.5996100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (799)
	CreateDynamicObject(8557,418.7999900,-4032.6994600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (800)
	CreateDynamicObject(8557,418.7999900,-4037.7993200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (801)
	CreateDynamicObject(8557,418.7998000,-4042.8984400,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (802)
	CreateDynamicObject(8557,418.7999900,-4047.9990200,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (803)
	CreateDynamicObject(8557,418.7999900,-4053.0988800,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (804)
	CreateDynamicObject(8557,418.7999900,-4002.0998500,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1533)
	CreateDynamicObject(8557,418.7999900,-3996.9997600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1534)
	CreateDynamicObject(8557,418.7999900,-3991.8996600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1535)
	CreateDynamicObject(8557,418.7999900,-3986.7995600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1536)
	CreateDynamicObject(8557,418.7999900,-3981.6994600,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1537)
	CreateDynamicObject(8557,418.7999900,-3976.5993700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1538)
	CreateDynamicObject(8557,418.7999900,-3971.4992700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1539)
	CreateDynamicObject(8557,418.7999900,-3966.3991700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1540)
	CreateDynamicObject(8557,418.7999900,-3961.2990700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1541)
	CreateDynamicObject(8557,418.7999900,-3956.1989700,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1542)
	CreateDynamicObject(8557,418.7999900,-3951.0988800,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1543)
	CreateDynamicObject(8557,418.7999900,-3945.9987800,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1544)
	CreateDynamicObject(8557,418.7999900,-3940.8986800,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1545)
	CreateDynamicObject(8557,418.7999900,-3935.7985800,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1546)
	CreateDynamicObject(8557,418.7999900,-3930.6984900,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1547)
	CreateDynamicObject(8557,418.7999900,-3925.5983900,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1548)
	CreateDynamicObject(8557,418.7999900,-3920.4982900,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1549)
	CreateDynamicObject(8557,418.7999900,-3915.3981900,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1550)
	CreateDynamicObject(8557,418.7999900,-3910.2981000,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1551)
	CreateDynamicObject(8557,418.7999900,-3905.1980000,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1552)
	CreateDynamicObject(8557,418.7999900,-3900.0979000,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1553)
	CreateDynamicObject(8557,418.7999900,-3894.9978000,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1554)
	CreateDynamicObject(8557,418.7999900,-3889.8977100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1555)
	CreateDynamicObject(8557,418.7999900,-3884.7976100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1556)
	CreateDynamicObject(8557,418.7999900,-3879.6975100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1557)
	CreateDynamicObject(8557,418.7999900,-3874.5974100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1558)
	CreateDynamicObject(8557,418.7999900,-3869.4973100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1559)
	CreateDynamicObject(8557,418.7999900,-3864.3972200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1560)
	CreateDynamicObject(8557,418.7999900,-3859.2971200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1561)
	CreateDynamicObject(8557,418.7999900,-3854.1970200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1562)
	CreateDynamicObject(8557,418.7999900,-3849.0969200,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1563)
	CreateDynamicObject(8557,418.7999900,-3843.9968300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1564)
	CreateDynamicObject(8557,418.7999900,-3838.8967300,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1565)
	CreateDynamicObject(8557,418.7999900,-3835.3999000,195.6000100,1.5000000,0.0000000,0.0000000); //amt 8557(1566)
	CreateDynamicObject(8557,418.7999900,-3803.1960400,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1572)
	CreateDynamicObject(8557,418.7999900,-4002.0998500,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (805)
	CreateDynamicObject(8557,418.7999900,-3996.9997600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (806)
	CreateDynamicObject(8557,418.7999900,-3991.8996600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (807)
	CreateDynamicObject(8557,418.7999900,-3986.7995600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (808)
	CreateDynamicObject(8557,418.7999900,-3981.6994600,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (809)
	CreateDynamicObject(8557,418.7999900,-3976.5993700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (810)
	CreateDynamicObject(8557,418.7999900,-3971.4992700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (811)
	CreateDynamicObject(8557,418.7999900,-3966.3991700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (812)
	CreateDynamicObject(8557,418.7999900,-3961.2990700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (813)
	CreateDynamicObject(8557,418.7999900,-3956.1989700,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (814)
	CreateDynamicObject(8557,418.7999900,-3951.0988800,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (815)
	CreateDynamicObject(8557,418.7999900,-3945.9987800,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (816)
	CreateDynamicObject(8557,418.7999900,-3833.8000500,195.8000000,6.5000000,0.0000000,0.0000000); //object(vgshseing27) (838)
	CreateDynamicObject(8557,418.7998000,-3803.1953100,195.6000100,0.0000000,0.0000000,0.0000000); //object(vgshseing27) (844)
	CreateDynamicObject(8557,418.7998000,-3798.4914600,195.8465300,6.0000000,0.0000000,0.0000000); //amt 8557(1613)
	CreateDynamicObject(8557,418.7998000,-3793.8393600,196.5833600,12.0000000,0.0000000,0.0000000); //amt 8557(1614)
	CreateDynamicObject(8557,418.7998000,-3789.2895500,197.8024600,18.0000000,0.0000000,0.0000000); //amt 8557(1615)
	CreateDynamicObject(8557,418.7998000,-3784.8920900,199.4904600,24.0000000,0.0000000,0.0000000); //amt 8557(1616)
	CreateDynamicObject(8557,418.7998000,-3780.6953100,201.6288600,30.0000000,0.0000000,0.0000000); //amt 8557(1617)
	CreateDynamicObject(8557,418.7998000,-3776.7448700,204.1942400,36.0000000,0.0000000,0.0000000); //amt 8557(1618)
	CreateDynamicObject(8557,418.7998000,-3773.0844700,207.1584900,42.0000000,0.0000000,0.0000000); //amt 8557(1619)
	CreateDynamicObject(8557,418.7998000,-3769.7539100,210.4891400,48.0000000,0.0000000,0.0000000); //amt 8557(1620)
	CreateDynamicObject(8557,418.7998000,-3766.7895500,214.1496700,54.0000000,0.0000000,0.0000000); //amt 8557(1621)
	CreateDynamicObject(8557,418.7998000,-3764.2241200,218.1000100,60.0000000,0.0000000,0.0000000); //amt 8557(1622)
	CreateDynamicObject(8557,418.7998000,-3762.0856900,222.2968600,66.0000000,0.0000000,0.0000000); //amt 8557(1623)
	CreateDynamicObject(8557,418.7998000,-3760.3977100,226.6942400,72.0000000,0.0000000,0.0000000); //amt 8557(1624)
	CreateDynamicObject(8557,418.7998000,-3759.1787100,231.2439900,78.0000000,0.0000000,0.0000000); //amt 8557(1625)
	CreateDynamicObject(8557,418.7998000,-3758.4418900,235.8962200,84.0000000,0.0000000,0.0000000); //amt 8557(1626)
	CreateDynamicObject(8557,418.7998000,-3758.1953100,240.6000100,90.0000000,315.0000000,45.0000000); //amt 8557(1627)
	CreateDynamicObject(8557,418.7998000,-3758.4418900,245.3037900,84.0000000,180.0000000,180.0000000); //amt 8557(1628)
	CreateDynamicObject(8557,418.7998000,-3759.1787100,249.9560200,78.0000000,180.0000000,180.0000000); //amt 8557(1629)
	CreateDynamicObject(8557,418.7998000,-3760.3977100,254.5057700,72.0000000,180.0000000,180.0000000); //amt 8557(1630)
	CreateDynamicObject(8557,418.7998000,-3762.0856900,258.9031700,66.0000000,180.0000000,180.0000000); //amt 8557(1631)
	CreateDynamicObject(8557,418.7998000,-3764.2241200,263.1000100,60.0000000,180.0000000,180.0000000); //amt 8557(1632)
	CreateDynamicObject(8557,418.7998000,-3766.7895500,267.0503500,54.0000000,180.0000000,180.0000000); //amt 8557(1633)
	CreateDynamicObject(8557,418.7998000,-3769.7539100,270.7108800,48.0000000,180.0000000,180.0000000); //amt 8557(1634)
	CreateDynamicObject(8557,418.7998000,-3773.0844700,274.0415300,42.0000000,180.0000000,180.0000000); //amt 8557(1635)
	CreateDynamicObject(8557,418.7998000,-3776.7448700,277.0057700,36.0000000,180.0000000,180.0000000); //amt 8557(1636)
	CreateDynamicObject(8557,418.7998000,-3780.6953100,279.5711700,30.0000000,180.0000000,180.0000000); //amt 8557(1637)
	CreateDynamicObject(8557,418.7998000,-3784.8920900,281.7095300,24.0000000,180.0000000,180.0000000); //amt 8557(1638)
	CreateDynamicObject(8557,418.7998000,-3789.2895500,283.3975500,18.0000000,180.0000000,180.0000000); //amt 8557(1639)
	CreateDynamicObject(8557,418.7998000,-3793.8393600,284.6166400,12.0000000,180.0000000,180.0000000); //amt 8557(1640)
	CreateDynamicObject(8557,418.7998000,-3798.4914600,285.3534900,6.0000000,180.0000000,180.0000000); //amt 8557(1641)
	CreateDynamicObject(8557,418.7998000,-3803.1953100,285.6000100,0.0000000,180.0000000,180.0000000); //amt 8557(1642)
	CreateDynamicObject(8557,418.7998000,-3807.8991700,285.3534900,354.0000000,180.0000000,180.0000000); //amt 8557(1643)
	CreateDynamicObject(8557,418.7998000,-3812.5512700,284.6166400,348.0000000,180.0000000,180.0000000); //amt 8557(1644)
	CreateDynamicObject(8557,418.7998000,-3817.1010700,283.3975500,342.0000000,180.0000000,180.0000000); //amt 8557(1645)
	CreateDynamicObject(8557,418.7998000,-3821.4985400,281.7095300,336.0000000,180.0000000,180.0000000); //amt 8557(1646)
	CreateDynamicObject(8557,418.7998000,-3825.6953100,279.5711700,330.0000000,180.0000000,180.0000000); //amt 8557(1647)
	CreateDynamicObject(8557,418.7998000,-3829.6457500,277.0057700,324.0000000,180.0000000,180.0000000); //amt 8557(1648)
	CreateDynamicObject(8557,418.7998000,-3833.3061500,274.0415300,318.0000000,180.0000000,180.0000000); //amt 8557(1649)
	CreateDynamicObject(8557,418.7998000,-3836.6367200,270.7108800,312.0000000,180.0000000,180.0000000); //amt 8557(1650)
	CreateDynamicObject(8557,418.7998000,-3839.6010700,267.0503500,306.0000000,180.0000000,180.0000000); //amt 8557(1651)
	CreateDynamicObject(8557,418.7998000,-3842.1665000,263.1000100,300.0000000,180.0000000,180.0000000); //amt 8557(1652)
	CreateDynamicObject(8557,418.7998000,-3844.3049300,258.9031700,294.0000000,180.0000000,180.0000000); //amt 8557(1653)
	CreateDynamicObject(8557,418.7998000,-3845.9929200,254.5057700,288.0000000,180.0000000,180.0000000); //amt 8557(1654)
	CreateDynamicObject(8557,418.7998000,-3847.2119100,249.9560200,282.0000000,180.0000000,180.0000000); //amt 8557(1655)
	CreateDynamicObject(8557,418.7998000,-3847.9487300,245.3037900,276.0000000,180.0000000,180.0000000); //amt 8557(1656)
	CreateDynamicObject(8557,418.7998000,-3848.1953100,240.6000100,270.0000000,225.0000000,225.0000000); //amt 8557(1657)
	CreateDynamicObject(8557,418.7998000,-3847.9487300,235.8962200,276.0000000,0.0000000,0.0000000); //amt 8557(1658)
	CreateDynamicObject(8557,418.7998000,-3847.2119100,231.2439900,282.0000000,0.0000000,0.0000000); //amt 8557(1659)
	CreateDynamicObject(8557,418.7998000,-3845.9929200,226.6942400,288.0000000,0.0000000,0.0000000); //amt 8557(1660)
	CreateDynamicObject(8557,418.7998000,-3844.3049300,222.2968600,294.0000000,0.0000000,0.0000000); //amt 8557(1661)
	CreateDynamicObject(8557,418.7998000,-3842.1665000,218.1000100,300.0000000,0.0000000,0.0000000); //amt 8557(1662)
	CreateDynamicObject(8557,418.7998000,-3803.1953100,195.6000100,0.0000000,0.0000000,0.0000000); //amt 8557(1672)
	CreateDynamicObject(8172,418.7000100,-3772.6999500,108.5000000,310.5000000,0.0000000,0.0000000); //object(vgssairportland07) (17)
	CreateDynamicObject(8172,418.6000100,-3643.3000500,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (18)
	CreateDynamicObject(1655,403.2999900,-3721.8999000,50.6000000,0.0000000,0.0000000,180.0000000); //object(waterjumpx2) (1)
	CreateDynamicObject(1655,412.0000000,-3721.8999000,50.6000000,0.0000000,0.0000000,179.9950000); //object(waterjumpx2) (2)
	CreateDynamicObject(1655,420.7000100,-3721.8999000,50.6000000,0.0000000,0.0000000,179.9950000); //object(waterjumpx2) (3)
	CreateDynamicObject(1655,429.1000100,-3721.8999000,50.6000000,0.0000000,0.0000000,179.9950000); //object(waterjumpx2) (4)
	CreateDynamicObject(1655,437.8999900,-3722.1001000,50.6000000,0.0000000,0.0000000,179.9950000); //object(waterjumpx2) (5)
	CreateDynamicObject(8172,418.6000100,-3481.8999000,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (19)
	CreateDynamicObject(8172,418.6000100,-3320.4997600,50.7000000,0.0000000,0.0000000,0.0000000); //amt 8172(24)
	CreateDynamicObject(8172,418.6000100,-3159.0996100,50.7000000,0.0000000,0.0000000,0.0000000); //amt 8172(25)
	CreateDynamicObject(8172,418.6000100,-2997.6994600,50.7000000,0.0000000,0.0000000,0.0000000); //amt 8172(26)
	CreateDynamicObject(8172,418.6000100,-3320.4997600,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (20)
	CreateDynamicObject(8172,418.5996100,-3159.0996100,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (21)
	CreateDynamicObject(8172,418.5996100,-2997.6992200,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (22)
	CreateDynamicObject(8172,418.6004000,-2836.2993200,50.7000000,0.0000000,0.0000000,0.0000000); //amt 8172(30)
	CreateDynamicObject(8172,418.6008000,-2674.8991700,50.7000000,0.0000000,0.0000000,0.0000000); //amt 8172(31)
	CreateDynamicObject(8172,418.6012000,-2513.4990200,50.7000000,0.0000000,0.0000000,0.0000000); //amt 8172(32)
	CreateDynamicObject(8172,418.6004000,-2836.2993200,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (23)
	CreateDynamicObject(8172,418.6008000,-2674.8991700,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (24)
	CreateDynamicObject(8172,418.6012000,-2513.4990200,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (25)
	CreateDynamicObject(8172,418.6004000,-2836.2993200,50.7000000,0.0000000,0.0000000,0.0000000); //amt 8172(36)
	CreateDynamicObject(8172,418.6008000,-2674.8991700,50.7000000,0.0000000,0.0000000,0.0000000); //amt 8172(37)
	CreateDynamicObject(8172,418.6012000,-2513.4990200,50.7000000,0.0000000,0.0000000,0.0000000); //amt 8172(38)
	CreateDynamicObject(8172,418.5996100,-2836.2988300,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (26)
	CreateDynamicObject(8172,418.6008000,-2674.8991700,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (27)
	CreateDynamicObject(8172,418.6012000,-2513.4990200,50.7000000,0.0000000,0.0000000,0.0000000); //object(vgssairportland07) (28)
	CreateDynamicObject(8078,406.1000100,-3552.5000000,54.7000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (8)
	CreateDynamicObject(8078,431.1000100,-3552.3999000,54.7000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (9)
	CreateDynamicObject(8078,409.3999900,-3552.5000000,54.7000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (10)
	CreateDynamicObject(8078,428.0000000,-3552.6999500,54.7000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (11)
	CreateDynamicObject(1655,418.6000100,-3578.1999500,51.3000000,0.0000000,0.0000000,0.0000000); //object(waterjumpx2) (6)
	CreateDynamicObject(8078,426.3999900,-3136.1001000,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (13)
	CreateDynamicObject(8078,411.1000100,-3079.8999000,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (14)
	CreateDynamicObject(8078,426.7999900,-2989.8000500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (15)
	CreateDynamicObject(8078,411.6000100,-2953.1999500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (16)
	CreateDynamicObject(8078,426.6000100,-2916.8999000,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (17)
	CreateDynamicObject(8078,411.2000100,-2874.6999500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (18)
	CreateDynamicObject(8078,431.2000100,-2917.0000000,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (19)
	CreateDynamicObject(8078,405.7999900,-2874.8000500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (20)
	CreateDynamicObject(8078,419.0000000,-2806.3999000,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (21)
	CreateDynamicObject(8078,406.2000100,-2749.1999500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (22)
	CreateDynamicObject(8078,431.3999900,-2748.6001000,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (23)
	CreateDynamicObject(8078,408.6000100,-2520.3000500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (24)
	CreateDynamicObject(8557,418.7999900,-2414.6999500,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (846)
	CreateDynamicObject(8078,429.2000100,-2520.5000000,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (25)
	CreateDynamicObject(8078,408.6000100,-2500.1999500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (26)
	CreateDynamicObject(8078,408.6000100,-2480.0998500,54.5000000,0.0000000,0.0000000,0.0000000); //amt 8078(27)
	CreateDynamicObject(8078,408.6000100,-2459.9997600,54.5000000,0.0000000,0.0000000,0.0000000); //amt 8078(28)
	CreateDynamicObject(8078,408.6000100,-2480.0998500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (27)
	CreateDynamicObject(8078,408.6000100,-2459.9997600,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (28)
	CreateDynamicObject(8078,429.2000100,-2500.8000500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (29)
	CreateDynamicObject(8078,429.2000100,-2481.1001000,54.5000000,0.0000000,0.0000000,0.0000000); //amt 8078(32)
	CreateDynamicObject(8078,429.2000100,-2461.4001500,54.5000000,0.0000000,0.0000000,0.0000000); //amt 8078(33)
	CreateDynamicObject(8078,429.2000100,-2481.1001000,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (30)
	CreateDynamicObject(8078,429.2000100,-2461.4001500,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (31)
	CreateDynamicObject(8078,418.8999900,-2678.6001000,54.5000000,0.0000000,0.0000000,0.0000000); //object(vgsfrates07) (32)
	CreateDynamicObject(8557,418.7999900,-2374.3000500,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (847)
	CreateDynamicObject(8557,418.7999900,-2333.9001500,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1676)
	CreateDynamicObject(8557,418.7999900,-2293.5002400,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1677)
	CreateDynamicObject(8557,418.7999900,-2253.1003400,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1678)
	CreateDynamicObject(8557,418.7999900,-2212.7004400,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1679)
	CreateDynamicObject(8557,418.7999900,-2172.3005400,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1680)
	CreateDynamicObject(8557,418.7999900,-2131.9006300,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1681)
	CreateDynamicObject(8557,418.7999900,-2091.5007300,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1682)
	CreateDynamicObject(8557,418.7999900,-2051.1008300,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1683)
	CreateDynamicObject(8557,418.7999900,-2333.9001500,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (848)
	CreateDynamicObject(8557,418.7999900,-2293.5002400,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (849)
	CreateDynamicObject(8557,418.7999900,-2253.1003400,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (850)
	CreateDynamicObject(8557,418.7999900,-2212.7004400,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (851)
	CreateDynamicObject(8557,418.7999900,-2172.3005400,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (852)
	CreateDynamicObject(8557,418.7999900,-2131.9006300,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (853)
	CreateDynamicObject(8557,418.7999900,-2091.5007300,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (854)
	CreateDynamicObject(8557,418.7998000,-2051.1005900,49.1000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (855)
	CreateDynamicObject(8557,418.3831500,-2047.4421400,49.2917300,0.0000000,354.0000000,90.0000000); //amt 8557(1692)
	CreateDynamicObject(8557,417.9664600,-2043.8237300,49.8648300,0.0000000,348.0000000,90.0000000); //amt 8557(1693)
	CreateDynamicObject(8557,417.5498000,-2040.2850300,50.8130200,0.0000000,342.0000000,90.0000000); //amt 8557(1694)
	CreateDynamicObject(8557,417.1331500,-2036.8647500,52.1259100,0.0000000,336.0000000,90.0000000); //amt 8557(1695)
	CreateDynamicObject(8557,416.7164600,-2033.6005900,53.7891100,0.0000000,330.0000000,90.0000000); //amt 8557(1696)
	CreateDynamicObject(8557,416.2998000,-2030.5280800,55.7844000,0.0000000,324.0000000,90.0000000); //amt 8557(1697)
	CreateDynamicObject(8557,415.8831500,-2027.6810300,58.0899300,0.0000000,318.0000000,90.0000000); //amt 8557(1698)
	CreateDynamicObject(8557,415.4664600,-2025.0905800,60.6804300,0.0000000,312.0000000,90.0000000); //amt 8557(1699)
	CreateDynamicObject(8557,415.0498000,-2022.7850300,63.5275200,0.0000000,306.0000000,90.0000000); //amt 8557(1700)
	CreateDynamicObject(8557,414.6331500,-2020.7896700,66.6000000,0.0000000,300.0000000,90.0000000); //amt 8557(1701)
	CreateDynamicObject(8557,414.2164600,-2019.1264600,69.8642100,0.0000000,294.0000000,90.0000000); //amt 8557(1702)
	CreateDynamicObject(8557,413.7998000,-2017.8136000,73.2844000,0.0000000,288.0000000,90.0000000); //amt 8557(1703)
	CreateDynamicObject(8557,413.3831500,-2016.8654800,76.8230900,0.0000000,282.0000000,90.0000000); //amt 8557(1704)
	CreateDynamicObject(8557,412.9664600,-2016.2923600,80.4415000,0.0000000,276.0000000,90.0000000); //amt 8557(1705)
	CreateDynamicObject(8557,412.5498000,-2016.1005900,84.1000000,0.0000000,270.0000000,90.0000000); //amt 8557(1706)
	CreateDynamicObject(8557,412.1331500,-2016.2923600,87.7585000,0.0000000,264.0000000,90.0000000); //amt 8557(1707)
	CreateDynamicObject(8557,411.7164600,-2016.8654800,91.3769100,0.0000000,258.0000000,90.0000000); //amt 8557(1708)
	CreateDynamicObject(8557,411.2998000,-2017.8136000,94.9155900,0.0000000,252.0000000,90.0000000); //amt 8557(1709)
	CreateDynamicObject(8557,410.8831500,-2019.1264600,98.3357800,0.0000000,246.0000000,90.0000000); //amt 8557(1710)
	CreateDynamicObject(8557,410.4664600,-2020.7896700,101.6000000,0.0000000,240.0000000,90.0000000); //amt 8557(1711)
	CreateDynamicObject(8557,410.0498000,-2022.7850300,104.6724900,0.0000000,234.0000000,90.0000000); //amt 8557(1712)
	CreateDynamicObject(8557,409.6331500,-2025.0905800,107.5195700,0.0000000,228.0000000,90.0000000); //amt 8557(1713)
	CreateDynamicObject(8557,409.2164600,-2027.6810300,110.1100600,0.0000000,222.0000000,90.0000000); //amt 8557(1714)
	CreateDynamicObject(8557,408.7998000,-2030.5280800,112.4155900,0.0000000,216.0000000,90.0000000); //amt 8557(1715)
	CreateDynamicObject(8557,408.3831500,-2033.6005900,114.4108900,0.0000000,210.0000000,90.0000000); //amt 8557(1716)
	CreateDynamicObject(8557,407.9664600,-2036.8647500,116.0740900,0.0000000,204.0000000,90.0000000); //amt 8557(1717)
	CreateDynamicObject(8557,407.5498000,-2040.2850300,117.3869800,0.0000000,198.0000000,90.0000000); //amt 8557(1718)
	CreateDynamicObject(8557,407.1331500,-2043.8237300,118.3351700,0.0000000,192.0000000,90.0000000); //amt 8557(1719)
	CreateDynamicObject(8557,406.7164600,-2047.4421400,118.9082600,0.0000000,186.0000000,90.0000000); //amt 8557(1720)
	CreateDynamicObject(8557,406.2998000,-2051.1005900,119.1000000,0.0000000,180.0000000,90.0000000); //amt 8557(1721)
	CreateDynamicObject(8557,405.8831500,-2054.7590300,118.9082600,0.0000000,174.0000000,90.0000000); //amt 8557(1722)
	CreateDynamicObject(8557,405.4664600,-2058.3774400,118.3351700,0.0000000,168.0000000,90.0000000); //amt 8557(1723)
	CreateDynamicObject(8557,405.0498000,-2061.9162600,117.3869800,0.0000000,162.0000000,90.0000000); //amt 8557(1724)
	CreateDynamicObject(8557,404.6331500,-2065.3364300,116.0740900,0.0000000,156.0000000,90.0000000); //amt 8557(1725)
	CreateDynamicObject(8557,404.2164600,-2068.6005900,114.4108900,0.0000000,150.0000000,90.0000000); //amt 8557(1726)
	CreateDynamicObject(8557,403.7998000,-2071.6731000,112.4155900,0.0000000,144.0000000,90.0000000); //amt 8557(1727)
	CreateDynamicObject(8557,403.3831500,-2074.5202600,110.1100600,0.0000000,138.0000000,90.0000000); //amt 8557(1728)
	CreateDynamicObject(8557,402.9664600,-2077.1106000,107.5195700,0.0000000,132.0000000,90.0000000); //amt 8557(1729)
	CreateDynamicObject(8557,402.5498000,-2079.4162600,104.6724900,0.0000000,126.0000000,90.0000000); //amt 8557(1730)
	CreateDynamicObject(8557,402.1331500,-2081.4113800,101.6000000,0.0000000,120.0000000,90.0000000); //amt 8557(1731)
	CreateDynamicObject(8557,401.7164600,-2083.0747100,98.3357800,0.0000000,114.0000000,90.0000000); //amt 8557(1732)
	CreateDynamicObject(8557,401.2998000,-2084.3874500,94.9155900,0.0000000,108.0000000,90.0000000); //amt 8557(1733)
	CreateDynamicObject(8557,400.8831500,-2085.3356900,91.3769100,0.0000000,102.0000000,90.0000000); //amt 8557(1734)
	CreateDynamicObject(8557,400.4664600,-2085.9089400,87.7585000,0.0000000,96.0000000,90.0000000); //amt 8557(1735)
	CreateDynamicObject(8557,400.0498000,-2086.1005900,84.1000000,0.0000000,90.0000000,90.0000000); //amt 8557(1736)
	CreateDynamicObject(8557,399.6331500,-2085.9089400,80.4415000,0.0000000,84.0000000,90.0000000); //amt 8557(1737)
	CreateDynamicObject(8557,399.2164600,-2085.3356900,76.8230900,0.0000000,78.0000000,90.0000000); //amt 8557(1738)
	CreateDynamicObject(8557,398.7998000,-2084.3874500,73.2844000,0.0000000,72.0000000,90.0000000); //amt 8557(1739)
	CreateDynamicObject(8557,398.3831500,-2083.0747100,69.8642100,0.0000000,66.0000000,90.0000000); //amt 8557(1740)
	CreateDynamicObject(8557,397.9664600,-2081.4113800,66.6000000,0.0000000,60.0000000,90.0000000); //amt 8557(1741)
	CreateDynamicObject(8557,397.5498000,-2079.4162600,63.5275200,0.0000000,54.0000000,90.0000000); //amt 8557(1742)
	CreateDynamicObject(8557,397.1331500,-2077.1106000,60.6804300,0.0000000,48.0000000,90.0000000); //amt 8557(1743)
	CreateDynamicObject(8557,396.7164600,-2074.5202600,58.0899300,0.0000000,42.0000000,90.0000000); //amt 8557(1744)
	CreateDynamicObject(8557,396.2998000,-2071.6731000,55.7844000,0.0000000,36.0000000,90.0000000); //amt 8557(1745)
	CreateDynamicObject(8557,395.8831500,-2068.6005900,53.7891100,0.0000000,30.0000000,90.0000000); //amt 8557(1746)
	CreateDynamicObject(8557,395.4664600,-2065.3364300,52.1259100,0.0000000,24.0000000,90.0000000); //amt 8557(1747)
	CreateDynamicObject(8557,395.0498000,-2061.9162600,50.8130200,0.0000000,18.0000000,90.0000000); //amt 8557(1748)
	CreateDynamicObject(8557,394.6331500,-2058.3774400,49.8648300,0.0000000,12.0000000,90.0000000); //amt 8557(1749)
	CreateDynamicObject(8557,394.2164600,-2054.7590300,49.2917300,0.0000000,6.0000000,90.0000000); //amt 8557(1750)
	CreateDynamicObject(8557,393.7998000,-2051.1005900,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1751)
	CreateDynamicObject(8557,393.3831500,-2047.4421400,49.2917300,0.0000000,354.0000000,90.0000000); //amt 8557(1752)
	CreateDynamicObject(8557,392.9664600,-2043.8237300,49.8648300,0.0000000,348.0000000,90.0000000); //amt 8557(1753)
	CreateDynamicObject(8557,392.5498000,-2040.2850300,50.8130200,0.0000000,342.0000000,90.0000000); //amt 8557(1754)
	CreateDynamicObject(8557,392.1331500,-2036.8647500,52.1259100,0.0000000,336.0000000,90.0000000); //amt 8557(1755)
	CreateDynamicObject(8557,391.7164600,-2033.6005900,53.7891100,0.0000000,330.0000000,90.0000000); //amt 8557(1756)
	CreateDynamicObject(8557,391.2998000,-2030.5280800,55.7844000,0.0000000,324.0000000,90.0000000); //amt 8557(1757)
	CreateDynamicObject(8557,390.8831500,-2027.6810300,58.0899300,0.0000000,318.0000000,90.0000000); //amt 8557(1758)
	CreateDynamicObject(8557,390.4664600,-2025.0905800,60.6804300,0.0000000,312.0000000,90.0000000); //amt 8557(1759)
	CreateDynamicObject(8557,390.0498000,-2022.7850300,63.5275200,0.0000000,306.0000000,90.0000000); //amt 8557(1760)
	CreateDynamicObject(8557,389.6331500,-2020.7896700,66.6000000,0.0000000,300.0000000,90.0000000); //amt 8557(1761)
	CreateDynamicObject(8557,389.2164600,-2019.1264600,69.8642100,0.0000000,294.0000000,90.0000000); //amt 8557(1762)
	CreateDynamicObject(8557,388.7998000,-2017.8136000,73.2844000,0.0000000,288.0000000,90.0000000); //amt 8557(1763)
	CreateDynamicObject(8557,388.3831500,-2016.8654800,76.8230900,0.0000000,282.0000000,90.0000000); //amt 8557(1764)
	CreateDynamicObject(8557,387.9664600,-2016.2923600,80.4415000,0.0000000,276.0000000,90.0000000); //amt 8557(1765)
	CreateDynamicObject(8557,387.5498000,-2016.1005900,84.1000000,0.0000000,270.0000000,90.0000000); //amt 8557(1766)
	CreateDynamicObject(8557,387.1331500,-2016.2923600,87.7585000,0.0000000,264.0000000,90.0000000); //amt 8557(1767)
	CreateDynamicObject(8557,386.7164600,-2016.8654800,91.3769100,0.0000000,258.0000000,90.0000000); //amt 8557(1768)
	CreateDynamicObject(8557,386.2998000,-2017.8136000,94.9155900,0.0000000,252.0000000,90.0000000); //amt 8557(1769)
	CreateDynamicObject(8557,385.8831500,-2019.1264600,98.3357800,0.0000000,246.0000000,90.0000000); //amt 8557(1770)
	CreateDynamicObject(8557,385.4664600,-2020.7896700,101.6000000,0.0000000,240.0000000,90.0000000); //amt 8557(1771)
	CreateDynamicObject(8557,385.0498000,-2022.7850300,104.6724900,0.0000000,234.0000000,90.0000000); //amt 8557(1772)
	CreateDynamicObject(8557,384.6331500,-2025.0905800,107.5195700,0.0000000,228.0000000,90.0000000); //amt 8557(1773)
	CreateDynamicObject(8557,384.2164600,-2027.6810300,110.1100600,0.0000000,222.0000000,90.0000000); //amt 8557(1774)
	CreateDynamicObject(8557,383.7998000,-2030.5280800,112.4155900,0.0000000,216.0000000,90.0000000); //amt 8557(1775)
	CreateDynamicObject(8557,383.3831500,-2033.6005900,114.4108900,0.0000000,210.0000000,90.0000000); //amt 8557(1776)
	CreateDynamicObject(8557,382.9664600,-2036.8647500,116.0740900,0.0000000,204.0000000,90.0000000); //amt 8557(1777)
	CreateDynamicObject(8557,382.5498000,-2040.2850300,117.3869800,0.0000000,198.0000000,90.0000000); //amt 8557(1778)
	CreateDynamicObject(8557,382.1331500,-2043.8237300,118.3351700,0.0000000,192.0000000,90.0000000); //amt 8557(1779)
	CreateDynamicObject(8557,381.7164600,-2047.4421400,118.9082600,0.0000000,186.0000000,90.0000000); //amt 8557(1780)
	CreateDynamicObject(8557,381.2998000,-2051.1005900,119.1000000,0.0000000,180.0000000,90.0000000); //amt 8557(1781)
	CreateDynamicObject(8557,380.8831500,-2054.7590300,118.9082600,0.0000000,174.0000000,90.0000000); //amt 8557(1782)
	CreateDynamicObject(8557,380.4664600,-2058.3774400,118.3351700,0.0000000,168.0000000,90.0000000); //amt 8557(1783)
	CreateDynamicObject(8557,380.0498000,-2061.9162600,117.3869800,0.0000000,162.0000000,90.0000000); //amt 8557(1784)
	CreateDynamicObject(8557,379.6331500,-2065.3364300,116.0740900,0.0000000,156.0000000,90.0000000); //amt 8557(1785)
	CreateDynamicObject(8557,379.2164600,-2068.6005900,114.4108900,0.0000000,150.0000000,90.0000000); //amt 8557(1786)
	CreateDynamicObject(8557,378.7998000,-2071.6731000,112.4155900,0.0000000,144.0000000,90.0000000); //amt 8557(1787)
	CreateDynamicObject(8557,378.3831500,-2074.5202600,110.1100600,0.0000000,138.0000000,90.0000000); //amt 8557(1788)
	CreateDynamicObject(8557,377.9664600,-2077.1106000,107.5195700,0.0000000,132.0000000,90.0000000); //amt 8557(1789)
	CreateDynamicObject(8557,377.5498000,-2079.4162600,104.6724900,0.0000000,126.0000000,90.0000000); //amt 8557(1790)
	CreateDynamicObject(8557,377.1331500,-2081.4113800,101.6000000,0.0000000,120.0000000,90.0000000); //amt 8557(1791)
	CreateDynamicObject(8557,376.7164600,-2083.0747100,98.3357800,0.0000000,114.0000000,90.0000000); //amt 8557(1792)
	CreateDynamicObject(8557,376.2998000,-2084.3874500,94.9155900,0.0000000,108.0000000,90.0000000); //amt 8557(1793)
	CreateDynamicObject(8557,375.8831500,-2085.3356900,91.3769100,0.0000000,102.0000000,90.0000000); //amt 8557(1794)
	CreateDynamicObject(8557,375.4664600,-2085.9089400,87.7585000,0.0000000,96.0000000,90.0000000); //amt 8557(1795)
	CreateDynamicObject(8557,375.0498000,-2086.1005900,84.1000000,0.0000000,90.0000000,90.0000000); //amt 8557(1796)
	CreateDynamicObject(8557,374.6331500,-2085.9089400,80.4415000,0.0000000,84.0000000,90.0000000); //amt 8557(1797)
	CreateDynamicObject(8557,374.2164600,-2085.3356900,76.8230900,0.0000000,78.0000000,90.0000000); //amt 8557(1798)
	CreateDynamicObject(8557,373.7998000,-2084.3874500,73.2844000,0.0000000,72.0000000,90.0000000); //amt 8557(1799)
	CreateDynamicObject(8557,373.3831500,-2083.0747100,69.8642100,0.0000000,66.0000000,90.0000000); //amt 8557(1800)
	CreateDynamicObject(8557,372.9664600,-2081.4113800,66.6000000,0.0000000,60.0000000,90.0000000); //amt 8557(1801)
	CreateDynamicObject(8557,372.5498000,-2079.4162600,63.5275200,0.0000000,54.0000000,90.0000000); //amt 8557(1802)
	CreateDynamicObject(8557,372.1331500,-2077.1106000,60.6804300,0.0000000,48.0000000,90.0000000); //amt 8557(1803)
	CreateDynamicObject(8557,371.7164600,-2074.5202600,58.0899300,0.0000000,42.0000000,90.0000000); //amt 8557(1804)
	CreateDynamicObject(8557,371.2998000,-2071.6731000,55.7844000,0.0000000,36.0000000,90.0000000); //amt 8557(1805)
	CreateDynamicObject(8557,370.8831500,-2068.6005900,53.7891100,0.0000000,30.0000000,90.0000000); //amt 8557(1806)
	CreateDynamicObject(8557,370.4664600,-2065.3364300,52.1259100,0.0000000,24.0000000,90.0000000); //amt 8557(1807)
	CreateDynamicObject(8557,370.0498000,-2061.9162600,50.8130200,0.0000000,18.0000000,90.0000000); //amt 8557(1808)
	CreateDynamicObject(8557,369.6331500,-2058.3774400,49.8648300,0.0000000,12.0000000,90.0000000); //amt 8557(1809)
	CreateDynamicObject(8557,369.2164600,-2054.7590300,49.2917300,0.0000000,6.0000000,90.0000000); //amt 8557(1810)
	CreateDynamicObject(8557,368.7998000,-2051.1005900,49.1000000,0.0000000,0.0000000,90.0000000); //amt 8557(1811)	
	
	// YENX - 2
		//YeNx2//
	CreateDynamicObject(8557,-2733.1999500,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (1)
	CreateDynamicObject(8557,-2738.3000500,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (2)
	CreateDynamicObject(8557,-2743.4001500,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(3)
	CreateDynamicObject(8557,-2748.5002400,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(4)
	CreateDynamicObject(8557,-2753.6003400,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(5)
	CreateDynamicObject(8557,-2758.7004400,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(6)
	CreateDynamicObject(8557,-2763.8005400,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(7)
	CreateDynamicObject(8557,-2768.9003900,1474.7998000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(8)
	CreateDynamicObject(8557,-2774.0007300,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(9)
	CreateDynamicObject(8557,-2779.1008300,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(10)
	CreateDynamicObject(8557,-2784.2009300,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(11)
	CreateDynamicObject(8557,-2789.3007800,1474.7998000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(12)
	CreateDynamicObject(8557,-2794.4011200,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(13)
	CreateDynamicObject(8557,-2799.5012200,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(14)
	CreateDynamicObject(8557,-2804.6005900,1474.7998000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(15)
	CreateDynamicObject(8557,-2809.7014200,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(16)
	CreateDynamicObject(8557,-2814.8015100,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(17)
	CreateDynamicObject(8557,-2819.9016100,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(18)
	CreateDynamicObject(8557,-2825.0009800,1474.7998000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(19)
	CreateDynamicObject(8557,-2830.1018100,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(20)
	CreateDynamicObject(8557,-2835.2019000,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(21)
	CreateDynamicObject(8557,-2840.3020000,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(22)
	CreateDynamicObject(8557,-2845.4021000,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(23)
	CreateDynamicObject(8557,-2850.5022000,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(24)
	CreateDynamicObject(8557,-2855.6022900,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(25)
	CreateDynamicObject(8557,-2860.7023900,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(26)
	CreateDynamicObject(8557,-2865.8024900,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(27)
	CreateDynamicObject(8557,-2870.9025900,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(28)
	CreateDynamicObject(8557,-2876.0019500,1474.7998000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(29)
	CreateDynamicObject(8557,-2881.1027800,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(30)
	CreateDynamicObject(8557,-2886.2021500,1474.7998000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(31)
	CreateDynamicObject(8557,-2891.3029800,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(32)
	CreateDynamicObject(8557,-2896.4023400,1474.7998000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(33)
	CreateDynamicObject(8557,-2901.5031700,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(34)
	CreateDynamicObject(8557,-2906.6032700,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(35)
	CreateDynamicObject(8557,-2911.7033700,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(36)
	CreateDynamicObject(8557,-2916.8034700,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(37)
	CreateDynamicObject(8557,-2921.9035600,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(38)
	CreateDynamicObject(8557,-2927.0036600,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(39)
	CreateDynamicObject(8557,-2932.1037600,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(40)
	CreateDynamicObject(8557,-2937.2038600,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(41)
	CreateDynamicObject(8557,-2942.3039600,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(42)
	CreateDynamicObject(8557,-2947.4040500,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(43)
	CreateDynamicObject(8557,-2952.5041500,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(44)
	CreateDynamicObject(8557,-2957.6042500,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(45)
	CreateDynamicObject(8557,-2962.7043500,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(46)
	CreateDynamicObject(8557,-2967.8044400,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(47)
	CreateDynamicObject(8557,-2972.9045400,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(48)
	CreateDynamicObject(8557,-2978.0046400,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(49)
	CreateDynamicObject(8557,-2983.1047400,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(50)
	CreateDynamicObject(8557,-2988.2048300,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(51)
	CreateDynamicObject(8557,-2993.3049300,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(52)
	CreateDynamicObject(8557,-2998.4050300,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(53)
	CreateDynamicObject(8557,-3003.5051300,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(54)
	CreateDynamicObject(8557,-3008.6052200,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(55)
	CreateDynamicObject(8557,-3013.7053200,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(56)
	CreateDynamicObject(8557,-3018.8054200,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(57)
	CreateDynamicObject(8557,-3023.9055200,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(58)
	CreateDynamicObject(8557,-3029.0056200,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(59)
	CreateDynamicObject(8557,-3034.1057100,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(60)
	CreateDynamicObject(8557,-3039.2058100,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(61)
	CreateDynamicObject(8557,-3044.3059100,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(62)
	CreateDynamicObject(8557,-3049.4060100,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(63)
	CreateDynamicObject(8557,-3054.5061000,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(64)
	CreateDynamicObject(8557,-3059.6062000,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(65)
	CreateDynamicObject(8557,-3064.7063000,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(66)
	CreateDynamicObject(8557,-3069.8064000,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(67)
	CreateDynamicObject(8557,-3074.9064900,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(68)
	CreateDynamicObject(8557,-3080.0065900,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(69)
	CreateDynamicObject(8557,-3085.1066900,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(70)
	CreateDynamicObject(8557,-3090.2067900,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(71)
	CreateDynamicObject(8557,-3095.3000500,1474.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(72)
	CreateDynamicObject(8557,-3097.8740200,1475.8656000,1.3663000,2.9510000,0.0000000,90.0000000); //amt 8557(73)
	CreateDynamicObject(8557,-3100.4411600,1476.9311500,1.5650100,5.9020000,0.0000000,90.0000000); //amt 8557(74)
	CreateDynamicObject(8557,-3102.9946300,1477.9968300,1.8956100,8.8520000,0.0000000,90.0000000); //amt 8557(75)
	CreateDynamicObject(8557,-3105.5275900,1479.0623800,2.3572200,11.8030000,0.0000000,90.0000000); //amt 8557(76)
	CreateDynamicObject(8557,-3108.0336900,1480.1279300,2.9486100,14.7540000,0.0000000,90.0000000); //amt 8557(77)
	CreateDynamicObject(8557,-3110.5058600,1481.1934800,3.6682300,17.7050000,0.0000000,90.0000000); //amt 8557(78)
	CreateDynamicObject(8557,-3112.9377400,1482.2590300,4.5141600,20.6560000,0.0000000,90.0000000); //amt 8557(79)
	CreateDynamicObject(8557,-3115.3227500,1483.3245800,5.4841500,23.6070000,0.0000000,90.0000000); //amt 8557(80)
	CreateDynamicObject(8557,-3117.6547900,1484.3902600,6.5756500,26.5570000,0.0000000,90.0000000); //amt 8557(81)
	CreateDynamicObject(8557,-3119.9274900,1485.4558100,7.7857400,29.5080000,0.0000000,90.0000000); //amt 8557(82)
	CreateDynamicObject(8557,-3122.1347700,1486.5213600,9.1112200,32.4590000,0.0000000,90.0000000); //amt 8557(83)
	CreateDynamicObject(8557,-3124.2710000,1487.5869100,10.5485800,35.4100000,0.0000000,90.0000000); //amt 8557(84)
	CreateDynamicObject(8557,-3126.3305700,1488.6524700,12.0940100,38.3610000,0.0000000,90.0000000); //amt 8557(85)
	CreateDynamicObject(8557,-3128.3076200,1489.7181400,13.7434000,41.3110000,0.0000000,90.0000000); //amt 8557(86)
	CreateDynamicObject(8557,-3130.1972700,1490.7836900,15.4923900,44.2620000,0.0000000,90.0000000); //amt 8557(87)
	CreateDynamicObject(8557,-3131.9943800,1491.8492400,17.3363300,47.2130000,0.0000000,90.0000000); //amt 8557(88)
	CreateDynamicObject(8557,-3133.6940900,1492.9147900,19.2703400,50.1640000,0.0000000,90.0000000); //amt 8557(89)
	CreateDynamicObject(8557,-3135.2919900,1493.9803500,21.2892900,53.1150000,0.0000000,90.0000000); //amt 8557(90)
	CreateDynamicObject(8557,-3136.7839400,1495.0459000,23.3878100,56.0660000,0.0000000,90.0000000); //amt 8557(91)
	CreateDynamicObject(8557,-3138.1657700,1496.1115700,25.5603600,59.0160000,0.0000000,90.0000000); //amt 8557(92)
	CreateDynamicObject(8557,-3139.4340800,1497.1771200,27.8011600,61.9670000,0.0000000,90.0000000); //amt 8557(93)
	CreateDynamicObject(8557,-3140.5852100,1498.2426800,30.1042800,64.9180000,0.0000000,90.0000000); //amt 8557(94)
	CreateDynamicObject(8557,-3141.6162100,1499.3082300,32.4636000,67.8690000,0.0000000,90.0000000); //amt 8557(95)
	CreateDynamicObject(8557,-3142.5244100,1500.3737800,34.8728800,70.8200000,0.0000000,90.0000000); //amt 8557(96)
	CreateDynamicObject(8557,-3143.3076200,1501.4394500,37.3257200,73.7710000,0.0000000,90.0000000); //amt 8557(97)
	CreateDynamicObject(8557,-3143.9633800,1502.5050000,39.8156100,76.7210000,0.0000000,90.0000000); //amt 8557(98)
	CreateDynamicObject(8557,-3144.4899900,1503.5705600,42.3359600,79.6720000,0.0000000,90.0000000); //amt 8557(99)
	CreateDynamicObject(8557,-3144.8862300,1504.6361100,44.8800800,82.6230000,0.0000000,90.0000000); //amt 8557(100)
	CreateDynamicObject(8557,-3145.1508800,1505.7016600,47.4412300,85.5740000,0.0000000,90.0000000); //amt 8557(101)
	CreateDynamicObject(8557,-3145.2834500,1506.7672100,50.0126000,88.5250000,0.0000000,90.0000000); //amt 8557(102)
	CreateDynamicObject(8557,-3145.2834500,1507.8328900,52.5873900,88.5250000,180.0000000,270.0000000); //amt 8557(103)
	CreateDynamicObject(8557,-3145.1508800,1508.8984400,55.1587700,85.5740000,180.0000000,270.0000000); //amt 8557(104)
	CreateDynamicObject(8557,-3144.8862300,1509.9639900,57.7199200,82.6230000,180.0000000,270.0000000); //amt 8557(105)
	CreateDynamicObject(8557,-3144.4899900,1511.0295400,60.2640400,79.6720000,180.0000000,270.0000000); //amt 8557(106)
	CreateDynamicObject(8557,-3143.9633800,1512.0950900,62.7843900,76.7210000,180.0000000,270.0000000); //amt 8557(107)
	CreateDynamicObject(8557,-3143.3076200,1513.1606400,65.2742800,73.7710000,180.0000000,270.0000000); //amt 8557(108)
	CreateDynamicObject(8557,-3142.5244100,1514.2263200,67.7271200,70.8200000,180.0000000,270.0000000); //amt 8557(109)
	CreateDynamicObject(8557,-3141.6162100,1515.2918700,70.1364000,67.8690000,180.0000000,270.0000000); //amt 8557(110)
	CreateDynamicObject(8557,-3140.5852100,1516.3574200,72.4957200,64.9180000,180.0000000,270.0000000); //amt 8557(111)
	CreateDynamicObject(8557,-3139.4340800,1517.4229700,74.7988400,61.9670000,180.0000000,270.0000000); //amt 8557(112)
	CreateDynamicObject(8557,-3138.1657700,1518.4885300,77.0396400,59.0160000,180.0000000,270.0000000); //amt 8557(113)
	CreateDynamicObject(8557,-3136.7839400,1519.5542000,79.2121900,56.0660000,180.0000000,270.0000000); //amt 8557(114)
	CreateDynamicObject(8557,-3135.2919900,1520.6197500,81.3107100,53.1150000,180.0000000,270.0000000); //amt 8557(115)
	CreateDynamicObject(8557,-3133.6940900,1521.6853000,83.3296600,50.1640000,180.0000000,270.0000000); //amt 8557(116)
	CreateDynamicObject(8557,-3131.9943800,1522.7508500,85.2636700,47.2130000,180.0000000,270.0000000); //amt 8557(117)
	CreateDynamicObject(8557,-3130.1972700,1523.8164100,87.1076100,44.2620000,180.0000000,270.0000000); //amt 8557(118)
	CreateDynamicObject(8557,-3128.3076200,1524.8819600,88.8566000,41.3110000,180.0000000,270.0000000); //amt 8557(119)
	CreateDynamicObject(8557,-3126.3305700,1525.9476300,90.5060000,38.3610000,180.0000000,270.0000000); //amt 8557(120)
	CreateDynamicObject(8557,-3124.2710000,1527.0131800,92.0514200,35.4100000,180.0000000,270.0000000); //amt 8557(121)
	CreateDynamicObject(8557,-3122.1347700,1528.0787400,93.4887800,32.4590000,180.0000000,270.0000000); //amt 8557(122)
	CreateDynamicObject(8557,-3119.9274900,1529.1442900,94.8142600,29.5080000,180.0000000,270.0000000); //amt 8557(123)
	CreateDynamicObject(8557,-3117.6547900,1530.2098400,96.0243600,26.5570000,180.0000000,270.0000000); //amt 8557(124)
	CreateDynamicObject(8557,-3115.3227500,1531.2755100,97.1158400,23.6070000,180.0000000,270.0000000); //amt 8557(125)
	CreateDynamicObject(8557,-3112.9377400,1532.3410600,98.0858500,20.6560000,180.0000000,270.0000000); //amt 8557(126)
	CreateDynamicObject(8557,-3110.5058600,1533.4066200,98.9317700,17.7050000,180.0000000,270.0000000); //amt 8557(127)
	CreateDynamicObject(8557,-3108.0336900,1534.4721700,99.6513900,14.7540000,180.0000000,270.0000000); //amt 8557(128)
	CreateDynamicObject(8557,-3105.5275900,1535.5377200,100.2427900,11.8030000,180.0000000,270.0000000); //amt 8557(129)
	CreateDynamicObject(8557,-3102.9946300,1536.6032700,100.7044000,8.8520000,180.0000000,270.0000000); //amt 8557(130)
	CreateDynamicObject(8557,-3100.4411600,1537.6689500,101.0350000,5.9020000,180.0000000,270.0000000); //amt 8557(131)
	CreateDynamicObject(8557,-3097.8740200,1538.7345000,101.2337100,2.9510000,180.0000000,270.0000000); //amt 8557(132)
	CreateDynamicObject(8557,-3095.3000500,1539.8000500,101.3000000,0.0000000,180.0000000,270.0000000); //amt 8557(133)
	CreateDynamicObject(8557,-3092.7260700,1540.8656000,101.2337100,357.0490000,180.0000000,270.0000000); //amt 8557(134)
	CreateDynamicObject(8557,-3090.1589400,1541.9311500,101.0350000,354.0980000,180.0000000,270.0000000); //amt 8557(135)
	CreateDynamicObject(8557,-3087.6054700,1542.9968300,100.7044000,351.1480000,180.0000000,270.0000000); //amt 8557(136)
	CreateDynamicObject(8557,-3085.0725100,1544.0623800,100.2427900,348.1970000,180.0000000,270.0000000); //amt 8557(137)
	CreateDynamicObject(8557,-3082.5664100,1545.1279300,99.6513900,345.2460000,180.0000000,270.0000000); //amt 8557(138)
	CreateDynamicObject(8557,-3080.0942400,1546.1934800,98.9317700,342.2950000,180.0000000,270.0000000); //amt 8557(139)
	CreateDynamicObject(8557,-3077.6623500,1547.2590300,98.0858500,339.3440000,180.0000000,270.0000000); //amt 8557(140)
	CreateDynamicObject(8557,-3075.2773400,1548.3245800,97.1158400,336.3930000,180.0000000,270.0000000); //amt 8557(141)
	CreateDynamicObject(8557,-3072.9453100,1549.3902600,96.0243600,333.4430000,180.0000000,270.0000000); //amt 8557(142)
	CreateDynamicObject(8557,-3070.6726100,1550.4558100,94.8142600,330.4920000,180.0000000,270.0000000); //amt 8557(143)
	CreateDynamicObject(8557,-3068.4653300,1551.5213600,93.4887800,327.5410000,180.0000000,270.0000000); //amt 8557(144)
	CreateDynamicObject(8557,-3066.3291000,1552.5869100,92.0514200,324.5900000,180.0000000,270.0000000); //amt 8557(145)
	CreateDynamicObject(8557,-3064.2695300,1553.6524700,90.5060000,321.6390000,180.0000000,270.0000000); //amt 8557(146)
	CreateDynamicObject(8557,-3062.2924800,1554.7180200,88.8566000,318.6890000,180.0000000,270.0000000); //amt 8557(147)
	CreateDynamicObject(8557,-3060.4028300,1555.7836900,87.1076100,315.7380000,180.0000000,270.0000000); //amt 8557(148)
	CreateDynamicObject(8557,-3058.6057100,1556.8492400,85.2636700,312.7870000,180.0000000,270.0000000); //amt 8557(149)
	CreateDynamicObject(8557,-3056.9060100,1557.9147900,83.3296600,309.8360000,180.0000000,270.0000000); //amt 8557(150)
	CreateDynamicObject(8557,-3055.3081100,1558.9803500,81.3107100,306.8850000,180.0000000,270.0000000); //amt 8557(151)
	CreateDynamicObject(8557,-3053.8161600,1560.0459000,79.2121900,303.9340000,180.0000000,270.0000000); //amt 8557(152)
	CreateDynamicObject(8557,-3052.4343300,1561.1115700,77.0396400,300.9840000,180.0000000,270.0000000); //amt 8557(153)
	CreateDynamicObject(8557,-3051.1660200,1562.1771200,74.7988400,298.0330000,180.0000000,270.0000000); //amt 8557(154)
	CreateDynamicObject(8557,-3050.0148900,1563.2426800,72.4957200,295.0820000,180.0000000,270.0000000); //amt 8557(155)
	CreateDynamicObject(8557,-3048.9838900,1564.3082300,70.1364000,292.1310000,180.0000000,270.0000000); //amt 8557(156)
	CreateDynamicObject(8557,-3048.0756800,1565.3737800,67.7271200,289.1800000,180.0000000,270.0000000); //amt 8557(157)
	CreateDynamicObject(8557,-3047.2924800,1566.4394500,65.2742800,286.2290000,180.0000000,270.0000000); //amt 8557(158)
	CreateDynamicObject(8557,-3046.6367200,1567.5050000,62.7843900,283.2790000,180.0000000,270.0000000); //amt 8557(159)
	CreateDynamicObject(8557,-3046.1101100,1568.5705600,60.2640400,280.3280000,180.0000000,270.0000000); //amt 8557(160)
	CreateDynamicObject(8557,-3045.7138700,1569.6361100,57.7199200,277.3770000,180.0000000,270.0000000); //amt 8557(161)
	CreateDynamicObject(8557,-3045.4492200,1570.7016600,55.1587700,274.4260000,180.0000000,270.0000000); //amt 8557(162)
	CreateDynamicObject(8557,-3045.3166500,1571.7672100,52.5873900,271.4750000,180.0000000,270.0000000); //amt 8557(163)
	CreateDynamicObject(8557,-3045.3166500,1572.8328900,50.0126000,271.4750000,0.0000000,90.0000000); //amt 8557(164)
	CreateDynamicObject(8557,-3045.4492200,1573.8984400,47.4412300,274.4260000,0.0000000,90.0000000); //amt 8557(165)
	CreateDynamicObject(8557,-3045.7138700,1574.9639900,44.8800800,277.3770000,0.0000000,90.0000000); //amt 8557(166)
	CreateDynamicObject(8557,-3046.1101100,1576.0295400,42.3359600,280.3280000,0.0000000,90.0000000); //amt 8557(167)
	CreateDynamicObject(8557,-3046.6367200,1577.0950900,39.8156100,283.2790000,0.0000000,90.0000000); //amt 8557(168)
	CreateDynamicObject(8557,-3047.2924800,1578.1606400,37.3257200,286.2290000,0.0000000,90.0000000); //amt 8557(169)
	CreateDynamicObject(8557,-3048.0756800,1579.2263200,34.8728800,289.1800000,0.0000000,90.0000000); //amt 8557(170)
	CreateDynamicObject(8557,-3048.9838900,1580.2918700,32.4636000,292.1310000,0.0000000,90.0000000); //amt 8557(171)
	CreateDynamicObject(8557,-3050.0148900,1581.3574200,30.1042800,295.0820000,0.0000000,90.0000000); //amt 8557(172)
	CreateDynamicObject(8557,-3051.1660200,1582.4229700,27.8011600,298.0330000,0.0000000,90.0000000); //amt 8557(173)
	CreateDynamicObject(8557,-3052.4343300,1583.4885300,25.5603600,300.9840000,0.0000000,90.0000000); //amt 8557(174)
	CreateDynamicObject(8557,-3053.8161600,1584.5542000,23.3878100,303.9340000,0.0000000,90.0000000); //amt 8557(175)
	CreateDynamicObject(8557,-3055.3081100,1585.6197500,21.2892900,306.8850000,0.0000000,90.0000000); //amt 8557(176)
	CreateDynamicObject(8557,-3056.9060100,1586.6853000,19.2703400,309.8360000,0.0000000,90.0000000); //amt 8557(177)
	CreateDynamicObject(8557,-3058.6057100,1587.7508500,17.3363300,312.7870000,0.0000000,90.0000000); //amt 8557(178)
	CreateDynamicObject(8557,-3060.4028300,1588.8164100,15.4923900,315.7380000,0.0000000,90.0000000); //amt 8557(179)
	CreateDynamicObject(8557,-3062.2924800,1589.8820800,13.7434000,318.6890000,0.0000000,90.0000000); //amt 8557(180)
	CreateDynamicObject(8557,-3064.2695300,1590.9476300,12.0940100,321.6390000,0.0000000,90.0000000); //amt 8557(181)
	CreateDynamicObject(8557,-3066.3291000,1592.0131800,10.5485800,324.5900000,0.0000000,90.0000000); //amt 8557(182)
	CreateDynamicObject(8557,-3068.4653300,1593.0787400,9.1112200,327.5410000,0.0000000,90.0000000); //amt 8557(183)
	CreateDynamicObject(8557,-3070.6726100,1594.1442900,7.7857400,330.4920000,0.0000000,90.0000000); //amt 8557(184)
	CreateDynamicObject(8557,-3072.9453100,1595.2098400,6.5756500,333.4430000,0.0000000,90.0000000); //amt 8557(185)
	CreateDynamicObject(8557,-3075.2773400,1596.2755100,5.4841500,336.3930000,0.0000000,90.0000000); //amt 8557(186)
	CreateDynamicObject(8557,-3077.6623500,1597.3410600,4.5141600,339.3440000,0.0000000,90.0000000); //amt 8557(187)
	CreateDynamicObject(8557,-3080.0942400,1598.4066200,3.6682300,342.2950000,0.0000000,90.0000000); //amt 8557(188)
	CreateDynamicObject(8557,-3082.5664100,1599.4721700,2.9486100,345.2460000,0.0000000,90.0000000); //amt 8557(189)
	CreateDynamicObject(8557,-3085.0725100,1600.5377200,2.3572200,348.1970000,0.0000000,90.0000000); //amt 8557(190)
	CreateDynamicObject(8557,-3087.6054700,1601.6032700,1.8956100,351.1480000,0.0000000,90.0000000); //amt 8557(191)
	CreateDynamicObject(8557,-3090.1589400,1602.6689500,1.5650100,354.0980000,0.0000000,90.0000000); //amt 8557(192)
	CreateDynamicObject(8557,-3092.7260700,1603.7345000,1.3663000,357.0490000,0.0000000,90.0000000); //amt 8557(193)
	CreateDynamicObject(8557,-3095.3000500,1604.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(194)
	CreateDynamicObject(8557,-3097.8740200,1605.8656000,1.3663000,2.9510000,0.0000000,90.0000000); //amt 8557(195)
	CreateDynamicObject(8557,-3100.4411600,1606.9311500,1.5650100,5.9020000,0.0000000,90.0000000); //amt 8557(196)
	CreateDynamicObject(8557,-3102.9946300,1607.9968300,1.8956100,8.8520000,0.0000000,90.0000000); //amt 8557(197)
	CreateDynamicObject(8557,-3105.5275900,1609.0623800,2.3572200,11.8030000,0.0000000,90.0000000); //amt 8557(198)
	CreateDynamicObject(8557,-3108.0336900,1610.1279300,2.9486100,14.7540000,0.0000000,90.0000000); //amt 8557(199)
	CreateDynamicObject(8557,-3110.5058600,1611.1934800,3.6682300,17.7050000,0.0000000,90.0000000); //amt 8557(200)
	CreateDynamicObject(8557,-3112.9377400,1612.2590300,4.5141600,20.6560000,0.0000000,90.0000000); //amt 8557(201)
	CreateDynamicObject(8557,-3115.3227500,1613.3247100,5.4841500,23.6070000,0.0000000,90.0000000); //amt 8557(202)
	CreateDynamicObject(8557,-3117.6547900,1614.3902600,6.5756500,26.5570000,0.0000000,90.0000000); //amt 8557(203)
	CreateDynamicObject(8557,-3119.9274900,1615.4558100,7.7857400,29.5080000,0.0000000,90.0000000); //amt 8557(204)
	CreateDynamicObject(8557,-3122.1347700,1616.5213600,9.1112200,32.4590000,0.0000000,90.0000000); //amt 8557(205)
	CreateDynamicObject(8557,-3124.2710000,1617.5869100,10.5485800,35.4100000,0.0000000,90.0000000); //amt 8557(206)
	CreateDynamicObject(8557,-3126.3305700,1618.6524700,12.0940100,38.3610000,0.0000000,90.0000000); //amt 8557(207)
	CreateDynamicObject(8557,-3128.3076200,1619.7180200,13.7434000,41.3110000,0.0000000,90.0000000); //amt 8557(208)
	CreateDynamicObject(8557,-3130.1972700,1620.7836900,15.4923900,44.2620000,0.0000000,90.0000000); //amt 8557(209)
	CreateDynamicObject(8557,-3131.9943800,1621.8492400,17.3363300,47.2130000,0.0000000,90.0000000); //amt 8557(210)
	CreateDynamicObject(8557,-3133.6940900,1622.9147900,19.2703400,50.1640000,0.0000000,90.0000000); //amt 8557(211)
	CreateDynamicObject(8557,-3135.2919900,1623.9803500,21.2892900,53.1150000,0.0000000,90.0000000); //amt 8557(212)
	CreateDynamicObject(8557,-3136.7839400,1625.0459000,23.3878100,56.0660000,0.0000000,90.0000000); //amt 8557(213)
	CreateDynamicObject(8557,-3138.1657700,1626.1115700,25.5603600,59.0160000,0.0000000,90.0000000); //amt 8557(214)
	CreateDynamicObject(8557,-3139.4340800,1627.1771200,27.8011600,61.9670000,0.0000000,90.0000000); //amt 8557(215)
	CreateDynamicObject(8557,-3140.5852100,1628.2426800,30.1042800,64.9180000,0.0000000,90.0000000); //amt 8557(216)
	CreateDynamicObject(8557,-3141.6162100,1629.3082300,32.4636000,67.8690000,0.0000000,90.0000000); //amt 8557(217)
	CreateDynamicObject(8557,-3142.5244100,1630.3737800,34.8728800,70.8200000,0.0000000,90.0000000); //amt 8557(218)
	CreateDynamicObject(8557,-3143.3076200,1631.4394500,37.3257200,73.7710000,0.0000000,90.0000000); //amt 8557(219)
	CreateDynamicObject(8557,-3143.9633800,1632.5050000,39.8156100,76.7210000,0.0000000,90.0000000); //amt 8557(220)
	CreateDynamicObject(8557,-3144.4899900,1633.5705600,42.3359600,79.6720000,0.0000000,90.0000000); //amt 8557(221)
	CreateDynamicObject(8557,-3144.8862300,1634.6361100,44.8800800,82.6230000,0.0000000,90.0000000); //amt 8557(222)
	CreateDynamicObject(8557,-3145.1508800,1635.7016600,47.4412300,85.5740000,0.0000000,90.0000000); //amt 8557(223)
	CreateDynamicObject(8557,-3145.2834500,1636.7672100,50.0126000,88.5250000,0.0000000,90.0000000); //amt 8557(224)
	CreateDynamicObject(8557,-3145.2834500,1637.8328900,52.5873900,88.5250000,180.0000000,270.0000000); //amt 8557(225)
	CreateDynamicObject(8557,-3145.1508800,1638.8984400,55.1587700,85.5740000,180.0000000,270.0000000); //amt 8557(226)
	CreateDynamicObject(8557,-3144.8862300,1639.9639900,57.7199200,82.6230000,180.0000000,270.0000000); //amt 8557(227)
	CreateDynamicObject(8557,-3144.4899900,1641.0295400,60.2640400,79.6720000,180.0000000,270.0000000); //amt 8557(228)
	CreateDynamicObject(8557,-3143.9633800,1642.0950900,62.7843900,76.7210000,180.0000000,270.0000000); //amt 8557(229)
	CreateDynamicObject(8557,-3143.3076200,1643.1606400,65.2742800,73.7710000,180.0000000,270.0000000); //amt 8557(230)
	CreateDynamicObject(8557,-3142.5244100,1644.2263200,67.7271200,70.8200000,180.0000000,270.0000000); //amt 8557(231)
	CreateDynamicObject(8557,-3141.6162100,1645.2918700,70.1364000,67.8690000,180.0000000,270.0000000); //amt 8557(232)
	CreateDynamicObject(8557,-3140.5852100,1646.3574200,72.4957200,64.9180000,180.0000000,270.0000000); //amt 8557(233)
	CreateDynamicObject(8557,-3139.4340800,1647.4229700,74.7988400,61.9670000,180.0000000,270.0000000); //amt 8557(234)
	CreateDynamicObject(8557,-3138.1657700,1648.4885300,77.0396400,59.0160000,180.0000000,270.0000000); //amt 8557(235)
	CreateDynamicObject(8557,-3136.7839400,1649.5542000,79.2121900,56.0660000,180.0000000,270.0000000); //amt 8557(236)
	CreateDynamicObject(8557,-3135.2919900,1650.6197500,81.3107100,53.1150000,180.0000000,270.0000000); //amt 8557(237)
	CreateDynamicObject(8557,-3133.6940900,1651.6853000,83.3296600,50.1640000,180.0000000,270.0000000); //amt 8557(238)
	CreateDynamicObject(8557,-3131.9943800,1652.7508500,85.2636700,47.2130000,180.0000000,270.0000000); //amt 8557(239)
	CreateDynamicObject(8557,-3130.1972700,1653.8164100,87.1076100,44.2620000,180.0000000,270.0000000); //amt 8557(240)
	CreateDynamicObject(8557,-3128.3076200,1654.8820800,88.8566000,41.3110000,180.0000000,270.0000000); //amt 8557(241)
	CreateDynamicObject(8557,-3126.3305700,1655.9476300,90.5060000,38.3610000,180.0000000,270.0000000); //amt 8557(242)
	CreateDynamicObject(8557,-3124.2710000,1657.0131800,92.0514200,35.4100000,180.0000000,270.0000000); //amt 8557(243)
	CreateDynamicObject(8557,-3122.1347700,1658.0787400,93.4887800,32.4590000,180.0000000,270.0000000); //amt 8557(244)
	CreateDynamicObject(8557,-3119.9274900,1659.1442900,94.8142600,29.5080000,180.0000000,270.0000000); //amt 8557(245)
	CreateDynamicObject(8557,-3117.6547900,1660.2098400,96.0243600,26.5570000,180.0000000,270.0000000); //amt 8557(246)
	CreateDynamicObject(8557,-3115.3227500,1661.2753900,97.1158400,23.6070000,180.0000000,270.0000000); //amt 8557(247)
	CreateDynamicObject(8557,-3112.9377400,1662.3410600,98.0858500,20.6560000,180.0000000,270.0000000); //amt 8557(248)
	CreateDynamicObject(8557,-3110.5058600,1663.4066200,98.9317700,17.7050000,180.0000000,270.0000000); //amt 8557(249)
	CreateDynamicObject(8557,-3108.0336900,1664.4721700,99.6513900,14.7540000,180.0000000,270.0000000); //amt 8557(250)
	CreateDynamicObject(8557,-3105.5275900,1665.5377200,100.2427900,11.8030000,180.0000000,270.0000000); //amt 8557(251)
	CreateDynamicObject(8557,-3102.9946300,1666.6032700,100.7044000,8.8520000,180.0000000,270.0000000); //amt 8557(252)
	CreateDynamicObject(8557,-3100.4411600,1667.6689500,101.0350000,5.9020000,180.0000000,270.0000000); //amt 8557(253)
	CreateDynamicObject(8557,-3097.8740200,1668.7345000,101.2337100,2.9510000,180.0000000,270.0000000); //amt 8557(254)
	CreateDynamicObject(8557,-3095.3000500,1669.8000500,101.3000000,0.0000000,180.0000000,270.0000000); //amt 8557(255)
	CreateDynamicObject(8557,-3092.7260700,1670.8656000,101.2337100,357.0490000,180.0000000,270.0000000); //amt 8557(256)
	CreateDynamicObject(8557,-3090.1589400,1671.9311500,101.0350000,354.0980000,180.0000000,270.0000000); //amt 8557(257)
	CreateDynamicObject(8557,-3087.6054700,1672.9968300,100.7044000,351.1480000,180.0000000,270.0000000); //amt 8557(258)
	CreateDynamicObject(8557,-3085.0725100,1674.0623800,100.2427900,348.1970000,180.0000000,270.0000000); //amt 8557(259)
	CreateDynamicObject(8557,-3082.5664100,1675.1279300,99.6513900,345.2460000,180.0000000,270.0000000); //amt 8557(260)
	CreateDynamicObject(8557,-3080.0942400,1676.1934800,98.9317700,342.2950000,180.0000000,270.0000000); //amt 8557(261)
	CreateDynamicObject(8557,-3077.6623500,1677.2590300,98.0858500,339.3440000,180.0000000,270.0000000); //amt 8557(262)
	CreateDynamicObject(8557,-3075.2773400,1678.3247100,97.1158400,336.3930000,180.0000000,270.0000000); //amt 8557(263)
	CreateDynamicObject(8557,-3072.9453100,1679.3902600,96.0243600,333.4430000,180.0000000,270.0000000); //amt 8557(264)
	CreateDynamicObject(8557,-3070.6726100,1680.4558100,94.8142600,330.4920000,180.0000000,270.0000000); //amt 8557(265)
	CreateDynamicObject(8557,-3068.4653300,1681.5213600,93.4887800,327.5410000,180.0000000,270.0000000); //amt 8557(266)
	CreateDynamicObject(8557,-3066.3291000,1682.5869100,92.0514200,324.5900000,180.0000000,270.0000000); //amt 8557(267)
	CreateDynamicObject(8557,-3064.2695300,1683.6524700,90.5060000,321.6390000,180.0000000,270.0000000); //amt 8557(268)
	CreateDynamicObject(8557,-3062.2924800,1684.7180200,88.8566000,318.6890000,180.0000000,270.0000000); //amt 8557(269)
	CreateDynamicObject(8557,-3060.4028300,1685.7836900,87.1076100,315.7380000,180.0000000,270.0000000); //amt 8557(270)
	CreateDynamicObject(8557,-3058.6057100,1686.8492400,85.2636700,312.7870000,180.0000000,270.0000000); //amt 8557(271)
	CreateDynamicObject(8557,-3056.9060100,1687.9147900,83.3296600,309.8360000,180.0000000,270.0000000); //amt 8557(272)
	CreateDynamicObject(8557,-3055.3081100,1688.9803500,81.3107100,306.8850000,180.0000000,270.0000000); //amt 8557(273)
	CreateDynamicObject(8557,-3053.8161600,1690.0459000,79.2121900,303.9340000,180.0000000,270.0000000); //amt 8557(274)
	CreateDynamicObject(8557,-3052.4343300,1691.1115700,77.0396400,300.9840000,180.0000000,270.0000000); //amt 8557(275)
	CreateDynamicObject(8557,-3051.1660200,1692.1771200,74.7988400,298.0330000,180.0000000,270.0000000); //amt 8557(276)
	CreateDynamicObject(8557,-3050.0148900,1693.2426800,72.4957200,295.0820000,180.0000000,270.0000000); //amt 8557(277)
	CreateDynamicObject(8557,-3048.9838900,1694.3082300,70.1364000,292.1310000,180.0000000,270.0000000); //amt 8557(278)
	CreateDynamicObject(8557,-3048.0756800,1695.3737800,67.7271200,289.1800000,180.0000000,270.0000000); //amt 8557(279)
	CreateDynamicObject(8557,-3047.2924800,1696.4394500,65.2742800,286.2290000,180.0000000,270.0000000); //amt 8557(280)
	CreateDynamicObject(8557,-3046.6367200,1697.5050000,62.7843900,283.2790000,180.0000000,270.0000000); //amt 8557(281)
	CreateDynamicObject(8557,-3046.1101100,1698.5705600,60.2640400,280.3280000,180.0000000,270.0000000); //amt 8557(282)
	CreateDynamicObject(8557,-3045.7138700,1699.6361100,57.7199200,277.3770000,180.0000000,270.0000000); //amt 8557(283)
	CreateDynamicObject(8557,-3045.4492200,1700.7016600,55.1587700,274.4260000,180.0000000,270.0000000); //amt 8557(284)
	CreateDynamicObject(8557,-3045.3166500,1701.7672100,52.5873900,271.4750000,180.0000000,270.0000000); //amt 8557(285)
	CreateDynamicObject(8557,-3045.3166500,1702.8328900,50.0126000,271.4750000,0.0000000,90.0000000); //amt 8557(286)
	CreateDynamicObject(8557,-3045.4492200,1703.8984400,47.4412300,274.4260000,0.0000000,90.0000000); //amt 8557(287)
	CreateDynamicObject(8557,-3045.7138700,1704.9639900,44.8800800,277.3770000,0.0000000,90.0000000); //amt 8557(288)
	CreateDynamicObject(8557,-3046.1101100,1706.0295400,42.3359600,280.3280000,0.0000000,90.0000000); //amt 8557(289)
	CreateDynamicObject(8557,-3046.6367200,1707.0950900,39.8156100,283.2790000,0.0000000,90.0000000); //amt 8557(290)
	CreateDynamicObject(8557,-3047.2924800,1708.1606400,37.3257200,286.2290000,0.0000000,90.0000000); //amt 8557(291)
	CreateDynamicObject(8557,-3048.0756800,1709.2263200,34.8728800,289.1800000,0.0000000,90.0000000); //amt 8557(292)
	CreateDynamicObject(8557,-3048.9838900,1710.2918700,32.4636000,292.1310000,0.0000000,90.0000000); //amt 8557(293)
	CreateDynamicObject(8557,-3050.0148900,1711.3574200,30.1042800,295.0820000,0.0000000,90.0000000); //amt 8557(294)
	CreateDynamicObject(8557,-3051.1660200,1712.4229700,27.8011600,298.0330000,0.0000000,90.0000000); //amt 8557(295)
	CreateDynamicObject(8557,-3052.4343300,1713.4885300,25.5603600,300.9840000,0.0000000,90.0000000); //amt 8557(296)
	CreateDynamicObject(8557,-3053.8161600,1714.5542000,23.3878100,303.9340000,0.0000000,90.0000000); //amt 8557(297)
	CreateDynamicObject(8557,-3055.3081100,1715.6197500,21.2892900,306.8850000,0.0000000,90.0000000); //amt 8557(298)
	CreateDynamicObject(8557,-3056.9060100,1716.6853000,19.2703400,309.8360000,0.0000000,90.0000000); //amt 8557(299)
	CreateDynamicObject(8557,-3058.6057100,1717.7508500,17.3363300,312.7870000,0.0000000,90.0000000); //amt 8557(300)
	CreateDynamicObject(8557,-3060.4028300,1718.8164100,15.4923900,315.7380000,0.0000000,90.0000000); //amt 8557(301)
	CreateDynamicObject(8557,-3062.2924800,1719.8820800,13.7434000,318.6890000,0.0000000,90.0000000); //amt 8557(302)
	CreateDynamicObject(8557,-3064.2695300,1720.9476300,12.0940100,321.6390000,0.0000000,90.0000000); //amt 8557(303)
	CreateDynamicObject(8557,-3066.3291000,1722.0131800,10.5485800,324.5900000,0.0000000,90.0000000); //amt 8557(304)
	CreateDynamicObject(8557,-3068.4653300,1723.0787400,9.1112200,327.5410000,0.0000000,90.0000000); //amt 8557(305)
	CreateDynamicObject(8557,-3070.6726100,1724.1442900,7.7857400,330.4920000,0.0000000,90.0000000); //amt 8557(306)
	CreateDynamicObject(8557,-3072.9453100,1725.2098400,6.5756500,333.4430000,0.0000000,90.0000000); //amt 8557(307)
	CreateDynamicObject(8557,-3075.2773400,1726.2753900,5.4841500,336.3930000,0.0000000,90.0000000); //amt 8557(308)
	CreateDynamicObject(8557,-3077.6623500,1727.3410600,4.5141600,339.3440000,0.0000000,90.0000000); //amt 8557(309)
	CreateDynamicObject(8557,-3080.0942400,1728.4066200,3.6682300,342.2950000,0.0000000,90.0000000); //amt 8557(310)
	CreateDynamicObject(8557,-3082.5664100,1729.4721700,2.9486100,345.2460000,0.0000000,90.0000000); //amt 8557(311)
	CreateDynamicObject(8557,-3085.0725100,1730.5377200,2.3572200,348.1970000,0.0000000,90.0000000); //amt 8557(312)
	CreateDynamicObject(8557,-3087.6054700,1731.6032700,1.8956100,351.1480000,0.0000000,90.0000000); //amt 8557(313)
	CreateDynamicObject(8557,-3090.1589400,1732.6689500,1.5650100,354.0980000,0.0000000,90.0000000); //amt 8557(314)
	CreateDynamicObject(8557,-3092.7260700,1733.7345000,1.3663000,357.0490000,0.0000000,90.0000000); //amt 8557(315)
	CreateDynamicObject(8557,-3095.3000500,1734.8000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(316)
	CreateDynamicObject(8557,-3100.3000500,1735.6999500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(316)
	CreateDynamicObject(8557,-3105.3999000,1736.5999800,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(316)
	CreateDynamicObject(8557,-3110.4997600,1737.5000000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(319)
	CreateDynamicObject(8557,-3115.5996100,1738.4000200,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(320)
	CreateDynamicObject(8557,-3120.6994600,1739.3000500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(321)
	CreateDynamicObject(8557,-3125.7993200,1740.2000700,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(322)
	CreateDynamicObject(8557,-3130.8991700,1741.1001000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(323)
	CreateDynamicObject(8557,-3135.9990200,1742.0001200,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(324)
	CreateDynamicObject(8557,-3141.0988800,1742.9001500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(325)
	CreateDynamicObject(8557,-3146.1987300,1743.8001700,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(326)
	CreateDynamicObject(8557,-3151.2985800,1744.7002000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(327)
	CreateDynamicObject(8557,-3156.3984400,1745.6002200,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(328)
	CreateDynamicObject(8557,-3161.4982900,1746.5002400,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(329)
	CreateDynamicObject(8557,-3166.5981400,1747.4002700,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(330)
	CreateDynamicObject(8557,-3171.6980000,1748.3002900,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(331)
	CreateDynamicObject(8557,-3176.7978500,1749.2003200,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(332)
	CreateDynamicObject(8557,-3181.8977100,1750.1003400,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(333)
	CreateDynamicObject(8557,-3186.9975600,1751.0003700,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(334)
	CreateDynamicObject(8557,-3192.0974100,1751.9003900,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(335)
	CreateDynamicObject(8557,-3197.1972700,1752.8004200,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(336)
	CreateDynamicObject(8557,-3202.2971200,1753.7004400,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(337)
	CreateDynamicObject(8557,-3207.3969700,1754.6004600,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(338)
	CreateDynamicObject(8557,-3212.4968300,1755.5004900,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(339)
	CreateDynamicObject(8557,-3217.5966800,1756.4005100,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(340)
	CreateDynamicObject(8557,-3222.6965300,1757.3005400,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(341)
	CreateDynamicObject(8557,-3227.7963900,1758.2005600,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(342)
	CreateDynamicObject(8557,-3232.8962400,1759.1005900,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(343)
	CreateDynamicObject(8557,-3237.9960900,1760.0006100,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(344)
	CreateDynamicObject(8557,-3243.0959500,1760.9006300,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(345)
	CreateDynamicObject(8557,-3248.1958000,1761.8006600,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(346)
	CreateDynamicObject(8557,-3253.2956500,1762.7006800,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(347)
	CreateDynamicObject(8557,-3258.3955100,1763.6007100,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(348)
	CreateDynamicObject(8557,-3263.4953600,1764.5007300,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(349)
	CreateDynamicObject(8557,-3268.5952100,1765.4007600,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(350)
	CreateDynamicObject(8557,-3273.6950700,1766.3007800,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(351)
	CreateDynamicObject(8557,-3278.7949200,1767.2008100,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(352)
	CreateDynamicObject(8557,-3283.8947800,1768.1008300,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(353)
	CreateDynamicObject(8557,-3289.0000000,1768.0999800,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(353)
	CreateDynamicObject(8557,-3294.1052200,1768.0991200,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(355)
	CreateDynamicObject(8557,-3299.2104500,1768.0982700,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(356)
	CreateDynamicObject(8557,-3304.3156700,1768.0974100,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(357)
	CreateDynamicObject(8557,-3309.4209000,1768.0965600,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(358)
	CreateDynamicObject(8557,-3314.5261200,1768.0957000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(359)
	CreateDynamicObject(8557,-3319.6313500,1768.0948500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(360)
	CreateDynamicObject(8557,-3324.7365700,1768.0939900,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(361)
	CreateDynamicObject(8557,-3329.8418000,1768.0931400,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(362)
	CreateDynamicObject(8557,-3334.9470200,1768.0922900,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(363)
	CreateDynamicObject(8557,-3340.0522500,1768.0914300,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(364)
	CreateDynamicObject(8557,-3345.1574700,1768.0905800,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(365)
	CreateDynamicObject(8557,-3350.2627000,1768.0897200,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(366)
	CreateDynamicObject(8557,-3355.3679200,1768.0888700,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(367)
	CreateDynamicObject(8557,-3360.4731400,1768.0880100,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(368)
	CreateDynamicObject(8557,-3365.5783700,1768.0871600,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(369)
	CreateDynamicObject(8557,-3370.6835900,1768.0863000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(370)
	CreateDynamicObject(8557,-3375.7888200,1768.0854500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(371)
	CreateDynamicObject(8557,-3380.8940400,1768.0845900,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(372)
	CreateDynamicObject(8557,-3385.9992700,1768.0837400,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(373)
	CreateDynamicObject(8557,-3391.1044900,1768.0828900,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(374)
	CreateDynamicObject(8557,-3396.2097200,1768.0820300,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(375)
	CreateDynamicObject(8557,-3401.3149400,1768.0811800,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(376)
	CreateDynamicObject(8557,-3406.4201700,1768.0803200,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(377)
	CreateDynamicObject(8557,-3411.5253900,1768.0794700,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(378)
	CreateDynamicObject(8557,-3416.6306200,1768.0786100,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(379)
	CreateDynamicObject(8557,-3421.7358400,1768.0777600,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(380)
	CreateDynamicObject(8557,-3426.8410600,1768.0769000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(381)
	CreateDynamicObject(8557,-3431.9462900,1768.0760500,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(382)
	CreateDynamicObject(8557,-3437.0515100,1768.0752000,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(383)
	CreateDynamicObject(8557,-3442.1567400,1768.0743400,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(384)
	CreateDynamicObject(8557,-3447.2619600,1768.0734900,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(385)
	CreateDynamicObject(8557,-3452.3671900,1768.0726300,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(386)
	CreateDynamicObject(8557,-3457.4724100,1768.0717800,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(387)
	CreateDynamicObject(8557,-3462.5776400,1768.0709200,1.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(388)
	CreateDynamicObject(8557,-3467.7187500,1768.0709200,1.5650100,5.9020000,0.0000000,90.0000000); //amt 8557(390)
	CreateDynamicObject(8557,-3472.8051800,1768.0709200,2.3572200,11.8030000,0.0000000,90.0000000); //amt 8557(391)
	CreateDynamicObject(8557,-3477.7834500,1768.0709200,3.6682300,17.7050000,0.0000000,90.0000000); //amt 8557(392)
	CreateDynamicObject(8557,-3482.6003400,1768.0709200,5.4841500,23.6070000,0.0000000,90.0000000); //amt 8557(393)
	CreateDynamicObject(8557,-3487.2050800,1768.0709200,7.7857400,29.5080000,0.0000000,90.0000000); //amt 8557(394)
	CreateDynamicObject(8557,-3491.5485800,1768.0709200,10.5485800,35.4100000,0.0000000,90.0000000); //amt 8557(395)
	CreateDynamicObject(8557,-3495.5852100,1768.0709200,13.7434000,41.3110000,0.0000000,90.0000000); //amt 8557(396)
	CreateDynamicObject(8557,-3499.2719700,1768.0709200,17.3363300,47.2130000,0.0000000,90.0000000); //amt 8557(397)
	CreateDynamicObject(8557,-3502.5695800,1768.0709200,21.2892900,53.1150000,0.0000000,90.0000000); //amt 8557(398)
	CreateDynamicObject(8557,-3505.4433600,1768.0709200,25.5603600,59.0160000,0.0000000,90.0000000); //amt 8557(399)
	CreateDynamicObject(8557,-3507.8627900,1768.0709200,30.1042800,64.9180000,0.0000000,90.0000000); //amt 8557(400)
	CreateDynamicObject(8557,-3509.8020000,1768.0709200,34.8728800,70.8200000,0.0000000,90.0000000); //amt 8557(401)
	CreateDynamicObject(8557,-3511.2409700,1768.0709200,39.8156100,76.7210000,0.0000000,90.0000000); //amt 8557(402)
	CreateDynamicObject(8557,-3512.1638200,1768.0709200,44.8800800,82.6230000,0.0000000,90.0000000); //amt 8557(403)
	CreateDynamicObject(8557,-3512.5610400,1768.0709200,50.0126000,88.5250000,0.0000000,90.0000000); //amt 8557(404)
	CreateDynamicObject(6959,-3532.1999500,1768.0709200,95.0000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (1)
	CreateDynamicObject(6959,-3488.6999500,1768.0709200,95.0000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (2)
	CreateDynamicObject(8557,-3512.6999500,1768.0999800,55.1000000,88.5220000,0.0000000,90.0000000); //amt 8557(404)
	CreateDynamicObject(6959,-3573.5000000,1768.0709200,95.0000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (3)
	CreateDynamicObject(6959,-3614.8000500,1768.0709200,95.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(4)
	CreateDynamicObject(6959,-3656.1001000,1768.0709200,95.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(5)
	CreateDynamicObject(6959,-3697.4001500,1768.0709200,95.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(6)
	CreateDynamicObject(6959,-3738.7002000,1768.0709200,95.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(7)
	CreateDynamicObject(6959,-3770.8000500,1768.0709200,111.8000000,0.0000000,55.0000000,0.0000000); //amt 6959(7)
	CreateDynamicObject(6959,-3794.1992200,1768.0703100,145.3000000,0.0000000,54.9980000,0.0000000); //amt 6959(7)
	CreateDynamicObject(6959,-3817.5998500,1768.0709200,178.8000000,0.0000000,55.0000000,0.0000000); //amt 6959(15)
	CreateDynamicObject(6959,-3840.9997600,1768.0709200,212.3000000,0.0000000,55.0000000,0.0000000); //amt 6959(16)
	CreateDynamicObject(6959,-3864.3996600,1768.0709200,245.8000000,0.0000000,55.0000000,0.0000000); //amt 6959(17)
	CreateDynamicObject(6959,-3887.7988300,1768.0703100,279.2999900,0.0000000,54.9980000,0.0000000); //amt 6959(18)
	CreateDynamicObject(6959,-3911.1994600,1768.0709200,312.7999900,0.0000000,55.0000000,0.0000000); //amt 6959(19)
	CreateDynamicObject(8557,-3925.3103000,1768.0709200,330.2364200,55.0000000,0.0000000,90.0000000); //amt 8557(417)
	CreateDynamicObject(7657,-3707.3994100,1758.0000000,96.8000000,0.0000000,0.0000000,90.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-3723.1001000,1778.0999800,96.8000000,0.0000000,0.0000000,90.0000000); //object(plasticsgate1) (2)
	CreateDynamicObject(8557,1768.0709200,1768.0996100,59.5000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (16)
	CreateDynamicObject(8557,-4124.7998000,1768.0000000,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (23)
	CreateDynamicObject(8557,-3926.8410600,1768.0709200,332.3068500,52.0490000,0.0000000,90.0000000); //amt 8557(466)
	CreateDynamicObject(8557,-3928.4760700,1768.0709200,334.2957200,49.0980000,0.0000000,90.0000000); //amt 8557(467)
	CreateDynamicObject(8557,-3930.2116700,1768.0709200,336.1977800,46.1480000,0.0000000,90.0000000); //amt 8557(468)
	CreateDynamicObject(8557,-3932.0427200,1768.0709200,338.0080000,43.1970000,0.0000000,90.0000000); //amt 8557(469)
	CreateDynamicObject(8557,-3933.9643600,1768.0709200,339.7215300,40.2460000,0.0000000,90.0000000); //amt 8557(470)
	CreateDynamicObject(8557,-3935.9719200,1768.0709200,341.3338600,37.2950000,0.0000000,90.0000000); //amt 8557(471)
	CreateDynamicObject(8557,-3938.0598100,1768.0709200,342.8407300,34.3440000,0.0000000,90.0000000); //amt 8557(472)
	CreateDynamicObject(8557,-3940.2224100,1768.0709200,344.2381300,31.3930000,0.0000000,90.0000000); //amt 8557(473)
	CreateDynamicObject(8557,-3942.4541000,1768.0709200,345.5223400,28.4430000,0.0000000,90.0000000); //amt 8557(474)
	CreateDynamicObject(8557,-3944.7487800,1768.0709200,346.6899400,25.4920000,0.0000000,90.0000000); //amt 8557(475)
	CreateDynamicObject(8557,-3947.1005900,1768.0709200,347.7378800,22.5410000,0.0000000,90.0000000); //amt 8557(476)
	CreateDynamicObject(8557,-3949.5034200,1768.0709200,348.6633600,19.5900000,0.0000000,90.0000000); //amt 8557(477)
	CreateDynamicObject(8557,-3951.9506800,1768.0709200,349.4639000,16.6390000,0.0000000,90.0000000); //amt 8557(478)
	CreateDynamicObject(8557,-3954.4357900,1768.0709200,350.1374200,13.6890000,0.0000000,90.0000000); //amt 8557(479)
	CreateDynamicObject(8557,-3956.9521500,1768.0709200,350.6821300,10.7380000,0.0000000,90.0000000); //amt 8557(480)
	CreateDynamicObject(8557,-3959.4934100,1768.0709200,351.0965300,7.7870000,0.0000000,90.0000000); //amt 8557(481)
	CreateDynamicObject(8557,-3962.0527300,1768.0709200,351.3796100,4.8360000,0.0000000,90.0000000); //amt 8557(482)
	CreateDynamicObject(8557,-3964.6230500,1768.0703100,351.5305500,1.8850000,0.0000000,90.0000000); //amt 8557(483)
	CreateDynamicObject(8557,-3967.1977500,1768.0709200,351.5489500,358.9340000,0.0000000,90.0000000); //amt 8557(484)
	CreateDynamicObject(8557,-3969.7700200,1768.0709200,351.4348100,355.9840000,0.0000000,90.0000000); //amt 8557(485)
	CreateDynamicObject(8557,-3972.3330100,1768.0709200,351.1883900,353.0330000,0.0000000,90.0000000); //amt 8557(486)
	CreateDynamicObject(8557,-3974.8798800,1768.0709200,350.8103600,350.0820000,0.0000000,90.0000000); //amt 8557(487)
	CreateDynamicObject(8557,-3977.4038100,1768.0709200,350.3017300,347.1310000,0.0000000,90.0000000); //amt 8557(488)
	CreateDynamicObject(8557,-3979.8984400,1768.0709200,349.6638200,344.1800000,0.0000000,90.0000000); //amt 8557(489)
	CreateDynamicObject(8557,-3982.3569300,1768.0709200,348.8983500,341.2290000,0.0000000,90.0000000); //amt 8557(490)
	CreateDynamicObject(8557,-3984.7724600,1768.0709200,348.0073500,338.2790000,0.0000000,90.0000000); //amt 8557(491)
	CreateDynamicObject(8557,-3987.1391600,1768.0709200,346.9931600,335.3280000,0.0000000,90.0000000); //amt 8557(492)
	CreateDynamicObject(8557,-3989.4504400,1768.0709200,345.8584900,332.3770000,0.0000000,90.0000000); //amt 8557(493)
	CreateDynamicObject(8557,-3991.7002000,1768.0709200,344.6063500,329.4260000,0.0000000,90.0000000); //amt 8557(494)
	CreateDynamicObject(8557,-3993.8825700,1768.0709200,343.2400500,326.4750000,0.0000000,90.0000000); //amt 8557(495)
	CreateDynamicObject(8557,-3995.9917000,1768.0709200,341.7632100,323.5250000,0.0000000,90.0000000); //amt 8557(496)
	CreateDynamicObject(8557,-3998.0222200,1768.0709200,340.1797500,320.5740000,0.0000000,90.0000000); //amt 8557(497)
	CreateDynamicObject(8557,-3999.9682600,1768.0709200,338.4938700,317.6230000,0.0000000,90.0000000); //amt 8557(498)
	CreateDynamicObject(8557,-4001.8249500,1768.0709200,336.7100500,314.6720000,0.0000000,90.0000000); //amt 8557(499)
	CreateDynamicObject(8557,-4003.5874000,1768.0709200,334.8330100,311.7210000,0.0000000,90.0000000); //amt 8557(500)
	CreateDynamicObject(8557,-4005.2509800,1768.0709200,332.8677100,308.7710000,0.0000000,90.0000000); //amt 8557(501)
	CreateDynamicObject(8557,-4006.8110400,1768.0709200,330.8194000,305.8200000,0.0000000,90.0000000); //amt 8557(502)
	CreateDynamicObject(8557,-4124.7998000,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (24)
	CreateDynamicObject(8557,-4129.8999000,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (25)
	CreateDynamicObject(8557,-4135.0000000,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (26)
	CreateDynamicObject(8557,-4140.1001000,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (27)
	CreateDynamicObject(8557,-4145.2002000,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (28)
	CreateDynamicObject(8557,-4150.3002900,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (29)
	CreateDynamicObject(8557,-4155.4003900,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (30)
	CreateDynamicObject(8557,-4160.5004900,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (31)
	CreateDynamicObject(8557,-4165.6005900,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (32)
	CreateDynamicObject(8557,-4170.7006800,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (33)
	CreateDynamicObject(8557,-4175.8007800,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (34)
	CreateDynamicObject(8557,-4180.9008800,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (35)
	CreateDynamicObject(8557,-4186.0009800,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (36)
	CreateDynamicObject(8557,-4191.1010700,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (37)
	CreateDynamicObject(8557,-4196.2011700,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (38)
	CreateDynamicObject(8557,-4201.3012700,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (39)
	CreateDynamicObject(8557,-4206.4013700,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (40)
	CreateDynamicObject(8557,-4211.5014600,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (41)
	CreateDynamicObject(8557,-4216.6015600,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (42)
	CreateDynamicObject(8557,-4221.7016600,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (43)
	CreateDynamicObject(8557,-4226.8017600,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (44)
	CreateDynamicObject(8557,-4231.9018600,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (45)
	CreateDynamicObject(8557,-4237.0019500,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (46)
	CreateDynamicObject(8557,-4242.1020500,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (47)
	CreateDynamicObject(8557,-4247.2021500,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (48)
	CreateDynamicObject(8557,-4252.3022500,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (49)
	CreateDynamicObject(8557,-4257.4023400,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (50)
	CreateDynamicObject(8557,-4262.5024400,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (51)
	CreateDynamicObject(8557,-4267.6025400,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (52)
	CreateDynamicObject(8557,-4272.7026400,1768.0709200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (53)
	CreateDynamicObject(8557,-4277.8027300,1768.0703100,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (54)
	CreateDynamicObject(8557,-4282.9023400,1768.0703100,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (55)
	CreateDynamicObject(8557,-4119.7002000,1768.0000000,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (56)
	CreateDynamicObject(8557,-4114.6001000,1768.0000000,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (57)
	CreateDynamicObject(8557,-4109.4589800,1768.0000000,96.8650100,354.0980000,0.0000000,90.0000000); //amt 8557(537)
	CreateDynamicObject(8557,-4104.3725600,1768.0000000,97.6572100,348.1970000,0.0000000,90.0000000); //amt 8557(538)
	CreateDynamicObject(8557,-4099.3945300,1768.0000000,98.9682300,342.2950000,0.0000000,90.0000000); //amt 8557(539)
	CreateDynamicObject(8557,-4094.5773900,1768.0000000,100.7841600,336.3930000,0.0000000,90.0000000); //amt 8557(540)
	CreateDynamicObject(8557,-4089.9726600,1768.0000000,103.0857400,330.4920000,0.0000000,90.0000000); //amt 8557(541)
	CreateDynamicObject(8557,-4085.6291500,1768.0000000,105.8485800,324.5900000,0.0000000,90.0000000); //amt 8557(542)
	CreateDynamicObject(8557,-4081.5925300,1768.0000000,109.0434000,318.6890000,0.0000000,90.0000000); //amt 8557(543)
	CreateDynamicObject(8557,-4077.9057600,1768.0000000,112.6363300,312.7870000,0.0000000,90.0000000); //amt 8557(544)
	CreateDynamicObject(8557,-4074.6081500,1768.0000000,116.5892900,306.8850000,0.0000000,90.0000000); //amt 8557(545)
	CreateDynamicObject(8557,-4071.7343700,1768.0000000,120.8603600,300.9840000,0.0000000,90.0000000); //amt 8557(546)
	CreateDynamicObject(8557,-4069.3149400,1768.0000000,125.4042800,295.0820000,0.0000000,90.0000000); //amt 8557(547)
	CreateDynamicObject(8557,-4067.3757300,1768.0000000,130.1728800,289.1800000,0.0000000,90.0000000); //amt 8557(548)
	CreateDynamicObject(8557,-4065.9367700,1768.0000000,135.1156200,283.2790000,0.0000000,90.0000000); //amt 8557(549)
	CreateDynamicObject(8557,-4065.0139200,1768.0000000,140.1800800,277.3770000,0.0000000,90.0000000); //amt 8557(550)
	CreateDynamicObject(8172,-4143.0996100,1747.6992200,117.5000000,0.0000000,90.0000000,270.0000000); //object(vgssairportland07) (1)
	CreateDynamicObject(8172,-4143.0996100,1788.2998000,117.5000000,0.0000000,270.0000000,270.0000000); //object(vgssairportland07) (2)
	CreateDynamicObject(8557,-4288.0029300,1768.0715300,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(553)
	CreateDynamicObject(8557,-4293.1030300,1768.0721400,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(554)
	CreateDynamicObject(8557,-4298.2031200,1768.0727500,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(555)
	CreateDynamicObject(8557,-4303.3032200,1768.0733600,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(556)
	CreateDynamicObject(8557,-4308.4033200,1768.0739700,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(557)
	CreateDynamicObject(8557,-4313.5034200,1768.0745800,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(558)
	CreateDynamicObject(8557,-4318.6035200,1768.0752000,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(559)
	CreateDynamicObject(8557,-4323.7036100,1768.0758100,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(560)
	CreateDynamicObject(8557,-4328.8037100,1768.0764200,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(561)
	CreateDynamicObject(8557,-4333.9038100,1768.0770300,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(562)
	CreateDynamicObject(8557,-4339.0039100,1768.0776400,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(563)
	CreateDynamicObject(8557,-4344.1040000,1768.0782500,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(564)
	CreateDynamicObject(8557,-4349.2041000,1768.0788600,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(565)
	CreateDynamicObject(8557,-4354.3042000,1768.0794700,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(566)
	CreateDynamicObject(8557,-4359.4043000,1768.0800800,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(567)
	CreateDynamicObject(8557,-4364.5043900,1768.0806900,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(568)
	CreateDynamicObject(8557,-4369.6044900,1768.0813000,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(569)
	CreateDynamicObject(8557,-4374.7045900,1768.0819100,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(570)
	CreateDynamicObject(8557,-4379.8046900,1768.0825200,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(571)
	CreateDynamicObject(8557,-4384.9047900,1768.0831300,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(572)
	CreateDynamicObject(8557,-4390.0048800,1768.0837400,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(573)
	CreateDynamicObject(8557,-4395.1049800,1768.0843500,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(574)
	CreateDynamicObject(8557,-4400.2050800,1768.0849600,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(575)
	CreateDynamicObject(8557,-4405.3051800,1768.0855700,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(576)
	CreateDynamicObject(8557,-4410.4052700,1768.0861800,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(577)
	CreateDynamicObject(8557,-4415.5053700,1768.0867900,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(578)
	CreateDynamicObject(8557,-4420.6054700,1768.0874000,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(579)
	CreateDynamicObject(8557,-4425.7055700,1768.0880100,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(580)
	CreateDynamicObject(8557,-4430.8056600,1768.0886200,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(581)
	CreateDynamicObject(8557,-4435.9057600,1768.0892300,96.6000000,0.0000000,0.0000000,90.0000000); //amt 8557(582)
	CreateDynamicObject(8557,-4288.0029300,1768.0715300,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (58)
	CreateDynamicObject(8557,-4293.1030300,1768.0721400,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (59)
	CreateDynamicObject(8557,-4298.2031200,1768.0727500,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (60)
	CreateDynamicObject(8557,-4303.3032200,1768.0733600,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (61)
	CreateDynamicObject(8557,-4308.4033200,1768.0739700,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (62)
	CreateDynamicObject(8557,-4313.5034200,1768.0745800,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (63)
	CreateDynamicObject(8557,-4318.6035200,1768.0752000,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (64)
	CreateDynamicObject(8557,-4323.7036100,1768.0758100,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (65)
	CreateDynamicObject(8557,-4328.8037100,1768.0764200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (66)
	CreateDynamicObject(8557,-4333.9038100,1768.0770300,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (67)
	CreateDynamicObject(8557,-4339.0039100,1768.0776400,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (68)
	CreateDynamicObject(8557,-4344.1040000,1768.0782500,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (69)
	CreateDynamicObject(8557,-4349.2041000,1768.0788600,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (70)
	CreateDynamicObject(8557,-4354.3042000,1768.0794700,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (71)
	CreateDynamicObject(8557,-4359.4043000,1768.0800800,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (72)
	CreateDynamicObject(8557,-4364.5043900,1768.0806900,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (73)
	CreateDynamicObject(8557,-4369.6044900,1768.0813000,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (74)
	CreateDynamicObject(8557,-4374.7045900,1768.0819100,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (75)
	CreateDynamicObject(8557,-4379.8046900,1768.0825200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (76)
	CreateDynamicObject(8557,-4384.9047900,1768.0831300,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (77)
	CreateDynamicObject(8557,-4390.0048800,1768.0837400,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (78)
	CreateDynamicObject(8557,-4395.1049800,1768.0843500,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (79)
	CreateDynamicObject(8557,-4400.2050800,1768.0849600,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (80)
	CreateDynamicObject(8557,-4405.3051800,1768.0855700,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (81)
	CreateDynamicObject(8557,-4410.4052700,1768.0861800,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (82)
	CreateDynamicObject(8557,-4415.5053700,1768.0867900,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (83)
	CreateDynamicObject(8557,-4420.6054700,1768.0874000,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (84)
	CreateDynamicObject(8557,-4425.7055700,1768.0880100,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (85)
	CreateDynamicObject(8557,-4430.8056600,1768.0886200,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (86)
	CreateDynamicObject(8557,-4435.9057600,1768.0892300,96.6000000,0.0000000,0.0000000,90.0000000); //object(vgshseing27) (87)
	CreateDynamicObject(8557,-4441.0468700,1768.0892300,96.8650100,5.9020000,0.0000000,90.0000000); //amt 8557(613)
	CreateDynamicObject(8557,-4446.1333000,1768.0892300,97.6572100,11.8030000,0.0000000,90.0000000); //amt 8557(614)
	CreateDynamicObject(8557,-4451.1113300,1768.0892300,98.9682300,17.7050000,0.0000000,90.0000000); //amt 8557(615)
	CreateDynamicObject(8557,-4455.9282200,1768.0892300,100.7841600,23.6070000,0.0000000,90.0000000); //amt 8557(616)
	CreateDynamicObject(8557,-4460.5332000,1768.0892300,103.0857400,29.5080000,0.0000000,90.0000000); //amt 8557(617)
	CreateDynamicObject(8557,-4464.8769500,1768.0892300,105.8485800,35.4100000,0.0000000,90.0000000); //amt 8557(618)
	CreateDynamicObject(8557,-4468.9135700,1768.0892300,109.0434000,41.3110000,0.0000000,90.0000000); //amt 8557(619)
	CreateDynamicObject(8557,-4472.6001000,1768.0892300,112.6363300,47.2130000,0.0000000,90.0000000); //amt 8557(620)
	CreateDynamicObject(8557,-4475.8979500,1768.0892300,116.5892900,53.1150000,0.0000000,90.0000000); //amt 8557(621)
	CreateDynamicObject(8557,-4478.7714800,1768.0892300,120.8603600,59.0160000,0.0000000,90.0000000); //amt 8557(622)
	CreateDynamicObject(8557,-4481.1909200,1768.0892300,125.4042800,64.9180000,0.0000000,90.0000000); //amt 8557(623)
	CreateDynamicObject(8557,-4483.1303700,1768.0892300,130.1728800,70.8200000,0.0000000,90.0000000); //amt 8557(624)
	CreateDynamicObject(8557,-4484.5688500,1768.0892300,135.1156200,76.7210000,0.0000000,90.0000000); //amt 8557(625)
	CreateDynamicObject(8557,-4485.4917000,1768.0892300,140.1800800,82.6230000,0.0000000,90.0000000); //amt 8557(626)
	CreateDynamicObject(8557,-4486.2002000,1768.0999800,145.2000000,82.6230000,0.0000000,90.0000000); //amt 8557(626)
	CreateDynamicObject(8557,-4486.8452100,1768.1103500,150.2199100,82.6230000,0.0000000,90.0000000); //amt 8557(631)
	CreateDynamicObject(8557,-4488.0498000,1768.0999800,160.2000000,82.6230000,0.0000000,90.0000000); //amt 8557(633)
	CreateDynamicObject(8557,-4487.3999000,1768.0999800,155.2000000,82.6230000,0.0000000,90.0000000); //object(vgshseing27) (91)
	CreateDynamicObject(8557,-4493.9248000,1768.1318400,160.2597400,82.6230000,0.0000000,270.0000000); //object(vgshseing27) (92)
	CreateDynamicObject(8557,-4494.7460900,1768.1318400,155.1976500,78.9490000,0.0000000,270.0000000); //amt 8557(577)
	CreateDynamicObject(8557,-4495.8896500,1768.1318400,150.1985800,75.2760000,0.0000000,270.0000000); //amt 8557(578)
	CreateDynamicObject(8557,-4497.3515600,1768.1318400,145.2830700,71.6020000,0.0000000,270.0000000); //amt 8557(579)
	CreateDynamicObject(8557,-4499.1250000,1768.1318400,140.4713000,67.9290000,0.0000000,270.0000000); //amt 8557(580)
	CreateDynamicObject(8557,-4501.2036100,1768.1318400,135.7830700,64.2550000,0.0000000,270.0000000); //amt 8557(581)
	CreateDynamicObject(8557,-4503.5781200,1768.1318400,131.2376100,60.5820000,0.0000000,270.0000000); //amt 8557(582)
	CreateDynamicObject(8557,-4506.2387700,1768.1318400,126.8536400,56.9080000,0.0000000,270.0000000); //amt 8557(583)
	CreateDynamicObject(8557,-4509.1748000,1768.1318400,122.6491500,53.2350000,0.0000000,270.0000000); //amt 8557(584)
	CreateDynamicObject(8557,-4512.3745100,1768.1318400,118.6414100,49.5610000,0.0000000,270.0000000); //amt 8557(585)
	CreateDynamicObject(8557,-4515.8242200,1768.1318400,114.8469100,45.8880000,0.0000000,270.0000000); //amt 8557(586)
	CreateDynamicObject(8557,-4519.5097700,1768.1318400,111.2812300,42.2150000,0.0000000,270.0000000); //amt 8557(587)
	CreateDynamicObject(8557,-4523.4165000,1768.1318400,107.9590100,38.5410000,0.0000000,270.0000000); //amt 8557(588)
	CreateDynamicObject(8557,-4527.5278300,1768.1318400,104.8939400,34.8680000,0.0000000,270.0000000); //amt 8557(589)
	CreateDynamicObject(8557,-4531.8276400,1768.1318400,102.0985700,31.1940000,0.0000000,270.0000000); //amt 8557(590)
	CreateDynamicObject(8557,-4536.2968700,1768.1318400,99.5844300,27.5210000,0.0000000,270.0000000); //amt 8557(591)
	CreateDynamicObject(8557,-4540.9184600,1768.1318400,97.3618100,23.8470000,0.0000000,270.0000000); //amt 8557(592)
	CreateDynamicObject(8557,-4545.6733400,1768.1318400,95.4398600,20.1740000,0.0000000,270.0000000); //amt 8557(593)
	CreateDynamicObject(8557,-4550.5410200,1768.1318400,93.8264900,16.5000000,0.0000000,270.0000000); //amt 8557(594)
	CreateDynamicObject(8557,-4555.5024400,1768.1318400,92.5283100,12.8270000,0.0000000,270.0000000); //amt 8557(595)
	CreateDynamicObject(8557,-4560.5366200,1768.1318400,91.5506700,9.1530000,0.0000000,270.0000000); //amt 8557(596)
	CreateDynamicObject(8557,-4565.6001000,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(596)
	CreateDynamicObject(8557,-4570.7002000,1768.0999800,91.2000000,0.0000000,0.0000000,269.9890000); //amt 8557(596)
	CreateDynamicObject(8557,-4575.8002900,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(599)
	CreateDynamicObject(8557,-4580.9003900,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(600)
	CreateDynamicObject(8557,-4586.0004900,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(601)
	CreateDynamicObject(8557,-4591.1005900,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(602)
	CreateDynamicObject(8557,-4596.2006800,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(603)
	CreateDynamicObject(8557,-4601.3007800,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(604)
	CreateDynamicObject(8557,-4606.4008800,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(605)
	CreateDynamicObject(8557,-4611.5009800,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(606)
	CreateDynamicObject(8557,-4616.6010700,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(607)
	CreateDynamicObject(8557,-4621.7011700,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(608)
	CreateDynamicObject(8557,-4626.8012700,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(609)
	CreateDynamicObject(8557,-4631.9013700,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(610)
	CreateDynamicObject(8557,-4637.0014600,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(611)
	CreateDynamicObject(8557,-4642.1015600,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(612)
	CreateDynamicObject(8557,-4647.2016600,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(613)
	CreateDynamicObject(8557,-4652.3017600,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(614)
	CreateDynamicObject(8557,-4657.4018600,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(615)
	CreateDynamicObject(8557,-4662.5019500,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(616)
	CreateDynamicObject(8557,-4667.6020500,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(617)
	CreateDynamicObject(8557,-4672.7021500,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(618)
	CreateDynamicObject(8557,-4677.8022500,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(619)
	CreateDynamicObject(8557,-4682.9023400,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(620)
	CreateDynamicObject(8557,-4688.0024400,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(621)
	CreateDynamicObject(8557,-4693.1025400,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(622)
	CreateDynamicObject(8557,-4698.2026400,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(623)
	CreateDynamicObject(8557,-4703.3027300,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(624)
	CreateDynamicObject(8557,-4708.4028300,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(625)
	CreateDynamicObject(8557,-4713.5029300,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(626)
	CreateDynamicObject(8557,-4718.6030300,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(627)
	CreateDynamicObject(8557,-4723.7031200,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(628)
	CreateDynamicObject(8557,-4728.8032200,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(629)
	CreateDynamicObject(8557,-4733.9033200,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(630)
	CreateDynamicObject(8557,-4739.0034200,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(631)
	CreateDynamicObject(8557,-4744.1035200,1768.0999800,91.2000000,0.0000000,0.0000000,269.9950000); //amt 8557(632)
	CreateDynamicObject(8557,-4749.6001000,1768.0999800,92.2000000,338.7500000,0.0000000,269.9950000); //amt 8557(633)
	CreateDynamicObject(6959,-5988.7002000,2016.4000200,8.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(7)
	CreateDynamicObject(8557,-4787.6001000,1768.0999800,117.8000000,328.2470000,0.0000000,269.9890000); //amt 8557(633)
	CreateDynamicObject(8557,-4791.9873000,1768.1008300,120.4977700,328.5750000,0.0000000,269.9890000); //amt 8557(635)
	CreateDynamicObject(8557,-4796.3896500,1768.1016800,123.1703900,328.9030000,0.0000000,269.9890000); //amt 8557(636)
	CreateDynamicObject(8557,-4800.8071300,1768.1025400,125.8177800,329.2310000,0.0000000,269.9890000); //amt 8557(637)
	CreateDynamicObject(8557,-4805.2397500,1768.1033900,128.4398500,329.5580000,0.0000000,269.9890000); //amt 8557(638)
	CreateDynamicObject(8557,-4809.6875000,1768.1042500,131.0365000,329.8860000,0.0000000,269.9890000); //amt 8557(639)
	CreateDynamicObject(8557,-4814.1499000,1768.1051000,133.6076700,330.2140000,0.0000000,269.9890000); //amt 8557(640)
	CreateDynamicObject(8557,-4818.6269500,1768.1059600,136.1532400,330.5420000,0.0000000,269.9890000); //amt 8557(641)
	CreateDynamicObject(8557,-4823.1186500,1768.1068100,138.6731600,330.8700000,0.0000000,269.9890000); //amt 8557(642)
	CreateDynamicObject(8557,-4827.6245100,1768.1076700,141.1673400,331.1980000,0.0000000,269.9890000); //amt 8557(643)
	CreateDynamicObject(8557,-4832.1445300,1768.1085200,143.6357000,331.5260000,0.0000000,269.9890000); //amt 8557(644)
	CreateDynamicObject(8557,-4836.6787100,1768.1093800,146.0781400,331.8540000,0.0000000,269.9890000); //amt 8557(645)
	CreateDynamicObject(8557,-4841.2265600,1768.1102300,148.4946100,332.1810000,0.0000000,269.9890000); //amt 8557(646)
	CreateDynamicObject(8557,-4845.7885700,1768.1110800,150.8850100,332.5090000,0.0000000,269.9890000); //amt 8557(647)
	CreateDynamicObject(8557,-4850.3637700,1768.1120600,153.2492700,332.8370000,0.0000000,269.9890000); //amt 8557(648)
	CreateDynamicObject(8557,-4854.9526400,1768.1129200,155.5872800,333.1650000,0.0000000,269.9890000); //amt 8557(649)
	CreateDynamicObject(8557,-4859.5546900,1768.1137700,157.8990300,333.4930000,0.0000000,269.9890000); //amt 8557(650)
	CreateDynamicObject(8557,-4864.1699200,1768.1146200,160.1843900,333.8210000,0.0000000,269.9890000); //amt 8557(651)
	CreateDynamicObject(8557,-4868.7983400,1768.1154800,162.4433000,334.1490000,0.0000000,269.9890000); //amt 8557(652)
	CreateDynamicObject(8557,-4873.4394500,1768.1164600,164.6756900,334.4760000,0.0000000,269.9890000); //amt 8557(653)
	CreateDynamicObject(8557,-4878.0937500,1768.1173100,166.8815000,334.8040000,0.0000000,269.9890000); //amt 8557(654)
	CreateDynamicObject(8557,-4882.7597700,1768.1181600,169.0606200,335.1320000,0.0000000,269.9890000); //amt 8557(655)
	CreateDynamicObject(8557,-4887.4384800,1768.1191400,171.2130100,335.4600000,0.0000000,269.9890000); //amt 8557(656)
	CreateDynamicObject(8557,-4892.1298800,1768.1200000,173.3385900,335.7880000,0.0000000,269.9890000); //amt 8557(657)
	CreateDynamicObject(8557,-4896.8330100,1768.1209700,175.4373000,336.1160000,0.0000000,269.9890000); //amt 8557(658)
	CreateDynamicObject(8557,-4901.5478500,1768.1218300,177.5090600,336.4440000,0.0000000,269.9890000); //amt 8557(659)
	CreateDynamicObject(8557,-4906.2749000,1768.1226800,179.5538000,336.7720000,0.0000000,269.9890000); //amt 8557(660)
	CreateDynamicObject(8557,-4911.0131800,1768.1236600,181.5714700,337.0990000,0.0000000,269.9890000); //amt 8557(661)
	CreateDynamicObject(8557,-4915.7631800,1768.1245100,183.5619800,337.4270000,0.0000000,269.9890000); //amt 8557(662)
	CreateDynamicObject(8557,-4920.5244100,1768.1254900,185.5252700,337.7550000,0.0000000,269.9890000); //amt 8557(663)
	CreateDynamicObject(8557,-4925.2968700,1768.1263400,187.4612900,338.0830000,0.0000000,269.9890000); //amt 8557(664)
	CreateDynamicObject(8557,-4930.0800800,1768.1273200,189.3699600,338.4110000,0.0000000,269.9890000); //amt 8557(665)
	CreateDynamicObject(8557,-4934.8745100,1768.1281700,191.2512500,338.7390000,0.0000000,269.9890000); //amt 8557(666)
	CreateDynamicObject(8557,-4939.6792000,1768.1291500,193.1050600,339.0670000,0.0000000,269.9890000); //amt 8557(667)
	CreateDynamicObject(8557,-4944.4951200,1768.1300000,194.9313400,339.3950000,0.0000000,269.9890000); //amt 8557(668)
	CreateDynamicObject(8557,-4949.3208000,1768.1309800,196.7300300,339.7220000,0.0000000,269.9890000); //amt 8557(669)
	CreateDynamicObject(8557,-4954.1567400,1768.1319600,198.5011000,340.0500000,0.0000000,269.9890000); //amt 8557(670)
	CreateDynamicObject(8557,-4959.0029300,1768.1328100,200.2444500,340.3780000,0.0000000,269.9890000); //amt 8557(671)
	CreateDynamicObject(8557,-4963.8588900,1768.1337900,201.9600400,340.7060000,0.0000000,269.9890000); //amt 8557(672)
	CreateDynamicObject(8557,-4968.7246100,1768.1346400,203.6478100,341.0340000,0.0000000,269.9890000); //amt 8557(673)
	CreateDynamicObject(8557,-4973.6001000,1768.1356200,205.3077100,341.3620000,0.0000000,269.9890000); //amt 8557(674)
	CreateDynamicObject(8557,-4978.4848600,1768.1366000,206.9397000,341.6900000,0.0000000,269.9890000); //amt 8557(675)
	CreateDynamicObject(8557,-4983.3789100,1768.1374500,208.5437000,342.0170000,0.0000000,269.9890000); //amt 8557(676)
	CreateDynamicObject(8557,-4988.2817400,1768.1384300,210.1196600,342.3450000,0.0000000,269.9890000); //amt 8557(677)
	CreateDynamicObject(8557,-4993.1938500,1768.1394000,211.6675400,342.6730000,0.0000000,269.9890000); //amt 8557(678)
	CreateDynamicObject(8557,-4998.1147500,1768.1403800,213.1873000,343.0010000,0.0000000,269.9890000); //amt 8557(679)
	CreateDynamicObject(8557,-5003.0439500,1768.1412400,214.6788600,343.3290000,0.0000000,269.9890000); //amt 8557(680)
	CreateDynamicObject(8557,-5007.9819300,1768.1422100,216.1422100,343.6570000,0.0000000,269.9890000); //amt 8557(681)
	CreateDynamicObject(8557,-5012.9282200,1768.1431900,217.5772600,343.9850000,0.0000000,269.9890000); //amt 8557(682)
	CreateDynamicObject(8557,-5017.8823200,1768.1441700,218.9839800,344.3130000,0.0000000,269.9890000); //amt 8557(683)
	CreateDynamicObject(8557,-5022.8447300,1768.1450200,220.3623400,344.6400000,0.0000000,269.9890000); //amt 8557(684)
	CreateDynamicObject(8557,-5027.8149400,1768.1460000,221.7122800,344.9680000,0.0000000,269.9890000); //amt 8557(685)
	CreateDynamicObject(8557,-5032.7924800,1768.1469700,223.0337500,345.2960000,0.0000000,269.9890000); //amt 8557(686)
	CreateDynamicObject(8557,-5037.7778300,1768.1479500,224.3267200,345.6240000,0.0000000,269.9890000); //amt 8557(687)
	CreateDynamicObject(8557,-5042.7700200,1768.1489300,225.5911400,345.9520000,0.0000000,269.9890000); //amt 8557(688)
	CreateDynamicObject(8557,-5047.7700200,1768.1499000,226.8269800,346.2800000,0.0000000,269.9890000); //amt 8557(689)
	CreateDynamicObject(8557,-5052.7763700,1768.1507600,228.0341800,346.6080000,0.0000000,269.9890000); //amt 8557(690)
	CreateDynamicObject(8557,-5057.7900400,1768.1517300,229.2127100,346.9350000,0.0000000,269.9890000); //amt 8557(691)
	CreateDynamicObject(8557,-5062.8100600,1768.1527100,230.3625200,347.2630000,0.0000000,269.9890000); //amt 8557(692)
	CreateDynamicObject(8557,-5067.8369100,1768.1536900,231.4836000,347.5910000,0.0000000,269.9890000); //amt 8557(693)
	CreateDynamicObject(8557,-5072.8696300,1768.1546600,232.5758800,347.9190000,0.0000000,269.9890000); //amt 8557(694)
	CreateDynamicObject(8557,-5077.9086900,1768.1556400,233.6393600,348.2470000,0.0000000,269.9890000); //amt 8557(695)
	CreateDynamicObject(8557,-5082.9541000,1768.1566200,234.6739800,348.5750000,0.0000000,269.9890000); //amt 8557(696)
	CreateDynamicObject(8557,-5088.0048800,1768.1575900,235.6797200,348.9030000,0.0000000,269.9890000); //amt 8557(697)
	CreateDynamicObject(8557,-5093.0615200,1768.1585700,236.6565600,349.2310000,0.0000000,269.9890000); //amt 8557(698)
	CreateDynamicObject(8557,-5098.1240200,1768.1595500,237.6044200,349.5580000,0.0000000,269.9890000); //amt 8557(699)
	CreateDynamicObject(8557,-5103.1914100,1768.1605200,238.5232700,349.8860000,0.0000000,269.9890000); //amt 8557(700)
	CreateDynamicObject(8557,-5108.2641600,1768.1615000,239.4131500,350.2140000,0.0000000,269.9890000); //amt 8557(701)
	CreateDynamicObject(8557,-5113.3418000,1768.1623500,240.2739600,350.5420000,0.0000000,269.9890000); //amt 8557(702)
	CreateDynamicObject(8557,-5118.4243200,1768.1633300,241.1057100,350.8700000,0.0000000,269.9890000); //amt 8557(703)
	CreateDynamicObject(8557,-5123.5117200,1768.1643100,241.9083900,351.1980000,0.0000000,269.9890000); //amt 8557(704)
	CreateDynamicObject(8557,-5128.6030300,1768.1652800,242.6819200,351.5260000,0.0000000,269.9890000); //amt 8557(705)
	CreateDynamicObject(8557,-5133.6992200,1768.1660200,243.4262800,351.8540000,0.0000000,269.9890000); //amt 8557(706)
	CreateDynamicObject(8557,-5138.7993200,1768.1672400,244.1415100,352.1810000,0.0000000,269.9890000); //amt 8557(707)
	CreateDynamicObject(8557,-5143.9038100,1768.1682100,244.8275300,352.5090000,0.0000000,269.9890000); //amt 8557(708)
	CreateDynamicObject(8557,-5149.0117200,1768.1691900,245.4843100,352.8370000,0.0000000,269.9890000); //amt 8557(709)
	CreateDynamicObject(8557,-5154.1235400,1768.1702900,246.1118600,353.1650000,0.0000000,269.9890000); //amt 8557(710)
	CreateDynamicObject(8557,-5159.2387700,1768.1712600,246.7101400,353.4930000,0.0000000,269.9890000); //amt 8557(711)
	CreateDynamicObject(8557,-5164.3574200,1768.1722400,247.2791600,353.8210000,0.0000000,269.9890000); //amt 8557(712)
	CreateDynamicObject(8557,-5169.4794900,1768.1732200,247.8188600,354.1490000,0.0000000,269.9890000); //amt 8557(713)
	CreateDynamicObject(8557,-5174.6040000,1768.1741900,248.3292700,354.4760000,0.0000000,269.9890000); //amt 8557(714)
	CreateDynamicObject(8557,-5179.7319300,1768.1751700,248.8103000,354.8040000,0.0000000,269.9890000); //amt 8557(715)
	CreateDynamicObject(8557,-5184.8618200,1768.1761500,249.2620400,355.1320000,0.0000000,269.9890000); //amt 8557(716)
	CreateDynamicObject(8557,-5189.9946300,1768.1771200,249.6843600,355.4600000,0.0000000,269.9890000); //amt 8557(717)
	CreateDynamicObject(8557,-5195.1298800,1768.1781000,250.0773300,355.7880000,0.0000000,269.9890000); //amt 8557(718)
	CreateDynamicObject(8557,-5200.2670900,1768.1790800,250.4409000,356.1160000,0.0000000,269.9890000); //amt 8557(719)
	CreateDynamicObject(8557,-5205.4067400,1768.1800500,250.7750700,356.4440000,0.0000000,269.9890000); //amt 8557(720)
	CreateDynamicObject(8557,-5210.5478500,1768.1810300,251.0798200,356.7710000,0.0000000,269.9890000); //amt 8557(721)
	CreateDynamicObject(8557,-5215.6904300,1768.1820100,251.3551500,357.0990000,0.0000000,269.9890000); //amt 8557(722)
	CreateDynamicObject(8557,-5220.8349600,1768.1829800,251.6010300,357.4270000,0.0000000,269.9890000); //amt 8557(723)
	CreateDynamicObject(8557,-5225.9804700,1768.1839600,251.8174900,357.7550000,0.0000000,269.9890000); //amt 8557(724)
	CreateDynamicObject(8557,-5231.1269500,1768.1849400,252.0045000,358.0830000,0.0000000,269.9890000); //amt 8557(725)
	CreateDynamicObject(8557,-5236.2749000,1768.1860400,252.1620600,358.4110000,0.0000000,269.9890000); //amt 8557(726)
	CreateDynamicObject(8557,-5241.4233400,1768.1870100,252.2901500,358.7390000,0.0000000,269.9890000); //amt 8557(727)
	CreateDynamicObject(8557,-5246.5727500,1768.1879900,252.3887800,359.0670000,0.0000000,269.9890000); //amt 8557(728)
	CreateDynamicObject(8557,-5251.7221700,1768.1889600,252.4579300,359.3950000,0.0000000,269.9890000); //amt 8557(729)
	CreateDynamicObject(8557,-5256.8720700,1768.1899400,252.4976300,359.7220000,0.0000000,269.9890000); //amt 8557(730)
	CreateDynamicObject(8557,-5262.0224600,1768.1909200,252.5078400,0.0500000,0.0000000,269.9890000); //amt 8557(731)
	CreateDynamicObject(8557,-5267.1723600,1768.1918900,252.4886000,0.3780000,0.0000000,269.9890000); //amt 8557(732)
	CreateDynamicObject(8557,-5272.3222700,1768.1928700,252.4399000,0.7060000,0.0000000,269.9890000); //amt 8557(733)
	CreateDynamicObject(8557,-5277.4716800,1768.1938500,252.3617100,1.0340000,0.0000000,269.9890000); //amt 8557(734)
	CreateDynamicObject(8557,-5282.6210900,1768.1948200,252.2540400,1.3620000,0.0000000,269.9890000); //amt 8557(735)
	CreateDynamicObject(8557,-5287.7695300,1768.1958000,252.1169000,1.6900000,0.0000000,269.9890000); //amt 8557(736)
	CreateDynamicObject(8557,-5292.9169900,1768.1967800,251.9503500,2.0170000,0.0000000,269.9890000); //amt 8557(737)
	CreateDynamicObject(8557,-5298.0629900,1768.1978800,251.7543000,2.3450000,0.0000000,269.9890000); //amt 8557(738)
	CreateDynamicObject(8557,-5303.2085000,1768.1988500,251.5288200,2.6730000,0.0000000,269.9890000); //amt 8557(739)
	CreateDynamicObject(8557,-5308.3520500,1768.1998300,251.2739100,3.0010000,0.0000000,269.9890000); //amt 8557(740)
	CreateDynamicObject(8557,-5313.4946300,1768.2008100,250.9895800,3.3290000,0.0000000,269.9890000); //amt 8557(741)
	CreateDynamicObject(8557,-5318.6352500,1768.2017800,250.6758100,3.6570000,0.0000000,269.9890000); //amt 8557(742)
	CreateDynamicObject(8557,-5323.7739300,1768.2027600,250.3326300,3.9850000,0.0000000,269.9890000); //amt 8557(743)
	CreateDynamicObject(8557,-5328.9101600,1768.2037400,249.9600700,4.3130000,0.0000000,269.9890000); //amt 8557(744)
	CreateDynamicObject(8557,-5334.0449200,1768.2047100,249.5580700,4.6400000,0.0000000,269.9890000); //amt 8557(745)
	CreateDynamicObject(8557,-5339.1767600,1768.2056900,249.1267200,4.9680000,0.0000000,269.9890000); //amt 8557(746)
	CreateDynamicObject(8557,-5344.3066400,1768.2066700,248.6660500,5.2960000,0.0000000,269.9890000); //amt 8557(747)
	CreateDynamicObject(8557,-5349.4331100,1768.2076400,248.1759800,5.6240000,0.0000000,269.9890000); //amt 8557(748)
	CreateDynamicObject(8557,-5354.5571300,1768.2086200,247.6566500,5.9520000,0.0000000,269.9890000); //amt 8557(749)
	CreateDynamicObject(8557,-5359.6777300,1768.2095900,247.1079400,6.2800000,0.0000000,269.9890000); //amt 8557(750)
	CreateDynamicObject(8557,-5364.7954100,1768.2105700,246.5299500,6.6080000,0.0000000,269.9890000); //amt 8557(751)
	CreateDynamicObject(8557,-5369.9096700,1768.2115500,245.9227000,6.9350000,0.0000000,269.9890000); //amt 8557(752)
	CreateDynamicObject(8557,-5375.0205100,1768.2125200,245.2861800,7.2630000,0.0000000,269.9890000); //amt 8557(753)
	CreateDynamicObject(8557,-5380.1274400,1768.2135000,244.6204200,7.5910000,0.0000000,269.9890000); //amt 8557(754)
	CreateDynamicObject(8557,-5385.2304700,1768.2144800,243.9254600,7.9190000,0.0000000,269.9890000); //amt 8557(755)
	CreateDynamicObject(8557,-5390.3291000,1768.2154500,243.2013200,8.2470000,0.0000000,269.9890000); //amt 8557(756)
	CreateDynamicObject(8557,-5395.4238300,1768.2164300,242.4479700,8.5750000,0.0000000,269.9890000); //amt 8557(757)
	CreateDynamicObject(8557,-5400.5146500,1768.2174100,241.6655100,8.9030000,0.0000000,269.9890000); //amt 8557(758)
	CreateDynamicObject(8557,-5405.6001000,1768.2183800,240.8539400,9.2310000,0.0000000,269.9890000); //amt 8557(759)
	CreateDynamicObject(8557,-5410.6811500,1768.2193600,240.0132900,9.5580000,0.0000000,269.9890000); //amt 8557(760)
	CreateDynamicObject(8557,-5415.7573200,1768.2203400,239.1435700,9.8860000,0.0000000,269.9890000); //amt 8557(761)
	CreateDynamicObject(8557,-5420.8286100,1768.2213100,238.2448300,10.2140000,0.0000000,269.9890000); //amt 8557(762)
	CreateDynamicObject(8557,-5425.8945300,1768.2222900,237.3170300,10.5420000,0.0000000,269.9890000); //amt 8557(763)
	CreateDynamicObject(8557,-5430.9550800,1768.2232700,236.3602900,10.8700000,0.0000000,269.9890000); //amt 8557(764)
	CreateDynamicObject(8557,-5436.0097700,1768.2242400,235.3746600,11.1980000,0.0000000,269.9890000); //amt 8557(765)
	CreateDynamicObject(8557,-5441.0590800,1768.2252200,234.3600600,11.5260000,0.0000000,269.9890000); //amt 8557(766)
	CreateDynamicObject(8557,-5446.1025400,1768.2262000,233.3165700,11.8530000,0.0000000,269.9890000); //amt 8557(767)
	CreateDynamicObject(8557,-5451.1396500,1768.2271700,232.2442500,12.1810000,0.0000000,269.9890000); //amt 8557(768)
	CreateDynamicObject(8557,-5456.1709000,1768.2281500,231.1431600,12.5090000,0.0000000,269.9890000); //amt 8557(769)
	CreateDynamicObject(8557,-5461.1953100,1768.2291300,230.0132300,12.8370000,0.0000000,269.9890000); //amt 8557(770)
	CreateDynamicObject(8557,-5466.2138700,1768.2301000,228.8546400,13.1650000,0.0000000,269.9890000); //amt 8557(771)
	CreateDynamicObject(8557,-5471.2251000,1768.2309600,227.6673100,13.4930000,0.0000000,269.9890000); //amt 8557(772)
	CreateDynamicObject(8557,-5476.2294900,1768.2319300,226.4513400,13.8210000,0.0000000,269.9890000); //amt 8557(773)
	CreateDynamicObject(8557,-5481.2270500,1768.2329100,225.2067600,14.1490000,0.0000000,269.9890000); //amt 8557(774)
	CreateDynamicObject(8557,-5486.2172900,1768.2338900,223.9335600,14.4760000,0.0000000,269.9890000); //amt 8557(775)
	CreateDynamicObject(8557,-5491.2002000,1768.2348600,222.6319100,14.8040000,0.0000000,269.9890000); //amt 8557(776)
	CreateDynamicObject(8557,-5496.1757800,1768.2358400,221.3016800,15.1320000,0.0000000,269.9890000); //amt 8557(777)
	CreateDynamicObject(8557,-5501.1435500,1768.2366900,219.9430200,15.4600000,0.0000000,269.9890000); //amt 8557(778)
	CreateDynamicObject(8557,-5506.1030300,1768.2376700,218.5559800,15.7880000,0.0000000,269.9890000); //amt 8557(779)
	CreateDynamicObject(8557,-5511.0551800,1768.2386500,217.1405500,16.1160000,0.0000000,269.9890000); //amt 8557(780)
	CreateDynamicObject(8557,-5515.9985400,1768.2396200,215.6967900,16.4440000,0.0000000,269.9890000); //amt 8557(781)
	CreateDynamicObject(8557,-5520.9340800,1768.2404800,214.2248400,16.7720000,0.0000000,269.9890000); //amt 8557(782)
	CreateDynamicObject(8557,-5525.8608400,1768.2414600,212.7245900,17.0990000,0.0000000,269.9890000); //amt 8557(783)
	CreateDynamicObject(8557,-5530.7788100,1768.2424300,211.1962400,17.4270000,0.0000000,269.9890000); //amt 8557(784)
	CreateDynamicObject(8557,-5535.6884800,1768.2434100,209.6397600,17.7550000,0.0000000,269.9890000); //amt 8557(785)
	CreateDynamicObject(8557,-5540.5883800,1768.2442600,208.0552200,18.0830000,0.0000000,269.9890000); //amt 8557(786)
	CreateDynamicObject(8557,-5545.4794900,1768.2452400,206.4426100,18.4110000,0.0000000,269.9890000); //amt 8557(787)
	CreateDynamicObject(8557,-5550.3618200,1768.2462200,204.8020800,18.7390000,0.0000000,269.9890000); //amt 8557(788)
	CreateDynamicObject(8557,-5555.2338900,1768.2470700,203.1336500,19.0670000,0.0000000,269.9890000); //amt 8557(789)
	CreateDynamicObject(8557,-5560.0966800,1768.2480500,201.4373300,19.3940000,0.0000000,269.9890000); //amt 8557(790)
	CreateDynamicObject(8557,-5564.9497100,1768.2490200,199.7132100,19.7220000,0.0000000,269.9890000); //amt 8557(791)
	CreateDynamicObject(8557,-5569.7929700,1768.2498800,197.9613500,20.0500000,0.0000000,269.9890000); //amt 8557(792)
	CreateDynamicObject(8557,-5574.6259800,1768.2508500,196.1818400,20.3780000,0.0000000,269.9890000); //amt 8557(793)
	CreateDynamicObject(8557,-5579.4482400,1768.2517100,194.3746800,20.7060000,0.0000000,269.9890000); //amt 8557(794)
	CreateDynamicObject(8557,-5584.2607400,1768.2526900,192.5399900,21.0340000,0.0000000,269.9890000); //amt 8557(795)
	CreateDynamicObject(8557,-5589.0625000,1768.2535400,190.6777500,21.3620000,0.0000000,269.9890000); //amt 8557(796)
	CreateDynamicObject(8557,-5593.8535200,1768.2545200,188.7880100,21.6900000,0.0000000,269.9890000); //amt 8557(797)
	CreateDynamicObject(8557,-5598.6333000,1768.2553700,186.8709900,22.0170000,0.0000000,269.9890000); //amt 8557(798)
	CreateDynamicObject(8557,-5603.4023400,1768.2563500,184.9266200,22.3450000,0.0000000,269.9890000); //amt 8557(799)
	CreateDynamicObject(8557,-5721.1001000,1768.5000000,98.9000000,0.0000000,314.5000000,269.7280000); //amt 8557(799)
	CreateDynamicObject(8557,-5723.6689500,1769.3740200,98.0778700,358.7990000,314.4870000,268.5050000); //amt 8557(809)
	CreateDynamicObject(8557,-5726.2348600,1770.3029800,97.3096800,357.5980000,314.4490000,267.2810000); //amt 8557(810)
	CreateDynamicObject(8557,-5728.7959000,1771.2867400,96.5953400,356.3980000,314.3840000,266.0550000); //amt 8557(811)
	CreateDynamicObject(8557,-5731.3501000,1772.3250700,95.9347500,355.2000000,314.2940000,264.8260000); //amt 8557(812)
	CreateDynamicObject(8557,-5733.8945300,1773.4179700,95.3277200,354.0040000,314.1780000,263.5920000); //amt 8557(813)
	CreateDynamicObject(8557,-5736.4272500,1774.5650600,94.7740500,352.8100000,314.0360000,262.3530000); //amt 8557(814)
	CreateDynamicObject(8557,-5738.9462900,1775.7661100,94.2734700,351.6210000,313.8670000,261.1070000); //amt 8557(815)
	CreateDynamicObject(8557,-5741.4487300,1777.0207500,93.8256700,350.4350000,313.6720000,259.8540000); //amt 8557(816)
	CreateDynamicObject(8557,-5743.9331100,1778.3287400,93.4302800,349.2530000,313.4490000,258.5920000); //amt 8557(817)
	CreateDynamicObject(8557,-5746.3960000,1779.6894500,93.0869100,348.0770000,313.1990000,257.3200000); //amt 8557(818)
	CreateDynamicObject(8557,-5748.8364300,1781.1026600,92.7951000,346.9060000,312.9210000,256.0370000); //amt 8557(819)
	CreateDynamicObject(8557,-5751.2519500,1782.5676300,92.5543500,345.7420000,312.6150000,254.7420000); //amt 8557(820)
	CreateDynamicObject(8557,-5753.6396500,1784.0838600,92.3641200,344.5850000,312.2800000,253.4330000); //amt 8557(821)
	CreateDynamicObject(8557,-5755.9985400,1785.6507600,92.2238200,343.4360000,311.9160000,252.1100000); //amt 8557(822)
	CreateDynamicObject(8557,-5758.3252000,1787.2677000,92.1328000,342.2950000,311.5210000,250.7710000); //amt 8557(823)
	CreateDynamicObject(8557,-5760.6186500,1788.9339600,92.0904000,341.1640000,311.0960000,249.4150000); //amt 8557(824)
	CreateDynamicObject(8557,-5762.8764600,1790.6486800,92.0958900,340.0420000,310.6390000,248.0410000); //amt 8557(825)
	CreateDynamicObject(8557,-5765.0961900,1792.4112500,92.1485100,338.9310000,310.1510000,246.6470000); //amt 8557(826)
	CreateDynamicObject(8557,-5767.2768600,1794.2208300,92.2474500,337.8310000,309.6300000,245.2320000); //amt 8557(827)
	CreateDynamicObject(8557,-5769.4150400,1796.0764200,92.3918600,336.7440000,309.0750000,243.7950000); //amt 8557(828)
	CreateDynamicObject(8557,-5771.5102500,1797.9771700,92.5808500,335.6700000,308.4850000,242.3350000); //amt 8557(829)
	CreateDynamicObject(8557,-5773.5600600,1799.9221200,92.8134900,334.6110000,307.8610000,240.8490000); //amt 8557(830)
	CreateDynamicObject(8557,-5775.5620100,1801.9102800,93.0888200,333.5670000,307.2000000,239.3380000); //amt 8557(831)
	CreateDynamicObject(8557,-5777.5151400,1803.9406700,93.4058200,332.5380000,306.5030000,237.7990000); //amt 8557(832)
	CreateDynamicObject(8557,-5779.4174800,1806.0120800,93.7634600,331.5270000,305.7680000,236.2310000); //amt 8557(833)
	CreateDynamicObject(8557,-5781.2670900,1808.1235400,94.1606400,330.5350000,304.9940000,234.6340000); //amt 8557(834)
	CreateDynamicObject(8557,-5783.0629900,1810.2739300,94.5962800,329.5610000,304.1810000,233.0050000); //amt 8557(835)
	CreateDynamicObject(8557,-5784.8027300,1812.4619100,95.0691900,328.6090000,303.3270000,231.3440000); //amt 8557(836)
	CreateDynamicObject(8557,-5786.4848600,1814.6864000,95.5782200,327.6780000,302.4320000,229.6490000); //amt 8557(837)
	CreateDynamicObject(8557,-5788.1084000,1816.9460400,96.1221200,326.7710000,301.4960000,227.9190000); //amt 8557(838)
	CreateDynamicObject(8557,-5789.6713900,1819.2397500,96.6996800,325.8870000,300.5170000,226.1530000); //amt 8557(839)
	CreateDynamicObject(8557,-5791.1728500,1821.5659200,97.3095900,325.0300000,299.4950000,224.3510000); //amt 8557(840)
	CreateDynamicObject(8557,-5792.6113300,1823.9235800,97.9505600,324.2000000,298.4300000,222.5110000); //amt 8557(841)
	CreateDynamicObject(8557,-5793.9848600,1826.3111600,98.6212600,323.3980000,297.3200000,220.6340000); //amt 8557(842)
	CreateDynamicObject(8557,-5795.2934600,1828.7271700,99.3203300,322.6270000,296.1670000,218.7170000); //amt 8557(843)
	CreateDynamicObject(8557,-5796.5346700,1831.1704100,100.0463600,321.8870000,294.9700000,216.7610000); //amt 8557(844)
	CreateDynamicObject(8557,-5797.7080100,1833.6392800,100.7979800,321.1800000,293.7290000,214.7670000); //amt 8557(845)
	CreateDynamicObject(8557,-5798.8129900,1836.1324500,101.5737200,320.5080000,292.4450000,212.7330000); //amt 8557(846)
	CreateDynamicObject(8557,-5799.8471700,1838.6484400,102.3721500,319.8710000,291.1180000,210.6600000); //amt 8557(847)
	CreateDynamicObject(8557,-5800.8110400,1841.1855500,103.1917900,319.2730000,289.7490000,208.5500000); //amt 8557(848)
	CreateDynamicObject(8557,-5801.7031200,1843.7424300,104.0311300,318.7130000,288.3400000,206.4030000); //amt 8557(849)
	CreateDynamicObject(8557,-5802.5224600,1846.3173800,104.8886800,318.1940000,286.8920000,204.2200000); //amt 8557(850)
	CreateDynamicObject(8557,-5803.2685500,1848.9090600,105.7629000,317.7180000,285.4070000,202.0020000); //amt 8557(851)
	CreateDynamicObject(8557,-5803.9409200,1851.5157500,106.6522600,317.2840000,283.8870000,199.7530000); //amt 8557(852)
	CreateDynamicObject(8557,-5804.5385700,1854.1359900,107.5551800,316.8950000,282.3350000,197.4730000); //amt 8557(853)
	CreateDynamicObject(8557,-5805.0610400,1856.7679400,108.4701200,316.5520000,280.7530000,195.1660000); //amt 8557(854)
	CreateDynamicObject(8557,-5805.5078100,1859.4102800,109.3954800,316.2560000,279.1450000,192.8340000); //amt 8557(855)
	CreateDynamicObject(8557,-5805.8784200,1862.0611600,110.3296800,316.0070000,277.5150000,190.4810000); //amt 8557(856)
	CreateDynamicObject(8557,-5806.1733400,1864.7191200,111.2711300,315.8080000,275.8650000,188.1110000); //amt 8557(857)
	CreateDynamicObject(8557,-5806.3911100,1867.3824500,112.2182100,315.6570000,274.2000000,185.7260000); //amt 8557(858)
	CreateDynamicObject(8557,-5806.5322300,1870.0494400,113.1693300,315.5570000,272.5240000,183.3310000); //amt 8557(859)
	CreateDynamicObject(8557,-5806.5966800,1872.7186300,114.1228600,315.5060000,270.8420000,180.9300000); //amt 8557(860)
	CreateDynamicObject(8557,-5806.5839800,1875.3881800,115.0772100,315.5060000,269.1580000,178.5260000); //amt 8557(861)
	CreateDynamicObject(8557,-5717.7998000,1768.5999800,98.8000000,0.0000000,314.4950000,269.7250000); //amt 8557(799)
	CreateDynamicObject(8557,-5715.1001000,1768.1999500,99.2000000,0.0000000,314.4950000,269.7250000); //amt 8557(799)
	CreateDynamicObject(8557,-5800.1001000,2022.5000000,89.1000000,354.6900000,29.8880000,168.8490000); //amt 8557(861)
	CreateDynamicObject(8557,-5801.1938500,2025.3961200,88.4967800,351.5080000,30.1110000,170.6990000); //amt 8557(868)
	CreateDynamicObject(8557,-5802.3725600,2028.2849100,88.0341900,348.3360000,30.4400000,172.5800000); //amt 8557(869)
	CreateDynamicObject(8557,-5803.6377000,2031.1560100,87.7103800,345.1750000,30.8810000,174.5040000); //amt 8557(870)
	CreateDynamicObject(8557,-5804.9902300,2033.9992700,87.5229500,342.0320000,31.4410000,176.4850000); //amt 8557(871)
	CreateDynamicObject(8557,-5806.4311500,2036.8045700,87.4689100,338.9090000,32.1270000,178.5380000); //amt 8557(872)
	CreateDynamicObject(8557,-5807.9604500,2039.5621300,87.5447500,335.8120000,32.9510000,180.6790000); //amt 8557(873)
	CreateDynamicObject(8557,-5809.5781200,2042.2619600,87.7464100,332.7460000,33.9270000,182.9250000); //amt 8557(874)
	CreateDynamicObject(8557,-5811.2846700,2044.8949000,88.0693000,329.7180000,35.0700000,185.2990000); //amt 8557(875)
	CreateDynamicObject(8557,-5813.0791000,2047.4514200,88.5083700,326.7350000,36.3990000,187.8220000); //amt 8557(876)
	CreateDynamicObject(8557,-5814.9599600,2049.9228500,89.0580600,323.8070000,37.9380000,190.5220000); //amt 8557(877)
	CreateDynamicObject(8557,-5816.9262700,2052.3005400,89.7123700,320.9450000,39.7140000,193.4300000); //amt 8557(878)
	CreateDynamicObject(8557,-5818.9765600,2054.5764200,90.4648700,318.1610000,41.7580000,196.5800000); //amt 8557(879)
	CreateDynamicObject(8557,-5821.1084000,2056.7426800,91.3087200,315.4700000,44.1080000,200.0110000); //amt 8557(880)
	CreateDynamicObject(8557,-5823.3188500,2058.7919900,92.2366900,312.8920000,46.8030000,203.7680000); //amt 8557(881)
	CreateDynamicObject(8557,-5825.6064500,2060.7175300,93.2412600,310.4490000,49.8880000,207.8970000); //amt 8557(882)
	CreateDynamicObject(8557,-5827.9668000,2062.5129400,94.3145200,308.1680000,53.4080000,212.4440000); //amt 8557(883)
	CreateDynamicObject(8557,-5830.3974600,2064.1726100,95.4483300,306.0810000,57.4050000,217.4560000); //amt 8557(884)
	CreateDynamicObject(8557,-5832.8945300,2065.6914100,96.6342900,304.2230000,61.9100000,222.9630000); //amt 8557(885)
	CreateDynamicObject(8557,-5835.4541000,2067.0644500,97.8637800,302.6350000,66.9330000,228.9790000); //amt 8557(886)
	CreateDynamicObject(8557,-5838.0722700,2068.2876000,99.1280000,301.3590000,72.4510000,235.4840000); //amt 8557(887)
	CreateDynamicObject(8557,-5840.7441400,2069.3579100,100.4180100,300.4330000,78.3970000,242.4100000); //amt 8557(888)
	CreateDynamicObject(8557,-5843.4653300,2070.2722200,101.7247600,299.8900000,84.6550000,249.6450000); //amt 8557(889)
	CreateDynamicObject(8557,-5846.2309600,2071.0285600,103.0391500,299.7530000,91.0650000,257.0310000); //amt 8557(890)
	CreateDynamicObject(8557,-5849.0361300,2071.6252400,104.3520200,300.0260000,97.4440000,264.3860000); //amt 8557(891)
	CreateDynamicObject(8557,-5851.8754900,2072.0615200,105.6542300,300.6980000,103.6140000,271.5350000); //amt 8557(892)
	CreateDynamicObject(8557,-5854.7436500,2072.3371600,106.9366900,301.7450000,109.4290000,278.3320000); //amt 8557(893)
	CreateDynamicObject(8557,-5857.6357400,2072.4528800,108.1903900,303.1290000,114.7880000,284.6790000); //amt 8557(894)
	CreateDynamicObject(8557,-5860.5454100,2072.4094200,109.4064300,304.8110000,119.6400000,290.5270000); //amt 8557(895)
	CreateDynamicObject(8557,-5863.4677700,2072.2089800,110.5760500,306.7490000,123.9740000,295.8680000); //amt 8557(896)
	CreateDynamicObject(8557,-5866.3969700,2071.8537600,111.6907200,308.9040000,127.8090000,300.7210000); //amt 8557(897)
	CreateDynamicObject(8557,-5869.3271500,2071.3466800,112.7421100,311.2420000,131.1800000,305.1250000); //amt 8557(898)
	CreateDynamicObject(8557,-5872.2529300,2070.6916500,113.7221600,313.7320000,134.1310000,309.1250000); //amt 8557(899)
	CreateDynamicObject(8557,-5875.1679700,2069.8928200,114.6230900,316.3500000,136.7070000,312.7690000); //amt 8557(900)
	CreateDynamicObject(8557,-5878.0673800,2068.9553200,115.4374500,319.0730000,138.9510000,316.1020000); //amt 8557(901)
	CreateDynamicObject(8557,-5880.9453100,2067.8845200,116.1581500,321.8850000,140.9030000,319.1680000); //amt 8557(902)
	CreateDynamicObject(8557,-5883.7959000,2066.6862800,116.7784900,324.7710000,142.5970000,322.0030000); //amt 8557(903)
	CreateDynamicObject(8557,-5886.6147500,2065.3671900,117.2921800,327.7180000,144.0630000,324.6410000); //amt 8557(904)
	CreateDynamicObject(8557,-5889.3955100,2063.9343300,117.6933400,330.7160000,145.3290000,327.1120000); //amt 8557(905)
	CreateDynamicObject(8557,-5892.1342800,2062.3952600,117.9766100,333.7580000,146.4140000,329.4410000); //amt 8557(906)
	CreateDynamicObject(8557,-5894.8252000,2060.7575700,118.1370500,336.8340000,147.3380000,331.6510000); //amt 8557(907)
	CreateDynamicObject(8557,-5897.4638700,2059.0300300,118.1702900,339.9410000,148.1150000,333.7600000); //amt 8557(908)
	CreateDynamicObject(8557,-5900.0459000,2057.2211900,118.0724200,343.0710000,148.7580000,335.7880000); //amt 8557(909)
	CreateDynamicObject(8557,-5902.5668900,2055.3400900,117.8401000,346.2210000,149.2780000,337.7480000); //amt 8557(910)
	CreateDynamicObject(8557,-5905.0229500,2053.3960000,117.4705700,349.3860000,149.6810000,339.6570000); //amt 8557(911)
	CreateDynamicObject(8557,-5907.4101600,2051.3984400,116.9615600,352.5620000,149.9750000,341.5260000); //amt 8557(912)
	CreateDynamicObject(8557,-5909.7255900,2049.3574200,116.3114400,355.7430000,150.1610000,343.3670000); //amt 8557(913)
	CreateDynamicObject(8557,-5911.9653300,2047.2830800,115.5191300,358.9340000,150.2470000,345.1950000); //amt 8557(914)
	CreateDynamicObject(8557,-5914.1269500,2045.1850600,114.5841500,2.1230000,150.2300000,347.0180000); //amt 8557(915)
	CreateDynamicObject(8557,-5916.2080100,2043.0739700,113.5065900,5.3100000,150.1120000,348.8490000); //amt 8557(916)
	CreateDynamicObject(8557,-5918.2060500,2040.9599600,112.2871300,8.4920000,149.8890000,350.6990000); //amt 8557(917)
	CreateDynamicObject(6959,-4767.7002000,1767.8994100,106.0000000,0.0000000,34.9970000,0.0000000); //amt 6959(7)
	CreateDynamicObject(6959,-5988.7002000,1976.5000000,8.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(7)
	CreateDynamicObject(6959,-6030.0000000,1976.5000000,8.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(7)
	CreateDynamicObject(6959,-6030.0000000,2016.4000200,8.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(7)
	CreateDynamicObject(7657,-6050.5996100,1986.3994100,9.7000000,0.0000000,0.0000000,90.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-6050.6001000,1966.4000200,9.7000000,0.0000000,0.0000000,90.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-6040.6001000,1956.5000000,9.7000000,0.0000000,0.0000000,180.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-5978.2002000,2036.4000200,9.7000000,0.0000000,0.0000000,0.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-6000.6001000,1956.5000000,9.7000000,0.0000000,0.0000000,180.0000000); //amt 7657(7)
	CreateDynamicObject(7657,-5980.6001000,1956.5000000,9.7000000,0.0000000,0.0000000,180.0000000); //amt 7657(8)
	CreateDynamicObject(7657,-6000.6001000,1956.5000000,9.7000000,0.0000000,0.0000000,180.0000000); //object(plasticsgate1) (7)
	CreateDynamicObject(7657,-5980.6001000,1956.5000000,9.7000000,0.0000000,0.0000000,180.0000000); //object(plasticsgate1) (8)
	CreateDynamicObject(7657,-5968.1001000,1966.5000000,9.7000000,0.0000000,0.0000000,270.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-5968.1001000,1986.5000000,9.7000000,0.0000000,0.0000000,269.9950000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-5968.0996100,2006.5000000,9.7000000,0.0000000,0.0000000,270.0000000); //amt 7657(13)
	CreateDynamicObject(7657,-5968.1001000,2026.5000000,9.7000000,0.0000000,0.0000000,270.0000000); //amt 7657(14)
	CreateDynamicObject(7657,-5968.1001000,2006.5000000,9.7000000,0.0000000,0.0000000,270.0000000); //object(plasticsgate1) (11)
	CreateDynamicObject(7657,-5968.1001000,2026.5000000,9.7000000,0.0000000,0.0000000,270.0000000); //object(plasticsgate1) (12)
	CreateDynamicObject(7657,-6020.5996100,1956.5000000,9.7000000,0.0000000,0.0000000,179.9950000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-5998.2002000,2036.4000200,9.7000000,0.0000000,0.0000000,0.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-6018.2002000,2036.4000200,9.7000000,0.0000000,0.0000000,0.0000000); //amt 7657(19)
	CreateDynamicObject(7657,-6038.2002000,2036.4000200,9.7000000,0.0000000,0.0000000,0.0000000); //amt 7657(20)
	CreateDynamicObject(7657,-6018.2002000,2036.4000200,9.7000000,0.0000000,0.0000000,0.0000000); //object(plasticsgate1) (15)
	CreateDynamicObject(7657,-6038.2002000,2036.4000200,9.7000000,0.0000000,0.0000000,0.0000000); //object(plasticsgate1) (16)
	CreateDynamicObject(6959,-6071.2998000,2016.3000500,8.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(7)
	CreateDynamicObject(6959,-6112.5996100,2016.2000700,8.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(21)
	CreateDynamicObject(6959,-6153.8994100,2016.1001000,8.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(22)
	CreateDynamicObject(6959,-6195.1992200,2016.0001200,8.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(23)
	CreateDynamicObject(6959,-6236.4990200,2015.9001500,8.0000000,0.0000000,0.0000000,0.0000000); //amt 6959(24)
	CreateDynamicObject(6959,-6112.5996100,2016.2000700,8.0000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (9)
	CreateDynamicObject(6959,-6153.8994100,2016.1001000,8.0000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (10)
	CreateDynamicObject(6959,-6195.1992200,2016.0000000,8.0000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (11)
	CreateDynamicObject(6959,-6236.4990200,2015.8994100,8.0000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (12)
	CreateDynamicObject(8557,-6277.3999000,2010.3000500,8.0000000,270.0000000,0.0000000,0.0000000); //object(vgshseing27) (3)
	CreateDynamicObject(8557,-6258.7002000,2036.8000500,8.0000000,90.0000000,0.0000000,90.0000000); //object(vgshseing27) (4)
	CreateDynamicObject(8557,-6258.7002000,1991.5999800,8.0000000,90.0000000,0.0000000,90.0000000); //object(vgshseing27) (5)
	CreateDynamicObject(6959,-6277.7998000,2015.8000500,8.0000000,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (12)
	CreateDynamicObject(3437,-6287.5000000,2012.0996100,7.1000000,0.0000000,94.0000000,356.0000000); //object(ballypllr01_lvs) (1)
	CreateDynamicObject(8557,-6285.4755900,2010.4813200,8.0000000,270.0000000,225.0290000,222.4570000); //amt 8557(905)
	CreateDynamicObject(8557,-6293.5351600,2011.0246600,8.0000000,270.0000000,225.1150000,219.9730000); //amt 8557(906)
	CreateDynamicObject(8557,-6301.5620100,2011.9290800,8.0000000,270.0000000,225.2600000,217.5460000); //amt 8557(907)
	CreateDynamicObject(8557,-6309.5400400,2013.1927500,8.0000000,270.0000000,225.4640000,215.1780000); //amt 8557(908)
	CreateDynamicObject(8557,-6317.4536100,2014.8129900,8.0000000,270.0000000,225.7270000,212.8700000); //amt 8557(909)
	CreateDynamicObject(8557,-6325.2866200,2016.7867400,8.0000000,270.0000000,226.0510000,210.6230000); //amt 8557(910)
	CreateDynamicObject(8557,-6333.0229500,2019.1098600,8.0000000,270.0000000,226.4370000,208.4370000); //amt 8557(911)
	CreateDynamicObject(8557,-6340.6474600,2021.7778300,8.0000000,270.0000000,226.8860000,206.3150000); //amt 8557(912)
	CreateDynamicObject(8557,-6348.1445300,2024.7850300,8.0000000,270.0000000,227.4010000,204.2580000); //amt 8557(913)
	CreateDynamicObject(8557,-6355.4990200,2028.1256100,8.0000000,270.0000000,227.9820000,202.2680000); //amt 8557(914)
	CreateDynamicObject(8557,-6362.6962900,2031.7928500,8.0000000,270.0000000,228.6330000,200.3470000); //amt 8557(915)
	CreateDynamicObject(8557,-6369.7216800,2035.7793000,8.0000000,270.0000000,229.3560000,198.4980000); //amt 8557(916)
	CreateDynamicObject(8557,-6376.5615200,2040.0769000,8.0000000,270.0000000,230.1530000,196.7240000); //amt 8557(917)
	CreateDynamicObject(8557,-6383.2011700,2044.6770000,8.0000000,270.0000000,231.0270000,195.0270000); //amt 8557(918)
	CreateDynamicObject(8557,-6389.6279300,2049.5703100,8.0000000,270.0000000,231.9810000,193.4090000); //amt 8557(919)
	CreateDynamicObject(8557,-6395.8291000,2054.7470700,8.0000000,270.0000000,233.0180000,191.8750000); //amt 8557(920)
	CreateDynamicObject(8557,-6401.7910200,2060.1970200,8.0000000,270.0000000,234.1410000,190.4270000); //amt 8557(921)
	CreateDynamicObject(8557,-6407.5029300,2065.9086900,8.0000000,270.0000000,235.3530000,189.0670000); //amt 8557(922)
	CreateDynamicObject(8557,-6412.9526400,2071.8710900,8.0000000,270.0000000,236.6580000,187.8000000); //amt 8557(923)
	CreateDynamicObject(8557,-6418.1293900,2078.0717800,8.0000000,270.0000000,238.0570000,186.6280000); //amt 8557(924)
	CreateDynamicObject(8557,-6423.0229500,2084.4987800,8.0000000,270.0000000,239.5540000,185.5540000); //amt 8557(925)
	CreateDynamicObject(8557,-6427.6230500,2091.1386700,8.0000000,270.0000000,241.1500000,184.5780000); //amt 8557(926)
	CreateDynamicObject(8557,-6431.9209000,2097.9782700,8.0000000,270.0000000,242.8470000,183.7040000); //amt 8557(927)
	CreateDynamicObject(8557,-6435.9072300,2105.0036600,8.0000000,270.0000000,244.6450000,182.9310000); //amt 8557(928)
	CreateDynamicObject(8557,-6439.5742200,2112.2009300,8.0000000,270.0000000,246.5450000,182.2590000); //amt 8557(929)
	CreateDynamicObject(8557,-6442.9150400,2119.5556600,8.0000000,270.0000000,248.5440000,181.6870000); //amt 8557(930)
	CreateDynamicObject(8557,-6445.9223600,2127.0524900,8.0000000,270.0000000,250.6400000,181.2110000); //amt 8557(931)
	CreateDynamicObject(8557,-6448.5898400,2134.6770000,8.0000000,270.0000000,252.8280000,180.8280000); //amt 8557(932)
	CreateDynamicObject(8557,-6450.9130900,2142.4133300,8.0000000,270.0000000,255.1020000,180.5310000); //amt 8557(933)
	CreateDynamicObject(8557,-6452.8867200,2150.2463400,8.0000000,270.0000000,257.4550000,180.3120000); //amt 8557(934)
	CreateDynamicObject(8557,-6454.5073200,2158.1599100,8.0000000,270.0000000,259.8760000,180.1620000); //amt 8557(935)
	CreateDynamicObject(8557,-6455.7710000,2166.1381800,8.0000000,270.0000000,262.3550000,180.0690000); //amt 8557(936)
	CreateDynamicObject(8557,-6456.6752900,2174.1650400,8.0000000,270.0000000,264.8780000,180.0210000); //amt 8557(937)
	CreateDynamicObject(8557,-6457.2187500,2182.2243700,8.0000000,270.0000000,267.4310000,180.0030000); //amt 8557(938)
	CreateDynamicObject(8557,-6457.3999000,2190.3000500,8.0000000,270.0000000,270.0000000,180.0000000); //amt 8557(939)
	CreateDynamicObject(8557,-6457.2187500,2198.3757300,8.0000000,270.0000000,272.5690000,179.9970000); //amt 8557(940)
	CreateDynamicObject(8557,-6456.6752900,2206.4350600,8.0000000,270.0000000,275.1220000,179.9790000); //amt 8557(941)
	CreateDynamicObject(8557,-6455.7710000,2214.4619100,8.0000000,270.0000000,277.6450000,179.9310000); //amt 8557(942)
	CreateDynamicObject(8557,-6454.5073200,2222.4401900,8.0000000,270.0000000,280.1240000,179.8380000); //amt 8557(943)
	CreateDynamicObject(8557,-6452.8867200,2230.3537600,8.0000000,270.0000000,282.5450000,179.6880000); //amt 8557(944)
	CreateDynamicObject(8557,-6450.9130900,2238.1867700,8.0000000,270.0000000,284.8980000,179.4690000); //amt 8557(945)
	CreateDynamicObject(8557,-6448.5898400,2245.9231000,8.0000000,270.0000000,287.1720000,179.1720000); //amt 8557(946)
	CreateDynamicObject(8557,-6445.9223600,2253.5476100,8.0000000,270.0000000,289.3600000,178.7890000); //amt 8557(947)
	CreateDynamicObject(8557,-6442.9150400,2261.0444300,8.0000000,270.0000000,291.4560000,178.3130000); //amt 8557(948)
	CreateDynamicObject(8557,-6439.5742200,2268.3991700,8.0000000,270.0000000,293.4550000,177.7410000); //amt 8557(949)
	CreateDynamicObject(8557,-6435.9072300,2275.5964400,8.0000000,270.0000000,295.3550000,177.0690000); //amt 8557(950)
	CreateDynamicObject(8557,-6431.9209000,2282.6218300,8.0000000,270.0000000,297.1530000,176.2960000); //amt 8557(951)
	CreateDynamicObject(8557,-6427.6230500,2289.4614300,8.0000000,270.0000000,298.8500000,175.4220000); //amt 8557(952)
	CreateDynamicObject(8557,-6423.0229500,2296.1013200,8.0000000,270.0000000,300.4460000,174.4460000); //amt 8557(953)
	CreateDynamicObject(8557,-6418.1293900,2302.5283200,8.0000000,270.0000000,301.9430000,173.3720000); //amt 8557(954)
	CreateDynamicObject(8557,-6412.9526400,2308.7290000,8.0000000,270.0000000,303.3420000,172.2000000); //amt 8557(955)
	CreateDynamicObject(8557,-6407.5029300,2314.6914100,8.0000000,270.0000000,304.6470000,170.9330000); //amt 8557(956)
	CreateDynamicObject(8557,-6401.7910200,2320.4030800,8.0000000,270.0000000,305.8590000,169.5730000); //amt 8557(957)
	CreateDynamicObject(8557,-6395.8291000,2325.8530300,8.0000000,270.0000000,306.9820000,168.1250000); //amt 8557(958)
	CreateDynamicObject(8557,-6389.6279300,2331.0297900,8.0000000,270.0000000,308.0190000,166.5910000); //amt 8557(959)
	CreateDynamicObject(8557,-6383.2011700,2335.9231000,8.0000000,270.0000000,308.9730000,164.9730000); //amt 8557(960)
	CreateDynamicObject(8557,-6376.5615200,2340.5231900,8.0000000,270.0000000,309.8470000,163.2760000); //amt 8557(961)
	CreateDynamicObject(8557,-6369.7216800,2344.8208000,8.0000000,270.0000000,310.6440000,161.5020000); //amt 8557(962)
	CreateDynamicObject(8557,-6362.6962900,2348.8071300,8.0000000,270.0000000,311.3670000,159.6530000); //amt 8557(963)
	CreateDynamicObject(8557,-6355.4990200,2352.4743700,8.0000000,270.0000000,312.0180000,157.7320000); //amt 8557(964)
	CreateDynamicObject(8557,-6348.1445300,2355.8149400,8.0000000,270.0000000,312.5990000,155.7420000); //amt 8557(965)
	CreateDynamicObject(8557,-6340.6474600,2358.8222700,8.0000000,270.0000000,313.1140000,153.6850000); //amt 8557(966)
	CreateDynamicObject(8557,-6333.0229500,2361.4902300,8.0000000,270.0000000,313.5630000,151.5630000); //amt 8557(967)
	CreateDynamicObject(8557,-6325.2866200,2363.8134800,8.0000000,270.0000000,313.9490000,149.3770000); //amt 8557(968)
	CreateDynamicObject(8557,-6317.4536100,2365.7871100,8.0000000,270.0000000,314.2730000,147.1300000); //amt 8557(969)
	CreateDynamicObject(8557,-6309.5400400,2367.4074700,8.0000000,270.0000000,314.5360000,144.8220000); //amt 8557(970)
	CreateDynamicObject(8557,-6301.5620100,2368.6709000,8.0000000,270.0000000,314.7400000,142.4540000); //amt 8557(971)
	CreateDynamicObject(8557,-6293.5351600,2369.5754400,8.0000000,270.0000000,314.8840000,140.0270000); //amt 8557(972)
	CreateDynamicObject(8557,-6285.4755900,2370.1189000,8.0000000,270.0000000,314.9710000,137.5430000); //amt 8557(973)
	CreateDynamicObject(8557,-6277.3999000,2370.3000500,8.0000000,270.0000000,315.0000000,135.0000000); //amt 8557(974)
	CreateDynamicObject(8557,-6269.3242200,2370.1189000,8.0000000,270.0000000,314.9710000,132.4000000); //amt 8557(975)
	CreateDynamicObject(8557,-6261.2646500,2369.5754400,8.0000000,270.0000000,314.8840000,129.7420000); //amt 8557(976)
	CreateDynamicObject(8557,-6253.2377900,2368.6709000,8.0000000,270.0000000,314.7400000,127.0250000); //amt 8557(977)
	CreateDynamicObject(8557,-6245.2597700,2367.4074700,8.0000000,270.0000000,314.5360000,124.2500000); //amt 8557(978)
	CreateDynamicObject(8557,-6237.3461900,2365.7871100,8.0000000,270.0000000,314.2730000,121.4150000); //amt 8557(979)
	CreateDynamicObject(8557,-6229.5131800,2363.8134800,8.0000000,270.0000000,313.9490000,118.5200000); //amt 8557(980)
	CreateDynamicObject(8557,-6221.7768600,2361.4902300,8.0000000,270.0000000,313.5630000,115.5630000); //amt 8557(981)
	CreateDynamicObject(8557,-6214.1523400,2358.8222700,8.0000000,270.0000000,313.1140000,112.5420000); //amt 8557(982)
	CreateDynamicObject(8557,-6206.6552700,2355.8149400,8.0000000,270.0000000,312.5990000,109.4570000); //amt 8557(983)
	CreateDynamicObject(8557,-6199.3007800,2352.4743700,8.0000000,270.0000000,312.0180000,106.3040000); //amt 8557(984)
	CreateDynamicObject(8557,-6192.1035200,2348.8071300,8.0000000,270.0000000,311.3670000,103.0810000); //amt 8557(985)
	CreateDynamicObject(8557,-6185.0781200,2344.8208000,8.0000000,270.0000000,310.6440000,99.7870000); //amt 8557(986)
	CreateDynamicObject(8557,-6178.2382800,2340.5231900,8.0000000,270.0000000,309.8470000,96.4190000); //amt 8557(987)
	CreateDynamicObject(8557,-6171.5986300,2335.9231000,8.0000000,270.0000000,308.9730000,92.9730000); //amt 8557(988)
	CreateDynamicObject(8557,-6165.1718700,2331.0297900,8.0000000,270.0000000,308.0190000,89.4480000); //amt 8557(989)
	CreateDynamicObject(8172,-6367.7002000,2056.6001000,8.0000000,0.0000000,0.0000000,48.0000000); //object(vgssairportland07) (3)
	CreateDynamicObject(8172,-6367.7002000,2056.6001000,10.6000000,0.0000000,0.0000000,47.9990000); //object(vgssairportland07) (4)
	CreateDynamicObject(8172,-6443.3999000,2183.0000000,8.0000000,0.0000000,0.0000000,353.9990000); //object(vgssairportland07) (5)
	CreateDynamicObject(8172,-6383.5000000,2324.0000000,8.0000000,0.0000000,0.0000000,303.9960000); //object(vgssairportland07) (6)
	CreateDynamicObject(8172,-6233.2998000,2355.6001000,8.0000000,0.0000000,0.0000000,249.9920000); //object(vgssairportland07) (7)
	CreateDynamicObject(8172,-6443.3994100,2183.0000000,10.6000000,0.0000000,0.0000000,353.9960000); //object(vgssairportland07) (8)
	CreateDynamicObject(8172,-6383.5000000,2324.0000000,10.6000000,0.0000000,0.0000000,303.9920000); //object(vgssairportland07) (9)
	CreateDynamicObject(8172,-6233.2998000,2355.5996100,10.6000000,0.0000000,0.0000000,249.9880000); //object(vgssairportland07) (10)
	CreateDynamicObject(8172,-6096.2998000,2275.1999500,8.0000000,0.0000000,0.0000000,233.9880000); //object(vgssairportland07) (11)
	CreateDynamicObject(8557,-6056.3999000,2231.5000000,8.0000000,269.9950000,308.0180000,270.5550000); //amt 8557(989)
	CreateDynamicObject(8557,-6048.3789100,2225.7158200,7.9992400,270.0050000,124.6850000,90.5550000); //amt 8557(991)
	CreateDynamicObject(8557,-6040.0356400,2220.4079600,7.9984400,270.0050000,121.3520000,90.5550000); //amt 8557(992)
	CreateDynamicObject(8557,-6031.3974600,2215.5942400,7.9976200,270.0050000,118.0180000,90.5550000); //amt 8557(993)
	CreateDynamicObject(8557,-6022.4941400,2211.2907700,7.9967700,270.0050000,114.6850000,90.5550000); //amt 8557(994)
	CreateDynamicObject(8557,-6013.3559600,2207.5124500,7.9959000,270.0050000,111.3520000,90.5550000); //amt 8557(995)
	CreateDynamicObject(8557,-6004.0131800,2204.2717300,7.9950100,270.0050000,108.0180000,90.5550000); //amt 8557(996)
	CreateDynamicObject(8557,-5994.4975600,2201.5795900,7.9941000,270.0050000,104.6850000,90.5550000); //amt 8557(997)
	CreateDynamicObject(8557,-5984.8418000,2199.4455600,7.9931700,270.0050000,101.3520000,90.5550000); //amt 8557(998)
	CreateDynamicObject(8557,-5975.0786100,2197.8764600,7.9922400,270.0050000,98.0180000,90.5550000); //amt 8557(999)
	CreateDynamicObject(8557,-5965.2402300,2196.8776900,7.9913000,270.0050000,94.6850000,90.5550000); //amt 8557(1000)
	CreateDynamicObject(8557,-5955.3603500,2196.4526400,7.9903500,270.0050000,91.3520000,90.5550000); //amt 8557(1001)
	CreateDynamicObject(8557,-5945.4726600,2196.6027800,7.9894000,270.0050000,88.0180000,90.5550000); //amt 8557(1002)
	CreateDynamicObject(8557,-5935.6108400,2197.3276400,7.9884600,270.0050000,84.6850000,90.5550000); //amt 8557(1003)
	CreateDynamicObject(8557,-5925.8071300,2198.6245100,7.9875200,270.0050000,81.3520000,90.5550000); //amt 8557(1004)
	CreateDynamicObject(8557,-5916.0957000,2200.4892600,7.9865800,270.0050000,78.0180000,90.5550000); //amt 8557(1005)
	CreateDynamicObject(8557,-5906.5092800,2202.9157700,7.9856600,270.0050000,74.6850000,90.5550000); //amt 8557(1006)
	CreateDynamicObject(8557,-5897.0800800,2205.8952600,7.9847600,270.0050000,71.3520000,90.5550000); //amt 8557(1007)
	CreateDynamicObject(8557,-5887.8403300,2209.4182100,7.9838700,270.0050000,68.0180000,90.5550000); //amt 8557(1008)
	CreateDynamicObject(8557,-5878.8208000,2213.4724100,7.9830000,270.0050000,64.6850000,90.5550000); //amt 8557(1009)
	CreateDynamicObject(8557,-5870.0522500,2218.0441900,7.9821600,270.0050000,61.3520000,90.5550000); //amt 8557(1010)
	CreateDynamicObject(8557,-5861.5639600,2223.1179200,7.9813400,270.0050000,58.0180000,90.5550000); //amt 8557(1011)
	CreateDynamicObject(8557,-5853.3857400,2228.6767600,7.9805500,270.0050000,54.6850000,90.5550000); //amt 8557(1012)
	CreateDynamicObject(8557,-5845.5439500,2234.7016600,7.9797900,270.0050000,51.3520000,90.5550000); //amt 8557(1013)
	CreateDynamicObject(8557,-5838.0664100,2241.1723600,7.9790700,270.0050000,48.0180000,90.5550000); //amt 8557(1014)
	CreateDynamicObject(8557,-5830.9770500,2248.0668900,7.9783800,270.0050000,44.6850000,90.5550000); //amt 8557(1015)
	CreateDynamicObject(8557,-5824.3012700,2255.3620600,7.9777400,270.0050000,41.3520000,90.5550000); //amt 8557(1016)
	CreateDynamicObject(8557,-5818.0605500,2263.0329600,7.9771300,270.0050000,38.0180000,90.5550000); //amt 8557(1017)
	CreateDynamicObject(8557,-5812.2763700,2271.0537100,7.9765700,270.0050000,34.6850000,90.5550000); //amt 8557(1018)
	CreateDynamicObject(8557,-5806.9687500,2279.3972200,7.9760500,270.0050000,31.3520000,90.5550000); //amt 8557(1019)
	CreateDynamicObject(8557,-5802.1547900,2288.0351600,7.9755800,270.0050000,28.0180000,90.5550000); //amt 8557(1020)
	CreateDynamicObject(8557,-5797.8510700,2296.9384800,7.9751600,270.0050000,24.6850000,90.5550000); //amt 8557(1021)
	CreateDynamicObject(8557,-5794.0727500,2306.0771500,7.9747900,270.0050000,21.3520000,90.5550000); //amt 8557(1022)
	CreateDynamicObject(8557,-5790.8320300,2315.4196800,7.9744700,270.0050000,18.0180000,90.5550000); //amt 8557(1023)
	CreateDynamicObject(8557,-5788.1401400,2324.9350600,7.9742100,270.0050000,14.6850000,90.5550000); //amt 8557(1024)
	CreateDynamicObject(8557,-5786.0058600,2334.5908200,7.9739900,270.0050000,11.3520000,90.5550000); //amt 8557(1025)
	CreateDynamicObject(8557,-5784.4370100,2344.3544900,7.9738300,270.0050000,8.0180000,90.5550000); //amt 8557(1026)
	CreateDynamicObject(8557,-5783.4379900,2354.1926300,7.9737300,270.0050000,4.6850000,90.5550000); //amt 8557(1027)
	CreateDynamicObject(8557,-5783.0131800,2364.0722700,7.9736800,270.0050000,1.3520000,90.5550000); //amt 8557(1028)
	CreateDynamicObject(8557,-5783.1630900,2373.9599600,7.9736800,270.0050000,358.0180000,90.5550000); //amt 8557(1029)
	CreateDynamicObject(8557,-5783.8881800,2383.8222700,7.9737400,270.0050000,354.6850000,90.5550000); //amt 8557(1030)
	CreateDynamicObject(8557,-5785.1850600,2393.6254900,7.9738600,270.0050000,351.3520000,90.5550000); //amt 8557(1031)
	CreateDynamicObject(8557,-5787.0498000,2403.3369100,7.9740300,270.0050000,348.0180000,90.5550000); //amt 8557(1032)
	CreateDynamicObject(8557,-5789.4760700,2412.9233400,7.9742500,270.0050000,344.6850000,90.5550000); //amt 8557(1033)
	CreateDynamicObject(8557,-5792.4560500,2422.3525400,7.9745300,270.0050000,341.3520000,90.5550000); //amt 8557(1034)
	CreateDynamicObject(8557,-5795.9785200,2431.5925300,7.9748600,270.0050000,338.0180000,90.5550000); //amt 8557(1035)
	CreateDynamicObject(8557,-5800.0327100,2440.6123000,7.9752400,270.0050000,334.6850000,90.5550000); //amt 8557(1036)
	CreateDynamicObject(8557,-5804.6044900,2449.3808600,7.9756700,270.0050000,331.3520000,90.5550000); //amt 8557(1037)
	CreateDynamicObject(8557,-5809.6787100,2457.8686500,7.9761500,270.0050000,328.0180000,90.5550000); //amt 8557(1038)
	CreateDynamicObject(8557,-5815.2373000,2466.0471200,7.9766700,270.0050000,324.6850000,90.5550000); //amt 8557(1039)
	CreateDynamicObject(8557,-5821.2622100,2473.8886700,7.9772400,270.0050000,321.3520000,90.5550000); //amt 8557(1040)
	CreateDynamicObject(8557,-5827.7329100,2481.3664600,7.9778600,270.0050000,318.0180000,90.5550000); //amt 8557(1041)
	CreateDynamicObject(8557,-5834.6274400,2488.4555700,7.9785100,270.0050000,314.6850000,90.5550000); //amt 8557(1042)
	CreateDynamicObject(8557,-5841.9223600,2495.1315900,7.9792000,270.0050000,311.3520000,90.5550000); //amt 8557(1043)
	CreateDynamicObject(8557,-5849.5932600,2501.3723100,7.9799300,270.0050000,308.0180000,90.5550000); //amt 8557(1044)
	CreateDynamicObject(8557,-5857.6142600,2507.1562500,7.9806900,270.0050000,304.6850000,90.5550000); //amt 8557(1045)
	CreateDynamicObject(8557,-5865.9575200,2512.4643600,7.9814900,270.0050000,301.3520000,90.5550000); //amt 8557(1046)
	CreateDynamicObject(8557,-5874.5957000,2517.2780800,7.9823100,270.0050000,298.0180000,90.5550000); //amt 8557(1047)
	CreateDynamicObject(8557,-5883.4990200,2521.5815400,7.9831600,270.0050000,294.6850000,90.5550000); //amt 8557(1048)
	CreateDynamicObject(8557,-5892.6377000,2525.3598600,7.9840300,270.0050000,291.3520000,90.5550000); //amt 8557(1049)
	CreateDynamicObject(8557,-5901.9804700,2528.6005900,7.9849300,270.0050000,288.0180000,90.5550000); //amt 8557(1050)
	CreateDynamicObject(8557,-5911.4956100,2531.2927200,7.9858400,270.0050000,284.6850000,90.5550000); //amt 8557(1051)
	CreateDynamicObject(8557,-5921.1513700,2533.4267600,7.9867600,270.0050000,281.3520000,90.5550000); //amt 8557(1052)
	CreateDynamicObject(8557,-5930.9150400,2534.9958500,7.9876900,270.0050000,278.0180000,90.5550000); //amt 8557(1053)
	CreateDynamicObject(8557,-5940.7529300,2535.9946300,7.9886400,270.0050000,274.6850000,90.5550000); //amt 8557(1054)
	CreateDynamicObject(8557,-5950.6328100,2536.4196800,7.9895800,270.0050000,271.3520000,90.5550000); //amt 8557(1055)
	CreateDynamicObject(8557,-5957.0732400,2536.2497600,8.3748100,270.0050000,266.7360000,90.5550000); //amt 8557(1056)
	CreateDynamicObject(8557,-5963.4790000,2535.5622600,8.7600400,270.0050000,262.1210000,90.5550000); //amt 8557(1057)
	CreateDynamicObject(8557,-5969.8085900,2534.3615700,9.1452700,270.0050000,257.5050000,90.5550000); //amt 8557(1058)
	CreateDynamicObject(8557,-5976.0210000,2532.6552700,9.5304800,270.0050000,252.8900000,90.5550000); //amt 8557(1059)
	CreateDynamicObject(8557,-5982.0761700,2530.4545900,9.9156800,270.0050000,248.2750000,90.5550000); //amt 8557(1060)
	CreateDynamicObject(8557,-5987.9340800,2527.7739300,10.3008600,270.0050000,243.6590000,90.5550000); //amt 8557(1061)
	CreateDynamicObject(8557,-5993.5581100,2524.6306200,10.6860100,270.0050000,239.0440000,90.5550000); //amt 8557(1062)
	CreateDynamicObject(8557,-5998.9101600,2521.0449200,11.0711500,270.0050000,234.4280000,90.5550000); //amt 8557(1063)
	CreateDynamicObject(8557,-6003.9570300,2517.0400400,11.4562500,270.0050000,229.8130000,90.5550000); //amt 8557(1064)
	CreateDynamicObject(8557,-6008.6650400,2512.6423300,11.8413200,270.0050000,225.1980000,90.5550000); //amt 8557(1065)
	CreateDynamicObject(8557,-6013.0039100,2507.8798800,12.2263600,270.0050000,220.5820000,90.5550000); //amt 8557(1066)
	CreateDynamicObject(8557,-6016.9453100,2502.7832000,12.6113500,270.0000000,215.9640000,90.5550000); //amt 8557(1067)
	CreateDynamicObject(8557,-6020.4638700,2497.3869600,12.9963100,270.0050000,211.3520000,90.5550000); //amt 8557(1068)
	CreateDynamicObject(8557,-6023.5366200,2491.7243700,13.3812300,270.0050000,206.7360000,90.5550000); //amt 8557(1069)
	CreateDynamicObject(8557,-6026.1440400,2485.8332500,13.7661000,270.0050000,202.1210000,90.5550000); //amt 8557(1070)
	CreateDynamicObject(8557,-6028.2690400,2479.7509800,14.1509200,270.0050000,197.5050000,90.5550000); //amt 8557(1071)
	CreateDynamicObject(8557,-6029.8979500,2473.5178200,14.5357000,270.0050000,192.8900000,90.5550000); //amt 8557(1072)
	CreateDynamicObject(8557,-6031.0195300,2467.1735800,14.9204300,270.0050000,188.2750000,90.5550000); //amt 8557(1073)
	CreateDynamicObject(8557,-6031.6269500,2460.7597700,15.3051100,270.0050000,183.6590000,90.5550000); //amt 8557(1074)
	CreateDynamicObject(8557,-6031.7168000,2454.3178700,15.6897400,270.0050000,179.0440000,90.5550000); //amt 8557(1075)
	CreateDynamicObject(8557,-6031.2876000,2447.8896500,16.0743200,270.0050000,174.4280000,90.5550000); //amt 8557(1076)
	CreateDynamicObject(8557,-6030.3427700,2441.5168500,16.4588500,270.0050000,169.8130000,90.5550000); //amt 8557(1077)
	CreateDynamicObject(8557,-6028.8877000,2435.2407200,16.8433300,270.0050000,165.1980000,90.5550000); //amt 8557(1078)
	CreateDynamicObject(8557,-6026.9326200,2429.1018100,17.2277600,270.0050000,160.5820000,90.5550000); //amt 8557(1079)
	CreateDynamicObject(8557,-6024.4902300,2423.1403800,17.6121500,270.0050000,155.9670000,90.5550000); //amt 8557(1080)
	CreateDynamicObject(8557,-6021.5756800,2417.3945300,17.9964900,270.0050000,151.3520000,90.5550000); //amt 8557(1081)
	CreateDynamicObject(8557,-6018.2085000,2411.9021000,18.3807900,270.0050000,146.7360000,90.5550000); //amt 8557(1082)
	CreateDynamicObject(8557,-6014.4101600,2406.6982400,18.7650500,270.0050000,142.1210000,90.5550000); //amt 8557(1083)
	CreateDynamicObject(8557,-6010.2050800,2401.8171400,19.1492600,270.0050000,137.5050000,90.5550000); //amt 8557(1084)
	CreateDynamicObject(8557,-6005.6215800,2397.2900400,19.5334400,270.0050000,132.8900000,90.5550000); //amt 8557(1085)
	CreateDynamicObject(8557,-6000.6879900,2393.1464800,19.9175900,270.0050000,128.2750000,90.5550000); //amt 8557(1086)
	CreateDynamicObject(8557,-5995.4375000,2389.4133300,20.3017000,270.0050000,123.6590000,90.5550000); //amt 8557(1087)
	CreateDynamicObject(8557,-5989.9033200,2386.1147500,20.6857900,270.0050000,119.0440000,90.5550000); //amt 8557(1088)
	CreateDynamicObject(8557,-5984.1215800,2383.2722200,21.0698600,270.0050000,114.4280000,90.5550000); //amt 8557(1089)
	CreateDynamicObject(8557,-5978.1298800,2380.9040500,21.4539000,270.0050000,109.8130000,90.5550000); //amt 8557(1090)
	CreateDynamicObject(8557,-5971.9672900,2379.0258800,21.8379300,270.0050000,105.1980000,90.5550000); //amt 8557(1091)
	CreateDynamicObject(8557,-5965.6733400,2377.6494100,22.2219400,270.0050000,100.5820000,90.5550000); //amt 8557(1092)
	CreateDynamicObject(8557,-5959.2890600,2376.7841800,22.6059500,270.0050000,95.9670000,90.5550000); //amt 8557(1093)
	CreateDynamicObject(8557,-5952.8559600,2376.4350600,22.9899400,270.0050000,91.3520000,90.5550000); //amt 8557(1094)
	CreateDynamicObject(8557,-5946.4155300,2376.6049800,23.3739400,270.0050000,86.7360000,90.5550000); //amt 8557(1095)
	CreateDynamicObject(8557,-5940.0097700,2377.2924800,23.7579400,270.0050000,82.1210000,90.5550000); //amt 8557(1096)
	CreateDynamicObject(8557,-5933.6801800,2378.4934100,24.1419500,270.0050000,77.5050000,90.5550000); //amt 8557(1097)
	CreateDynamicObject(8557,-5927.4677700,2380.1997100,24.5259700,270.0050000,72.8900000,90.5550000); //amt 8557(1098)
	CreateDynamicObject(8557,-5921.4126000,2382.4001500,24.9100000,270.0050000,68.2750000,90.5550000); //amt 8557(1099)
	CreateDynamicObject(8557,-5915.5542000,2385.0808100,25.2940500,270.0050000,63.6590000,90.5550000); //amt 8557(1100)
	CreateDynamicObject(8557,-5909.9306600,2388.2241200,25.6781300,270.0050000,59.0440000,90.5550000); //amt 8557(1101)
	CreateDynamicObject(8557,-5904.5781200,2391.8100600,26.0622300,270.0050000,54.4280000,90.5550000); //amt 8557(1102)
	CreateDynamicObject(8557,-5899.5312500,2395.8147000,26.4463500,270.0050000,49.8130000,90.5550000); //amt 8557(1103)
	CreateDynamicObject(8557,-5894.8232400,2400.2126500,26.8305100,270.0050000,45.1980000,90.5550000); //amt 8557(1104)
	CreateDynamicObject(8557,-5890.4843700,2404.9751000,27.2147100,270.0050000,40.5820000,90.5550000); //amt 8557(1105)
	CreateDynamicObject(8557,-5886.5429700,2410.0712900,27.5989400,270.0050000,35.9670000,90.5550000); //amt 8557(1106)
	CreateDynamicObject(8557,-5883.0239300,2415.4680200,27.9832100,270.0050000,31.3520000,90.5550000); //amt 8557(1107)
	CreateDynamicObject(8557,-5879.9511700,2421.1303700,28.3675300,270.0050000,26.7360000,90.5550000); //amt 8557(1108)
	CreateDynamicObject(8557,-5877.3437500,2427.0217300,28.7518900,270.0050000,22.1210000,90.5550000); //amt 8557(1109)
	CreateDynamicObject(8557,-5875.2187500,2433.1037600,29.1363000,270.0050000,17.5050000,90.5550000); //amt 8557(1110)
	CreateDynamicObject(8557,-5873.5898400,2439.3371600,29.5207500,270.0050000,12.8900000,90.5550000); //amt 8557(1111)
	CreateDynamicObject(8557,-5872.4682600,2445.6811500,29.9052500,270.0050000,8.2750000,90.5550000); //amt 8557(1112)
	CreateDynamicObject(8557,-5871.8603500,2452.0949700,30.2898000,270.0050000,3.6590000,90.5550000); //amt 8557(1113)
	CreateDynamicObject(8557,-5871.7710000,2458.5368700,30.6744000,270.0050000,359.0440000,90.5550000); //amt 8557(1114)
	CreateDynamicObject(8557,-5872.1997100,2464.9650900,31.0590500,270.0050000,354.4280000,90.5550000); //amt 8557(1115)
	CreateDynamicObject(8557,-5873.1445300,2471.3381300,31.4437500,270.0050000,349.8130000,90.5550000); //amt 8557(1116)
	CreateDynamicObject(8557,-5874.5996100,2477.6142600,31.8285000,270.0050000,345.1980000,90.5550000); //amt 8557(1117)
	CreateDynamicObject(8557,-5876.5542000,2483.7529300,32.2133000,270.0050000,340.5820000,90.5550000); //amt 8557(1118)
	CreateDynamicObject(8557,-5878.9970700,2489.7146000,32.5981400,270.0050000,335.9670000,90.5550000); //amt 8557(1119)
	CreateDynamicObject(8557,-5881.9111300,2495.4602100,32.9830300,270.0050000,331.3520000,90.5550000); //amt 8557(1120)
	CreateDynamicObject(8557,-5885.2783200,2500.9528800,33.3679700,270.0050000,326.7360000,90.5550000); //amt 8557(1121)
	CreateDynamicObject(8557,-5889.0766600,2506.1564900,33.7529400,270.0050000,322.1210000,90.5550000); //amt 8557(1122)
	CreateDynamicObject(8557,-5893.2812500,2511.0378400,34.1379500,270.0050000,317.5050000,90.5550000); //amt 8557(1123)
	CreateDynamicObject(8557,-5897.8652300,2515.5649400,34.5230100,270.0050000,312.8900000,90.5550000); //amt 8557(1124)
	CreateDynamicObject(8557,-5902.7988300,2519.7085000,34.9080900,270.0050000,308.2750000,90.5550000); //amt 8557(1125)
	CreateDynamicObject(8557,-5908.0493200,2523.4416500,35.2932100,270.0050000,303.6590000,90.5550000); //amt 8557(1126)
	CreateDynamicObject(8557,-5913.5835000,2526.7402300,35.6783500,270.0050000,299.0440000,90.5550000); //amt 8557(1127)
	CreateDynamicObject(8557,-5919.3647500,2529.5827600,36.0635100,270.0050000,294.4280000,90.5550000); //amt 8557(1128)
	CreateDynamicObject(8557,-5925.3564500,2531.9506800,36.4487000,270.0050000,289.8130000,90.5550000); //amt 8557(1129)
	CreateDynamicObject(8557,-5931.5190400,2533.8291000,36.8339000,270.0050000,285.1980000,90.5550000); //amt 8557(1130)
	CreateDynamicObject(8557,-5937.8129900,2535.2053200,37.2191200,270.0050000,280.5820000,90.5550000); //amt 8557(1131)
	CreateDynamicObject(8557,-5944.1967800,2536.0708000,37.6043500,270.0050000,275.9670000,90.5550000); //amt 8557(1132)
	CreateDynamicObject(8557,-5950.6298800,2536.4196800,37.9895800,270.0050000,271.3520000,90.5550000); //amt 8557(1133)
	CreateDynamicObject(8557,-5957.0703100,2536.2497600,38.3748100,270.0050000,266.7360000,90.5550000); //amt 8557(1134)
	CreateDynamicObject(8557,-5963.4760700,2535.5622600,38.7600400,270.0050000,262.1210000,90.5550000); //amt 8557(1135)
	CreateDynamicObject(8557,-5969.8056600,2534.3615700,39.1452700,270.0050000,257.5050000,90.5550000); //amt 8557(1136)
	CreateDynamicObject(8557,-5976.0175800,2532.6552700,39.5304800,270.0000000,252.8890000,90.5550000); //amt 8557(1137)
	CreateDynamicObject(8557,-5982.0732400,2530.4545900,39.9156800,270.0050000,248.2750000,90.5550000); //amt 8557(1138)
	CreateDynamicObject(8557,-5987.9311500,2527.7739300,40.3008600,270.0050000,243.6590000,90.5550000); //amt 8557(1139)
	CreateDynamicObject(8557,-5993.5551800,2524.6306200,40.6860100,270.0050000,239.0440000,90.5550000); //amt 8557(1140)
	CreateDynamicObject(8557,-5998.9072300,2521.0449200,41.0711500,270.0050000,234.4280000,90.5550000); //amt 8557(1141)
	CreateDynamicObject(8557,-6003.9541000,2517.0400400,41.4562500,270.0050000,229.8130000,90.5550000); //amt 8557(1142)
	CreateDynamicObject(8557,-6008.6621100,2512.6423300,41.8413200,270.0050000,225.1980000,90.5550000); //amt 8557(1143)
	CreateDynamicObject(8557,-6013.0009800,2507.8798800,42.2263600,270.0050000,220.5820000,90.5550000); //amt 8557(1144)
	CreateDynamicObject(8557,-6016.9423800,2502.7836900,42.6113500,270.0050000,215.9670000,90.5550000); //amt 8557(1145)
	CreateDynamicObject(8557,-6020.4609400,2497.3869600,42.9963100,270.0050000,211.3520000,90.5550000); //amt 8557(1146)
	CreateDynamicObject(8557,-6023.5341800,2491.7246100,43.3812300,270.0050000,206.7360000,90.5550000); //amt 8557(1147)
	CreateDynamicObject(8557,-6026.1416000,2485.8332500,43.7661000,270.0050000,202.1210000,90.5550000); //amt 8557(1148)
	CreateDynamicObject(8557,-6028.2661100,2479.7512200,44.1509200,270.0050000,197.5050000,90.5550000); //amt 8557(1149)
	CreateDynamicObject(8557,-6029.8950200,2473.5178200,44.5357000,270.0050000,192.8900000,90.5550000); //amt 8557(1150)
	CreateDynamicObject(8557,-6031.0166000,2467.1735800,44.9204300,270.0050000,188.2750000,90.5550000); //amt 8557(1151)
	CreateDynamicObject(8557,-6031.6240200,2460.7597700,45.3051100,270.0050000,183.6590000,90.5550000); //amt 8557(1152)
	CreateDynamicObject(8557,-6031.7138700,2454.3178700,45.6897400,270.0050000,179.0440000,90.5550000); //amt 8557(1153)
	CreateDynamicObject(8557,-6031.2846700,2447.8896500,46.0743200,270.0050000,174.4280000,90.5550000); //amt 8557(1154)
	CreateDynamicObject(8557,-6030.3398400,2441.5168500,46.4588500,270.0050000,169.8130000,90.5550000); //amt 8557(1155)
	CreateDynamicObject(8557,-6028.8847700,2435.2407200,46.8433300,270.0050000,165.1980000,90.5550000); //amt 8557(1156)
	CreateDynamicObject(8557,-6026.9296900,2429.1018100,47.2277600,270.0050000,160.5820000,90.5550000); //amt 8557(1157)
	CreateDynamicObject(8557,-6024.4873000,2423.1403800,47.6121500,270.0050000,155.9670000,90.5550000); //amt 8557(1158)
	CreateDynamicObject(8557,-6021.5727500,2417.3945300,47.9964900,270.0050000,151.3520000,90.5550000); //amt 8557(1159)
	CreateDynamicObject(8557,-6018.2055700,2411.9021000,48.3807900,270.0050000,146.7360000,90.5550000); //amt 8557(1160)
	CreateDynamicObject(8557,-6014.4072300,2406.6982400,48.7650500,270.0050000,142.1210000,90.5550000); //amt 8557(1161)
	CreateDynamicObject(8557,-6010.2026400,2401.8171400,49.1492600,270.0050000,137.5050000,90.5550000); //amt 8557(1162)
	CreateDynamicObject(8557,-6005.6186500,2397.2900400,49.5334400,270.0050000,132.8900000,90.5550000); //amt 8557(1163)
	CreateDynamicObject(8557,-6000.6850600,2393.1464800,49.9175900,270.0050000,128.2750000,90.5550000); //amt 8557(1164)
	CreateDynamicObject(8557,-5995.4345700,2389.4133300,50.3017000,270.0050000,123.6590000,90.5550000); //amt 8557(1165)
	CreateDynamicObject(8557,-5989.9003900,2386.1147500,50.6857900,270.0050000,119.0440000,90.5550000); //amt 8557(1166)
	CreateDynamicObject(8557,-5984.1186500,2383.2722200,51.0698600,270.0050000,114.4280000,90.5550000); //amt 8557(1167)
	CreateDynamicObject(8557,-5978.1269500,2380.9040500,51.4539000,270.0050000,109.8130000,90.5550000); //amt 8557(1168)
	CreateDynamicObject(8557,-5971.9643600,2379.0258800,51.8379200,270.0050000,105.1980000,90.5550000); //amt 8557(1169)
	CreateDynamicObject(8557,-5965.6704100,2377.6494100,52.2219400,270.0050000,100.5820000,90.5550000); //amt 8557(1170)
	CreateDynamicObject(8557,-5959.2861300,2376.7841800,52.6059500,270.0050000,95.9670000,90.5550000); //amt 8557(1171)
	CreateDynamicObject(8557,-5952.8530300,2376.4353000,52.9899400,270.0050000,91.3520000,90.5550000); //amt 8557(1172)
	CreateDynamicObject(8557,-5946.4130900,2376.6049800,53.3739400,270.0050000,86.7360000,90.5550000); //amt 8557(1173)
	CreateDynamicObject(8557,-5940.0068400,2377.2927200,53.7579400,270.0050000,82.1210000,90.5550000); //amt 8557(1174)
	CreateDynamicObject(8557,-5933.6772500,2378.4934100,54.1419500,270.0050000,77.5050000,90.5550000); //amt 8557(1175)
	CreateDynamicObject(8557,-5927.4648400,2380.1997100,54.5259700,270.0050000,72.8900000,90.5550000); //amt 8557(1176)
	CreateDynamicObject(8557,-5921.4096700,2382.4001500,54.9100000,270.0050000,68.2750000,90.5550000); //amt 8557(1177)
	CreateDynamicObject(8557,-5915.5512700,2385.0808100,55.2940500,270.0050000,63.6590000,90.5550000); //amt 8557(1178)
	CreateDynamicObject(8557,-5909.9277300,2388.2243700,55.6781200,270.0050000,59.0440000,90.5550000); //amt 8557(1179)
	CreateDynamicObject(8557,-5904.5752000,2391.8100600,56.0622300,270.0050000,54.4280000,90.5550000); //amt 8557(1180)
	CreateDynamicObject(8557,-5899.5283200,2395.8147000,56.4463500,270.0050000,49.8130000,90.5550000); //amt 8557(1181)
	CreateDynamicObject(8557,-5894.8203100,2400.2126500,56.8305100,270.0050000,45.1980000,90.5550000); //amt 8557(1182)
	CreateDynamicObject(8557,-5890.4814500,2404.9751000,57.2147100,270.0050000,40.5820000,90.5550000); //amt 8557(1183)
	CreateDynamicObject(8557,-5886.5400400,2410.0712900,57.5989400,270.0050000,35.9670000,90.5550000); //amt 8557(1184)
	CreateDynamicObject(8557,-5883.0210000,2415.4680200,57.9832200,270.0050000,31.3520000,90.5550000); //amt 8557(1185)
	CreateDynamicObject(8557,-5879.9482400,2421.1303700,58.3675300,270.0050000,26.7360000,90.5550000); //amt 8557(1186)
	CreateDynamicObject(8557,-5877.3408200,2427.0217300,58.7518900,270.0050000,22.1210000,90.5550000); //amt 8557(1187)
	CreateDynamicObject(8557,-5875.2158200,2433.1037600,59.1363000,270.0050000,17.5050000,90.5550000); //amt 8557(1188)
	CreateDynamicObject(8557,-5873.5869100,2439.3371600,59.5207500,270.0050000,12.8900000,90.5550000); //amt 8557(1189)
	CreateDynamicObject(8557,-5872.4653300,2445.6811500,59.9052500,270.0050000,8.2750000,90.5550000); //amt 8557(1190)
	CreateDynamicObject(8557,-5871.8574200,2452.0949700,60.2898000,270.0050000,3.6590000,90.5550000); //amt 8557(1191)
	CreateDynamicObject(8557,-5871.7680700,2458.5368700,60.6744000,270.0050000,359.0440000,90.5550000); //amt 8557(1192)
	CreateDynamicObject(8557,-5872.1967800,2464.9653300,61.0590600,270.0050000,354.4280000,90.5550000); //amt 8557(1193)
	CreateDynamicObject(8557,-5873.1420900,2471.3381300,61.4437600,270.0050000,349.8130000,90.5550000); //amt 8557(1194)
	CreateDynamicObject(8557,-5874.5966800,2477.6142600,61.8285000,270.0050000,345.1980000,90.5550000); //amt 8557(1195)
	CreateDynamicObject(8557,-5876.5512700,2483.7529300,62.2133000,270.0050000,340.5820000,90.5550000); //amt 8557(1196)
	CreateDynamicObject(8557,-5878.9941400,2489.7146000,62.5981400,270.0050000,335.9670000,90.5550000); //amt 8557(1197)
	CreateDynamicObject(8557,-5881.9082000,2495.4602100,62.9830400,270.0050000,331.3520000,90.5550000); //amt 8557(1198)
	CreateDynamicObject(8557,-5885.2753900,2500.9528800,63.3679700,270.0050000,326.7360000,90.5550000); //amt 8557(1199)
	CreateDynamicObject(8557,-5889.0737300,2506.1564900,63.7529400,270.0050000,322.1210000,90.5550000); //amt 8557(1200)
	CreateDynamicObject(8557,-5893.2788100,2511.0378400,64.1379500,270.0050000,317.5050000,90.5550000); //amt 8557(1201)
	CreateDynamicObject(8557,-5897.8623000,2515.5649400,64.5230000,270.0050000,312.8900000,90.5550000); //amt 8557(1202)
	CreateDynamicObject(8557,-5902.7959000,2519.7085000,64.9080900,270.0050000,308.2750000,90.5550000); //amt 8557(1203)
	CreateDynamicObject(8557,-5908.0463900,2523.4416500,65.2932100,270.0050000,303.6590000,90.5550000); //amt 8557(1204)
	CreateDynamicObject(8557,-5913.5805700,2526.7402300,65.6783400,270.0050000,299.0440000,90.5550000); //amt 8557(1205)
	CreateDynamicObject(8557,-5919.3618200,2529.5827600,66.0635100,270.0050000,294.4280000,90.5550000); //amt 8557(1206)
	CreateDynamicObject(8557,-5925.3535200,2531.9506800,66.4487000,270.0050000,289.8130000,90.5550000); //amt 8557(1207)
	CreateDynamicObject(8557,-5931.5161100,2533.8291000,66.8339000,270.0050000,285.1980000,90.5550000); //amt 8557(1208)
	CreateDynamicObject(8557,-5937.8100600,2535.2053200,67.2191200,270.0050000,280.5820000,90.5550000); //amt 8557(1209)
	CreateDynamicObject(8557,-5944.1933600,2536.0703100,67.6043500,270.0000000,275.9660000,90.5550000); //amt 8557(1210)
	CreateDynamicObject(8557,-5950.6269500,2536.4196800,67.9895800,270.0050000,271.3520000,90.5550000); //amt 8557(1211)
	CreateDynamicObject(8172,-5955.2998000,2215.6999500,8.0000000,0.0000000,0.0000000,277.9820000); //object(vgssairportland07) (12)
	CreateDynamicObject(8172,-5815.3999000,2271.3000500,8.0000000,0.0000000,0.0000000,323.9820000); //object(vgssairportland07) (13)
	CreateDynamicObject(8172,-5801.6001000,2423.3999000,8.0000000,0.0000000,0.0000000,21.9810000); //object(vgssairportland07) (14)
	CreateDynamicObject(8172,-5955.3994100,2213.1992200,10.6000000,0.0000000,0.0000000,277.9820000); //object(vgssairportland07) (15)
	CreateDynamicObject(8172,-5815.3994100,2271.2998000,10.6000000,0.0000000,0.0000000,323.9810000); //object(vgssairportland07) (16)
	CreateDynamicObject(8172,-5801.5996100,2423.3994100,10.6000000,0.0000000,0.0000000,21.9780000); //object(vgssairportland07) (17)
	CreateDynamicObject(1392,-5938.5000000,2581.8000500,25.7000000,0.0000000,0.0000000,0.0000000); //object(twrcrane_l_04) (1)
	CreateDynamicObject(8557,-5957.8999000,2535.3000500,78.5000000,0.0000000,210.2470000,179.9950000); //amt 8557(1211)
	CreateDynamicObject(1391,-5981.6001000,2532.3000500,78.5000000,0.0000000,0.0000000,0.0000000); //object(twrcrane_s_03) (3)
	CreateDynamicObject(1391,-5981.5996100,2536.6992200,78.5000000,0.0000000,0.0000000,0.0000000); //object(twrcrane_s_03) (6)
	CreateDynamicObject(8172,-5983.0000000,2551.0000000,128.8000000,270.0000000,0.0000000,270.0000000); //object(vgssairportland07) (18)
	CreateDynamicObject(8172,-5988.0000000,2535.1001000,125.3000000,90.0000000,179.9950000,0.0000000); //object(vgssairportland07) (18)
	CreateDynamicObject(8172,-5980.2002000,2551.0000000,147.8999900,269.9950000,0.0000000,270.0000000); //object(vgssairportland07) (18)
	CreateDynamicObject(8557,-5978.5000000,2533.6999500,40.1000000,0.0000000,270.0000000,0.0000000); //amt 8557(1137)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,97.6000000,0.0000000,90.0000000,270.0000000); //object(dockbarr1_la) (1)
	CreateDynamicObject(3578,-5982.1001000,2537.1001000,97.6000000,0.0000000,90.0000000,270.0000000); //object(dockbarr1_la) (2)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,109.1000000,0.0000000,90.0000000,270.0000000); //object(dockbarr1_la) (3)
	CreateDynamicObject(3578,-5982.0996100,2537.0996100,109.1000000,0.0000000,270.0000000,90.0000000); //object(dockbarr1_la) (4)
	CreateDynamicObject(3578,-5982.0991200,2537.0991200,120.6000000,0.0000000,450.0000000,-90.0000000); //amt 3578(5)
	CreateDynamicObject(3578,-5982.0986300,2537.0986300,132.1000000,0.0000000,630.0000000,-270.0000000); //amt 3578(6)
	CreateDynamicObject(3578,-5982.0981400,2537.0981400,143.6000000,0.0000000,810.0000000,-450.0000000); //amt 3578(7)
	CreateDynamicObject(3578,-5982.0976600,2537.0976600,155.1000000,0.0000000,990.0000000,-630.0000000); //amt 3578(8)
	CreateDynamicObject(3578,-5982.0971700,2537.0971700,166.6000000,0.0000000,1170.0000000,-810.0000000); //amt 3578(9)
	CreateDynamicObject(3578,-5982.0966800,2537.0966800,178.1000000,0.0000000,1350.0000000,-990.0000000); //amt 3578(10)
	CreateDynamicObject(3578,-5982.0961900,2537.0961900,189.6000000,0.0000000,1530.0000000,-1170.0000000); //amt 3578(11)
	CreateDynamicObject(3578,-5982.0957000,2537.0957000,201.1000000,0.0000000,1710.0000000,-1350.0000000); //amt 3578(12)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,120.6000000,0.0000000,90.0000000,270.0000000); //amt 3578(14)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,132.1000000,0.0000000,90.0000000,270.0000000); //amt 3578(15)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,143.6000000,0.0000000,90.0000000,270.0000000); //amt 3578(16)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,155.1000000,0.0000000,90.0000000,270.0000000); //amt 3578(17)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,166.6000000,0.0000000,90.0000000,270.0000000); //amt 3578(18)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,178.1000000,0.0000000,90.0000000,270.0000000); //amt 3578(19)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,189.6000000,0.0000000,90.0000000,270.0000000); //amt 3578(20)
	CreateDynamicObject(3578,-5981.1001000,2537.1001000,201.1000000,0.0000000,90.0000000,270.0000000); //amt 3578(21)
	CreateDynamicObject(8557,-5977.0000000,2542.3999000,60.2000000,332.7500000,0.0000000,90.0000000); //amt 8557(1137)
	CreateDynamicObject(8557,-5981.7002000,2524.6999500,178.6000100,0.0000000,300.0000000,90.0000000); //amt 8557(1137)
	CreateDynamicObject(8557,-5972.5000000,2542.1992200,62.2000000,340.2470000,0.0000000,90.0000000); //amt 8557(1137)
	CreateDynamicObject(8557,-5982.1001000,2539.1001000,198.5000000,0.0000000,249.9990000,90.0000000); //amt 8557(1137)
	CreateDynamicObject(8557,-5981.7002000,2520.5100100,171.9593800,0.0000000,304.5000000,90.0000000); //amt 8557(1218)
	CreateDynamicObject(8557,-5981.7002000,2515.8120100,165.6679700,0.0000000,309.0000000,90.0000000); //amt 8557(1219)
	CreateDynamicObject(8557,-5981.7002000,2510.6347700,159.7645400,0.0000000,313.5000000,90.0000000); //amt 8557(1220)
	CreateDynamicObject(8557,-5981.7002000,2505.0105000,154.2855200,0.0000000,318.0000000,90.0000000); //amt 8557(1221)
	CreateDynamicObject(8557,-5981.7002000,2498.9736300,149.2646600,0.0000000,322.5000000,90.0000000); //amt 8557(1222)
	CreateDynamicObject(8557,-5981.7002000,2492.5612800,144.7329400,0.0000000,327.0000000,90.0000000); //amt 8557(1223)
	CreateDynamicObject(8557,-5981.7002000,2485.8132300,140.7182900,0.0000000,331.5000000,90.0000000); //amt 8557(1224)
	CreateDynamicObject(8557,-5981.7002000,2478.7710000,137.2454500,0.0000000,336.0000000,90.0000000); //amt 8557(1225)
	CreateDynamicObject(8557,-5981.7002000,2471.4780300,134.3358500,0.0000000,340.5000000,90.0000000); //amt 8557(1226)
	CreateDynamicObject(8557,-5981.7002000,2463.9792500,132.0074200,0.0000000,345.0000000,90.0000000); //amt 8557(1227)
	CreateDynamicObject(8557,-5981.7002000,2456.3210400,130.2745100,0.0000000,349.5000000,90.0000000); //amt 8557(1228)
	CreateDynamicObject(8557,-5981.7002000,2448.5502900,129.1478000,0.0000000,354.0000000,90.0000000); //amt 8557(1229)
	CreateDynamicObject(8557,-5981.7002000,2440.7150900,128.6342800,0.0000000,358.5000000,90.0000000); //amt 8557(1230)
	CreateDynamicObject(8557,-5981.7002000,2432.8637700,128.7370300,0.0000000,3.0000000,90.0000000); //amt 8557(1231)
	CreateDynamicObject(8557,-5981.7002000,2425.0449200,129.4555100,0.0000000,7.5000000,90.0000000); //amt 8557(1232)
	CreateDynamicObject(8557,-5981.7002000,2417.3061500,130.7852300,0.0000000,12.0000000,90.0000000); //amt 8557(1233)
	CreateDynamicObject(8557,-5981.7002000,2409.6953100,132.7180200,0.0000000,16.4960000,90.0000000); //amt 8557(1234)
	CreateDynamicObject(8557,-5981.7002000,2295.5000000,128.2000000,0.0000000,342.4960000,90.0000000); //amt 8557(1234)
	CreateDynamicObject(8172,-5988.0000000,2533.8999000,120.8000000,90.0000000,179.9950000,0.0000000); //object(vgssairportland07) (18)
	CreateDynamicObject(8557,-5981.7002000,2259.6001000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1234)
	CreateDynamicObject(8557,-5976.6001000,2259.5000000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1234)
	CreateDynamicObject(8557,-5986.7998000,2259.6001000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1234)
	CreateDynamicObject(8557,-5976.6001000,2219.3000500,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1234)
	CreateDynamicObject(8557,-5981.7002000,2219.3000500,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1234)
	CreateDynamicObject(8557,-5986.7998000,2219.5000000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1234)
	CreateDynamicObject(8557,-5976.6001000,2179.1001000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1242)
	CreateDynamicObject(8557,-5976.6001000,2138.9001500,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1243)
	CreateDynamicObject(8557,-5976.6001000,2098.7002000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1244)
	CreateDynamicObject(8557,-5976.6001000,2058.5002400,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1245)
	CreateDynamicObject(8557,-5976.6001000,2018.3002900,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1246)
	CreateDynamicObject(8557,-5976.6001000,1978.1003400,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1247)
	CreateDynamicObject(8557,-5976.6001000,1937.9003900,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1248)
	CreateDynamicObject(8557,-5976.6001000,1897.7004400,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1249)
	CreateDynamicObject(8557,-5976.6001000,1857.5004900,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1250)
	CreateDynamicObject(8557,-5976.6001000,1817.3005400,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1251)
	CreateDynamicObject(8557,-5981.7002000,2179.0000000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1252)
	CreateDynamicObject(8557,-5981.7002000,2138.6999500,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1253)
	CreateDynamicObject(8557,-5981.7002000,2098.3999000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1254)
	CreateDynamicObject(8557,-5981.7002000,2058.0998500,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1255)
	CreateDynamicObject(8557,-5981.7002000,2017.7998000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1256)
	CreateDynamicObject(8557,-5981.7002000,1977.4997600,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1257)
	CreateDynamicObject(8557,-5981.7002000,1937.1997100,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1258)
	CreateDynamicObject(8557,-5981.7002000,1896.8996600,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1259)
	CreateDynamicObject(8557,-5981.7002000,1856.5996100,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1260)
	CreateDynamicObject(8557,-5981.7002000,1816.2995600,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1261)
	CreateDynamicObject(8557,-5986.7998000,2179.3999000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1262)
	CreateDynamicObject(8557,-5986.7998000,2139.2998000,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1263)
	CreateDynamicObject(8557,-5986.7998000,2099.1997100,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1264)
	CreateDynamicObject(8557,-5986.7998000,2059.0996100,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1265)
	CreateDynamicObject(8557,-5986.7998000,2018.9995100,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1266)
	CreateDynamicObject(8557,-5986.7998000,1978.8994100,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1267)
	CreateDynamicObject(8557,-5986.7998000,1938.7993200,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1268)
	CreateDynamicObject(8557,-5986.7998000,1898.6992200,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1269)
	CreateDynamicObject(8557,-5986.7998000,1858.5991200,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1270)
	CreateDynamicObject(8557,-5986.7998000,1818.4990200,123.3000000,0.0000000,0.0000000,90.0000000); //amt 8557(1271)
	CreateDynamicObject(8557,-5981.7002000,1808.4777800,123.9155900,0.0000000,9.0000000,90.0000000); //amt 8557(1272)
	CreateDynamicObject(8557,-5981.7002000,1800.8487500,125.7471800,0.0000000,18.0000000,90.0000000); //amt 8557(1273)
	CreateDynamicObject(8557,-5981.7002000,1793.5999800,128.7496800,0.0000000,27.0000000,90.0000000); //amt 8557(1274)
	CreateDynamicObject(8557,-5981.7002000,1786.9102800,132.8491500,0.0000000,36.0000000,90.0000000); //amt 8557(1275)
	CreateDynamicObject(8557,-5981.7002000,1780.9442100,137.9446700,0.0000000,45.0000000,90.0000000); //amt 8557(1276)
	CreateDynamicObject(8557,-5981.7002000,1775.8487500,143.9107400,0.0000000,54.0000000,90.0000000); //amt 8557(1277)
	CreateDynamicObject(8557,-5981.7002000,1771.7492700,150.6004800,0.0000000,63.0000000,90.0000000); //amt 8557(1278)
	CreateDynamicObject(8557,-5981.7002000,1768.7467000,157.8491500,0.0000000,72.0000000,90.0000000); //amt 8557(1279)
	CreateDynamicObject(8557,-5981.7002000,1766.9151600,165.4782700,0.0000000,81.0000000,90.0000000); //amt 8557(1280)
	CreateDynamicObject(8557,-5981.7002000,1766.2995600,173.3000000,0.0000000,90.0000000,90.0000000); //amt 8557(1281)
	CreateDynamicObject(8557,-5981.7002000,1766.9151600,181.1217300,0.0000000,99.0000000,90.0000000); //amt 8557(1282)
	CreateDynamicObject(8557,-5981.7002000,1768.7467000,188.7508500,0.0000000,108.0000000,90.0000000); //amt 8557(1283)
	CreateDynamicObject(8557,-5981.7002000,1771.7492700,195.9995300,0.0000000,117.0000000,90.0000000); //amt 8557(1284)
	CreateDynamicObject(8557,-5981.7002000,1775.8487500,202.6892700,0.0000000,126.0000000,90.0000000); //amt 8557(1285)
	CreateDynamicObject(8557,-5981.7002000,1780.9442100,208.6553300,0.0000000,135.0000000,90.0000000); //amt 8557(1286)
	CreateDynamicObject(8557,-5981.7002000,1786.9102800,213.7508500,0.0000000,144.0000000,90.0000000); //amt 8557(1287)
	CreateDynamicObject(8557,-5981.7002000,1793.5999800,217.8503300,0.0000000,153.0000000,90.0000000); //amt 8557(1288)
	CreateDynamicObject(8557,-5981.7002000,1800.8487500,220.8528300,0.0000000,162.0000000,90.0000000); //amt 8557(1289)
	CreateDynamicObject(8557,-5981.7002000,1808.4777800,222.6844200,0.0000000,171.0000000,90.0000000); //amt 8557(1290)
	CreateDynamicObject(8557,-5981.7002000,1816.2995600,223.3000000,0.0000000,180.0000000,90.0000000); //amt 8557(1291)
	CreateDynamicObject(8557,-5981.7002000,1824.1213400,222.6844200,0.0000000,189.0000000,90.0000000); //amt 8557(1292)
	CreateDynamicObject(8557,-5981.7002000,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1260)
	CreateDynamicObject(8557,-5976.6001000,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1260)
	CreateDynamicObject(8557,-5986.7998000,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1260)
	CreateDynamicObject(7657,-5974.1001000,1878.1999500,195.7000000,0.0000000,0.0000000,90.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-5974.1001000,1858.1999500,195.7000000,0.0000000,0.0000000,90.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-5984.1001000,1888.1999500,195.7000000,0.0000000,0.0000000,0.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(8557,-5991.8994100,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1296)
	CreateDynamicObject(8557,-5996.9990200,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1297)
	CreateDynamicObject(8557,-6002.0986300,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1298)
	CreateDynamicObject(8557,-6007.1982400,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1299)
	CreateDynamicObject(8557,-6012.2978500,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1300)
	CreateDynamicObject(8557,-6017.3974600,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1301)
	CreateDynamicObject(8557,-6022.4970700,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1302)
	CreateDynamicObject(8557,-6027.5966800,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1303)
	CreateDynamicObject(8557,-6032.6962900,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1304)
	CreateDynamicObject(8557,-6037.7959000,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1305)
	CreateDynamicObject(8557,-6042.8955100,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1306)
	CreateDynamicObject(8557,-6047.9951200,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1307)
	CreateDynamicObject(8557,-6053.0947300,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1308)
	CreateDynamicObject(8557,-6058.1943400,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1309)
	CreateDynamicObject(8557,-6063.2939500,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1310)
	CreateDynamicObject(8557,-6068.3935500,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1311)
	CreateDynamicObject(8557,-6073.4931600,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1312)
	CreateDynamicObject(8557,-6078.5927700,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1313)
	CreateDynamicObject(8557,-6083.6923800,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1314)
	CreateDynamicObject(8557,-6088.7919900,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1315)
	CreateDynamicObject(7657,-6004.1001000,1888.1999500,195.7000000,0.0000000,0.0000000,0.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-5984.1001000,1847.9000200,195.7000000,0.0000000,0.0000000,180.0000000); //object(plasticsgate1) (1)
	CreateDynamicObject(7657,-6004.1001000,1847.9000200,195.7000000,0.0000000,0.0000000,179.9950000); //object(plasticsgate1) (1)
	CreateDynamicObject(8557,-6093.8916000,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1316)
	CreateDynamicObject(8557,-6098.9912100,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1317)
	CreateDynamicObject(8557,-6104.0908200,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1318)
	CreateDynamicObject(8557,-6109.1904300,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1319)
	CreateDynamicObject(8557,-6114.2900400,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1320)
	CreateDynamicObject(8557,-6119.3896500,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1321)
	CreateDynamicObject(8557,-6124.4892600,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1322)
	CreateDynamicObject(8557,-6129.5888700,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1323)
	CreateDynamicObject(8557,-6134.6884800,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1324)
	CreateDynamicObject(8557,-6139.7880900,1868.0000000,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1325)
	CreateDynamicObject(8557,-6144.9238300,1867.8985600,192.5000000,0.0000000,0.0000000,92.2640000); //amt 8557(1347)
	CreateDynamicObject(8557,-6150.0517600,1867.5942400,192.5000000,0.0000000,0.0000000,94.5280000); //amt 8557(1348)
	CreateDynamicObject(8557,-6155.1635700,1867.0875200,192.5000000,0.0000000,0.0000000,96.7920000); //amt 8557(1349)
	CreateDynamicObject(8557,-6160.2514600,1866.3792700,192.5000000,0.0000000,0.0000000,99.0570000); //amt 8557(1350)
	CreateDynamicObject(8557,-6165.3071300,1865.4707000,192.5000000,0.0000000,0.0000000,101.3210000); //amt 8557(1351)
	CreateDynamicObject(8557,-6170.3232400,1864.3630400,192.5000000,0.0000000,0.0000000,103.5850000); //amt 8557(1352)
	CreateDynamicObject(8557,-6175.2915000,1863.0579800,192.5000000,0.0000000,0.0000000,105.8490000); //amt 8557(1353)
	CreateDynamicObject(8557,-6180.2045900,1861.5577400,192.5000000,0.0000000,0.0000000,108.1130000); //amt 8557(1354)
	CreateDynamicObject(8557,-6185.0542000,1859.8645000,192.5000000,0.0000000,0.0000000,110.3770000); //amt 8557(1355)
	CreateDynamicObject(8557,-6189.8335000,1857.9810800,192.5000000,0.0000000,0.0000000,112.6420000); //amt 8557(1356)
	CreateDynamicObject(8557,-6194.5341800,1855.9102800,192.5000000,0.0000000,0.0000000,114.9060000); //amt 8557(1357)
	CreateDynamicObject(8557,-6199.1499000,1853.6554000,192.5000000,0.0000000,0.0000000,117.1700000); //amt 8557(1358)
	CreateDynamicObject(8557,-6203.6728500,1851.2199700,192.5000000,0.0000000,0.0000000,119.4340000); //amt 8557(1359)
	CreateDynamicObject(8557,-6208.0957000,1848.6076700,192.5000000,0.0000000,0.0000000,121.6980000); //amt 8557(1360)
	CreateDynamicObject(8557,-6212.4121100,1845.8227500,192.5000000,0.0000000,0.0000000,123.9620000); //amt 8557(1361)
	CreateDynamicObject(8557,-6216.6152300,1842.8693800,192.5000000,0.0000000,0.0000000,126.2260000); //amt 8557(1362)
	CreateDynamicObject(8557,-6220.6982400,1839.7524400,192.5000000,0.0000000,0.0000000,128.4910000); //amt 8557(1363)
	CreateDynamicObject(8557,-6224.6547900,1836.4764400,192.5000000,0.0000000,0.0000000,130.7550000); //amt 8557(1364)
	CreateDynamicObject(8557,-6228.4790000,1833.0467500,192.5000000,0.0000000,0.0000000,133.0190000); //amt 8557(1365)
	CreateDynamicObject(8557,-6232.1650400,1829.4687500,192.5000000,0.0000000,0.0000000,135.2830000); //amt 8557(1366)
	CreateDynamicObject(8557,-6235.7065400,1825.7478000,192.5000000,0.0000000,0.0000000,137.5470000); //amt 8557(1367)
	CreateDynamicObject(8557,-6239.0981400,1821.8898900,192.5000000,0.0000000,0.0000000,139.8110000); //amt 8557(1368)
	CreateDynamicObject(8557,-6242.3349600,1817.9010000,192.5000000,0.0000000,0.0000000,142.0750000); //amt 8557(1369)
	CreateDynamicObject(8557,-6245.4111300,1813.7873500,192.5000000,0.0000000,0.0000000,144.3400000); //amt 8557(1370)
	CreateDynamicObject(8557,-6248.3232400,1809.5553000,192.5000000,0.0000000,0.0000000,146.6040000); //amt 8557(1371)
	CreateDynamicObject(8557,-6251.0654300,1805.2116700,192.5000000,0.0000000,0.0000000,148.8680000); //amt 8557(1372)
	CreateDynamicObject(8557,-6253.6337900,1800.7629400,192.5000000,0.0000000,0.0000000,151.1320000); //amt 8557(1373)
	CreateDynamicObject(8557,-6256.0244100,1796.2163100,192.5000000,0.0000000,0.0000000,153.3960000); //amt 8557(1374)
	CreateDynamicObject(8557,-6258.2334000,1791.5787400,192.5000000,0.0000000,0.0000000,155.6600000); //amt 8557(1375)
	CreateDynamicObject(8557,-6260.2578100,1786.8575400,192.5000000,0.0000000,0.0000000,157.9250000); //amt 8557(1376)
	CreateDynamicObject(8557,-6262.0937500,1782.0600600,192.5000000,0.0000000,0.0000000,160.1890000); //amt 8557(1377)
	CreateDynamicObject(8557,-6263.7392600,1777.1938500,192.5000000,0.0000000,0.0000000,162.4530000); //amt 8557(1378)
	CreateDynamicObject(8557,-6265.1909200,1772.2663600,192.5000000,0.0000000,0.0000000,164.7170000); //amt 8557(1379)
	CreateDynamicObject(8557,-6266.4467800,1767.2854000,192.5000000,0.0000000,0.0000000,166.9810000); //amt 8557(1380)
	CreateDynamicObject(8557,-6267.5043900,1762.2586700,192.5000000,0.0000000,0.0000000,169.2450000); //amt 8557(1381)
	CreateDynamicObject(8557,-6268.3632800,1757.1940900,192.5000000,0.0000000,0.0000000,171.5090000); //amt 8557(1382)
	CreateDynamicObject(8557,-6269.0210000,1752.0994900,192.5000000,0.0000000,0.0000000,173.7740000); //amt 8557(1383)
	CreateDynamicObject(8557,-6269.4775400,1746.9829100,192.5000000,0.0000000,0.0000000,176.0380000); //amt 8557(1384)
	CreateDynamicObject(8557,-6269.7309600,1741.8522900,192.5000000,0.0000000,0.0000000,178.3020000); //amt 8557(1385)
	CreateDynamicObject(8557,-6269.7817400,1736.7157000,192.5000000,0.0000000,0.0000000,180.5660000); //amt 8557(1386)
	CreateDynamicObject(8557,-6269.6293900,1731.5810500,192.5000000,0.0000000,0.0000000,182.8300000); //amt 8557(1387)
	CreateDynamicObject(8557,-6269.2744100,1726.4565400,192.5000000,0.0000000,0.0000000,185.0940000); //amt 8557(1388)
	CreateDynamicObject(8557,-6268.7172900,1721.3499800,192.5000000,0.0000000,0.0000000,187.3590000); //amt 8557(1389)
	CreateDynamicObject(8557,-6267.9589800,1716.2694100,192.5000000,0.0000000,0.0000000,189.6230000); //amt 8557(1390)
	CreateDynamicObject(8557,-6267.0004900,1711.2227800,192.5000000,0.0000000,0.0000000,191.8870000); //amt 8557(1391)
	CreateDynamicObject(8557,-6265.8432600,1706.2180200,192.5000000,0.0000000,0.0000000,194.1510000); //amt 8557(1392)
	CreateDynamicObject(8557,-6264.4892600,1701.2627000,192.5000000,0.0000000,0.0000000,196.4150000); //amt 8557(1393)
	CreateDynamicObject(8557,-6262.9404300,1696.3648700,192.5000000,0.0000000,0.0000000,198.6790000); //amt 8557(1394)
	CreateDynamicObject(8557,-6261.3916000,1691.4670400,192.5000000,0.0000000,0.0000000,196.4150000); //amt 8557(1395)
	CreateDynamicObject(8557,-6260.0376000,1686.5118400,192.5000000,0.0000000,0.0000000,194.1510000); //amt 8557(1396)
	CreateDynamicObject(8557,-6258.8803700,1681.5069600,192.5000000,0.0000000,0.0000000,191.8870000); //amt 8557(1397)
	CreateDynamicObject(8557,-6257.9218700,1676.4603300,192.5000000,0.0000000,0.0000000,189.6230000); //amt 8557(1398)
	CreateDynamicObject(8557,-6257.1635700,1671.3797600,192.5000000,0.0000000,0.0000000,187.3590000); //amt 8557(1399)
	CreateDynamicObject(8557,-6256.6064500,1666.2731900,192.5000000,0.0000000,0.0000000,185.0940000); //amt 8557(1400)
	CreateDynamicObject(8557,-6256.2514600,1661.1486800,192.5000000,0.0000000,0.0000000,182.8300000); //amt 8557(1401)
	CreateDynamicObject(8557,-6256.0991200,1656.0140400,192.5000000,0.0000000,0.0000000,180.5660000); //amt 8557(1402)
	CreateDynamicObject(8557,-6256.1499000,1650.8774400,192.5000000,0.0000000,0.0000000,178.3020000); //amt 8557(1403)
	CreateDynamicObject(8557,-6256.4038100,1645.7468300,192.5000000,0.0000000,0.0000000,176.0380000); //amt 8557(1404)
	CreateDynamicObject(8557,-6256.8598600,1640.6302500,192.5000000,0.0000000,0.0000000,173.7740000); //amt 8557(1405)
	CreateDynamicObject(8557,-6257.5175800,1635.5357700,192.5000000,0.0000000,0.0000000,171.5090000); //amt 8557(1406)
	CreateDynamicObject(8557,-6258.3764600,1630.4711900,192.5000000,0.0000000,0.0000000,169.2450000); //amt 8557(1407)
	CreateDynamicObject(8557,-6259.4345700,1625.4444600,192.5000000,0.0000000,0.0000000,166.9810000); //amt 8557(1408)
	CreateDynamicObject(8557,-6260.6904300,1620.4635000,192.5000000,0.0000000,0.0000000,164.7170000); //amt 8557(1409)
	CreateDynamicObject(8557,-6262.1420900,1615.5360100,192.5000000,0.0000000,0.0000000,162.4530000); //amt 8557(1410)
	CreateDynamicObject(8557,-6263.7871100,1610.6696800,192.5000000,0.0000000,0.0000000,160.1890000); //amt 8557(1411)
	CreateDynamicObject(8557,-6265.6230500,1605.8721900,192.5000000,0.0000000,0.0000000,157.9250000); //amt 8557(1412)
	CreateDynamicObject(8557,-6267.6474600,1601.1510000,192.5000000,0.0000000,0.0000000,155.6600000); //amt 8557(1413)
	CreateDynamicObject(8557,-6269.8564500,1596.5134300,192.5000000,0.0000000,0.0000000,153.3960000); //amt 8557(1414)
	CreateDynamicObject(8557,-6272.2470700,1591.9668000,192.5000000,0.0000000,0.0000000,151.1320000); //amt 8557(1415)
	CreateDynamicObject(8557,-6274.8159200,1587.5181900,192.5000000,0.0000000,0.0000000,148.8680000); //amt 8557(1416)
	CreateDynamicObject(8557,-6277.5581100,1583.1744400,192.5000000,0.0000000,0.0000000,146.6040000); //amt 8557(1417)
	CreateDynamicObject(8557,-6280.4697300,1578.9425000,192.5000000,0.0000000,0.0000000,144.3400000); //amt 8557(1418)
	CreateDynamicObject(8557,-6283.5459000,1574.8288600,192.5000000,0.0000000,0.0000000,142.0760000); //amt 8557(1419)
	CreateDynamicObject(8557,-6286.7827100,1570.8398400,192.5000000,0.0000000,0.0000000,139.8110000); //amt 8557(1420)
	CreateDynamicObject(8557,-6290.1743200,1566.9819300,192.5000000,0.0000000,0.0000000,137.5470000); //amt 8557(1421)
	CreateDynamicObject(8557,-6293.7158200,1563.2611100,192.5000000,0.0000000,0.0000000,135.2830000); //amt 8557(1422)
	CreateDynamicObject(8557,-6297.4018600,1559.6829800,192.5000000,0.0000000,0.0000000,133.0190000); //amt 8557(1423)
	CreateDynamicObject(8557,-6301.2260700,1556.2533000,192.5000000,0.0000000,0.0000000,130.7550000); //amt 8557(1424)
	CreateDynamicObject(8557,-6305.1826200,1552.9774200,192.5000000,0.0000000,0.0000000,128.4910000); //amt 8557(1425)
	CreateDynamicObject(8557,-6309.2656200,1549.8603500,192.5000000,0.0000000,0.0000000,126.2260000); //amt 8557(1426)
	CreateDynamicObject(8557,-6313.4687500,1546.9069800,192.5000000,0.0000000,0.0000000,123.9620000); //amt 8557(1427)
	CreateDynamicObject(8557,-6317.7851600,1544.1220700,192.5000000,0.0000000,0.0000000,121.6980000); //amt 8557(1428)
	CreateDynamicObject(8557,-6322.2080100,1541.5097700,192.5000000,0.0000000,0.0000000,119.4340000); //amt 8557(1429)
	CreateDynamicObject(8557,-6326.7309600,1539.0743400,192.5000000,0.0000000,0.0000000,117.1700000); //amt 8557(1430)
	CreateDynamicObject(8557,-6331.3466800,1536.8194600,192.5000000,0.0000000,0.0000000,114.9060000); //amt 8557(1431)
	CreateDynamicObject(8557,-6336.0473600,1534.7486600,192.5000000,0.0000000,0.0000000,112.6420000); //amt 8557(1432)
	CreateDynamicObject(8557,-6340.8266600,1532.8652300,192.5000000,0.0000000,0.0000000,110.3770000); //amt 8557(1433)
	CreateDynamicObject(8557,-6345.6762700,1531.1720000,192.5000000,0.0000000,0.0000000,108.1130000); //amt 8557(1434)
	CreateDynamicObject(8557,-6350.5893600,1529.6717500,192.5000000,0.0000000,0.0000000,105.8490000); //amt 8557(1435)
	CreateDynamicObject(8557,-6355.5576200,1528.3668200,192.5000000,0.0000000,0.0000000,103.5850000); //amt 8557(1436)
	CreateDynamicObject(8557,-6360.5737300,1527.2590300,192.5000000,0.0000000,0.0000000,101.3210000); //amt 8557(1437)
	CreateDynamicObject(8557,-6365.6293900,1526.3504600,192.5000000,0.0000000,0.0000000,99.0570000); //amt 8557(1438)
	CreateDynamicObject(8557,-6370.7172900,1525.6422100,192.5000000,0.0000000,0.0000000,96.7920000); //amt 8557(1439)
	CreateDynamicObject(8557,-6375.8291000,1525.1355000,192.5000000,0.0000000,0.0000000,94.5280000); //amt 8557(1440)
	CreateDynamicObject(8557,-6380.9570300,1524.8313000,192.5000000,0.0000000,0.0000000,92.2640000); //amt 8557(1441)
	CreateDynamicObject(8557,-6386.0927700,1524.7297400,192.5000000,0.0000000,0.0000000,90.0000000); //amt 8557(1442)
	CreateDynamicObject(8557,-6391.2211900,1524.6475800,192.5000000,0.0000000,0.0000000,91.8370000); //amt 8557(1443)
	CreateDynamicObject(8557,-6396.3442400,1524.4010000,192.5000000,0.0000000,0.0000000,93.6730000); //amt 8557(1444)
	CreateDynamicObject(8557,-6401.4565400,1523.9903600,192.5000000,0.0000000,0.0000000,95.5100000); //amt 8557(1445)
	CreateDynamicObject(8557,-6406.5532200,1523.4161400,192.5000000,0.0000000,0.0000000,97.3470000); //amt 8557(1446)
	CreateDynamicObject(8557,-6411.6289100,1522.6788300,192.5000000,0.0000000,0.0000000,99.1840000); //amt 8557(1447)
	CreateDynamicObject(8557,-6416.6782200,1521.7791700,192.5000000,0.0000000,0.0000000,101.0200000); //amt 8557(1448)
	CreateDynamicObject(8557,-6421.6962900,1520.7182600,192.5000000,0.0000000,0.0000000,102.8570000); //amt 8557(1449)
	CreateDynamicObject(8557,-6426.6777300,1519.4969500,192.5000000,0.0000000,0.0000000,104.6940000); //amt 8557(1450)
	CreateDynamicObject(8557,-6431.6171900,1518.1165800,192.5000000,0.0000000,0.0000000,106.5310000); //amt 8557(1451)
	CreateDynamicObject(8557,-6436.5102500,1516.5786100,192.5000000,0.0000000,0.0000000,108.3670000); //amt 8557(1452)
	CreateDynamicObject(8557,-6441.3510700,1514.8846400,192.5000000,0.0000000,0.0000000,110.2040000); //amt 8557(1453)
	CreateDynamicObject(8557,-6446.1352500,1513.0363800,192.5000000,0.0000000,0.0000000,112.0410000); //amt 8557(1454)
	CreateDynamicObject(8557,-6450.8579100,1511.0357700,192.5000000,0.0000000,0.0000000,113.8780000); //amt 8557(1455)
	CreateDynamicObject(8557,-6455.5141600,1508.8847700,192.5000000,0.0000000,0.0000000,115.7140000); //amt 8557(1456)
	CreateDynamicObject(8557,-6460.0991200,1506.5855700,192.5000000,0.0000000,0.0000000,117.5510000); //amt 8557(1457)
	CreateDynamicObject(8557,-6464.6074200,1504.1407500,192.5000000,0.0000000,0.0000000,119.3880000); //amt 8557(1458)
	CreateDynamicObject(8557,-6469.0356400,1501.5526100,192.5000000,0.0000000,0.0000000,121.2240000); //amt 8557(1459)
	CreateDynamicObject(8557,-6473.3784200,1498.8238500,192.5000000,0.0000000,0.0000000,123.0610000); //amt 8557(1460)
	CreateDynamicObject(8557,-6477.6313500,1495.9572800,192.5000000,0.0000000,0.0000000,124.8980000); //amt 8557(1461)
	CreateDynamicObject(8557,-6481.7905300,1492.9559300,192.5000000,0.0000000,0.0000000,126.7350000); //amt 8557(1462)
	CreateDynamicObject(8557,-6485.8510700,1489.8227500,192.5000000,0.0000000,0.0000000,128.5710000); //amt 8557(1463)
	CreateDynamicObject(8557,-6489.8090800,1486.5610400,192.5000000,0.0000000,0.0000000,130.4080000); //amt 8557(1464)
	CreateDynamicObject(8557,-6493.6611300,1483.1741900,192.5000000,0.0000000,0.0000000,132.2450000); //amt 8557(1465)
	CreateDynamicObject(8557,-6497.4018600,1479.6656500,192.5000000,0.0000000,0.0000000,134.0820000); //amt 8557(1466)
	CreateDynamicObject(8557,-6501.0288100,1476.0389400,192.5000000,0.0000000,0.0000000,135.9180000); //amt 8557(1467)
	CreateDynamicObject(8557,-6504.5371100,1472.2978500,192.5000000,0.0000000,0.0000000,137.7550000); //amt 8557(1468)
	CreateDynamicObject(8557,-6507.9243200,1468.4462900,192.5000000,0.0000000,0.0000000,139.5920000); //amt 8557(1469)
	CreateDynamicObject(8557,-6511.1860400,1464.4881600,192.5000000,0.0000000,0.0000000,141.4290000); //amt 8557(1470)
	CreateDynamicObject(8557,-6514.3188500,1460.4273700,192.5000000,0.0000000,0.0000000,143.2650000); //amt 8557(1471)
	CreateDynamicObject(8557,-6517.3203100,1456.2684300,192.5000000,0.0000000,0.0000000,145.1020000); //amt 8557(1472)
	CreateDynamicObject(8557,-6520.1870100,1452.0152600,192.5000000,0.0000000,0.0000000,146.9390000); //amt 8557(1473)
	CreateDynamicObject(8557,-6522.9155300,1447.6724900,192.5000000,0.0000000,0.0000000,148.7760000); //amt 8557(1474)
	CreateDynamicObject(8557,-6525.5039100,1443.2445100,192.5000000,0.0000000,0.0000000,150.6120000); //amt 8557(1475)
	CreateDynamicObject(8557,-6527.9487300,1438.7358400,192.5000000,0.0000000,0.0000000,152.4490000); //amt 8557(1476)
	CreateDynamicObject(8557,-6530.2475600,1434.1511200,192.5000000,0.0000000,0.0000000,154.2860000); //amt 8557(1477)
	CreateDynamicObject(8557,-6532.3989300,1429.4951200,192.5000000,0.0000000,0.0000000,156.1220000); //amt 8557(1478)
	CreateDynamicObject(8557,-6534.3994100,1424.7724600,192.5000000,0.0000000,0.0000000,157.9590000); //amt 8557(1479)
	CreateDynamicObject(8557,-6536.2475600,1419.9881600,192.5000000,0.0000000,0.0000000,159.7960000); //amt 8557(1480)
	CreateDynamicObject(8557,-6537.9418900,1415.1470900,192.5000000,0.0000000,0.0000000,161.6330000); //amt 8557(1481)
	CreateDynamicObject(8557,-6539.4794900,1410.2541500,192.5000000,0.0000000,0.0000000,163.4690000); //amt 8557(1482)
	CreateDynamicObject(8557,-6540.8598600,1405.3144500,192.5000000,0.0000000,0.0000000,165.3060000); //amt 8557(1483)
	CreateDynamicObject(8557,-6542.0810500,1400.3331300,192.5000000,0.0000000,0.0000000,167.1430000); //amt 8557(1484)
	CreateDynamicObject(8557,-6543.1420900,1395.3151900,192.5000000,0.0000000,0.0000000,168.9800000); //amt 8557(1485)
	CreateDynamicObject(8557,-6544.0419900,1390.2657500,192.5000000,0.0000000,0.0000000,170.8160000); //amt 8557(1486)
	CreateDynamicObject(8557,-6544.7793000,1385.1900600,192.5000000,0.0000000,0.0000000,172.6530000); //amt 8557(1487)
	CreateDynamicObject(8557,-6545.3535200,1380.0933800,192.5000000,0.0000000,0.0000000,174.4900000); //amt 8557(1488)
	CreateDynamicObject(8557,-6545.7641600,1374.9809600,192.5000000,0.0000000,0.0000000,176.3270000); //amt 8557(1489)
	CreateDynamicObject(8557,-6546.0107400,1369.8580300,192.5000000,0.0000000,0.0000000,178.1630000); //amt 8557(1490)
	CreateDynamicObject(8557,-6546.0927700,1364.7297400,192.5000000,0.0000000,0.0000000,180.0000000); //amt 8557(1491)
	CreateDynamicObject(8557,-6546.0107400,1359.6014400,192.5000000,0.0000000,0.0000000,181.8370000); //amt 8557(1492)
	CreateDynamicObject(8557,-6545.7641600,1354.4785200,192.5000000,0.0000000,0.0000000,183.6730000); //amt 8557(1493)
	CreateDynamicObject(8557,-6545.3535200,1349.3660900,192.5000000,0.0000000,0.0000000,185.5100000); //amt 8557(1494)
	CreateDynamicObject(8557,-6544.7793000,1344.2694100,192.5000000,0.0000000,0.0000000,187.3470000); //amt 8557(1495)
	CreateDynamicObject(8557,-6544.0419900,1339.1937300,192.5000000,0.0000000,0.0000000,189.1840000); //amt 8557(1496)
	CreateDynamicObject(8557,-6543.1420900,1334.1442900,192.5000000,0.0000000,0.0000000,191.0200000); //amt 8557(1497)
	CreateDynamicObject(8557,-6542.0810500,1329.1263400,192.5000000,0.0000000,0.0000000,192.8570000); //amt 8557(1498)
	CreateDynamicObject(8557,-6540.8598600,1324.1450200,192.5000000,0.0000000,0.0000000,194.6940000); //amt 8557(1499)
	CreateDynamicObject(8557,-6539.4794900,1319.2053200,192.5000000,0.0000000,0.0000000,196.5310000); //amt 8557(1500)
	CreateDynamicObject(8557,-6537.9418900,1314.3123800,192.5000000,0.0000000,0.0000000,198.3670000); //amt 8557(1501)
	CreateDynamicObject(8557,-6536.2475600,1309.4713100,192.5000000,0.0000000,0.0000000,200.2040000); //amt 8557(1502)
	CreateDynamicObject(8557,-6534.3994100,1304.6870100,192.5000000,0.0000000,0.0000000,202.0410000); //amt 8557(1503)
	CreateDynamicObject(8557,-6532.3989300,1299.9643600,192.5000000,0.0000000,0.0000000,203.8780000); //amt 8557(1504)
	CreateDynamicObject(8557,-6530.2475600,1295.3083500,192.5000000,0.0000000,0.0000000,205.7140000); //amt 8557(1505)
	CreateDynamicObject(8557,-6527.9487300,1290.7236300,192.5000000,0.0000000,0.0000000,207.5510000); //amt 8557(1506)
	CreateDynamicObject(8557,-6525.5039100,1286.2149700,192.5000000,0.0000000,0.0000000,209.3880000); //amt 8557(1507)
	CreateDynamicObject(8557,-6522.9155300,1281.7868700,192.5000000,0.0000000,0.0000000,211.2240000); //amt 8557(1508)
	CreateDynamicObject(8557,-6520.1870100,1277.4440900,192.5000000,0.0000000,0.0000000,213.0610000); //amt 8557(1509)
	CreateDynamicObject(8557,-6517.3203100,1273.1910400,192.5000000,0.0000000,0.0000000,214.8980000); //amt 8557(1510)
	CreateDynamicObject(8557,-6514.3188500,1269.0321000,192.5000000,0.0000000,0.0000000,216.7350000); //amt 8557(1511)
	CreateDynamicObject(8557,-6511.1860400,1264.9714400,192.5000000,0.0000000,0.0000000,218.5710000); //amt 8557(1512)
	CreateDynamicObject(8557,-6507.9243200,1261.0131800,192.5000000,0.0000000,0.0000000,220.4080000); //amt 8557(1513)
	CreateDynamicObject(8557,-6504.5371100,1257.1616200,192.5000000,0.0000000,0.0000000,222.2450000); //amt 8557(1514)
	CreateDynamicObject(8557,-6501.0288100,1253.4205300,192.5000000,0.0000000,0.0000000,224.0820000); //amt 8557(1515)
	CreateDynamicObject(8557,-6497.4018600,1249.7938200,192.5000000,0.0000000,0.0000000,225.9180000); //amt 8557(1516)
	CreateDynamicObject(8557,-6493.6611300,1246.2852800,192.5000000,0.0000000,0.0000000,227.7550000); //amt 8557(1517)
	CreateDynamicObject(8557,-6489.8090800,1242.8984400,192.5000000,0.0000000,0.0000000,229.5920000); //amt 8557(1518)
	CreateDynamicObject(8557,-6485.8510700,1239.6367200,192.5000000,0.0000000,0.0000000,231.4290000); //amt 8557(1519)
	CreateDynamicObject(8557,-6481.7905300,1236.5035400,192.5000000,0.0000000,0.0000000,233.2650000); //amt 8557(1520)
	CreateDynamicObject(8557,-6477.6313500,1233.5022000,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1521)
	CreateDynamicObject(8557,-6473.5000000,1230.5999800,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1521)
	CreateDynamicObject(8557,-6469.2998000,1227.6999500,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1521)
	CreateDynamicObject(8557,-6465.0996100,1224.7999300,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1524)
	CreateDynamicObject(8557,-6460.8994100,1221.8999000,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1525)
	CreateDynamicObject(8557,-6456.6992200,1218.9998800,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1526)
	CreateDynamicObject(8557,-6452.4990200,1216.0998500,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1527)
	CreateDynamicObject(8557,-6448.2988300,1213.1998300,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1528)
	CreateDynamicObject(8557,-6444.0986300,1210.2998000,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1529)
	CreateDynamicObject(8557,-6439.8984400,1207.3997800,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1530)
	CreateDynamicObject(8557,-6435.6982400,1204.4997600,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1531)
	CreateDynamicObject(8557,-6431.4980500,1201.5997300,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1532)
	CreateDynamicObject(8557,-6427.2978500,1198.6997100,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1533)
	CreateDynamicObject(8557,-6423.0976600,1195.7996800,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1534)
	CreateDynamicObject(8557,-6418.8974600,1192.8996600,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1535)
	CreateDynamicObject(8557,-6414.6972700,1189.9996300,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1536)
	CreateDynamicObject(8557,-6410.4970700,1187.0996100,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1537)
	CreateDynamicObject(8557,-6406.2968700,1184.1995800,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1538)
	CreateDynamicObject(8557,-6402.0966800,1181.2995600,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1539)
	CreateDynamicObject(8557,-6397.8964800,1178.3995400,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1540)
	CreateDynamicObject(8557,-6393.6962900,1175.4995100,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1541)
	CreateDynamicObject(8557,-6389.4960900,1172.5994900,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1542)
	CreateDynamicObject(8557,-6385.2959000,1169.6994600,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1543)
	CreateDynamicObject(8557,-6381.0957000,1166.7994400,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1544)
	CreateDynamicObject(8557,-6376.8955100,1163.8994100,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1545)
	CreateDynamicObject(8557,-6372.6953100,1160.9993900,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1546)
	CreateDynamicObject(8557,-6368.4951200,1158.0993700,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1547)
	CreateDynamicObject(8557,-6364.2949200,1155.1993400,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1548)
	CreateDynamicObject(8557,-6360.0947300,1152.2993200,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1549)
	CreateDynamicObject(8557,-6355.8945300,1149.3992900,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1550)
	CreateDynamicObject(8557,-6351.6943400,1146.4992700,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1551)
	CreateDynamicObject(8557,-6347.4941400,1143.5992400,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1552)
	CreateDynamicObject(8557,-6343.2939500,1140.6992200,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1553)
	CreateDynamicObject(8557,-6339.0937500,1137.7991900,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1554)
	CreateDynamicObject(8557,-6334.8935500,1134.8991700,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1555)
	CreateDynamicObject(8557,-6330.6933600,1131.9991500,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1556)
	CreateDynamicObject(8557,-6326.4931600,1129.0991200,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1557)
	CreateDynamicObject(8557,-6322.2929700,1126.1991000,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1558)
	CreateDynamicObject(8557,-6318.0927700,1123.2990700,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1559)
	CreateDynamicObject(8557,-6313.8925800,1120.3990500,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1560)
	CreateDynamicObject(8557,-6309.6923800,1117.4990200,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1561)
	CreateDynamicObject(8557,-6305.4921900,1114.5990000,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1562)
	CreateDynamicObject(8557,-6301.2919900,1111.6989700,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1563)
	CreateDynamicObject(8557,-6360.0947300,1152.2993200,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1564)
	CreateDynamicObject(8557,-6355.8945300,1149.3992900,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1565)
	CreateDynamicObject(8557,-6351.6943400,1146.4992700,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1566)
	CreateDynamicObject(8557,-6347.4941400,1143.5992400,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1567)
	CreateDynamicObject(8557,-6343.2939500,1140.6992200,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1568)
	CreateDynamicObject(8557,-6339.0937500,1137.7991900,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1569)
	CreateDynamicObject(8557,-6334.8935500,1134.8991700,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1570)
	CreateDynamicObject(8557,-6330.6933600,1131.9991500,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1571)
	CreateDynamicObject(8557,-6326.4931600,1129.0991200,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1572)
	CreateDynamicObject(8557,-6322.2998000,1126.1999500,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1573)
	CreateDynamicObject(8557,-6318.0927700,1123.2990700,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1574)
	CreateDynamicObject(8557,-6313.8925800,1120.3990500,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1575)
	CreateDynamicObject(8557,-6309.6923800,1117.4990200,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1576)
	CreateDynamicObject(8557,-6305.4921900,1114.5990000,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1577)
	CreateDynamicObject(8557,-6301.2919900,1111.6989700,192.5000000,0.0000000,0.0000000,235.1020000); //amt 8557(1578)
	CreateDynamicObject(3578,-6297.2998000,1112.9000200,194.1000100,0.0000000,350.5000000,325.0000000); //object(dockbarr1_la) (5)
	CreateDynamicObject(8557,-6307.6001000,1122.0999800,195.3000000,90.0000000,90.0000000,235.1020000); //amt 8557(1578)
	CreateDynamicObject(8557,-6311.0000000,1117.5999800,195.3000000,270.0000000,180.0090000,144.5480000); //amt 8557(1578)
	CreateDynamicObject(8557,-6338.6001000,1147.0999800,195.3000000,90.0000000,186.5870000,130.5100000); //amt 8557(1578)
	CreateDynamicObject(8557,-6345.2002000,1138.1999500,195.3000000,270.0000000,180.0020000,153.2930000); //amt 8557(1578)
	CreateDynamicObject(8557,-6372.7998000,1131.1999500,195.3000000,270.0000000,180.0000000,235.2930000); //amt 8557(1578)
	CreateDynamicObject(8557,-6341.6001000,1175.5000000,195.3000000,270.0000000,179.9950000,235.2890000); //amt 8557(1578)
	CreateDynamicObject(6959,-6272.2998000,1092.1999500,195.1000100,0.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6238.5000000,1068.5000000,195.1000100,0.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6238.5000000,1068.5000000,196.4299900,0.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6204.7002000,1044.7998000,195.1000100,0.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6204.7002000,1044.7998000,196.3999900,0.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6273.7002000,1093.5000000,195.1000100,0.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6237.7002000,1074.0000000,196.3999900,90.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6243.2002000,1066.1999500,196.3999900,90.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6269.3999000,1099.5999800,196.3999900,90.0000000,180.0000000,136.9970000); //amt 6959(7)
	CreateDynamicObject(6959,-6277.8999000,1086.4000200,196.3999900,90.0000000,180.0000000,154.9970000); //amt 6959(7)
	CreateDynamicObject(6959,-6204.1001000,1050.5000000,196.3999900,90.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6211.3999000,1043.9000200,196.3999900,90.0000000,0.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6159.1001000,1013.2000100,147.6000100,0.0000000,323.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6132.2002000,994.4000200,172.3999900,0.0000000,322.9980000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6109.2002000,978.2999900,201.3999900,0.0000000,305.0000000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6089.8999000,964.7000100,235.1000100,0.0000000,304.9970000,324.9980000); //amt 6959(7)
	CreateDynamicObject(6959,-6070.5996100,951.1000400,268.8000200,0.0000000,305.0000000,324.9980000); //amt 6959(47)
	CreateDynamicObject(6959,-6051.2993200,937.5000600,302.5000300,0.0000000,305.0000000,324.9980000); //amt 6959(48)
	CreateDynamicObject(6959,-6031.9990200,923.9000900,336.2000400,0.0000000,305.0000000,324.9980000); //amt 6959(49)
	CreateDynamicObject(6959,-6005.2002000,905.2999900,353.1000100,0.0000000,0.0000000,324.9980000); //amt 6959(49)
	CreateDynamicObject(6959,-5971.7002000,881.7000100,353.1000100,0.0000000,0.0000000,324.9980000); //amt 6959(49)
	CreateDynamicObject(5716,-5943.0000000,856.0999800,366.5000000,0.0000000,0.0000000,235.7500000); //object(manns01_lawn) (1)	
	
	//poolhouse /ph
	CreateDynamicObject(3115, -684.70288085938, 402.22344970703, 0.62499994039536, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -663.97601318359, 402.18029785156, 0.62499994039536, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -642.88861083984, 403.21832275391, 0.59999996423721, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -621.84808349609, 402.39926147461, 0.59999996423721, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -621.65411376953, 383.49298095703, 0.67499989271164, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -621.619140625, 364.78952026367, 0.62499994039536, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -642.64422607422, 364.9157409668, 0.59999996423721, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -663.68157958984, 364.87884521484, 0.55000001192093, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -684.73400878906, 364.96374511719, 0.51974219083786, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -684.71044921875, 383.60052490234, 0.57499998807907, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -684.5791015625, 411.38598632813, 8.9249963760376, 90, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -663.4365234375, 411.39016723633, 8.9249963760376, 90, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -642.50408935547, 411.39447021484, 8.9249963760376, 90, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -621.46813964844, 411.41021728516, 8.9249963760376, 90, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -610.88598632813, 401.92361450195, 7.6281132698059, 0.000000, 270, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -611.4404296875, 383.29846191406, 7.7875552177429, 0.000000, 270, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -611.388671875, 364.65417480469, 7.7875552177429, 0.000000, 269.99450683594, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -621.77606201172, 355.3828125, 8.9249963760376, 270, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -642.78845214844, 355.30255126953, 8.9249963760376, 269.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -663.85461425781, 355.2685546875, 8.9249963760376, 269.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -684.89300537109, 355.21215820313, 8.9249963760376, 269.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -695.47741699219, 364.62097167969, 7.7875552177429, 0.000000, 90, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -695.45080566406, 383.33456420898, 7.7875552177429, 0.000000, 90, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -695.39892578125, 402.0569152832, 7.7875552177429, 0.000000, 90, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -663.71264648438, 402.1494140625, 18.024976730347, 180, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -684.79217529297, 402.15612792969, 18.024976730347, 179.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -685.06781005859, 383.90274047852, 18.024976730347, 179.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -684.99176025391, 366.53082275391, 18.024976730347, 179.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -664.39538574219, 365.17724609375, 18.024976730347, 179.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -643.70025634766, 365.23583984375, 18.024976730347, 179.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -622.27642822266, 365.08517456055, 18.024976730347, 179.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -622.13214111328, 383.8581237793, 18.024976730347, 179.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -621.97802734375, 402.10568237305, 18.024976730347, 179.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3115, -643.06799316406, 402.09378051758, 18.024976730347, 179.99450683594, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(14537, -654.21759033203, 365.75091552734, 2.7090318202972, 0.000000, 0.000000, 17.864990234375,0,-1,-1);
	CreateDynamicObject(18090, -693.83038330078, 382.68780517578, 3.349009513855, 0.000000, 0.000000, 180.39996337891,0,-1,-1);
	CreateDynamicObject(16151, -669.47387695313, 410.25653076172, 1.2791991233826, 0.000000, 0.000000, 89.325012207031,0,-1,-1);
	CreateDynamicObject(1594, -689.47637939453, 380.65939331055, 1.3762063980103, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(1594, -690.65014648438, 384.72470092773, 1.3790726661682, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(1594, -686.98590087891, 386.64465332031, 1.370124578476, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(1594, -684.95855712891, 382.98721313477, 1.366215467453, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(1594, -687.04943847656, 378.32781982422, 1.3516401052475, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(897, -623.19580078125, 388.68572998047, 0.89588499069214, 0.000000, 0.000000, 306.4049987793,0,-1,-1);
	CreateDynamicObject(897, -615.02844238281, 389.28912353516, 0.89588499069214, 0.000000, 7.9400024414063, 244.86853027344,0,-1,-1);
	CreateDynamicObject(897, -623.26129150391, 383.86044311523, 0.89588499069214, 0.000000, 7.9376220703125, 244.86328125,0,-1,-1);
	CreateDynamicObject(897, -622.53759765625, 377.82092285156, 0.89588499069214, 0.000000, 7.9376220703125, 203.17822265625,0,-1,-1);
	CreateDynamicObject(897, -614.79821777344, 381.64343261719, 0.89588499069214, 0.000000, 7.93212890625, 203.17565917969,0,-1,-1);
	CreateDynamicObject(897, -616.01647949219, 378.68218994141, 0.89588499069214, 0.000000, 7.93212890625, 256.77062988281,0,-1,-1);
	CreateDynamicObject(897, -613.19812011719, 384.19259643555, 5.3958849906921, 0.000000, 7.9266357421875, 256.76696777344,0,-1,-1);
	CreateDynamicObject(897, -618.29943847656, 387.39007568359, 5.3958849906921, 0.000000, 7.9266357421875, 292.49670410156,0,-1,-1);
	CreateDynamicObject(897, -616.47546386719, 381.15069580078, 5.3958849906921, 0.000000, 7.921142578125, 238.89978027344,0,-1,-1);
	CreateDynamicObject(897, -614.53601074219, 384.32107543945, 9.6458854675293, 344.11999511719, 55.5556640625, 270.65759277344,0,-1,-1);
	CreateDynamicObject(3865, -624.82397460938, 384.74697875977, 7.1272521018982, 0.000000, 0.000000, 270.67504882813,0,-1,-1);
	CreateDynamicObject(3865, -618.11505126953, 384.78060913086, 7.1272521018982, 0.000000, 0.000000, 270.67016601563,0,-1,-1);
	CreateDynamicObject(9831, -630.81585693359, 384.96325683594, 3.9678597450256, 0.000000, 0.000000, 95.280151367188,0,-1,-1);
	CreateDynamicObject(896, -619.60278320313, 385.13549804688, 4.3182144165039, 0.000000, 0.000000, 314.34497070313,0,-1,-1);
	CreateDynamicObject(11495, -673.775390625, 382.97439575195, 0.77499979734421, 0.000000, 0.000000, 179.54998779297,0,-1,-1);
	CreateDynamicObject(11495, -663.59912109375, 393.04724121094, 0.79999977350235, 0.000000, 0.000000, 90.224548339844,0,-1,-1);
	CreateDynamicObject(11495, -641.67395019531, 393.15121459961, 0.77499979734421, 0.000000, 0.000000, 90.2197265625,0,-1,-1);
	CreateDynamicObject(11495, -631.52502441406, 383.07348632813, 0.82499974966049, 0.000000, 359.5, 359.15972900391,0,-1,-1);
	CreateDynamicObject(11495, -641.94116210938, 373.49606323242, 0.84999972581863, 0.000000, 359.49462890625, 269.10021972656,0,-1,-1);
	CreateDynamicObject(11495, -663.68255615234, 373.74838256836, 0.79999977350235, 0.000000, 359.48913574219, 269.59912109375,0,-1,-1);
	CreateDynamicObject(3472, -630.48455810547, 393.88897705078, 0.43582761287689, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3472, -653.23876953125, 393.72311401367, 0.43582761287689, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3472, -674.30859375, 393.86636352539, 0.43582761287689, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3472, -674.49371337891, 373.09136962891, 0.43582761287689, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3472, -653.28930664063, 372.76208496094, 0.43582761287689, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3472, -631.03741455078, 372.73205566406, 0.43582761287689, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(2780, -662.50793457031, 384.22595214844, -7.5, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(2780, -637.86486816406, 383.8740234375, -8.5, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(3505, -627.38446044922, 380.6865234375, -1.160263299942, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(638, -675.26043701172, 377.84777832031, 0.90797090530396, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(638, -675.09765625, 389.33319091797, 0.90797090530396, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(1255, -665.31756591797, 396.87432861328, 1.5504364967346, 0.000000, 0.000000, 324.26995849609,0,-1,-1);
	CreateDynamicObject(1255, -660.14727783203, 397.56362915039, 1.5238745212555, 0.000000, 0.000000, 324.26696777344,0,-1,-1);
	CreateDynamicObject(1255, -653.72418212891, 397.45324707031, 1.5241711139679, 0.000000, 0.000000, 324.26696777344,0,-1,-1);
	CreateDynamicObject(1255, -646.38732910156, 397.89886474609, 1.722527384758, 0.000000, 0.000000, 324.26696777344,0,-1,-1);
	CreateDynamicObject(1255, -637.7529296875, 398.09487915039, 1.7220007181168, 0.000000, 0.000000, 324.26696777344,0,-1,-1);
	CreateDynamicObject(14651, -628.32971191406, 402.99432373047, 3.2203845977783, 0.000000, 0.000000, 57.565002441406,0,-1,-1);
	CreateDynamicObject(12950, -689.86090087891, 356.61294555664, 15.031223297119, 0.000000, 0.000000, 91.045013427734,0,-1,-1);
	CreateDynamicObject(12950, -683.59454345703, 356.76763916016, 10.231216430664, 0.000000, 0.000000, 91.043701171875,0,-1,-1);
	CreateDynamicObject(12950, -677.38940429688, 356.80780029297, 5.4312252998352, 0.000000, 0.000000, 91.043701171875,0,-1,-1);
	CreateDynamicObject(12950, -671.20428466797, 356.89672851563, 0.68122529983521, 0.000000, 0.000000, 91.043701171875,0,-1,-1);
	CreateDynamicObject(11496, -699.72259521484, 362.74835205078, 18.125009536743, 0.000000, 0.000000, 0.000000,0,-1,-1);
	CreateDynamicObject(4874, -699.40747070313, 321.5078125, 21.859535217285, 0.000000, 0.000000, 89.045013427734,0,-1,-1);
	
// cow fences?
	CreateDynamicObject(19315, -2129.457275, -832.577636, 31.513423, 0.000000, 0.000000, -88.099998);
	CreateDynamicObject(975, -2128.837158, -832.641479, 35.193386, 0.000000, 0.000000, 89.799972);
	CreateDynamicObject(19439, -2129.742675, -828.285095, 32.023437, 0.000000, 0.000000, 87.299980);
	CreateDynamicObject(19439, -2129.742675, -828.285095, 35.473365, 0.000000, 0.000000, 87.299980);
	CreateDynamicObject(19439, -2129.720458, -836.946411, 35.183353, 0.000000, 0.000000, 87.299980);
	CreateDynamicObject(19439, -2129.722900, -835.152038, 36.779422, -1.499999, -89.099952, 89.599952);
	CreateDynamicObject(19439, -2129.687988, -831.674194, 36.724636, -0.599999, -89.199974, 89.299949);
	CreateDynamicObject(19439, -2129.660644, -829.763610, 36.777938, -0.599999, -89.199974, 89.299949);
	CreateDynamicObject(975, -2128.837158, -832.641479, 32.023437, 0.000000, 0.000000, 89.799972);
	CreateDynamicObject(975, -2130.558837, -832.635253, 32.023437, 0.000000, 0.000000, 89.799972);
	CreateDynamicObject(975, -2130.588867, -832.634948, 35.193386, 0.000000, 0.000000, 89.799972);
	CreateDynamicObject(19439, -2129.720458, -836.946411, 32.673423, 0.000000, 0.000000, 87.299980);	
	
// my house (/justinhd)
	CreateDynamicObject(14815,-1538.898437,688.586120,202.567459,0.000000,0.000000,255.177108,0,1);
	CreateDynamicObject(2395,-1544.356811,678.176574,201.173187,0.000000,-90.099960,163.646240,0,1);
	CreateDynamicObject(1808,-1533.900634,698.385864,200.776397,0.000000,0.000000,258.960693,0,1);
	CreateDynamicObject(2584,-1536.067260,688.301757,201.566223,0.000000,0.000000,-13.845214,0,1);
	CreateDynamicObject(2584,-1539.742309,689.268371,201.566223,0.000000,0.000000,-13.845214,0,1);
	CreateDynamicObject(2297,-1531.107055,683.452514,200.753662,0.000000,0.000000,-151.095260,0,1);
	CreateDynamicObject(2290,-1535.218505,682.745483,200.786315,0.000000,0.000000,74.783920,0,1);
	CreateDynamicObject(2069,-1530.186401,686.890319,200.796264,0.000000,0.000000,249.270355,0,1);
	CreateDynamicObject(2001,-1531.793945,681.207519,200.746139,0.000000,0.000000,290.630767,0,1);
	CreateDynamicObject(1745,-1543.181884,694.184509,200.756256,0.000000,0.000000,76.878608,0,1);
	CreateDynamicObject(16780,-1542.073120,694.593017,204.676147,0.000000,0.000000,78.478683,0,1);
	CreateDynamicObject(2576,-1539.144897,693.271301,200.756240,0.000000,0.000000,-104.121475,0,1);
	CreateDynamicObject(322,-1539.634399,690.967041,201.834014,0.000000,-83.000000,248.306671,0,1);
	CreateDynamicObject(19423,-1539.649291,690.498291,201.883605,0.000000,0.000000,223.866348,0,1);
	CreateDynamicObject(2069,-1538.469482,696.161682,200.806274,0.000000,0.000000,275.566741,0,1);
	CreateDynamicObject(1893,-1541.530761,701.384887,204.746185,0.000000,0.000000,73.701866,0,1);
	CreateDynamicObject(2738,-1536.675170,702.165527,201.346221,0.000000,0.000000,-103.785003,0,1);
	CreateDynamicObject(2273,-1534.141967,702.713012,202.806137,0.000000,0.000000,-13.869874,0,1);
	CreateDynamicObject(1594,-1544.808471,686.831115,201.236145,0.000000,0.000000,76.130882,0,1);
	CreateDynamicObject(2818,-1534.215576,684.181884,200.776245,0.000000,0.000000,-105.437423,0,1);
	CreateDynamicObject(19367,-1537.432006,679.995971,202.426330,0.000000,0.000000,72.395812,0,1);
	CreateDynamicObject(19395,-1534.488769,679.029296,202.426162,0.000000,0.000000,71.422393,0,1);
	CreateDynamicObject(19367,-1531.500244,678.052856,202.426330,0.000000,0.000000,72.395812,0,1);
	CreateDynamicObject(1893,-1535.496948,676.726806,204.796157,0.000000,0.000000,160.885955,0,1);
	CreateDynamicObject(1494,-1533.790283,678.788940,200.726257,0.000000,0.000000,160.695678,0,1);
	CreateDynamicObject(19129,-1521.976928,703.001892,200.726318,0.000000,0.000000,-103.640480,0,1);
	CreateDynamicObject(1502,-1538.420898,693.049682,200.756286,0.000000,0.000000,75.957878,0,1);
	CreateDynamicObject(2517,-1546.649414,700.810058,200.706329,0.000000,0.000000,165.668640,0,1);
	CreateDynamicObject(2136,-1541.609863,698.372802,200.656280,0.000000,0.000000,166.209396,0,1);
	CreateDynamicObject(322,-1541.367553,698.107788,201.796218,0.000000,0.000000,176.562301,0,1);
	CreateDynamicObject(2285,-1542.176025,698.531982,202.336181,0.000000,0.000000,165.762176,0,1);
	CreateDynamicObject(2741,-1542.996948,698.248718,202.263549,0.000000,0.000000,171.862228,0,1);
	CreateDynamicObject(2190,-1527.822387,692.380554,201.546249,0.000000,0.000000,258.043060,0,1);
	CreateDynamicObject(2166,-1528.849731,693.534362,200.773635,0.000000,0.000000,-105.439941,0,1);
	CreateDynamicObject(1742,-1528.779541,688.181701,200.773620,0.000000,0.000000,257.416534,0,1);
	CreateDynamicObject(2776,-1528.772216,692.876953,201.266235,0.000000,0.000000,87.743080,0,1);
	CreateDynamicObject(2238,-1528.055664,692.055419,201.976104,0.000000,0.000000,258.983154,0,1);
	CreateDynamicObject(1893,-1530.384033,692.095520,204.823577,0.000000,0.000000,-104.676750,0,1);
	CreateDynamicObject(1893,-1532.421630,692.613037,204.823577,0.000000,0.000000,-104.676750,0,1);
	CreateDynamicObject(1502,-1534.885253,693.750183,200.796295,0.000000,0.000000,253.679748,0,1);
	CreateDynamicObject(2287,-1528.150146,692.748962,202.756164,0.000000,0.000000,252.426391,0,1);
	CreateDynamicObject(1667,-1528.671142,693.714355,201.666213,0.000000,0.000000,295.980194,0,1);
	CreateDynamicObject(322,-1528.828979,693.678710,201.514007,0.000000,-78.100006,-62.393108,0,1);
	CreateDynamicObject(1502,-1536.973510,699.365661,200.826202,0.000000,0.000000,74.391593,0,1);
	CreateDynamicObject(2281,-1531.440795,682.793884,202.996185,0.000000,0.000000,251.707015,0,1);
	CreateDynamicObject(2835,-1537.831542,694.248291,200.776275,0.000000,0.000000,-104.668693,0,1);
	CreateDynamicObject(2069,-1535.355224,689.268188,200.806213,0.000000,0.000000,205.043228,0,1);
	CreateDynamicObject(1768,-1532.989990,688.715087,200.726104,0.000000,0.000000,164.826065,0,1);
	CreateDynamicObject(2833,-1082130432.000000,0.000000,164.568664,0.000000,0.000000,0.000000,0,1);
	CreateDynamicObject(2710,-1536.050781,688.466064,202.026168,0.000000,0.000000,-10.375332,0,1);
	CreateDynamicObject(359,-1539.936889,680.894348,203.516174,0.000000,0.000000,-19.109363,0,1);
	CreateDynamicObject(323,-1539.946655,689.342834,202.291595,0.000000,-89.100013,210.056411,0,1);
	CreateDynamicObject(367,-1536.119995,688.382568,202.396133,0.000000,0.000000,-94.539222,0,1);
	CreateDynamicObject(1886,-1530.914306,686.730468,204.507843,24.699996,0.000000,288.437255,0,1);
	CreateDynamicObject(2001,-1535.143310,687.971435,200.766281,0.000000,0.000000,351.104400,0,1);
	CreateDynamicObject(362,-1540.577026,681.033386,202.505187,1.599998,2.099998,-7.949804,0,1);
	CreateDynamicObject(19317,-1535.841430,688.745971,203.266174,0.000000,0.000000,-21.188594,0,1);
	CreateDynamicObject(2028,-1531.287109,682.728698,202.486312,0.000000,0.000000,251.150421,0,1);
	CreateDynamicObject(2233,-1530.736450,683.630920,200.776290,0.000000,0.000000,-101.429756,0,1);
	CreateDynamicObject(2229,-1532.850830,687.868774,200.726257,0.000000,0.000000,-13.947384,0,1);
	CreateDynamicObject(18874,-1533.256591,687.703918,202.106109,0.000000,0.000000,312.587707,0,1);
	CreateDynamicObject(2284,-1549.333984,688.138122,202.806213,0.000000,0.000000,76.435531,0,1);

	CreateDynamicObject(3115,2148.332031,1607.017211,993.591674,90.200004,0.000000,-179.250030); // caliguas locked door

	// GTAFreak's Impossible Challenges
	// GtaFreaks Impossible Challenge 1 by Tommy Hmilj

	CreateDynamicObject(14708, 3265.1000976563, -1741.8000488281, 959.0999755859, 0, 0, 0);
	CreateDynamicObject(3497, 3268.8999023438, -1751.5, 959.5, 0, 0, 0);
	CreateDynamicObject(2707, 3268.8999023438, -1751.8000488281, 958.0999755859, 0, 0, 0);
	CreateDynamicObject(5763, 3409.1000976563, -2592, 843.0999755859, 0, 0, 0);
	CreateDynamicObject(5763, 3537.1999511719, -2591.6000976563, 840.4000244141, 0, 0, 0);
	CreateDynamicObject(1634, 3440.3999023438, -2611.1000976563, 881.4000244141, 0, 0, 269.99996948242);
	CreateDynamicObject(1245, 3569.8000488281, -2615.6000976563, 878.9000244141, 0, 0, 178);
	CreateDynamicObject(13647, 3573.1999511719, -2647.1999511719, 880, 0, 0, 269.5);
	CreateDynamicObject(13648, 3573.1000976563, -2692, 878.9000244141, 0, 0, 0);
	CreateDynamicObject(13590, 3573.1999511719, -2730.8999023438, 879.8000488281, 0, 0, 179.99993896484);
	CreateDynamicObject(18262, 3576.5, -2756.1999511719, 880.9000244141, 340.0126953125, 357.87176513672, 255.27224731445);
	CreateDynamicObject(2931, 3585, -2753, 879.1999511719, 0, 0, 338);
	CreateDynamicObject(2931, 3583.6000976563, -2750.8000488281, 879.8000488281, 346.03479003906, 4.1220397949219, 12.996398925781);
	CreateDynamicObject(1245, 3579.3999023438, -2751.1999511719, 881.8000488281, 0, 344, 86);
	CreateDynamicObject(3502, 3582.1999511719, -2729.6000976563, 880.9000244141, 0, 0, 356);
	CreateDynamicObject(3502, 3583.8999023438, -2721.8000488281, 881, 0, 0, 342);
	CreateDynamicObject(3502, 3587.6999511719, -2714.1999511719, 881, 0, 0, 324);
	CreateDynamicObject(13647, 3602.8000488281, -2696.6999511719, 877.3000488281, 0, 0, 227.99996948242);
	CreateDynamicObject(18367, 3631.5, -2665.1000976563, 876.5999755859, 0, 0, 318);
	CreateDynamicObject(13592, 3631, -2660, 886.8000488281, 0, 0, 54);
	CreateDynamicObject(971, 3628.5, -2662, 881.9000244141, 0, 0, 56);
	CreateDynamicObject(971, 3634, -2655.1999511719, 882.6999511719, 0, 0, 56);
	CreateDynamicObject(18262, 3634.8000488281, -2649, 876.9000244141, 0, 0, 318);
	CreateDynamicObject(3110, 3641.6999511719, -2635.8000488281, 876.9000244141, 0, 0, 346);
	CreateDynamicObject(3083, 3641.6999511719, -2635.8000488281, 876.9000244141, 0, 0, 346.5);
	CreateDynamicObject(2728, 3694.095703125, -2592.6708984375, 856.8226318359, 0, 0, 0);
	CreateDynamicObject(2721, 3636, -2631.3000488281, 888.0999755859, 0, 0, 0);
	CreateDynamicObject(1503, 3636.1999511719, -2646.8000488281, 877, 0, 0, 324);
	CreateDynamicObject(18483, 3665.5, -2603.6999511719, 878.0999755859, 0, 0, 56);
	CreateDynamicObject(13638, 3693.5, -2572.8999023438, 880.4000244141, 0, 0, 231.99998474121);
	CreateDynamicObject(13638, 3707.8000488281, -2573.1000976563, 886.5, 0, 0, 229.99996948242);
	CreateDynamicObject(18367, 3715.1000976563, -2573.5, 891.5999755859, 4, 0, 139.99993896484);
	CreateDynamicObject(13642, 3746.3999023438, -2536.6999511719, 892.4000244141, 0, 0, 44);
	CreateDynamicObject(16088, 3787.8999023438, -2493.8000488281, 893.1999511719, 0, 0, 46);
	CreateDynamicObject(18483, 3786.3000488281, -2495.3000488281, 893.1999511719, 0, 0, 46);
	CreateDynamicObject(7231, 3805, -2476.8999023438, 906.5, 0, 0, 318);
	CreateDynamicObject(972, 3785.3999023438, -2477.1999511719, 893.1999511719, 0, 0, 316);
	CreateDynamicObject(972, 3807.3999023438, -2492.1000976563, 893.0999755859, 0, 0, 136);
	CreateDynamicObject(972, 3804.1000976563, -2479.6999511719, 893.0999755859, 0, 0, 46);
	CreateDynamicObject(979, 3789.8999023438, -2502.1000976563, 893.9000244141, 0, 359, 78);
	CreateDynamicObject(979, 3779.1999511719, -2491.8000488281, 893.9000244141, 0, 0, 194);
	CreateDynamicObject(3858, 3785.771484375, -2496.771484375, 895.8341064453, 0, 0, 0);
	CreateDynamicObject(2780, 3760.3999023438, -2510.6000976563, 893.3000488281, 0, 0, 0);
	CreateDynamicObject(2780, 3770.8000488281, -2520.8999023438, 893.1999511719, 0, 0, 0);
	CreateDynamicObject(2780, 3768.8999023438, -2501.1000976563, 893.3000488281, 0, 0, 0);
	CreateDynamicObject(2780, 3781.3000488281, -2510, 893.1999511719, 0, 0, 0);
	CreateDynamicObject(3515, 3783.6000976563, -2492.1000976563, 892, 0, 0, 0);
	CreateDynamicObject(3515, 3786.1999511719, -2493.6000976563, 891.5, 0, 0, 0);
	CreateDynamicObject(3515, 3788.3999023438, -2495.3999023438, 891.8000488281, 0, 0, 0);
	CreateDynamicObject(3515, 3789.6999511719, -2498.1000976563, 892, 0, 0, 0);
	CreateDynamicObject(2780, 3787.5, -2484.1000976563, 893.1999511719, 0, 0, 0);
	CreateDynamicObject(2780, 3797, -2493.8000488281, 893.1999511719, 0, 0, 0);


	// dnr island
	CreateDynamicObject(17135, 3190.00000, -1477.00000, -34.70000,   0.00000, 0.00000, 111.99800,0,-1,-1);
	CreateDynamicObject(17140, 3296.39990, -1532.40002, -0.30000,   356.29199, 22.04900, 241.50101,0,-1,-1);
	CreateDynamicObject(17140, 3249.00000, -1677.30005, -0.30000,   356.28699, 22.04400, 159.49600,0,-1,-1);
	CreateDynamicObject(17135, 3298.19995, -1415.90002, -34.70000,   0.00000, 0.00000, 69.99800,0,-1,-1);
	CreateDynamicObject(17135, 3306.69995, -1370.09998, -34.70000,   0.00000, 0.00000, 179.99400,0,-1,-1);
	CreateDynamicObject(17135, 3379.19995, -1728.00000, -34.70000,   0.00000, 0.00000, 359.99399,0,-1,-1);
	CreateDynamicObject(17135, 3316.50000, -1731.59998, -34.70000,   0.00000, 0.00000, 345.98901,0,-1,-1);
	CreateDynamicObject(17135, 3370.39990, -1677.59998, -34.70000,   0.00000, 0.00000, 71.98700,0,-1,-1);
	CreateDynamicObject(17135, 3342.89990, -1638.40002, -34.70000,   0.00000, 0.00000, 71.98200,0,-1,-1);
	CreateDynamicObject(17135, 3184.29980, -1456.00000, -34.70000,   0.00000, 0.00000, 205.99400,0,-1,-1);
	CreateDynamicObject(13120, 3276.29980, -1776.79980, -7.00000,   0.00000, 349.99701, 37.99600,0,-1,-1);
	CreateDynamicObject(17140, 3408.20020, -1501.09961, -0.30000,   356.28699, 22.04400, 241.49600,0,-1,-1);
	CreateDynamicObject(17135, 3429.19995, -1341.09998, -34.70000,   0.00000, 0.00000, 169.98900,0,-1,-1);
	CreateDynamicObject(17135, 3469.50000, -1370.09998, -34.70000,   0.00000, 0.00000, 107.98600,0,-1,-1);
	CreateDynamicObject(17135, 3534.50000, -1342.90002, -34.70000,   0.00000, 0.00000, 159.98500,0,-1,-1);
	CreateDynamicObject(17135, 3314.60010, -1420.59998, -34.70000,   0.00000, 0.00000, 69.99400,0,-1,-1);
	CreateDynamicObject(4271, 3494.39990, -1559.09998, 3.40000,   2.00000, 0.00000, 344.00000,0,-1,-1);
	CreateDynamicObject(17135, 3567.39990, -1391.90002, -34.70000,   0.00000, 0.00000, 301.98300,0,-1,-1);
	CreateDynamicObject(6295, 3158.00000, -1530.90002, 79.20000,   348.00699, 357.95499, 99.57500,0,-1,-1);
	CreateDynamicObject(17135, 3609.30005, -1380.40002, -34.70000,   0.00000, 0.00000, 285.98099,0,-1,-1);
	CreateDynamicObject(17135, 3522.00000, -1646.80005, -34.70000,   0.00000, 0.00000, 285.98099,0,-1,-1);
	CreateDynamicObject(17135, 3428.50000, -1635.09998, -34.70000,   0.00000, 0.00000, 285.98001,0,-1,-1);
	CreateDynamicObject(17135, 3613.89990, -1630.00000, -55.10000,   0.00000, 0.00000, 17.97900,0,-1,-1);
	CreateDynamicObject(17135, 3667.39990, -1499.40002, -57.30000,   0.00000, 0.00000, 17.97900,0,-1,-1);
	CreateDynamicObject(11495, 3439.50000, -1438.30005, 0.00000,   0.00000, 0.00000, 72.00000,0,-1,-1);
	CreateDynamicObject(11495, 3439.00000, -1439.90002, 0.00000,   0.00000, 0.00000, 251.99899,0,-1,-1);
	CreateDynamicObject(11495, 3481.30005, -1483.30005, 0.20000,   0.00000, 0.00000, 339.99899,0,-1,-1);
	CreateDynamicObject(11495, 3479.80005, -1482.69995, 0.20000,   0.00000, 0.00000, 159.99400,0,-1,-1);
	CreateDynamicObject(8493, 3671.69995, -1643.09998, 15.50000,   0.00000, 0.00000, 310.00000,0,-1,-1);
	CreateDynamicObject(8493, 3689.80005, -1584.50000, 15.50000,   0.00000, 0.00000, 169.99600,0,-1,-1);
	CreateDynamicObject(9159, 3671.60010, -1643.19995, 15.40000,   0.00000, 0.00000, 310.00000,0,-1,-1);
	CreateDynamicObject(9159, 3689.80005, -1584.40002, 15.40000,   0.00000, 0.00000, 169.99600,0,-1,-1);
	CreateDynamicObject(2064, 3678.60010, -1634.09998, 5.60000,   0.00000, 0.00000, 172.00000,0,-1,-1);
	CreateDynamicObject(2064, 3681.30005, -1634.19995, 5.60000,   0.00000, 0.00000, 171.99600,0,-1,-1);
	CreateDynamicObject(2064, 3686.39990, -1596.40002, 5.60000,   0.00000, 0.00000, 339.99600,0,-1,-1);
	CreateDynamicObject(2064, 3689.39990, -1596.50000, 5.60000,   0.00000, 0.00000, 3.99400,0,-1,-1);
	CreateDynamicObject(3583, 3551.60010, -1572.90002, 9.10000,   0.00000, 12.00000, 272.00000,0,-1,-1);
	CreateDynamicObject(4288, 3431.10010, -1927.19995, -12.50000,   0.00000, 0.00000, 98.00000,0,-1,-1);
	CreateDynamicObject(13120, 3221.80005, -1808.50000, -7.00000,   0.00000, 349.99701, 97.99600,0,-1,-1);
	CreateDynamicObject(13120, 3214.39990, -1838.00000, -7.00000,   0.00000, 349.99701, 97.99300,0,-1,-1);
	CreateDynamicObject(13120, 3617.00000, -1793.09998, -7.00000,   0.00000, 349.99701, 287.99301,0,-1,-1);
	CreateDynamicObject(13120, 3631.50000, -1873.19995, -7.00000,   0.00000, 349.99701, 275.98999,0,-1,-1);
	CreateDynamicObject(3590, 3453.79980, -1745.40039, 7.20000,   0.00000, 0.00000, 182.00000,0,-1,-1);
	CreateDynamicObject(1641, 3444.50000, -1866.59998, 4.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1641, 3449.00000, -1864.40002, 4.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1641, 3454.80005, -1864.30005, 4.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1641, 3433.10010, -1864.40002, 4.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1641, 3417.80005, -1871.90002, 4.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1641, 3457.50000, -1852.50000, 4.50000,   0.00000, 0.00000, 16.00000,0,-1,-1);
	CreateDynamicObject(1641, 3458.10010, -1854.40002, 4.50000,   0.00000, 0.00000, 15.99600,0,-1,-1);
	CreateDynamicObject(1641, 3458.69995, -1856.40002, 4.50000,   0.00000, 0.00000, 15.99600,0,-1,-1);
	CreateDynamicObject(1641, 3459.30005, -1858.40002, 4.50000,   0.00000, 0.00000, 15.99600,0,-1,-1);
	CreateDynamicObject(1641, 3460.00000, -1860.50000, 4.50000,   0.00000, 0.00000, 15.99600,0,-1,-1);
	CreateDynamicObject(1641, 3458.80005, -1851.19995, 4.50000,   0.00000, 0.00000, 113.99600,0,-1,-1);
	CreateDynamicObject(1641, 3460.69995, -1850.59998, 4.50000,   0.00000, 0.00000, 101.99400,0,-1,-1);
	CreateDynamicObject(1641, 3462.60010, -1850.90002, 4.50000,   0.00000, 0.00000, 73.99200,0,-1,-1);
	CreateDynamicObject(1641, 3463.80005, -1852.19995, 4.50000,   0.00000, 0.00000, 15.98700,0,-1,-1);
	CreateDynamicObject(1641, 3463.60010, -1854.09998, 4.50000,   0.00000, 0.00000, 335.98499,0,-1,-1);
	CreateDynamicObject(1641, 3462.39990, -1855.50000, 4.50000,   0.00000, 0.00000, 309.98401,0,-1,-1);
	CreateDynamicObject(1641, 3460.69995, -1856.59998, 4.50000,   0.00000, 0.00000, 293.97900,0,-1,-1);
	CreateDynamicObject(1641, 3460.30005, -1857.50000, 4.50000,   0.00000, 0.00000, 71.97800,0,-1,-1);
	CreateDynamicObject(1641, 3462.00000, -1858.30005, 4.50000,   0.00000, 0.00000, 61.97700,0,-1,-1);
	CreateDynamicObject(1641, 3463.80005, -1859.09998, 4.50000,   0.00000, 0.00000, 61.97400,0,-1,-1);
	CreateDynamicObject(1642, 3467.69995, -1858.40002, 4.50000,   0.00000, 0.00000, 324.00000,0,-1,-1);
	CreateDynamicObject(1642, 3468.80005, -1856.90002, 4.50000,   0.00000, 0.00000, 323.99799,0,-1,-1);
	CreateDynamicObject(1642, 3469.89990, -1855.40002, 4.50000,   0.00000, 0.00000, 323.99799,0,-1,-1);
	CreateDynamicObject(1642, 3471.10010, -1853.80005, 4.50000,   0.00000, 0.00000, 323.99799,0,-1,-1);
	CreateDynamicObject(1642, 3467.50000, -1853.69995, 4.50000,   0.00000, 0.00000, 29.99800,0,-1,-1);
	CreateDynamicObject(1642, 3468.60010, -1855.59998, 4.50000,   0.00000, 0.00000, 29.99300,0,-1,-1);
	CreateDynamicObject(1642, 3469.50000, -1857.40002, 4.50000,   0.00000, 0.00000, 29.99300,0,-1,-1);
	CreateDynamicObject(1642, 3470.30005, -1858.80005, 4.50000,   0.00000, 0.00000, 29.99300,0,-1,-1);
	CreateDynamicObject(1642, 3475.50000, -1858.59998, 4.50000,   0.00000, 0.00000, 15.99300,0,-1,-1);
	CreateDynamicObject(1642, 3478.60010, -1857.59998, 4.50000,   0.00000, 0.00000, 15.99100,0,-1,-1);
	CreateDynamicObject(1642, 3483.50000, -1856.50000, 4.50000,   0.00000, 0.00000, 15.99100,0,-1,-1);
	CreateDynamicObject(1642, 3488.60010, -1856.09998, 4.50000,   0.00000, 0.00000, 15.99100,0,-1,-1);
	CreateDynamicObject(9237, 3629.10010, -1855.30005, 38.20000,   0.00000, 4.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1609, 3417.80005, -1871.69995, 4.80000,   25.93200, 184.44901, 6.05100,0,-1,-1);
	CreateDynamicObject(1641, 3419.89990, -1871.69995, 4.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1609, 3419.80005, -1871.50000, 4.80000,   0.00000, 0.00000, 0.04800,0,-1,-1);
	CreateDynamicObject(321, 3417.89990, -1872.69995, 4.70000,   0.00000, 0.00000, 208.00000,0,-1,-1);
	CreateDynamicObject(1609, 3424.80005, -1871.19995, 4.80000,   0.00000, 0.00000, 34.04400,0,-1,-1);
	CreateDynamicObject(1609, 3428.30005, -1866.50000, 4.80000,   0.00000, 0.00000, 76.04100,0,-1,-1);
	CreateDynamicObject(1609, 3424.10010, -1867.00000, 4.80000,   0.00000, 0.00000, 10.03600,0,-1,-1);
	CreateDynamicObject(1607, 3444.89990, -1925.69995, 0.00000,   25.93200, 355.55099, 97.94900,0,-1,-1);
	CreateDynamicObject(1607, 3437.60010, -1921.80005, 2.00000,   358.00101, 355.99701, 95.85500,0,-1,-1);
	CreateDynamicObject(1607, 3428.00000, -1932.80005, 1.30000,   340.04599, 355.74200, 94.53500,0,-1,-1);
	CreateDynamicObject(1607, 3419.69995, -1958.09998, 1.30000,   29.91200, 355.37701, 98.29800,0,-1,-1);
	CreateDynamicObject(1637, 3383.60010, -1876.40002, 5.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1637, 3398.69995, -1871.59998, 5.80000,   0.00000, 0.00000, 70.00000,0,-1,-1);
	CreateDynamicObject(1637, 3415.30005, -1867.30005, 5.80000,   0.00000, 0.00000, 69.99900,0,-1,-1);
	CreateDynamicObject(18259, 3489.40039, -1462.79980, 1.60000,   0.00000, 0.00000, 67.86000,0,-1,-1);
	CreateDynamicObject(18259, 3626.39990, -1764.59998, 29.60000,   9.94500, 6.09200, 24.10400,0,-1,-1);
	CreateDynamicObject(7071, 3509.50000, -1674.50000, 45.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(4288, 3433.30005, -1921.40002, -12.50000,   0.00000, 0.00000, 97.99800,0,-1,-1);
	CreateDynamicObject(7071, 3509.50000, -1674.50000, 37.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(7071, 3509.50000, -1674.50000, 25.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(7071, 3509.50000, -1674.50000, 18.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(7071, 3509.50000, -1674.50000, 12.00000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3115, 3459.19995, -1705.30005, 45.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3115, 3480.10010, -1705.19995, 45.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3115, 3500.89990, -1705.00000, 45.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3115, 3520.30005, -1705.00000, 45.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3115, 3520.30005, -1704.90002, 42.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3115, 3541.10010, -1705.09998, 45.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3115, 3561.89990, -1704.69995, 45.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3115, 3568.39990, -1705.00000, 45.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(17135, 3477.80005, -1635.50000, -34.70000,   0.00000, 0.00000, 285.98001,0,-1,-1);
	CreateDynamicObject(17135, 3397.50000, -1630.00000, -34.70000,   0.00000, 0.00000, 285.98001,0,-1,-1);
	CreateDynamicObject(18368, 3605.60010, -1702.19995, 42.00000,   0.00000, 0.00000, 302.00000,0,-1,-1);
	CreateDynamicObject(1598, 3516.50000, -1847.59998, 4.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3457.80005, -1715.30005, 33.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3457.80005, -1715.30005, 23.70000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3462.80005, -1715.30005, 37.30000,   0.00000, 94.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3464.60010, -1715.40002, 33.00000,   0.00000, 219.99899, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3462.89990, -1715.40002, 24.80000,   0.00000, 317.99600, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3472.39990, -1715.40002, 24.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3472.39990, -1715.40002, 33.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3476.89990, -1715.40002, 37.30000,   0.00000, 90.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3476.89990, -1715.40002, 27.40000,   0.00000, 90.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3476.89990, -1715.40002, 20.50000,   0.00000, 90.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3487.30005, -1715.40002, 25.50000,   0.00000, 346.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3485.80005, -1715.40002, 31.30000,   0.00000, 345.99799, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3490.30005, -1715.40002, 25.50000,   0.00000, 15.99800, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3492.00000, -1715.40002, 31.50000,   0.00000, 15.99600, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3497.50000, -1715.40002, 31.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3497.50000, -1715.40002, 26.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3502.19995, -1715.40002, 21.50000,   0.00000, 272.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3502.19995, -1715.40002, 36.50000,   0.00000, 272.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3507.00000, -1715.40002, 31.00000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3507.00000, -1715.40002, 27.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3511.50000, -1715.40002, 31.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3511.50000, -1715.40002, 26.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3515.50000, -1715.40002, 21.80000,   0.00000, 272.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3522.89990, -1715.09998, 31.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3522.89990, -1715.09998, 26.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3527.39990, -1715.00000, 23.10000,   0.00000, 270.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3531.80005, -1715.09998, 28.40000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3531.80005, -1715.09998, 31.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3536.60010, -1715.19995, 31.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3536.60010, -1715.19995, 28.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3536.60010, -1715.19995, 35.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3536.60010, -1715.19995, 37.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3536.60010, -1715.19995, 43.50000,   0.00000, 270.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3541.10010, -1715.30005, 27.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3546.39990, -1715.19995, 27.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3551.10010, -1715.09998, 31.80000,   0.00000, 90.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3551.10010, -1715.09998, 22.70000,   0.00000, 90.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3555.80005, -1715.19995, 26.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3561.30005, -1715.30005, 26.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3561.30005, -1715.30005, 32.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3564.80005, -1715.19995, 32.80000,   1.57600, 141.98300, 359.23199,0,-1,-1);
	CreateDynamicObject(3437, 3568.80005, -1715.19995, 33.30000,   0.00000, 8.00000, 359.23099,0,-1,-1);
	CreateDynamicObject(3437, 3569.80005, -1715.30005, 40.30000,   0.00000, 7.99800, 359.22501,0,-1,-1);
	CreateDynamicObject(3437, 3512.60010, -1715.50000, 12.50000,   0.00000, 41.99600, 0.00000,0,-1,-1);
	CreateDynamicObject(3437, 3512.39990, -1715.50000, 12.50000,   0.00000, 319.99500, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3459.10010, -1715.30005, 8.70000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3466.80005, -1715.40002, 6.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3471.00000, -1715.50000, 11.10000,   0.00000, 270.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3475.00000, -1715.30005, 6.90000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3470.39990, -1715.59998, 4.90000,   0.00000, 88.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3462.30005, -1715.19995, 10.10000,   0.00000, 312.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3477.19995, -1715.30005, 11.70000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3485.30005, -1715.40002, 4.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3480.89990, -1715.30005, 8.40000,   0.00000, 88.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3519.69995, -1715.19995, 8.40000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3523.19995, -1715.80005, 11.60000,   0.00000, 298.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3523.69995, -1715.80005, 8.60000,   0.00000, 245.99899, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3522.69995, -1715.30005, 5.40000,   0.00000, 131.99500, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3530.00000, -1715.19995, 7.70000,   0.00000, 12.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3532.10010, -1715.19995, 7.70000,   0.00000, 345.99701, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3535.50000, -1715.09998, 7.70000,   0.00000, 330.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3538.39990, -1715.09998, 7.70000,   0.00000, 17.99600, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3542.19995, -1715.30005, 7.70000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3544.69995, -1715.40002, 12.20000,   0.00000, 84.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3544.69995, -1715.40002, 8.90000,   0.00000, 83.99600, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3544.69995, -1715.40002, 5.60000,   0.00000, 83.99600, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3551.69995, -1715.30005, 8.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3554.39990, -1715.40002, 8.10000,   0.00000, 330.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3555.39990, -1715.50000, 8.10000,   0.00000, 9.99600, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3461.00000, -1715.30005, 5.40000,   0.00000, 55.99500, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3481.00000, -1715.50000, 4.90000,   0.00000, 87.99500, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3480.60010, -1715.30005, 15.80000,   0.00000, 87.99500, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3487.50000, -1715.19995, 6.90000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3492.10010, -1715.00000, 9.00000,   0.00000, 270.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3495.50000, -1715.30005, 8.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3498.00000, -1715.30005, 8.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3499.89990, -1715.19995, 10.40000,   0.00000, 36.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3500.89990, -1715.19995, 5.10000,   0.00000, 321.99701, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3503.39990, -1715.30005, 8.40000,   0.00000, 10.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3533, 3505.69995, -1715.30005, 8.40000,   0.00000, 345.99799, 0.00000,0,-1,-1);
	CreateDynamicObject(16151, 3630.39990, -1771.59998, 28.30000,   354.17899, 14.07400, 297.45700,0,-1,-1);
	CreateDynamicObject(2575, 3623.50000, -1761.50000, 30.80000,   11.93300, 6.13300, 28.72700,0,-1,-1);
	CreateDynamicObject(7073, 3446.50000, -1725.40002, 26.20000,   0.00000, 10.00000, 316.00000,0,-1,-1);
	CreateDynamicObject(13667, 3448.69995, -1726.50000, 38.80000,   0.00000, 8.00000, 324.00000,0,-1,-1);
	CreateDynamicObject(354, 3448.89990, -1725.40002, 47.20000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2236, 3623.00000, -1763.30005, 30.40000,   7.92200, 351.92200, 117.12100,0,-1,-1);
	CreateDynamicObject(2296, 3621.60010, -1764.59998, 30.40000,   1.98100, 351.99500, 116.27800,0,-1,-1);
	CreateDynamicObject(1764, 3623.10010, -1761.69995, 30.40000,   0.00000, 8.00000, 298.00000,0,-1,-1);
	CreateDynamicObject(2903, 3465.30005, -1346.19995, 69.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3477.50000, -1342.59998, 63.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3477.50000, -1342.59998, 77.40000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3455.60010, -1353.69995, 59.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3455.60010, -1353.69995, 86.70000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3466.10010, -1348.40002, 96.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3490.30005, -1336.19995, 68.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3478.39990, -1342.19995, 93.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3488.30005, -1337.19995, 85.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3495.10010, -1326.19995, 50.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2903, 3440.89990, -1316.09998, 63.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(17140, 3096.10010, -1781.50000, -0.30000,   356.28699, 22.03900, 91.49400,0,-1,-1);
	CreateDynamicObject(17140, 3008.10010, -1872.59998, -0.30000,   356.28699, 22.03300, 117.48900,0,-1,-1);
	CreateDynamicObject(17135, 3167.80005, -1935.59998, -34.70000,   0.00000, 0.00000, 67.98900,0,-1,-1);
	CreateDynamicObject(17135, 3122.10010, -1992.50000, -34.70000,   0.00000, 0.00000, 141.98900,0,-1,-1);
	CreateDynamicObject(17135, 3201.89990, -1964.40002, -34.70000,   0.00000, 0.00000, 141.98700,0,-1,-1);
	CreateDynamicObject(17135, 3212.80005, -1939.80005, -34.70000,   0.00000, 0.00000, 141.98700,0,-1,-1);
	CreateDynamicObject(11495, 3480.39990, -1480.90002, 0.20000,   0.00000, 0.00000, 159.98801,0,-1,-1);
	CreateDynamicObject(3115, 3459.69995, -1445.80005, 0.00000,   0.00000, 0.00000, 342.00000,0,-1,-1);
	CreateDynamicObject(1799, 3486.19995, -1462.40002, 1.70000,   0.00000, 0.00000, 70.00000,0,-1,-1);
	CreateDynamicObject(11495, 3471.60059, -1460.50000, 0.70000,   3.99900, 0.00000, 234.20700,0,-1,-1);
	CreateDynamicObject(3115, 3465.30005, -1428.69995, 0.40000,   0.00000, 0.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(3115, 3465.30005, -1428.69995, 0.90000,   0.00000, 0.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(3115, 3465.30005, -1428.69995, 1.60000,   0.00000, 0.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(3115, 3465.30005, -1428.69995, 2.10000,   0.00000, 0.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(3115, 3465.30005, -1428.69995, 2.60000,   0.00000, 0.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(3115, 3462.69995, -1429.69995, 0.00000,   0.00000, 0.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(3115, 3465.30005, -1428.69995, 1.40000,   0.00000, 0.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(3361, 3454.60010, -1424.50000, 0.80000,   0.00000, 0.00000, 252.00000,0,-1,-1);
	CreateDynamicObject(14391, 3463.69995, -1432.59998, 3.90000,   0.00000, 0.00000, 70.00000,0,-1,-1);
	CreateDynamicObject(2232, 3465.50000, -1434.30005, 3.50000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(2232, 3465.00000, -1434.09998, 3.50000,   0.00000, 0.00000, 338.00000,0,-1,-1);
	CreateDynamicObject(2232, 3464.50000, -1433.90002, 3.50000,   0.00000, 0.00000, 338.00000,0,-1,-1);
	CreateDynamicObject(2232, 3464.00000, -1433.69995, 3.50000,   0.00000, 0.00000, 338.00000,0,-1,-1);
	CreateDynamicObject(2232, 3463.50000, -1433.50000, 3.50000,   0.00000, 0.00000, 338.00000,0,-1,-1);
	CreateDynamicObject(2232, 3463.00000, -1433.30005, 3.50000,   0.00000, 0.00000, 338.00000,0,-1,-1);
	CreateDynamicObject(2232, 3462.39990, -1433.09998, 3.50000,   0.00000, 0.00000, 338.00000,0,-1,-1);
	CreateDynamicObject(2232, 3461.89990, -1432.90002, 3.50000,   0.00000, 0.00000, 338.00000,0,-1,-1);
	CreateDynamicObject(2232, 3461.30005, -1432.69995, 3.50000,   0.00000, 0.00000, 338.00000,0,-1,-1);
	CreateDynamicObject(2232, 3460.89990, -1432.40002, 3.50000,   0.00000, 0.00000, 322.00000,0,-1,-1);
	CreateDynamicObject(3437, 3458.00000, -1436.19995, 1.40000,   0.00000, 90.00000, 342.00000,0,-1,-1);
	CreateDynamicObject(3437, 3466.89990, -1439.09998, 1.40000,   0.00000, 90.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(3437, 3474.19995, -1435.50000, 1.30000,   0.00000, 90.00000, 71.99900,0,-1,-1);
	CreateDynamicObject(3437, 3475.50000, -1431.50000, 1.30000,   0.00000, 90.00000, 71.99900,0,-1,-1);
	CreateDynamicObject(3437, 3454.39990, -1429.40002, 1.30000,   0.00000, 90.00000, 71.99900,0,-1,-1);
	CreateDynamicObject(3437, 3472.39990, -1439.40002, 1.90000,   0.00000, 0.00000, 77.99900,0,-1,-1);
	CreateDynamicObject(3437, 3453.30005, -1433.09998, 2.60000,   0.00000, 0.00000, 69.99700,0,-1,-1);
	CreateDynamicObject(3437, 3459.69995, -1426.50000, 2.50000,   0.00000, 0.00000, 155.99699,0,-1,-1);
	CreateDynamicObject(3437, 3464.50000, -1428.50000, 2.90000,   0.00000, 0.00000, 157.99500,0,-1,-1);
	CreateDynamicObject(3437, 3468.80005, -1430.09998, 2.60000,   0.00000, 0.00000, 157.99400,0,-1,-1);
	CreateDynamicObject(3437, 3470.69995, -1434.50000, 6.90000,   0.00000, 86.00000, 105.99700,0,-1,-1);
	CreateDynamicObject(3437, 3457.19995, -1430.19995, 7.20000,   0.00000, 89.99500, 217.99400,0,-1,-1);
	CreateDynamicObject(3437, 3464.39990, -1428.30005, 7.20000,   0.00000, 89.99500, 157.99100,0,-1,-1);
	CreateDynamicObject(16151, 3497.19995, -1465.30005, 2.00000,   0.00000, 0.00000, 340.00000,0,-1,-1);
	CreateDynamicObject(3115, 3461.00000, -1434.50000, 0.00000,   0.00000, 0.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(2296, 3490.00000, -1458.30005, 1.70000,   0.00000, 0.00000, 340.00000,0,-1,-1);
	CreateDynamicObject(3115, 3465.30005, -1428.69995, 8.10000,   0.00000, 0.00000, 341.99899,0,-1,-1);
	CreateDynamicObject(2190, 3630.10010, -1770.90002, 29.30000,   0.00000, 4.00000, 210.00000,0,-1,-1);
	CreateDynamicObject(2224, 3485.10010, -1458.19995, 1.70000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(345, 3472.30005, -1440.50000, 7.20000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(345, 3472.30005, -1440.50000, 0.90000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(345, 3454.00000, -1433.69995, 0.90000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(345, 3453.80005, -1433.19995, 7.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(8394, 3362.39990, -1794.40002, 14.80000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(17140, 3005.60010, -1972.40002, -0.30000,   356.28699, 22.02800, 133.48801,0,-1,-1);
	CreateDynamicObject(17135, 3191.39990, -1972.50000, -34.70000,   0.00000, 0.00000, 185.98700,0,-1,-1);
	CreateDynamicObject(17135, 3154.30005, -1997.90002, -34.70000,   0.00000, 0.00000, 185.98199,0,-1,-1);
	CreateDynamicObject(12857, 2873.80005, -1856.90002, 11.60000,   10.00000, 0.00000, 264.00000,0,-1,-1);
	CreateDynamicObject(12857, 2913.39990, -1861.09998, 17.00000,   5.99800, 0.00000, 263.99600,0,-1,-1);
	CreateDynamicObject(12857, 2953.50000, -1865.09998, 18.60000,   359.99301, 0.00000, 263.98999,0,-1,-1);
	CreateDynamicObject(12857, 2990.69995, -1868.59998, 18.60000,   359.98901, 0.00000, 263.98999,0,-1,-1);
	CreateDynamicObject(1706, 3490.50000, -1461.30005, 1.70000,   0.00000, 0.00000, 160.00000,0,-1,-1);
	CreateDynamicObject(17135, 3136.80005, -1556.80005, -34.70000,   0.00000, 0.00000, 53.99400,0,-1,-1);
	CreateDynamicObject(13120, 3095.50000, -1716.30005, -20.40000,   0.00000, 349.99701, 53.99600,0,-1,-1);
	CreateDynamicObject(13120, 3140.39990, -1846.19995, -5.00000,   0.00000, 349.99701, 98.77200,0,-1,-1);
	CreateDynamicObject(671, 3267.80005, -1668.09998, 29.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(671, 3258.30005, -1658.00000, 28.90000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(13120, 3358.10010, -1700.09998, -12.00000,   0.00000, 349.99701, 37.99600,0,-1,-1);
	CreateDynamicObject(13120, 3330.89990, -1627.09998, -12.00000,   0.00000, 349.99701, 95.99600,0,-1,-1);
	CreateDynamicObject(11495, 3471.60059, -1460.50000, 0.70000,   3.99900, 0.00000, 58.20700,0,-1,-1);
	CreateDynamicObject(1598, 3524.00000, -1832.90002, 4.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(13120, 3169.30005, -1702.19995, -7.00000,   0.00000, 349.99701, 137.99600,0,-1,-1);
	CreateDynamicObject(12822, 2304.60010, 8.70000, 33.20000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(6300, 3623.30005, -1980.50000, -7.90000,   0.00000, 0.00000, 4.00000,0,-1,-1);
	CreateDynamicObject(671, 3249.00000, -1649.90002, 28.40000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(671, 3257.10010, -1646.80005, 28.90000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(671, 3232.60010, -1644.69995, 26.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(711, 3499.30005, -1536.00000, 18.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(711, 3497.10010, -1560.80005, 12.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(711, 3516.39990, -1546.09998, 14.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3508, 3480.80005, -1487.80005, 0.00000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3508, 3477.30005, -1486.40002, 0.00000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3508, 3433.50000, -1435.00000, -0.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(3508, 3432.80005, -1439.59998, -0.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1632, 3600.50000, -1500.19995, 1.50000,   8.00000, 0.00000, 258.00000,0,-1,-1);
	CreateDynamicObject(1632, 3599.69995, -1504.00000, 1.50000,   7.99800, 0.00000, 257.99899,0,-1,-1);
	CreateDynamicObject(1632, 3606.00000, -1505.40002, 5.90000,   15.99800, 0.00000, 257.99899,0,-1,-1);
	CreateDynamicObject(1632, 3606.80005, -1501.50000, 5.90000,   15.99600, 0.00000, 257.99399,0,-1,-1);
	CreateDynamicObject(17135, 3684.39990, -1421.59998, -79.90000,   0.00000, 0.00000, 217.97900,0,-1,-1);
	CreateDynamicObject(711, 3523.30005, -1556.69995, 10.40000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(711, 3551.39990, -1550.50000, 13.40000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(711, 3565.39990, -1580.09998, 8.10000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(711, 3568.19995, -1590.69995, 6.60000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(711, 3587.60010, -1579.50000, 7.30000,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(6300, 3625.00000, -2004.69995, -7.90000,   0.00000, 0.00000, 3.99900,0,-1,-1);
	CreateDynamicObject(19854, 3625.17188, -2020.02698, 0.11620,   0.00000, 0.00000, -180.88000,0,-1,-1);
	CreateDynamicObject(19855, 3625.14111, -2020.00464, 0.12320,   0.00000, 0.00000, -180.88000,0,-1,-1);
	CreateDynamicObject(1491, 3625.10425, -2009.53918, 0.83399,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1491, 3613.64990, -2024.60999, 0.83545,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(1491, 3619.65430, -2009.46240, 0.83235,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19550, 3676.56714, -1980.62183, 0.14960,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19550, 3677.48755, -1881.38770, 0.14986,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19668, 3711.32690, -1987.73645, 33.93150,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19668, 3709.95532, -1998.77148, 34.05301,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19668, 3708.73657, -2009.77087, 34.04052,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19668, 3711.51367, -1976.71204, 33.91106,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19550, 3799.90454, -1980.44958, 0.15530,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19550, 3799.83667, -1856.77258, 0.14960,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(13120, 3826.76782, -1750.95691, -22.60294,   0.00000, 0.00000, 43.85997,0,-1,-1);
	CreateDynamicObject(13120, 3865.50171, -1820.08606, -26.02025,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19966, 2851.29199, -1848.82532, 9.89338,   0.00000, 0.00000, -91.32000,0,-1,-1);
	CreateDynamicObject(19129, 3460.21509, -1443.55457, 0.24090,   0.00000, 0.00000, -18.18000,0,-1,-1);
	CreateDynamicObject(11737, 3469.01807, -1458.76184, 1.14464,   0.00000, 0.00000, -300.47980,0,-1,-1);
	CreateDynamicObject(19840, 3286.26196, -1935.56287, 2.99534,   0.00000, 0.00000, 74.93999,0,-1,-1);
	CreateDynamicObject(19840, 3282.47949, -1926.05115, 3.97213,   0.00000, 0.00000, 108.06001,0,-1,-1);
	CreateDynamicObject(19634, 3796.45703, -1887.34082, 10.30768,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19609, 3469.52246, -1437.82471, 2.88467,   0.00000, 0.00000, 21.84000,0,-1,-1);
	CreateDynamicObject(19609, 3456.74292, -1433.21228, 2.88119,   0.00000, 0.00000, -25.92000,0,-1,-1);
	CreateDynamicObject(18809, 3334.64307, -1917.63245, 7.94881,   -1.14000, -89.75998, 96.60001,0,-1,-1);
	CreateDynamicObject(18809, 3340.76880, -1965.84741, 8.03219,   -43.85999, -90.06004, 97.73999,0,-1,-1);
	CreateDynamicObject(18811, 3347.20801, -2014.37976, 8.88546,   -7.32000, -87.84000, 97.74000,0,-1,-1);
	CreateDynamicObject(18826, 3351.51221, -2047.87842, 25.49622,   0.00000, -0.54000, 96.86001,0,-1,-1);
	CreateDynamicObject(18809, 3340.76880, -1965.84741, 8.03219,   -43.85999, -90.06004, 97.73999,0,-1,-1);
	CreateDynamicObject(18809, 3346.84692, -2013.15906, 41.43951,   -43.86000, -90.06000, 97.74000,0,-1,-1);
	CreateDynamicObject(18809, 3340.06763, -1963.70032, 41.43950,   -43.86000, -90.06000, 97.74000,0,-1,-1);
	CreateDynamicObject(18826, 3319.42236, -1931.42737, 44.28273,   80.00000, 0.00000, -80.00000,0,-1,-1);
	CreateDynamicObject(18826, 3306.97168, -1954.63965, 31.18778,   0.00000, 0.00000, 96.18005,0,-1,-1);
	CreateDynamicObject(18809, 3303.04053, -1919.41833, 15.33936,   -0.84000, -89.76000, 96.60000,0,-1,-1);
	CreateDynamicObject(16151, 3613.28467, -2019.01404, 1.18000,   0.00000, 0.00000, 180.00000,0,-1,-1);
	CreateDynamicObject(19787, 3617.32129, -2024.49854, 1.84230,   0.00000, 0.00000, -180.00000,0,-1,-1);
	CreateDynamicObject(2315, 3617.06494, -2023.01306, 0.84181,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19332, 3527.26367, -1726.22925, 50.59012,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(19336, 3548.35083, -1739.85767, 66.46120,   0.00000, 0.00000, 0.00000,0,-1,-1);
	CreateDynamicObject(11686, 3628.17407, -2023.96655, 0.84252,   0.00000, 0.00000, 0.00000,0,-1,-1);
	// SDROP RAVEN
    CreateObject(18450,-1123.0999800,-439.3200100,63.5000000,1.9020000,341.9890000,332.6140000); //object(cs_roadbridge04) (1)
    CreateObject(18450,-1086.0996100,-459.0390600,87.6634400,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (2)
    CreateObject(18450,-1033.1999500,-487.1730000,137.9390100,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (3)
    CreateObject(18450,-980.0997300,-515.4119900,188.4070000,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (4)
    CreateObject(18450,-927.7000100,-543.2700200,238.2120100,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (5)
    CreateObject(18450,-875.1799900,-571.2000100,288.1200000,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (6)
    CreateObject(18450,-821.9650300,-599.5000000,338.6980000,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (7)
    CreateObject(18450,-769.6900000,-627.2999900,388.3830000,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (8)
    CreateObject(18450,-718.0999800,-654.7349900,437.4193100,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (9)
    CreateObject(18450,-664.7625700,-683.0999800,488.1130100,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (10)
    CreateObject(18450,-613.2000100,-710.5200200,537.1190200,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (11)
    CreateObject(18450,-561.7000100,-737.9079000,586.0670200,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (12)
    CreateObject(18450,-509.7999900,-765.5080000,635.3950200,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (13)
    CreateObject(18450,-456.8999900,-793.6430100,685.6740100,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (14)
    CreateObject(18450,-404.7998000,-821.3486300,735.1909200,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (15)
    CreateObject(18450,-354.5000000,-848.0983300,782.9979900,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (16)
    CreateObject(18450,-302.0000000,-876.0180100,832.8950200,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (17)
    CreateObject(18450,-250.0000000,-903.6718700,882.3179900,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (18)
    CreateObject(18450,-197.8000000,-931.4320100,931.9299900,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (19)
    CreateObject(18450,-145.3000000,-959.3519900,981.8280000,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (20)
    CreateObject(18450,-91.7998000,-987.8037100,1032.6760300,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (21)
    CreateObject(18450,-40.1000000,-1015.2979700,1081.8129900,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (22)
    CreateObject(18450,12.7000000,-1043.3780500,1131.9980500,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (23)
    CreateObject(18450,65.8000000,-1071.6168200,1182.4659400,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (24)
    CreateObject(18450,118.3000000,-1099.5369900,1232.3640100,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (25)
    CreateObject(18450,171.2000000,-1127.6699200,1282.6419700,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (26)
    CreateObject(18450,224.1000100,-1155.8029800,1332.9200400,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (27)
    CreateObject(18450,276.2999900,-1183.5629900,1382.5319800,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (28)
    CreateObject(18450,329.3999900,-1211.8020000,1432.9998800,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (29)
    CreateObject(18450,382.3999900,-1239.9880400,1483.3730500,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (30)
    CreateObject(18450,434.2999900,-1267.5887500,1532.6999500,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (31)
    CreateObject(18450,487.2000100,-1295.7220500,1582.9780300,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (32)
    CreateObject(18450,540.7000100,-1324.1739500,1633.8260500,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (33)
    CreateObject(18450,594.0000000,-1352.5192900,1684.4840100,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (34)
    CreateObject(18450,647.5999800,-1381.0240500,1735.4289600,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (35)
    CreateObject(18450,699.2000100,-1408.4659400,1784.4687500,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (36)
    CreateObject(18450,752.2999900,-1436.7049600,1834.9360400,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (37)
    CreateObject(18450,805.0000000,-1464.7320600,1885.0300300,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (38)
    CreateObject(18450,858.5999800,-1493.2370600,1935.9799800,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (39)
    CreateObject(18450,910.5996100,-1520.8906200,1985.4019800,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (40)
    CreateObject(18450,962.5999800,-1548.5450400,2034.8249500,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (41)
    CreateObject(18450,1016.0000000,-1576.9439700,2085.5778800,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (42)
    CreateObject(18450,1069.3000500,-1605.2889400,2136.2360800,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (43)
    CreateObject(18450,1122.6999500,-1633.6899400,2186.9899900,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (44)
    CreateObject(18450,1176.0000000,-1662.0350300,2237.6479500,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (45)
    CreateObject(18450,1229.1999500,-1690.3270300,2288.2119100,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (46)
    CreateObject(18450,1282.4000200,-1718.6190200,2338.7749000,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (47)
    CreateObject(18450,1335.6999500,-1746.9649700,2389.4331100,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (48)
    CreateObject(18450,1388.3000500,-1774.9379900,2439.4260300,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (49)
    CreateObject(18450,1440.5000000,-1802.6989700,2489.0397900,0.0000000,319.9990000,331.9960000); //object(cs_roadbridge04) (50)
    CreateObject(3816,1491.8000500,-1830.0000000,2523.5500500,0.0000000,0.0000000,242.4950000); //object(bighangar1_sfx) (1)
    CreateObject(1655,-1157.5999800,-417.0000000,50.9000000,334.0170000,357.7750000,61.0250000); //object(waterjumpx2) (1)
    CreateObject(1655,-1161.0000000,-423.3999900,50.6479000,334.0120000,357.7700000,61.0240000); //object(waterjumpx2) (2)
    CreateObject(1655,-1162.6999500,-414.2999900,51.5000000,356.0020000,357.9950000,60.8850000); //object(waterjumpx2) (3)
    CreateObject(1655,-1166.1999500,-420.6000100,51.2530000,356.0010000,357.9950000,60.8810000); //object(waterjumpx2) (4)
    CreateObject(1655,-1165.9000200,-412.6000100,53.0000000,5.9950000,357.9890000,61.2310000); //object(waterjumpx2) (5)
    CreateObject(1655,-1169.4000200,-418.8999900,52.7560000,5.9930000,357.9840000,61.2270000); //object(waterjumpx2) (6)
	// mad dog mansion blocks
	CreateDynamicObject(975,1304.330810,-783.558105,1084.007812,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(975,1264.530517,-783.668457,1092.586914,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(975,1263.981689,-783.676879,1095.083618,0.000000,0.000000,0.000000,0,-1,-1);
	// newcity1
    CreateDynamicObject(4142,2358.7072750,-5264.4897460,1.9136760,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(10631,2419.4250480,-5313.2880850,6.0133600,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(13295,2382.8706050,-5319.3461910,8.4853630,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2361.2380370,-5325.5410150,2.8797430,0.0000000,0.0000000,-88.5999980,0,-1,-1);
	CreateDynamicObject(19313,2368.4936520,-5332.4760740,2.8197410,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2382.9338370,-5332.4760740,2.8197410,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19321,2392.5075680,-5330.5937500,3.3097410,0.0000000,0.0000000,-89.5000300,0,-1,-1);
	CreateDynamicObject(19321,2392.6196280,-5330.8154290,6.2497420,0.0000000,0.0000000,-89.5000300,0,-1,-1);
	CreateDynamicObject(19313,2407.9155270,-5326.2905270,3.1902370,0.0000000,0.0000000,88.5999830,0,-1,-1);
	CreateDynamicObject(10766,2440.1503900,-5257.3237300,0.1133610,0.0000000,0.0000000,88.8999710,0,-1,-1);
	CreateDynamicObject(7981,2362.4111320,-5274.1474600,7.0271090,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1682,2367.0180660,-5271.9589840,18.0270970,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(10767,2560.9243160,-5258.2451170,-12.5613400,0.0000000,0.0000000,-45.2000120,0,-1,-1);
	CreateDynamicObject(4233,2473.0327140,-5294.5029290,2.0133640,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(5716,2455.0058590,-5321.9106440,15.4092960,0.0000000,0.0000000,-179.1999660,0,-1,-1);
	CreateDynamicObject(9241,2373.9311520,-5253.2851560,4.1898670,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(6404,2296.0231930,-5269.7954100,8.7433510,0.0000000,0.0000000,91.6000210,0,-1,-1);
	CreateDynamicObject(10606,2339.9963370,-5329.1049800,10.6833590,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1226,2361.2670890,-5300.2236320,5.6833620,0.0000000,0.0000000,-84.2999950,0,-1,-1);
	CreateDynamicObject(1226,2449.3535150,-5301.8945310,5.8193030,0.0000000,0.0000000,-83.4000010,0,-1,-1);
	CreateDynamicObject(1257,2452.7883300,-5301.5732420,3.2792990,0.0000000,0.0000000,-87.3999860,0,-1,-1);
	CreateDynamicObject(1216,2448.4184570,-5302.8466790,2.6447260,0.0000000,-0.2000000,177.5999750,0,-1,-1);
	CreateDynamicObject(1315,2322.1374510,-5286.1821280,4.9933600,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1315,2327.2653800,-5290.7250970,4.9933600,0.0000000,0.0000000,89.5999980,0,-1,-1);
	CreateDynamicObject(767,2330.7185050,-5287.2827140,1.9774240,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2313.1564940,-5303.9516600,2.8411920,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2304.9777830,-5298.6484370,2.6511900,0.0000000,0.0000000,-50.4999920,0,-1,-1);
	CreateDynamicObject(11469,2302.4868160,-5243.1318350,2.0433640,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(6235,2318.9792480,-5231.7475580,17.8033650,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(4142,2349.2570800,-5176.8164060,1.9633640,0.0000000,0.0000000,-90.5999600,0,-1,-1);
	CreateDynamicObject(1231,2326.7734370,-5221.1391600,2.9630510,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1231,2327.2932120,-5198.8081050,2.9630510,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1231,2310.6237790,-5198.8081050,2.9630510,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1231,2309.7619620,-5221.2441400,2.9630510,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(16767,2292.7897940,-5147.3168940,7.8530440,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2309.5944820,-5133.2944330,2.8885500,0.0000000,0.0000000,-89.4000090,0,-1,-1);
	CreateDynamicObject(5004,2470.5866690,-5204.2724600,1.8098720,0.0000000,0.0000000,-1.3999990,0,-1,-1);
	CreateDynamicObject(16771,2393.4746090,-5205.2651360,8.5764790,0.0000000,0.0000000,179.5000000,0,-1,-1);
	CreateDynamicObject(1683,2396.1213370,-5215.5693350,8.0440270,0.7999960,0.0000000,-91.9000160,0,-1,-1);
	CreateDynamicObject(10193,2337.0434570,-5111.5458980,36.8171500,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1226,2325.5632320,-5268.8769530,5.5633620,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1226,2342.0444330,-5144.1362300,5.6030440,0.0000000,0.0000000,-79.0999750,0,-1,-1);
	CreateDynamicObject(19313,2329.5563960,-5155.1196280,5.1771130,0.0000000,0.0000000,-90.9000320,0,-1,-1);
	CreateDynamicObject(19313,2336.7006830,-5148.2446280,5.0030540,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2350.7202140,-5148.2446280,5.0030540,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2364.7907710,-5148.2446280,5.0030540,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2378.7216790,-5148.2446280,5.0030540,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(615,2335.4494620,-5144.3842770,1.5830520,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1315,2323.4062500,-5144.8710930,5.2030520,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1315,2327.1240230,-5139.7524410,5.2030520,0.0000000,0.0000000,-80.7000040,0,-1,-1);
	CreateDynamicObject(18235,2370.0642080,-5119.9389640,1.9930520,0.0000000,0.0000000,-3.2999980,0,-1,-1);
	CreateDynamicObject(1258,2350.1213370,-5130.7207030,2.7230510,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1226,2361.5952140,-5131.1420890,5.6830530,0.0000000,0.0000000,77.1999960,0,-1,-1);
	CreateDynamicObject(4857,2378.5207510,-5121.5932610,4.2071120,0.0000000,0.0000000,-92.3000100,0,-1,-1);
	CreateDynamicObject(19313,2334.7468260,-5284.1503900,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2348.6562500,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2362.6259760,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2376.7060540,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2390.7243650,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2429.1262200,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2415.1352530,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2443.1462400,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2457.0861810,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(3881,2405.2839350,-5280.9741210,3.7264890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(2793,2404.9055170,-5284.1118160,5.1164870,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2471.1364740,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2485.1760250,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2499.1362300,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2513.1159660,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2527.0063470,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2541.1064450,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2555.1164550,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(4567,2595.4101560,-5295.5683590,1.8364900,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2569.0869140,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2583.0476070,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2597.0270990,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2610.9770500,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2625.0270990,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2638.4782710,-5284.0800780,3.0364890,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2644.8452140,-5276.9785150,3.0558450,0.0000000,0.0000000,-85.9000010,0,-1,-1);
	CreateDynamicObject(19313,2644.8586420,-5262.9033200,3.0558450,0.0000000,0.0000000,-95.2000040,0,-1,-1);
	CreateDynamicObject(19313,2645.5827630,-5248.8793940,3.0558450,0.0000000,0.0000000,-90.9000320,0,-1,-1);
	CreateDynamicObject(19313,2645.7319330,-5236.8232420,3.0558450,0.0000000,0.0000000,-90.9000320,0,-1,-1);
	CreateDynamicObject(8038,2471.4636230,-5207.2509760,21.8442360,0.0000000,0.0000000,-92.8000410,0,-1,-1);
	CreateDynamicObject(1683,2533.7744140,-5188.8837890,7.9642410,0.0000000,0.0000000,-87.9999920,0,-1,-1);
	CreateDynamicObject(3665,2560.3884270,-5215.0297850,3.0442450,0.0000000,0.0000000,-2.0999970,0,-1,-1);
	CreateDynamicObject(19313,2638.7602530,-5229.9106440,3.0701360,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2624.8212890,-5229.9106440,3.0701360,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2610.8503410,-5229.9106440,3.0701360,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2598.2478020,-5229.9106440,3.0701360,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2590.7314450,-5222.8237300,3.0442450,0.0000000,0.0000000,-91.1999890,0,-1,-1);
	CreateDynamicObject(19313,2591.8911130,-5208.9594720,3.0442450,0.0000000,0.0000000,-98.7999640,0,-1,-1);
	CreateDynamicObject(19313,2595.3757320,-5195.3959960,3.0342450,0.0000000,0.0000000,-109.5999600,0,-1,-1);
	CreateDynamicObject(19313,2600.1162100,-5182.3203120,3.0342450,0.0000000,0.0000000,-109.5999600,0,-1,-1);
	CreateDynamicObject(19313,2605.8054190,-5169.4492180,3.0342450,0.0000000,0.0000000,-118.7999490,0,-1,-1);
	CreateDynamicObject(19313,2602.6777340,-5161.3872070,3.0442450,0.0000000,0.0000000,-14.2000090,0,-1,-1);
	CreateDynamicObject(19313,2589.2717280,-5157.7421870,3.0442450,0.0000000,0.0000000,-14.2000090,0,-1,-1);
	CreateDynamicObject(19313,2575.4975580,-5155.4121090,3.0442450,0.0000000,0.0000000,-4.9000100,0,-1,-1);
	CreateDynamicObject(19313,2561.6416010,-5154.1406250,3.0442450,0.0000000,0.0000000,-4.9000100,0,-1,-1);
	CreateDynamicObject(19313,2547.6472160,-5152.8564450,3.0442450,0.0000000,0.0000000,-4.9000100,0,-1,-1);
	CreateDynamicObject(19313,2533.6423330,-5151.5717770,3.0442450,0.0000000,0.0000000,-4.9000100,0,-1,-1);
	CreateDynamicObject(19313,2519.8469230,-5150.3066400,3.0442450,0.0000000,0.0000000,-4.9000100,0,-1,-1);
	CreateDynamicObject(19313,2505.9077140,-5150.6831050,3.0442450,0.0000000,0.0000000,8.1999890,0,-1,-1);
	CreateDynamicObject(19313,2491.9626460,-5152.8383780,3.0442450,0.0000000,0.0000000,8.1999890,0,-1,-1);
	CreateDynamicObject(19313,2478.1945800,-5154.9653320,3.0442450,0.0000000,0.0000000,8.1999890,0,-1,-1);
	CreateDynamicObject(19313,2464.3178710,-5157.1079100,3.0442450,0.0000000,0.0000000,8.1999890,0,-1,-1);
	CreateDynamicObject(19313,2450.4812010,-5159.2465820,3.0442450,0.0000000,0.0000000,8.1999890,0,-1,-1);
	CreateDynamicObject(19313,2436.8027340,-5161.3627920,3.0442450,0.0000000,0.0000000,8.1999890,0,-1,-1);
	CreateDynamicObject(19313,2422.8359370,-5163.5195310,3.0442450,0.0000000,0.0000000,8.1999890,0,-1,-1);
	CreateDynamicObject(19313,2423.8359370,-5163.5195310,3.0442450,0.0000000,0.0000000,8.1999890,0,-1,-1);
	CreateDynamicObject(19313,2409.5095210,-5161.5170890,3.0442450,0.0000000,0.0000000,-26.6000110,0,-1,-1);
	CreateDynamicObject(19313,2397.1296380,-5155.3403320,3.0442450,0.0000000,0.0000000,-26.6000110,0,-1,-1);
	CreateDynamicObject(19313,2392.1740720,-5151.7348630,3.0442450,0.0000000,0.0000000,-29.6000190,0,-1,-1);
	CreateDynamicObject(19313,2328.0588370,-5277.0371090,3.0364890,0.0000000,0.0000000,88.6000130,0,-1,-1);
	CreateDynamicObject(19313,2328.4694820,-5263.0581050,3.0364890,0.0000000,0.0000000,88.6000130,0,-1,-1);
	CreateDynamicObject(19313,2328.9692380,-5249.1186520,3.0364890,0.0000000,0.0000000,88.6000130,0,-1,-1);
	CreateDynamicObject(19313,2329.1293940,-5237.5922850,3.0364890,0.0000000,0.0000000,88.6000130,0,-1,-1);
	CreateDynamicObject(16012,2505.7075190,-5312.7617180,1.8342460,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(8417,2504.7731930,-5306.3222650,1.7542480,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2524.0844720,-5312.1298820,0.4242460,0.0000000,0.0000000,-82.8000030,0,-1,-1);
	CreateDynamicObject(1231,2526.2783200,-5301.6596670,4.3942480,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(5191,2719.2351070,-5294.9321280,-4.1644430,0.0000000,0.0000000,-90.2999800,0,-1,-1);
	CreateDynamicObject(8411,2684.8574210,-5265.0253900,-5.5025730,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(8411,2747.3149410,-5265.0253900,-5.5025730,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(8411,2565.1662590,-5324.3374020,-6.4125770,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(8411,2627.7338860,-5324.3374020,-6.4025750,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(8411,2690.1223140,-5324.3374020,-6.4625740,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(8411,2752.3212890,-5324.3374020,-6.4625740,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1223,2667.0895990,-5300.5371090,1.7224290,0.0000000,0.0000000,93.5000000,0,-1,-1);
	CreateDynamicObject(1223,2685.2619620,-5300.5029290,1.7224290,0.0000000,0.0000000,93.5000000,0,-1,-1);
	CreateDynamicObject(1223,2704.8847650,-5300.6206050,1.7224290,0.0000000,0.0000000,93.5000000,0,-1,-1);
	CreateDynamicObject(5431,2829.9790030,-5343.1723630,2.4777920,0.8000040,0.1999990,-90.5000070,0,-1,-1);
	CreateDynamicObject(12924,2801.6606440,-5314.4287100,1.8428410,0.0000000,0.0000000,178.9000090,0,-1,-1);
	CreateDynamicObject(19313,2779.5341790,-5331.6005850,1.4982910,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(11008,2843.1682120,-5340.4755850,9.4480650,0.0000000,0.0000000,175.1000060,0,-1,-1);
	CreateDynamicObject(9310,2828.7719720,-5309.9262690,7.6368160,0.0000000,0.0000000,177.7999720,0,-1,-1);
	CreateDynamicObject(19313,2821.7060540,-5305.9667960,3.1893630,0.0000000,0.0000000,-3.1999990,0,-1,-1);
	CreateDynamicObject(898,2847.6591790,-5320.3715820,4.3121800,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(898,2840.0690910,-5314.0830070,4.3121800,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(5773,2811.5559080,-5262.6933590,-0.9009420,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1226,2818.7392570,-5289.2734370,5.7538890,0.0000000,0.0000000,63.0999980,0,-1,-1);
	CreateDynamicObject(16067,2858.9172360,-5282.4750970,2.4988360,0.0000000,0.0000000,-3.9999990,0,-1,-1);
	CreateDynamicObject(7037,2832.9396970,-5279.0756830,7.3060640,0.0000000,0.0000000,86.9000010,0,-1,-1);
	CreateDynamicObject(19313,2849.0825190,-5282.8608390,2.1105770,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(5189,2887.0725090,-5298.4355460,8.3826520,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2869.4506830,-5283.5561520,4.1518600,0.0000000,0.0000000,-2.0000000,0,-1,-1);
	CreateDynamicObject(823,2878.4768060,-5321.5424800,3.5037410,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(823,2875.8967280,-5315.3930660,3.9837410,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(880,2873.5732420,-5321.8569330,3.8819730,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(880,2874.5732420,-5317.1494140,3.8819730,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(3863,2865.4050290,-5299.2416990,3.8816280,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1226,2863.4758300,-5301.4428710,6.3988140,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(5763,2868.1918940,-5358.4033200,2.2964300,0.0000000,0.0000000,83.0000070,0,-1,-1);
	CreateDynamicObject(823,2875.1364740,-5321.5424800,3.5037410,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1226,2855.1831050,-5362.1577140,6.2645950,0.0000000,0.0000000,173.8000180,0,-1,-1);
	CreateDynamicObject(6875,2837.5395500,-5382.2910150,1.9426740,0.0000000,0.0000000,-9.3999970,0,-1,-1);
	CreateDynamicObject(19313,2851.3679190,-5390.7348630,3.9443940,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(19313,2859.6582030,-5390.7348630,3.9443940,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(11469,2393.6838370,-5121.8813470,2.1371150,0.0000000,0.0000000,-89.8999930,0,-1,-1);
	CreateDynamicObject(4152,2454.5168450,-5139.4057610,2.0030510,0.0000000,0.0000000,-91.7000350,0,-1,-1);
	CreateDynamicObject(8710,2455.4228510,-5106.0761710,2.1089890,0.0000000,0.0000000,-1.3999990,0,-1,-1);
	CreateDynamicObject(10193,2511.8923330,-5115.5307610,36.7389750,0.0000000,0.0000000,0.0000000,0,-1,-1);
	CreateDynamicObject(1226,2486.5468750,-5133.7392570,5.6449270,-0.1999990,-0.0999990,102.5999830,0,-1,-1);
	CreateDynamicObject(5333,2582.1437980,-5144.6694330,10.3051490,0.0000000,0.0000000,176.8000330,0,-1,-1);
	CreateDynamicObject(5147,2786.3063960,-5156.6342770,11.3279580,0.0000000,0.0000000,-3.5000000,0,-1,-1);
	CreateDynamicObject(5491,2946.3559570,-5165.7177730,1.6136000,0.0000000,0.0000000,-3.0999980,0,-1,-1);
	CreateDynamicObject(13132,2872.7209470,-5175.7626950,4.8254730,0.0000000,0.0000000,-90.4999920,0,-1,-1);
	CreateDynamicObject(12941,2881.0292960,-5139.4394530,1.5594670,0.0000000,0.0000000,-1.8000000,0,-1,-1);
	CreateDynamicObject(1226,2883.4362790,-5158.0947260,5.2497650,0.0000000,0.0000000,88.9999920,0,-1,-1);
	CreateDynamicObject(4564,2927.9790030,-5137.3496090,100.9326090,0.0000000,0.0000000,86.6000360,0,-1,-1);
	CreateDynamicObject(6159,2907.1049800,-5180.9394530,8.0173460,0.0000000,0.0000000,176.6999510,0,-1,-1);
	CreateDynamicObject(1226,2930.9165030,-5170.8100580,5.1583180,0.0000000,0.0000000,-85.8000030,0,-1,-1);
	CreateDynamicObject(8566,2951.3593750,-5195.2675780,9.3607560,0.0000000,0.0000000,86.0999220,0,-1,-1);
	CreateDynamicObject(10606,2985.5688470,-5200.9868160,10.4932880,0.0000000,0.0000000,-3.8000000,0,-1,-1);
	CreateDynamicObject(1226,2990.2763670,-5173.3178710,5.1532850,0.0000000,0.0000000,-89.5000000,0,-1,-1);
	CreateDynamicObject(5189,2973.6813960,-5147.4282220,6.8069190,0.0000000,0.0000000,86.2999490,0,-1,-1);
	CreateDynamicObject(10193,3015.7519530,-5144.3681640,36.2978130,0.0000000,0.0000000,-3.3999990,0,-1,-1);
	CreateDynamicObject(4857,3011.2709960,-5185.2641600,3.9373490,0.0000000,0.0000000,90.0000000,0,-1,-1);
	CreateDynamicObject(3986,3031.2509760,-5208.7202140,12.2832840,0.0000000,0.0000000,88.0999830,0,-1,-1);
	CreateDynamicObject(19313,3035.6499020,-5167.2807610,2.7073500,0.0000000,0.0000000,83.5999830,0,-1,-1);
	CreateDynamicObject(19313,3035.1069330,-5172.8618160,2.7073500,0.0000000,0.0000000,83.5999830,0,-1,-1);


	// /jump
	CreateDynamicObject(18450, 2612.445801, -1767.673828, 863.040771, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 2541.092529, -1767.671143, 839.126648, 0.0000, 323.0442, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 2478.290527, -1767.670288, 791.927551, 0.0000, 323.0442, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 2415.908691, -1767.694092, 745.001587, 0.0000, 323.0442, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 2353.765381, -1767.659302, 698.244690, 0.0000, 323.0442, 0.0000,0,-1,-1);
	CreateDynamicObject(1634, 2322.294189, -1771.604614, 676.294922, 337.6546, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 2322.308105, -1767.651001, 676.305542, 337.6546, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 2322.319092, -1764.208374, 676.313782, 337.6546, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 2316.589355, -1771.587280, 678.143677, 6.8755, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 2316.594971, -1767.717163, 678.158264, 6.8755, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 2316.602539, -1764.210693, 678.155334, 6.8755, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(18450, 2194.445313, -1771.186768, 543.302002, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 2116.376709, -1771.197876, 554.539001, 0.0000, 16.3293, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 2040.445068, -1771.193237, 576.773804, 0.0000, 16.3293, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 1972.051758, -1771.215332, 562.119019, 0.0000, 319.6065, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 1914.345947, -1771.227173, 513.024414, 0.0000, 319.6065, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 1854.321777, -1771.254028, 461.981720, 0.0000, 319.6065, 0.0000,0,-1,-1);
	CreateDynamicObject(1634, 1824.576782, -1775.083252, 438.421234, 340.2330, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 1824.610352, -1771.147461, 438.449768, 340.2330, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 1824.628174, -1767.742188, 438.464935, 340.2330, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 1817.967041, -1767.724731, 440.190613, 357.4217, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 1817.912964, -1771.832275, 440.183380, 357.4217, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 1817.920898, -1775.031860, 440.182770, 357.4217, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 1812.790771, -1775.052368, 444.080841, 22.3454, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 1812.780396, -1771.245483, 444.106262, 22.3454, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(1634, 1812.764771, -1767.637329, 444.126709, 22.3454, 0.0000, 90.0000,0,-1,-1);


	// Hideout3
    CreateDynamicObject(987, 1643.1407470703, -1554.1456298828, 12.600336074829, 0.000000, 0.000000, 89.325012207031,0,-1,-1); //
	CreateDynamicObject(987, 1643.2836914063, -1544.0498046875, 12.600336074829, 0.000000, 0.000000, 89.324340820313,0,-1,-1); //
	CreateDynamicObject(987, 1643.3756103516, -1532.6756591797, 12.600336074829, 0.000000, 0.000000, 89.324340820313,0,-1,-1); //
	CreateDynamicObject(987, 1643.4189453125, -1521.4248046875, 12.600336074829, 0.000000, 0.000000, 89.324340820313,0,-1,-1); //
	CreateDynamicObject(987, 1558.1202392578, -1559.9505615234, 12.546875, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(987, 1550.0948486328, -1559.9582519531, 12.546875, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(987, 1550.7065429688, -1507.376953125, 12.5546875, 0.000000, 0.000000, 91.310028076172,0,-1,-1); //
	CreateDynamicObject(987, 1550.5073242188, -1498.126953125, 12.5546875, 0.000000, 0.000000, 91.307373046875,0,-1,-1); //
	CreateDynamicObject(987, 1550.3393554688, -1487.6157226563, 12.5546875, 0.000000, 0.000000, 91.307373046875,0,-1,-1); //
	CreateDynamicObject(987, 1550.1657714844, -1480.3643798828, 12.5546875, 0.000000, 0.000000, 91.307373046875,0,-1,-1); //
	CreateDynamicObject(987, 1603.2061767578, -1465.9611816406, 12.56759262085, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(987, 1592.4631347656, -1465.9606933594, 12.56759262085, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(5816, 1558.3172607422, -1518.3251953125, 18.988437652588, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(16151, 1630.9311523438, -1515.5087890625, 12.589176177979, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(16152, 1626.3089599609, -1509.3505859375, 12.357471466064, 0.000000, 0.000000, 87.340026855469,0,-1,-1); //
	CreateDynamicObject(16152, 1618.7059326172, -1516.1817626953, 12.357471466064, 0.000000, 0.000000, 359.99578857422,0,-1,-1); //
	CreateDynamicObject(2071, 1622.8619384766, -1516.9024658203, 14.104511260986, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2071, 1627.2805175781, -1516.603515625, 14.104511260986, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1709, 1578.0225830078, -1548.8074951172, 12.567485809326, 0.000000, 0.000000, 175.39495849609,0,-1,-1); //
	CreateDynamicObject(1709, 1572.9913330078, -1547.4890136719, 12.567485809326, 0.000000, 0.000000, 72.171203613281,0,-1,-1); //
	CreateDynamicObject(2024, 1576.7646484375, -1546.8786621094, 12.565334320068, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2024, 1576.8056640625, -1544.642578125, 12.565334320068, 0.000000, 0.000000, 91.310028076172,0,-1,-1); //
	CreateDynamicObject(1836, 1596.9302978516, -1532.5046386719, 12.650966644287, 0.000000, 0.000000, 352.05999755859,0,-1,-1); //
	CreateDynamicObject(1836, 1596.9494628906, -1532.4886474609, 12.601608276367, 0.000000, 0.000000, 352.05999755859,0,-1,-1); //
	CreateDynamicObject(1836, 1596.998046875, -1531.9907226563, 12.601608276367, 0.000000, 0.000000, 172.69061279297,0,-1,-1); //
	CreateDynamicObject(1836, 1596.802734375, -1533.98046875, 12.601608276367, 0.000000, 0.000000, 172.68859863281,0,-1,-1); //
	CreateDynamicObject(1836, 1596.75390625, -1534.4780273438, 12.601608276367, 0.000000, 0.000000, 354.03854370117,0,-1,-1); //
	CreateDynamicObject(1978, 1590.8596191406, -1526.5321044922, 13.643382072449, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1978, 1586.4367675781, -1526.5224609375, 13.643382072449, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(14582, 1588.7700195313, -1536.3840332031, 16.067651748657, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3092, 1556.0147705078, -1525.7241210938, 17.082229614258, 0.000000, 0.000000, 264.71997070313,0,-1,-1); //
	CreateDynamicObject(3092, 1556.4035644531, -1529.4514160156, 17.082229614258, 0.000000, 0.000000, 264.71557617188,0,-1,-1); //
	CreateDynamicObject(2908, 1557.7681884766, -1525.5825195313, 12.624091148376, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2908, 1558.7899169922, -1527.9830322266, 12.624091148376, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2908, 1557.9329833984, -1527.0718994141, 12.624091148376, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2908, 1557.3813476563, -1528.8933105469, 12.624091148376, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2908, 1556.7989501953, -1523.6759033203, 12.624091148376, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2908, 1558.2893066406, -1523.5095214844, 12.624091148376, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2908, 1558.3721923828, -1524.2540283203, 12.624091148376, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2908, 1557.1854248047, -1524.8892822266, 12.624091148376, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2907, 1559.2233886719, -1526.3054199219, 12.706350326538, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2907, 1556.4968261719, -1525.9448242188, 12.706350326538, 0.000000, 0.000000, 55.580017089844,0,-1,-1); //
	CreateDynamicObject(2907, 1558.8293457031, -1529.2778320313, 12.706350326538, 0.000000, 0.000000, 250.10986328125,0,-1,-1); //
	CreateDynamicObject(2907, 1556.3510742188, -1528.9501953125, 12.706350326538, 0.000000, 13.894989013672, 250.10925292969,0,-1,-1); //
	CreateDynamicObject(2907, 1555.9343261719, -1526.3740234375, 12.706350326538, 304.41998291016, 342.13220214844, 250.10375976563,0,-1,-1); //
	CreateDynamicObject(2907, 1557.7475585938, -1524.0922851563, 12.456350326538, 179.35998535156, 21.830444335938, 267.96313476563,0,-1,-1); //
	CreateDynamicObject(2906, 1557.1870117188, -1527.5728759766, 12.620824813843, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2906, 1556.9942626953, -1525.3299560547, 12.620824813843, 0.000000, 0.000000, 292.50997924805,0,-1,-1); //
	CreateDynamicObject(2906, 1557.9552001953, -1527.7564697266, 12.620824813843, 0.000000, 0.000000, 292.50549316406,0,-1,-1); //
	CreateDynamicObject(2906, 1558.2183837891, -1524.9725341797, 12.620824813843, 0.000000, 19.850006103516, 211.12072753906,0,-1,-1); //
	CreateDynamicObject(2905, 1558.80078125, -1528.6248779297, 12.637806892395, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2905, 1558.5657958984, -1525.8834228516, 12.637806892395, 0.000000, 248.83996582031, 288.53997802734,0,-1,-1); //
	CreateDynamicObject(2905, 1556.4299316406, -1527.3208007813, 12.637806892395, 0.000000, 248.83483886719, 314.34423828125,0,-1,-1); //
	CreateDynamicObject(2905, 1555.7177734375, -1524.8715820313, 12.637806892395, 316.32998657227, 248.83483886719, 274.64111328125,0,-1,-1); //
	CreateDynamicObject(2905, 1559.4549560547, -1524.5506591797, 12.637806892395, 354.04406738281, 219.05981445313, 302.42602539063,0,-1,-1); //
	CreateDynamicObject(1415, 1557.5603027344, -1531.1873779297, 12.546722412109, 0.000000, 0.000000, 182.62005615234,0,-1,-1); //
	CreateDynamicObject(2907, 1557.0714111328, -1531.5213623047, 12.706350326538, 0.000000, 0.000000, 250.10925292969,0,-1,-1); //
	CreateDynamicObject(2905, 1557.416015625, -1531.3237304688, 13.137806892395, 0.000000, 248.83483886719, 314.3408203125,0,-1,-1); //
	CreateDynamicObject(3092, 1557.3973388672, -1531.2045898438, 13.582229614258, 11.910003662109, 0.000000, 264.71557617188,0,-1,-1); //
	CreateDynamicObject(12957, 1558.3878173828, -1520.7763671875, 12.924925804138, 0.000000, 0.000000, 39.700012207031,0,-1,-1); //
	CreateDynamicObject(1264, 1556.4666748047, -1533.0367431641, 13.019131660461, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1264, 1557.2037353516, -1533.1694335938, 13.019131660461, 0.000000, 19.850006103516, 0.000000,0,-1,-1); //
	CreateDynamicObject(1264, 1557.0904541016, -1532.3865966797, 12.769131660461, 0.000000, 19.846801757813, 0.000000,0,-1,-1); //
	CreateDynamicObject(13591, 1561.6329345703, -1555.0107421875, 12.959146499634, 0.000000, 0.000000, 0.000000,0,-1,-1); //


	// city3
	CreateDynamicObject(4108, 3391.492432, -1216.417603, 10.438354, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(4892, 3418.121094, -1265.705811, 12.847887, 0.000000, 0.000000, 91.1002894258,0,-1,-1); //
	CreateDynamicObject(3307, 3414.646973, -1244.022461, 11.631484, 0.000000, 0.000000, -178.763003968,0,-1,-1); //
	CreateDynamicObject(615, 3424.807373, -1253.094604, 11.511489, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(647, 3405.299561, -1238.201782, 12.095119, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(682, 3415.796631, -1275.107178, 10.424088, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(17573, 3407.119385, -1222.792847, 12.133308, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3336, 3381.011475, -1168.228516, 10.221304, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(12983, 3420.353271, -1181.124146, 10.331022, 0.000000, 0.000000, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(1675, 3373.298340, -1239.306763, 13.447570, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(13132, 3375.402588, -1254.433472, 13.594113, 0.000000, 0.000000, -180.481762762,0,-1,-1); //
	CreateDynamicObject(1684, 3377.558105, -1267.717407, 11.734484, 0.000000, 0.000000, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(970, 3379.552246, -1274.251953, 10.896086, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(1211, 3401.361572, -1224.381836, 10.955411, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1216, 3402.133789, -1190.109863, 11.036607, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(1231, 3391.362061, -1194.819336, 13.074997, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1231, 3391.361572, -1261.032715, 13.071527, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1257, 3391.451660, -1227.030396, 11.623796, 0.000000, 0.000000, -180.481762762,0,-1,-1); //
	CreateDynamicObject(1258, 3392.167969, -1229.939697, 11.006326, 0.000000, 0.000000, 89.3814160404,0,-1,-1); //
	CreateDynamicObject(1294, 3381.521729, -1167.735229, 14.705713, 0.000000, 0.000000, 73.9115555719,0,-1,-1); //
	CreateDynamicObject(1346, 3382.374756, -1260.226563, 11.695610, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1478, 3402.052002, -1258.994141, 10.980779, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(1215, 3406.688965, -1181.299683, 11.098471, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1215, 3406.754395, -1189.972900, 11.096169, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(975, 3396.925781, -1156.749634, 11.908859, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(975, 3388.028564, -1156.703735, 11.916414, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(975, 3383.501465, -1156.742676, 11.940969, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(4148, 3319.413330, -1177.872314, 10.326540, 0.000000, -1.71887338539, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(8167, 3382.285400, -1275.845459, 11.269571, 0.000000, 0.000000, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(8167, 3389.700195, -1275.736328, 11.259880, 0.000000, 0.000000, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(8167, 3397.084961, -1275.664063, 11.256401, 0.000000, 0.000000, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(16781, 3270.406494, -1164.800903, 10.481220, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(972, 3256.473145, -1175.235474, 10.243730, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(10056, 3329.592529, -1144.035156, 25.024782, 0.000000, 0.000000, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(8131, 3312.968018, -1163.354736, 20.536942, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(10767, 3294.190674, -1213.741333, -4.231852, 0.000000, 0.000000, 134.931560753,0,-1,-1); //
	CreateDynamicObject(8155, 3351.926758, -1214.644531, 12.081676, 0.000000, 0.000000, -91.1002894258,0,-1,-1); //
	CreateDynamicObject(8149, 3299.817383, -1231.033203, 13.486362, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(8155, 3239.240479, -1211.161621, 12.306676, 0.000000, 0.000000, -270.722558199,0,-1,-1); //
	CreateDynamicObject(8210, 3240.036377, -1193.751221, 11.434799, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(8210, 3269.779297, -1193.540527, 11.334797, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(8168, 3301.011719, -1191.307251, 12.550060, 0.000000, 0.000000, -163.293028908,0,-1,-1); //
	CreateDynamicObject(966, 3304.872803, -1193.425781, 10.584085, 0.000000, 0.000000, -177.903395388,0,-1,-1); //
	CreateDynamicObject(968, 3311.811523, -1193.275391, 11.355752, 0.000000, -85.0842325769, -2.57831007809,0,-1,-1); //
	CreateDynamicObject(8210, 3339.135986, -1194.152466, 10.982130, 0.000000, 0.000000, -1.71887338539,0,-1,-1); //
	// submarine
	/*
	CreateDynamicObject(9958, 3137.547119, -1700.142456, 6.637642, 0.000000, 1.71887338539, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3133.865234, -1731.097290, 3.394757, 0.000000, 90.2408527331, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3130.369629, -1731.097534, 3.402311, 0.000000, 90.2408527331, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3133.840088, -1725.685059, 3.378903, 0.000000, 90.2408527331, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3130.177246, -1725.676880, 3.383360, 0.000000, 90.2408527331, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3133.005615, -1733.888062, 1.620137, 0.000000, 0.963256645174, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(9823, 3131.084473, -1733.937744, 1.652344, 0.000000, 0.963256645174, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(9958, 3126.310547, -1700.878906, 6.902039, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3135.124023, -1725.714722, 4.907219, 0.000000, 1.71887338539, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3135.139404, -1731.135864, 5.046227, 0.000000, 1.71887338539, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3128.375732, -1731.342529, 5.135150, 0.000000, 1.71887338539, 180.481820058,0,-1,-1); //
	CreateDynamicObject(9823, 3128.372559, -1725.808838, 4.918064, 0.000000, 1.71887338539, 179.622383365,0,-1,-1); //
	CreateDynamicObject(9823, 3132.773438, -1723.011475, 4.926931, 0.000000, 182.200693443, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3132.771484, -1722.914185, 3.973455, 0.000000, 0.963256645174, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3131.033203, -1725.008545, 6.834068, 0.000000, 89.3814733362, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3132.695313, -1724.988525, 6.827456, 0.000000, 89.3814733362, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3132.732910, -1728.579468, 6.858684, 0.000000, 89.3814733362, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3131.162354, -1733.853271, 5.056025, 0.000000, 1.71887338539, 270.722558199,0,-1,-1); //
	CreateDynamicObject(9823, 3131.042969, -1732.174927, 6.921035, 0.000000, 89.3814733362, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3132.774414, -1732.145142, 6.895279, 0.000000, 89.3814733362, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(927, 3128.530518, -1725.019165, 5.236899, 0.000000, 0.000000, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(958, 3133.689941, -1723.505859, 4.370689, 0.000000, 0.000000, 180.481762762,0,-1,-1); //
	CreateDynamicObject(16782, 3128.599609, -1727.042480, 5.279640, 0.000000, -1.71887338539, -1.71887338539,0,-1,-1); //
	CreateDynamicObject(3390, 3134.562500, -1729.730103, 3.474406, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3132.982422, -1721.562012, 3.328444, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3130.385742, -1721.587036, 3.319919, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3135.406006, -1722.472534, 4.985548, 0.000000, 0.963256645174, 0.859436692696,0,-1,-1); //
	CreateDynamicObject(9823, 3132.578857, -1719.632813, 3.959970, 0.000000, -0.755616740219, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(9823, 3129.879639, -1720.238525, 5.039379, 0.000000, -0.755616740219, -359.244308364,0,-1,-1); //
	CreateDynamicObject(9823, 3132.645752, -1721.323120, 6.850866, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3132.543213, -1717.523438, 5.177180, 0.000000, 0.103819952478, -449.484931914,0,-1,-1); //
	CreateDynamicObject(9823, 3132.581055, -1719.242554, 6.892124, 0.000000, 91.2041093783, -88.5219793477,0,-1,-1); //
	CreateDynamicObject(9823, 3128.930176, -1719.327026, 3.337573, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3132.992676, -1716.121338, 3.316848, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3129.242676, -1716.696899, 3.366848, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3130.983643, -1713.602295, 3.383955, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3133.533447, -1713.602295, 3.333956, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3135.298584, -1714.671387, 5.215299, 0.000000, 0.103819952478, -359.244308364,0,-1,-1); //
	CreateDynamicObject(9823, 3128.348389, -1714.576782, 5.119480, 0.000000, 0.103819952478, -539.72561276,0,-1,-1); //
	CreateDynamicObject(9823, 3132.503662, -1711.889038, 5.250404, 0.000000, 0.963256645174, -269.003684814,0,-1,-1); //
	CreateDynamicObject(9823, 3131.006592, -1711.895264, 5.274620, 0.000000, 0.963256645174, -269.003684814,0,-1,-1); //
	CreateDynamicObject(9823, 3131.007080, -1713.662354, 7.016951, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3131.060791, -1716.751953, 6.932937, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3132.524658, -1716.778564, 6.932776, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(9823, 3132.540771, -1713.659302, 7.013185, 0.000000, 91.2041093783, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(929, 3131.435059, -1712.460327, 4.406627, 0.000000, 0.000000, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(9823, 3135.351318, -1717.491943, 5.091776, 0.000000, 0.103819952478, -359.244308364,0,-1,-1); //
	CreateDynamicObject(3273, 3131.940918, -1710.959717, 1.576022, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(2653, 3131.926270, -1696.696289, 1.060752, 0.000000, 0.000000, -85.9436692696,0,-1,-1); //
	CreateDynamicObject(3631, 3131.992920, -1711.043091, 1.252128, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(8886, 3132.261719, -1705.078125, -0.471108, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(8886, 3132.294189, -1695.770752, -0.453680, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(8886, 3132.301514, -1686.505005, -0.461251, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(1319, 3127.539795, -1697.217285, 5.367828, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1319, 3126.980957, -1702.874146, 5.522538, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1319, 3136.224854, -1707.117554, 5.902269, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1319, 3136.320068, -1699.402588, 5.972448, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1381, 3131.752197, -1739.925903, 2.379735, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2653, 3131.296387, -1741.464600, 1.320170, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(2653, 3131.297119, -1738.243164, 1.309375, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(3258, 3131.911377, -1739.486206, 0.847859, 64.4577519522, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2653, 3132.017578, -1737.940552, 1.310582, 0.000000, 0.000000, -182.200636147,0,-1,-1); //
	CreateDynamicObject(3786, 3131.964355, -1766.548584, 13.623023, 0.000000, 30.0802842444, 85.9436692696,0,-1,-1); //
	CreateDynamicObject(1215, 3132.039795, -1766.265381, 13.556199, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1215, 3131.840088, -1754.637329, 9.546943, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1319, 3132.054443, -1739.692871, 1.709709, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1319, 3131.939453, -1767.117432, 14.946374, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3131.046631, -1728.597900, 6.885416, 0.000000, 89.3814733362, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(959, 3133.668213, -1723.400146, 4.355588, 0.000000, 0.000000, -176.184579299,0,-1,-1); //
	CreateDynamicObject(2649, 3136.986816, -1713.012329, 5.520746, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3384, 3134.280029, -1726.484741, 4.928932, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3384, 3134.227295, -1725.442017, 4.911182, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(9823, 3132.552490, -1733.880493, 5.139562, 0.000000, 1.71887338539, 270.722558199,0,-1,-1); //
	CreateDynamicObject(3787, 3131.619629, -1708.885376, 3.534773, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(915, 3126.355957, -1726.814697, 5.472849, 0.000000, 0.000000, 77.3493023427,0,-1,-1); //
	CreateDynamicObject(1687, 3132.476318, -1720.346313, 7.774983, 0.000000, 0.000000, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(1689, 3131.613281, -1712.860962, 8.303764, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2041, 3134.887451, -1715.829468, 3.636892, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1392, 3131.820313, -1680.594238, 2.812915, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1390, 3131.929199, -1680.518188, 1.808045, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(2775, 3128.416992, -1731.568726, 6.108447, -15.4698604685, 1.71887338539, -273.300868277,0,-1,-1); //
	CreateDynamicObject(1738, 3131.656006, -1723.139648, 4.141150, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3392, 3129.070313, -1730.363525, 3.513351, 0.000000, 0.000000, -179.622383365,0,-1,-1); //
	CreateDynamicObject(3391, 3130.204834, -1732.767212, 3.506288, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(3396, 3133.561035, -1732.825928, 3.503193, 0.000000, 0.000000, -91.9597261185,0,-1,-1); //
	CreateDynamicObject(3388, 3130.623779, -1723.572021, 3.492852, 0.000000, 0.000000, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(1671, 3133.042969, -1731.656006, 3.967804, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(1671, 3130.031494, -1730.348633, 3.949347, 0.000000, -4.29718346348, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(1671, 3133.461426, -1729.521973, 3.964993, 0.000000, -4.29718346348, 51.5662015618,0,-1,-1); //
	CreateDynamicObject(3274, 3130.424316, -1685.093750, 2.015429, 0.000000, 0.000000, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(1689, 3131.721436, -1732.770386, 8.242434, 0.000000, 0.000000, -180.481762762,0,-1,-1); //
	CreateDynamicObject(1691, 3130.997559, -1720.420166, 7.400939, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3675, 3135.186768, -1673.048462, 1.150002, 0.000000, 90.2408527331, 0.000000,0,-1,-1); //
	CreateDynamicObject(1465, 3121.510986, -1729.892456, 0.718386, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3797, 3124.208252, -1729.936401, 4.939959, 0.000000, 15.4698604685, 84.22485318,0,-1,-1); //
	CreateDynamicObject(3397, 3134.422119, -1715.373291, 3.474515, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3393, 3131.606689, -1716.858398, 3.473217, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(3384, 3129.063477, -1712.845459, 4.773356, 0.000000, 0.000000, 85.9436692696,0,-1,-1); //
	CreateDynamicObject(3267, 3131.859863, -1695.571167, 2.546411, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3526, 3131.750000, -1682.703613, 3.046814, 0.000000, 0.000000, 90.2408527331,0,-1,-1); //
	CreateDynamicObject(1523, 3128.324463, -1723.009888, 3.474871, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3389, 3131.376709, -1722.655762, 6.402623, 90.2408527331, 0.000000, -89.3814160404,0,-1,-1); //
	CreateDynamicObject(1523, 3128.256836, -1717.459473, 3.362599, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	CreateDynamicObject(3389, 3131.306641, -1717.607178, 6.379457, 90.2408527331, 0.000000, -85.9436692696,0,-1,-1); //
	CreateDynamicObject(2035, 3133.974609, -1714.437500, 4.563654, 0.000000, 0.000000, -90.2408527331,0,-1,-1); //
	CreateDynamicObject(1242, 3133.991943, -1713.815186, 4.598327, 0.000000, 0.000000, 0.000000,0,-1,-1); //
	*/

    // quarry
    CreateDynamicObject(1634, 796.315674, 839.002991, 7.875257, 0.0000, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(1634, 791.715515, 838.060913, 10.775533, 12.0321, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(1225, 783.963440, 835.080994, 5.241086, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 784.019531, 836.858521, 6.335558, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 784.229919, 838.226990, 7.457629, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 781.830566, 835.997192, 5.249953, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 782.126343, 837.361511, 6.297642, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 782.071899, 834.809814, 5.248485, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 780.561951, 834.923523, 5.255887, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 776.945984, 835.984375, 5.273803, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 778.738586, 837.178223, 5.265344, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 778.534729, 835.092346, 5.265830, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 780.028137, 834.326477, 5.258346, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 781.743103, 833.847229, 5.249854, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 779.941895, 840.495728, 5.260276, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 778.258362, 840.101685, 5.268403, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 780.432495, 839.455872, 5.257625, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 779.818726, 838.620605, 5.260419, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 776.825195, 839.171204, 5.275086, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 774.075562, 836.975708, 5.288785, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 773.667358, 833.160706, 5.289128, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 777.403015, 833.368286, 5.270934, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 778.957886, 832.997375, 5.263249, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 781.676514, 832.769958, 5.249917, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 783.363281, 833.173218, 5.241776, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 784.730652, 834.095581, 5.236962, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 784.000977, 839.754028, 5.240884, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 783.361694, 840.664795, 5.244317, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 782.355042, 841.214478, 5.249726, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 781.898010, 840.271729, 5.252181, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 780.129578, 837.090088, 5.258529, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 776.314453, 838.035461, 5.277278, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 774.064880, 837.105774, 5.288905, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 775.200317, 834.624451, 5.282001, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 773.099182, 835.993530, 5.293553, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 773.945251, 834.962585, 6.159101, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 773.680664, 834.499146, 6.458931, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 775.908691, 832.814453, 5.278096, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 775.651794, 831.648743, 5.279067, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 774.870361, 838.607300, 5.285314, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 774.847778, 839.795044, 6.342804, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 772.809814, 839.225037, 5.296683, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 773.230103, 837.244080, 6.385921, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 771.764709, 833.411133, 5.299459, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 771.619995, 832.752747, 5.299916, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 772.917175, 831.518250, 5.292394, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 776.519653, 836.554016, 5.276027, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 775.317871, 836.096191, 6.468391, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 776.000916, 840.078308, 5.279958, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 777.253052, 840.636902, 5.589079, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 778.140564, 831.084900, 5.266774, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 783.334839, 832.148621, 5.241666, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 784.371948, 832.456909, 5.238893, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 785.068420, 831.923828, 5.235150, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 781.311829, 831.090942, 5.251288, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 779.002136, 841.119568, 5.265019, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 776.240356, 829.791382, 5.275741, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 773.276794, 830.168945, 5.290305, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 771.466492, 829.670776, 5.299026, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 771.418274, 831.574768, 6.176823, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 771.614685, 839.770996, 5.303372, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(3279, 770.880310, 834.218506, 7.225209, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(3458, 749.364319, 829.810791, 22.274879, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(14596, 732.063110, 824.243042, 34.495804, 0.0000, 0.0000, 281.2500,0,-1,-1);
	CreateDynamicObject(11495, 732.515869, 840.036865, 41.000477, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1634, 729.649475, 853.078918, 36.950596, 287.8074, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1634, 728.484619, 858.870544, 31.889357, 300.6989, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1634, 727.291443, 864.849243, 28.680334, 312.7310, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1634, 725.821106, 872.076904, 26.948109, 329.9197, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1634, 724.400513, 878.712036, 28.431961, 6.8755, 0.0000, 12.9689,0,-1,-1);
	CreateDynamicObject(1634, 723.049011, 884.503662, 33.547813, 23.2048, 0.0000, 12.9689,0,-1,-1);
	CreateDynamicObject(1634, 722.340454, 887.596985, 38.719234, 43.8313, 0.0000, 12.9689,0,-1,-1);
	CreateDynamicObject(1225, 722.668701, 889.466309, 42.285759, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 723.668701, 889.716553, 42.285759, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 653.286682, 959.415222, -34.113243, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 703.480469, 956.403625, -19.163582, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 713.200073, 953.600037, -11.140616, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 721.589294, 889.353638, 42.297241, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 723.316101, 888.357971, 39.317085, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1225, 720.510559, 889.077698, 42.309944, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(1634, 722.501587, 887.010864, 50.353428, 86.8030, 0.0000, 12.9689,0,-1,-1);
	CreateDynamicObject(1634, 723.558289, 882.461548, 56.624340, 115.1644, 0.0000, 12.9689,0,-1,-1);
	CreateDynamicObject(11495, 726.869507, 864.945984, 52.184834, 325.6225, 359.1406, 11.2500,0,-1,-1);
	CreateDynamicObject(11495, 729.887634, 849.908386, 61.681770, 330.7792, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(13638, 723.570984, 846.574829, 68.738029, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(13638, 709.770630, 855.823425, 76.749390, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(13638, 695.577393, 865.212280, 84.985870, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(13645, 691.561096, 870.922974, 91.392792, 0.0000, 0.0000, 8.7490,0,-1,-1);
	CreateDynamicObject(5153, 690.119873, 877.757385, 93.061501, 0.0000, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(5153, 689.412537, 881.245972, 94.627304, 0.0000, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(16640, 681.810730, 890.013306, 98.370918, 0.0000, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(16640, 674.132507, 873.739380, 98.243111, 359.1406, 1.7189, 278.6717,0,-1,-1);
	CreateDynamicObject(969, 661.512573, 882.965332, 95.092232, 91.9597, 0.0000, 8.5944,0,-1,-1);
	CreateDynamicObject(1634, 657.993530, 880.490601, 95.975105, 0.0000, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(1634, 642.028870, 877.522522, 93.687408, 323.0442, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(1634, 633.726807, 875.869202, 94.025902, 350.5462, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(13590, 619.105896, 873.098328, 95.696983, 0.0000, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(18262, 617.264893, 868.219727, 96.188370, 20.6265, 0.0000, 3.5150,0,-1,-1);
	CreateDynamicObject(12909, 587.247742, 871.395752, 86.107460, 0.0000, 0.0000, 327.9689,0,-1,-1);
	CreateDynamicObject(18262, 602.142639, 865.821045, 96.852127, 13.7510, 0.0000, 0.9367,0,-1,-1);
	CreateDynamicObject(13638, 474.807007, 871.187988, 83.187057, 0.0000, 0.0000, 4.3745,0,-1,-1);
	CreateDynamicObject(13638, 477.083710, 885.926636, 90.926254, 0.0000, 0.0000, 274.3745,0,-1,-1);
	CreateDynamicObject(13638, 477.438263, 880.216736, 98.869209, 0.0000, 0.0000, 92.6557,0,-1,-1);
	CreateDynamicObject(1634, 452.426056, 866.895386, 105.069946, 0.0000, 0.0000, 179.2179,0,-1,-1);
	CreateDynamicObject(1634, 452.393585, 861.595825, 109.011909, 19.7670, 0.0000, 179.2179,0,-1,-1);
	CreateDynamicObject(11495, 725.656555, 870.892944, 49.429790, 331.6386, 359.1406, 11.2500,0,-1,-1);
	CreateDynamicObject(1260, 528.025879, 869.506653, 84.816010, 0.0000, 0.0000, 275.2340,0,-1,-1);
	CreateDynamicObject(18367, 517.233154, 868.696716, 86.953209, 12.8916, 0.0000, 275.1566,0,-1,-1);
	CreateDynamicObject(17060, 463.939758, 868.973083, 103.543770, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(17060, 449.819397, 878.179260, 103.494934, 0.0000, 0.0000, 180.0000,0,-1,-1);
	CreateDynamicObject(4550, 450.853333, 819.446838, 169.361526, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3399, 449.856659, 847.585693, 110.781242, 0.0000, 0.0000, 186.9528,0,-1,-1);
	CreateDynamicObject(4882, 431.067627, 863.907898, 117.697083, 0.0000, 0.0000, 277.8122,0,-1,-1);
	CreateDynamicObject(8580, 407.787048, 871.851990, 113.976677, 357.4217, 2.5783, 7.8122,0,-1,-1);
	CreateDynamicObject(12985, 379.153870, 894.138672, 23.234034, 0.0000, 0.0000, 33.7500,0,-1,-1);
	CreateDynamicObject(12985, 396.749390, 859.065552, 117.871803, 0.0000, 0.0000, 9.4538,0,-1,-1);
	CreateDynamicObject(12985, 397.880035, 852.350830, 123.862221, 0.0000, 0.0000, 10.3132,0,-1,-1);
	CreateDynamicObject(3279, 394.965118, 846.788574, 126.236275, 0.0000, 0.0000, 97.9757,0,-1,-1);
	CreateDynamicObject(18367, 395.230530, 844.843018, 142.071701, 353.1245, 0.0000, 61.0199,0,-1,-1);
	CreateDynamicObject(4199, 417.892395, 816.856384, 147.059418, 357.4217, 357.4217, 0.0000,0,-1,-1);
	CreateDynamicObject(1634, 419.963898, 803.394409, 150.605042, 0.0000, 0.0000, 225.0000,0,-1,-1);
	CreateDynamicObject(4199, 442.447479, 792.774841, 153.620117, 357.4217, 357.4217, 81.2510,0,-1,-1);
	CreateDynamicObject(1634, 455.658966, 789.256531, 157.040665, 0.0000, 0.8594, 285.5472,0,-1,-1);
	CreateDynamicObject(4199, 475.703003, 797.683533, 159.378281, 357.4217, 357.4217, 127.8926,0,-1,-1);
	CreateDynamicObject(5152, 484.520874, 810.229675, 162.881836, 0.0000, 0.0000, 78.7500,0,-1,-1);
	CreateDynamicObject(5152, 485.200623, 813.679321, 164.430237, 0.0000, 0.0000, 78.7500,0,-1,-1);
	CreateDynamicObject(5152, 485.531342, 817.075317, 165.990570, 0.0000, 358.2811, 89.0632,0,-1,-1);
	CreateDynamicObject(5152, 485.611267, 820.642395, 167.700806, 0.8594, 358.2811, 89.0632,0,-1,-1);
	CreateDynamicObject(5152, 485.712280, 824.373657, 169.477341, 0.8594, 358.2811, 89.0632,0,-1,-1);
	CreateDynamicObject(5152, 485.347626, 827.512085, 170.964493, 0.8594, 358.2811, 112.2680,0,-1,-1);
	CreateDynamicObject(5152, 483.937988, 831.000732, 172.790222, 0.8594, 358.2811, 112.2680,0,-1,-1);
	CreateDynamicObject(18451, 481.444366, 835.138306, 175.383499, 20.6265, 0.0000, 33.7500,0,-1,-1);
	CreateDynamicObject(18367, 481.779663, 835.949463, 175.736526, 0.0000, 0.0000, 236.2501,0,-1,-1);
	CreateDynamicObject(18367, 458.080841, 851.862976, 178.913101, 0.0000, 0.0000, 270.0001,0,-1,-1);
	CreateDynamicObject(18367, 428.021027, 852.533203, 182.402588, 0.0000, 0.0000, 326.2500,0,-1,-1);
	CreateDynamicObject(18367, 411.308044, 828.180786, 185.681793, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(18367, 416.651672, 800.082336, 189.032974, 0.0000, 0.0000, 56.2500,0,-1,-1);
	CreateDynamicObject(18367, 440.961456, 783.678284, 192.381470, 0.0000, 0.0000, 101.2500,0,-1,-1);
	CreateDynamicObject(18367, 469.556641, 789.669617, 195.765930, 0.0000, 0.0000, 135.0000,0,-1,-1);
	CreateDynamicObject(18367, 491.217163, 810.745056, 199.075348, 0.0000, 0.0000, 157.5000,0,-1,-1);
	CreateDynamicObject(18367, 501.484436, 837.517700, 202.441727, 351.4056, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(18367, 485.668457, 862.087097, 210.397247, 351.4056, 0.0000, 258.7500,0,-1,-1);
	CreateDynamicObject(18367, 457.867981, 867.287048, 218.143753, 351.4056, 0.0000, 294.3737,0,-1,-1);
	CreateDynamicObject(18367, 432.122925, 856.661682, 225.337006, 333.3575, 0.0000, 334.9992,0,-1,-1);
	CreateDynamicObject(14553, 443.081665, 718.431885, 214.160065, 0.0000, 46.4096, 56.2500,0,-1,-1);
	CreateDynamicObject(18367, 426.028625, 803.634216, 241.533615, 333.3575, 0.0000, 19.9991,0,-1,-1);
	CreateDynamicObject(18367, 434.850708, 780.889954, 257.253754, 333.3575, 0.0000, 64.9991,0,-1,-1);
	CreateDynamicObject(18367, 456.346985, 770.480713, 272.459564, 333.3575, 0.0000, 121.2491,0,-1,-1);
	CreateDynamicObject(18367, 477.666443, 783.478760, 288.816711, 18.0482, 0.0000, 199.9991,0,-1,-1);
	CreateDynamicObject(1634, 430.005219, 804.061096, 286.075256, 0.0000, 0.0000, 56.2500,0,-1,-1);
	CreateDynamicObject(1634, 425.895691, 806.817322, 289.931244, 23.2048, 0.0000, 56.2500,0,-1,-1);
	CreateDynamicObject(1634, 423.156281, 808.941895, 296.033844, 43.8313, 0.0000, 48.5151,0,-1,-1);
	CreateDynamicObject(1634, 422.562256, 809.613281, 301.415344, 70.4738, 12.0321, 45.0773,0,-1,-1);
	CreateDynamicObject(1634, 433.228333, 807.479065, 303.675354, 40.3935, 12.0321, 236.3273,0,-1,-1);
	CreateDynamicObject(1634, 432.453522, 807.367004, 309.983429, 84.2247, 12.0321, 236.3273,0,-1,-1);
	CreateDynamicObject(18367, 429.631592, 830.669128, 299.576874, 333.3575, 0.0000, 177.4991,0,-1,-1);
	CreateDynamicObject(18367, 429.245789, 855.542908, 314.034088, 339.3735, 0.0000, 87.4991,0,-1,-1);
	CreateDynamicObject(18367, 455.414093, 858.381592, 325.868011, 342.8113, 357.4217, 3.6699,0,-1,-1);
	CreateDynamicObject(1634, 464.623840, 833.779114, 335.372803, 0.0000, 0.0000, 236.2499,0,-1,-1);
	CreateDynamicObject(1634, 467.844147, 830.630676, 338.617920, 17.1887, 6.0161, 224.2178,0,-1,-1);
	CreateDynamicObject(1634, 470.250153, 827.501343, 342.862244, 27.5020, 10.3132, 221.6395,0,-1,-1);
	CreateDynamicObject(3625, 473.857635, 815.754272, 349.171783, 0.0000, 1.7189, 307.1877,0,-1,-1);
	CreateDynamicObject(18367, 478.869202, 809.966919, 348.290161, 342.8113, 357.4217, 350.7783,0,-1,-1);
	CreateDynamicObject(18367, 474.659210, 783.675598, 359.561951, 342.8113, 357.4217, 305.7783,0,-1,-1);
	CreateDynamicObject(18367, 452.402100, 767.751404, 371.160492, 342.8113, 357.4217, 260.7783,0,-1,-1);
	CreateDynamicObject(18367, 425.472809, 771.993774, 383.322113, 9.4538, 357.4217, 215.7783,0,-1,-1);
	CreateDynamicObject(18367, 409.107849, 795.187927, 381.916901, 6.8755, 357.4217, 134.3727,0,-1,-1);
	CreateDynamicObject(4726, 451.353363, 818.844482, 380.758606, 0.0000, 357.4217, 358.2811,0,-1,-1);
	CreateDynamicObject(4727, 451.079254, 818.777039, 381.312653, 0.0000, 0.0000, 359.1406,0,-1,-1);
	CreateDynamicObject(969, 433.701477, 815.224060, 381.785889, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(969, 430.358856, 817.796997, 381.657806, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(969, 439.070862, 817.933105, 381.608490, 0.0000, 0.0000, 90.0000,0,-1,-1);
	CreateDynamicObject(969, 439.140778, 826.433777, 381.695007, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(969, 447.837250, 826.419312, 381.672516, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(969, 456.207977, 826.143372, 381.743744, 0.0000, 0.0000, 270.0000,0,-1,-1);
	CreateDynamicObject(969, 456.256531, 817.546265, 381.704437, 0.0000, 0.0000, 270.0000,0,-1,-1);
	CreateDynamicObject(969, 456.826904, 813.048645, 381.615692, 0.0000, 0.0000, 180.0000,0,-1,-1);
	CreateDynamicObject(969, 447.877716, 813.113037, 381.654633, 0.0000, 0.0000, 165.2350,0,-1,-1);
	CreateDynamicObject(3462, 451.135254, 819.004456, 383.600159, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3462, 452.179291, 816.143799, 383.646179, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3462, 452.201477, 822.144409, 383.656128, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3462, 451.581116, 817.518860, 383.619720, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3462, 451.579376, 820.629456, 383.620758, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3462, 466.230316, 819.425415, 384.263123, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3462, 471.684601, 815.701782, 385.082825, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3462, 470.417328, 823.558594, 384.941284, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3462, 562.557007, 822.692688, 387.485809, 0.0000, 0.0000, 0.0000,0,-1,-1);
	
	// SALOUN2 CONVERTED FROM .RXO
	
	CreateDynamicObject(8493,725.3915400,-1528.5053710,18.2869620,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(3749,707.5708610,-1428.4163810,18.3490580,0.0000000,0.0000000,356.9046630); //
    CreateDynamicObject(19840,707.1847530,-1428.4023430,17.2790580,0.0000000,0.0000000,179.0180810); //
    CreateDynamicObject(3578,742.5338740,-1437.6102290,11.7790650,0.0000000,0.0000000,94.8406520); //
    CreateDynamicObject(3578,738.3068230,-1437.8803710,11.7790650,0.0000000,0.0000000,93.3406520); //
    CreateDynamicObject(3578,733.5226440,-1438.1578360,11.7790650,0.0000000,0.0000000,93.3406520); //
    CreateDynamicObject(3578,728.5284420,-1438.4383540,11.7790650,0.0000000,0.0000000,93.3406520); //
    CreateDynamicObject(3578,723.8253780,-1438.7321770,11.7790650,0.0000000,0.0000000,93.3406520); //
    CreateDynamicObject(3578,718.4979240,-1438.9591060,11.7790650,0.0000000,0.0000000,93.3406520); //
    CreateDynamicObject(19606,739.0728750,-1429.2374260,13.0634390,0.0000000,0.0000000,16.6309770); //
    CreateDynamicObject(19959,702.5023190,-1410.9383540,12.3263540,0.0000000,0.0000000,265.5090330); //
    CreateDynamicObject(19870,701.9882200,-1446.1343990,13.5318200,0.0000000,0.0000000,173.5442040); //
    CreateDynamicObject(1491,695.6953120,-1445.6424560,12.4090520,0.0000000,0.0000000,-0.5999990); //
    CreateDynamicObject(19870,698.9290160,-1446.2947990,17.0911210,0.0000000,90.1999890,176.8341670); //
    CreateDynamicObject(19870,693.3162840,-1472.8693840,5.4687500,0.0000000,0.0000000,3.0892050); //
    CreateDynamicObject(19870,695.3968500,-1472.8023680,8.5151680,0.0000000,0.0000000,4.7426600); //
    CreateDynamicObject(1491,698.0659170,-1472.4517820,4.4787440,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(19870,692.0540160,-1472.1510000,8.3787490,0.0000000,0.0000000,358.3660270); //
    CreateDynamicObject(19870,742.5025020,-1475.6993400,5.4687500,0.0000000,0.0000000,353.4319450); //
    CreateDynamicObject(19870,742.5185540,-1475.5866690,8.9587450,0.0000000,0.0000000,353.4319450); //
    CreateDynamicObject(19870,746.4982910,-1476.3458250,5.4687500,0.0000000,0.0000000,353.4319450); //
    CreateDynamicObject(19870,747.2332760,-1476.1959220,8.9587450,0.0000000,0.0000000,353.4319450); //
    CreateDynamicObject(19870,750.4042960,-1476.5759270,8.9587450,0.0000000,0.0000000,353.4319450); //
    CreateDynamicObject(19870,747.6053460,-1445.8586420,13.5390580,0.0000000,0.0000000,182.9770960); //
    CreateDynamicObject(19870,747.6019890,-1445.8209220,16.9790490,0.0000000,0.0000000,182.9770960); //
    CreateDynamicObject(19869,730.3384390,-1486.2580560,0.9243440,0.0000000,0.0000000,-1.0346360); //
    CreateDynamicObject(19869,715.2602530,-1486.0483390,0.9243440,0.0000000,0.0000000,-1.0346360); //
    CreateDynamicObject(1491,723.0883780,-1486.0462640,0.9387500,0.0000000,0.0000000,-2.1999990); //
    CreateDynamicObject(19869,720.4600210,-1486.1225580,0.9243440,0.0000000,0.0000000,-1.0346360); //
    CreateDynamicObject(19869,728.7664180,-1486.3419180,0.9243440,0.0000000,0.0000000,-1.0346360); //
    CreateDynamicObject(1491,726.1385490,-1486.2120360,0.9243440,0.0000000,0.0000000,172.5000450); //
    CreateDynamicObject(19379,712.9044790,-1476.4418940,4.4549040,-0.4999980,90.5000150,89.0880580); //
    CreateDynamicObject(19379,722.5025630,-1476.5799560,4.5299500,-0.4999980,90.5000150,89.0880580); //
    CreateDynamicObject(19379,731.9315790,-1476.7137450,4.6035100,-0.4999980,90.5000150,89.0880580); //
    CreateDynamicObject(19379,741.5211180,-1476.8497310,4.6784690,-0.4999980,90.5000150,89.0880580); //
    CreateDynamicObject(19379,742.9695430,-1480.7061760,4.7365150,-0.4999980,90.5000150,89.0880580); //
    CreateDynamicObject(19379,703.2443230,-1480.7275390,4.3927670,-0.4999980,90.5000150,89.0880580); //
    CreateDynamicObject(19379,703.9485470,-1476.6813960,4.4043660,-0.4999980,90.5000150,89.0880580); //
    CreateDynamicObject(19379,703.8471060,-1476.6751700,4.4248560,-0.4999980,90.5000150,89.0880580); //
    CreateDynamicObject(3437,765.4657590,-1417.3175040,13.5447430,0.0000000,0.0000000,139.3154600); //
    CreateDynamicObject(3437,773.5032950,-1417.1752920,13.5447430,0.0000000,0.0000000,-122.7844690); //
    CreateDynamicObject(968,772.6978750,-1417.4963370,13.5586610,-0.2000030,89.3000410,-173.3987120); //
    
    // Maluda Disco converted from RXDM Object Set v4 System
    
    CreateDynamicObject(19452,-2546.1748040,619.1556390,18.2892130,0.0000000,0.0000000,89.8166730); //
    CreateDynamicObject(19452,-2546.0036620,663.5170280,15.3031030,0.0000000,0.0000000,89.7834470); //
    CreateDynamicObject(19452,-2555.6303710,663.5386350,18.2892150,0.0000000,0.0000000,89.9899740); //
    CreateDynamicObject(19406,-2552.5971670,619.1761470,15.1831150,0.0000000,0.0000000,-90.1062460); //
    CreateDynamicObject(19452,-2545.9997550,663.5076900,18.8031270,0.0000000,0.0000000,89.9802550); //
    CreateDynamicObject(19376,-2577.5217280,619.1442870,14.7791700,0.0000000,0.0000000,90.0074920); //
    CreateDynamicObject(19376,-2559.0112300,619.1649160,14.7592020,0.0000000,0.0000000,89.9540630); //
    CreateDynamicObject(19406,-2583.9328610,619.1246330,15.1831280,0.0000000,0.0000000,90.2608640); //
    CreateDynamicObject(19376,-2590.3601070,619.0903930,14.8031320,0.0000000,0.0000000,90.4145500); //
    CreateDynamicObject(19452,-2580.7395010,619.1376340,18.2731300,0.0000000,0.0000000,90.0811380); //
    CreateDynamicObject(19376,-2568.4033200,619.1593620,21.8852230,0.0000000,0.0000000,90.1716530); //
    CreateDynamicObject(19129,-2551.3876950,629.1256100,19.8026920,-0.0999990,179.9996030,-89.7400280); //
    CreateDynamicObject(19129,-2551.4570310,653.9473870,19.7897430,-179.9999690,-0.2000000,-89.8070750); //
    CreateDynamicObject(19129,-2571.3132320,629.1024780,19.8097090,179.8004450,0.0000000,0.0704310); //
    CreateDynamicObject(19129,-2571.3034660,653.8805540,19.7772990,179.8003690,0.0000000,0.3905560); //
    CreateDynamicObject(19129,-2591.2553710,653.8410640,19.7662350,179.7994990,0.0000000,359.9208670); //
    CreateDynamicObject(19129,-2591.2585440,629.0640860,19.8133580,179.8002920,0.0000000,0.1308310); //
    CreateDynamicObject(19379,-2567.6708980,624.1219480,13.4337530,0.1000000,90.0000300,-0.4211130); //
    CreateDynamicObject(19379,-2567.6335440,633.7633660,13.4398000,0.1999990,90.3000250,-0.4944700); //
    CreateDynamicObject(19379,-2567.5695800,643.3856200,13.4557330,0.0000000,90.2999870,-0.3878650); //
    CreateDynamicObject(19379,-2546.4086910,662.5587150,13.4647100,0.0000000,90.4000390,-0.5111470); //
    CreateDynamicObject(19379,-2578.1291500,624.1656490,13.4544630,0.0000000,90.1000130,-0.2407490); //
    CreateDynamicObject(19379,-2578.1147460,633.8103630,13.4548950,-0.0999960,-90.1999960,-0.2818090); //
    CreateDynamicObject(19379,-2557.0893550,643.3394160,13.4779940,0.0999990,89.9999770,-0.5070120); //
    CreateDynamicObject(19379,-2556.9699700,652.9713130,13.4904680,0.0000000,-90.1999580,-0.5808200); //
    CreateDynamicObject(19452,-2546.1748040,619.1556390,18.2892130,0.0000000,0.0000000,89.8166730); //
    CreateDynamicObject(19452,-2555.6306150,663.5446770,14.8431260,0.0000000,0.0000000,89.9834440); //
    CreateDynamicObject(19452,-2565.2609860,663.5397940,18.2892150,0.0000000,0.0000000,89.9899740); //
    CreateDynamicObject(19406,-2552.5971670,619.1761470,15.1831150,0.0000000,0.0000000,-90.1062460); //
    CreateDynamicObject(19452,-2565.2600090,663.5328360,15.1731300,0.0000000,0.0000000,89.9802550); //
    CreateDynamicObject(19376,-2574.8823240,663.5344840,14.7791700,0.0000000,0.0000000,90.0074920); //
    CreateDynamicObject(19376,-2584.4821770,663.5455930,14.7592020,0.0000000,0.0000000,89.9540630); //
    CreateDynamicObject(19406,-2583.9328610,619.1246330,15.1831280,0.0000000,0.0000000,90.2608640); //
    CreateDynamicObject(19376,-2590.5703120,663.5294180,14.8031320,0.0000000,0.0000000,90.0145560); //
    CreateDynamicObject(19452,-2595.2290030,623.9548330,18.2731300,0.0000000,0.0000000,-0.0188560); //
    CreateDynamicObject(19376,-2568.4033200,619.1593620,21.8852230,0.0000000,0.0000000,90.1716530); //
    CreateDynamicObject(19129,-2551.3876950,629.1256100,19.8026920,-0.0999990,179.9996030,-89.7400280); //
    CreateDynamicObject(19129,-2551.4428710,649.0458980,19.8426150,-179.9999690,-0.2000000,-89.8070750); //
    CreateDynamicObject(19129,-2571.3132320,629.1024780,19.8097090,179.8004450,0.0000000,0.0704310); //
    CreateDynamicObject(19129,-2571.3034660,648.9688110,19.7943850,179.8003690,0.0000000,-0.0094410); //
    CreateDynamicObject(19129,-2591.2583000,648.9989620,19.7831340,179.7994990,0.0000000,359.9208670); //
    CreateDynamicObject(19129,-2591.2585440,629.0640860,19.8133580,179.8002920,0.0000000,0.1308310); //
    CreateDynamicObject(19379,-2546.7116690,624.0243530,13.4338670,0.1000000,90.0000300,-0.4211130); //
    CreateDynamicObject(19379,-2588.4230950,653.1228630,13.4964590,0.1999990,89.8000330,-0.2944700); //
    CreateDynamicObject(19379,-2556.9106440,662.6039420,13.5009250,0.0000000,90.2999870,179.4119870); //
    CreateDynamicObject(19379,-2577.9414060,653.0797720,13.5143860,0.0000000,90.4000390,-0.5111470); //
    CreateDynamicObject(19379,-2567.3979490,662.6294550,13.4761590,0.0000000,90.1000130,-0.6407480); //
    CreateDynamicObject(19379,-2577.9355460,658.8623040,13.4512430,-0.0999960,-90.1999960,-0.7818080); //
    CreateDynamicObject(19452,-2546.1748040,619.1556390,18.2892130,0.0000000,0.0000000,89.8166730); //
    CreateDynamicObject(19452,-2595.2285150,623.9552610,14.8431260,0.0000000,0.0000000,-0.0165420); //
    CreateDynamicObject(19452,-2541.2998040,624.0393670,18.2292130,0.0000000,0.0000000,-0.0100220); //
    CreateDynamicObject(19406,-2552.5971670,619.1761470,15.1831150,0.0000000,0.0000000,-90.1062460); //
    CreateDynamicObject(19452,-2541.3054190,624.0352780,15.1731300,0.0000000,0.0000000,179.9804530); //
    CreateDynamicObject(19376,-2595.2358390,633.5625000,14.9091680,0.0000000,0.0000000,-179.9919890); //
    CreateDynamicObject(19376,-2541.3259270,633.6561270,14.7592020,0.0000000,0.0000000,0.0540920); //
    CreateDynamicObject(19406,-2583.9328610,619.1246330,15.1831280,0.0000000,0.0000000,90.2608640); //
    CreateDynamicObject(19376,-2595.2319330,643.1799310,14.8031320,0.0000000,0.0000000,-179.9852290); //
    CreateDynamicObject(19452,-2595.2270500,652.7843010,18.1931280,0.0000000,0.0000000,-179.9182280); //
    CreateDynamicObject(19376,-2568.4033200,619.1593620,21.8852230,0.0000000,0.0000000,90.1716530); //
    CreateDynamicObject(19129,-2551.3876950,629.1256100,19.8026920,-0.0999990,179.9996030,-89.7400280); //
    CreateDynamicObject(19129,-2551.4428710,649.0458980,19.8426150,-179.9999690,-0.2000000,-89.8070750); //
    CreateDynamicObject(19129,-2571.3132320,629.1024780,19.8097090,179.8004450,0.0000000,0.0704310); //
    CreateDynamicObject(19129,-2571.3034660,648.9688110,19.7943850,179.8003690,0.0000000,-0.0094410); //
    CreateDynamicObject(19129,-2591.2583000,648.9989620,19.7831340,179.7994990,0.0000000,359.9208670); //
    CreateDynamicObject(19129,-2591.2585440,629.0640860,19.8133580,179.8002920,0.0000000,0.1308310); //
    CreateDynamicObject(19379,-2588.6057120,624.0825190,13.4334470,0.1000000,90.0000300,0.0788860); //
    CreateDynamicObject(19379,-2588.5576170,633.7332150,13.4786090,0.1999990,90.3000250,-0.0944700); //
    CreateDynamicObject(19379,-2578.0727530,643.4470820,13.4907910,0.0999960,90.2999870,-0.3878650); //
    CreateDynamicObject(19379,-2567.4655760,652.9940180,13.4811800,0.0000000,90.4000390,-0.5111470); //
    CreateDynamicObject(19379,-2590.2397460,624.2066040,13.4555860,0.0000000,90.1000130,-0.2407490); //
    CreateDynamicObject(19379,-2595.8906250,633.9054560,13.5126840,-0.0999960,-89.6000060,-0.2818090); //
    CreateDynamicObject(19379,-2588.5234370,643.3385000,13.4627180,0.0000000,-89.9000240,-0.1530800); //
    CreateDynamicObject(19452,-2595.2285150,652.7876580,14.9492130,0.0000000,0.0000000,179.9167780); //
    CreateDynamicObject(19452,-2546.1730950,619.1380610,14.8431260,0.0000000,0.0000000,89.7834470); //
    CreateDynamicObject(19452,-2555.7949210,619.1688230,18.2892150,0.0000000,0.0000000,89.9899740); //
    CreateDynamicObject(19406,-2552.5971670,619.1761470,15.1831160,0.0000000,0.0000000,-90.1062460); //
    CreateDynamicObject(19452,-2541.3364250,643.2742300,15.1731300,0.0000000,0.0000000,0.1802630); //
    CreateDynamicObject(19376,-2541.3239740,658.6149900,14.7791710,0.0000000,0.0000000,0.0074990); //
    CreateDynamicObject(19376,-2595.1904290,659.3839720,14.7592020,0.0000000,0.0000000,179.9542080); //
    CreateDynamicObject(19406,-2583.9328610,619.1246330,15.1831280,0.0000000,0.0000000,90.2608640); //
    CreateDynamicObject(19376,-2541.3779290,648.9519650,14.8031320,0.0000000,0.0000000,-179.5856320); //
    CreateDynamicObject(19452,-2541.3061520,643.2683710,18.2831300,0.0000000,0.0000000,-0.0188580); //
    CreateDynamicObject(19376,-2568.4033200,619.1593620,21.8852230,0.0000000,0.0000000,90.1716530); //
    CreateDynamicObject(19129,-2551.3876950,629.1256100,19.8026920,-0.0999990,179.9996030,-89.7400280); //
    CreateDynamicObject(19129,-2551.4428710,649.0458980,19.8426150,-179.9999690,-0.2000000,-89.8070750); //
    CreateDynamicObject(19129,-2571.3132320,629.1024780,19.8097090,179.8004450,0.0000000,0.0704310); //
    CreateDynamicObject(19129,-2571.3034660,648.9688110,19.7943850,179.8003690,0.0000000,-0.0094410); //
    CreateDynamicObject(19129,-2591.2583000,648.9989620,19.7831340,179.7994990,0.0000000,359.9208670); //
    CreateDynamicObject(19129,-2591.2585440,629.0640860,19.8133580,179.8002920,0.0000000,0.1308310); //
    CreateDynamicObject(19379,-2590.2678220,643.4842520,13.4772930,0.1000000,90.0000300,-0.4211130); //
    CreateDynamicObject(19379,-2546.6342770,633.6408690,13.4600410,0.1999990,90.3000250,-0.4944700); //
    CreateDynamicObject(19379,-2546.5898430,643.3034050,13.4658920,0.0000000,90.2999870,-0.3878650); //
    CreateDynamicObject(19379,-2546.4885250,652.9273070,13.4647100,0.0000000,90.4000390,-0.5111470); //
    CreateDynamicObject(19379,-2557.1857910,624.0971060,13.4679120,0.0000000,90.1000130,-0.2407490); //
    CreateDynamicObject(19379,-2557.1357420,633.7037960,13.4479890,-0.0999960,-90.1999960,-0.2818090); //
    CreateDynamicObject(19379,-2588.3803710,661.1105340,13.4403360,-0.6000000,-90.0999830,0.1314750); //
    CreateDynamicObject(19379,-2598.2644040,658.5396720,13.3944490,-0.4999980,89.3999780,1.2356220); //
    CreateDynamicObject(16151,-2542.5209960,626.6687620,13.9041000,0.0000000,0.0000000,-0.4097540); //
    CreateDynamicObject(3441,-2563.0183100,618.4732050,15.4491880,0.0000000,0.0000000,359.8031610); //
    CreateDynamicObject(3441,-2573.5258780,618.3004150,15.3791940,0.0000000,0.0000000,1.0559170); //
    CreateDynamicObject(3438,-2568.1652830,618.2091670,14.4591960,0.0000000,0.0000000,-89.0121760); //
    CreateDynamicObject(1491,-2572.7131340,619.1416620,13.4461910,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1491,-2569.7714840,619.1162100,13.4418880,0.0000000,0.0000000,178.8000790); //
    CreateDynamicObject(19433,-2568.9680170,619.1607050,15.1591710,0.0000000,-0.1999990,-89.8492350); //
    CreateDynamicObject(1491,-2566.6965330,619.1594230,13.4191730,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1491,-2563.7687980,619.1762690,13.4291840,0.0000000,0.0000000,-179.0000150); //
    CreateDynamicObject(19433,-2567.4685050,619.1861570,15.1091930,0.0000000,0.0000000,-88.9387810); //
    CreateDynamicObject(1649,-2552.6604000,619.1011350,16.0692020,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,-2551.9101560,619.1464840,14.4531250,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,-2552.3146970,619.2359000,15.0758200,0.0000000,0.0000000,179.8000480); //
    CreateDynamicObject(1649,-2583.7087400,619.0767210,14.4531250,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,-2583.4829100,619.0651240,14.4531250,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,-2583.5422360,619.2122800,14.5156870,0.0000000,0.0000000,-179.6999510); //
    CreateDynamicObject(1649,-2571.3496090,619.2474970,17.5631120,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,-2571.2724600,619.2076410,17.5381100,0.0000000,0.0000000,-179.1999660); //
    CreateDynamicObject(1649,-2565.2238760,619.1190180,17.5291970,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(1649,-2565.1481930,619.2398680,17.5073390,0.0000000,0.0000000,179.8001860); //
    CreateDynamicObject(3505,-2558.1281730,579.5598140,13.4791910,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(3505,-2575.1093750,579.7912590,13.4676610,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(2785,-2594.6054680,651.1143180,14.3145420,0.0000000,0.0000000,90.9014730); //
    CreateDynamicObject(1978,-2570.5905760,647.2856440,14.5556430,0.0000000,0.0000000,-90.7326040); //
    CreateDynamicObject(1978,-2563.7385250,647.1831050,14.5636860,0.0000000,0.0000000,-90.5659790); //
    CreateDynamicObject(14657,-2586.0930170,630.2752070,14.1487780,0.0000000,0.0000000,358.9206230); //
    CreateDynamicObject(1824,-2563.2500000,636.9194940,14.0083550,0.0000000,0.0000000,-88.3126440); //
    CreateDynamicObject(1824,-2566.2729490,636.8137810,13.9858160,0.6999980,0.0000000,91.3735350); //
    CreateDynamicObject(1824,-2569.5048820,636.8487540,13.9790910,0.0000000,0.0000000,-89.3370660); //
    CreateDynamicObject(1775,-2554.2819820,662.9641720,14.6925030,0.0000000,0.0000000,-0.7350640); //
    CreateDynamicObject(1776,-2556.3986810,662.9851680,14.6908740,0.0000000,0.0000000,2.0647780); //
    CreateDynamicObject(14537,-2549.5717770,643.5689690,15.5343150,0.0000000,0.0000000,0.0000000); //
    CreateDynamicObject(19063,-2566.3190910,639.0729370,19.2292190,0.0000000,0.0000000,1.2961850); //
    CreateDynamicObject(11686,-2566.5427240,661.3419790,13.5624340,0.0000000,0.0000000,0.6461920); //
    CreateDynamicObject(11687,-2564.6962890,660.4677120,13.6014860,0.0000000,0.0000000,4.4062430); //
    CreateDynamicObject(11687,-2565.6408690,660.4492180,13.6096780,0.0000000,0.0000000,91.2729870); //
    CreateDynamicObject(11687,-2566.6223140,660.4337150,13.5917750,0.0000000,0.0000000,91.0320510); //
    CreateDynamicObject(11687,-2567.5793450,660.4467160,13.5680050,0.0000000,0.0000000,91.0320510); //
    CreateDynamicObject(11687,-2568.4819330,660.4303580,13.6074900,0.0000000,0.0000000,91.0320510); //
    CreateDynamicObject(19608,-2583.4914550,660.9600830,13.5226030,0.0000000,0.0000000,-0.0705200); //
    CreateDynamicObject(19609,-2589.6054680,658.0423580,13.5807690,0.0000000,0.0000000,37.0398020); //
    CreateDynamicObject(2785,-2548.3542480,619.6859740,14.3377050,0.0000000,0.0000000,-179.4327080); //
    CreateDynamicObject(14809,-2584.9169920,650.5342400,15.0323990,0.0000000,0.0000000,-89.5315930); //
    CreateDynamicObject(14809,-2581.7607420,644.1403800,14.9907500,0.0000000,0.0000000,89.5217200); //
    CreateDynamicObject(3498,-2587.8789060,653.2108760,17.1167860,0.0000000,0.0000000,88.8450920); //
    CreateDynamicObject(3498,-2578.4438470,641.7007440,17.0657380,0.0000000,0.0000000,84.7482520); //
    CreateDynamicObject(18655,-2587.9826660,653.3483880,15.9857200,0.0000000,-20.3999840,142.7229300); //

	// sfa new objects go here
	
	// city
	CreateDynamicObject(4142, 3488.049805, -153.126984, 14.772326, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(5137, 3507.147949, -209.530304, 18.842964, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18239, 3464.534424, -196.788391, 14.659071, 0.0000, 0.0000, 268.8998,0,-1,-1);
	CreateDynamicObject(4142, 3417.496826, -242.456100, 14.714994, 0.0000, 0.0000, 89.3814,0,-1,-1);
	CreateDynamicObject(17545, 3477.903564, -217.169006, 14.964321, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18243, 3466.500977, -218.716003, 14.697914, 0.0000, 0.0000, 65.3171,0,-1,-1);
	CreateDynamicObject(18283, 3459.255859, -230.605652, 14.601184, 0.0000, 0.0000, 88.5219,0,-1,-1);
	CreateDynamicObject(18266, 3468.367188, -150.561249, 19.284874, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3983, 3480.570801, -162.065994, 16.408045, 0.0000, 0.0000, 181.2368,0,-1,-1);
	CreateDynamicObject(11631, 3470.000000, -149.004898, 16.772966, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(16377, 3467.326416, -149.955795, 16.507395, 0.0000, 0.0000, 263.7431,0,-1,-1);
	CreateDynamicObject(3689, 3421.310303, -182.135300, 22.688459, 0.0000, 0.0000, 89.3814,0,-1,-1);
	CreateDynamicObject(16021, 3522.120117, -167.664154, 14.663858, 0.0000, 0.0000, 90.2409,0,-1,-1);
	CreateDynamicObject(18255, 3536.505615, -202.916656, 15.451546, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18255, 3502.872803, -142.079514, 14.906277, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18255, 3458.103516, -143.906982, 15.324768, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18255, 3427.415771, -112.731819, 15.326555, 0.0000, 0.0000, 269.7591,0,-1,-1);
	CreateDynamicObject(18255, 3482.926514, -248.492737, 13.911642, 0.0000, 0.0000, 269.7592,0,-1,-1);
	CreateDynamicObject(18255, 3501.893555, -218.016113, 14.382734, 0.0000, 0.0000, 181.2368,0,-1,-1);
	CreateDynamicObject(18552, 3430.230713, -260.575409, 14.631942, 0.0000, 0.0000, 89.3814,0,-1,-1);
	CreateDynamicObject(17545, 3416.222900, -243.483444, 14.974895, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(17038, 3418.584961, -268.963806, 14.678911, 0.0000, 0.0000, 89.3814,0,-1,-1);
	CreateDynamicObject(4857, 3397.375488, -265.494873, 17.060202, 0.0000, 0.0000, 268.8998,0,-1,-1);
	CreateDynamicObject(18255, 3392.958984, -241.505341, 15.144215, 0.0000, 4.2972, 181.2372,0,-1,-1);
	CreateDynamicObject(18255, 3407.770508, -211.936737, 14.235527, 0.0000, 353.9839, 89.2774,0,-1,-1);
	CreateDynamicObject(18255, 3456.782471, -265.832581, 15.209469, 0.0000, 0.0000, 178.6589,0,-1,-1);
	CreateDynamicObject(18255, 3426.016846, -292.107422, 14.097307, 0.0000, 0.0000, 270.6186,0,-1,-1);
	CreateDynamicObject(18255, 3410.338135, -292.211304, 14.056170, 0.0000, 0.0000, 270.6186,0,-1,-1);
	CreateDynamicObject(972, 3375.405029, -282.551422, 13.149443, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(972, 3378.298584, -269.520142, 13.141586, 0.0000, 0.0000, 272.3375,0,-1,-1);
	// /CITY2
	CreateDynamicObject(16781, -3192.361328, -2611.029785, 53.156120, 0.0000, 0.0000, 149.4379,0,-1,-1);
	CreateDynamicObject(3996, -3155.254150, -2608.875732, 53.537560, 0.0000, 0.0000, 329.0603,0,-1,-1);
	CreateDynamicObject(3983, -3192.297119, -2622.638184, 55.431007, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(3469, -3186.137207, -2637.030273, 56.558617, 0.0000, 0.0000, 73.0521,0,-1,-1);
	CreateDynamicObject(3875, -3198.455811, -2594.829834, 60.215611, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(16777, -3168.457764, -2626.138672, 52.995243, 0.0000, 0.0000, 299.8394,0,-1,-1);
	CreateDynamicObject(18255, -3203.342529, -2640.987793, 53.957569, 0.0000, 0.0000, 60.1606,0,-1,-1);
	CreateDynamicObject(8674, -3226.229736, -2623.006348, 54.931126, 0.0000, 0.0000, 256.8676,0,-1,-1);
	CreateDynamicObject(4018, -3148.856934, -2628.055664, 53.661495, 0.0000, 0.0000, 149.4379,0,-1,-1);
	CreateDynamicObject(969, -3160.943359, -2634.490723, 53.605419, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(11504, -3115.092529, -2633.906982, 53.458855, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(3306, -3180.507568, -2576.333984, 54.046322, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(3307, -3158.995361, -2588.308105, 54.160320, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(3308, -3139.213379, -2599.978760, 54.030365, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(3310, -3114.379639, -2608.469482, 55.586189, 0.0000, 0.0000, 57.5823,0,-1,-1);
	CreateDynamicObject(5112, -3263.938477, -2545.128662, 48.975784, 0.0000, 0.0000, 329.9197,0,-1,-1);
	CreateDynamicObject(5052, -3347.706055, -2496.318848, 53.030342, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(17862, -3399.442627, -2497.140625, 53.293468, 0.0000, 0.0000, 329.9197,0,-1,-1);
	CreateDynamicObject(17921, -3430.468750, -2482.001709, 53.033676, 0.0000, 0.0000, 147.7190,0,-1,-1);
	CreateDynamicObject(615, -3395.604004, -2460.227295, 50.874878, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18255, -3425.419189, -2477.940918, 53.883888, 0.0000, 0.0000, 325.6225,0,-1,-1);
	CreateDynamicObject(880, -3411.738037, -2459.359619, 54.276962, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(880, -3408.238770, -2458.873047, 54.820354, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(880, -3404.238770, -2459.123047, 55.070354, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(880, -3399.726318, -2458.884033, 54.443462, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18255, -3385.387939, -2465.691650, 54.140827, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(18255, -3359.370361, -2479.843018, 53.836555, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(880, -3435.876953, -2516.329590, 54.495686, 0.0000, 0.0000, 351.4056,0,-1,-1);
	CreateDynamicObject(880, -3442.502686, -2516.163086, 54.548351, 0.0000, 0.0000, 320.4659,0,-1,-1);
	CreateDynamicObject(880, -3447.762939, -2513.650146, 54.062572, 0.0000, 0.0000, 297.2612,0,-1,-1);
	CreateDynamicObject(880, -3452.200439, -2512.972900, 53.077385, 0.0000, 0.0000, 297.2612,0,-1,-1);
	CreateDynamicObject(803, -3439.572998, -2515.669434, 54.538918, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(880, -3446.101318, -2498.354492, 53.780445, 0.0000, 0.0000, 297.2612,0,-1,-1);
	CreateDynamicObject(880, -3452.318115, -2496.837646, 53.995686, 0.0000, 0.0000, 297.2612,0,-1,-1);
	CreateDynamicObject(880, -3459.052490, -2497.257080, 54.245686, 0.0000, 0.0000, 297.2612,0,-1,-1);
	CreateDynamicObject(880, -3466.150391, -2500.940918, 53.737892, 0.0000, 0.0000, 311.0122,0,-1,-1);
	CreateDynamicObject(803, -3460.776367, -2501.896240, 53.585350, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(17927, -3474.868652, -2551.152832, 54.156708, 0.0000, 0.0000, 55.8634,0,-1,-1);
	CreateDynamicObject(618, -3453.875000, -2513.008545, 53.174515, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(17573, -3457.011475, -2527.786377, 54.649490, 0.0000, 0.0000, 325.6225,0,-1,-1);
	CreateDynamicObject(13696, -3466.938965, -2548.563477, 52.439804, 0.0000, 0.0000, 56.7228,0,-1,-1);
	CreateDynamicObject(18255, -3478.106934, -2522.029541, 52.035847, 0.0000, 0.0000, 325.6225,0,-1,-1);
	CreateDynamicObject(18255, -3499.699951, -2552.855713, 51.749989, 0.0000, 0.0000, 325.6225,0,-1,-1);
	CreateDynamicObject(3983, -3473.576416, -2532.645996, 54.384331, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(18255, -3442.193359, -2541.936035, 52.656986, 0.0000, 0.0000, 330.7792,0,-1,-1);
	CreateDynamicObject(880, -3440.166260, -2518.467773, 54.620724, 0.0000, 0.0000, 320.4659,0,-1,-1);
	CreateDynamicObject(880, -3439.939209, -2521.614014, 55.996811, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(880, -3445.254639, -2520.003906, 55.215698, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(880, -3449.293457, -2516.808838, 55.117794, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(880, -3447.236084, -2518.046143, 55.222820, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18282, -3476.356201, -2573.499023, 52.699989, 0.0000, 0.0000, 235.3816,0,-1,-1);
	CreateDynamicObject(17577, -3514.414795, -2588.900391, 57.350174, 0.0000, 0.0000, 145.1407,0,-1,-1);
	CreateDynamicObject(17934, -3492.821045, -2585.035156, 54.780689, 0.0000, 0.0000, 325.6225,0,-1,-1);
	CreateDynamicObject(1216, -3476.330566, -2563.648438, 53.243252, 0.0000, 0.0000, 239.6788,0,-1,-1);
	CreateDynamicObject(1226, -3484.505127, -2558.026855, 56.874878, 0.0000, 0.0000, 321.3253,0,-1,-1);
	CreateDynamicObject(1226, -3465.913818, -2510.856445, 56.173607, 0.0000, 0.0000, 153.7351,0,-1,-1);
	CreateDynamicObject(1257, -3485.759521, -2561.463135, 54.279648, 0.0000, 0.0000, 325.6225,0,-1,-1);
	// cops spawn by doshka & maluda
	CreateDynamicObject(19538, -1635.78784, 659.35510, 6.23723,   0.00000, 0.00000, 359.21326);
    CreateDynamicObject(655, -1572.96509, 655.30450, 6.21454,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(655, -1640.97009, 647.07452, 6.14093,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3279, -1580.83228, 651.15961, 5.80357,   0.00000, 0.00000, 89.18484);
    CreateDynamicObject(9833, -1603.00244, 663.85126, 8.88401,   0.00000, 0.00000, -4.44000);
    CreateDynamicObject(6865, -1600.03149, 679.73389, 14.20421,   14.82000, -14.58000, 42.13348);
    CreateDynamicObject(3461, -1602.87537, 678.81512, 14.73120,   0.00000, 40.00000, 269.60468);
    CreateDynamicObject(3461, -1597.39490, 678.89276, 14.73120,   0.00000, 40.00000, -91.00000);
    CreateDynamicObject(18001, -1614.32239, 679.66620, 17.27934,   0.00000, 0.00000, 0.03717);
    CreateDynamicObject(18001, -1585.82190, 679.69897, 17.27934,   0.00000, 0.00000, 0.03717);
    CreateDynamicObject(18001, -1593.95789, 679.68237, 17.27934,   0.00000, 0.00000, 0.03717);
    CreateDynamicObject(18001, -1602.11328, 679.67413, 17.27934,   0.00000, 0.00000, 0.03717);
    CreateDynamicObject(18001, -1610.25635, 679.66461, 17.27934,   0.00000, 0.00000, 0.03717);
    CreateDynamicObject(18001, -1581.72559, 683.79419, 17.27934,   0.00000, 0.00000, 90.03734);
    CreateDynamicObject(919, -1613.89783, 687.40558, 16.63698,   0.00000, 0.00000, 1.68000);
    CreateDynamicObject(919, -1612.74951, 687.40747, 16.63698,   0.00000, 0.00000, 1.68000);
    CreateDynamicObject(919, -1610.31458, 687.43848, 16.63698,   0.00000, 0.00000, 1.68000);
    CreateDynamicObject(919, -1611.56726, 687.42480, 16.63698,   0.00000, 0.00000, 1.68000);

	
	
	// city4
	CreateDynamicObject(17927,5426.915039,-2239.931885,4.902738,0.000000,0.000000,-90.2408527331,0,-1,-1);
	CreateDynamicObject(618,5415.497559,-2266.279297,4.494958,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(618,5415.497559,-2253.279297,4.494958,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(618,5415.492676,-2241.446777,4.525938,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(618,5414.925781,-2221.355713,4.243308,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(5812,5413.161621,-2240.026611,3.706949,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(800,5414.631836,-2232.637451,4.707473,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(800,5414.696777,-2245.970459,2.956885,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(800,5414.904785,-2259.727783,4.213409,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1807,5415.490234,-2251.675537,4.869319,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1226,5427.488770,-2282.968018,7.661386,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1226,5427.343750,-2259.683105,7.398297,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1226,5427.471680,-2226.264404,7.420905,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1226,5427.432617,-2204.883057,7.420907,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1257,5429.791992,-2215.131104,4.825679,0.000000,0.000000,-180.481762762,0,-1,-1);
	CreateDynamicObject(1283,5439.548828,-2195.330322,6.451453,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1340,5421.898926,-2216.856445,4.684682,0.000000,0.000000,-98.8352196601,0,-1,-1);
	CreateDynamicObject(1342,5419.442383,-2272.114990,4.596464,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(6299,5412.246582,-2203.122803,5.906399,0.000000,0.000000,-90.2408527331,0,-1,-1);
	CreateDynamicObject(3515,5410.648438,-2245.372314,2.382648,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(982,5398.959473,-2273.615234,4.185730,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(982,5399.027832,-2247.947510,4.233001,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(982,5399.033691,-2222.327637,4.232688,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(982,5399.067871,-2206.273193,4.251499,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(982,5411.922852,-2193.580322,4.247926,0.000000,0.000000,-90.2408527331,0,-1,-1);
	CreateDynamicObject(982,5411.824707,-2286.246826,4.161715,0.000000,0.000000,-89.3814160404,0,-1,-1);
	CreateDynamicObject(983,5401.894531,-2281.492432,4.222557,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(983,5405.090820,-2278.267334,4.222557,0.000000,0.000000,90.2408527331,0,-1,-1);
	CreateDynamicObject(983,5405.117676,-2284.667725,4.222557,0.000000,0.000000,90.2408527331,0,-1,-1);
	CreateDynamicObject(983,5408.313477,-2281.444580,4.246117,0.000000,0.859436692696,-0.859436692696,0,-1,-1);
	CreateDynamicObject(3521,5405.173828,-2281.535156,5.061937,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(5189,5413.583496,-2182.365967,8.996927,0.000000,0.000000,-91.9597261185,0,-1,-1);
	CreateDynamicObject(17921,5448.050293,-2155.594238,3.647854,0.000000,0.000000,-180.481762762,0,-1,-1);
	CreateDynamicObject(18242,5469.824707,-2160.101318,3.618221,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(8411,5459.702637,-2246.978760,-4.706079,0.000000,0.000000,269.003684814,0,-1,-1);
	CreateDynamicObject(11469,5454.044922,-2203.271240,3.821796,0.000000,0.000000,-180.481762762,0,-1,-1);
	CreateDynamicObject(17554,5429.922363,-2164.577148,20.805017,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(752,5435.420410,-2180.333984,4.098986,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(752,5433.668945,-2182.010498,3.098986,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(752,5431.922363,-2179.811768,4.406843,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(752,5431.172363,-2182.811768,2.906843,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(752,5431.172363,-2182.061768,4.406843,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(752,5430.292969,-2184.887451,4.098986,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(752,5429.757324,-2186.151367,3.841192,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(752,5429.762207,-2189.022461,3.098986,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(752,5465.246094,-2175.709717,4.057716,0.000000,0.000000,-73.0521188792,0,-1,-1);
	CreateDynamicObject(752,5464.521484,-2181.657715,3.723984,0.000000,0.000000,-73.0521188792,0,-1,-1);
	CreateDynamicObject(752,5462.516113,-2185.352295,3.748988,0.000000,0.000000,-103.991839816,0,-1,-1);
	CreateDynamicObject(752,5460.447754,-2188.213867,3.723984,0.000000,0.000000,-123.758941044,0,-1,-1);
	CreateDynamicObject(752,5457.112305,-2190.482178,3.598986,0.000000,0.000000,-123.758941044,0,-1,-1);
	CreateDynamicObject(752,5455.247070,-2192.581055,3.402205,0.000000,0.000000,-123.758941044,0,-1,-1);
	CreateDynamicObject(792,5430.370117,-2196.584473,3.792508,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1363,5446.286621,-2215.073486,4.582850,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(8229,5438.612305,-2285.496826,6.322718,0.000000,0.000000,-176.184579299,0,-1,-1);
	CreateDynamicObject(8229,5447.099121,-2274.031006,6.181022,0.000000,0.000000,-88.5219793477,0,-1,-1);
	CreateDynamicObject(17030,5445.883301,-2128.457520,-4.160812,0.000000,0.000000,-71.3332454938,0,-1,-1);
	CreateDynamicObject(906,5465.105469,-2142.103271,5.392971,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(906,5465.043945,-2138.368408,4.395511,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(906,5465.535645,-2134.678223,4.398927,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(906,5462.199219,-2121.329102,5.631088,0.000000,0.000000,81.6464858061,0,-1,-1);
	CreateDynamicObject(906,5465.265137,-2121.016846,1.492989,0.000000,0.000000,81.6464858061,0,-1,-1);
	CreateDynamicObject(906,5465.969238,-2120.648193,5.302791,0.000000,0.000000,81.6464858061,0,-1,-1);
	CreateDynamicObject(906,5466.330566,-2145.585449,4.482656,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(906,5465.938965,-2172.745605,4.129441,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(5191,5525.109863,-2117.198730,-2.132280,0.000000,0.000000,98.8352196601,0,-1,-1);
	CreateDynamicObject(17596,5650.027344,-2098.114258,3.707829,0.000000,0.000000,-81.6464858061,0,-1,-1);
	CreateDynamicObject(3516,5580.964844,-2110.997559,7.132761,0.000000,0.000000,-79.9276124207,0,-1,-1);
	CreateDynamicObject(1226,5511.287598,-2125.739258,6.859327,0.000000,0.000000,-85.9436692696,0,-1,-1);
	CreateDynamicObject(17537,5603.460938,-2122.269775,14.928219,0.000000,0.000000,-172.746889824,0,-1,-1);
	CreateDynamicObject(17526,5599.983398,-2086.468506,6.404025,0.000000,0.000000,-81.6464858061,0,-1,-1);
	CreateDynamicObject(17529,5637.112793,-2084.035400,7.835511,0.000000,0.000000,-81.6464858061,0,-1,-1);
	CreateDynamicObject(17522,5663.352051,-2079.400635,5.719702,0.000000,0.000000,-171.887395835,0,-1,-1);
	CreateDynamicObject(17521,5690.280273,-2072.811768,7.051445,0.000000,0.000000,8.59436692696,0,-1,-1);
	CreateDynamicObject(16475,5627.861816,-2119.379883,3.656466,0.000000,0.000000,10.3132403124,0,-1,-1);
	CreateDynamicObject(13013,5677.546387,-2112.288574,7.284744,0.000000,0.000000,-82.5059224988,0,-1,-1);
	CreateDynamicObject(971,5710.449219,-2113.753662,5.254663,0.000000,0.000000,-81.6464858061,0,-1,-1);
	CreateDynamicObject(1267,5707.410156,-2113.253906,8.599438,0.000000,0.000000,-22.3453540101,0,-1,-1);
	CreateDynamicObject(8530,5446.442871,-2219.388916,8.760754,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(3468,5615.503418,-2095.399414,4.496579,0.000000,0.000000,-83.3653591915,0,-1,-1);
	CreateDynamicObject(1234,5430.562988,-2212.000732,4.631169,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1215,5408.707520,-2214.701660,4.509254,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1215,5409.004395,-2268.677979,4.509540,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(955,5401.232422,-2278.707275,3.933664,0.000000,0.000000,-177.044015991,0,-1,-1);
	CreateDynamicObject(1776,5409.025391,-2278.623291,4.649897,0.000000,0.000000,-183.919509533,0,-1,-1);
	CreateDynamicObject(1211,5428.822266,-2218.396729,4.357294,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(983,5709.074219,-2099.269775,4.469528,0.000000,0.000000,98.8352769558,0,-1,-1);
	CreateDynamicObject(1231,5640.506348,-2106.152100,6.524159,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1231,5655.740723,-2090.623047,6.404798,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1283,5709.412109,-2090.349121,6.862814,0.000000,0.000000,-73.9115555719,0,-1,-1);
	CreateDynamicObject(17596,5771.339355,-2080.273926,3.693110,0.000000,0.000000,-81.6464285104,0,-1,-1);
	CreateDynamicObject(4176,5726.144531,-2065.840820,9.336946,0.000000,0.000000,7.73493023427,0,-1,-1);
	CreateDynamicObject(4683,5762.858398,-2106.000000,10.517022,0.000000,0.000000,8.59436692696,0,-1,-1);
	CreateDynamicObject(4894,5769.186523,-2056.099609,10.550310,0.000000,0.000000,-171.027959142,0,-1,-1);
	CreateDynamicObject(643,5780.713379,-2062.330322,4.243747,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(643,5790.758789,-2059.968506,4.243572,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(643,5784.166016,-2056.550293,4.244648,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(643,5785.979004,-2062.569824,4.243127,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(643,5790.317383,-2055.612305,4.245002,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(643,5779.636230,-2057.684082,4.244900,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1215,5790.109863,-2067.919678,4.343370,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(1215,5783.867188,-2068.882813,4.343370,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(3468,5790.829590,-2068.753174,4.481859,0.000000,0.000000,3.43774677078,0,-1,-1);
	CreateDynamicObject(6986,5609.311035,-2113.408203,22.564306,0.000000,0.000000,94.5380361966,0,-1,-1);
	CreateDynamicObject(8408,5704.173828,-2076.584473,14.047625,0.000000,0.000000,-47.2690180983,0,-1,-1);
	CreateDynamicObject(8581,5823.911621,-2099.965576,8.887544,0.000000,0.000000,-81.6464858061,0,-1,-1);
	CreateDynamicObject(12944,5818.681152,-2056.889893,3.768826,0.000000,0.000000,98.8352196601,0,-1,-1);
	CreateDynamicObject(1553,5826.794922,-2060.763184,4.668683,0.000000,0.000000,10.3132403124,0,-1,-1);
	CreateDynamicObject(717,5795.394531,-2069.614990,3.926156,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(5184,5887.190430,-2051.029297,22.488825,0.000000,0.000000,7.73493023427,0,-1,-1);
	CreateDynamicObject(3753,5877.993164,-2081.740967,-5.732483,0.000000,0.000000,-171.887395835,0,-1,-1);
	CreateDynamicObject(10830,5914.436035,-2035.674683,11.812511,0.000000,0.000000,-38.6746511713,0,-1,-1);
	CreateDynamicObject(3255,5836.431641,-2033.117798,3.611010,0.000000,0.000000,1.71887338539,0,-1,-1);
	CreateDynamicObject(3470,5850.520508,-2080.129150,2.085672,0.000000,1.71887338539,189.076129689,0,-1,-1);
	CreateDynamicObject(17020,5932.836914,-2035.495605,7.601662,0.000000,0.000000,6.87549354157,0,-1,-1);
	CreateDynamicObject(3569,5877.355957,-2015.951660,6.219629,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(3570,5866.628906,-2024.548462,4.953953,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(3571,5867.005371,-2019.915527,4.953953,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(3573,5864.702148,-2014.096680,6.297704,0.000000,0.000000,7.73493023427,0,-1,-1);
	CreateDynamicObject(1383,5849.482422,-2020.264404,36.136314,0.000000,0.000000,6.01605684887,0,-1,-1);
	CreateDynamicObject(1384,5849.388672,-2020.277344,68.233406,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(16337,5857.346680,-2025.250244,4.490728,0.000000,0.000000,98.8352196601,0,-1,-1);
	CreateDynamicObject(8263,5880.998047,-2005.539307,6.707039,0.000000,0.000000,7.73493023427,0,-1,-1);
	CreateDynamicObject(8210,5926.344727,-2066.681641,6.707039,0.000000,0.000000,8.59436692696,0,-1,-1);
	CreateDynamicObject(8210,5949.902832,-2036.748535,6.607039,0.000000,0.000000,97.1163462747,0,-1,-1);
	CreateDynamicObject(8210,5822.482422,-2035.381592,6.707037,0.000000,0.000000,90.2408527331,0,-1,-1);
	CreateDynamicObject(1437,5878.357422,-2027.693726,4.593243,-25.7831007809,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(16082,5873.703613,-2033.303589,7.653520,0.000000,0.000000,0.000000,0,-1,-1);
	CreateDynamicObject(17596,5846.596191,-2136.437500,3.676864,0.000000,0.000000,-171.887338539,0,-1,-1);
	CreateDynamicObject(8390,5920.870605,-2119.320313,23.025623,0.000000,0.000000,-82.5059224988,0,-1,-1);
	CreateDynamicObject(18240,5863.683594,-2182.323242,3.758660,0.000000,0.000000,-81.6464858061,0,-1,-1);
	CreateDynamicObject(4048,5829.506348,-2145.191162,15.627405,0.000000,0.000000,98.8352196601,0,-1,-1);
	CreateDynamicObject(4848,5838.826172,-2184.024658,7.134173,0.000000,0.000000,98.8352196601,0,-1,-1);
	CreateDynamicObject(972,5852.890625,-2191.794922,1.453416,0.000000,0.000000,-67.0361193261,0,-1,-1);
	CreateDynamicObject(3264,5842.810059,-2074.288330,3.606012,0.000000,0.000000,-81.6464858061,0,-1,-1);
	CreateDynamicObject(3265,5842.811035,-2073.194092,3.606012,0.000000,0.000000,-85.9436692696,0,-1,-1);
	CreateDynamicObject(1682,5831.813965,-2051.912842,9.363436,0.000000,0.000000,-68.7549354157,0,-1,-1);
	CreateDynamicObject(3881,5844.488770,-2069.516846,5.457577,0.000000,0.000000,6.01605684887,0,-1,-1);
	CreateDynamicObject(3882,5844.612305,-2068.852295,4.603809,0.000000,0.000000,-83.3653591915,0,-1,-1);
	CreateDynamicObject(4874,5933.101074,-1971.827759,6.821972,0.000000,0.000000,-81.6464858061,0,-1,-1);
	CreateDynamicObject(966,5841.534668,-2065.902588,3.606012,0.000000,0.000000,6.01605684887,0,-1,-1);
	CreateDynamicObject(968,5834.626953,-2066.619141,4.363664,85.9436692696,0.000000,92.8191628112,0,-1,-1);
	CreateDynamicObject(971,5831.356445,-2063.550537,6.925930,0.000000,0.000000,-42.9718346348,0,-1,-1);
	CreateDynamicObject(971,5848.579102,-2075.299072,2.557717,0.000000,0.000000,-67.8955560188,0,-1,-1);
	
	// SFA Stunts by Doshka (Improved)
    CreateDynamicObject(18779, -1448.16797, -118.11297, 22.99723,   0.00000, 0.00000, 155.08009);
    CreateDynamicObject(19001, -1393.76636, -5.18233, 23.15725,   0.00000, 0.00000, 50.10982);
    CreateDynamicObject(18998, -1256.11169, -111.80032, 18.15184,   0.00000, 270.00000, 134.64995);
    CreateDynamicObject(18855, -1164.42041, -204.11372, 50.04097,   0.00000, 0.00000, 135.72136);
    CreateDynamicObject(18836, -1203.64417, -164.77893, 81.71227,   0.00000, 0.00000, 43.56215);
    CreateDynamicObject(19071, -1079.20874, -187.24890, 19.05240,   -15.00000, 0.00000, 106.00000);
    CreateDynamicObject(18845, -1446.08691, -68.95720, 50.94530,   0.00000, 0.00000, 322.57907);
    CreateDynamicObject(18871, -1325.11365, -179.63130, 46.55883,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18871, -1212.03931, -351.36652, 451.69537,   0.00000, 0.00000, 257.64819);
    CreateDynamicObject(16304, -1305.98694, -186.55800, 18.25854,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(13562, -1281.21436, -211.65086, 14.48890,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(7916, -1384.29578, -179.06970, 17.20826,   0.00000, 0.00000, 61.68786);
    CreateDynamicObject(12911, -10125.91113, -548.28174, 4887.94043,   0.00000, 0.00000, 11.68079);
    CreateDynamicObject(19129, -1225.63049, -206.63123, 13.08961,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19633, -1271.51477, -171.20711, 13.31359,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18780, -1344.51367, 80.68049, 23.78162,   0.00000, 0.00000, 124.03718);
    CreateDynamicObject(18796, -1233.85254, -133.23737, 77.29238,   0.00000, 0.00000, 314.32193);
    CreateDynamicObject(19005, -1245.70972, -118.91521, 79.18604,   0.00000, 0.00000, 45.84568);
    CreateDynamicObject(19529, -1371.37695, -69.20008, 13.16755,   0.00000, 0.00000, 43.65051);
    CreateDynamicObject(19529, -1277.87244, -150.79735, 13.15242,   0.00000, 0.00000, 313.05423);
    CreateDynamicObject(19529, -1210.23059, -230.28839, 13.23784,   0.00000, 0.00000, 315.18967);
    CreateDynamicObject(19529, -6239.93896, 8791.98926, 48.99972,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19529, -1452.35852, 230.16632, 0.35414,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19529, -1363.98328, -200.01881, 13.16759,   0.00000, 0.00000, 322.30685);
    CreateDynamicObject(19529, -1299.02454, -306.55801, 13.17444,   0.00000, 0.00000, 314.75320);
    CreateDynamicObject(19529, -1217.80750, -397.69638, 13.18573,   0.00000, 0.00000, 314.62976);
    CreateDynamicObject(19529, -1203.63269, -348.16174, 13.18135,   0.00000, 0.00000, 45.10512);
    CreateDynamicObject(19529, -1305.57544, -484.90216, 13.20743,   0.00000, 0.00000, 225.16924);
    CreateDynamicObject(19529, -1299.66821, -35.53556, 13.20743,   0.00000, 0.00000, 46.41267);
    CreateDynamicObject(19529, -1475.85107, -140.11407, 13.23501,   0.00000, 0.00000, 313.83176);
    CreateDynamicObject(19529, -1582.87024, -186.74403, 13.18820,   0.00000, 0.00000, 314.62976);
    CreateDynamicObject(18780, -1285.60449, -260.80530, 24.88604,   0.00000, 0.00000, 295.68951);
    CreateDynamicObject(18779, -1321.57703, -461.54764, 22.87918,   0.00000, 0.00000, 24.91370);
    CreateDynamicObject(18796, -1277.73657, -90.90703, 81.17034,   0.00000, 0.00000, 316.25818);
    CreateDynamicObject(18985, -1322.89380, -47.10575, 85.84271,   0.00000, 0.00000, 45.42825);
    CreateDynamicObject(18985, -1392.34814, 24.57056, 85.96521,   0.00000, 0.00000, 42.90198);
    CreateDynamicObject(18855, -1469.99670, 58.32790, 85.12836,   91.00000, 12.00000, 305.02316);
    CreateDynamicObject(18990, -1464.67285, 2.47467, 85.21255,   93.00000, -11.00000, 189.46745);
    CreateDynamicObject(18842, -1487.15491, -25.11652, 83.81818,   94.00000, 0.00000, 311.71765);
    CreateDynamicObject(18851, -1528.30725, -50.78199, 83.63254,   0.00000, 0.00000, 30.42213);
    CreateDynamicObject(18796, -1566.85327, -73.61799, 77.22711,   0.00000, 0.00000, 30.61218);
    CreateDynamicObject(19129, -1590.29932, -84.75855, 77.04398,   0.00000, 0.00000, 30.78020);
    CreateDynamicObject(19005, -1609.48828, -89.23273, 80.04704,   0.00000, 0.00000, 118.76192);
    CreateDynamicObject(19005, -1603.26868, -99.48172, 80.05325,   0.00000, 0.00000, 120.29600);
    CreateDynamicObject(7916, -1572.44470, -74.16717, 82.75126,   -25.00000, 4.00000, 196.00000);
    CreateDynamicObject(19005, -1294.98267, -135.22922, 15.00115,   0.00000, 0.00000, 47.51849);
    CreateDynamicObject(19005, -1229.87402, -275.21158, 16.03044,   0.00000, 0.00000, 118.26675);
	// AlexM Beach (Converted from Object Set - Made by [ATM]AlexM
	
	CreateDynamicObject(19849,2945.7641600,-2051.4240720,2.5580430,0.0000000,0.0000000,268.6423330); //
    CreateDynamicObject(19854,2947.3457030,-2052.3842770,2.4880490,0.0000000,0.0000000,-90.5975720); //
    CreateDynamicObject(19855,2947.2031250,-2051.4392080,2.4680480,0.0000000,0.0000000,-89.2772970); //
    CreateDynamicObject(19859,2936.6394040,-2050.9667960,4.4780510,0.0000000,0.0000000,269.7228690); //
    CreateDynamicObject(19861,2929.0971670,-2060.6279290,5.0380530,0.0000000,0.0000000,-90.1439810); //
    CreateDynamicObject(19865,2925.0886230,-2066.0686030,2.5280480,0.0000000,0.0000000,87.5018920); //
    CreateDynamicObject(19865,2920.1059570,-2065.8657220,2.5280480,0.0000000,0.0000000,87.5018920); //
    CreateDynamicObject(19865,2916.6875000,-2065.7141110,2.5280480,0.0000000,0.0000000,87.5018920); //
    CreateDynamicObject(19865,2914.3571770,-2063.1689450,2.5280480,0.0000000,0.0000000,-2.1980860); //
    CreateDynamicObject(19865,2914.3698730,-2058.2124020,2.5280480,0.0000000,0.0000000,-0.1980840); //
    CreateDynamicObject(19865,2914.3942870,-2057.4189450,2.5280480,0.0000000,0.0000000,-0.8980860); //
    CreateDynamicObject(19865,2914.7390130,-2045.9777830,2.5280480,0.0000000,0.0000000,-2.1980860); //
    CreateDynamicObject(19865,2914.9211420,-2041.0115960,2.5280480,0.0000000,0.0000000,-2.1980860); //
    CreateDynamicObject(19865,2915.0222160,-2037.6638180,2.5280480,0.0000000,0.0000000,-2.1980860); //
    CreateDynamicObject(19865,2917.6066890,-2035.2657470,2.5280480,0.0000000,0.0000000,-91.5980910); //
    CreateDynamicObject(19865,2922.5498040,-2035.3861080,2.5280480,0.0000000,0.0000000,-91.5980910); //
    CreateDynamicObject(19865,2925.3405760,-2035.4760740,2.5280480,0.0000000,0.0000000,-91.5980910); //
    CreateDynamicObject(19859,2952.0466300,-2063.7736810,4.4680480,0.0000000,0.0000000,88.9977490); //
    CreateDynamicObject(2406,2965.5607910,-2056.6162100,2.5346190,-88.6999740,-3.5999970,339.0401910); //
    CreateDynamicObject(2404,2962.0419920,-2056.0944820,2.6394770,-89.7999800,0.0000000,334.0268850); //
    CreateDynamicObject(19357,2938.3454580,-2046.9625240,4.8520460,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2941.5268550,-2046.9644770,4.8520460,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2946.3090820,-2046.9671630,4.8520460,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2949.5007320,-2046.9686270,4.8520460,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(1637,2877.5222160,-2009.9753410,7.8151860,-0.4999980,8.5999990,5.7124890); //
    CreateDynamicObject(2405,2878.1843260,-2010.0559080,8.1376140,0.0000000,0.0000000,13.2399530); //
    CreateDynamicObject(19831,2953.5009760,-2058.9367670,2.4280460,0.0000000,0.0000000,88.1273420); //
    CreateDynamicObject(19582,2953.5434570,-2059.2614740,3.2680480,0.0000000,0.0000000,89.6940380); //
    CreateDynamicObject(19582,2953.5524900,-2059.0490720,3.2680480,0.0000000,0.0000000,89.6940380); //
    CreateDynamicObject(19582,2953.5617670,-2058.8369140,3.2680480,0.0000000,0.0000000,89.6940380); //
    CreateDynamicObject(19582,2953.5610350,-2058.6037590,3.2680480,0.0000000,0.0000000,89.6940380); //
    CreateDynamicObject(19632,2953.4355460,-2058.9821770,2.9680480,0.0000000,0.0000000,87.1873550); //
    CreateDynamicObject(19867,2934.8325190,-2050.7636710,3.1680410,0.0000000,0.0000000,-92.0393670); //
    CreateDynamicObject(19922,2962.2358390,-2050.8935540,1.7680490,0.0000000,0.0000000,179.9712370); //
    CreateDynamicObject(19922,2965.1977530,-2050.8935540,1.7780480,0.0000000,0.0000000,179.9712370); //
    CreateDynamicObject(19922,2966.1977530,-2050.8935540,1.7780480,0.0000000,0.0000000,179.9712370); //
    CreateDynamicObject(19899,2936.4138180,-2059.4038080,2.5880470,0.0000000,0.0000000,-176.5893090); //
    CreateDynamicObject(19899,2936.5471190,-2061.9479980,2.5880470,0.0000000,0.0000000,-176.5893090); //
    CreateDynamicObject(19900,2936.5058590,-2063.5480950,2.5580480,0.0000000,0.0000000,-88.1019590); //
    CreateDynamicObject(19900,2936.5239250,-2064.1706540,2.5580480,0.0000000,0.0000000,-88.1019590); //
    CreateDynamicObject(19900,2936.5502920,-2064.7912590,2.5580480,0.0000000,0.0000000,-88.1019590); //
    CreateDynamicObject(19904,2936.4697260,-2064.3979490,3.5580480,-91.8999930,0.0000000,-169.7817380); //
    CreateDynamicObject(18766,2915.2587890,-2043.4008780,0.0888400,0.0000000,0.0000000,-88.7416220); //
    CreateDynamicObject(18766,2915.2224120,-2040.2452390,-0.0011570,0.0000000,0.0000000,-88.7416220); //
    CreateDynamicObject(18766,2920.3576660,-2035.7380370,-0.0011570,0.0000000,0.0000000,179.6582640); //
    CreateDynamicObject(18766,2929.8295890,-2035.7883300,-0.0011570,0.0000000,0.0000000,179.6582640); //
    CreateDynamicObject(18766,2939.5410150,-2035.8387450,-0.0011570,0.0000000,0.0000000,179.6582640); //
    CreateDynamicObject(18766,2949.5742180,-2035.8914790,-0.0011570,0.0000000,0.0000000,179.6582640); //
    CreateDynamicObject(18766,2959.5168450,-2035.9445800,-0.0011570,0.0000000,0.0000000,179.6582640); //
    CreateDynamicObject(18766,2969.4475090,-2035.9973140,-0.0011570,0.0000000,0.0000000,179.6582640); //
    CreateDynamicObject(18766,2972.3393550,-2036.0047600,-0.0011570,0.0000000,0.0000000,179.6582640); //
    CreateDynamicObject(18766,2977.0979000,-2041.2727050,-0.0011570,0.0000000,0.0000000,93.5582420); //
    CreateDynamicObject(18766,2977.3669430,-2049.0153800,-0.0011570,0.0000000,0.0000000,91.2582620); //
    CreateDynamicObject(18766,2977.3828120,-2058.9726560,-0.0011570,0.0000000,0.0000000,88.6582870); //
    CreateDynamicObject(18766,2977.2783200,-2062.8095700,-0.0011570,0.0000000,0.0000000,88.6582870); //
    CreateDynamicObject(18766,2971.8825680,-2067.9255370,-0.0011570,0.0000000,0.0000000,-1.3416930); //
    CreateDynamicObject(18766,2962.0371090,-2067.5937500,-0.0011570,0.0000000,0.0000000,-2.6416950); //
    CreateDynamicObject(18766,2952.0068350,-2067.1584470,-0.0011570,0.0000000,0.0000000,-2.4416930); //
    CreateDynamicObject(18766,2942.5004880,-2066.7788080,-0.0011570,0.0000000,0.0000000,-0.9416940); //
    CreateDynamicObject(18766,2932.5393060,-2066.1215820,-0.0011570,0.0000000,0.0000000,-6.0416930); //
    CreateDynamicObject(18766,2928.9414060,-2065.5007320,-0.0011570,0.0000000,0.0000000,-0.9416940); //
    CreateDynamicObject(18766,2919.3625480,-2065.3291010,-0.0011570,0.0000000,0.0000000,-0.9416940); //
    CreateDynamicObject(18766,2915.1064450,-2060.7387690,-0.0011570,0.0000000,0.0000000,-93.8416510); //
    CreateDynamicObject(18766,2914.9880370,-2059.8720700,-0.0011570,0.0000000,0.0000000,-93.8416510); //
    CreateDynamicObject(615,2970.8596190,-2037.7349850,1.7280440,0.0000000,0.0000000,267.6221310); //
    CreateDynamicObject(615,2970.8679190,-2066.1269530,2.2680440,0.0000000,0.0000000,262.9220270); //
    CreateDynamicObject(8623,2974.3210440,-2043.4613030,3.5580430,0.0000000,0.0000000,279.8421930); //
    CreateDynamicObject(8623,2973.7941890,-2051.6806640,3.5580430,0.0000000,0.0000000,-87.3577800); //
    CreateDynamicObject(8623,2973.4248040,-2061.1889640,3.5580430,0.0000000,0.0000000,-87.3577800); //
    CreateDynamicObject(19273,2929.4001460,-2057.2517080,4.3180510,0.0000000,0.0000000,-90.5743780); //
    CreateDynamicObject(1215,2952.0222160,-2066.4138180,3.0680480,0.0000000,0.0000000,84.0535810); //
    CreateDynamicObject(1598,2963.7414550,-2048.4614250,2.6679080,0.0000000,0.0000000,293.0020750); //
    CreateDynamicObject(19279,2973.6162100,-2062.1862790,2.7780430,0.0000000,0.0000000,265.3089900); //
    CreateDynamicObject(19279,2973.2832030,-2057.2629390,2.7780430,0.0000000,0.0000000,265.3089900); //
    CreateDynamicObject(19279,2973.9248040,-2050.8510740,2.7780430,0.0000000,0.0000000,265.3089900); //
    CreateDynamicObject(19279,2973.9748530,-2042.5859370,2.7780430,0.0000000,0.0000000,265.3089900); //
    CreateDynamicObject(19859,2936.9296870,-2050.2343750,4.4780510,0.0000000,0.0000000,269.7228690); //
    CreateDynamicObject(19859,2951.9091790,-2061.2028800,4.4780510,0.0000000,0.0000000,269.7228690); //
    CreateDynamicObject(19859,2936.9545890,-2055.7023920,4.4780510,0.0000000,0.0000000,269.7228690); //
    CreateDynamicObject(19357,2950.5007320,-2046.9686270,4.8520460,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19387,2943.9335930,-2046.9494620,4.8520550,0.0000000,0.0000000,92.9497140); //
    CreateDynamicObject(1215,2952.9313960,-2056.7065420,3.0680480,0.0000000,0.0000000,84.0535810); //
    CreateDynamicObject(1215,2953.0546870,-2048.0329580,3.0680480,0.0000000,0.0000000,84.0535810); //
    CreateDynamicObject(1215,2953.1542960,-2039.4976800,3.0680480,0.0000000,0.0000000,84.0535810); //
    CreateDynamicObject(19786,2947.3005370,-2038.4729000,5.8820530,0.0000000,0.0000000,1.4717400); //
    CreateDynamicObject(11724,2947.2927240,-2038.6915280,3.7320480,0.0000000,0.0000000,3.0575910); //
    CreateDynamicObject(11737,2934.8522940,-2051.6376950,2.5924440,0.0000000,1.2000000,-90.3359600); //
    CreateDynamicObject(19820,2946.3051750,-2038.6839590,4.1920480,0.0000000,0.0000000,3.8983240); //
    CreateDynamicObject(19821,2946.5417480,-2038.6921380,4.2620490,0.0000000,0.0000000,3.8982240); //
    CreateDynamicObject(19823,2948.2778320,-2038.6198730,4.2820490,0.0000000,0.0000000,10.0583980); //
    CreateDynamicObject(11725,2947.2983390,-2038.7302240,3.6020480,0.0000000,0.0000000,2.3655410); //
    CreateDynamicObject(1723,2951.0244140,-2041.8530270,3.1520480,0.0000000,0.0000000,-86.5253290); //
    CreateDynamicObject(1723,2948.9958490,-2046.0969230,3.1520480,0.0000000,0.0000000,-177.2254180); //
    CreateDynamicObject(1724,2945.9658200,-2043.7738030,3.1820470,0.0000000,0.0000000,93.7079160); //
    CreateDynamicObject(2311,2947.5070800,-2043.3621820,3.2620470,0.0000000,0.0000000,4.6087010); //
    CreateDynamicObject(19825,2948.0759270,-2046.8115230,5.6520530,0.0000000,0.0000000,177.2571860); //
    CreateDynamicObject(19357,2950.3796380,-2038.3730460,3.5580460,0.0000000,0.0000000,89.0771250); //
    CreateDynamicObject(19357,2948.2768550,-2038.3935540,3.5580460,0.0000000,0.0000000,89.0771250); //
    CreateDynamicObject(19357,2945.1545410,-2038.3261710,3.5580460,0.0000000,0.0000000,89.0771250); //
    CreateDynamicObject(19357,2942.7626950,-2038.2711180,3.5580460,0.0000000,0.0000000,89.0771250); //
    CreateDynamicObject(19430,2953.3713370,-2039.2180170,3.5580460,0.0000000,0.0000000,-0.0236510); //
    CreateDynamicObject(19430,2952.4995110,-2038.4173580,3.5580460,0.0000000,0.0000000,89.9763410); //
    CreateDynamicObject(11721,2951.0327140,-2038.6099850,3.7820470,0.0000000,0.0000000,1.7355580); //
    CreateDynamicObject(19807,2948.2622070,-2043.3162840,3.8220440,0.0000000,0.0000000,358.4821160); //
    CreateDynamicObject(19623,2948.9340820,-2043.3560790,3.8420440,0.0000000,0.0000000,6.0022100); //
    CreateDynamicObject(19387,2937.4753410,-2042.9702140,4.7820550,0.0000000,0.0000000,-3.5636950); //
    CreateDynamicObject(11720,2931.2473140,-2042.7493890,3.1220490,0.0000000,0.0000000,92.4495540); //
    CreateDynamicObject(19997,2930.4079580,-2044.5150140,3.1620460,0.0000000,0.0000000,-86.8762890); //
    CreateDynamicObject(19997,2930.3571770,-2041.1806640,3.1620460,0.0000000,0.0000000,-90.4762340); //
    CreateDynamicObject(19914,2930.4128410,-2044.8641350,4.0720470,0.0000000,0.0000000,88.7927930); //
    CreateDynamicObject(19941,2930.1796870,-2040.8698730,4.0120450,0.0000000,0.0000000,88.1663280); //
    CreateDynamicObject(19941,2930.3884270,-2040.8743890,4.0020450,0.0000000,0.0000000,88.1663280); //
    CreateDynamicObject(11726,2933.0422360,-2042.6745600,7.0820610,0.0000000,0.0000000,155.8470300); //
    CreateDynamicObject(633,2950.7316890,-2045.9920650,4.1320500,0.0000000,0.0000000,261.7547300); //
    CreateDynamicObject(1608,2965.4855950,-2003.1544180,-0.1083240,0.0000000,0.0000000,30.1682790); //
    CreateDynamicObject(1608,2973.9575190,-1980.5692130,-0.1083240,0.0000000,0.0000000,30.1682790); //
    CreateDynamicObject(1608,2988.2521970,-1964.4193110,-0.1083240,0.0000000,0.0000000,30.1682790); //
    CreateDynamicObject(1608,2952.0769040,-2089.6499020,-0.2395890,0.0000000,0.0000000,-128.9486840); //
    CreateDynamicObject(1608,2966.0808100,-2100.1589350,-0.2395890,0.0000000,0.0000000,-128.9486840); //
    CreateDynamicObject(1608,2959.2248530,-2109.8813470,-0.2395890,0.0000000,0.0000000,170.6513510); //
    CreateDynamicObject(19357,2951.7597650,-2038.4479980,6.0120560,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2948.6191400,-2038.4433590,6.0120560,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2945.4489740,-2038.4376220,6.0120560,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2942.6557610,-2038.4348140,6.0120560,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(2404,2877.5859370,-2010.2889400,8.1883180,0.0000000,0.0000000,12.3154530); //
    CreateDynamicObject(2406,2876.8261710,-2010.4016110,8.2839030,0.0000000,0.0000000,4.1687530); //
    CreateDynamicObject(19357,2950.5007320,-2046.9686270,5.9920550,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2947.3574210,-2047.0659170,5.9920550,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2946.3757320,-2047.0649410,5.9920550,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2941.5734860,-2047.0596920,5.9920550,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2938.3820800,-2047.0554190,5.9920550,0.0000000,0.0000000,89.9352490); //
    CreateDynamicObject(19357,2937.3559570,-2045.3775630,4.7620530,0.0000000,0.0000000,-1.7647660); //
    CreateDynamicObject(19357,2937.3049310,-2045.3416740,5.9720640,0.0000000,0.0000000,-1.7647660); //
    CreateDynamicObject(19357,2937.5498040,-2040.6240230,5.9720640,0.0000000,0.0000000,-1.7647660); //
    CreateDynamicObject(19357,2937.5488280,-2040.5887450,4.8720550,0.0000000,0.0000000,-1.7647660); //
    CreateDynamicObject(19357,2937.0852050,-2061.7358390,4.8720550,0.0000000,0.0000000,-1.7647660); //
    CreateDynamicObject(19357,2937.0251460,-2061.0515130,4.8720550,0.0000000,0.0000000,2.4352330); //
    CreateDynamicObject(19327,2937.2211910,-2061.3801260,5.7720530,0.0000000,0.0000000,88.7945550); //
    CreateDynamicObject(19929,2937.5524900,-2061.9079580,3.1920480,0.0000000,0.0000000,-1.4621690); //
    CreateDynamicObject(19929,2937.6040030,-2060.9633780,3.2120480,0.0000000,0.0000000,-1.4621690); //
    CreateDynamicObject(19562,2937.8054190,-2059.9411620,4.2020510,0.0000000,0.0000000,91.8177180); //
    CreateDynamicObject(19562,2938.0747070,-2059.9645990,4.2020510,0.0000000,0.0000000,91.8177180); //
    CreateDynamicObject(19562,2937.5727530,-2059.9216300,4.2020510,0.0000000,0.0000000,91.8177180); //
    CreateDynamicObject(19927,2938.8479000,-2063.7924800,3.1420480,0.0000000,0.0000000,90.1453010); //
    CreateDynamicObject(19930,2937.6447750,-2063.8032220,3.1616630,0.0000000,1.1000000,89.0883710); //
    CreateDynamicObject(19916,2937.4348140,-2059.1101070,3.0520490,0.0000000,0.0000000,88.6458740); //
    CreateDynamicObject(19933,2940.1083980,-2063.9792480,3.6072390,0.0000000,0.0999990,-88.5406490); //
    CreateDynamicObject(19924,2940.1367180,-2064.1643060,6.7920620,0.0000000,0.0000000,-178.9598540); //
    CreateDynamicObject(2164,2940.6408690,-2046.7775870,3.1920470,0.0000000,0.0000000,181.2201380); //
    CreateDynamicObject(1645,2967.3537590,-2060.0209960,2.8480430,0.0000000,0.0000000,-126.7447810); //
    CreateDynamicObject(1645,2959.7861320,-2059.2092280,2.8680430,0.0000000,0.0000000,132.0550530); //
    CreateDynamicObject(1645,2960.1611320,-2041.6464840,2.8680430,0.0000000,0.0000000,29.9550640); //
    CreateDynamicObject(1645,2968.2783200,-2041.4664300,2.8680430,0.0000000,0.0000000,-45.4449380); //
    CreateDynamicObject(1963,2951.1735830,-2051.4921870,3.4420470,0.0000000,0.0000000,90.1247860); //
    CreateDynamicObject(19893,2950.8935540,-2051.9799800,3.8620460,0.0000000,0.0000000,-88.6753690); //
    CreateDynamicObject(19999,2949.3806150,-2051.9384760,3.2420470,0.0000000,0.0000000,93.6113120); //
    CreateDynamicObject(19564,2950.9470210,-2050.6806640,3.8320470,0.0000000,0.0000000,-56.8952590); //
    CreateDynamicObject(19042,2950.9025870,-2051.2934570,3.9120450,0.0000000,0.0000000,274.3513790); //
    
	// twister (Hitman)
	
	CreateDynamicObject(18450, 553.5003, -82.5913, 437.7818, 0.0000, 36.9558, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 616.5524, -82.6003, 390.3616, 0.0000, 36.9558, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 680.1129, -82.6018, 342.5417, 0.0000, 36.9558, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 735.1129, -82.5996, 330.5417, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 742.9346, -82.7075, 331.1572, 0.1509, 351.0000, 359.0474,0,-1,-1);
	CreateDynamicObject(18450, 750.5638, -83.0305, 332.9888, 0.5961, 342.0000, 358.1654,0,-1,-1);
	CreateDynamicObject(18450, 757.8124, -83.5667, 335.9913, 1.3136, 333.0000, 357.4219,0,-1,-1);
	CreateDynamicObject(18450, 764.5022, -84.3127, 340.0908, 2.2677, 324.0000, 356.8788,0,-1,-1);
	CreateDynamicObject(18450, 770.4683, -85.2639, 345.1863, 3.4100, 315.0000, 356.5900,0,-1,-1);
	CreateDynamicObject(18450, 775.5638, -86.4143, 351.1524, 4.6818, 306.0000, 356.5985,0,-1,-1);
	CreateDynamicObject(18450, 779.6633, -87.7573, 357.8421, 6.0157, 297.0000, 356.9348,0,-1,-1);
	CreateDynamicObject(18450, 782.6658, -89.2839, 365.0908, 7.3384, 288.0000, 357.6156,0,-1,-1);
	CreateDynamicObject(18450, 784.4973, -90.9854, 372.7199, 8.5736, 279.0000, 358.6421,0,-1,-1);
	CreateDynamicObject(18450, 785.1129, -92.8508, 380.5417, 9.6450, 270.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 784.4973, -94.8689, 388.3634, 10.4789, 261.0000, 1.6597,0,-1,-1);
	CreateDynamicObject(18450, 782.6657, -97.0273, 395.9925, 11.0076, 252.0000, 3.5766,0,-1,-1);
	CreateDynamicObject(18450, 779.6633, -99.3120, 403.2412, 11.1719, 243.0000, 5.6924,0,-1,-1);
	CreateDynamicObject(18450, 775.5638, -101.7100, 409.9309, 10.9242, 234.0000, 7.9369,0,-1,-1);
	CreateDynamicObject(18450, 770.4683, -104.2056, 415.8970, 10.2301, 225.0000, 10.2301,0,-1,-1);
	CreateDynamicObject(18450, 764.5022, -106.7842, 420.9925, 9.0707, 216.0000, 12.4848,0,-1,-1);
	CreateDynamicObject(18450, 757.8124, -109.4292, 425.0920, 7.4439, 207.0000, 14.6094,0,-1,-1);
	CreateDynamicObject(18450, 750.5638, -112.1245, 428.0945, 5.3648, 198.0000, 16.5113,0,-1,-1);
	CreateDynamicObject(18450, 742.9346, -114.8535, 429.9261, 2.8667, 189.0000, 18.0999,0,-1,-1);
	CreateDynamicObject(18450, 735.1129, -117.5996, 430.5417, 0.0000, 180.0000, 19.2901,0,-1,-1);
	CreateDynamicObject(18450, 727.2912, -120.3457, 429.9261, 357.1333, 171.0000, 18.0999,0,-1,-1);
	CreateDynamicObject(18450, 719.6620, -123.0747, 428.0945, 354.6352, 162.0000, 16.5113,0,-1,-1);
	CreateDynamicObject(18450, 712.4134, -125.7700, 425.0920, 352.5561, 153.0000, 14.6094,0,-1,-1);
	CreateDynamicObject(18450, 705.7236, -128.4150, 420.9925, 350.9293, 144.0000, 12.4848,0,-1,-1);
	CreateDynamicObject(18450, 699.7576, -130.9937, 415.8970, 349.7699, 135.0000, 10.2301,0,-1,-1);
	CreateDynamicObject(18450, 694.6620, -133.4893, 409.9309, 349.0758, 126.0000, 7.9369,0,-1,-1);
	CreateDynamicObject(18450, 690.5626, -135.8872, 403.2412, 348.8281, 117.0000, 5.6924,0,-1,-1);
	CreateDynamicObject(18450, 687.5601, -138.1719, 395.9925, 348.9924, 108.0000, 3.5766,0,-1,-1);
	CreateDynamicObject(18450, 685.7285, -140.3301, 388.3634, 349.5211, 99.0000, 1.6597,0,-1,-1);
	CreateDynamicObject(18450, 685.1129, -142.3481, 380.5417, 350.3550, 90.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 685.7285, -144.2139, 372.7199, 351.4264, 81.0000, 358.6421,0,-1,-1);
	CreateDynamicObject(18450, 687.5601, -145.9150, 365.0908, 352.6616, 72.0000, 357.6156,0,-1,-1);
	CreateDynamicObject(18450, 690.5626, -147.4419, 357.8421, 353.9843, 63.0000, 356.9348,0,-1,-1);
	CreateDynamicObject(18450, 694.6620, -148.7847, 351.1524, 355.3182, 54.0000, 356.5985,0,-1,-1);
	CreateDynamicObject(18450, 699.7576, -149.9355, 345.1863, 356.5900, 45.0000, 356.5900,0,-1,-1);
	CreateDynamicObject(18450, 705.7236, -150.8867, 340.0908, 357.7323, 36.0000, 356.8788,0,-1,-1);
	CreateDynamicObject(18450, 712.4134, -151.6323, 335.9913, 358.6864, 27.0000, 357.4219,0,-1,-1);
	CreateDynamicObject(18450, 719.6620, -152.1689, 332.9888, 359.4039, 18.0000, 358.1654,0,-1,-1);
	CreateDynamicObject(18450, 727.2912, -152.4917, 331.1572, 359.8491, 9.0000, 359.0474,0,-1,-1);
	CreateDynamicObject(18450, 697.7601, -82.6326, 336.7147, 0.0000, 16.3293, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 718.7543, -82.6394, 331.7536, 0.0000, 7.7349, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 676.1064, -82.6167, 345.8299, 0.0000, 24.0642, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 677.3790, -82.6135, 345.6038, 0.0000, 28.3614, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 707.7369, -82.6375, 333.9504, 0.0000, 12.0321, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 675.0910, -82.6252, 346.9226, 0.0000, 30.9397, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 692.8816, -82.6294, 338.5391, 0.0000, 19.7670, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 675.2898, -82.6199, 346.7725, 0.0000, 32.6586, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 489.9696, -82.5801, 485.5832, 0.0000, 36.9558, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 426.7872, -82.5884, 533.1097, 0.0000, 36.9558, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 355.0431, -82.5830, 557.0816, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 804.9330, -153.8135, 318.8557, 359.8491, 9.0000, 359.0474,0,-1,-1);
	CreateDynamicObject(18450, 804.9330, -153.8135, 318.8557, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 809.9463, -153.8232, 319.1711, 0.0179, 352.8000, 359.8581,0,-1,-1);
	CreateDynamicObject(18450, 814.8806, -153.8530, 320.1124, 0.0712, 345.6000, 359.7229,0,-1,-1);
	CreateDynamicObject(18450, 819.6580, -153.9019, 321.6647, 0.1580, 338.4000, 359.6010,0,-1,-1);
	CreateDynamicObject(18450, 824.2031, -153.9707, 323.8035, 0.2756, 331.2000, 359.4985,0,-1,-1);
	CreateDynamicObject(18450, 828.4444, -154.0581, 326.4951, 0.4204, 324.0000, 359.4213,0,-1,-1);
	CreateDynamicObject(18450, 832.3149, -154.1646, 329.6970, 0.5876, 316.8000, 359.3743,0,-1,-1);
	CreateDynamicObject(18450, 835.7535, -154.2896, 333.3588, 0.7715, 309.6000, 359.3617,0,-1,-1);
	CreateDynamicObject(18450, 838.7061, -154.4321, 337.4227, 0.9663, 302.4000, 359.3868,0,-1,-1);
	CreateDynamicObject(18450, 841.1260, -154.5918, 341.8246, 1.1649, 295.2000, 359.4518,0,-1,-1);
	CreateDynamicObject(18450, 842.9752, -154.7686, 346.4951, 1.3605, 288.0000, 359.5580,0,-1,-1);
	CreateDynamicObject(18450, 844.2245, -154.9609, 351.3605, 1.5457, 280.8000, 359.7052,0,-1,-1);
	CreateDynamicObject(3095, 855.9197, -152.5977, 390.2198, 1.7189, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3095, 855.9330, -159.5430, 390.0218, 1.7189, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 874.5787, -156.8101, 353.1491, 0.0000, 68.7549, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 916.4086, -156.3423, 255.1765, 356.1113, 54.0000, 357.1747,0,-1,-1);
	CreateDynamicObject(18450, 921.5041, -157.1094, 249.2354, 356.5012, 45.0000, 356.5012,0,-1,-1);
	CreateDynamicObject(18450, 927.4702, -157.8823, 244.1399, 357.0085, 36.0000, 355.8826,0,-1,-1);
	CreateDynamicObject(18450, 934.1599, -158.6606, 240.0404, 357.6253, 27.0000, 355.3393,0,-1,-1);
	CreateDynamicObject(18450, 941.4086, -159.4419, 237.0379, 358.3399, 18.0000, 354.8907,0,-1,-1);
	CreateDynamicObject(18450, 949.0377, -160.2261, 235.2063, 359.1375, 9.0000, 354.5543,0,-1,-1);
	CreateDynamicObject(18450, 956.8594, -161.0112, 234.5908, 0.0000, 0.0000, 354.3450,0,-1,-1);
	CreateDynamicObject(18450, 964.6812, -161.7964, 235.2063, 0.8625, 351.0000, 354.5543,0,-1,-1);
	CreateDynamicObject(18450, 972.3103, -162.5806, 237.0379, 1.6601, 342.0000, 354.8907,0,-1,-1);
	CreateDynamicObject(18450, 979.5590, -163.3618, 240.0404, 2.3747, 333.0000, 355.3393,0,-1,-1);
	CreateDynamicObject(18450, 986.2487, -164.1401, 244.1399, 2.9915, 324.0000, 355.8826,0,-1,-1);
	CreateDynamicObject(18450, 992.2148, -164.9131, 249.2354, 3.4988, 315.0000, 356.5012,0,-1,-1);
	CreateDynamicObject(18450, 997.3103, -165.6802, 255.2015, 3.8887, 306.0000, 357.1747,0,-1,-1);
	CreateDynamicObject(18450, 1001.4098, -166.4399, 261.8912, 4.1569, 297.0000, 357.8820,0,-1,-1);
	CreateDynamicObject(18450, 1004.4123, -167.1914, 269.1399, 4.3026, 288.0000, 358.6020,0,-1,-1);
	CreateDynamicObject(18450, 1006.2438, -167.9336, 276.7690, 4.3286, 279.0000, 359.3144,0,-1,-1);
	CreateDynamicObject(18450, 1006.8594, -168.6650, 284.5908, 4.2412, 270.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 1006.2438, -169.3843, 292.4125, 4.0494, 261.0000, 0.6414,0,-1,-1);
	CreateDynamicObject(18450, 1004.4122, -170.0908, 300.0416, 3.7647, 252.0000, 1.2233,0,-1,-1);
	CreateDynamicObject(18450, 1001.4098, -170.7837, 307.2903, 3.4011, 243.0000, 1.7329,0,-1,-1);
	CreateDynamicObject(18450, 997.3103, -171.4614, 313.9800, 2.9737, 234.0000, 2.1605,0,-1,-1);
	CreateDynamicObject(18450, 992.2148, -172.1226, 319.9461, 2.4992, 225.0000, 2.4992,0,-1,-1);
	CreateDynamicObject(18450, 986.2487, -172.7671, 325.0416, 1.9944, 216.0000, 2.7450,0,-1,-1);
	CreateDynamicObject(18450, 904.5354, -156.5425, 280.8014, 0.0000, 66.1766, 0.8594,0,-1,-1);
	CreateDynamicObject(18450, 937.0660, -174.0830, 315.6768, 0.0000, 347.1084, 359.1406,0,-1,-1);
	CreateDynamicObject(18450, 889.9211, -174.2622, 302.9003, 357.2414, 128.0914, 1.2981,0,-1,-1);
	CreateDynamicObject(18450, 887.5974, -174.7700, 301.2982, 357.3796, 100.8000, 0.4998,0,-1,-1);
	CreateDynamicObject(18450, 887.1252, -175.2280, 293.7931, 357.7180, 86.4000, 359.8564,0,-1,-1);
	CreateDynamicObject(18450, 888.5343, -175.6279, 286.4063, 358.1878, 72.0000, 359.4112,0,-1,-1);
	CreateDynamicObject(18450, 891.7361, -175.9644, 279.6020, 358.7129, 57.6000, 359.1832,0,-1,-1);
	CreateDynamicObject(18450, 896.5295, -176.2319, 273.8077, 359.2174, 43.2000, 359.1666,0,-1,-1);
	CreateDynamicObject(18450, 902.6133, -176.4258, 269.3876, 359.6328, 28.8000, 359.3321,0,-1,-1);
	CreateDynamicObject(18450, 909.6053, -176.5435, 266.6193, 359.9052, 14.4000, 359.6309,0,-1,-1);
	CreateDynamicObject(18450, 933.2430, -178.1240, 264.5322, 0.0000, 3.4377, 355.7028,0,-1,-1);
	CreateDynamicObject(18450, 978.4335, -181.3286, 262.1100, 0.0000, 0.8594, 357.4217,0,-1,-1);
	CreateDynamicObject(18450, 1037.5753, -183.0098, 262.2126, 0.0000, 358.2811, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 1180.5320, -183.3281, 228.9525, 0.0000, 18.9076, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 1254.5227, -183.3042, 203.6059, 0.0000, 18.9076, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 1328.4685, -183.2905, 178.2718, 0.0000, 18.9076, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 1400.7626, -183.8584, 153.5043, 0.0000, 18.9076, 359.1406,0,-1,-1);
	CreateDynamicObject(18450, 1391.7327, -183.7959, 157.6969, 358.5001, 15.0000, 359.4021,0,-1,-1);
	CreateDynamicObject(18450, 1396.2087, -183.8931, 156.8038, 359.2271, 7.5000, 359.1293,0,-1,-1);
	CreateDynamicObject(18450, 1400.7626, -183.9839, 156.5043, 0.0000, 0.0000, 358.9526,0,-1,-1);
	CreateDynamicObject(18450, 1405.3164, -184.0747, 156.8038, 0.7729, 352.5000, 359.1293,0,-1,-1);
	CreateDynamicObject(18450, 1409.7925, -184.1719, 157.6969, 1.4999, 345.0000, 359.4021,0,-1,-1);
	CreateDynamicObject(18450, 1414.1140, -184.2813, 159.1685, 2.1696, 337.5000, 359.7622,0,-1,-1);
	CreateDynamicObject(18450, 1418.2074, -184.4092, 161.1935, 2.7717, 330.0000, 0.1993,0,-1,-1);
	CreateDynamicObject(18450, 1422.0023, -184.5610, 163.7370, 3.2979, 322.5000, 0.7020,0,-1,-1);
	CreateDynamicObject(18450, 1425.4341, -184.7422, 166.7556, 3.7416, 315.0000, 1.2584,0,-1,-1);
	CreateDynamicObject(18450, 1428.4441, -184.9570, 170.1977, 4.0980, 307.5000, 1.8555,0,-1,-1);
	CreateDynamicObject(18450, 1430.9807, -185.2095, 174.0043, 4.3643, 300.0000, 2.4803,0,-1,-1);
	CreateDynamicObject(18450, 1433.0006, -185.5034, 178.1104, 4.5395, 292.5000, 3.1197,0,-1,-1);
	CreateDynamicObject(18450, 1434.4694, -185.8408, 182.4457, 4.6244, 285.0000, 3.7609,0,-1,-1);
	CreateDynamicObject(18450, 1435.3618, -186.2231, 186.9359, 4.6216, 277.5000, 4.3915,0,-1,-1);
	CreateDynamicObject(18450, 1435.6627, -186.6519, 191.5043, 4.5355, 270.0000, 5.0000,0,-1,-1);
	CreateDynamicObject(18450, 1435.3671, -187.1265, 196.0728, 4.3718, 262.5000, 5.5756,0,-1,-1);
	CreateDynamicObject(18450, 1434.4799, -187.6465, 200.5630, 4.1376, 255.0000, 6.1086,0,-1,-1);
	CreateDynamicObject(18450, 1433.0164, -188.2095, 204.8982, 3.8411, 247.5000, 6.5910,0,-1,-1);
	CreateDynamicObject(18450, 1431.0017, -188.8135, 209.0043, 3.4914, 240.0000, 7.0158,0,-1,-1);
	CreateDynamicObject(18450, 1428.4703, -189.4546, 212.8110, 3.0985, 232.5000, 7.3776,0,-1,-1);
	CreateDynamicObject(18450, 1425.4656, -190.1289, 216.2531, 2.6726, 225.0000, 7.6726,0,-1,-1);
	CreateDynamicObject(18450, 1422.0389, -190.8306, 219.2717, 2.2242, 217.5000, 7.8986,0,-1,-1);
	CreateDynamicObject(18450, 1418.2490, -191.5552, 221.8152, 1.7638, 210.0000, 8.0550,0,-1,-1);
	CreateDynamicObject(18450, 1414.1608, -192.2964, 223.8401, 1.3018, 202.5000, 8.1427,0,-1,-1);
	CreateDynamicObject(18450, 1409.8442, -193.0469, 225.3117, 0.8478, 195.0000, 8.1641,0,-1,-1);
	CreateDynamicObject(18450, 1405.3732, -193.8008, 226.2049, 0.4111, 187.5000, 8.1227,0,-1,-1);
	CreateDynamicObject(18450, 1400.8242, -194.5503, 226.5043, 0.0000, 180.0000, 8.0237,0,-1,-1);
	CreateDynamicObject(18450, 1396.2751, -195.2886, 226.2049, 359.6218, 172.5000, 7.8729,0,-1,-1);
	CreateDynamicObject(18450, 1391.8038, -196.0083, 225.3117, 359.2826, 165.0000, 7.6773,0,-1,-1);
	CreateDynamicObject(18450, 1387.4869, -196.7021, 223.8401, 358.9875, 157.5000, 7.4443,0,-1,-1);
	CreateDynamicObject(18450, 1383.3983, -197.3643, 221.8152, 358.7401, 150.0000, 7.1821,0,-1,-1);
	CreateDynamicObject(18450, 1379.6079, -197.9873, 219.2717, 358.5428, 142.5000, 6.8991,0,-1,-1);
	CreateDynamicObject(18450, 1376.1804, -198.5654, 216.2531, 358.3965, 135.0000, 6.6036,0,-1,-1);
	CreateDynamicObject(18450, 1373.1749, -199.0938, 212.8110, 358.3008, 127.5000, 6.3039,0,-1,-1);
	CreateDynamicObject(18450, 1370.6425, -199.5664, 209.0043, 358.2543, 120.0000, 6.0079,0,-1,-1);
	CreateDynamicObject(18450, 1368.6267, -199.9805, 204.8983, 358.2540, 112.5000, 5.7232,0,-1,-1);
	CreateDynamicObject(18450, 1367.1620, -200.3325, 200.5630, 358.2963, 105.0000, 5.4565,0,-1,-1);
	CreateDynamicObject(18450, 1366.2734, -200.6191, 196.0728, 358.3762, 97.5000, 5.2138,0,-1,-1);
	CreateDynamicObject(18450, 1365.9763, -200.8398, 191.5043, 358.4881, 90.0000, 5.0000,0,-1,-1);
	CreateDynamicObject(18450, 1366.2756, -200.9937, 186.9359, 358.6260, 82.5000, 4.8191,0,-1,-1);
	CreateDynamicObject(18450, 1367.1664, -201.0801, 182.4457, 358.7830, 75.0000, 4.6739,0,-1,-1);
	CreateDynamicObject(18450, 1368.6332, -201.1016, 178.1104, 358.9524, 67.5000, 4.5661,0,-1,-1);
	CreateDynamicObject(18450, 1399.1293, -199.9961, 106.0779, 358.9524, 66.6405, 4.5661,0,-1,-1);
	CreateDynamicObject(18450, 1422.4006, -199.9336, 57.2685, 358.6856, 63.0000, 1.3302,0,-1,-1);
	CreateDynamicObject(18450, 1425.9048, -200.0088, 51.9167, 358.7703, 54.0000, 1.1066,0,-1,-1);
	CreateDynamicObject(18450, 1429.9801, -200.0581, 47.1438, 358.8936, 45.0000, 0.8936,0,-1,-1);
	CreateDynamicObject(18450, 1434.7513, -200.0850, 43.0674, 359.0540, 36.0000, 0.6980,0,-1,-1);
	CreateDynamicObject(18450, 1440.1012, -200.0923, 39.7878, 359.2491, 27.0000, 0.5262,0,-1,-1);
	CreateDynamicObject(18450, 1445.8981, -200.0854, 37.3858, 359.4751, 18.0000, 0.3844,0,-1,-1);
	CreateDynamicObject(18450, 1451.9990, -200.0679, 35.9205, 359.7273, 9.0000, 0.2780,0,-1,-1);
	CreateDynamicObject(18450, 1458.2539, -200.0459, 35.4281, 0.0000, 0.0000, 0.2118,0,-1,-1);
	CreateDynamicObject(18450, 1464.5088, -200.0239, 35.9205, 0.2727, 351.0000, 0.2780,0,-1,-1);
	CreateDynamicObject(18450, 1470.6097, -200.0063, 37.3858, 0.5249, 342.0000, 0.3844,0,-1,-1);
	CreateDynamicObject(18450, 1476.4066, -199.9995, 39.7878, 0.7509, 333.0000, 0.5262,0,-1,-1);
	CreateDynamicObject(18450, 1481.7565, -200.0068, 43.0674, 0.9460, 324.0000, 0.6980,0,-1,-1);
	CreateDynamicObject(18450, 1486.5277, -200.0337, 47.1438, 1.1064, 315.0000, 0.8936,0,-1,-1);
	CreateDynamicObject(18450, 1490.6030, -200.0830, 51.9167, 1.2297, 306.0000, 1.1066,0,-1,-1);
	CreateDynamicObject(18450, 1493.8820, -200.1582, 57.2685, 1.3144, 297.0000, 1.3302,0,-1,-1);
	CreateDynamicObject(18450, 1496.2838, -200.2622, 63.0674, 1.3605, 288.0000, 1.5579,0,-1,-1);
	CreateDynamicObject(18450, 1497.7495, -200.3965, 69.1707, 1.3688, 279.0000, 1.7832,0,-1,-1);
	CreateDynamicObject(18450, 1503.0677, -200.3877, 75.4281, 1.3411, 270.0000, 2.0000,0,-1,-1);
	CreateDynamicObject(1225, 1502.7780, -201.3359, 115.8307, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1225, 1503.0697, -206.9048, 115.7001, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1225, 1502.6503, -195.7656, 115.9611, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1225, 1502.6545, -198.4053, 115.8828, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1225, 1502.8709, -204.2427, 115.7626, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1225, 1502.8073, -202.7759, 115.7925, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1225, 1502.7211, -199.9233, 115.8638, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1225, 1502.6077, -197.0635, 115.9155, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1225, 1502.9508, -205.6172, 115.7304, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 352.5808, -82.5942, 559.9935, 0.0000, 269.7591, 180.4818,0,-1,-1);
	CreateDynamicObject(18450, 355.0443, -87.4009, 565.2955, 240.5383, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(18450, 355.0446, -77.8848, 565.2695, 120.3212, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3461, 394.8508, -88.8179, 559.2024, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3461, 394.8649, -76.4055, 559.2024, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1217, 391.3192, -88.9509, 558.0488, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1217, 369.9450, -76.1333, 558.0488, 0.0000, 0.0000, 111.7268,0,-1,-1);
	CreateDynamicObject(1634, -1341.979126, -2023.818115, 7.599393, 0.0000, 0.0000, 22.5000,0,-1,-1);
	CreateDynamicObject(1260, -1352.668823, -1999.702515, 8.362857, 0.0000, 0.0000, 22.5000,0,-1,-1);
	CreateDynamicObject(18367, -1357.698486, -1988.745239, 10.271055, 0.0000, 0.0000, 202.5000,0,-1,-1);
	CreateDynamicObject(1634, -1368.848633, -1963.047729, 14.045984, 0.0000, 353.9839, 22.5000,0,-1,-1);
	CreateDynamicObject(1634, -1370.109253, -1961.196899, 15.507805, 14.6104, 341.9518, 34.5321,0,-1,-1);
	CreateDynamicObject(1634, -1371.786743, -1959.747314, 18.248894, 43.8313, 330.7792, 38.8293,0,-1,-1);
	CreateDynamicObject(1634, -1373.218262, -1959.780884, 20.463421, 50.7067, 317.0282, 60.4699,0,-1,-1);
	CreateDynamicObject(984, -1349.032959, -2002.911865, 11.304787, 0.0000, 0.0000, 22.5000,0,-1,-1);
	CreateDynamicObject(984, -1352.385742, -1994.869507, 11.304787, 0.0000, 0.0000, 22.5000,0,-1,-1);
	CreateDynamicObject(984, -1352.069702, -2003.619507, 11.304787, 0.0000, 0.0000, 22.5000,0,-1,-1);
	CreateDynamicObject(5189, -1390.451416, -1972.348877, 13.529857, 0.0000, 0.0000, 33.7500,0,-1,-1);
	CreateDynamicObject(18367, -1370.042969, -2004.153931, -2.199245, 323.9037, 357.4217, 209.3756,0,-1,-1);
	CreateDynamicObject(4848, -1373.605347, -2003.387085, -3.207672, 0.0000, 0.0000, 300.3896,0,-1,-1);
	CreateDynamicObject(1634, -1375.200317, -2015.153564, 1.318170, 0.0000, 0.0000, 123.7500,0,-1,-1);
	CreateDynamicObject(4141, -1394.294067, -2039.453979, 2.964079, 0.0000, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(897, -1378.132446, -1973.969849, 17.950712, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(17071, -1399.276611, -1980.747314, 19.804813, 0.0000, 0.0000, 56.2500,0,-1,-1);
	CreateDynamicObject(647, -1393.883179, -1979.307129, 21.043346, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(728, -1395.060913, -1977.473145, 20.545986, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(762, -1395.186646, -1983.521362, 22.078814, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1634, -1389.350586, -2018.575562, 7.298540, 0.0000, 0.0000, 67.5000,0,-1,-1);
	CreateDynamicObject(1634, -1392.641968, -2018.134521, 9.920675, 17.1887, 352.2651, 83.9066,0,-1,-1);
	CreateDynamicObject(1634, -1394.838379, -2018.653442, 12.798766, 31.7992, 335.0763, 95.9386,0,-1,-1);
	CreateDynamicObject(975, -1399.680176, -2030.741699, 15.927584, 0.0000, 0.0000, 303.7500,0,-1,-1);
	CreateDynamicObject(975, -1395.088257, -2037.575928, 15.929564, 0.0000, 0.0000, 303.7500,0,-1,-1);
	CreateDynamicObject(975, -1390.203247, -2044.869019, 15.922012, 0.0000, 0.0000, 303.7500,0,-1,-1);
	CreateDynamicObject(975, -1387.317383, -2049.229736, 15.920019, 0.0000, 0.0000, 303.7500,0,-1,-1);
	CreateDynamicObject(13666, -1391.114014, -2043.795776, 19.110136, 0.0000, 0.0000, 38.0473,0,-1,-1);
	CreateDynamicObject(1634, -1395.186157, -2040.938477, 15.153923, 0.0000, 0.0000, 29.4528,0,-1,-1);
	CreateDynamicObject(1634, -1396.710693, -2038.112183, 17.767622, 23.2048, 1.7189, 29.4528,0,-1,-1);
	CreateDynamicObject(13666, -1416.867310, -2033.999023, 34.031418, 0.0000, 341.9518, 207.2522,0,-1,-1);
	CreateDynamicObject(13666, -1420.261719, -2035.163940, 35.129578, 0.0000, 341.9518, 207.2522,0,-1,-1);
	CreateDynamicObject(13666, -1423.641235, -2036.309937, 36.265648, 0.0000, 341.9518, 207.2522,0,-1,-1);
	CreateDynamicObject(13666, -1426.954102, -2037.468018, 37.335335, 0.0000, 341.9518, 207.2522,0,-1,-1);
	CreateDynamicObject(13666, -1430.467773, -2038.666992, 38.476498, 0.0000, 341.9518, 207.2522,0,-1,-1);
	CreateDynamicObject(13666, -1433.805908, -2039.757446, 39.635185, 0.0000, 341.9518, 207.2522,0,-1,-1);
	CreateDynamicObject(13666, -1437.087646, -2040.841919, 40.745441, 0.0000, 341.9518, 207.2522,0,-1,-1);
	CreateDynamicObject(13666, -1440.468872, -2041.946167, 41.893753, 0.0000, 341.9518, 207.2522,0,-1,-1);
	CreateDynamicObject(13666, -1443.825562, -2043.054688, 43.047981, 0.0000, 341.9518, 207.2522,0,-1,-1);
	CreateDynamicObject(3406, -1449.221313, -2038.036377, 36.781628, 0.0000, 0.0000, 112.5000,0,-1,-1);
	CreateDynamicObject(3406, -1452.392700, -2030.302246, 36.755451, 0.0000, 0.0000, 112.5000,0,-1,-1);
	CreateDynamicObject(3615, -1456.869141, -2024.775635, 39.852066, 0.0000, 0.0000, 21.5632,0,-1,-1);
	CreateDynamicObject(18367, -1457.504028, -2024.889038, 38.989117, 337.6546, 1.7189, 300.1577,0,-1,-1);
	CreateDynamicObject(3406, -1485.191284, -2040.719238, 52.163368, 0.0000, 0.0000, 206.8745,0,-1,-1);
	CreateDynamicObject(3406, -1492.418579, -2044.369019, 52.137115, 0.0000, 0.0000, 206.8745,0,-1,-1);
	CreateDynamicObject(4113, -1505.782104, -2024.069336, 18.097473, 0.0000, 0.0000, 129.8433,0,-1,-1);
	CreateDynamicObject(4113, -1531.578125, -2036.758789, 18.253225, 0.0000, 359.1406, 129.8433,0,-1,-1);
	CreateDynamicObject(976, -1504.302124, -2036.694946, 54.289001, 0.0000, 0.0000, 25.0783,0,-1,-1);
	CreateDynamicObject(976, -1504.249268, -2036.975952, 54.289124, 0.0000, 0.0000, 292.5000,0,-1,-1);
	CreateDynamicObject(976, -1496.326782, -2032.978638, 54.290100, 0.0000, 0.0000, 25.0783,0,-1,-1);
	CreateDynamicObject(13666, -1493.589111, -2031.612427, 58.978714, 0.0000, 0.0000, 301.9539,0,-1,-1);
	CreateDynamicObject(975, -1490.576538, -2025.446045, 55.803413, 0.0000, 0.0000, 299.3755,0,-1,-1);
	CreateDynamicObject(976, -1501.762329, -2043.302002, 54.015110, 29.2208, 0.0000, 340.1557,0,-1,-1);
	CreateDynamicObject(17565, -1520.504639, -2035.294067, 55.941605, 0.0000, 0.0000, 295.0783,0,-1,-1);
	CreateDynamicObject(976, -1518.828369, -2044.039185, 54.243675, 0.0000, 0.0000, 295.0783,0,-1,-1);
	CreateDynamicObject(976, -1522.080566, -2036.550659, 54.361557, 0.0000, 0.0000, 295.0783,0,-1,-1);
	CreateDynamicObject(976, -1525.370728, -2029.268799, 54.372475, 0.0000, 0.0000, 295.0783,0,-1,-1);
	CreateDynamicObject(976, -1528.970825, -2021.580444, 54.397598, 0.0000, 0.0000, 295.0783,0,-1,-1);
	CreateDynamicObject(976, -1531.593994, -2016.272339, 54.278290, 0.0000, 0.0000, 295.0783,0,-1,-1);
	CreateDynamicObject(17071, -1520.783203, -2035.954468, 53.170959, 0.0000, 0.0000, 22.5000,0,-1,-1);
	CreateDynamicObject(762, -1519.162964, -2041.435425, 55.147514, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3406, -1528.903564, -2064.390137, 59.650589, 0.0000, 0.0000, 296.8745,0,-1,-1);
	CreateDynamicObject(3406, -1525.614990, -2070.896973, 59.666985, 0.0000, 0.0000, 296.8745,0,-1,-1);
	CreateDynamicObject(3406, -1522.080322, -2077.888428, 59.608498, 0.0000, 0.0000, 296.8745,0,-1,-1);
	CreateDynamicObject(13593, -1519.943359, -2082.248047, 62.247162, 0.0000, 0.0000, 204.2961,0,-1,-1);
	CreateDynamicObject(16640, -1510.295288, -2090.484131, 67.056953, 0.0000, 0.0000, 295.1557,0,-1,-1);
	CreateDynamicObject(3375, -1510.509277, -2062.440186, 66.113495, 0.0000, 0.0000, 112.5000,0,-1,-1);
	CreateDynamicObject(10009, -1533.057983, -2055.926758, 58.412109, 0.0000, 0.0000, 292.5000,0,-1,-1);
	CreateDynamicObject(3375, -1526.068237, -2024.116333, 66.362946, 0.0000, 0.0000, 112.5000,0,-1,-1);
	CreateDynamicObject(4882, -1546.830322, -2026.426880, 68.741997, 5.1566, 0.0000, 202.5000,0,-1,-1);
	CreateDynamicObject(980, -1562.268799, -2045.744263, 65.583290, 272.3375, 0.0000, 297.7340,0,-1,-1);
	CreateDynamicObject(980, -1556.447021, -2056.400391, 63.256142, 272.3375, 0.0000, 297.7340,0,-1,-1);
	CreateDynamicObject(980, -1551.478882, -2065.779053, 60.796173, 272.3375, 0.0000, 297.7340,0,-1,-1);
	CreateDynamicObject(980, -1546.236206, -2075.834473, 58.653275, 272.3375, 0.0000, 297.7340,0,-1,-1);
	CreateDynamicObject(10009, -1546.784180, -2080.181641, 63.152832, 0.0000, 0.0000, 67.5001,0,-1,-1);
	CreateDynamicObject(10009, -1542.088501, -2077.390625, 70.682312, 0.0000, 0.0000, 191.2501,0,-1,-1);
	CreateDynamicObject(976, -1553.061035, -2077.190430, 73.578239, 49.8473, 0.8594, 227.6557,0,-1,-1);
	CreateDynamicObject(3406, -1554.837891, -2083.437744, 71.820602, 0.0000, 0.0000, 118.7481,0,-1,-1);
	CreateDynamicObject(4564, -1569.028809, -2118.620117, 30.456724, 0.0000, 0.0000, 299.3755,0,-1,-1);
	CreateDynamicObject(1634, -1568.137451, -2101.102783, 74.797768, 0.0000, 0.0000, 123.7499,0,-1,-1);
	CreateDynamicObject(1634, -1678.613770, -2175.921631, 139.020615, 29.2208, 359.1406, 123.7499,0,-1,-1);
	CreateDynamicObject(1634, -1678.932129, -2176.298584, 144.489380, 69.6143, 0.8594, 123.7499,0,-1,-1);
	CreateDynamicObject(1634, -1676.165527, -2174.360352, 151.221222, 110.8672, 0.8594, 123.7499,0,-1,-1);
	CreateDynamicObject(1634, -1671.174683, -2171.409180, 154.277267, 139.2288, 0.8594, 123.7499,0,-1,-1);
	CreateDynamicObject(8661, -1654.996216, -2155.416748, 147.285675, 0.0000, 0.0000, 28.5934,0,-1,-1);
	CreateDynamicObject(13666, -1654.933594, -2154.779053, 152.166214, 0.0000, 0.0000, 115.9379,0,-1,-1);
	CreateDynamicObject(976, -1657.352173, -2156.114258, 147.222641, 0.0000, 0.0000, 26.7972,0,-1,-1);
	CreateDynamicObject(976, -1665.102905, -2160.026855, 147.272629, 0.0000, 0.0000, 26.7972,0,-1,-1);
	CreateDynamicObject(976, -1672.851440, -2164.088135, 147.248123, 0.0000, 0.0000, 26.7972,0,-1,-1);
	CreateDynamicObject(976, -1649.888916, -2152.181885, 147.297867, 0.0000, 0.0000, 26.7972,0,-1,-1);
	CreateDynamicObject(976, -1642.857544, -2147.828613, 148.697403, 0.0000, 0.0000, 26.7972,0,-1,-1);
	CreateDynamicObject(9946, -1331.581665, -2042.190918, 8.694613, 353.1245, 0.0000, 19.8443,0,-1,-1);
	CreateDynamicObject(3494, -1344.322021, -2027.219482, 10.606881, 0.0000, 0.0000, 18.9849,0,-1,-1);
	CreateDynamicObject(3494, -1336.509155, -2024.489502, 10.617052, 0.0000, 0.0000, 21.4859,0,-1,-1);
	CreateDynamicObject(2780, -1356.561401, -2039.115234, 1.891328, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(2780, -1319.739258, -2024.941650, 1.540995, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(622, -1358.242310, -2040.015869, 7.670699, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(622, -1319.536743, -2022.683960, 7.289242, 0.0000, 0.0000, 67.5000,0,-1,-1);
	CreateDynamicObject(624, -1355.402344, -2041.707153, 7.147227, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(620, -1315.840820, -2031.641724, 9.440929, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(620, -1358.073975, -2034.344360, 6.905462, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(620, -1416.350220, -2024.968628, 27.812489, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(620, -1514.189087, -2008.337402, 54.195881, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(762, -1318.293091, -2025.005859, 7.181517, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(762, -1355.276733, -2038.481689, 9.433815, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(1634, -1641.134399, -2142.153076, 148.207901, 5.1566, 358.2811, 295.1556,0,-1,-1);
	CreateDynamicObject(3873, -1618.000488, -2128.569336, 134.933838, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3279, -1620.592285, -2133.072998, 152.357452, 0.0000, 0.0000, 202.5000,0,-1,-1);
	CreateDynamicObject(5153, -1616.200317, -2131.389893, 169.283371, 359.1406, 18.0482, 21.6406,0,-1,-1);
	CreateDynamicObject(12912, -1608.912476, -2129.057617, 158.631546, 0.0000, 0.0000, 110.7038,0,-1,-1);
	CreateDynamicObject(2653, -1610.451050, -2128.858154, 169.165283, 0.0000, 0.0000, 292.5000,0,-1,-1);
	CreateDynamicObject(5153, -1624.771729, -2116.215576, 151.216568, 0.0000, 0.0000, 297.7340,0,-1,-1);
	CreateDynamicObject(5153, -1631.947754, -2128.503662, 151.266556, 0.0000, 0.0000, 5.2340,0,-1,-1);
	CreateDynamicObject(3406, -1601.967285, -2125.888184, 165.206223, 0.0000, 34.3775, 17.4981,0,-1,-1);
	CreateDynamicObject(3406, -1595.212036, -2123.753906, 160.386490, 0.0000, 34.3775, 17.4981,0,-1,-1);
	CreateDynamicObject(3406, -1588.418457, -2121.593750, 155.504272, 0.0000, 34.3775, 17.4981,0,-1,-1);
	CreateDynamicObject(3406, -1584.375366, -2120.325195, 153.599213, 0.0000, 20.6265, 17.4981,0,-1,-1);
	CreateDynamicObject(3406, -1581.107544, -2119.312744, 153.359695, 0.0000, 5.1566, 17.4981,0,-1,-1);
	CreateDynamicObject(3406, -1581.761719, -2119.505127, 153.535187, 0.0000, 353.9839, 17.4981,0,-1,-1);
	CreateDynamicObject(3406, -1579.551636, -2118.816162, 153.600616, 0.0000, 342.8113, 17.4981,0,-1,-1);
	CreateDynamicObject(17071, -1581.638916, -2124.708008, 140.225525, 0.0000, 0.0000, 315.0000,0,-1,-1);
	CreateDynamicObject(880, -1614.096313, -2142.449463, 152.115601, 0.0000, 0.0000, 337.5000,0,-1,-1);
	CreateDynamicObject(896, -1606.484497, -2132.934082, 149.617599, 0.0000, 0.0000, 292.5000,0,-1,-1);
	CreateDynamicObject(880, -1640.714600, -2155.922119, 155.461914, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(898, -1640.607666, -2150.562988, 147.446335, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(623, -1562.012817, -2104.718750, 140.019089, 0.0000, 0.0000, 135.0000,0,-1,-1);
	CreateDynamicObject(623, -1567.600098, -2128.908691, 140.019089, 0.0000, 0.0000, 326.2500,0,-1,-1);
	CreateDynamicObject(624, -1560.652832, -2106.692139, 139.110275, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(624, -1585.910767, -2131.616455, 143.458145, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(624, -1610.760376, -2141.274170, 150.282700, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(624, -1605.483765, -2132.541992, 154.667450, 0.0000, 0.0000, 78.7500,0,-1,-1);
	CreateDynamicObject(800, -1610.604980, -2141.548584, 154.817062, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(762, -1604.086304, -2136.823975, 153.874847, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(762, -1585.034424, -2128.164795, 142.198639, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(762, -1639.098633, -2152.051025, 154.971603, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(2780, -1551.459351, -2117.143066, 136.991211, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3461, -1556.065063, -2121.650635, 141.320801, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3461, -1546.592285, -2111.846680, 141.316223, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3461, -1544.879150, -2105.171631, 141.320801, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3461, -1551.914185, -2103.127930, 141.316223, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(3461, -1559.132813, -2104.546143, 141.316223, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(8483, -1580.585205, -2122.835449, 145.288361, 0.0000, 0.0000, 19.1396,0,-1,-1);
	CreateDynamicObject(3461, -1573.837280, -2123.950195, 146.507980, 359.1406, 91.9597, 24.0642,0,-1,-1);
	CreateDynamicObject(3461, -1575.244019, -2119.900391, 146.682770, 22.3454, 109.1485, 12.8916,0,-1,-1);
	CreateDynamicObject(3528, -1576.596680, -2122.867676, 141.567642, 0.0000, 315.3093, 22.5000,0,-1,-1);
	CreateDynamicObject(9833, -1560.728760, -2111.782471, 136.198334, 0.0000, 0.0000, 11.2500,0,-1,-1);
	CreateDynamicObject(5153, -1549.538086, -2018.435425, 72.197731, 0.0000, 351.4056, 292.5000,0,-1,-1);
	CreateDynamicObject(11495, -1555.425415, -2078.655273, 73.643959, 0.0000, 0.0000, 92.3553,0,-1,-1);
	CreateDynamicObject(1634, -1602.510376, -2121.224609, 74.872772, 0.0000, 0.0000, 123.7499,0,-1,-1);
	CreateDynamicObject(4006, -1624.975342, -2155.349854, 46.568546, 0.0000, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(4006, -1624.781006, -2155.000977, 69.756241, 0.0000, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(18367, -1624.372803, -2141.514160, 74.648460, 7.7349, 0.8594, 23.3595,0,-1,-1);
	CreateDynamicObject(13666, -1607.099487, -2159.204590, 80.700615, 344.5301, 0.0000, 295.0785,0,-1,-1);
	CreateDynamicObject(1634, -1611.158447, -2163.009766, 77.956627, 20.6265, 0.0000, 115.1555,0,-1,-1);
	CreateDynamicObject(1634, -1627.460938, -2153.312256, 83.955078, 20.6265, 345.3896, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1629.370483, -2151.672607, 87.286255, 42.9718, 332.4980, 44.9999,0,-1,-1);
	CreateDynamicObject(1634, -1631.359131, -2152.082031, 92.126976, 61.0199, 313.5905, 70.0008,0,-1,-1);
	CreateDynamicObject(10948, -1709.069580, -2177.804932, 98.811829, 0.0000, 0.0000, 123.7499,0,-1,-1);
	CreateDynamicObject(1634, -1647.198853, -2164.747070, 92.335686, 8.5944, 359.1406, 123.8272,0,-1,-1);
	CreateDynamicObject(9578, -1713.177856, -2203.152588, 99.849884, 0.0000, 0.0000, 303.7500,0,-1,-1);
	CreateDynamicObject(1634, -1669.383667, -2182.325439, 100.459702, 8.5944, 359.1406, 123.8272,0,-1,-1);
	CreateDynamicObject(1634, -1684.587036, -2193.760010, 104.631577, 8.5944, 359.1406, 123.8272,0,-1,-1);
	CreateDynamicObject(1634, -1699.396362, -2204.022461, 107.990952, 8.5944, 359.1406, 123.8272,0,-1,-1);
	CreateDynamicObject(1634, -1715.827271, -2214.591797, 110.342514, 8.5944, 359.1406, 123.8272,0,-1,-1);
	CreateDynamicObject(1634, -1736.849365, -2211.424805, 114.051895, 8.5944, 359.1406, 303.8272,0,-1,-1);
	CreateDynamicObject(987, -1737.689331, -2222.775391, 117.162529, 0.0000, 0.0000, 303.7500,0,-1,-1);
	CreateDynamicObject(987, -1744.437256, -2212.724121, 117.164772, 0.0000, 0.0000, 303.7500,0,-1,-1);
	CreateDynamicObject(987, -1720.576416, -2224.655518, 113.404572, 0.0000, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(1634, -1704.693848, -2151.648926, 118.515358, 4.2972, 359.1406, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1707.393555, -2148.834229, 122.334076, 34.3775, 359.1406, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1708.697510, -2147.814209, 126.628654, 60.1605, 0.0000, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1708.875244, -2148.898926, 132.208359, 91.9597, 0.0000, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1708.183960, -2151.015137, 135.660339, 107.4295, 0.0000, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1706.733032, -2154.008789, 138.361465, 130.6344, 0.0000, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1704.432251, -2158.161865, 139.857437, 146.9638, 0.0000, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1701.697388, -2163.579590, 139.262863, 174.4660, 357.4217, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1700.763428, -2166.522705, 137.618011, 191.6548, 357.4217, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1699.902100, -2169.524414, 134.753677, 210.5626, 357.4217, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1699.906006, -2171.594482, 128.372894, 244.9400, 358.2811, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1701.464233, -2171.008057, 124.657585, 271.5823, 358.2811, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1703.803345, -2168.854492, 121.845032, 293.0680, 358.2811, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1707.285889, -2165.175537, 119.744827, 319.7103, 358.2811, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1710.032959, -2161.879150, 120.254372, 346.3526, 358.2811, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1713.409180, -2158.137939, 122.527458, 9.5574, 358.2811, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1715.285278, -2156.167725, 125.839859, 35.3404, 358.2811, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1716.920532, -2154.989502, 131.249176, 52.5292, 358.2811, 33.8272,0,-1,-1);
	CreateDynamicObject(1634, -1718.092041, -2155.193359, 137.462936, 62.8424, 326.4820, 63.0480,0,-1,-1);
	CreateDynamicObject(987, -1724.640259, -2200.378174, 117.293045, 0.0000, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(987, -1715.134888, -2194.554932, 117.293045, 0.0000, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(987, -1706.158447, -2188.837402, 117.400078, 0.0000, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(987, -1697.564697, -2182.898926, 117.293045, 0.0000, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(11495, -1679.702393, -2190.466309, 117.059990, 0.0000, 0.0000, 33.7500,0,-1,-1);
	CreateDynamicObject(17068, -1681.098633, -2191.379395, 117.065552, 0.0000, 0.0000, 213.7500,0,-1,-1);
	CreateDynamicObject(17068, -1681.902832, -2202.411865, 117.099648, 0.0000, 0.0000, 303.7500,0,-1,-1);
	CreateDynamicObject(17068, -1692.190796, -2203.793945, 117.163742, 0.0000, 0.0000, 215.2284,0,-1,-1);
	CreateDynamicObject(987, -1692.004028, -2190.255859, 117.293045, 0.0000, 0.0000, 123.7500,0,-1,-1);
	CreateDynamicObject(1634, -1716.745850, -2166.047852, 142.390366, 4.2972, 359.1406, 303.8272,0,-1,-1);
	CreateDynamicObject(8661, -1690.924561, -2142.035156, 142.317963, 0.0000, 0.0000, 302.1085,0,-1,-1);
	CreateDynamicObject(11495, -1668.229492, -2170.144043, 135.537659, 0.0000, 0.0000, 303.7500,0,-1,-1);
	CreateDynamicObject(17068, -1669.189087, -2168.666748, 135.534760, 0.0000, 0.0000, 123.7499,0,-1,-1);
	CreateDynamicObject(8661, -1691.716553, -2142.644287, 139.465866, 92.8192, 0.0000, 302.1085,0,-1,-1);
	CreateDynamicObject(8661, -1689.895752, -2146.201416, 139.103638, 91.1003, 0.0000, 117.2610,0,-1,-1);
	CreateDynamicObject(13666, -1692.705688, -2140.970703, 148.134171, 0.0000, 0.0000, 210.3124,0,-1,-1);
	CreateDynamicObject(11495, -1666.861084, -2146.014648, 142.161499, 0.0000, 0.0000, 300.3123,0,-1,-1);
	CreateDynamicObject(11495, -1667.751709, -2144.594727, 142.261780, 0.0000, 0.0000, 120.3122,0,-1,-1);
	CreateDynamicObject(18367, -1659.091431, -2140.460205, 141.996902, 356.5623, 347.9679, 121.0943,0,-1,-1);
	CreateDynamicObject(18367, -1649.728271, -2134.511963, 143.927917, 23.2048, 347.9679, 31.0943,0,-1,-1);
	CreateDynamicObject(18367, -1643.227051, -2146.451172, 139.572586, 16.3293, 12.0321, 315.0000,0,-1,-1);
	CreateDynamicObject(744, -1645.376099, -2134.568359, 143.884338, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(744, -1640.772217, -2151.395264, 139.242249, 0.0000, 0.0000, 0.0000,0,-1,-1);
	CreateDynamicObject(896, -1684.483887, -2157.383789, 143.026215, 0.0000, 0.0000, 315.0000,0,-1,-1);
	CreateDynamicObject(762, -1684.048096, -2154.963135, 145.790512, 0.0000, 0.0000, 292.9639,0,-1,-1);


	//PlayazMansion
	CreateDynamicObject(3472,1268.8928200,-833.5387000,82.1406300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,1294.4487300,-833.4871800,82.1406300,0.0000000,0.0000000,5.9549900); //
	CreateDynamicObject(3877,1277.8941700,-787.9999400,97.1211900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,1304.5798300,-787.9086900,97.4280400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2921,1258.5969200,-771.3891000,95.0779300,0.0000000,13.8949900,354.0450100); //
	CreateDynamicObject(2921,1259.5551800,-788.5369900,94.8637500,0.0000000,13.8922100,83.3642600); //
	CreateDynamicObject(2921,1301.2763700,-797.8304400,87.1061900,0.0000000,346.1022000,113.1392800); //
	CreateDynamicObject(2886,1296.2015400,-907.9275500,100.8308600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2886,1240.1070600,-767.0814800,93.2204900,0.0000000,0.0000000,181.3499600); //
	CreateDynamicObject(2985,1274.6892100,-837.8896500,76.2711300,0.0000000,0.0000000,-91.0599800); //
	CreateDynamicObject(1775,1292.6593000,-792.5612800,88.4095400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2600,1262.5592000,-787.5050700,95.7354000,0.0000000,0.0000000,1.9849900); //
	CreateDynamicObject(1478,1246.6013200,-737.9901100,94.4979900,0.0000000,0.0000000,210.4100300); //
	CreateDynamicObject(1290,1358.5023200,-689.9007000,96.6142100,0.0000000,0.0000000,278.6149900); //
	CreateDynamicObject(1257,1328.1905500,-918.2971200,37.2692900,0.0000000,0.0000000,83.3700300); //
	CreateDynamicObject(1216,1322.7760000,-913.0728100,36.9663700,0.0000000,0.0000000,346.1050100); //
	CreateDynamicObject(1214,1312.9526400,-910.9836400,37.3463900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1214,1315.3055400,-911.2066700,37.1017000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1214,1319.2994400,-911.5507200,36.6910900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1214,1327.0233200,-877.2186300,38.5781300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1214,1331.9542200,-877.1771200,38.5781300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1214,1329.2529300,-877.3071300,38.5781300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3876,1276.4841300,-773.3400900,94.9578400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1215,1240.1539300,-768.1197500,91.4576600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1215,1250.9700900,-768.2063000,91.5189400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1215,1294.9296900,-800.2651400,87.8768200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1215,1294.7183800,-792.2537800,87.8768200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18014,1258.0412600,-807.0351600,87.7447100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3810,1267.2347400,-813.5402200,86.5157700,0.0000000,0.0000000,266.7049900); //
	CreateDynamicObject(3802,1264.4984100,-813.4978600,86.4729800,0.0000000,0.0000000,272.6599700); //
	CreateDynamicObject(1364,1304.9943800,-797.0222800,83.9247400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3517,1229.0408900,-790.8356300,94.7597000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1810,1293.8066400,-825.7820400,82.1406300,0.0000000,0.0000000,398.0098900); //
	CreateDynamicObject(2226,1294.8743900,-829.2983400,83.1376200,0.0000000,0.0000000,270.6751700); //
	CreateDynamicObject(1481,1294.2922400,-826.9157700,82.8437500,0.0000000,0.0000000,270.7149400); //
	CreateDynamicObject(1594,1288.5782500,-830.2290600,82.6176100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(642,1288.5528600,-830.4447000,83.5638500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1669,1288.6358600,-830.3311200,83.2339900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1667,1288.8007800,-830.4245600,83.1418900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1667,1288.7027600,-830.1291500,83.1698400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(11245,1301.8364300,-797.1071800,-2147483648.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1616,1294.9113800,-801.1192600,91.6588900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1646,1284.1464800,-831.8945300,82.4780600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3031,1259.7172900,-772.9352400,96.5668900,0.0000000,0.0000000,312.3599900); //
	CreateDynamicObject(946,1274.5841100,-832.9227300,84.3435500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2114,1274.0889900,-832.8565100,82.2869300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(10244,1287.5844700,-836.0297200,78.5702200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3666,1270.8295900,-838.4992700,76.8103000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3666,1266.4445800,-822.4556300,76.3555500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3666,1290.1951900,-829.1720000,76.3221200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2773,1281.2830800,-833.7713600,76.7883000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(967,1250.6262200,-764.2943100,91.4576600,0.0000000,0.0000000,90.0400400); //
	CreateDynamicObject(3802,1259.1018100,-792.6452000,89.0002800,0.0000000,0.0000000,272.6599700); //
	CreateDynamicObject(3810,1261.7312000,-792.6937300,88.9321200,0.0000000,0.0000000,266.7049900); //
	CreateDynamicObject(1775,1293.1472200,-812.6197500,84.2032000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(673,1254.5230700,-760.2423700,91.9240800,3.1415900,0.0000000,2.4636600); //
	CreateDynamicObject(2886,1300.5039100,-797.9296300,84.6603900,4.0200000,-1.8600000,-3.9300000); //
	CreateDynamicObject(2011,1297.5731200,-803.1290300,83.1271100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2011,1297.4466600,-805.9765000,83.1271100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2600,1290.7395000,-812.2857700,88.1122400,0.0000000,0.0000000,1.9849900); //
	CreateDynamicObject(1255,1263.6903100,-810.6586300,87.8724400,0.0000000,0.0000000,272.6599700); //
	CreateDynamicObject(1255,1266.1546600,-810.7786300,87.8724400,0.0000000,0.0000000,272.6599700); //
	CreateDynamicObject(1646,1282.6624800,-831.9620400,82.4780600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2921,1256.3120100,-801.6004600,86.7627300,0.0000000,13.8922100,83.3642600); //
	CreateDynamicObject(2886,1259.1206100,-782.7678800,92.6897200,0.0000000,0.0000000,267.3898600); //
	CreateDynamicObject(8572,1250.6478300,-780.3639500,91.0910000,0.0000000,0.0000000,-90.6600000); //
	CreateDynamicObject(8613,1257.0642100,-786.3214700,90.2109200,-70.9200100,1.9200000,270.7801800); //
	CreateDynamicObject(644,1253.2912600,-780.5313100,91.3053500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(644,1253.3806200,-783.9430500,91.3053500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3517,1229.1687000,-781.6859100,96.4260300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3510,1233.9730200,-819.8766500,83.8425600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3510,1225.7713600,-819.2940100,83.8425600,0.0000000,0.0000000,121.7400100); //
	CreateDynamicObject(710,1255.9304200,-828.8604100,89.5937500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(710,1263.4140600,-829.1655300,89.5937500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(673,1311.5930200,-775.4140600,86.7785900,356.8584000,0.0000000,-3.0595100); //
	CreateDynamicObject(673,1316.3338600,-788.1898200,81.3484900,356.8584000,0.0000000,-3.0595100); //
	CreateDynamicObject(673,1316.2146000,-801.2358400,77.1260300,356.8584000,0.0000000,-3.0595100); //
	CreateDynamicObject(710,1304.6976300,-826.9494000,89.6604100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(710,1297.1582000,-827.2160600,89.6604100,0.0000000,0.0000000,113.4000200); //
	CreateDynamicObject(642,1262.5731200,-803.6056500,88.7248900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1594,1263.9245600,-805.2105700,87.7708900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3517,1230.4710700,-772.9544700,97.8552800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3517,1232.6200000,-764.6769400,101.2819900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3785,1251.8958700,-800.7117900,85.0851500,0.0000000,0.0000000,-92.5200000); //
	CreateDynamicObject(3785,1245.8934300,-800.6311600,85.0851500,0.0000000,0.0000000,-92.5200000); //
	CreateDynamicObject(1226,1243.2098400,-809.6363500,92.1890200,0.0000000,0.0000000,-69.0600100); //
	CreateDynamicObject(1226,1212.7205800,-804.6074200,92.7375100,0.0000000,0.0000000,108.7799200); //
	CreateDynamicObject(1226,1212.7205800,-804.6074200,92.7375100,0.0000000,0.0000000,108.7799200); //
	CreateDynamicObject(1226,1240.4665500,-781.4656400,94.9353300,0.0000000,0.0000000,-195.3000300); //
	CreateDynamicObject(1226,1231.5231900,-827.4491600,88.3061500,0.0000000,0.0000000,106.7999500); //
	CreateDynamicObject(1226,1210.6052200,-829.1746800,89.4945900,0.0000000,0.0000000,235.2599600); //
	CreateDynamicObject(1226,1250.5125700,-822.3051100,88.3061500,0.0000000,0.0000000,-8.5200500); //
	CreateDynamicObject(1232,1384.5590800,-825.4935900,73.8082700,356.8584000,0.0000000,3.1415900); //
	CreateDynamicObject(1232,1340.9676500,-824.6231100,69.5390600,356.8584000,0.0000000,3.1415900); //
	CreateDynamicObject(1232,1356.4428700,-847.1795000,52.2385800,356.8584000,0.0000000,3.1415900); //
	CreateDynamicObject(1232,1368.7357200,-861.8175000,45.0270300,356.8584000,0.0000000,3.1415900); //
	CreateDynamicObject(1232,1358.7761200,-812.7395000,69.3748400,356.8584000,0.0000000,3.1415900); //
	CreateDynamicObject(1232,1332.9895000,-813.8422200,74.2739900,356.8584000,0.0000000,3.1415900); //
	CreateDynamicObject(1232,1309.4078400,-810.8721300,79.1841500,356.8584000,0.0000000,3.1415900); //
	CreateDynamicObject(673,1359.2463400,-889.2277200,37.8046900,356.8584000,0.0000000,-2.5592100); //
	CreateDynamicObject(18014,1269.0564000,-827.6923200,82.5256700,0.0000000,0.0000000,0.0000000); //




	//Rafinha//
	CreateDynamicObject(8558,1128.8632812,3702.2070312,-0.0499763,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(3458,1128.8291016,3707.2968750,-0.0499649,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(8558,1128.7954102,3712.3876953,-0.0499535,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (9)
	CreateDynamicObject(3458,1128.7613525,3717.4780273,-0.0499420,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (4)
	CreateDynamicObject(8558,1128.7272949,3722.5683594,-0.0499306,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (10)
	CreateDynamicObject(3458,1128.6932373,3727.6586914,-0.0499191,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (5)
	CreateDynamicObject(8558,1128.6591797,3732.7490234,-0.0499077,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (11)
	CreateDynamicObject(3458,1128.6251221,3737.8393555,-0.0498962,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (6)
	CreateDynamicObject(8558,1128.5910645,3742.9296875,-0.0498848,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (12)
	CreateDynamicObject(3458,1128.5566406,3748.0195312,-0.0498734,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (7)
	CreateDynamicObject(8558,1128.5229492,3753.1103516,-0.0498619,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (13)
	CreateDynamicObject(3458,1128.4888916,3758.2006836,-0.0498505,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (8)
	CreateDynamicObject(8558,1128.4548340,3763.2910156,-0.0498390,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (15)
	CreateDynamicObject(3458,1128.4207764,3768.3813477,-0.0498276,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (9)
	CreateDynamicObject(8558,1128.3867188,3773.4716797,-0.0498161,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (16)
	CreateDynamicObject(3458,1128.3526611,3778.5620117,-0.0498047,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (10)
	CreateDynamicObject(8558,1128.3186035,3783.6523438,-0.0497932,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (17)
	CreateDynamicObject(3458,1128.2841797,3788.7421875,-0.0497818,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (11)
	CreateDynamicObject(8558,1128.2500000,3793.8330078,-0.0497704,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (18)
	CreateDynamicObject(3458,1128.2158203,3798.9228516,-0.0497589,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (13)
	CreateDynamicObject(8558,1128.1816406,3804.0126953,-0.0497475,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (40)
	CreateDynamicObject(3458,1128.1474609,3809.1025391,-0.0497360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (35)
	CreateDynamicObject(8558,1128.1132812,3814.1923828,-0.0497246,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (41)
	CreateDynamicObject(3458,1128.0791016,3819.2822266,-0.0497131,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (36)
	CreateDynamicObject(8558,1128.0449219,3824.3720703,-0.0497017,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (42)
	CreateDynamicObject(3458,1128.0107422,3829.4619141,-0.0496902,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (37)
	CreateDynamicObject(8558,1127.9765625,3834.5517578,-0.0496788,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (43)
	CreateDynamicObject(3458,1127.9924316,3839.6425781,-0.0496674,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (38)
	CreateDynamicObject(8558,1128.0083008,3844.7333984,-0.0496559,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (47)
	CreateDynamicObject(3458,1128.0241699,3849.8242188,-0.0496445,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (41)
	CreateDynamicObject(8558,1128.0400391,3854.9150391,-0.0496330,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (48)
	CreateDynamicObject(3458,1128.0559082,3860.0058594,-0.0496216,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (42)
	CreateDynamicObject(8558,1128.0717773,3865.0966797,-0.0496101,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (49)
	CreateDynamicObject(3458,1128.0876465,3870.1875000,-0.0495987,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (43)
	CreateDynamicObject(8558,1128.1035156,3875.2783203,-0.0495872,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (50)
	CreateDynamicObject(3458,1128.1191406,3880.3691406,-0.0495758,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (44)
	CreateDynamicObject(8558,1128.1347656,3885.4599609,-0.0495644,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (51)
	CreateDynamicObject(3458,1128.1503906,3890.5507812,-0.0495529,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (45)
	CreateDynamicObject(8558,1128.1660156,3895.6416016,-0.0495415,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (52)
	CreateDynamicObject(3458,1128.1816406,3900.7324219,-0.0495300,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (46)
	CreateDynamicObject(8558,1128.1972656,3905.8232422,-0.0495186,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (53)
	CreateDynamicObject(3458,1128.2128906,3910.9140625,-0.0495071,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (47)
	CreateDynamicObject(8558,1128.2285156,3916.0048828,-0.0494957,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (54)
	CreateDynamicObject(8558,1128.2441406,3926.2170410,0.0309753,1.8000000,0.0000000,0.0000000); //object(vgshseing28) (138)
	CreateDynamicObject(8558,1128.2441406,3931.3332520,0.2722473,3.5999999,0.0000000,0.0000000); //object(vgshseing28) (139)
	CreateDynamicObject(8558,1128.2441406,3936.4394531,0.6741180,5.3999996,0.0000000,0.0000000); //object(vgshseing28) (140)
	CreateDynamicObject(8558,1128.2441406,3941.5305176,1.2361603,7.1999998,0.0000000,0.0000000); //object(vgshseing28) (141)
	CreateDynamicObject(8558,1128.2441406,3956.6625977,3.8771515,12.6000004,0.0000000,0.0000000); //object(vgshseing28) (144)
	CreateDynamicObject(8558,1128.2441406,3961.6430664,5.0728455,14.4000006,0.0000000,0.0000000); //object(vgshseing28) (145)
	CreateDynamicObject(8558,1128.2441406,3981.1162109,11.4000397,21.5999985,0.0000000,0.0000000); //object(vgshseing28) (149)
	CreateDynamicObject(8558,1128.2441406,3990.5166016,15.4678955,25.1971436,0.0000000,0.0000000); //object(vgshseing28) (151)
	CreateDynamicObject(8558,1128.2441406,3995.1162109,17.7212524,26.9999962,0.0000000,0.0000000); //object(vgshseing28) (152)
	CreateDynamicObject(8558,1128.2441406,3999.6428223,20.1179657,28.7999954,0.0000000,0.0000000); //object(vgshseing28) (153)
	CreateDynamicObject(8558,1128.2441406,4004.0917969,22.6557007,30.5999947,0.0000000,0.0000000); //object(vgshseing28) (154)
	CreateDynamicObject(8558,1128.2441406,4008.4589844,25.3319092,32.3999939,0.0000000,0.0000000); //object(vgshseing28) (155)
	CreateDynamicObject(8558,1128.2441406,4016.9306641,31.0891418,35.9967041,0.0000000,0.0000000); //object(vgshseing28) (157)
	CreateDynamicObject(3458,1128.2441406,3921.0957031,-0.0494843,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (74)
	CreateDynamicObject(3458,1128.2441406,3946.6015625,1.9578705,9.0000000,0.0000000,0.0000000); //object(vgncarshade1) (79)
	CreateDynamicObject(3458,1128.2441406,3951.6474609,2.8385010,10.8000002,0.0000000,0.0000000); //object(vgncarshade1) (80)
	CreateDynamicObject(3458,1128.2441406,3966.5839844,6.4244385,16.2000008,0.0000000,0.0000000); //object(vgncarshade1) (83)
	CreateDynamicObject(3458,1128.2441406,3971.4794922,7.9305267,18.0000000,0.0000000,0.0000000); //object(vgncarshade1) (84)
	CreateDynamicObject(3458,1128.2441406,3976.3254395,9.5896301,19.7999992,0.0000000,0.0000000); //object(vgncarshade1) (85)
	CreateDynamicObject(3458,1128.2441406,3985.8488770,13.3602295,23.3999977,0.0000000,0.0000000); //object(vgncarshade1) (87)
	CreateDynamicObject(3458,1128.2441406,4012.7402344,28.1442108,34.1949463,0.0000000,0.0000000); //object(vgncarshade1) (93)
	CreateDynamicObject(3458,1128.2077637,4020.3256836,31.8442135,348.9449463,0.0000000,0.0000000); //object(vgncarshade1) (106)
	CreateDynamicObject(8558,1128.4355469,4236.4179688,0.7743988,351.2460938,0.0000000,0.0000000); //object(vgshseing28) (198)
	CreateDynamicObject(8558,1128.4355469,4241.4946289,0.0944366,353.4960938,0.0000000,0.0000000); //object(vgshseing28) (199)
	CreateDynamicObject(8558,1128.4355469,4246.5937500,-0.3857117,355.7427979,0.0000000,0.0000000); //object(vgshseing28) (200)
	CreateDynamicObject(8558,1128.4355469,4251.7084961,-0.6652832,357.9960938,0.0000000,0.0000000); //object(vgshseing28) (201)
	CreateDynamicObject(8558,1128.4355469,4256.8291016,-0.7438507,0.2416992,0.0000000,0.0000000); //object(vgshseing28) (202)
	CreateDynamicObject(8558,1128.4355469,4261.9501953,-0.6212921,362.4960938,0.0000000,0.0000000); //object(vgshseing28) (203)
	CreateDynamicObject(8558,1128.4355469,4267.0620117,-0.2978058,364.7460938,0.0000000,0.0000000); //object(vgshseing28) (204)
	CreateDynamicObject(8558,1128.4355469,4272.1572266,0.2261200,366.9960938,0.0000000,0.0000000); //object(vgshseing28) (205)
	CreateDynamicObject(8558,1128.4355469,4277.2275391,0.9496918,369.2460938,0.0000000,0.0000000); //object(vgshseing28) (206)
	CreateDynamicObject(8558,1128.4355469,4282.2656250,1.8717499,11.4916992,0.0000000,0.0000000); //object(vgshseing28) (207)
	CreateDynamicObject(3458,1128.4394531,4183.1123047,18.3692017,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (187)
	CreateDynamicObject(3458,1128.4355469,4287.2636719,2.9909210,13.7438965,0.0000000,0.0000000); //object(vgncarshade1) (192)
	CreateDynamicObject(3458,1128.4355469,4292.1982422,4.3635025,17.3438969,0.0000000,0.0000000); //object(vgncarshade1) (193)
	CreateDynamicObject(3458,1128.4355469,4297.0371094,6.0432205,20.9438972,0.0000000,0.0000000); //object(vgncarshade1) (194)
	CreateDynamicObject(3458,1128.4355469,4301.7607422,8.0234528,24.5438976,0.0000000,0.0000000); //object(vgncarshade1) (195)
	CreateDynamicObject(8558,1128.4573975,4305.8676758,8.7467594,355.4916992,0.0000000,0.0000000); //object(vgshseing28) (228)
	CreateDynamicObject(8558,1128.5190430,4438.0600586,7.8467636,345.2500000,0.0000000,0.0000000); //object(vgshseing28) (272)
	CreateDynamicObject(8558,1128.5185547,4468.1923828,1.9076385,352.4468994,0.0000000,0.0000000); //object(vgshseing28) (278)
	CreateDynamicObject(3458,1128.5185547,4443.0253906,6.5942078,346.4428711,0.0000000,0.0000000); //object(vgncarshade1) (206)
	CreateDynamicObject(3458,1128.5185547,4448.0175781,5.4459534,347.6403809,0.0000000,0.0000000); //object(vgncarshade1) (207)
	CreateDynamicObject(3458,1128.5185547,4453.0322266,4.4024658,348.8433838,0.0000000,0.0000000); //object(vgncarshade1) (208)
	CreateDynamicObject(3458,1128.5185547,4458.0678711,3.4642487,350.0454102,0.0000000,0.0000000); //object(vgncarshade1) (209)
	CreateDynamicObject(3458,1128.5185547,4463.1210938,2.6316833,351.2438965,0.0000000,0.0000000); //object(vgncarshade1) (210)
	CreateDynamicObject(3458,1128.5185547,4473.2763672,1.2849579,353.6454468,0.0000000,0.0000000); //object(vgncarshade1) (212)
	CreateDynamicObject(3458,1128.5185547,4478.3725586,0.7713928,354.8454590,0.0000000,0.0000000); //object(vgncarshade1) (213)
	CreateDynamicObject(3458,1128.5185547,4483.4785156,0.3646545,356.0449219,0.0000000,0.0000000); //object(vgncarshade1) (214)
	CreateDynamicObject(3458,1128.5185547,4488.5917969,0.0649414,357.2454834,0.0000000,0.0000000); //object(vgncarshade1) (215)
	CreateDynamicObject(3458,1128.5185547,4493.7099609,-0.1276093,358.4454346,0.0000000,0.0000000); //object(vgncarshade1) (216)
	CreateDynamicObject(8558,1128.5183105,4498.6538086,-0.1923613,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (303)
	CreateDynamicObject(8558,1128.4993896,4508.8793945,-0.1923613,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (304)
	CreateDynamicObject(3458,1128.5146484,4503.7685547,-0.1923676,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (221)
	CreateDynamicObject(3458,1128.4943848,4437.4965820,7.3959551,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (222)
	CreateDynamicObject(3458,1128.4841309,4513.9902344,-0.1923551,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (223)
	CreateDynamicObject(8558,1128.4688721,4519.1010742,-0.1923489,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (305)
	CreateDynamicObject(3458,1128.4536133,4524.2119141,-0.1923426,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (225)
	CreateDynamicObject(8558,1128.4383545,4529.3227539,-0.1923364,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (306)
	CreateDynamicObject(3458,1128.4230957,4534.4335938,-0.1923302,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (226)
	CreateDynamicObject(8558,1128.4078369,4539.5444336,-0.1923240,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (307)
	CreateDynamicObject(3458,1128.3925781,4544.6552734,-0.1923177,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (227)
	CreateDynamicObject(8558,1128.3773193,4549.7661133,-0.1923115,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (308)
	CreateDynamicObject(3458,1128.3620605,4554.8769531,-0.1923053,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (228)
	CreateDynamicObject(8558,1128.3468018,4559.9877930,-0.1922990,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (309)
	CreateDynamicObject(3458,1128.3315430,4565.0986328,-0.1922928,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (229)
	CreateDynamicObject(8558,1128.3162842,4570.2094727,-0.1922866,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (310)
	CreateDynamicObject(3458,1128.3010254,4575.3203125,-0.1922804,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (230)
	CreateDynamicObject(8558,1128.2851562,4580.4306641,-0.1922741,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (311)
	CreateDynamicObject(3458,1128.2705078,4585.5419922,-0.1922679,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (231)
	CreateDynamicObject(8558,1128.2548828,4590.6523438,-0.1922607,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (333)
	CreateDynamicObject(8558,1128.2548828,4595.8696289,0.0811653,6.0000000,0.0000000,0.0000000); //object(vgshseing28) (313)
	CreateDynamicObject(8558,1128.2548828,4601.0297852,0.8984413,12.0000000,0.0000000,0.0000000); //object(vgshseing28) (315)
	CreateDynamicObject(8558,1128.2548828,4606.0761719,2.2506180,18.0000000,0.0000000,0.0000000); //object(vgshseing28) (316)
	CreateDynamicObject(8558,1128.2548828,4610.9536133,4.1228790,24.0000000,0.0000000,0.0000000); //object(vgshseing28) (317)
	CreateDynamicObject(8558,1128.2548828,4615.6083984,6.4947128,30.0000000,0.0000000,0.0000000); //object(vgshseing28) (318)
	CreateDynamicObject(8558,1128.2548828,4619.9902344,9.3401299,35.9967041,0.0000000,0.0000000); //object(vgshseing28) (319)
	CreateDynamicObject(8558,1128.2548828,4624.0502930,12.6279564,42.0000000,0.0000000,0.0000000); //object(vgshseing28) (320)
	CreateDynamicObject(8558,1128.2548828,4627.7441406,16.3221741,48.0000000,0.0000000,0.0000000); //object(vgshseing28) (321)
	CreateDynamicObject(8558,1128.2548828,4631.0322266,20.3823013,54.0000000,0.0000000,0.0000000); //object(vgshseing28) (322)
	CreateDynamicObject(8558,1128.2548828,4633.8774414,24.7638607,60.0000000,0.0000000,0.0000000); //object(vgshseing28) (323)
	CreateDynamicObject(8558,1128.2548828,4636.2495117,29.4188423,66.0000000,0.0000000,0.0000000); //object(vgshseing28) (324)
	CreateDynamicObject(8558,1128.2548828,4638.1215820,34.2962494,72.0000000,0.0000000,0.0000000); //object(vgshseing28) (325)
	CreateDynamicObject(8558,1128.2548828,4639.4741211,39.3426399,78.0000000,0.0000000,0.0000000); //object(vgshseing28) (326)
	CreateDynamicObject(8558,1128.2548828,4640.2910156,44.5027313,83.9959717,0.0000000,0.0000000); //object(vgshseing28) (327)
	CreateDynamicObject(3458,1108.5328369,4640.5649414,49.5326958,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (233)
	CreateDynamicObject(3458,1148.9256592,4640.5595703,49.5326958,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (234)
	CreateDynamicObject(3458,1108.5328369,4640.5649414,49.5326958,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (280)
	CreateDynamicObject(3458,1106.0328369,4640.2915039,54.7499847,96.0000000,0.0000000,0.0000000); //object(vgncarshade1) (235)
	CreateDynamicObject(3458,1103.5328369,4639.4741211,59.9101105,102.0000000,0.0000000,0.0000000); //object(vgncarshade1) (236)
	CreateDynamicObject(3458,1101.0328369,4638.1220703,64.9565430,108.0000000,0.0000000,0.0000000); //object(vgncarshade1) (237)
	CreateDynamicObject(3458,1098.5328369,4636.2500000,69.8339844,114.0000000,0.0000000,0.0000000); //object(vgncarshade1) (238)
	CreateDynamicObject(3458,1096.0328369,4633.8779297,74.4890060,120.0000000,0.0000000,0.0000000); //object(vgncarshade1) (239)
	CreateDynamicObject(3458,1093.5328369,4631.0327148,78.8705902,126.0000000,0.0000000,0.0000000); //object(vgncarshade1) (240)
	CreateDynamicObject(3458,1091.0328369,4627.7446289,82.9307556,132.0000000,0.0000000,0.0000000); //object(vgncarshade1) (241)
	CreateDynamicObject(3458,1088.5328369,4624.0502930,86.6250000,138.0000000,0.0000000,0.0000000); //object(vgncarshade1) (242)
	CreateDynamicObject(3458,1086.0328369,4619.9902344,89.9128571,144.0000000,0.0000000,0.0000000); //object(vgncarshade1) (243)
	CreateDynamicObject(3458,1083.5328369,4615.6088867,92.7582855,150.0000000,0.0000000,0.0000000); //object(vgncarshade1) (244)
	CreateDynamicObject(3458,1081.0328369,4610.9536133,95.1301422,156.0000000,0.0000000,0.0000000); //object(vgncarshade1) (245)
	CreateDynamicObject(3458,1078.5328369,4606.0761719,97.0024109,162.0000000,0.0000000,0.0000000); //object(vgncarshade1) (246)
	CreateDynamicObject(3458,1076.0328369,4601.0297852,98.3545990,168.0000000,0.0000000,0.0000000); //object(vgncarshade1) (247)
	CreateDynamicObject(3458,1073.5328369,4595.8696289,99.1718903,174.0000000,0.0000000,0.0000000); //object(vgncarshade1) (248)
	CreateDynamicObject(3458,1071.0328369,4590.6523438,99.4453125,180.0000000,0.0000000,0.0000000); //object(vgncarshade1) (249)
	CreateDynamicObject(3458,1068.5328369,4585.4350586,99.1718903,186.0000000,0.0000000,0.0000000); //object(vgncarshade1) (250)
	CreateDynamicObject(3458,1066.0328369,4580.2749023,98.3545990,192.0000000,0.0000000,0.0000000); //object(vgncarshade1) (251)
	CreateDynamicObject(3458,1063.5328369,4575.2285156,97.0024109,198.0000000,0.0000000,0.0000000); //object(vgncarshade1) (252)
	CreateDynamicObject(3458,1061.0328369,4570.3510742,95.1301422,204.0000000,0.0000000,0.0000000); //object(vgncarshade1) (253)
	CreateDynamicObject(3458,1058.5328369,4565.6958008,92.7582855,210.0000000,0.0000000,0.0000000); //object(vgncarshade1) (254)
	CreateDynamicObject(3458,1056.0328369,4561.3144531,89.9128418,216.0000000,0.0000000,0.0000000); //object(vgncarshade1) (255)
	CreateDynamicObject(3458,1053.5328369,4557.2543945,86.6250000,222.0000000,0.0000000,0.0000000); //object(vgncarshade1) (256)
	CreateDynamicObject(3458,1051.0328369,4553.5600586,82.9307556,228.0000000,0.0000000,0.0000000); //object(vgncarshade1) (257)
	CreateDynamicObject(3458,1048.5328369,4550.2719727,78.8705826,234.0000000,0.0000000,0.0000000); //object(vgncarshade1) (258)
	CreateDynamicObject(3458,1046.0328369,4547.4267578,74.4889984,240.0000000,0.0000000,0.0000000); //object(vgncarshade1) (259)
	CreateDynamicObject(3458,1043.5328369,4545.0546875,69.8339844,246.0000000,0.0000000,0.0000000); //object(vgncarshade1) (260)
	CreateDynamicObject(3458,1041.0328369,4543.1826172,64.9565430,252.0000000,0.0000000,0.0000000); //object(vgncarshade1) (261)
	CreateDynamicObject(3458,1038.5328369,4541.8305664,59.9101219,258.0000000,0.0000000,0.0000000); //object(vgncarshade1) (262)
	CreateDynamicObject(3458,1036.0328369,4541.0131836,54.7499771,264.0000000,0.0000000,0.0000000); //object(vgncarshade1) (263)
	CreateDynamicObject(3458,1033.5328369,4540.7397461,49.5326920,270.0000000,0.0000000,0.0000000); //object(vgncarshade1) (264)
	CreateDynamicObject(3458,1031.0328369,4541.0131836,44.3154068,276.0000000,0.0000000,0.0000000); //object(vgncarshade1) (265)
	CreateDynamicObject(3458,1028.5328369,4541.8305664,39.1552849,282.0000000,0.0000000,0.0000000); //object(vgncarshade1) (266)
	CreateDynamicObject(3458,1026.0328369,4543.1826172,34.1088371,288.0000000,0.0000000,0.0000000); //object(vgncarshade1) (267)
	CreateDynamicObject(3458,1023.5328369,4545.0546875,29.2313995,294.0000000,0.0000000,0.0000000); //object(vgncarshade1) (268)
	CreateDynamicObject(3458,1021.0328369,4547.4267578,24.5763855,300.0000000,0.0000000,0.0000000); //object(vgncarshade1) (269)
	CreateDynamicObject(3458,1018.5328369,4550.2719727,20.1947975,306.0000000,0.0000000,0.0000000); //object(vgncarshade1) (270)
	CreateDynamicObject(3458,1016.0328369,4553.5600586,16.1346245,312.0000000,0.0000000,0.0000000); //object(vgncarshade1) (271)
	CreateDynamicObject(3458,1013.5328369,4557.2543945,12.4403839,318.0000000,0.0000000,0.0000000); //object(vgncarshade1) (272)
	CreateDynamicObject(3458,1011.0328369,4561.3144531,9.1525345,324.0000000,0.0000000,0.0000000); //object(vgncarshade1) (273)
	CreateDynamicObject(3458,1008.5328369,4565.6958008,6.3070984,330.0000000,0.0000000,0.0000000); //object(vgncarshade1) (274)
	CreateDynamicObject(3458,1006.0328369,4570.3510742,3.9352417,336.0000000,0.0000000,0.0000000); //object(vgncarshade1) (275)
	CreateDynamicObject(3458,1003.5328369,4575.2285156,2.0629692,342.0000000,0.0000000,0.0000000); //object(vgncarshade1) (276)
	CreateDynamicObject(3458,1001.0328369,4580.2749023,0.7107811,348.0000000,0.0000000,0.0000000); //object(vgncarshade1) (277)
	CreateDynamicObject(3458,998.5328369,4585.4350586,-0.1065025,354.0000000,0.0000000,0.0000000); //object(vgncarshade1) (278)
	CreateDynamicObject(3458,996.0322266,4590.6523438,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (279)
	CreateDynamicObject(8558,1128.4355469,4231.3720703,1.6531677,348.9862061,0.0000000,0.0000000); //object(vgshseing28) (350)
	CreateDynamicObject(8558,1128.4355469,4226.3583984,2.7029114,347.3547363,0.0000000,0.0000000); //object(vgshseing28) (329)
	CreateDynamicObject(8558,1128.4355469,4221.3769531,3.8953705,345.7177734,0.0000000,0.0000000); //object(vgshseing28) (330)
	CreateDynamicObject(8558,1128.4355469,4216.4326172,5.2295837,344.0808105,0.0000000,0.0000000); //object(vgshseing28) (331)
	CreateDynamicObject(8558,1128.4355469,4211.5273438,6.7044678,342.4462891,0.0000000,0.0000000); //object(vgshseing28) (332)
	CreateDynamicObject(8558,1128.4355469,4206.6665039,8.3188171,340.8099365,0.0000000,0.0000000); //object(vgshseing28) (334)
	CreateDynamicObject(8558,1128.4355469,4201.8540039,10.0713196,339.1735840,0.0000000,0.0000000); //object(vgshseing28) (335)
	CreateDynamicObject(8558,1128.4355469,4197.0932617,11.9605255,337.5372314,0.0000000,0.0000000); //object(vgshseing28) (336)
	CreateDynamicObject(8558,1128.4355469,4192.3881836,13.9849091,335.9008789,0.0000000,0.0000000); //object(vgshseing28) (337)
	CreateDynamicObject(8558,1128.4355469,4187.7431641,16.1428680,334.2590332,0.0000000,0.0000000); //object(vgshseing28) (338)
	CreateDynamicObject(8558,1128.4355469,4183.1611328,18.4325562,332.6275635,0.0000000,0.0000000); //object(vgshseing28) (339)
	CreateDynamicObject(3458,1148.9256592,4640.5595703,49.5326958,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (327)
	CreateDynamicObject(3458,1151.4256592,4640.2861328,54.7499847,96.0000000,0.0000000,0.0000000); //object(vgncarshade1) (282)
	CreateDynamicObject(3458,1153.9256592,4639.4687500,59.9101105,102.0000000,0.0000000,0.0000000); //object(vgncarshade1) (283)
	CreateDynamicObject(3458,1156.4256592,4638.1166992,64.9565430,108.0000000,0.0000000,0.0000000); //object(vgncarshade1) (284)
	CreateDynamicObject(3458,1158.9256592,4636.2446289,69.8339844,114.0000000,0.0000000,0.0000000); //object(vgncarshade1) (285)
	CreateDynamicObject(3458,1161.4256592,4633.8725586,74.4890060,120.0000000,0.0000000,0.0000000); //object(vgncarshade1) (286)
	CreateDynamicObject(3458,1163.9256592,4631.0273438,78.8705902,126.0000000,0.0000000,0.0000000); //object(vgncarshade1) (287)
	CreateDynamicObject(3458,1166.4256592,4627.7392578,82.9307556,132.0000000,0.0000000,0.0000000); //object(vgncarshade1) (288)
	CreateDynamicObject(3458,1168.9256592,4624.0449219,86.6250000,138.0000000,0.0000000,0.0000000); //object(vgncarshade1) (289)
	CreateDynamicObject(3458,1171.4256592,4619.9848633,89.9128571,144.0000000,0.0000000,0.0000000); //object(vgncarshade1) (290)
	CreateDynamicObject(3458,1173.9256592,4615.6035156,92.7582855,150.0000000,0.0000000,0.0000000); //object(vgncarshade1) (291)
	CreateDynamicObject(3458,1176.4256592,4610.9482422,95.1301422,156.0000000,0.0000000,0.0000000); //object(vgncarshade1) (292)
	CreateDynamicObject(3458,1178.9256592,4606.0708008,97.0024109,162.0000000,0.0000000,0.0000000); //object(vgncarshade1) (293)
	CreateDynamicObject(3458,1181.4256592,4601.0244141,98.3545990,168.0000000,0.0000000,0.0000000); //object(vgncarshade1) (294)
	CreateDynamicObject(3458,1183.9256592,4595.8642578,99.1718903,174.0000000,0.0000000,0.0000000); //object(vgncarshade1) (295)
	CreateDynamicObject(3458,1186.4256592,4590.6469727,99.4453125,180.0000000,0.0000000,0.0000000); //object(vgncarshade1) (296)
	CreateDynamicObject(3458,1188.9256592,4585.4296875,99.1718903,186.0000000,0.0000000,0.0000000); //object(vgncarshade1) (297)
	CreateDynamicObject(3458,1191.4248047,4580.2695312,98.3545990,191.9970703,0.0000000,0.0000000); //object(vgncarshade1) (298)
	CreateDynamicObject(3458,1193.9256592,4575.2231445,97.0024109,198.0000000,0.0000000,0.0000000); //object(vgncarshade1) (299)
	CreateDynamicObject(3458,1196.4256592,4570.3457031,95.1301422,204.0000000,0.0000000,0.0000000); //object(vgncarshade1) (300)
	CreateDynamicObject(3458,1198.9256592,4565.6904297,92.7582855,210.0000000,0.0000000,0.0000000); //object(vgncarshade1) (301)
	CreateDynamicObject(3458,1201.4256592,4561.3090820,89.9128418,216.0000000,0.0000000,0.0000000); //object(vgncarshade1) (302)
	CreateDynamicObject(3458,1203.9256592,4557.2490234,86.6250000,222.0000000,0.0000000,0.0000000); //object(vgncarshade1) (303)
	CreateDynamicObject(3458,1206.4256592,4553.5546875,82.9307556,228.0000000,0.0000000,0.0000000); //object(vgncarshade1) (304)
	CreateDynamicObject(3458,1208.9256592,4550.2666016,78.8705826,234.0000000,0.0000000,0.0000000); //object(vgncarshade1) (305)
	CreateDynamicObject(3458,1211.4256592,4547.4213867,74.4889984,240.0000000,0.0000000,0.0000000); //object(vgncarshade1) (306)
	CreateDynamicObject(3458,1213.9256592,4545.0493164,69.8339844,246.0000000,0.0000000,0.0000000); //object(vgncarshade1) (307)
	CreateDynamicObject(3458,1216.4256592,4543.1772461,64.9565430,252.0000000,0.0000000,0.0000000); //object(vgncarshade1) (308)
	CreateDynamicObject(3458,1218.9256592,4541.8251953,59.9101219,258.0000000,0.0000000,0.0000000); //object(vgncarshade1) (309)
	CreateDynamicObject(3458,1221.4256592,4541.0078125,54.7499771,264.0000000,0.0000000,0.0000000); //object(vgncarshade1) (310)
	CreateDynamicObject(3458,1223.9248047,4540.7343750,49.5326920,270.0000000,0.0000000,0.0000000); //object(vgncarshade1) (311)
	CreateDynamicObject(3458,1226.4256592,4541.0078125,44.3154068,276.0000000,0.0000000,0.0000000); //object(vgncarshade1) (312)
	CreateDynamicObject(3458,1228.9256592,4541.8251953,39.1552849,282.0000000,0.0000000,0.0000000); //object(vgncarshade1) (313)
	CreateDynamicObject(3458,1231.4256592,4543.1772461,34.1088371,288.0000000,0.0000000,0.0000000); //object(vgncarshade1) (314)
	CreateDynamicObject(3458,1233.9256592,4545.0493164,29.2313995,294.0000000,0.0000000,0.0000000); //object(vgncarshade1) (315)
	CreateDynamicObject(3458,1236.4256592,4547.4213867,24.5763855,300.0000000,0.0000000,0.0000000); //object(vgncarshade1) (316)
	CreateDynamicObject(3458,1238.9256592,4550.2666016,20.1947975,306.0000000,0.0000000,0.0000000); //object(vgncarshade1) (317)
	CreateDynamicObject(3458,1241.4256592,4553.5546875,16.1346245,312.0000000,0.0000000,0.0000000); //object(vgncarshade1) (318)
	CreateDynamicObject(3458,1243.9256592,4557.2490234,12.4403839,318.0000000,0.0000000,0.0000000); //object(vgncarshade1) (319)
	CreateDynamicObject(3458,1246.4256592,4561.3090820,9.1525345,324.0000000,0.0000000,0.0000000); //object(vgncarshade1) (320)
	CreateDynamicObject(3458,1248.9256592,4565.6904297,6.3070984,330.0000000,0.0000000,0.0000000); //object(vgncarshade1) (321)
	CreateDynamicObject(3458,1251.4256592,4570.3457031,3.9352417,336.0000000,0.0000000,0.0000000); //object(vgncarshade1) (322)
	CreateDynamicObject(3458,1253.9256592,4575.2231445,2.0629692,342.0000000,0.0000000,0.0000000); //object(vgncarshade1) (323)
	CreateDynamicObject(3458,1256.4256592,4580.2695312,0.7107811,348.0000000,0.0000000,0.0000000); //object(vgncarshade1) (324)
	CreateDynamicObject(3458,1258.9256592,4585.4296875,-0.1065025,354.0000000,0.0000000,0.0000000); //object(vgncarshade1) (325)
	CreateDynamicObject(3458,1261.4248047,4590.6464844,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (326)
	CreateDynamicObject(8558,1108.5112305,4641.6083984,48.5027313,0.0000000,180.0000000,180.0000000); //object(vgshseing28) (387)
	CreateDynamicObject(8558,1148.8569336,4641.6372070,48.5027313,0.0000000,179.9945068,179.9945068); //object(vgshseing28) (341)
	CreateDynamicObject(8558,996.0306396,4595.7407227,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (311)
	CreateDynamicObject(8558,1261.4229736,4595.7314453,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (311)
	CreateDynamicObject(8558,1261.4421387,4600.8339844,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (311)
	CreateDynamicObject(8558,1261.4613037,4605.9365234,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (4)
	CreateDynamicObject(8558,1261.4804688,4611.0390625,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (5)
	CreateDynamicObject(8558,1261.4996338,4616.1416016,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (6)
	CreateDynamicObject(8558,1261.5187988,4621.2441406,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (7)
	CreateDynamicObject(8558,1261.5371094,4626.3466797,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (8)
	CreateDynamicObject(8558,1261.5571289,4631.4492188,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (19)
	CreateDynamicObject(8558,1261.5762939,4636.5517578,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (20)
	CreateDynamicObject(8558,1261.5954590,4641.6542969,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (21)
	CreateDynamicObject(8558,1261.6146240,4646.7568359,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (22)
	CreateDynamicObject(8558,1261.6337891,4651.8593750,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (23)
	CreateDynamicObject(8558,1261.6529541,4656.9619141,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (25)
	CreateDynamicObject(8558,1261.6718750,4662.0644531,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (26)
	CreateDynamicObject(8558,1261.6912842,4667.1669922,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (27)
	CreateDynamicObject(8558,1261.7104492,4672.2695312,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (28)
	CreateDynamicObject(8558,1261.7296143,4677.3720703,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (29)
	CreateDynamicObject(8558,1261.7487793,4682.4746094,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (30)
	CreateDynamicObject(8558,1261.7679443,4687.5771484,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (31)
	CreateDynamicObject(8558,1261.7871094,4692.6796875,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (32)
	CreateDynamicObject(8558,1261.8056641,4697.7822266,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (33)
	CreateDynamicObject(8558,1261.8251953,4702.8847656,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (34)
	CreateDynamicObject(8558,996.0302124,4600.8178711,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (311)
	CreateDynamicObject(8558,996.0297852,4605.8950195,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (36)
	CreateDynamicObject(8558,996.0293579,4610.9721680,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (37)
	CreateDynamicObject(8558,996.0289307,4616.0493164,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (38)
	CreateDynamicObject(8558,996.0283203,4621.1259766,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (39)
	CreateDynamicObject(8558,996.0273438,4626.2031250,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (44)
	CreateDynamicObject(8558,996.0273438,4631.2802734,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (45)
	CreateDynamicObject(8558,996.0272217,4636.3579102,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (46)
	CreateDynamicObject(8558,996.0267944,4641.4350586,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (55)
	CreateDynamicObject(8558,996.0263672,4646.5122070,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (56)
	CreateDynamicObject(8558,996.0259399,4651.5893555,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (57)
	CreateDynamicObject(8558,996.0253906,4656.6660156,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (58)
	CreateDynamicObject(8558,996.0250854,4661.7436523,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (59)
	CreateDynamicObject(8558,996.0246582,4666.8208008,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (60)
	CreateDynamicObject(8558,996.0242310,4671.8979492,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (61)
	CreateDynamicObject(8558,996.0238037,4676.9750977,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (62)
	CreateDynamicObject(8558,996.0233765,4682.0522461,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (63)
	CreateDynamicObject(8558,996.0224609,4687.1289062,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (64)
	CreateDynamicObject(8558,996.0224609,4692.2060547,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (65)
	CreateDynamicObject(8558,996.0220947,4697.2836914,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (66)
	CreateDynamicObject(8558,996.0216675,4702.3608398,-0.3922742,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (67)
	CreateDynamicObject(3458,996.0224609,4707.4609375,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (279)
	CreateDynamicObject(3458,1261.7939453,4707.9941406,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (279)
	CreateDynamicObject(3458,1261.8245850,4713.0957031,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (279)
	CreateDynamicObject(3458,1262.0775146,4718.1699219,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (16)
	CreateDynamicObject(3458,1262.0849609,4723.2861328,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (17)
	CreateDynamicObject(3458,1262.0911865,4728.3881836,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (18)
	CreateDynamicObject(3458,1262.0714111,4733.4975586,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (19)
	CreateDynamicObject(3458,1262.0766602,4738.5986328,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (20)
	CreateDynamicObject(3458,1262.0819092,4743.7021484,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (21)
	CreateDynamicObject(3458,1262.0631104,4748.8032227,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (22)
	CreateDynamicObject(3458,996.0270996,4712.5585938,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (279)
	CreateDynamicObject(3458,996.0314331,4717.6557617,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (25)
	CreateDynamicObject(3458,996.0357666,4722.7529297,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (26)
	CreateDynamicObject(3458,996.0401001,4727.8500977,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (27)
	CreateDynamicObject(3458,996.0444336,4732.9472656,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (28)
	CreateDynamicObject(3458,996.0478516,4738.0439453,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (29)
	CreateDynamicObject(3458,996.0585938,4743.1162109,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (30)
	CreateDynamicObject(8558,1284.8013916,4736.2734375,-0.3922742,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (68)
	CreateDynamicObject(8558,1284.8007812,4736.2734375,-0.3922729,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (87)
	CreateDynamicObject(8558,1289.9182129,4741.9877930,-0.1624756,-5.1428571,0.0000000,90.0000000); //object(vgshseing28) (69)
	CreateDynamicObject(8558,1294.9937744,4747.7021484,0.5250626,-10.2857141,0.0000000,90.0000000); //object(vgshseing28) (70)
	CreateDynamicObject(8558,1299.9874268,4753.4165039,1.6648064,-15.4285717,0.0000000,90.0000000); //object(vgshseing28) (71)
	CreateDynamicObject(8558,1304.8586426,4759.1303711,3.2475853,-20.5714283,0.0000000,90.0000000); //object(vgshseing28) (72)
	CreateDynamicObject(8558,1309.5684814,4764.8447266,5.2606468,-25.7142849,0.0000000,90.0000000); //object(vgshseing28) (73)
	CreateDynamicObject(8558,1314.0788574,4770.5590820,7.6877861,-30.8571415,0.0000000,90.0000000); //object(vgshseing28) (74)
	CreateDynamicObject(8558,1318.3535156,4776.2734375,10.5094643,-36.0000000,0.0000000,90.0000000); //object(vgshseing28) (75)
	CreateDynamicObject(8558,1322.3580322,4781.9877930,13.7029610,-41.1428566,0.0000000,90.0000000); //object(vgshseing28) (76)
	CreateDynamicObject(8558,1326.0601807,4787.7021484,17.2425613,-46.2857132,0.0000000,90.0000000); //object(vgshseing28) (77)
	CreateDynamicObject(8558,1329.4300537,4793.4165039,21.0997696,-51.4285698,0.0000000,90.0000000); //object(vgshseing28) (78)
	CreateDynamicObject(8558,1332.4406738,4799.1303711,25.2435303,-56.5714264,0.0000000,90.0000000); //object(vgshseing28) (79)
	CreateDynamicObject(8558,1335.0677490,4804.8447266,29.6404781,-61.7142830,0.0000000,90.0000000); //object(vgshseing28) (80)
	CreateDynamicObject(8558,1337.2900391,4810.5590820,34.2552185,-66.8571396,0.0000000,90.0000000); //object(vgshseing28) (81)
	CreateDynamicObject(8558,1339.0898438,4816.2734375,39.0505829,-72.0000000,0.0000000,90.0000000); //object(vgshseing28) (82)
	CreateDynamicObject(8558,1340.4525146,4821.9877930,43.9879761,-77.1428604,0.0000000,90.0000000); //object(vgshseing28) (83)
	CreateDynamicObject(8558,1341.3670654,4827.7021484,49.0276375,-82.2857208,0.0000000,90.0000000); //object(vgshseing28) (84)
	CreateDynamicObject(8558,1341.8261719,4833.4165039,54.1289902,-87.4285812,0.0000000,90.0000000); //object(vgshseing28) (85)
	CreateDynamicObject(8558,1341.9506836,4839.1396484,59.2509613,270.0000000,0.0000000,90.0000000); //object(vgshseing28) (86)
	CreateDynamicObject(8558,973.3229370,4736.2768555,-0.3922729,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (88)
	CreateDynamicObject(8558,973.3229370,4736.2768555,-0.3922729,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (89)
	CreateDynamicObject(8558,968.2061157,4741.9912109,-0.1624756,5.1428571,0.0000000,90.0000000); //object(vgshseing28) (90)
	CreateDynamicObject(8558,963.1304932,4747.7055664,0.5250626,10.2857141,0.0000000,90.0000000); //object(vgshseing28) (91)
	CreateDynamicObject(8558,958.1369629,4753.4199219,1.6648064,15.4285717,0.0000000,90.0000000); //object(vgshseing28) (92)
	CreateDynamicObject(8558,953.2656860,4759.1337891,3.2475853,20.5714283,0.0000000,90.0000000); //object(vgshseing28) (93)
	CreateDynamicObject(8558,948.5559082,4764.8481445,5.2606468,25.7142849,0.0000000,90.0000000); //object(vgshseing28) (94)
	CreateDynamicObject(8558,944.0449219,4770.5625000,7.6877861,30.8551025,0.0000000,90.0000000); //object(vgshseing28) (95)
	CreateDynamicObject(8558,939.7708130,4776.2768555,10.5094643,36.0000000,0.0000000,90.0000000); //object(vgshseing28) (96)
	CreateDynamicObject(8558,935.7662964,4781.9912109,13.7029610,41.1428566,0.0000000,90.0000000); //object(vgshseing28) (97)
	CreateDynamicObject(8558,932.0642090,4787.7055664,17.2425613,46.2857132,0.0000000,90.0000000); //object(vgshseing28) (98)
	CreateDynamicObject(8558,928.6942139,4793.4199219,21.0997696,51.4285698,0.0000000,90.0000000); //object(vgshseing28) (99)
	CreateDynamicObject(8558,925.6835938,4799.1337891,25.2435322,56.5714264,0.0000000,90.0000000); //object(vgshseing28) (100)
	CreateDynamicObject(8558,923.0565796,4804.8481445,29.6404800,61.7142830,0.0000000,90.0000000); //object(vgshseing28) (101)
	CreateDynamicObject(8558,920.8342285,4810.5625000,34.2552185,66.8571396,0.0000000,90.0000000); //object(vgshseing28) (102)
	CreateDynamicObject(8558,919.0344849,4816.2768555,39.0505867,72.0000000,0.0000000,90.0000000); //object(vgshseing28) (103)
	CreateDynamicObject(8558,917.6718750,4821.9912109,43.9879799,77.1428604,0.0000000,90.0000000); //object(vgshseing28) (104)
	CreateDynamicObject(8558,916.7573242,4827.7055664,49.0276375,82.2857208,0.0000000,90.0000000); //object(vgshseing28) (105)
	CreateDynamicObject(8558,916.2981567,4833.4199219,54.1289902,87.4285812,0.0000000,90.0000000); //object(vgshseing28) (106)
	CreateDynamicObject(8558,916.1718750,4839.1357422,59.2509651,90.0000000,179.9945068,270.0000000); //object(vgshseing28) (107)
	CreateDynamicObject(3458,916.1542969,4861.8564453,69.0550842,0.0000000,90.0000000,0.0000000); //object(vgncarshade1) (114)
	CreateDynamicObject(3458,916.2440186,4866.9521484,69.0550842,0.0000000,90.0000000,-2.0000000); //object(vgncarshade1) (61)
	CreateDynamicObject(3458,916.5107422,4872.0415039,69.0550842,0.0000000,90.0000000,-4.0000000); //object(vgncarshade1) (62)
	CreateDynamicObject(3458,916.9549561,4877.1186523,69.0550842,0.0000000,90.0000000,-6.0000000); //object(vgncarshade1) (63)
	CreateDynamicObject(3458,917.5760498,4882.1767578,69.0550842,0.0000000,90.0000000,-8.0000000); //object(vgncarshade1) (64)
	CreateDynamicObject(3458,918.3732910,4887.2104492,69.0550842,0.0000000,90.0000000,-10.0000000); //object(vgncarshade1) (65)
	CreateDynamicObject(3458,919.3457031,4892.2133789,69.0550842,0.0000000,90.0000000,-12.0000000); //object(vgncarshade1) (66)
	CreateDynamicObject(3458,920.4921875,4897.1791992,69.0550842,0.0000000,90.0000000,-14.0000000); //object(vgncarshade1) (67)
	CreateDynamicObject(3458,921.8112183,4902.1020508,69.0550842,0.0000000,90.0000000,-16.0000000); //object(vgncarshade1) (69)
	CreateDynamicObject(3458,923.3012695,4906.9755859,69.0550842,0.0000000,90.0000000,-18.0000000); //object(vgncarshade1) (70)
	CreateDynamicObject(3458,924.9604492,4911.7944336,69.0550842,0.0000000,90.0000000,-20.0000000); //object(vgncarshade1) (71)
	CreateDynamicObject(3458,926.7868652,4916.5522461,69.0550842,0.0000000,90.0000000,-22.0000000); //object(vgncarshade1) (72)
	CreateDynamicObject(3458,928.7781982,4921.2436523,69.0550842,0.0000000,90.0000000,-24.0000000); //object(vgncarshade1) (73)
	CreateDynamicObject(3458,930.9320068,4925.8623047,69.0550842,0.0000000,90.0000000,-26.0000000); //object(vgncarshade1) (75)
	CreateDynamicObject(3458,933.2457275,4930.4033203,69.0550842,0.0000000,90.0000000,-28.0000000); //object(vgncarshade1) (76)
	CreateDynamicObject(3458,935.7165527,4934.8608398,69.0550842,0.0000000,90.0000000,-30.0000000); //object(vgncarshade1) (77)
	CreateDynamicObject(3458,938.3413696,4939.2290039,69.0550842,0.0000000,90.0000000,-32.0000000); //object(vgncarshade1) (78)
	CreateDynamicObject(3458,941.1170654,4943.5034180,69.0550842,0.0000000,90.0000000,-34.0000000); //object(vgncarshade1) (81)
	CreateDynamicObject(3458,944.0402222,4947.6782227,69.0550842,0.0000000,90.0000000,-36.0000000); //object(vgncarshade1) (82)
	CreateDynamicObject(3458,947.1072998,4951.7480469,69.0550842,0.0000000,90.0000000,-38.0000000); //object(vgncarshade1) (86)
	CreateDynamicObject(3458,950.3145752,4955.7089844,69.0550842,0.0000000,90.0000000,-40.0000000); //object(vgncarshade1) (88)
	CreateDynamicObject(3458,953.6581421,4959.5551758,69.0550842,0.0000000,90.0000000,-42.0000000); //object(vgncarshade1) (89)
	CreateDynamicObject(3458,957.1338501,4963.2822266,69.0550842,0.0000000,90.0000000,-44.0000000); //object(vgncarshade1) (90)
	CreateDynamicObject(3458,960.7375488,4966.8862305,69.0550842,0.0000000,90.0000000,-46.0000000); //object(vgncarshade1) (91)
	CreateDynamicObject(3458,964.4648438,4970.3618164,69.0550842,0.0000000,90.0000000,-48.0000000); //object(vgncarshade1) (92)
	CreateDynamicObject(3458,968.3111572,4973.7055664,69.0550842,0.0000000,90.0000000,-50.0000000); //object(vgncarshade1) (94)
	CreateDynamicObject(3458,972.2717896,4976.9125977,69.0550842,0.0000000,90.0000000,-52.0000000); //object(vgncarshade1) (95)
	CreateDynamicObject(3458,976.3419189,4979.9799805,69.0550842,0.0000000,90.0000000,-54.0000000); //object(vgncarshade1) (96)
	CreateDynamicObject(3458,980.5166626,4982.9028320,69.0550842,0.0000000,90.0000000,-56.0000000); //object(vgncarshade1) (97)
	CreateDynamicObject(3458,984.7908936,4985.6787109,69.0550842,0.0000000,90.0000000,-58.0000000); //object(vgncarshade1) (98)
	CreateDynamicObject(3458,989.1593628,4988.3037109,69.0550842,0.0000000,90.0000000,-60.0000000); //object(vgncarshade1) (99)
	CreateDynamicObject(3458,993.6167603,4990.7744141,69.0550842,0.0000000,90.0000000,-62.0000000); //object(vgncarshade1) (100)
	CreateDynamicObject(3458,998.1576538,4993.0878906,69.0550842,0.0000000,90.0000000,-64.0000000); //object(vgncarshade1) (101)
	CreateDynamicObject(3458,1002.7766113,4995.2416992,69.0550842,0.0000000,90.0000000,-66.0000000); //object(vgncarshade1) (102)
	CreateDynamicObject(3458,1007.4678345,4997.2333984,69.0550842,0.0000000,90.0000000,-68.0000000); //object(vgncarshade1) (103)
	CreateDynamicObject(3458,1012.2257080,4999.0595703,69.0550842,0.0000000,90.0000000,-70.0000000); //object(vgncarshade1) (104)
	CreateDynamicObject(3458,1017.0444946,5000.7187500,69.0550842,0.0000000,90.0000000,-72.0000000); //object(vgncarshade1) (105)
	CreateDynamicObject(3458,1021.9182129,5002.2089844,69.0550842,0.0000000,90.0000000,-74.0000000); //object(vgncarshade1) (107)
	CreateDynamicObject(3458,1026.8409424,5003.5278320,69.0550842,0.0000000,90.0000000,-76.0000000); //object(vgncarshade1) (108)
	CreateDynamicObject(3458,1031.8067627,5004.6743164,69.0550842,0.0000000,90.0000000,-78.0000000); //object(vgncarshade1) (109)
	CreateDynamicObject(3458,1036.8085938,5005.6464844,69.0550842,0.0000000,90.0000000,279.9975586); //object(vgncarshade1) (110)
	CreateDynamicObject(3458,1041.8431396,5006.4438477,69.0550842,0.0000000,90.0000000,-82.0000000); //object(vgncarshade1) (111)
	CreateDynamicObject(3458,1046.9016113,5007.0649414,69.0550842,0.0000000,90.0000000,-84.0000000); //object(vgncarshade1) (112)
	CreateDynamicObject(3458,1051.9785156,5007.5087891,69.0550842,0.0000000,90.0000000,273.9990234); //object(vgncarshade1) (113)
	CreateDynamicObject(3458,1057.0673828,5007.7753906,69.0550842,0.0000000,90.0000000,271.9995117); //object(vgncarshade1) (115)
	CreateDynamicObject(3458,1062.1630859,5007.8642578,69.0550842,0.0000000,90.0000000,269.9945068); //object(vgncarshade1) (116)
	CreateDynamicObject(3458,1341.9440918,4861.8359375,69.0550842,0.0000000,90.0000000,180.0000000); //object(vgncarshade1) (117)
	CreateDynamicObject(3458,1341.8552246,4866.9316406,69.0550842,0.0000000,90.0000000,182.0000000); //object(vgncarshade1) (118)
	CreateDynamicObject(3458,1341.5883789,4872.0209961,69.0550842,0.0000000,90.0000000,184.0000000); //object(vgncarshade1) (119)
	CreateDynamicObject(3458,1341.1442871,4877.0981445,69.0550842,0.0000000,90.0000000,186.0000000); //object(vgncarshade1) (120)
	CreateDynamicObject(3458,1340.5231934,4882.1562500,69.0550842,0.0000000,90.0000000,188.0000000); //object(vgncarshade1) (121)
	CreateDynamicObject(3458,1339.7259521,4887.1899414,69.0550842,0.0000000,90.0000000,190.0000000); //object(vgncarshade1) (122)
	CreateDynamicObject(3458,1338.7534180,4892.1928711,69.0550842,0.0000000,90.0000000,192.0000000); //object(vgncarshade1) (123)
	CreateDynamicObject(3458,1337.6070557,4897.1586914,69.0550842,0.0000000,90.0000000,194.0000000); //object(vgncarshade1) (124)
	CreateDynamicObject(3458,1336.2880859,4902.0815430,69.0550842,0.0000000,90.0000000,196.0000000); //object(vgncarshade1) (125)
	CreateDynamicObject(3458,1334.7979736,4906.9550781,69.0550842,0.0000000,90.0000000,198.0000000); //object(vgncarshade1) (126)
	CreateDynamicObject(3458,1333.1386719,4911.7739258,69.0550842,0.0000000,90.0000000,200.0000000); //object(vgncarshade1) (127)
	CreateDynamicObject(3458,1331.3123779,4916.5317383,69.0550842,0.0000000,90.0000000,202.0000000); //object(vgncarshade1) (128)
	CreateDynamicObject(3458,1329.3210449,4921.2231445,69.0550842,0.0000000,90.0000000,204.0000000); //object(vgncarshade1) (129)
	CreateDynamicObject(3458,1327.1672363,4925.8417969,69.0550842,0.0000000,90.0000000,206.0000000); //object(vgncarshade1) (130)
	CreateDynamicObject(3458,1324.8535156,4930.3828125,69.0550842,0.0000000,90.0000000,208.0000000); //object(vgncarshade1) (131)
	CreateDynamicObject(3458,1322.3826904,4934.8403320,69.0550842,0.0000000,90.0000000,210.0000000); //object(vgncarshade1) (132)
	CreateDynamicObject(3458,1319.7578125,4939.2084961,69.0550842,0.0000000,90.0000000,212.0000000); //object(vgncarshade1) (133)
	CreateDynamicObject(3458,1316.9821777,4943.4829102,69.0550842,0.0000000,90.0000000,214.0000000); //object(vgncarshade1) (134)
	CreateDynamicObject(3458,1314.0589600,4947.6577148,69.0550842,0.0000000,90.0000000,216.0000000); //object(vgncarshade1) (135)
	CreateDynamicObject(3458,1310.9919434,4951.7275391,69.0550842,0.0000000,90.0000000,218.0000000); //object(vgncarshade1) (136)
	CreateDynamicObject(3458,1307.7846680,4955.6884766,69.0550842,0.0000000,90.0000000,220.0000000); //object(vgncarshade1) (137)
	CreateDynamicObject(3458,1304.4410400,4959.5346680,69.0550842,0.0000000,90.0000000,222.0000000); //object(vgncarshade1) (138)
	CreateDynamicObject(3458,1300.9653320,4963.2617188,69.0550842,0.0000000,90.0000000,224.0000000); //object(vgncarshade1) (139)
	CreateDynamicObject(3458,1297.3615723,4966.8657227,69.0550842,0.0000000,90.0000000,226.0000000); //object(vgncarshade1) (140)
	CreateDynamicObject(3458,1293.6343994,4970.3413086,69.0550842,0.0000000,90.0000000,228.0000000); //object(vgncarshade1) (141)
	CreateDynamicObject(3458,1289.7880859,4973.6850586,69.0550842,0.0000000,90.0000000,230.0000000); //object(vgncarshade1) (142)
	CreateDynamicObject(3458,1285.8273926,4976.8920898,69.0550842,0.0000000,90.0000000,232.0000000); //object(vgncarshade1) (143)
	CreateDynamicObject(3458,1281.7572021,4979.9594727,69.0550842,0.0000000,90.0000000,234.0000000); //object(vgncarshade1) (144)
	CreateDynamicObject(3458,1277.5825195,4982.8823242,69.0550842,0.0000000,90.0000000,236.0000000); //object(vgncarshade1) (145)
	CreateDynamicObject(3458,1273.3083496,4985.6582031,69.0550842,0.0000000,90.0000000,238.0000000); //object(vgncarshade1) (146)
	CreateDynamicObject(3458,1268.9398193,4988.2832031,69.0550842,0.0000000,90.0000000,240.0000000); //object(vgncarshade1) (147)
	CreateDynamicObject(3458,1264.4824219,4990.7539062,69.0550842,0.0000000,90.0000000,242.0000000); //object(vgncarshade1) (148)
	CreateDynamicObject(3458,1259.9415283,4993.0673828,69.0550842,0.0000000,90.0000000,244.0000000); //object(vgncarshade1) (149)
	CreateDynamicObject(3458,1255.3226318,4995.2211914,69.0550842,0.0000000,90.0000000,246.0000000); //object(vgncarshade1) (150)
	CreateDynamicObject(3458,1250.6313477,4997.2128906,69.0550842,0.0000000,90.0000000,248.0000000); //object(vgncarshade1) (151)
	CreateDynamicObject(3458,1245.8734131,4999.0390625,69.0550842,0.0000000,90.0000000,250.0000000); //object(vgncarshade1) (152)
	CreateDynamicObject(3458,1241.0546875,5000.6982422,69.0550842,0.0000000,90.0000000,252.0000000); //object(vgncarshade1) (153)
	CreateDynamicObject(3458,1236.1810303,5002.1884766,69.0550842,0.0000000,90.0000000,254.0000000); //object(vgncarshade1) (154)
	CreateDynamicObject(3458,1231.2583008,5003.5073242,69.0550842,0.0000000,90.0000000,256.0000000); //object(vgncarshade1) (155)
	CreateDynamicObject(3458,1226.2924805,5004.6538086,69.0550842,0.0000000,90.0000000,258.0000000); //object(vgncarshade1) (156)
	CreateDynamicObject(3458,1221.2897949,5005.6264648,69.0550842,0.0000000,90.0000000,260.0000000); //object(vgncarshade1) (157)
	CreateDynamicObject(3458,1216.2561035,5006.4233398,69.0550842,0.0000000,90.0000000,262.0000000); //object(vgncarshade1) (158)
	CreateDynamicObject(3458,1211.1976318,5007.0444336,69.0550842,0.0000000,90.0000000,264.0000000); //object(vgncarshade1) (159)
	CreateDynamicObject(3458,1206.1206055,5007.4887695,69.0550842,0.0000000,90.0000000,266.0000000); //object(vgncarshade1) (160)
	CreateDynamicObject(3458,1201.0312500,5007.7548828,69.0550842,0.0000000,90.0000000,267.9949951); //object(vgncarshade1) (161)
	CreateDynamicObject(3458,1195.9355469,5007.8437500,69.0550842,0.0000000,90.0000000,270.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1067.0842285,5007.8710938,69.0550842,0.0000000,90.0000000,269.9945068); //object(vgncarshade1) (116)
	CreateDynamicObject(3458,1072.1497803,5007.8803711,69.0550842,0.0000000,90.0000000,269.9945068); //object(vgncarshade1) (116)
	CreateDynamicObject(3458,1077.1904297,5007.8925781,69.0550842,0.0000000,90.0000000,269.9890137); //object(vgncarshade1) (116)
	CreateDynamicObject(3458,1082.2561035,5007.8994141,69.0550842,0.0000000,90.0000000,269.9945068); //object(vgncarshade1) (116)
	CreateDynamicObject(3458,1190.8562012,5007.8510742,69.0550842,0.0000000,90.0000000,270.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1185.7745361,5007.8588867,69.0550842,0.0000000,90.0000000,270.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1180.6956787,5007.8637695,69.0550842,0.0000000,90.0000000,270.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1175.6666260,5007.8945312,69.0550842,0.0000000,90.0000000,270.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(8558,1178.2626953,5007.8457031,46.3259392,88.9947815,0.0000000,0.0000000); //object(vgshseing28) (159)
	CreateDynamicObject(8558,1079.8591309,5007.8452148,46.3259392,88.9947815,0.0000000,0.0000000); //object(vgshseing28) (209)
	CreateDynamicObject(8558,915.0806885,4860.8764648,68.9360046,0.0000000,90.0000000,270.0000000); //object(vgshseing28) (107)
	CreateDynamicObject(8558,1342.9737549,4860.7651367,68.9360046,0.0000000,90.0000000,270.0000000); //object(vgshseing28) (107)
	CreateDynamicObject(3458,1178.2636719,5008.9335938,47.4050522,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1097.7294922,5008.9501953,47.4050522,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(8558,1178.2626953,5007.8457031,46.3259392,88.9783630,0.0000000,0.0000000); //object(vgshseing28) (296)
	CreateDynamicObject(8558,1079.8591309,5007.8452148,46.3259392,88.9947815,0.0000000,0.0000000); //object(vgshseing28) (446)
	CreateDynamicObject(8558,1081.1591797,5007.4257812,41.1183968,81.7947845,0.0000000,0.0000000); //object(vgshseing28) (252)
	CreateDynamicObject(8558,1082.4591064,5006.3569336,36.0044937,74.5947876,0.0000000,0.0000000); //object(vgshseing28) (408)
	CreateDynamicObject(8558,1083.7587891,5004.6552734,31.0648727,67.3901367,0.0000000,0.0000000); //object(vgshseing28) (409)
	CreateDynamicObject(8558,1085.0590820,5002.3481445,26.3774395,60.1947899,0.0000000,0.0000000); //object(vgshseing28) (410)
	CreateDynamicObject(8558,1086.3591309,4999.4721680,22.0161114,52.9947891,0.0000000,0.0000000); //object(vgshseing28) (411)
	CreateDynamicObject(8558,1087.6591797,4996.0717773,18.0496769,45.7947884,0.0000000,0.0000000); //object(vgshseing28) (412)
	CreateDynamicObject(8558,1088.9591064,4992.2011719,14.5406837,38.5947876,0.0000000,0.0000000); //object(vgshseing28) (413)
	CreateDynamicObject(8558,1090.2591553,4987.9213867,11.5444756,31.3947868,0.0000000,0.0000000); //object(vgshseing28) (414)
	CreateDynamicObject(8558,1091.5590820,4983.2998047,9.1083031,24.1947861,0.0000000,0.0000000); //object(vgshseing28) (415)
	CreateDynamicObject(8558,1092.8591309,4978.4091797,7.2705803,16.9947853,0.0000000,0.0000000); //object(vgshseing28) (416)
	CreateDynamicObject(8558,1094.1591797,4973.3266602,6.0602989,9.7947855,0.0000000,0.0000000); //object(vgshseing28) (417)
	CreateDynamicObject(8558,1095.4591064,4968.1328125,5.4965401,2.5947857,0.0000000,0.0000000); //object(vgshseing28) (418)
	CreateDynamicObject(8558,1096.7587891,4962.9091797,5.5881920,355.3912354,0.0000000,0.0000000); //object(vgshseing28) (419)
	CreateDynamicObject(8558,1098.0590820,4957.7382812,6.3338165,-11.8052139,0.0000000,0.0000000); //object(vgshseing28) (420)
	CreateDynamicObject(8558,1099.3583984,4952.7011719,7.7216492,340.9936523,0.0000000,0.0000000); //object(vgshseing28) (421)
	CreateDynamicObject(8558,1100.6591797,4947.8784180,9.7298012,-26.2052155,0.0000000,0.0000000); //object(vgshseing28) (422)
	CreateDynamicObject(8558,1101.9591064,4943.3452148,12.3266106,-33.4052162,0.0000000,0.0000000); //object(vgshseing28) (423)
	CreateDynamicObject(8558,1103.2591553,4939.1733398,15.4711189,-40.6052170,0.0000000,0.0000000); //object(vgshseing28) (424)
	CreateDynamicObject(8558,1104.5590820,4935.4282227,19.1137371,-47.8052177,0.0000000,0.0000000); //object(vgshseing28) (425)
	CreateDynamicObject(8558,1105.8591309,4932.1689453,23.1970158,-55.0052185,0.0000000,0.0000000); //object(vgshseing28) (426)
	CreateDynamicObject(8558,1107.1591797,4929.4472656,27.6565609,297.7899170,0.0000000,0.0000000); //object(vgshseing28) (427)
	CreateDynamicObject(8558,1108.4591064,4927.3061523,32.4220467,-69.4052200,0.0000000,0.0000000); //object(vgshseing28) (428)
	CreateDynamicObject(8558,1109.7591553,4925.7792969,37.4183121,-76.6052170,0.0000000,0.0000000); //object(vgshseing28) (429)
	CreateDynamicObject(8558,1111.0590820,4924.8906250,42.5665627,-83.8052139,0.0000000,0.0000000); //object(vgshseing28) (430)
	CreateDynamicObject(8558,1112.3591309,4924.6538086,47.7856140,-91.0052109,0.0000000,0.0000000); //object(vgshseing28) (431)
	CreateDynamicObject(8558,1113.6591797,4925.0732422,52.9931564,261.7932129,0.0000000,0.0000000); //object(vgshseing28) (432)
	CreateDynamicObject(8558,1114.9591064,4926.1420898,58.1070633,-105.4052048,0.0000000,0.0000000); //object(vgshseing28) (433)
	CreateDynamicObject(8558,1116.2591553,4927.8437500,63.0466805,-112.6052017,0.0000000,0.0000000); //object(vgshseing28) (434)
	CreateDynamicObject(8558,1117.5590820,4930.1508789,67.7341080,-119.8051987,0.0000000,0.0000000); //object(vgshseing28) (435)
	CreateDynamicObject(8558,1118.8591309,4933.0268555,72.0954361,-127.0051956,0.0000000,0.0000000); //object(vgshseing28) (436)
	CreateDynamicObject(8558,1120.1591797,4936.4272461,76.0618744,-134.2052002,0.0000000,0.0000000); //object(vgshseing28) (437)
	CreateDynamicObject(8558,1121.4591064,4940.2978516,79.5708618,-141.4051971,0.0000000,0.0000000); //object(vgshseing28) (438)
	CreateDynamicObject(8558,1122.7591553,4944.5776367,82.5670776,-148.6051941,0.0000000,0.0000000); //object(vgshseing28) (439)
	CreateDynamicObject(8558,1124.0590820,4949.1992188,85.0032501,204.1948242,0.0000000,0.0000000); //object(vgshseing28) (440)
	CreateDynamicObject(8558,1125.3591309,4954.0898438,86.8409729,-163.0051880,0.0000000,0.0000000); //object(vgshseing28) (441)
	CreateDynamicObject(8558,1126.6591797,4959.1723633,88.0512543,-170.2051849,0.0000000,0.0000000); //object(vgshseing28) (442)
	CreateDynamicObject(8558,1178.2626953,5007.8457031,46.3259392,88.9782715,0.0000000,0.0000000); //object(vgshseing28) (445)
	CreateDynamicObject(8558,1176.9626465,5007.4248047,41.1185188,81.7783661,0.0000000,0.0000000); //object(vgshseing28) (447)
	CreateDynamicObject(8558,1175.6627197,5006.3544922,36.0049210,74.5783691,0.0000000,0.0000000); //object(vgshseing28) (448)
	CreateDynamicObject(8558,1174.3626709,5004.6518555,31.0657921,67.3783722,0.0000000,0.0000000); //object(vgshseing28) (449)
	CreateDynamicObject(8558,1173.0627441,5002.3432617,26.3790150,60.1783714,0.0000000,0.0000000); //object(vgshseing28) (450)
	CreateDynamicObject(8558,1171.7626953,4999.4658203,22.0185127,52.9783707,0.0000000,0.0000000); //object(vgshseing28) (451)
	CreateDynamicObject(8558,1170.4626465,4996.0644531,18.0530529,45.7783699,0.0000000,0.0000000); //object(vgshseing28) (452)
	CreateDynamicObject(8558,1169.1627197,4992.1928711,14.5451698,38.5783691,0.0000000,0.0000000); //object(vgshseing28) (453)
	CreateDynamicObject(8558,1167.8626709,4987.9121094,11.5501900,31.3783684,0.0000000,0.0000000); //object(vgshseing28) (454)
	CreateDynamicObject(8558,1166.5627441,4983.2895508,9.1153374,24.1783676,0.0000000,0.0000000); //object(vgshseing28) (455)
	CreateDynamicObject(8558,1165.2626953,4978.3989258,7.2790184,16.9783669,0.0000000,0.0000000); //object(vgshseing28) (456)
	CreateDynamicObject(8558,1163.9626465,4973.3159180,6.0701942,9.7783670,0.0000000,0.0000000); //object(vgshseing28) (457)
	CreateDynamicObject(8558,1162.6627197,4968.1220703,5.5079231,2.5783672,0.0000000,0.0000000); //object(vgshseing28) (458)
	CreateDynamicObject(8558,1161.3626709,4962.8984375,5.6010742,-4.6216326,0.0000000,0.0000000); //object(vgshseing28) (459)
	CreateDynamicObject(8558,1160.0627441,4957.7275391,6.3481750,-11.8216324,0.0000000,0.0000000); //object(vgshseing28) (460)
	CreateDynamicObject(8558,1158.7626953,4952.6914062,7.7374535,-19.0216331,0.0000000,0.0000000); //object(vgshseing28) (461)
	CreateDynamicObject(8558,1157.4626465,4947.8691406,9.7469902,-26.2216339,0.0000000,0.0000000); //object(vgshseing28) (462)
	CreateDynamicObject(8558,1156.1627197,4943.3364258,12.3450966,-33.4216347,0.0000000,0.0000000); //object(vgshseing28) (463)
	CreateDynamicObject(8558,1154.8626709,4939.1650391,15.4907990,-40.6216354,0.0000000,0.0000000); //object(vgshseing28) (464)
	CreateDynamicObject(8558,1153.5627441,4935.4208984,19.1344910,-47.8216362,0.0000000,0.0000000); //object(vgshseing28) (465)
	CreateDynamicObject(8558,1152.2626953,4932.1630859,23.2187042,-55.0216370,0.0000000,0.0000000); //object(vgshseing28) (466)
	CreateDynamicObject(8558,1150.9626465,4929.4428711,27.6790295,-62.2216377,0.0000000,0.0000000); //object(vgshseing28) (467)
	CreateDynamicObject(8558,1149.6627197,4927.3032227,32.4451294,-69.4216385,0.0000000,0.0000000); //object(vgshseing28) (468)
	CreateDynamicObject(8558,1148.3626709,4925.7773438,37.4418297,-76.6216354,0.0000000,0.0000000); //object(vgshseing28) (469)
	CreateDynamicObject(8558,1147.0627441,4924.8901367,42.5903358,-83.8216324,0.0000000,0.0000000); //object(vgshseing28) (470)
	CreateDynamicObject(8558,1145.7626953,4924.6552734,47.8094559,-91.0216293,0.0000000,0.0000000); //object(vgshseing28) (471)
	CreateDynamicObject(8558,1144.4626465,4925.0761719,53.0168724,-98.2216263,0.0000000,0.0000000); //object(vgshseing28) (472)
	CreateDynamicObject(8558,1143.1627197,4926.1464844,58.1304703,-105.4216232,0.0000000,0.0000000); //object(vgshseing28) (473)
	CreateDynamicObject(8558,1141.8626709,4927.8491211,63.0696068,-112.6216202,0.0000000,0.0000000); //object(vgshseing28) (474)
	CreateDynamicObject(8558,1140.5627441,4930.1577148,67.7563782,-119.8216171,0.0000000,0.0000000); //object(vgshseing28) (475)
	CreateDynamicObject(8558,1139.2626953,4933.0351562,72.1168747,-127.0216141,0.0000000,0.0000000); //object(vgshseing28) (476)
	CreateDynamicObject(8558,1137.9626465,4936.4365234,76.0823364,-134.2216187,0.0000000,0.0000000); //object(vgshseing28) (477)
	CreateDynamicObject(8558,1136.6627197,4940.3081055,79.5902252,-141.4216156,0.0000000,0.0000000); //object(vgshseing28) (478)
	CreateDynamicObject(8558,1135.3626709,4944.5888672,82.5852051,-148.6216125,0.0000000,0.0000000); //object(vgshseing28) (479)
	CreateDynamicObject(8558,1134.0627441,4949.2114258,85.0200500,-155.8216095,0.0000000,0.0000000); //object(vgshseing28) (480)
	CreateDynamicObject(8558,1132.7626953,4954.1020508,86.8563690,-163.0216064,0.0000000,0.0000000); //object(vgshseing28) (481)
	CreateDynamicObject(8558,1131.4626465,4959.1850586,88.0652008,-170.2216034,0.0000000,0.0000000); //object(vgshseing28) (482)
	CreateDynamicObject(8558,1174.6269531,5008.9521484,69.0509491,0.0000000,90.0000000,179.9945068); //object(vgshseing28) (445)
	CreateDynamicObject(8558,1083.2978516,5008.9375000,69.0509491,0.0000000,90.0000000,0.0000000); //object(vgshseing28) (445)
	CreateDynamicObject(3458,1131.4453125,4960.4062500,89.5750580,270.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1126.6455078,4960.3916016,89.5750580,270.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1137.8779297,5008.9238281,47.4050522,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(978,1111.1875000,4961.8671875,86.3722153,0.0000000,179.9945068,179.9945068); //object(sub_roadright) (2)
	CreateDynamicObject(978,1147.0539551,4961.9238281,86.3722153,0.0000000,179.9945068,179.9945068); //object(sub_roadright) (3)
	CreateDynamicObject(3877,1115.5683594,4961.9179688,86.1105118,0.0000000,180.0000000,180.0000000); //object(sf_rooflite) (1)
	CreateDynamicObject(3877,1106.7277832,4961.4819336,86.1105118,0.0000000,179.9945068,179.9945068); //object(sf_rooflite) (2)
	CreateDynamicObject(3877,1151.4335938,4962.0000000,86.1105118,0.0000000,179.9945068,179.9945068); //object(sf_rooflite) (3)
	CreateDynamicObject(3877,1142.6463623,4961.9951172,86.1105118,0.0000000,179.9945068,179.9945068); //object(sf_rooflite) (4)
	CreateDynamicObject(8558,1129.0283203,5020.0664062,68.4109116,39.9957275,0.0000000,0.0000000); //object(vgshseing28) (445)
	CreateDynamicObject(3458,1129.0292969,5022.9882812,68.9969940,342.0867920,0.0000000,0.0000000); //object(vgncarshade1) (172)
	CreateDynamicObject(3458,1129.0292969,5022.9882812,68.9969940,342.0867920,0.0000000,0.0000000); //object(vgncarshade1) (56)
	CreateDynamicObject(3458,1129.0292969,5027.8793945,67.4764099,343.3724976,0.0000000,0.0000000); //object(vgncarshade1) (57)
	CreateDynamicObject(3458,1129.0292969,5032.8032227,66.0659027,344.6582031,0.0000000,0.0000000); //object(vgncarshade1) (58)
	CreateDynamicObject(3458,1129.0292969,5037.7578125,64.7662506,345.9429932,0.0000000,0.0000000); //object(vgncarshade1) (59)
	CreateDynamicObject(3458,1129.0292969,5042.7397461,63.5781097,347.2296143,0.0000000,0.0000000); //object(vgncarshade1) (60)
	CreateDynamicObject(3458,1129.0292969,5047.7470703,62.5020294,348.5137939,0.0000000,0.0000000); //object(vgncarshade1) (163)
	CreateDynamicObject(3458,1129.0292969,5052.7783203,61.5385895,349.8010254,0.0000000,0.0000000); //object(vgncarshade1) (164)
	CreateDynamicObject(3458,1129.0292969,5057.8291016,60.6882782,351.0845947,0.0000000,0.0000000); //object(vgncarshade1) (165)
	CreateDynamicObject(3458,1129.0292969,5062.8974609,59.9515076,352.3699951,0.0000000,0.0000000); //object(vgncarshade1) (166)
	CreateDynamicObject(3458,1129.0292969,5067.9814453,59.3286438,353.6553955,0.0000000,0.0000000); //object(vgncarshade1) (167)
	CreateDynamicObject(3458,1129.0292969,5073.0781250,58.8200226,354.9438477,0.0000000,0.0000000); //object(vgncarshade1) (168)
	CreateDynamicObject(3458,1129.0292969,5078.1845703,58.4258881,356.2261963,0.0000000,0.0000000); //object(vgncarshade1) (169)
	CreateDynamicObject(3458,1129.0292969,5083.2998047,58.1464233,357.5115967,0.0000000,0.0000000); //object(vgncarshade1) (170)
	CreateDynamicObject(3458,1129.0292969,5088.4189453,57.9818115,358.7969971,0.0000000,0.0000000); //object(vgncarshade1) (171)
	CreateDynamicObject(8558,1129.0292969,5093.5400391,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (119)
	CreateDynamicObject(3458,1119.5185547,5007.9028320,46.4300079,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1156.5451660,5007.9101562,46.4300079,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1119.5185547,5007.9023438,41.4300385,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1156.5449219,5007.9101562,41.4300079,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1097.8105469,5014.0517578,47.4050522,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1137.8608398,5013.9238281,47.4050522,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1178.2719727,5014.0273438,47.4050522,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(8558,1174.6171875,5014.0517578,69.0509491,0.0000000,90.0000000,179.9945068); //object(vgshseing28) (445)
	CreateDynamicObject(8558,1083.3310547,5014.0410156,69.0509491,0.0000000,90.0000000,0.0000000); //object(vgshseing28) (445)
	CreateDynamicObject(3458,1153.2514648,5009.2651367,88.5350266,44.0000000,180.0000000,180.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(8558,1129.0161133,5016.2602539,65.2108841,39.9957275,0.0000000,0.0000000); //object(vgshseing28) (445)
	CreateDynamicObject(8558,1174.6220703,5019.0947266,69.0509491,0.0000000,90.0000000,179.9945068); //object(vgshseing28) (445)
	CreateDynamicObject(8558,1083.3354492,5019.0776367,69.0509491,0.0000000,90.0000000,0.0000000); //object(vgshseing28) (445)
	CreateDynamicObject(3458,1112.9156494,5009.2739258,88.5350266,43.9947510,179.9945068,179.9945068); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1090.2122803,5009.2993164,88.5350266,43.9947510,179.9945068,179.9945068); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1092.1640625,5016.2607422,65.1550903,39.9957275,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1164.8717041,5016.2109375,65.1550903,39.9957275,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1111.2393799,3679.4687500,-0.0499649,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1116.3642578,3679.4501953,-0.0499649,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1146.4901123,3679.4929199,-0.0499649,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1141.3857422,3679.5014648,-0.0499649,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1126.5830078,3679.4208984,-0.0499649,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1131.7070312,3679.4052734,-0.0499649,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(8558,1131.7148438,3639.0097656,-0.0499763,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1126.6083984,3639.0410156,-0.0499763,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1116.3544922,3639.0488281,-0.0499763,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1111.2408447,3639.0839844,-0.0499763,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1141.3857422,3639.1074219,-0.0499763,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1146.5107422,3639.1279297,-0.0499763,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1147.5385742,3679.4389648,-1.0999767,90.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1132.7248535,3679.4240723,-1.0999767,90.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1117.3861084,3679.4353027,-1.0999762,90.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1140.3366699,3679.4606934,-1.0999767,270.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1125.5354004,3679.4877930,-1.0749764,270.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(8558,1110.2048340,3679.5654297,-1.0999764,270.0000000,0.0000000,90.0000000); //object(vgshseing28) (14)
	CreateDynamicObject(3458,1110.1861572,3639.2155762,-1.1249645,270.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1125.5382080,3639.1950684,-1.0999645,270.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1140.3474121,3639.1108398,-1.0749640,270.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1147.5435791,3639.1704102,-1.0999635,90.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1132.7518311,3639.0375977,-1.1249633,90.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1117.3956299,3639.0583496,-1.0999628,90.0000000,0.0000000,90.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1128.8599854,3701.1821289,-1.0999652,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(7301,1119.2949219,3697.2900391,11.9167881,0.0000000,0.0000000,135.0000000); //object(vgsn_addboard03) (4)
	CreateDynamicObject(3458,1128.8856201,3620.3964844,-1.0999652,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,1128.8956299,3618.0173340,-1.1249652,90.0000000,180.0000000,0.0000000); //object(vgncarshade1) (3)
	CreateDynamicObject(1259,1117.4726562,3697.6123047,5.9088035,0.0000000,0.0000000,90.0000000); //object(billbd1) (1)
	CreateDynamicObject(1259,1144.2783203,3697.5166016,6.0338039,0.0000000,0.0000000,90.0000000); //object(billbd1) (4)
	CreateDynamicObject(7301,1146.0820312,3697.1464844,11.9167881,0.0000000,0.0000000,135.0000000); //object(vgsn_addboard03) (5)
	CreateDynamicObject(7301,1118.9753418,3699.3913574,11.9167881,0.0000000,0.0000000,315.2500000); //object(vgsn_addboard03) (4)
	CreateDynamicObject(7301,1145.9841309,3699.2590332,11.9167881,0.0000000,0.0000000,315.2471924); //object(vgsn_addboard03) (4)
	CreateDynamicObject(8558,1129.0371094,5098.6406250,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (119)
	CreateDynamicObject(8558,1129.0461426,5103.7412109,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (2)
	CreateDynamicObject(8558,1129.0545654,5108.8417969,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (3)
	CreateDynamicObject(8558,1129.0629883,5113.9423828,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (24)
	CreateDynamicObject(8558,1129.0714111,5119.0429688,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (35)
	CreateDynamicObject(8558,1129.0798340,5124.1435547,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (108)
	CreateDynamicObject(8558,1129.0882568,5129.2441406,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (109)
	CreateDynamicObject(8558,1129.0966797,5134.3447266,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (110)
	CreateDynamicObject(8558,1129.1051025,5139.4453125,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (111)
	CreateDynamicObject(8558,1129.1135254,5144.5458984,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (112)
	CreateDynamicObject(8558,1129.1219482,5149.6464844,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (113)
	CreateDynamicObject(8558,1129.1303711,5154.7470703,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (114)
	CreateDynamicObject(8558,1129.1387939,5159.8476562,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (115)
	CreateDynamicObject(8558,1129.1472168,5164.9482422,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (116)
	CreateDynamicObject(8558,1129.1556396,5170.0488281,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (117)
	CreateDynamicObject(8558,1129.1640625,5175.1494141,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (118)
	CreateDynamicObject(8558,1129.1724854,5180.2500000,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (134)
	CreateDynamicObject(8558,1129.1806641,5185.3505859,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (135)
	CreateDynamicObject(8558,1129.1884766,5190.4511719,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (136)
	CreateDynamicObject(8558,1129.1972656,5195.5517578,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (137)
	CreateDynamicObject(8558,1129.2060547,5200.6523438,57.9320831,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1106.4609375,5183.0097656,57.9318085,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (171)
	CreateDynamicObject(3458,1151.9375000,5183.0039062,57.9318085,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (171)
	CreateDynamicObject(3458,1106.4609375,5183.0097656,57.9318085,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (371)
	CreateDynamicObject(3458,1101.3441162,5187.2954102,58.1616058,5.1428571,0.0000000,90.0000000); //object(vgncarshade1) (356)
	CreateDynamicObject(3458,1096.2684326,5191.5810547,58.8491516,10.2857141,0.0000000,90.0000000); //object(vgncarshade1) (357)
	CreateDynamicObject(3458,1091.2749023,5195.8666992,59.9889030,15.4285717,0.0000000,90.0000000); //object(vgncarshade1) (359)
	CreateDynamicObject(3458,1086.4035645,5200.1528320,61.5716934,20.5714283,0.0000000,90.0000000); //object(vgncarshade1) (360)
	CreateDynamicObject(3458,1081.6937256,5204.4384766,63.5847702,25.7142849,0.0000000,90.0000000); //object(vgncarshade1) (361)
	CreateDynamicObject(3458,1077.1826172,5208.7236328,66.0119324,30.8551025,0.0000000,90.0000000); //object(vgncarshade1) (362)
	CreateDynamicObject(3458,1072.9085693,5213.0097656,68.8336334,36.0000000,0.0000000,90.0000000); //object(vgncarshade1) (363)
	CreateDynamicObject(3458,1068.9040527,5217.2954102,72.0271454,41.1428566,0.0000000,90.0000000); //object(vgncarshade1) (364)
	CreateDynamicObject(3458,1065.2019043,5221.5810547,75.5667801,46.2857132,0.0000000,90.0000000); //object(vgncarshade1) (365)
	CreateDynamicObject(3458,1061.8319092,5225.8666992,79.4240189,51.4285698,0.0000000,90.0000000); //object(vgncarshade1) (366)
	CreateDynamicObject(3458,1058.8212891,5230.1528320,83.5678101,56.5714264,0.0000000,90.0000000); //object(vgncarshade1) (367)
	CreateDynamicObject(3458,1056.1942139,5234.4384766,87.9647903,61.7142830,0.0000000,90.0000000); //object(vgncarshade1) (368)
	CreateDynamicObject(3458,1053.9716797,5238.7236328,92.5795670,66.8518066,0.0000000,90.0000000); //object(vgncarshade1) (369)
	CreateDynamicObject(3458,1151.9375000,5183.0039062,57.9318085,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (370)
	CreateDynamicObject(3458,1157.0543213,5187.2895508,58.1616058,-5.1428571,0.0000000,90.0000000); //object(vgncarshade1) (372)
	CreateDynamicObject(3458,1162.1300049,5191.5751953,58.8491516,-10.2857141,0.0000000,90.0000000); //object(vgncarshade1) (373)
	CreateDynamicObject(3458,1167.1235352,5195.8608398,59.9889030,-15.4285717,0.0000000,90.0000000); //object(vgncarshade1) (374)
	CreateDynamicObject(3458,1171.9948730,5200.1469727,61.5716934,-20.5714283,0.0000000,90.0000000); //object(vgncarshade1) (375)
	CreateDynamicObject(3458,1176.7047119,5204.4326172,63.5847702,-25.7142849,0.0000000,90.0000000); //object(vgncarshade1) (376)
	CreateDynamicObject(3458,1181.2152100,5208.7182617,66.0119324,-30.8571415,0.0000000,90.0000000); //object(vgncarshade1) (377)
	CreateDynamicObject(3458,1185.4898682,5213.0039062,68.8336334,-36.0000000,0.0000000,90.0000000); //object(vgncarshade1) (378)
	CreateDynamicObject(3458,1189.4943848,5217.2895508,72.0271454,-41.1428566,0.0000000,90.0000000); //object(vgncarshade1) (379)
	CreateDynamicObject(3458,1193.1965332,5221.5751953,75.5667801,-46.2857132,0.0000000,90.0000000); //object(vgncarshade1) (380)
	CreateDynamicObject(3458,1196.5665283,5225.8608398,79.4240189,-51.4285698,0.0000000,90.0000000); //object(vgncarshade1) (381)
	CreateDynamicObject(3458,1199.5771484,5230.1469727,83.5678101,-56.5714264,0.0000000,90.0000000); //object(vgncarshade1) (382)
	CreateDynamicObject(3458,1202.2042236,5234.4326172,87.9647903,-61.7142830,0.0000000,90.0000000); //object(vgncarshade1) (383)
	CreateDynamicObject(3458,1204.4257812,5238.7177734,92.5795670,293.1427002,0.0000000,90.0000000); //object(vgncarshade1) (384)
	CreateDynamicObject(8558,1206.4235840,5238.7143555,97.2271042,293.0999756,0.0000000,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(8558,1051.9760742,5238.7807617,97.2271042,66.9012451,0.0000000,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(8558,1053.9687500,5278.9960938,92.5771103,66.8957520,0.0000000,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1053.9521484,5319.2436523,92.5795670,66.8518066,0.0000000,90.0000000); //object(vgncarshade1) (385)
	CreateDynamicObject(8558,1051.9521484,5319.2568359,97.2271042,66.8957520,0.0000000,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1051.9831543,5279.0673828,97.2045364,66.8518066,0.0000000,90.0000000); //object(vgncarshade1) (386)
	CreateDynamicObject(8558,1204.4312744,5279.0517578,92.5771103,293.1042480,0.0000000,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1204.4522705,5319.4296875,92.5795670,293.1427002,0.0000000,90.0000000); //object(vgncarshade1) (387)
	CreateDynamicObject(8558,1206.4416504,5319.4262695,97.2271042,293.0987549,0.0000000,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1206.4311523,5279.0288086,97.2045364,293.1481934,0.0000000,90.0000000); //object(vgncarshade1) (388)
	CreateDynamicObject(8558,1204.4732666,5359.7763672,92.5771103,293.1042480,0.0000000,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1206.4396973,5359.7729492,97.2045364,293.1427002,0.0000000,90.0000000); //object(vgncarshade1) (389)
	CreateDynamicObject(8558,1053.9487305,5359.6264648,92.5771103,66.8957520,0.0000000,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1051.9621582,5359.6166992,97.2045364,66.8518066,0.0000000,90.0000000); //object(vgncarshade1) (390)
	CreateDynamicObject(8558,1053.9487305,5359.6264648,92.5771103,66.8957520,0.0000000,90.0000000); //object(vgshseing28) (291)
	CreateDynamicObject(8558,1056.1679688,5363.9121094,87.9608765,61.7486572,0.0000000,90.0000000); //object(vgshseing28) (247)
	CreateDynamicObject(8558,1058.7919922,5368.1977539,83.5621567,56.6100388,0.0000000,90.0000000); //object(vgshseing28) (248)
	CreateDynamicObject(8558,1061.7998047,5372.4833984,79.4163666,51.4671822,0.0000000,90.0000000); //object(vgshseing28) (249)
	CreateDynamicObject(8558,1065.1672363,5376.7695312,75.5568924,46.3243256,0.0000000,90.0000000); //object(vgshseing28) (250)
	CreateDynamicObject(8558,1068.8669434,5381.0551758,72.0147934,41.1814690,0.0000000,90.0000000); //object(vgshseing28) (251)
	CreateDynamicObject(8558,1072.8692627,5385.3408203,68.8186035,36.0386124,0.0000000,90.0000000); //object(vgshseing28) (253)
	CreateDynamicObject(8558,1077.1420898,5389.6264648,65.9940491,30.8957558,0.0000000,90.0000000); //object(vgshseing28) (254)
	CreateDynamicObject(8558,1081.6507568,5393.9121094,63.5638618,25.7528992,0.0000000,90.0000000); //object(vgshseing28) (255)
	CreateDynamicObject(8558,1086.3592529,5398.1977539,61.5476265,20.6100426,0.0000000,90.0000000); //object(vgshseing28) (256)
	CreateDynamicObject(8558,1091.2294922,5402.4833984,59.9615707,15.4671860,0.0000000,90.0000000); //object(vgshseing28) (257)
	CreateDynamicObject(8558,1096.2222900,5406.7695312,58.8184586,10.3243294,0.0000000,90.0000000); //object(vgshseing28) (258)
	CreateDynamicObject(8558,1101.2973633,5411.0551758,58.1274986,5.1814723,0.0000000,90.0000000); //object(vgshseing28) (259)
	CreateDynamicObject(8558,1106.4140625,5415.3408203,57.8942528,0.0386152,0.0000000,90.0000000); //object(vgshseing28) (260)
	CreateDynamicObject(8558,1111.5310059,5419.6264648,58.1206017,-5.1042418,0.0000000,90.0000000); //object(vgshseing28) (261)
	CreateDynamicObject(8558,1116.6070557,5423.9121094,58.8047180,-10.2470989,0.0000000,90.0000000); //object(vgshseing28) (262)
	CreateDynamicObject(8558,1121.6014404,5428.1977539,59.9411011,-15.3899555,0.0000000,90.0000000); //object(vgshseing28) (263)
	CreateDynamicObject(8558,1126.4736328,5432.4833984,61.5205917,339.4665527,0.0000000,90.0000000); //object(vgshseing28) (264)
	CreateDynamicObject(8558,1135.6962891,5441.0546875,65.9545746,31.0000000,0.0000000,270.0000000); //object(vgshseing28) (266)
	CreateDynamicObject(8558,1204.4732666,5359.7763672,92.5771179,293.1042480,0.0000000,90.0000000); //object(vgshseing28) (285)
	CreateDynamicObject(8558,1202.2540283,5364.0620117,87.9608765,298.2471008,0.0000000,90.0000000); //object(vgshseing28) (286)
	CreateDynamicObject(8558,1199.6300049,5368.3476562,83.5621567,303.3899536,0.0000000,90.0000000); //object(vgshseing28) (287)
	CreateDynamicObject(8558,1196.6221924,5372.6333008,79.4163666,308.5328064,0.0000000,90.0000000); //object(vgshseing28) (288)
	CreateDynamicObject(8558,1193.2547607,5376.9194336,75.5568848,313.6756592,0.0000000,90.0000000); //object(vgshseing28) (289)
	CreateDynamicObject(8558,1189.5550537,5381.2050781,72.0148010,318.8185120,0.0000000,90.0000000); //object(vgshseing28) (290)
	CreateDynamicObject(8558,1185.5527344,5385.4907227,68.8186035,323.9613647,0.0000000,90.0000000); //object(vgshseing28) (292)
	CreateDynamicObject(8558,1181.2799072,5389.7763672,65.9940491,329.1042175,0.0000000,90.0000000); //object(vgshseing28) (293)
	CreateDynamicObject(8558,1176.7712402,5394.0620117,63.5638618,334.2470703,0.0000000,90.0000000); //object(vgshseing28) (294)
	CreateDynamicObject(8558,1172.0627441,5398.3476562,61.5476341,339.3899231,0.0000000,90.0000000); //object(vgshseing28) (295)
	CreateDynamicObject(8558,1167.1926270,5402.6333008,59.9615707,344.5327759,0.0000000,90.0000000); //object(vgshseing28) (297)
	CreateDynamicObject(8558,1162.1998291,5406.9194336,58.8184586,349.6756287,0.0000000,90.0000000); //object(vgshseing28) (298)
	CreateDynamicObject(8558,1157.1246338,5411.2050781,58.1274948,354.8184814,0.0000000,90.0000000); //object(vgshseing28) (299)
	CreateDynamicObject(8558,1152.0080566,5415.4907227,57.8942451,359.9613342,0.0000000,90.0000000); //object(vgshseing28) (300)
	CreateDynamicObject(8558,1146.8909912,5419.7763672,58.1205902,365.1041870,0.0000000,90.0000000); //object(vgshseing28) (301)
	CreateDynamicObject(8558,1141.8149414,5424.0620117,58.8047028,370.2470398,0.0000000,90.0000000); //object(vgshseing28) (302)
	CreateDynamicObject(8558,1136.8206787,5428.3476562,59.9410782,375.3898926,0.0000000,90.0000000); //object(vgshseing28) (312)
	CreateDynamicObject(8558,1131.9482422,5432.6328125,61.5205574,20.5279541,0.0000000,90.0000000); //object(vgshseing28) (314)
	CreateDynamicObject(8558,1122.7246094,5441.2050781,65.9545288,30.8166504,0.0000000,90.0000000); //object(vgshseing28) (340)
	CreateDynamicObject(8558,1126.4736328,5432.4833984,61.5205917,333.0000000,0.0000000,90.0000000); //object(vgshseing28) (359)
	CreateDynamicObject(8558,1131.9482422,5432.6328125,61.5205574,27.0000000,0.0000000,90.0000000); //object(vgshseing28) (360)
	CreateDynamicObject(8558,1122.7246094,5441.2050781,65.9545288,30.8111572,0.0000000,90.0000000); //object(vgshseing28) (366)
	CreateDynamicObject(8558,1118.4616699,5448.7050781,68.9747314,39.8166504,0.0000000,90.0000000); //object(vgshseing28) (361)
	CreateDynamicObject(8558,1114.7236328,5456.2050781,72.6246262,48.8166504,0.0000000,90.0000000); //object(vgshseing28) (362)
	CreateDynamicObject(8558,1111.6025391,5463.7050781,76.8143387,57.8166504,0.0000000,90.0000000); //object(vgshseing28) (363)
	CreateDynamicObject(8558,1109.1748047,5471.2050781,81.4407043,66.8133545,0.0000000,90.0000000); //object(vgshseing28) (364)
	CreateDynamicObject(8558,1107.5018311,5478.7050781,86.3898010,75.8166504,0.0000000,90.0000000); //object(vgshseing28) (365)
	CreateDynamicObject(8558,1106.6230469,5486.2050781,91.5397797,84.8166504,0.0000000,90.0000000); //object(vgshseing28) (367)
	CreateDynamicObject(8558,1106.5605469,5493.7050781,96.7638168,93.8122559,0.0000000,90.0000000); //object(vgshseing28) (368)
	CreateDynamicObject(8558,1139.9589844,5448.5546875,68.9751892,320.1745605,0.0000000,90.0000000); //object(vgshseing28) (370)
	CreateDynamicObject(8558,1143.6965332,5456.0546875,72.6254425,311.1778564,0.0000000,90.0000000); //object(vgshseing28) (371)
	CreateDynamicObject(8558,1146.8172607,5463.5546875,76.8154449,302.1778564,0.0000000,90.0000000); //object(vgshseing28) (372)
	CreateDynamicObject(8558,1149.2438965,5471.0546875,81.4420471,293.1778564,0.0000000,90.0000000); //object(vgshseing28) (373)
	CreateDynamicObject(8558,1150.9169922,5478.5546875,86.3913040,284.1778564,0.0000000,90.0000000); //object(vgshseing28) (374)
	CreateDynamicObject(8558,1151.7952881,5486.0546875,91.5413666,275.1778564,0.0000000,90.0000000); //object(vgshseing28) (375)
	CreateDynamicObject(8558,1151.8571777,5493.5546875,96.7654114,266.1778564,0.0000000,90.0000000); //object(vgshseing28) (376)
	CreateDynamicObject(3458,1130.0178223,5617.6318359,56.8320694,327.9968262,0.0000000,0.0000000); //object(vgncarshade1) (451)
	CreateDynamicObject(3458,1130.0175781,5617.6318359,56.8320618,327.9968262,0.0000000,0.0000000); //object(vgncarshade1) (439)
	CreateDynamicObject(3458,1130.0178223,5621.9936523,54.1466370,328.7627869,0.0000000,0.0000000); //object(vgncarshade1) (392)
	CreateDynamicObject(3458,1130.0178223,5626.3906250,51.5197754,329.5287476,0.0000000,0.0000000); //object(vgncarshade1) (393)
	CreateDynamicObject(3458,1130.0178223,5630.8222656,48.9519958,330.2947083,0.0000000,0.0000000); //object(vgncarshade1) (394)
	CreateDynamicObject(3458,1130.0178223,5635.2880859,46.4436340,331.0606689,0.0000000,0.0000000); //object(vgncarshade1) (395)
	CreateDynamicObject(3458,1130.0178223,5639.7871094,43.9951477,331.8266296,0.0000000,0.0000000); //object(vgncarshade1) (396)
	CreateDynamicObject(3458,1130.0178223,5644.3183594,41.6070557,332.5925903,0.0000000,0.0000000); //object(vgncarshade1) (397)
	CreateDynamicObject(3458,1130.0178223,5648.8813477,39.2797546,333.3585510,0.0000000,0.0000000); //object(vgncarshade1) (398)
	CreateDynamicObject(3458,1130.0178223,5653.4746094,37.0136414,334.1245117,0.0000000,0.0000000); //object(vgncarshade1) (399)
	CreateDynamicObject(3458,1130.0178223,5658.0981445,34.8092346,334.8904724,0.0000000,0.0000000); //object(vgncarshade1) (400)
	CreateDynamicObject(3458,1130.0178223,5662.7504883,32.6667175,335.6564331,0.0000000,0.0000000); //object(vgncarshade1) (401)
	CreateDynamicObject(3458,1130.0178223,5667.4311523,30.5866089,336.4223938,0.0000000,0.0000000); //object(vgncarshade1) (402)
	CreateDynamicObject(3458,1130.0178223,5672.1391602,28.5692749,337.1883545,0.0000000,0.0000000); //object(vgncarshade1) (403)
	CreateDynamicObject(3458,1130.0178223,5676.8735352,26.6150208,337.9543152,0.0000000,0.0000000); //object(vgncarshade1) (404)
	CreateDynamicObject(3458,1130.0178223,5681.6342773,24.7242737,338.7202759,0.0000000,0.0000000); //object(vgncarshade1) (405)
	CreateDynamicObject(3458,1130.0178223,5686.4194336,22.8973083,339.4862366,0.0000000,0.0000000); //object(vgncarshade1) (406)
	CreateDynamicObject(3458,1130.0178223,5691.2280273,21.1345520,340.2521973,0.0000000,0.0000000); //object(vgncarshade1) (407)
	CreateDynamicObject(3458,1130.0178223,5696.0605469,19.4361572,341.0181580,0.0000000,0.0000000); //object(vgncarshade1) (408)
	CreateDynamicObject(3458,1130.0178223,5700.9150391,17.8025208,341.7841187,0.0000000,0.0000000); //object(vgncarshade1) (409)
	CreateDynamicObject(3458,1130.0178223,5705.7910156,16.2339478,342.5500793,0.0000000,0.0000000); //object(vgncarshade1) (410)
	CreateDynamicObject(3458,1130.0178223,5710.6875000,14.7306824,343.3160400,0.0000000,0.0000000); //object(vgncarshade1) (411)
	CreateDynamicObject(3458,1130.0178223,5715.6035156,13.2929993,344.0820007,0.0000000,0.0000000); //object(vgncarshade1) (412)
	CreateDynamicObject(3458,1130.0178223,5720.5385742,11.9211731,344.8479614,0.0000000,0.0000000); //object(vgncarshade1) (413)
	CreateDynamicObject(3458,1130.0178223,5725.4912109,10.6154785,345.6139221,0.0000000,0.0000000); //object(vgncarshade1) (414)
	CreateDynamicObject(8558,1130.0175781,5730.4609375,9.3760681,346.3769531,0.0000000,0.0000000); //object(vgshseing28) (552)
	CreateDynamicObject(8558,1130.0175781,5735.4467773,8.2029724,347.1429138,0.0000000,0.0000000); //object(vgshseing28) (553)
	CreateDynamicObject(8558,1130.0175781,5740.4477539,7.0966187,347.9088745,0.0000000,0.0000000); //object(vgshseing28) (554)
	CreateDynamicObject(8558,1130.0175781,5745.4633789,6.0572205,348.6748352,0.0000000,0.0000000); //object(vgshseing28) (555)
	CreateDynamicObject(8558,1130.0175781,5750.4921875,5.0850220,349.4366455,0.0000000,0.0000000); //object(vgshseing28) (556)
	CreateDynamicObject(8558,1130.0175781,5755.5332031,4.1800842,350.2067566,0.0000000,0.0000000); //object(vgshseing28) (557)
	CreateDynamicObject(8558,1130.0175781,5760.5859375,3.3426208,350.9692383,0.0000000,0.0000000); //object(vgshseing28) (558)
	CreateDynamicObject(8558,1130.0175781,5765.6503906,2.5727844,351.7386780,0.0000000,0.0000000); //object(vgshseing28) (559)
	CreateDynamicObject(8558,1130.0175781,5770.7241211,1.8706970,352.5046387,0.0000000,0.0000000); //object(vgshseing28) (560)
	CreateDynamicObject(8558,1130.0175781,5775.8066406,1.2365112,353.2705994,0.0000000,0.0000000); //object(vgshseing28) (561)
	CreateDynamicObject(8558,1130.0175781,5780.8974609,0.6703186,354.0365601,0.0000000,0.0000000); //object(vgshseing28) (562)
	CreateDynamicObject(8558,1130.0175781,5785.9941406,0.1722717,354.7979736,0.0000000,0.0000000); //object(vgshseing28) (563)
	CreateDynamicObject(8558,1130.0175781,5791.0986328,-0.2576294,355.5684814,0.0000000,0.0000000); //object(vgshseing28) (564)
	CreateDynamicObject(8558,1130.0175781,5796.2080078,-0.6192627,356.3344421,0.0000000,0.0000000); //object(vgshseing28) (565)
	CreateDynamicObject(8558,1130.0175781,5801.3217773,-0.9125366,357.1004028,0.0000000,0.0000000); //object(vgshseing28) (566)
	CreateDynamicObject(8558,1130.0175781,5806.4384766,-1.1374512,357.8663635,0.0000000,0.0000000); //object(vgshseing28) (567)
	CreateDynamicObject(8558,1130.0175781,5811.5581055,-1.2939148,358.6323242,0.0000000,0.0000000); //object(vgshseing28) (568)
	CreateDynamicObject(8558,1130.0175781,5816.6796875,-1.3819580,359.3982849,0.0000000,0.0000000); //object(vgshseing28) (569)
	CreateDynamicObject(8558,1130.0175781,5821.8012695,-1.4014893,360.1642456,0.0000000,0.0000000); //object(vgshseing28) (570)
	CreateDynamicObject(8558,1130.0175781,5826.9233398,-1.3525696,360.9302063,0.0000000,0.0000000); //object(vgshseing28) (571)
	CreateDynamicObject(8558,1130.0175781,5832.0439453,-1.2351990,361.6961670,0.0000000,0.0000000); //object(vgshseing28) (572)
	CreateDynamicObject(8558,1130.0175781,5837.1621094,-1.0493774,2.4609375,0.0000000,0.0000000); //object(vgshseing28) (573)
	CreateDynamicObject(8558,1130.0175781,5842.2783203,-0.7951355,363.2280884,0.0000000,0.0000000); //object(vgshseing28) (574)
	CreateDynamicObject(8558,1130.0175781,5847.3901367,-0.4725342,363.9940491,0.0000000,0.0000000); //object(vgshseing28) (575)
	CreateDynamicObject(3458,1130.0175781,5852.4970703,-0.0816345,4.7570801,0.0000000,0.0000000); //object(vgncarshade1) (416)
	CreateDynamicObject(3458,1130.0175781,5857.5986328,0.3772583,5.5230374,0.0000000,0.0000000); //object(vgncarshade1) (417)
	CreateDynamicObject(3458,1130.0175781,5862.6933594,0.9042969,6.2889948,0.0000000,0.0000000); //object(vgncarshade1) (418)
	CreateDynamicObject(3458,1130.0175781,5867.7807617,1.4993896,7.0549521,0.0000000,0.0000000); //object(vgncarshade1) (419)
	CreateDynamicObject(3458,1130.0175781,5872.8598633,2.1624451,7.8209095,0.0000000,0.0000000); //object(vgncarshade1) (420)
	CreateDynamicObject(3458,1130.0175781,5877.9291992,2.8933411,8.5868673,0.0000000,0.0000000); //object(vgncarshade1) (421)
	CreateDynamicObject(3458,1130.0175781,5882.9887695,3.6919250,9.3528252,0.0000000,0.0000000); //object(vgncarshade1) (422)
	CreateDynamicObject(3458,1130.0175781,5888.0371094,4.5581055,10.1187830,0.0000000,0.0000000); //object(vgncarshade1) (423)
	CreateDynamicObject(3458,1130.0175781,5893.0732422,5.4916687,10.8847408,0.0000000,0.0000000); //object(vgncarshade1) (424)
	CreateDynamicObject(3458,1130.0175781,5898.0966797,6.4924622,11.6506987,0.0000000,0.0000000); //object(vgncarshade1) (425)
	CreateDynamicObject(3458,1130.0175781,5903.1059570,7.5603333,12.4166565,0.0000000,0.0000000); //object(vgncarshade1) (426)
	CreateDynamicObject(3458,1130.0175781,5908.1005859,8.6950989,13.1826143,0.0000000,0.0000000); //object(vgncarshade1) (427)
	CreateDynamicObject(3458,1130.0175781,5913.0791016,9.8964844,13.9471436,0.0000000,0.0000000); //object(vgncarshade1) (428)
	CreateDynamicObject(3458,1130.0175781,5918.0419922,11.1643677,14.7106934,0.0000000,0.0000000); //object(vgncarshade1) (429)
	CreateDynamicObject(8558,1130.0205078,5616.3193359,56.5121574,299.9981689,0.0000000,179.9945068); //object(vgshseing28) (577)
	CreateDynamicObject(8558,1129.9669189,5922.2841797,11.2350273,347.4366455,0.0000000,0.0000000); //object(vgshseing28) (579)
	CreateDynamicObject(3458,1204.9890137,5278.9897461,91.1164856,335.0000000,180.0000000,270.0000000); //object(vgncarshade1) (442)
	CreateDynamicObject(8558,1205.0502930,5319.3706055,91.1021118,25.0000000,180.0000000,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1053.4041748,5279.1450195,91.1164856,25.0000000,179.9945068,270.0000000); //object(vgncarshade1) (443)
	CreateDynamicObject(8558,1053.3800049,5319.3369141,91.1271133,25.0000000,180.0000000,270.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1053.3808594,5359.6191406,91.1164856,24.9993896,179.9945068,270.0000000); //object(vgncarshade1) (444)
	CreateDynamicObject(8558,1053.3898926,5238.8139648,91.1271133,24.9993896,179.9945068,270.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(8558,1205.0101318,5238.6997070,91.1021118,24.9993896,179.9945068,90.0000000); //object(vgshseing28) (142)
	CreateDynamicObject(3458,1205.0200195,5359.6958008,91.1164856,334.9951172,179.9945068,270.0000000); //object(vgncarshade1) (445)
	CreateDynamicObject(3458,1130.3352051,6047.1455078,-0.9956369,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (492)
	CreateDynamicObject(3458,1130.3349609,6047.1455078,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (516)
	CreateDynamicObject(3458,1130.3349609,6042.0234375,-0.9381714,358.7036133,0.0000000,0.0000000); //object(vgncarshade1) (493)
	CreateDynamicObject(8558,1130.3253174,6005.4907227,1.1200290,270.0000000,0.0000000,179.9945068); //object(vgshseing28) (584)
	CreateDynamicObject(3458,1130.3371582,6052.2441406,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (509)
	CreateDynamicObject(3458,1130.3393555,6057.3427734,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (510)
	CreateDynamicObject(3458,1130.3415527,6062.4414062,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (511)
	CreateDynamicObject(3458,1130.3437500,6067.5400391,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (512)
	CreateDynamicObject(3458,1130.3457031,6072.6386719,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (513)
	CreateDynamicObject(3458,1130.3481445,6077.7373047,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (514)
	CreateDynamicObject(3458,1130.3496094,6082.8359375,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (515)
	CreateDynamicObject(3458,1130.3525391,6087.9345703,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (517)
	CreateDynamicObject(3458,1130.3544922,6093.0332031,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (518)
	CreateDynamicObject(3458,1130.3569336,6098.1318359,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (519)
	CreateDynamicObject(3458,1130.3591309,6103.2304688,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (520)
	CreateDynamicObject(3458,1130.3613281,6108.3291016,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (521)
	CreateDynamicObject(3458,1130.3635254,6113.4277344,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (522)
	CreateDynamicObject(3458,1130.3657227,6118.5263672,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (523)
	CreateDynamicObject(3458,1130.3679199,6123.6250000,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (524)
	CreateDynamicObject(3458,1130.3701172,6128.7236328,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (525)
	CreateDynamicObject(3458,1130.3720703,6133.8222656,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1)
	CreateDynamicObject(3458,1130.3720703,6133.8222656,-0.9956360,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (199)
	CreateDynamicObject(3458,1130.3720703,6138.9418945,-0.8347473,3.5999999,0.0000000,0.0000000); //object(vgncarshade1) (200)
	CreateDynamicObject(3458,1130.3720703,6144.0410156,-0.3527298,7.1999998,0.0000000,0.0000000); //object(vgncarshade1) (201)
	CreateDynamicObject(3458,1130.3720703,6149.1000977,0.4485321,10.7999992,0.0000000,0.0000000); //object(vgncarshade1) (202)
	CreateDynamicObject(3458,1130.3720703,6154.0986328,1.5658646,14.3999996,0.0000000,0.0000000); //object(vgncarshade1) (203)
	CreateDynamicObject(3458,1130.3720703,6159.0170898,2.9948578,18.0000000,0.0000000,0.0000000); //object(vgncarshade1) (204)
	CreateDynamicObject(3458,1130.3720703,6163.8364258,4.7298813,21.6000004,0.0000000,0.0000000); //object(vgncarshade1) (205)
	CreateDynamicObject(3458,1130.3720703,6168.5371094,6.7640762,25.2000008,0.0000000,0.0000000); //object(vgncarshade1) (211)
	CreateDynamicObject(3458,1130.3720703,6173.1010742,9.0894165,28.8000011,0.0000000,0.0000000); //object(vgncarshade1) (217)
	CreateDynamicObject(3458,1130.3720703,6177.5097656,11.6967316,32.4000015,0.0000000,0.0000000); //object(vgncarshade1) (218)
	CreateDynamicObject(8558,1130.3720703,6181.7460938,14.5757294,35.9967041,0.0000000,0.0000000); //object(vgshseing28) (1)
	CreateDynamicObject(8558,1130.3720703,6185.7934570,17.7147865,39.5967026,0.0000000,0.0000000); //object(vgshseing28) (120)
	CreateDynamicObject(8558,1130.3720703,6189.6357422,21.1017838,43.1967010,0.0000000,0.0000000); //object(vgshseing28) (121)
	CreateDynamicObject(8558,1130.3720703,6193.2578125,24.7233543,46.7966995,0.0000000,0.0000000); //object(vgshseing28) (122)
	CreateDynamicObject(8558,1130.3720703,6196.6450195,28.5652008,50.3966980,0.0000000,0.0000000); //object(vgshseing28) (123)
	CreateDynamicObject(8558,1130.3720703,6199.7846680,32.6121674,53.9966965,0.0000000,0.0000000); //object(vgshseing28) (124)
	CreateDynamicObject(8558,1130.3720703,6202.6640625,36.8482857,57.5966949,0.0000000,0.0000000); //object(vgshseing28) (125)
	CreateDynamicObject(8558,1130.3720703,6205.2714844,41.2568245,61.1966934,0.0000000,0.0000000); //object(vgshseing28) (126)
	CreateDynamicObject(8558,1130.3720703,6207.5971680,45.8204002,64.7966919,0.0000000,0.0000000); //object(vgshseing28) (127)
	CreateDynamicObject(8558,1130.3720703,6209.6313477,50.5209885,68.3966904,0.0000000,0.0000000); //object(vgshseing28) (128)
	CreateDynamicObject(8558,1130.3720703,6211.3666992,55.3400536,71.9966888,0.0000000,0.0000000); //object(vgshseing28) (129)
	CreateDynamicObject(8558,1130.3720703,6212.7958984,60.2585602,75.5966873,0.0000000,0.0000000); //object(vgshseing28) (130)
	CreateDynamicObject(8558,1130.3720703,6213.9135742,65.2571106,79.1966858,0.0000000,0.0000000); //object(vgshseing28) (131)
	CreateDynamicObject(8558,1130.3720703,6214.7148438,70.3159790,82.7929688,0.0000000,0.0000000); //object(vgshseing28) (132)
	CreateDynamicObject(3458,1130.3720703,6215.1972656,75.4151917,86.3909912,0.0000000,0.0000000); //object(vgncarshade1) (224)
	CreateDynamicObject(8558,1130.3769531,6216.4267578,76.4960175,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (133)
	CreateDynamicObject(3458,1130.3819580,6217.6430664,75.3651886,274.0000000,0.0000000,0.0000000); //object(vgncarshade1) (281)
	CreateDynamicObject(3458,1130.3819580,6217.6430664,75.3651886,274.0000000,0.0000000,0.0000000); //object(vgncarshade1) (430)
	CreateDynamicObject(3458,1130.3819580,6218.1606445,70.2693939,277.6000061,0.0000000,0.0000000); //object(vgncarshade1) (328)
	CreateDynamicObject(3458,1130.3819580,6218.9970703,65.2161636,281.2000122,0.0000000,0.0000000); //object(vgncarshade1) (329)
	CreateDynamicObject(3458,1130.3819580,6220.1494141,60.2254257,284.8000183,0.0000000,0.0000000); //object(vgncarshade1) (330)
	CreateDynamicObject(3458,1130.3819580,6221.6127930,55.3168869,288.4000244,0.0000000,0.0000000); //object(vgncarshade1) (331)
	CreateDynamicObject(3458,1130.3819580,6223.3813477,50.5098801,292.0000000,0.0000000,0.0000000); //object(vgncarshade1) (332)
	CreateDynamicObject(3458,1130.3819580,6225.4482422,45.8234520,295.6000366,0.0000000,0.0000000); //object(vgncarshade1) (333)
	CreateDynamicObject(3458,1130.3819580,6227.8051758,41.2760506,299.2000427,0.0000000,0.0000000); //object(vgncarshade1) (334)
	CreateDynamicObject(3458,1130.3819580,6230.4433594,36.8856316,302.8000488,0.0000000,0.0000000); //object(vgncarshade1) (335)
	CreateDynamicObject(3458,1130.3819580,6233.3520508,32.6695213,306.4000549,0.0000000,0.0000000); //object(vgncarshade1) (336)
	CreateDynamicObject(3458,1130.3819580,6236.5195312,28.6443291,310.0000000,0.0000000,0.0000000); //object(vgncarshade1) (337)
	CreateDynamicObject(3458,1130.3819580,6239.9335938,24.8259964,313.6000671,0.0000000,0.0000000); //object(vgncarshade1) (338)
	CreateDynamicObject(3458,1130.3819580,6243.5805664,21.2295647,317.2000732,0.0000000,0.0000000); //object(vgncarshade1) (339)
	CreateDynamicObject(3458,1130.3819580,6247.4462891,17.8692284,320.8000793,0.0000000,0.0000000); //object(vgncarshade1) (340)
	CreateDynamicObject(3458,1130.3819580,6251.5151367,14.7582474,324.4000854,0.0000000,0.0000000); //object(vgncarshade1) (341)
	CreateDynamicObject(3458,1130.3819580,6255.7714844,11.9089050,328.0000000,0.0000000,0.0000000); //object(vgncarshade1) (342)
	CreateDynamicObject(3458,1130.3819580,6260.1982422,9.3324127,331.6000977,0.0000000,0.0000000); //object(vgncarshade1) (343)
	CreateDynamicObject(3458,1130.3819580,6264.7783203,7.0390015,335.2001038,0.0000000,0.0000000); //object(vgncarshade1) (344)
	CreateDynamicObject(3458,1130.3819580,6269.4931641,5.0376816,338.8001099,0.0000000,0.0000000); //object(vgncarshade1) (345)
	CreateDynamicObject(3458,1130.3819580,6274.3242188,3.3363571,342.4001160,0.0000000,0.0000000); //object(vgncarshade1) (346)
	CreateDynamicObject(3458,1130.3819580,6279.2524414,1.9417419,346.0001221,0.0000000,0.0000000); //object(vgncarshade1) (347)
	CreateDynamicObject(3458,1130.3819580,6284.2587891,0.8593445,349.6001282,0.0000000,0.0000000); //object(vgncarshade1) (348)
	CreateDynamicObject(3458,1130.3819580,6289.3232422,0.0934296,353.2001343,0.0000000,0.0000000); //object(vgncarshade1) (349)
	CreateDynamicObject(3458,1130.3819580,6294.4257812,-0.3529739,356.8001404,0.0000000,0.0000000); //object(vgncarshade1) (350)
	CreateDynamicObject(3458,1130.3818359,6299.5458984,-0.4780960,0.3900146,0.0000000,0.0000000); //object(vgncarshade1) (351)
	CreateDynamicObject(3458,1130.3819580,6304.6645508,-0.2814636,364.0001526,0.0000000,0.0000000); //object(vgncarshade1) (352)
	CreateDynamicObject(3458,1130.3819580,6309.7602539,0.2361603,367.6001587,0.0000000,0.0000000); //object(vgncarshade1) (353)
	CreateDynamicObject(3458,1130.3819580,6314.8134766,1.0727310,371.2001648,0.0000000,0.0000000); //object(vgncarshade1) (354)
	CreateDynamicObject(3458,1130.3819580,6319.8046875,2.2249603,374.8001709,0.0000000,0.0000000); //object(vgncarshade1) (355)
	CreateDynamicObject(3458,1130.3819580,6324.7128906,3.6882706,378.4001770,0.0000000,0.0000000); //object(vgncarshade1) (358)
	CreateDynamicObject(8558,1130.3818359,6329.5195312,5.4569092,21.9946289,0.0000000,0.0000000); //object(vgshseing28) (168)
	CreateDynamicObject(8558,1130.3818359,6334.1777344,7.5867729,27.1429787,0.0000000,0.0000000); //object(vgshseing28) (143)
	CreateDynamicObject(8558,1130.3818359,6338.6264648,10.1256180,32.2858353,0.0000000,0.0000000); //object(vgshseing28) (146)
	CreateDynamicObject(8558,1130.3818359,6342.8291016,13.0529976,37.4286919,0.0000000,0.0000000); //object(vgshseing28) (147)
	CreateDynamicObject(8558,1130.3818359,6346.7529297,16.3453407,42.5715485,0.0000000,0.0000000); //object(vgshseing28) (148)
	CreateDynamicObject(8558,1130.3818359,6350.3657227,19.9761467,47.7144051,0.0000000,0.0000000); //object(vgshseing28) (150)
	CreateDynamicObject(8558,1130.3818359,6353.6381836,23.9161835,52.8572617,0.0000000,0.0000000); //object(vgshseing28) (156)
	CreateDynamicObject(8558,1130.3818359,6356.5449219,28.1337128,58.0001183,0.0000000,0.0000000); //object(vgshseing28) (158)
	CreateDynamicObject(8558,1130.3818359,6359.0615234,32.5947952,63.1429749,0.0000000,0.0000000); //object(vgshseing28) (160)
	CreateDynamicObject(8558,1130.3818359,6361.1679688,37.2635117,68.2858353,0.0000000,0.0000000); //object(vgshseing28) (161)
	CreateDynamicObject(8558,1130.3818359,6362.8476562,42.1022606,73.4286957,0.0000000,0.0000000); //object(vgshseing28) (162)
	CreateDynamicObject(8558,1130.3818359,6364.0869141,47.0720978,78.5687256,0.0000000,0.0000000); //object(vgshseing28) (163)
	CreateDynamicObject(8558,1130.4306641,6391.1005859,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (191)
	CreateDynamicObject(8558,1130.4290771,6396.2070312,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (192)
	CreateDynamicObject(3458,1130.4335938,6401.3164062,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (438)
	CreateDynamicObject(3458,1130.4357910,6406.4389648,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (449)
	CreateDynamicObject(8558,1130.4392090,6411.5234375,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (214)
	CreateDynamicObject(8558,1130.4367676,6416.6308594,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (215)
	CreateDynamicObject(3458,1130.4577637,6421.7236328,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (450)
	CreateDynamicObject(3458,1130.4560547,6426.8251953,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (452)
	CreateDynamicObject(8558,1130.4537354,6431.9218750,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (216)
	CreateDynamicObject(8558,1130.4458008,6437.0292969,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (217)
	CreateDynamicObject(3458,1130.4301758,6442.1352539,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (453)
	CreateDynamicObject(8558,1130.4145508,6447.2412109,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (218)
	CreateDynamicObject(3458,1130.3984375,6452.3466797,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (454)
	CreateDynamicObject(8558,1130.3833008,6457.4531250,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (219)
	CreateDynamicObject(3458,1130.3676758,6462.5590820,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (455)
	CreateDynamicObject(8558,1130.3520508,6467.6650391,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (220)
	CreateDynamicObject(3458,1130.3364258,6472.7709961,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (456)
	CreateDynamicObject(8558,1130.3208008,6477.8769531,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (221)
	CreateDynamicObject(3458,1130.3051758,6482.9829102,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (457)
	CreateDynamicObject(8558,1130.2895508,6488.0888672,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (222)
	CreateDynamicObject(3458,1130.2739258,6493.1948242,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (458)
	CreateDynamicObject(8558,1130.2578125,6498.3007812,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (223)
	CreateDynamicObject(3458,1130.2421875,6503.4062500,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (459)
	CreateDynamicObject(8558,1130.2512207,6508.5048828,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (224)
	CreateDynamicObject(8558,1130.2589111,6513.6030273,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (225)
	CreateDynamicObject(8558,1130.2666016,6518.7011719,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (226)
	CreateDynamicObject(8558,1130.2742920,6523.7993164,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (227)
	CreateDynamicObject(8558,1130.2819824,6528.8974609,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (229)
	CreateDynamicObject(8558,1130.2896729,6533.9956055,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (230)
	CreateDynamicObject(8558,1130.2973633,6539.0937500,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (231)
	CreateDynamicObject(8558,1130.3050537,6544.1918945,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (232)
	CreateDynamicObject(8558,1130.3127441,6549.2900391,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (233)
	CreateDynamicObject(8558,1130.3204346,6554.3881836,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (234)
	CreateDynamicObject(8558,1130.3281250,6559.4863281,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (235)
	CreateDynamicObject(8558,1130.3358154,6564.5844727,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (236)
	CreateDynamicObject(8558,1130.3435059,6569.6826172,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (237)
	CreateDynamicObject(8558,1130.3505859,6574.7802734,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (238)
	CreateDynamicObject(3458,1130.3559570,6579.8896484,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (460)
	CreateDynamicObject(3458,1130.3640137,6584.9882812,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (461)
	CreateDynamicObject(3458,1130.3720703,6590.0869141,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (462)
	CreateDynamicObject(3458,1130.3801270,6595.1855469,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (463)
	CreateDynamicObject(3458,1130.3881836,6600.2841797,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (464)
	CreateDynamicObject(3458,1130.3962402,6605.3828125,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (465)
	CreateDynamicObject(3458,1130.4042969,6610.4814453,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (466)
	CreateDynamicObject(3458,1130.4123535,6615.5800781,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (467)
	CreateDynamicObject(3458,1130.4204102,6620.6787109,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (468)
	CreateDynamicObject(3458,1130.4284668,6625.7773438,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (469)
	CreateDynamicObject(3458,1130.4365234,6630.8759766,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (470)
	CreateDynamicObject(3458,1130.4443359,6635.9746094,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (471)
	CreateDynamicObject(3458,1130.4521484,6641.0732422,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (472)
	CreateDynamicObject(3458,1130.4599609,6646.1718750,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (473)
	CreateDynamicObject(8558,1153.2225342,6628.5278320,102.1920319,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (239)
	CreateDynamicObject(8558,1107.7132568,6628.5346680,102.1920319,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (240)
	CreateDynamicObject(8558,1107.7132568,6628.5346680,102.1920319,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (281)
	CreateDynamicObject(8558,1102.5050049,6637.2846680,102.6019287,9.0000000,0.0000000,90.0000000); //object(vgshseing28) (241)
	CreateDynamicObject(8558,1097.4249268,6646.0346680,103.8215485,18.0000000,0.0000000,90.0000000); //object(vgshseing28) (242)
	CreateDynamicObject(8558,1092.5981445,6654.7846680,105.8208466,27.0000000,0.0000000,90.0000000); //object(vgshseing28) (243)
	CreateDynamicObject(8558,1088.1436768,6663.5346680,108.5505829,36.0000000,0.0000000,90.0000000); //object(vgshseing28) (244)
	CreateDynamicObject(8558,1084.1708984,6672.2846680,111.9435730,45.0000000,0.0000000,90.0000000); //object(vgshseing28) (245)
	CreateDynamicObject(8558,1080.7779541,6681.0346680,115.9162445,54.0000000,0.0000000,90.0000000); //object(vgshseing28) (246)
	CreateDynamicObject(8558,1078.0482178,6689.7846680,120.3707886,63.0000000,0.0000000,90.0000000); //object(vgshseing28) (265)
	CreateDynamicObject(8558,1076.0489502,6698.5346680,125.1975098,72.0000000,0.0000000,90.0000000); //object(vgshseing28) (267)
	CreateDynamicObject(8558,1074.8293457,6707.2846680,130.2775726,81.0000000,0.0000000,90.0000000); //object(vgshseing28) (268)
	CreateDynamicObject(8558,1074.4194336,6716.0346680,135.4858704,90.0000000,0.0000000,90.0000000); //object(vgshseing28) (269)
	CreateDynamicObject(8558,1074.8293457,6724.7846680,140.6941833,99.0000000,0.0000000,90.0000000); //object(vgshseing28) (270)
	CreateDynamicObject(8558,1076.0489502,6733.5346680,145.7742310,108.0000000,0.0000000,90.0000000); //object(vgshseing28) (271)
	CreateDynamicObject(8558,1078.0482178,6742.2846680,150.6009674,117.0000000,0.0000000,90.0000000); //object(vgshseing28) (273)
	CreateDynamicObject(8558,1080.7779541,6751.0346680,155.0554962,126.0000000,0.0000000,90.0000000); //object(vgshseing28) (274)
	CreateDynamicObject(8558,1084.1708984,6759.7841797,159.0281677,135.0000000,0.0000000,90.0000000); //object(vgshseing28) (275)
	CreateDynamicObject(8558,1088.1436768,6768.5346680,162.4211578,144.0000000,0.0000000,90.0000000); //object(vgshseing28) (276)
	CreateDynamicObject(8558,1092.5976562,6777.2841797,165.1508942,152.9956055,0.0000000,90.0000000); //object(vgshseing28) (277)
	CreateDynamicObject(8558,1153.2225342,6628.5278320,102.1920319,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (280)
	CreateDynamicObject(8558,1158.4307861,6637.2778320,102.6019287,-9.0000000,0.0000000,90.0000000); //object(vgshseing28) (282)
	CreateDynamicObject(8558,1163.5108643,6646.0278320,103.8215485,-18.0000000,0.0000000,90.0000000); //object(vgshseing28) (283)
	CreateDynamicObject(8558,1168.3376465,6654.7778320,105.8208466,-27.0000000,0.0000000,90.0000000); //object(vgshseing28) (284)
	CreateDynamicObject(8558,1172.7921143,6663.5278320,108.5505829,-36.0000000,0.0000000,90.0000000); //object(vgshseing28) (328)
	CreateDynamicObject(8558,1176.7648926,6672.2778320,111.9435730,-45.0000000,0.0000000,90.0000000); //object(vgshseing28) (342)
	CreateDynamicObject(8558,1180.1578369,6681.0278320,115.9162445,-54.0000000,0.0000000,90.0000000); //object(vgshseing28) (343)
	CreateDynamicObject(8558,1182.8875732,6689.7778320,120.3707886,-63.0000000,0.0000000,90.0000000); //object(vgshseing28) (344)
	CreateDynamicObject(8558,1184.8868408,6698.5278320,125.1975098,-72.0000000,0.0000000,90.0000000); //object(vgshseing28) (345)
	CreateDynamicObject(8558,1186.1064453,6707.2778320,130.2775726,-81.0000000,0.0000000,90.0000000); //object(vgshseing28) (346)
	CreateDynamicObject(8558,1186.5163574,6716.0278320,135.4858704,-90.0000000,0.0000000,90.0000000); //object(vgshseing28) (347)
	CreateDynamicObject(8558,1186.1064453,6724.7778320,140.6941833,-99.0000000,0.0000000,90.0000000); //object(vgshseing28) (348)
	CreateDynamicObject(8558,1184.8868408,6733.5278320,145.7742310,-108.0000000,0.0000000,90.0000000); //object(vgshseing28) (349)
	CreateDynamicObject(8558,1182.8875732,6742.2778320,150.6009674,-117.0000000,0.0000000,90.0000000); //object(vgshseing28) (351)
	CreateDynamicObject(8558,1180.1578369,6751.0278320,155.0554962,-126.0000000,0.0000000,90.0000000); //object(vgshseing28) (352)
	CreateDynamicObject(8558,1176.7648926,6759.7778320,159.0281677,-135.0000000,0.0000000,90.0000000); //object(vgshseing28) (353)
	CreateDynamicObject(8558,1172.7921143,6768.5278320,162.4211578,-144.0000000,0.0000000,90.0000000); //object(vgshseing28) (354)
	CreateDynamicObject(8558,1168.3376465,6777.2778320,165.1508942,-153.0000000,0.0000000,90.0000000); //object(vgshseing28) (355)
	CreateDynamicObject(3458,1130.8740234,6916.3994141,102.1920319,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (569)
	CreateDynamicObject(3458,1171.2539062,6919.9414062,100.9169846,320.0000000,0.0000000,0.0000000); //object(vgncarshade1) (577)
	CreateDynamicObject(3458,1090.5168457,6919.9057617,100.9169846,319.9987793,0.0000000,0.0000000); //object(vgncarshade1) (578)
	CreateDynamicObject(8558,1171.2539062,6923.8994141,97.6658783,321.2000122,0.0000000,0.0000000); //object(vgshseing28) (511)
	CreateDynamicObject(8558,1171.2539062,6927.9248047,94.4983063,322.3992920,0.0000000,0.0000000); //object(vgshseing28) (512)
	CreateDynamicObject(8558,1171.2539062,6932.0156250,91.4158173,323.6000366,0.0000000,0.0000000); //object(vgshseing28) (513)
	CreateDynamicObject(8558,1171.2539062,6936.1699219,88.4196625,324.8000488,0.0000000,0.0000000); //object(vgshseing28) (514)
	CreateDynamicObject(8558,1171.2539062,6940.3857422,85.5111542,326.0000000,0.0000000,0.0000000); //object(vgshseing28) (515)
	CreateDynamicObject(8558,1171.2539062,6944.6621094,82.6916046,327.2000732,0.0000000,0.0000000); //object(vgshseing28) (516)
	CreateDynamicObject(8558,1171.2539062,6948.9960938,79.9622040,328.4000854,0.0000000,0.0000000); //object(vgshseing28) (517)
	CreateDynamicObject(8558,1171.2539062,6953.3867188,77.3241730,329.6000977,0.0000000,0.0000000); //object(vgshseing28) (518)
	CreateDynamicObject(8558,1171.2539062,6957.8310547,74.7787018,330.8001099,0.0000000,0.0000000); //object(vgshseing28) (519)
	CreateDynamicObject(8558,1171.2539062,6962.3281250,72.3268280,332.0001221,0.0000000,0.0000000); //object(vgshseing28) (520)
	CreateDynamicObject(8558,1171.2539062,6966.8754883,69.9696808,333.2001343,0.0000000,0.0000000); //object(vgshseing28) (521)
	CreateDynamicObject(8558,1171.2539062,6971.4716797,67.7082977,334.4001465,0.0000000,0.0000000); //object(vgshseing28) (522)
	CreateDynamicObject(8558,1171.2539062,6976.1137695,65.5436249,335.6001587,0.0000000,0.0000000); //object(vgshseing28) (523)
	CreateDynamicObject(8558,1171.2539062,6980.8002930,63.4766693,336.8001709,0.0000000,0.0000000); //object(vgshseing28) (524)
	CreateDynamicObject(8558,1171.2539062,6985.5288086,61.5083160,338.0001831,0.0000000,0.0000000); //object(vgshseing28) (525)
	CreateDynamicObject(8558,1171.2539062,6990.2978516,59.6394196,339.2001953,0.0000000,0.0000000); //object(vgshseing28) (526)
	CreateDynamicObject(8558,1171.2539062,6995.1044922,57.8708344,340.4002075,0.0000000,0.0000000); //object(vgshseing28) (527)
	CreateDynamicObject(8558,1171.2539062,6999.9472656,56.2032623,341.5979004,0.0000000,0.0000000); //object(vgshseing28) (528)
	CreateDynamicObject(8558,1090.5166016,6923.8632812,97.6658173,321.1962891,0.0000000,0.0000000); //object(vgshseing28) (542)
	CreateDynamicObject(8558,1090.5166016,6927.8886719,94.4982147,322.3937988,0.0000000,0.0000000); //object(vgshseing28) (543)
	CreateDynamicObject(8558,1090.5168457,6931.9794922,91.4156342,323.5988159,0.0000000,0.0000000); //object(vgshseing28) (544)
	CreateDynamicObject(8558,1090.5168457,6936.1337891,88.4193878,324.7988281,0.0000000,0.0000000); //object(vgshseing28) (545)
	CreateDynamicObject(8558,1090.5168457,6940.3496094,85.5108185,325.9988403,0.0000000,0.0000000); //object(vgshseing28) (546)
	CreateDynamicObject(8558,1090.5168457,6944.6259766,82.6911469,327.1988525,0.0000000,0.0000000); //object(vgshseing28) (547)
	CreateDynamicObject(8558,1090.5168457,6948.9599609,79.9616547,328.3988647,0.0000000,0.0000000); //object(vgshseing28) (548)
	CreateDynamicObject(8558,1090.5168457,6953.3500977,77.3235321,329.5988770,0.0000000,0.0000000); //object(vgshseing28) (549)
	CreateDynamicObject(8558,1090.5168457,6957.7949219,74.7779083,330.7988892,0.0000000,0.0000000); //object(vgshseing28) (550)
	CreateDynamicObject(8558,1090.5168457,6962.2919922,72.3259430,331.9989014,0.0000000,0.0000000); //object(vgshseing28) (551)
	CreateDynamicObject(8558,1090.5168457,6966.8393555,69.9687042,333.1989136,0.0000000,0.0000000); //object(vgshseing28) (576)
	CreateDynamicObject(8558,1090.5168457,6971.4350586,67.7072296,334.3989258,0.0000000,0.0000000); //object(vgshseing28) (580)
	CreateDynamicObject(8558,1090.5168457,6976.0771484,65.5424957,335.5989380,0.0000000,0.0000000); //object(vgshseing28) (581)
	CreateDynamicObject(8558,1090.5168457,6980.7636719,63.4754486,336.7989502,0.0000000,0.0000000); //object(vgshseing28) (582)
	CreateDynamicObject(8558,1090.5168457,6985.4921875,61.5069733,337.9989624,0.0000000,0.0000000); //object(vgshseing28) (583)
	CreateDynamicObject(8558,1090.5168457,6990.2612305,59.6379852,339.1989746,0.0000000,0.0000000); //object(vgshseing28) (585)
	CreateDynamicObject(8558,1090.5168457,6995.0678711,57.8692780,340.3989868,0.0000000,0.0000000); //object(vgshseing28) (586)
	CreateDynamicObject(8558,1090.5166016,6999.9111328,56.2016449,341.5979004,0.0000000,0.0000000); //object(vgshseing28) (587)
	CreateDynamicObject(8558,1090.5078125,6916.3437500,102.1908798,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (600)
	CreateDynamicObject(8558,1171.3056641,6916.3730469,102.1908798,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (601)
	CreateDynamicObject(3458,1171.2539062,7004.8242188,54.6372986,342.7979126,0.0000000,0.0000000); //object(vgncarshade1) (580)
	CreateDynamicObject(3458,1171.2539062,7009.7329102,53.1737976,343.9979248,0.0000000,0.0000000); //object(vgncarshade1) (581)
	CreateDynamicObject(3458,1171.2539062,7014.6708984,51.8134308,345.1979370,0.0000000,0.0000000); //object(vgncarshade1) (582)
	CreateDynamicObject(3458,1171.2539062,7019.6367188,50.5567474,346.3979492,0.0000000,0.0000000); //object(vgncarshade1) (583)
	CreateDynamicObject(3458,1171.2539062,7024.6274414,49.4043579,347.5979614,0.0000000,0.0000000); //object(vgncarshade1) (584)
	CreateDynamicObject(3458,1171.2539062,7029.6411133,48.3567505,348.7979736,0.0000000,0.0000000); //object(vgncarshade1) (585)
	CreateDynamicObject(3458,1171.2539062,7034.6757812,47.4143677,349.9979858,0.0000000,0.0000000); //object(vgncarshade1) (586)
	CreateDynamicObject(3458,1171.2539062,7039.7290039,46.5776215,351.1979980,0.0000000,0.0000000); //object(vgncarshade1) (587)
	CreateDynamicObject(3458,1171.2539062,7044.7983398,45.8468933,352.3980103,0.0000000,0.0000000); //object(vgncarshade1) (588)
	CreateDynamicObject(3458,1171.2539062,7049.8823242,45.2224884,353.5980225,0.0000000,0.0000000); //object(vgncarshade1) (589)
	CreateDynamicObject(3458,1171.2539062,7054.9780273,44.7046967,354.7980347,0.0000000,0.0000000); //object(vgncarshade1) (590)
	CreateDynamicObject(3458,1171.2539062,7060.0834961,44.2937469,355.9980469,0.0000000,0.0000000); //object(vgncarshade1) (591)
	CreateDynamicObject(3458,1171.2539062,7065.1967773,43.9897919,357.1980591,0.0000000,0.0000000); //object(vgncarshade1) (592)
	CreateDynamicObject(3458,1171.2539062,7070.3149414,43.7929993,358.3980713,0.0000000,0.0000000); //object(vgncarshade1) (593)
	CreateDynamicObject(3458,1171.2539062,7075.4365234,43.7034302,359.5980835,0.0000000,0.0000000); //object(vgncarshade1) (594)
	CreateDynamicObject(3458,1171.2539062,7080.5585938,43.7211456,360.7980957,0.0000000,0.0000000); //object(vgncarshade1) (595)
	CreateDynamicObject(3458,1171.2539062,7085.6787109,43.8461151,361.9981079,0.0000000,0.0000000); //object(vgncarshade1) (596)
	CreateDynamicObject(3458,1171.2539062,7090.7958984,44.0783081,363.1981201,0.0000000,0.0000000); //object(vgncarshade1) (597)
	CreateDynamicObject(3458,1171.2539062,7095.9067383,44.4175873,364.3981323,0.0000000,0.0000000); //object(vgncarshade1) (598)
	CreateDynamicObject(3458,1171.2539062,7101.0092773,44.8638458,365.5981445,0.0000000,0.0000000); //object(vgncarshade1) (599)
	CreateDynamicObject(3458,1171.2539062,7106.1010742,45.4168549,366.7981567,0.0000000,0.0000000); //object(vgncarshade1) (600)
	CreateDynamicObject(3458,1171.2539062,7111.1806641,46.0763855,367.9981689,0.0000000,0.0000000); //object(vgncarshade1) (601)
	CreateDynamicObject(3458,1171.2539062,7116.2451172,46.8421631,369.1981812,0.0000000,0.0000000); //object(vgncarshade1) (602)
	CreateDynamicObject(3458,1171.2539062,7121.2924805,47.7138214,370.3981934,0.0000000,0.0000000); //object(vgncarshade1) (603)
	CreateDynamicObject(3458,1171.2539062,7126.3203125,48.6910095,371.5982056,0.0000000,0.0000000); //object(vgncarshade1) (604)
	CreateDynamicObject(3458,1171.2539062,7131.3271484,49.7732697,372.7982178,0.0000000,0.0000000); //object(vgncarshade1) (605)
	CreateDynamicObject(3458,1171.2539062,7136.3095703,50.9601440,373.9982300,0.0000000,0.0000000); //object(vgncarshade1) (606)
	CreateDynamicObject(3458,1171.2539062,7141.2656250,52.2510986,15.1940918,0.0000000,0.0000000); //object(vgncarshade1) (607)
	CreateDynamicObject(3458,1171.2539062,7146.1943359,53.6455841,16.3970947,0.0000000,0.0000000); //object(vgncarshade1) (608)
	CreateDynamicObject(3458,1090.5166016,7004.7880859,54.6356812,342.7979126,0.0000000,0.0000000); //object(vgncarshade1) (611)
	CreateDynamicObject(3458,1090.5166016,7009.6967773,53.1721802,343.9979248,0.0000000,0.0000000); //object(vgncarshade1) (612)
	CreateDynamicObject(3458,1090.5166016,7014.6347656,51.8118134,345.1979370,0.0000000,0.0000000); //object(vgncarshade1) (613)
	CreateDynamicObject(3458,1090.5166016,7019.6005859,50.5551300,346.3979492,0.0000000,0.0000000); //object(vgncarshade1) (614)
	CreateDynamicObject(3458,1090.5166016,7024.5913086,49.4027405,347.5979614,0.0000000,0.0000000); //object(vgncarshade1) (615)
	CreateDynamicObject(3458,1090.5166016,7029.6049805,48.3551331,348.7979736,0.0000000,0.0000000); //object(vgncarshade1) (616)
	CreateDynamicObject(3458,1090.5166016,7034.6396484,47.4127502,349.9979858,0.0000000,0.0000000); //object(vgncarshade1) (617)
	CreateDynamicObject(3458,1090.5166016,7039.6928711,46.5760040,351.1979980,0.0000000,0.0000000); //object(vgncarshade1) (618)
	CreateDynamicObject(3458,1090.5166016,7044.7622070,45.8452759,352.3980103,0.0000000,0.0000000); //object(vgncarshade1) (619)
	CreateDynamicObject(3458,1090.5166016,7049.8461914,45.2208710,353.5980225,0.0000000,0.0000000); //object(vgncarshade1) (620)
	CreateDynamicObject(3458,1090.5166016,7054.9418945,44.7030792,354.7980347,0.0000000,0.0000000); //object(vgncarshade1) (621)
	CreateDynamicObject(3458,1090.5166016,7060.0473633,44.2921295,355.9980469,0.0000000,0.0000000); //object(vgncarshade1) (622)
	CreateDynamicObject(3458,1090.5166016,7065.1606445,43.9881744,357.1980591,0.0000000,0.0000000); //object(vgncarshade1) (623)
	CreateDynamicObject(3458,1090.5166016,7070.2788086,43.7913818,358.3980713,0.0000000,0.0000000); //object(vgncarshade1) (624)
	CreateDynamicObject(3458,1090.5166016,7075.4003906,43.7018127,359.5980835,0.0000000,0.0000000); //object(vgncarshade1) (625)
	CreateDynamicObject(3458,1090.5166016,7080.5224609,43.7195282,360.7980957,0.0000000,0.0000000); //object(vgncarshade1) (626)
	CreateDynamicObject(3458,1090.5166016,7085.6425781,43.8444977,361.9981079,0.0000000,0.0000000); //object(vgncarshade1) (627)
	CreateDynamicObject(3458,1090.5166016,7090.7597656,44.0766907,363.1981201,0.0000000,0.0000000); //object(vgncarshade1) (628)
	CreateDynamicObject(3458,1090.5166016,7095.8706055,44.4159698,364.3981323,0.0000000,0.0000000); //object(vgncarshade1) (629)
	CreateDynamicObject(3458,1090.5166016,7100.9731445,44.8622284,365.5981445,0.0000000,0.0000000); //object(vgncarshade1) (630)
	CreateDynamicObject(3458,1090.5166016,7106.0649414,45.4152374,366.7981567,0.0000000,0.0000000); //object(vgncarshade1) (631)
	CreateDynamicObject(3458,1090.5166016,7111.1445312,46.0747681,367.9981689,0.0000000,0.0000000); //object(vgncarshade1) (632)
	CreateDynamicObject(3458,1090.5166016,7116.2089844,46.8405457,369.1981812,0.0000000,0.0000000); //object(vgncarshade1) (633)
	CreateDynamicObject(3458,1090.5166016,7121.2563477,47.7122040,370.3981934,0.0000000,0.0000000); //object(vgncarshade1) (634)
	CreateDynamicObject(3458,1090.5166016,7126.2841797,48.6893921,371.5982056,0.0000000,0.0000000); //object(vgncarshade1) (635)
	CreateDynamicObject(3458,1090.5166016,7131.2910156,49.7716522,372.7982178,0.0000000,0.0000000); //object(vgncarshade1) (636)
	CreateDynamicObject(3458,1090.5166016,7136.2734375,50.9585266,373.9982300,0.0000000,0.0000000); //object(vgncarshade1) (637)
	CreateDynamicObject(3458,1090.5166016,7141.2299805,52.2494812,375.1982422,0.0000000,0.0000000); //object(vgncarshade1) (638)
	CreateDynamicObject(3458,1090.5166016,7146.1586914,53.6439667,376.3982544,0.0000000,0.0000000); //object(vgncarshade1) (639)
	CreateDynamicObject(8558,1171.2624512,7151.0654297,55.1282425,17.5000000,0.0000000,0.0000000); //object(vgshseing28) (602)
	CreateDynamicObject(8558,1090.5031738,7151.0200195,55.1282425,17.4957275,0.0000000,0.0000000); //object(vgshseing28) (603)
	CreateDynamicObject(8558,1130.8762207,6919.9233398,100.9157867,320.0000000,0.0000000,0.0000000); //object(vgshseing28) (605)
	CreateDynamicObject(8558,1131.0888672,7312.4775391,20.7407703,343.2500000,0.0000000,0.0000000); //object(vgshseing28) (689)
	CreateDynamicObject(8558,1131.0888672,7312.4775391,20.7407837,343.2458496,0.0000000,0.0000000); //object(vgshseing28) (736)
	CreateDynamicObject(8558,1131.0888672,7317.3896484,19.2903748,343.8446045,0.0000000,0.0000000); //object(vgshseing28) (705)
	CreateDynamicObject(8558,1131.0888672,7322.3173828,17.8914185,344.4500122,0.0000000,0.0000000); //object(vgshseing28) (706)
	CreateDynamicObject(8558,1131.0888672,7327.2587891,16.5441895,345.0500183,0.0000000,0.0000000); //object(vgshseing28) (707)
	CreateDynamicObject(8558,1131.0888672,7332.2143555,15.2487488,345.6500244,0.0000000,0.0000000); //object(vgshseing28) (708)
	CreateDynamicObject(8558,1131.0888672,7337.1831055,14.0053101,346.2500305,0.0000000,0.0000000); //object(vgshseing28) (709)
	CreateDynamicObject(8558,1131.0888672,7342.1645508,12.8139343,346.8500366,0.0000000,0.0000000); //object(vgshseing28) (710)
	CreateDynamicObject(8558,1131.0888672,7347.1582031,11.6748047,347.4500427,0.0000000,0.0000000); //object(vgshseing28) (711)
	CreateDynamicObject(8558,1131.0888672,7352.1640625,10.5880127,348.0500488,0.0000000,0.0000000); //object(vgshseing28) (712)
	CreateDynamicObject(8558,1131.0888672,7357.1806641,9.5537109,348.6456299,0.0000000,0.0000000); //object(vgshseing28) (713)
	CreateDynamicObject(8558,1131.0888672,7362.2075195,8.5720215,349.2500610,0.0000000,0.0000000); //object(vgshseing28) (714)
	CreateDynamicObject(8558,1131.0888672,7367.2446289,7.6429749,349.8500671,0.0000000,0.0000000); //object(vgshseing28) (715)
	CreateDynamicObject(8558,1131.0888672,7372.2910156,6.7667847,350.4500732,0.0000000,0.0000000); //object(vgshseing28) (716)
	CreateDynamicObject(8558,1131.0888672,7377.3466797,5.9434509,351.0500793,0.0000000,0.0000000); //object(vgshseing28) (717)
	CreateDynamicObject(8558,1131.0888672,7382.4101562,5.1731262,351.6500854,0.0000000,0.0000000); //object(vgshseing28) (718)
	CreateDynamicObject(8558,1131.0888672,7387.4819336,4.4558411,352.2500916,0.0000000,0.0000000); //object(vgshseing28) (719)
	CreateDynamicObject(8558,1131.0888672,7392.5605469,3.7917480,352.8500977,0.0000000,0.0000000); //object(vgshseing28) (720)
	CreateDynamicObject(8558,1131.0888672,7397.6459961,3.1808472,353.4501038,0.0000000,0.0000000); //object(vgshseing28) (721)
	CreateDynamicObject(3458,1131.0888672,7402.7373047,2.6232300,354.0399170,0.0000000,0.0000000); //object(vgncarshade1) (641)
	CreateDynamicObject(3458,1131.0888672,7407.8344727,2.1185608,354.6454163,0.0000000,0.0000000); //object(vgncarshade1) (642)
	CreateDynamicObject(3458,1131.0888672,7412.9365234,1.6672668,355.2454224,0.0000000,0.0000000); //object(vgncarshade1) (643)
	CreateDynamicObject(3458,1131.0888672,7418.0429688,1.2694397,355.8454285,0.0000000,0.0000000); //object(vgncarshade1) (644)
	CreateDynamicObject(3458,1131.0888672,7423.1538086,0.9251099,356.4454346,0.0000000,0.0000000); //object(vgncarshade1) (645)
	CreateDynamicObject(3458,1131.0888672,7428.2675781,0.6343384,357.0454407,0.0000000,0.0000000); //object(vgncarshade1) (646)
	CreateDynamicObject(3458,1131.0888672,7433.3842773,0.3970947,357.6454468,0.0000000,0.0000000); //object(vgncarshade1) (647)
	CreateDynamicObject(3458,1131.0888672,7438.5029297,0.2134705,358.2421875,0.0000000,0.0000000); //object(vgncarshade1) (648)
	CreateDynamicObject(3458,1131.0888672,7443.6230469,0.0834656,358.8454590,0.0000000,0.0000000); //object(vgncarshade1) (649)
	CreateDynamicObject(3458,1131.0888672,7448.7446289,0.0070801,359.4454651,0.0000000,0.0000000); //object(vgncarshade1) (650)
	CreateDynamicObject(3458,1131.0888672,7453.8666992,-0.0156860,360.0454712,0.0000000,0.0000000); //object(vgncarshade1) (651)
	CreateDynamicObject(3458,1131.0888672,7458.9882812,0.0151978,0.6427002,0.0000000,0.0000000); //object(vgncarshade1) (652)
	CreateDynamicObject(3458,1131.0822754,7311.9736328,20.3532333,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (660)
	CreateDynamicObject(8558,1131.0888672,7464.1093750,0.0997314,1.2414551,0.0000000,0.0000000); //object(vgshseing28) (723)
	CreateDynamicObject(978,1095.4415283,6762.4858398,164.1290436,0.0000000,180.0000000,90.0000000); //object(sub_roadright) (4)
	CreateDynamicObject(978,1095.4520264,6771.8647461,164.1290436,0.0000000,179.9945068,90.0000000); //object(sub_roadright) (5)
	CreateDynamicObject(978,1095.4543457,6778.7919922,164.1290436,0.0000000,179.9945068,90.0000000); //object(sub_roadright) (6)
	CreateDynamicObject(978,1165.4984131,6761.6713867,164.1290436,0.0000000,179.9945068,270.0000000); //object(sub_roadright) (7)
	CreateDynamicObject(978,1165.4964600,6770.9907227,164.1290436,0.0000000,179.9945068,270.0000000); //object(sub_roadright) (8)
	CreateDynamicObject(978,1165.4973145,6778.0288086,164.1290436,0.0000000,179.9945068,270.0000000); //object(sub_roadright) (9)
	CreateDynamicObject(3877,1165.4094238,6782.5073242,163.5069885,0.0000000,180.0000000,0.0000000); //object(sf_rooflite) (5)
	CreateDynamicObject(3877,1165.3970947,6757.4174805,163.5069885,0.0000000,179.9945068,0.0000000); //object(sf_rooflite) (6)
	CreateDynamicObject(3877,1095.5546875,6757.5224609,163.5069885,0.0000000,179.9945068,0.0000000); //object(sf_rooflite) (7)
	CreateDynamicObject(3877,1095.5799561,6783.1787109,163.5069885,0.0000000,179.9945068,0.0000000); //object(sf_rooflite) (8)
	CreateDynamicObject(8558,1131.0888672,7464.1093750,0.0997314,1.2414551,0.0000000,0.0000000); //object(vgshseing28) (788)
	CreateDynamicObject(8558,1131.0888672,7469.2285156,0.2643280,2.4414551,0.0000000,0.0000000); //object(vgshseing28) (777)
	CreateDynamicObject(8558,1131.0888672,7474.3432617,0.5360870,3.6414552,0.0000000,0.0000000); //object(vgshseing28) (778)
	CreateDynamicObject(8558,1131.0888672,7479.4511719,0.9149017,4.8414555,0.0000000,0.0000000); //object(vgshseing28) (779)
	CreateDynamicObject(8558,1131.0888672,7484.5502930,1.4006195,6.0414553,0.0000000,0.0000000); //object(vgshseing28) (780)
	CreateDynamicObject(8558,1131.0888672,7489.6376953,1.9929962,7.2414551,0.0000000,0.0000000); //object(vgshseing28) (781)
	CreateDynamicObject(8558,1131.0888672,7494.7119141,2.6918030,8.4414549,0.0000000,0.0000000); //object(vgshseing28) (782)
	CreateDynamicObject(8558,1131.0888672,7499.7700195,3.4967194,9.6414547,0.0000000,0.0000000); //object(vgshseing28) (783)
	CreateDynamicObject(8558,1131.0888672,7504.8105469,4.4073792,10.8414545,0.0000000,0.0000000); //object(vgshseing28) (784)
	CreateDynamicObject(8558,1131.0888672,7509.8305664,5.4234161,12.0414543,0.0000000,0.0000000); //object(vgshseing28) (785)
	CreateDynamicObject(8558,1131.0888672,7514.8286133,6.5443573,13.2414541,0.0000000,0.0000000); //object(vgshseing28) (786)
	CreateDynamicObject(8558,1131.0888672,7519.8017578,7.7697144,14.4414539,0.0000000,0.0000000); //object(vgshseing28) (787)
	CreateDynamicObject(8558,1131.0888672,7524.7480469,9.0989532,15.6414537,0.0000000,0.0000000); //object(vgshseing28) (789)
	CreateDynamicObject(8558,1131.0888672,7529.6655273,10.5314941,16.8414536,0.0000000,0.0000000); //object(vgshseing28) (790)
	CreateDynamicObject(8558,1131.0888672,7534.5522461,12.0667114,18.0414543,0.0000000,0.0000000); //object(vgshseing28) (791)
	CreateDynamicObject(8558,1131.0888672,7539.4052734,13.7039185,19.2414551,0.0000000,0.0000000); //object(vgshseing28) (792)
	CreateDynamicObject(8558,1131.0888672,7544.2231445,15.4424133,20.4414558,0.0000000,0.0000000); //object(vgshseing28) (793)
	CreateDynamicObject(8558,1131.0888672,7549.0039062,17.2814331,21.6414566,0.0000000,0.0000000); //object(vgshseing28) (794)
	CreateDynamicObject(8558,1131.0888672,7553.7446289,19.2201538,22.8414574,0.0000000,0.0000000); //object(vgshseing28) (795)
	CreateDynamicObject(8558,1131.0888672,7558.4438477,21.2577362,24.0414581,0.0000000,0.0000000); //object(vgshseing28) (796)
	CreateDynamicObject(8558,1131.0888672,7563.0996094,23.3932800,25.2414589,0.0000000,0.0000000); //object(vgshseing28) (797)
	CreateDynamicObject(8558,1131.0888672,7567.7094727,25.6258545,26.4414597,0.0000000,0.0000000); //object(vgshseing28) (798)
	CreateDynamicObject(8558,1131.0888672,7572.2714844,27.9544830,27.6414604,0.0000000,0.0000000); //object(vgshseing28) (799)
	CreateDynamicObject(8558,1131.0888672,7576.7836914,30.3781433,28.8414612,0.0000000,0.0000000); //object(vgshseing28) (800)
	CreateDynamicObject(8558,1131.0888672,7581.2441406,32.8957672,30.0414619,0.0000000,0.0000000); //object(vgshseing28) (801)
	CreateDynamicObject(8558,1131.0888672,7585.6508789,35.5062561,31.2414627,0.0000000,0.0000000); //object(vgshseing28) (802)
	CreateDynamicObject(8558,1131.0888672,7590.0019531,38.2084503,32.4414635,0.0000000,0.0000000); //object(vgshseing28) (803)
	CreateDynamicObject(8558,1131.0888672,7594.2958984,41.0011902,33.6414642,0.0000000,0.0000000); //object(vgshseing28) (804)
	CreateDynamicObject(8558,1131.0888672,7598.5297852,43.8832397,34.8414650,0.0000000,0.0000000); //object(vgshseing28) (805)
	CreateDynamicObject(8558,1131.0888672,7602.7026367,46.8533173,36.0414658,0.0000000,0.0000000); //object(vgshseing28) (806)
	CreateDynamicObject(8558,1131.0888672,7606.8125000,49.9101410,37.2381592,0.0000000,0.0000000); //object(vgshseing28) (807)
	CreateDynamicObject(8558,1122.9387207,7777.9018555,48.8600922,72.9986572,0.0000000,90.0000000); //object(vgshseing28) (807)
	CreateDynamicObject(8558,1122.9387207,7777.9018555,48.8600922,72.9986572,0.0000000,90.0000000); //object(vgshseing28) (166)
	CreateDynamicObject(8558,1124.6546631,7781.4731445,44.0340805,67.8557968,0.0000000,90.0000000); //object(vgshseing28) (167)
	CreateDynamicObject(8558,1126.7961426,7785.0449219,39.3813133,62.7129402,0.0000000,90.0000000); //object(vgshseing28) (169)
	CreateDynamicObject(8558,1129.3461914,7788.6162109,34.9392471,57.5700836,0.0000000,90.0000000); //object(vgshseing28) (170)
	CreateDynamicObject(8558,1132.2841797,7792.1875000,30.7436447,52.4272270,0.0000000,90.0000000); //object(vgshseing28) (171)
	CreateDynamicObject(8558,1135.5863037,7795.7587891,26.8282852,47.2843704,0.0000000,90.0000000); //object(vgshseing28) (172)
	CreateDynamicObject(8558,1139.2261963,7799.3305664,23.2246971,42.1415138,0.0000000,90.0000000); //object(vgshseing28) (173)
	CreateDynamicObject(8558,1143.1744385,7802.9018555,19.9618912,36.9986572,0.0000000,90.0000000); //object(vgshseing28) (174)
	CreateDynamicObject(8558,1147.3992920,7806.4731445,17.0661392,31.8558006,0.0000000,90.0000000); //object(vgshseing28) (175)
	CreateDynamicObject(8558,1151.8666992,7810.0449219,14.5607567,26.7129440,0.0000000,90.0000000); //object(vgshseing28) (176)
	CreateDynamicObject(8558,1156.5406494,7813.6162109,12.4659119,21.5700874,0.0000000,90.0000000); //object(vgshseing28) (177)
	CreateDynamicObject(8558,1161.3836670,7817.1875000,10.7984772,16.4272308,0.0000000,90.0000000); //object(vgshseing28) (178)
	CreateDynamicObject(8558,1166.3565674,7820.7587891,9.5718727,11.2843742,0.0000000,90.0000000); //object(vgshseing28) (179)
	CreateDynamicObject(3458,1171.4189453,7824.3300781,8.7959747,6.1358643,0.0000000,90.0000000); //object(vgncarshade1) (2)
	CreateDynamicObject(3458,1176.5310059,7827.9013672,8.4770432,0.9985003,0.0000000,90.0000000); //object(vgncarshade1) (12)
	CreateDynamicObject(3458,1181.6511230,7831.4731445,8.6176414,-4.1443567,0.0000000,90.0000000); //object(vgncarshade1) (14)
	CreateDynamicObject(3458,1186.7379150,7835.0444336,9.2166290,-9.2872143,0.0000000,90.0000000); //object(vgncarshade1) (15)
	CreateDynamicObject(3458,1191.7506104,7838.6157227,10.2691917,-14.4300709,0.0000000,90.0000000); //object(vgncarshade1) (24)
	CreateDynamicObject(3458,1196.6488037,7842.1870117,11.7668495,-19.5729275,0.0000000,90.0000000); //object(vgncarshade1) (33)
	CreateDynamicObject(3458,1201.3930664,7845.7587891,13.6975479,-24.7157841,0.0000000,90.0000000); //object(vgncarshade1) (34)
	CreateDynamicObject(3458,1205.9450684,7849.3300781,16.0457382,-29.8586407,0.0000000,90.0000000); //object(vgncarshade1) (39)
	CreateDynamicObject(3458,1210.2683105,7852.9013672,18.7925186,-35.0014992,0.0000000,90.0000000); //object(vgncarshade1) (40)
	CreateDynamicObject(3458,1214.3271484,7856.4726562,21.9157677,319.8504639,0.0000000,90.0000000); //object(vgncarshade1) (48)
	CreateDynamicObject(3458,1218.0908203,7860.0439453,25.3903465,314.7088623,0.0000000,90.0000000); //object(vgncarshade1) (49)
	CreateDynamicObject(8558,1221.5273438,7863.6152344,29.1882744,309.5672607,0.0000000,90.0000000); //object(vgshseing28) (164)
	CreateDynamicObject(8558,1224.6094971,7867.1865234,33.2790871,304.4244080,0.0000000,90.0000000); //object(vgshseing28) (165)
	CreateDynamicObject(8558,1227.3126221,7870.7583008,37.6296921,299.2815552,0.0000000,90.0000000); //object(vgshseing28) (279)
	CreateDynamicObject(8558,1229.6147461,7874.3295898,42.2051086,294.1387024,0.0000000,90.0000000); //object(vgshseing28) (358)
	CreateDynamicObject(8558,1231.4975586,7877.9008789,46.9684753,288.9958496,0.0000000,90.0000000); //object(vgshseing28) (369)
	CreateDynamicObject(8558,1232.9458008,7881.4721680,51.8814392,283.8529968,0.0000000,90.0000000); //object(vgshseing28) (377)
	CreateDynamicObject(8558,1233.9472656,7885.0439453,56.9044418,278.7066650,0.0000000,90.0000000); //object(vgshseing28) (378)
	CreateDynamicObject(8558,1234.4951172,7888.6152344,61.9970169,270.0000000,180.0000000,269.9999390); //object(vgshseing28) (379)
	CreateDynamicObject(8558,1234.4951172,7888.6152344,61.9970169,270.0000000,0.0000000,90.0000000); //object(vgshseing28) (380)
	CreateDynamicObject(8558,1234.5100098,7892.1376953,66.9888229,270.0000000,0.0000000,90.0000000); //object(vgshseing28) (381)
	CreateDynamicObject(3458,1121.0787354,7777.9003906,50.2409821,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (175)
	CreateDynamicObject(3458,1231.0676270,8044.7231445,65.6103363,284.7500000,0.0000000,90.0000000); //object(vgncarshade1) (177)
	CreateDynamicObject(3458,1231.0676270,8044.7231445,65.6103363,284.7500000,0.0000000,90.0000000); //object(vgncarshade1) (483)
	CreateDynamicObject(3458,1229.5700684,8047.2231445,60.7121620,289.2500000,0.0000000,90.0000000); //object(vgncarshade1) (178)
	CreateDynamicObject(3458,1227.6928711,8049.7231445,55.9465523,293.7500000,0.0000000,90.0000000); //object(vgncarshade1) (179)
	CreateDynamicObject(3458,1225.4475098,8052.2231445,51.3429184,298.2500000,0.0000000,90.0000000); //object(vgncarshade1) (180)
	CreateDynamicObject(3458,1222.8479004,8054.7231445,46.9296455,302.7500000,0.0000000,90.0000000); //object(vgncarshade1) (181)
	CreateDynamicObject(3458,1219.9100342,8057.2231445,42.7339401,307.2500000,0.0000000,90.0000000); //object(vgncarshade1) (182)
	CreateDynamicObject(3458,1216.6520996,8059.7231445,38.7816696,311.7500000,0.0000000,90.0000000); //object(vgncarshade1) (183)
	CreateDynamicObject(3458,1213.0939941,8062.2231445,35.0972023,316.2500000,0.0000000,90.0000000); //object(vgncarshade1) (184)
	CreateDynamicObject(3458,1209.2578125,8064.7231445,31.7032547,320.7500000,0.0000000,90.0000000); //object(vgncarshade1) (185)
	CreateDynamicObject(3458,1205.1672363,8067.2231445,28.6207504,325.2500000,0.0000000,90.0000000); //object(vgncarshade1) (186)
	CreateDynamicObject(3458,1200.8474121,8069.7231445,25.8686981,329.7500000,0.0000000,90.0000000); //object(vgncarshade1) (188)
	CreateDynamicObject(3458,1196.3249512,8072.2231445,23.4640579,334.2500000,0.0000000,90.0000000); //object(vgncarshade1) (189)
	CreateDynamicObject(3458,1191.6276855,8074.7231445,21.4216614,338.7500000,0.0000000,90.0000000); //object(vgncarshade1) (190)
	CreateDynamicObject(3458,1186.7847900,8077.2231445,19.7541008,343.2500000,0.0000000,90.0000000); //object(vgncarshade1) (191)
	CreateDynamicObject(3458,1181.8259277,8079.7231445,18.4716530,347.7500000,0.0000000,90.0000000); //object(vgncarshade1) (196)
	CreateDynamicObject(3458,1176.7817383,8082.2231445,17.5822220,352.2500000,0.0000000,90.0000000); //object(vgncarshade1) (197)
	CreateDynamicObject(8558,1171.6826172,8084.7226562,17.0913086,356.7480469,0.0000000,90.0000000); //object(vgshseing28) (382)
	CreateDynamicObject(8558,1171.6826172,8084.7226562,17.0913086,356.7480469,0.0000000,90.0000000); //object(vgshseing28) (383)
	CreateDynamicObject(8558,1166.6694336,8084.7319336,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (384)
	CreateDynamicObject(3458,1095.5893555,8085.0634766,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (440)
	CreateDynamicObject(3458,962.5870361,8085.1542969,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (478)
	CreateDynamicObject(8558,957.4365234,8085.1630859,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (484)
	CreateDynamicObject(8558,952.3484497,7830.8374023,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (599)
	CreateDynamicObject(8558,952.2224121,8080.1630859,17.2797852,7.1999998,0.0000000,90.0000000); //object(vgshseing28) (485)
	CreateDynamicObject(8558,947.0905762,8075.1630859,18.2587395,14.3999996,0.0000000,90.0000000); //object(vgshseing28) (486)
	CreateDynamicObject(8558,942.1218262,8070.1630859,19.8731728,21.5999985,0.0000000,90.0000000); //object(vgshseing28) (487)
	CreateDynamicObject(8558,937.3946533,8065.1630859,22.0976143,28.7999992,0.0000000,90.0000000); //object(vgshseing28) (488)
	CreateDynamicObject(8558,932.9835205,8060.1630859,24.8969955,36.0000000,0.0000000,90.0000000); //object(vgshseing28) (489)
	CreateDynamicObject(8558,928.9580688,8055.1630859,28.2271595,43.2000008,0.0000000,90.0000000); //object(vgshseing28) (490)
	CreateDynamicObject(8558,925.3817139,8050.1630859,32.0355911,50.4000015,0.0000000,90.0000000); //object(vgshseing28) (491)
	CreateDynamicObject(8558,922.3109131,8045.1630859,36.2622261,57.6000023,0.0000000,90.0000000); //object(vgshseing28) (492)
	CreateDynamicObject(8558,919.7940063,8040.1630859,40.8404160,64.8000031,0.0000000,90.0000000); //object(vgshseing28) (493)
	CreateDynamicObject(8558,917.8707886,8035.1630859,45.6979446,72.0000000,0.0000000,90.0000000); //object(vgshseing28) (494)
	CreateDynamicObject(8558,916.5715332,8030.1630859,50.7582169,79.1999969,0.0000000,90.0000000); //object(vgshseing28) (495)
	CreateDynamicObject(8558,915.9167480,8025.1630859,55.9414253,86.3999939,0.0000000,90.0000000); //object(vgshseing28) (496)
	CreateDynamicObject(8558,915.9167480,8020.1630859,61.1658325,93.5999908,0.0000000,90.0000000); //object(vgshseing28) (497)
	CreateDynamicObject(8558,916.5715332,8015.1630859,66.3490448,100.7999878,0.0000000,90.0000000); //object(vgshseing28) (498)
	CreateDynamicObject(8558,917.8707886,8010.1630859,71.4093170,107.9999847,0.0000000,90.0000000); //object(vgshseing28) (499)
	CreateDynamicObject(8558,919.7940063,8005.1630859,76.2668457,115.1999817,0.0000000,90.0000000); //object(vgshseing28) (500)
	CreateDynamicObject(8558,922.3108521,8000.1630859,80.8450317,122.3999786,0.0000000,90.0000000); //object(vgshseing28) (501)
	CreateDynamicObject(8558,925.3817139,7995.1630859,85.0716629,129.5999756,0.0000000,90.0000000); //object(vgshseing28) (502)
	CreateDynamicObject(8558,928.9580688,7990.1630859,88.8800964,136.7999725,0.0000000,90.0000000); //object(vgshseing28) (503)
	CreateDynamicObject(8558,932.9835205,7985.1630859,92.2102585,143.9999695,0.0000000,90.0000000); //object(vgshseing28) (504)
	CreateDynamicObject(8558,937.3946533,7980.1630859,95.0096436,151.1999664,0.0000000,90.0000000); //object(vgshseing28) (505)
	CreateDynamicObject(8558,942.1218262,7975.1630859,97.2340851,158.3999634,0.0000000,90.0000000); //object(vgshseing28) (506)
	CreateDynamicObject(8558,947.0905151,7970.1630859,98.8485260,165.5999603,0.0000000,90.0000000); //object(vgshseing28) (507)
	CreateDynamicObject(8558,952.2224121,7965.1630859,99.8274841,172.7999573,0.0000000,90.0000000); //object(vgshseing28) (508)
	CreateDynamicObject(3458,957.4355469,7960.1630859,100.1555328,179.9945068,0.0000000,90.0000000); //object(vgncarshade1) (479)
	CreateDynamicObject(3458,962.6497192,7955.1630859,99.8279877,187.1945038,0.0000000,90.0000000); //object(vgncarshade1) (480)
	CreateDynamicObject(3458,967.7816772,7950.1630859,98.8495178,194.3945007,0.0000000,90.0000000); //object(vgncarshade1) (481)
	CreateDynamicObject(3458,972.7506104,7945.1630859,97.2355499,201.5944977,0.0000000,90.0000000); //object(vgncarshade1) (482)
	CreateDynamicObject(3458,977.4780273,7940.1630859,95.0115356,208.7944946,0.0000000,90.0000000); //object(vgncarshade1) (484)
	CreateDynamicObject(3458,981.8894653,7935.1630859,92.2125702,215.9944916,0.0000000,90.0000000); //object(vgncarshade1) (485)
	CreateDynamicObject(3458,985.9152832,7930.1630859,88.8827667,223.1944885,0.0000000,90.0000000); //object(vgncarshade1) (486)
	CreateDynamicObject(3458,989.4920044,7925.1630859,85.0746460,230.3944855,0.0000000,90.0000000); //object(vgncarshade1) (487)
	CreateDynamicObject(3458,992.5632935,7920.1630859,80.8482742,237.5944824,0.0000000,90.0000000); //object(vgncarshade1) (488)
	CreateDynamicObject(3458,995.0806274,7915.1630859,76.2703094,244.7944794,0.0000000,90.0000000); //object(vgncarshade1) (489)
	CreateDynamicObject(3458,997.0043335,7910.1630859,71.4129257,251.9944763,0.0000000,90.0000000); //object(vgncarshade1) (490)
	CreateDynamicObject(3458,998.3040771,7905.1630859,66.3527374,259.1944885,0.0000000,90.0000000); //object(vgncarshade1) (491)
	CreateDynamicObject(3458,998.9594116,7900.1630859,61.1695251,266.3945007,0.0000000,90.0000000); //object(vgncarshade1) (498)
	CreateDynamicObject(3458,998.9598999,7895.1630859,55.9450722,273.5945129,0.0000000,90.0000000); //object(vgncarshade1) (501)
	CreateDynamicObject(3458,998.3056030,7890.1630859,50.7617531,280.7945251,0.0000000,90.0000000); //object(vgncarshade1) (502)
	CreateDynamicObject(3458,997.0067749,7885.1630859,45.7012939,287.9945374,0.0000000,90.0000000); //object(vgncarshade1) (503)
	CreateDynamicObject(3458,995.0839844,7880.1630859,40.8435402,295.1945496,0.0000000,90.0000000); //object(vgncarshade1) (504)
	CreateDynamicObject(3458,992.5675659,7875.1630859,36.2650757,302.3945618,0.0000000,90.0000000); //object(vgncarshade1) (505)
	CreateDynamicObject(3458,989.4970703,7870.1630859,32.0381012,309.5945740,0.0000000,90.0000000); //object(vgncarshade1) (506)
	CreateDynamicObject(3458,985.9210815,7865.1630859,28.2293015,316.7945862,0.0000000,90.0000000); //object(vgncarshade1) (507)
	CreateDynamicObject(3458,981.8958740,7860.1630859,24.8987312,323.9945984,0.0000000,90.0000000); //object(vgncarshade1) (508)
	CreateDynamicObject(3458,977.4849854,7855.1630859,22.0989037,331.1946106,0.0000000,90.0000000); //object(vgncarshade1) (526)
	CreateDynamicObject(3458,972.7579346,7850.1630859,19.8739967,338.3946228,0.0000000,90.0000000); //object(vgncarshade1) (527)
	CreateDynamicObject(3458,967.7893677,7845.1630859,18.2590828,345.5946350,0.0000000,90.0000000); //object(vgncarshade1) (528)
	CreateDynamicObject(3458,962.6575317,7840.1630859,17.2796364,352.7946472,0.0000000,90.0000000); //object(vgncarshade1) (529)
	CreateDynamicObject(3458,957.4433594,7835.1630859,16.9511032,359.9945068,0.0000000,90.0000000); //object(vgncarshade1) (530)
	CreateDynamicObject(8558,947.2386475,7826.2563477,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (510)
	CreateDynamicObject(8558,942.1288452,7821.6752930,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (529)
	CreateDynamicObject(8558,937.0190430,7817.0942383,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (530)
	CreateDynamicObject(8558,931.9092407,7812.5131836,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (531)
	CreateDynamicObject(8558,926.7994385,7807.9321289,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (532)
	CreateDynamicObject(8558,921.6896362,7803.3510742,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (533)
	CreateDynamicObject(8558,916.5798340,7798.7700195,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (534)
	CreateDynamicObject(8558,911.4700317,7794.1889648,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (535)
	CreateDynamicObject(8558,906.3602295,7789.6079102,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (536)
	CreateDynamicObject(8558,901.2504272,7785.0268555,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (537)
	CreateDynamicObject(8558,896.1406250,7780.4458008,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (538)
	CreateDynamicObject(8558,891.0308228,7775.8647461,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (539)
	CreateDynamicObject(8558,885.9210205,7771.2836914,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (540)
	CreateDynamicObject(8558,880.8112183,7766.7026367,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (541)
	CreateDynamicObject(8558,875.7011719,7762.1210938,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (588)
	CreateDynamicObject(8558,870.5908203,7757.5400391,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (589)
	CreateDynamicObject(8558,865.4818115,7752.9594727,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (590)
	CreateDynamicObject(8558,860.3710938,7748.3779297,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (591)
	CreateDynamicObject(8558,855.2622070,7743.7973633,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (592)
	CreateDynamicObject(8558,850.1523438,7739.2158203,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (593)
	CreateDynamicObject(3458,845.0419922,7734.6347656,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (531)
	CreateDynamicObject(3458,839.9251709,7731.0634766,17.1815376,5.1428571,0.0000000,90.0000000); //object(vgncarshade1) (532)
	CreateDynamicObject(3458,834.8494873,7727.4916992,17.8690834,10.2857141,0.0000000,90.0000000); //object(vgncarshade1) (533)
	CreateDynamicObject(3458,829.8558960,7723.9204102,19.0088348,15.4285717,0.0000000,90.0000000); //object(vgncarshade1) (534)
	CreateDynamicObject(3458,824.9845581,7720.3491211,20.5916252,20.5714283,0.0000000,90.0000000); //object(vgncarshade1) (535)
	CreateDynamicObject(3458,820.2747192,7716.7778320,22.6047020,25.7142849,0.0000000,90.0000000); //object(vgncarshade1) (536)
	CreateDynamicObject(3458,815.7643433,7713.2060547,25.0318604,30.8571415,0.0000000,90.0000000); //object(vgncarshade1) (537)
	CreateDynamicObject(3458,811.4896240,7709.6347656,27.8535614,36.0000000,0.0000000,90.0000000); //object(vgncarshade1) (538)
	CreateDynamicObject(3458,807.4851074,7706.0634766,31.0470810,41.1428566,0.0000000,90.0000000); //object(vgncarshade1) (539)
	CreateDynamicObject(3458,803.7822266,7702.4912109,34.5867119,46.2854004,0.0000000,90.0000000); //object(vgncarshade1) (540)
	CreateDynamicObject(3458,800.4129639,7698.9204102,38.4439507,51.4285698,0.0000000,90.0000000); //object(vgncarshade1) (541)
	CreateDynamicObject(3458,797.4023438,7695.3491211,42.5877457,56.5714264,0.0000000,90.0000000); //object(vgncarshade1) (542)
	CreateDynamicObject(3458,794.7752686,7691.7778320,46.9847260,61.7142830,0.0000000,90.0000000); //object(vgncarshade1) (543)
	CreateDynamicObject(3458,792.5528564,7688.2060547,51.5994987,66.8571396,0.0000000,90.0000000); //object(vgncarshade1) (544)
	CreateDynamicObject(3458,790.7531128,7684.6347656,56.3949051,72.0000000,0.0000000,90.0000000); //object(vgncarshade1) (545)
	CreateDynamicObject(3458,789.3905029,7681.0634766,61.3323326,77.1428604,0.0000000,90.0000000); //object(vgncarshade1) (546)
	CreateDynamicObject(3458,788.4759521,7677.4916992,66.3720322,82.2857208,0.0000000,90.0000000); //object(vgncarshade1) (547)
	CreateDynamicObject(3458,788.0166016,7673.9199219,71.4734192,87.4237061,0.0000000,90.0000000); //object(vgncarshade1) (548)
	CreateDynamicObject(3458,787.8975830,7670.3852539,76.3954239,90.0000000,0.0000000,90.0000000); //object(vgncarshade1) (549)
	CreateDynamicObject(8558,798.6925049,7514.3789062,76.4954300,287.2460938,0.0000000,89.9945068); //object(vgshseing28) (598)
	CreateDynamicObject(8558,797.0039062,7511.6015625,71.6597137,291.2460938,0.0000000,89.9945068); //object(vgshseing28) (604)
	CreateDynamicObject(8558,794.9820557,7508.8237305,66.9535522,295.2460938,0.0000000,89.9945068); //object(vgshseing28) (606)
	CreateDynamicObject(8558,792.6369019,7506.0458984,62.3998642,299.2460938,0.0000000,89.9945068); //object(vgshseing28) (607)
	CreateDynamicObject(8558,789.9797974,7503.2685547,58.0208740,303.2460938,0.0000000,89.9945068); //object(vgshseing28) (608)
	CreateDynamicObject(8558,787.0236816,7500.4916992,53.8378563,307.2460938,0.0000000,89.9945068); //object(vgshseing28) (609)
	CreateDynamicObject(8558,783.7830200,7497.7138672,49.8712120,311.2460938,0.0000000,89.9945068); //object(vgshseing28) (610)
	CreateDynamicObject(8558,780.2734375,7494.9365234,46.1402740,315.2460938,0.0000000,89.9945068); //object(vgshseing28) (611)
	CreateDynamicObject(8558,776.5122681,7492.1591797,42.6632156,319.2460938,0.0000000,89.9945068); //object(vgshseing28) (612)
	CreateDynamicObject(8558,772.5175781,7489.3808594,39.4569817,323.2452393,0.0000000,89.9945068); //object(vgshseing28) (613)
	CreateDynamicObject(8558,768.3085938,7486.6035156,36.5372047,327.2442627,0.0000000,89.9945068); //object(vgshseing28) (614)
	CreateDynamicObject(8558,763.9072266,7483.8266602,33.9180756,331.2460938,0.0000000,89.9945068); //object(vgshseing28) (615)
	CreateDynamicObject(8558,759.3330078,7481.0488281,31.6123657,335.2423096,0.0000000,89.9945068); //object(vgshseing28) (616)
	CreateDynamicObject(8558,754.6093750,7478.2714844,29.6313171,339.2413330,0.0000000,89.9945068); //object(vgshseing28) (617)
	CreateDynamicObject(8558,749.7587891,7475.4951172,27.9845810,343.2458496,0.0000000,89.9945068); //object(vgshseing28) (618)
	CreateDynamicObject(3458,744.8056641,7472.7177734,26.6801834,347.2448730,0.0000000,89.9945068); //object(vgncarshade1) (551)
	CreateDynamicObject(3458,739.7733765,7469.9404297,25.7243576,351.2448730,0.0000000,89.9945068); //object(vgncarshade1) (552)
	CreateDynamicObject(3458,734.6866455,7467.1630859,25.1218796,355.2448730,0.0000000,89.9945068); //object(vgncarshade1) (553)
	CreateDynamicObject(3458,729.5703125,7464.3857422,24.8756714,359.2419434,0.0000000,89.9945068); //object(vgncarshade1) (554)
	CreateDynamicObject(3458,724.4492798,7461.6083984,24.9869537,363.2448730,0.0000000,89.9945068); //object(vgncarshade1) (555)
	CreateDynamicObject(3458,719.3476562,7458.8310547,25.4551697,7.2399902,0.0000000,89.9945068); //object(vgncarshade1) (561)
	CreateDynamicObject(3458,714.2059937,7454.6650391,26.3839302,13.2399902,0.0000000,89.9945068); //object(vgncarshade1) (557)
	CreateDynamicObject(3458,709.1896362,7450.4985352,27.8450050,19.2399902,0.0000000,89.9945068); //object(vgncarshade1) (558)
	CreateDynamicObject(3458,704.3534546,7446.3325195,29.8223915,25.2399902,0.0000000,89.9945068); //object(vgncarshade1) (559)
	CreateDynamicObject(3458,699.7504883,7442.1665039,32.2944221,31.2399902,0.0000000,89.9945068); //object(vgncarshade1) (560)
	CreateDynamicObject(3458,695.4310303,7438.0000000,35.2340126,37.2399902,0.0000000,89.9945068); //object(vgncarshade1) (562)
	CreateDynamicObject(3458,691.4426270,7433.8339844,38.6089592,43.2399902,0.0000000,89.9945068); //object(vgncarshade1) (563)
	CreateDynamicObject(3458,687.8287964,7429.6674805,42.3822823,49.2399902,0.0000000,89.9945068); //object(vgncarshade1) (564)
	CreateDynamicObject(3458,684.6292114,7425.5009766,46.5126419,55.2399902,0.0000000,89.9945068); //object(vgncarshade1) (565)
	CreateDynamicObject(3458,681.8787842,7421.3349609,50.9547806,61.2399902,0.0000000,89.9945068); //object(vgncarshade1) (566)
	CreateDynamicObject(3458,679.6078491,7417.1684570,55.6600380,67.2399902,0.0000000,89.9945068); //object(vgncarshade1) (567)
	CreateDynamicObject(3458,677.8411865,7413.0014648,60.5768547,73.2399902,0.0000000,89.9945068); //object(vgncarshade1) (568)
	CreateDynamicObject(3458,676.5980835,7408.8354492,65.6513672,79.2399902,0.0000000,89.9945068); //object(vgncarshade1) (570)
	CreateDynamicObject(3458,675.8922729,7404.6689453,70.8279724,85.2399902,0.0000000,89.9945068); //object(vgncarshade1) (572)
	CreateDynamicObject(3458,675.7313843,7400.5019531,76.0499573,91.2399902,0.0000000,89.9945068); //object(vgncarshade1) (573)
	CreateDynamicObject(3458,676.1173096,7396.3354492,81.2601089,97.2399902,0.0000000,89.9945068); //object(vgncarshade1) (574)
	CreateDynamicObject(3458,677.0455933,7392.1689453,86.4013367,103.2399902,0.0000000,89.9945068); //object(vgncarshade1) (575)
	CreateDynamicObject(3458,678.5063477,7388.0014648,91.4173279,109.2399902,0.0000000,89.9945068); //object(vgncarshade1) (576)
	CreateDynamicObject(3458,680.4832764,7383.8349609,96.2531128,115.2399902,0.0000000,89.9945068); //object(vgncarshade1) (579)
	CreateDynamicObject(3458,682.9549561,7379.6679688,100.8557205,121.2399902,0.0000000,89.9945068); //object(vgncarshade1) (609)
	CreateDynamicObject(3458,685.8941040,7375.5009766,105.1747055,127.2399902,0.0000000,89.9945068); //object(vgncarshade1) (610)
	CreateDynamicObject(3458,689.2686157,7371.3339844,109.1627579,133.2399902,0.0000000,89.9945068); //object(vgncarshade1) (640)
	CreateDynamicObject(3458,693.0416260,7367.1669922,112.7761993,139.2399902,0.0000000,89.9945068); //object(vgncarshade1) (653)
	CreateDynamicObject(3458,697.1715088,7363.0000000,115.9754105,145.2399902,0.0000000,89.9945068); //object(vgncarshade1) (654)
	CreateDynamicObject(3458,701.6132812,7358.8330078,118.7253723,151.2399902,0.0000000,89.9945068); //object(vgncarshade1) (655)
	CreateDynamicObject(3458,706.3181152,7354.6660156,120.9959335,157.2399902,0.0000000,89.9945068); //object(vgncarshade1) (656)
	CreateDynamicObject(3458,711.2345581,7350.4985352,122.7622147,163.2399902,0.0000000,89.9945068); //object(vgncarshade1) (657)
	CreateDynamicObject(3458,716.3086548,7346.3315430,124.0048828,169.2399902,0.0000000,89.9945068); //object(vgncarshade1) (658)
	CreateDynamicObject(3458,721.4849243,7342.1645508,124.7103119,175.2399902,0.0000000,89.9945068); //object(vgncarshade1) (659)
	CreateDynamicObject(3458,726.7064819,7337.9970703,124.8707657,181.2399902,0.0000000,89.9945068); //object(vgncarshade1) (661)
	CreateDynamicObject(3458,731.9162598,7333.8300781,124.4845047,187.2399902,0.0000000,89.9945068); //object(vgncarshade1) (662)
	CreateDynamicObject(3458,737.0570679,7329.6630859,123.5557480,193.2399902,0.0000000,89.9945068); //object(vgncarshade1) (663)
	CreateDynamicObject(3458,742.0726318,7325.4956055,122.0946732,199.2399902,0.0000000,89.9945068); //object(vgncarshade1) (664)
	CreateDynamicObject(3458,746.9080200,7321.3286133,120.1172867,205.2399902,0.0000000,89.9945068); //object(vgncarshade1) (665)
	CreateDynamicObject(3458,751.5101929,7317.1616211,117.6452560,211.2399902,0.0000000,89.9945068); //object(vgncarshade1) (666)
	CreateDynamicObject(3458,755.8287964,7312.9941406,114.7056656,217.2399902,0.0000000,89.9945068); //object(vgncarshade1) (667)
	CreateDynamicObject(3458,759.8164673,7308.8271484,111.3307190,223.2399902,0.0000000,89.9945068); //object(vgncarshade1) (668)
	CreateDynamicObject(3458,763.4295654,7304.6606445,107.5573883,229.2399902,0.0000000,89.9945068); //object(vgncarshade1) (669)
	CreateDynamicObject(3458,766.6282959,7300.4931641,103.4270325,235.2399902,0.0000000,89.9945068); //object(vgncarshade1) (670)
	CreateDynamicObject(3458,769.3779297,7296.3261719,98.9848938,241.2399902,0.0000000,89.9945068); //object(vgncarshade1) (671)
	CreateDynamicObject(3458,771.6480713,7292.1596680,94.2796478,247.2399902,0.0000000,89.9945068); //object(vgncarshade1) (672)
	CreateDynamicObject(3458,773.4139404,7287.9926758,89.3628082,253.2399902,0.0000000,89.9945068); //object(vgncarshade1) (673)
	CreateDynamicObject(3458,774.6561890,7283.8256836,84.2882996,259.2399902,0.0000000,89.9945068); //object(vgncarshade1) (674)
	CreateDynamicObject(3458,775.3612061,7279.6591797,79.1117020,265.2399902,0.0000000,89.9945068); //object(vgncarshade1) (675)
	CreateDynamicObject(3458,775.5213013,7275.4921875,73.8897247,271.2399902,0.0000000,89.9945068); //object(vgncarshade1) (676)
	CreateDynamicObject(3458,775.1345825,7271.3256836,68.6795578,277.2399902,0.0000000,89.9945068); //object(vgncarshade1) (677)
	CreateDynamicObject(3458,774.2055054,7267.1591797,63.5383301,283.2399902,0.0000000,89.9945068); //object(vgncarshade1) (678)
	CreateDynamicObject(3458,772.7439575,7262.9926758,58.5223465,289.2399902,0.0000000,89.9945068); //object(vgncarshade1) (679)
	CreateDynamicObject(3458,770.7662354,7258.8261719,53.6865692,295.2399902,0.0000000,89.9945068); //object(vgncarshade1) (680)
	CreateDynamicObject(3458,768.2937622,7254.6601562,49.0839500,301.2399902,0.0000000,89.9945068); //object(vgncarshade1) (681)
	CreateDynamicObject(3458,765.3538208,7250.4931641,44.7649689,307.2399902,0.0000000,89.9945068); //object(vgncarshade1) (682)
	CreateDynamicObject(3458,761.9784546,7246.3271484,40.7769127,313.2399902,0.0000000,89.9945068); //object(vgncarshade1) (683)
	CreateDynamicObject(3458,758.2047119,7242.1611328,37.1634827,319.2399902,0.0000000,89.9945068); //object(vgncarshade1) (684)
	CreateDynamicObject(3458,800.5574341,7514.4042969,77.8556747,0.0000000,0.0000000,89.9945068); //object(vgncarshade1) (693)
	CreateDynamicObject(8558,786.8480225,7670.4252930,77.4367599,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (628)
	CreateDynamicObject(8558,1232.8281250,8044.7006836,66.9317017,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (629)
	CreateDynamicObject(8558,754.0732422,7237.9941406,33.9642487,325.2392578,0.0000000,89.9945068); //object(vgshseing28) (669)
	CreateDynamicObject(8558,749.7536621,7234.8696289,31.2114067,329.7392578,0.0000000,89.9945068); //object(vgshseing28) (182)
	CreateDynamicObject(8558,745.2313232,7231.7446289,28.8059387,334.2392578,0.0000000,89.9945068); //object(vgshseing28) (183)
	CreateDynamicObject(8558,740.5342407,7228.6201172,26.7626762,338.7392578,0.0000000,89.9945068); //object(vgshseing28) (184)
	CreateDynamicObject(8558,735.6914062,7225.4956055,25.0942268,343.2392578,0.0000000,89.9945068); //object(vgshseing28) (185)
	CreateDynamicObject(8558,730.7324829,7222.3710938,23.8108597,347.7392578,0.0000000,89.9945068); //object(vgshseing28) (186)
	CreateDynamicObject(8558,725.6882935,7219.2465820,22.9204941,352.2392578,0.0000000,89.9945068); //object(vgshseing28) (187)
	CreateDynamicObject(8558,720.5896606,7216.1220703,22.4286118,356.7392578,0.0000000,89.9945068); //object(vgshseing28) (188)
	CreateDynamicObject(8558,715.4682007,7212.9975586,22.3382645,361.2392578,0.0000000,89.9945068); //object(vgshseing28) (189)
	CreateDynamicObject(8558,710.3554077,7209.8730469,22.6499939,365.7392578,0.0000000,89.9945068); //object(vgshseing28) (190)
	CreateDynamicObject(8558,705.2828369,7206.7485352,23.3618851,370.2392578,0.0000000,89.9945068); //object(vgshseing28) (193)
	CreateDynamicObject(8558,700.2817383,7203.6240234,24.4695435,374.7392578,0.0000000,89.9945068); //object(vgshseing28) (194)
	CreateDynamicObject(8558,695.3829956,7200.4995117,25.9661446,379.2392578,0.0000000,89.9945068); //object(vgshseing28) (195)
	CreateDynamicObject(8558,690.6162109,7197.3750000,27.8424606,23.7359619,0.0000000,89.9945068); //object(vgshseing28) (196)
	CreateDynamicObject(8558,686.0124512,7194.2504883,30.0869217,388.2392578,0.0000000,89.9945068); //object(vgshseing28) (197)
	CreateDynamicObject(8558,681.5983887,7191.1259766,32.6856918,392.7392578,0.0000000,89.9945068); //object(vgshseing28) (208)
	CreateDynamicObject(8558,677.4019165,7188.0014648,35.6227493,397.2392578,0.0000000,89.9945068); //object(vgshseing28) (210)
	CreateDynamicObject(8558,673.4487915,7184.8769531,38.8799820,401.7392578,0.0000000,89.9945068); //object(vgshseing28) (211)
	CreateDynamicObject(8558,669.7633667,7181.7519531,42.4373131,406.2392578,0.0000000,89.9945068); //object(vgshseing28) (212)
	CreateDynamicObject(8558,666.3684692,7178.6274414,46.2727852,410.7392578,0.0000000,89.9945068); //object(vgshseing28) (213)
	CreateDynamicObject(8558,663.2849121,7175.5029297,50.3627930,415.2392578,0.0000000,89.9945068); //object(vgshseing28) (356)
	CreateDynamicObject(8558,660.5317383,7172.3779297,54.6821060,419.7392578,0.0000000,89.9945068); //object(vgshseing28) (357)
	CreateDynamicObject(8558,658.1259766,7169.2529297,59.2040863,64.2370605,0.0000000,89.9945068); //object(vgshseing28) (385)
	CreateDynamicObject(8558,656.0820312,7166.1279297,63.9008598,68.7359619,0.0000000,89.9945068); //object(vgshseing28) (388)
	CreateDynamicObject(3458,654.4130859,7163.0029297,68.7434692,73.2348633,0.0000000,89.9945068); //object(vgncarshade1) (50)
	CreateDynamicObject(3458,653.1290283,7159.8784180,73.7019882,77.7348633,0.0000000,89.9945068); //object(vgncarshade1) (51)
	CreateDynamicObject(3458,652.2373047,7156.7529297,78.7459488,82.2326660,0.0000000,89.9945068); //object(vgncarshade1) (52)
	CreateDynamicObject(3458,651.8906250,7153.5927734,83.8442459,90.0000000,0.0000000,89.9945068); //object(vgncarshade1) (54)
	CreateDynamicObject(8558,651.8721924,7130.8632812,89.6008606,0.0000000,90.0000000,0.0000000); //object(vgshseing28) (390)
	CreateDynamicObject(8558,651.8720703,7130.8632812,89.6008606,0.0000000,90.0000000,0.0000000); //object(vgshseing28) (665)
	CreateDynamicObject(8558,651.9522705,7125.7675781,89.6008606,0.0000000,90.0000000,1.8000000); //object(vgshseing28) (391)
	CreateDynamicObject(8558,652.1923218,7120.6767578,89.6008606,0.0000000,90.0000000,3.5999999); //object(vgshseing28) (392)
	CreateDynamicObject(8558,652.5921631,7115.5961914,89.6008606,0.0000000,90.0000000,5.3999996); //object(vgshseing28) (509)
	CreateDynamicObject(8558,653.1514282,7110.5307617,89.6008606,0.0000000,90.0000000,7.1999998); //object(vgshseing28) (594)
	CreateDynamicObject(8558,653.8695068,7105.4848633,89.6008606,0.0000000,90.0000000,9.0000000); //object(vgshseing28) (595)
	CreateDynamicObject(8558,654.7457275,7100.4648438,89.6008606,0.0000000,90.0000000,10.8000002); //object(vgshseing28) (596)
	CreateDynamicObject(8558,655.7791748,7095.4741211,89.6008606,0.0000000,90.0000000,12.6000004); //object(vgshseing28) (597)
	CreateDynamicObject(8558,656.9689331,7090.5185547,89.6008606,0.0000000,90.0000000,14.4000006); //object(vgshseing28) (619)
	CreateDynamicObject(8558,658.3137207,7085.6030273,89.6008606,0.0000000,90.0000000,16.2000008); //object(vgshseing28) (620)
	CreateDynamicObject(8558,659.8122559,7080.7319336,89.6008606,0.0000000,90.0000000,18.0000000); //object(vgshseing28) (621)
	CreateDynamicObject(8558,661.4630127,7075.9101562,89.6008606,0.0000000,90.0000000,19.7999992); //object(vgshseing28) (622)
	CreateDynamicObject(8558,663.2644653,7071.1430664,89.6008606,0.0000000,90.0000000,21.5999985); //object(vgshseing28) (623)
	CreateDynamicObject(8558,665.2147827,7066.4345703,89.6008606,0.0000000,90.0000000,23.3999977); //object(vgshseing28) (624)
	CreateDynamicObject(8558,667.3120117,7061.7895508,89.6008606,0.0000000,90.0000000,25.1999969); //object(vgshseing28) (625)
	CreateDynamicObject(8558,669.5540771,7057.2128906,89.6008606,0.0000000,90.0000000,26.9999962); //object(vgshseing28) (626)
	CreateDynamicObject(8558,671.9388428,7052.7089844,89.6008606,0.0000000,90.0000000,28.7999954); //object(vgshseing28) (627)
	CreateDynamicObject(8558,674.4638672,7048.2822266,89.6008606,0.0000000,90.0000000,30.5999947); //object(vgshseing28) (630)
	CreateDynamicObject(8558,677.1267090,7043.9365234,89.6008606,0.0000000,90.0000000,32.3999939); //object(vgshseing28) (631)
	CreateDynamicObject(8558,679.9246826,7039.6772461,89.6008606,0.0000000,90.0000000,34.1999931); //object(vgshseing28) (632)
	CreateDynamicObject(8558,682.8551025,7035.5078125,89.6008606,0.0000000,90.0000000,35.9999924); //object(vgshseing28) (633)
	CreateDynamicObject(8558,685.9151001,7031.4321289,89.6008606,0.0000000,90.0000000,37.7999916); //object(vgshseing28) (634)
	CreateDynamicObject(8558,689.1015625,7027.4545898,89.6008606,0.0000000,90.0000000,39.5999908); //object(vgshseing28) (635)
	CreateDynamicObject(8558,692.4113770,7023.5795898,89.6008606,0.0000000,90.0000000,41.3999901); //object(vgshseing28) (636)
	CreateDynamicObject(8558,695.8413086,7019.8100586,89.6008606,0.0000000,90.0000000,43.1999893); //object(vgshseing28) (637)
	CreateDynamicObject(8558,699.3878784,7016.1503906,89.6008606,0.0000000,90.0000000,44.9999886); //object(vgshseing28) (638)
	CreateDynamicObject(8558,703.0477295,7012.6035156,89.6008606,0.0000000,90.0000000,46.7999878); //object(vgshseing28) (639)
	CreateDynamicObject(8558,706.8171387,7009.1738281,89.6008606,0.0000000,90.0000000,48.5999870); //object(vgshseing28) (640)
	CreateDynamicObject(8558,710.6924438,7005.8637695,89.6008606,0.0000000,90.0000000,50.3999863); //object(vgshseing28) (641)
	CreateDynamicObject(8558,714.6697998,7002.6772461,89.6008606,0.0000000,90.0000000,52.1999855); //object(vgshseing28) (642)
	CreateDynamicObject(8558,718.7453003,6999.6171875,89.6008606,0.0000000,90.0000000,53.9999847); //object(vgshseing28) (643)
	CreateDynamicObject(8558,722.9148560,6996.6870117,89.6008606,0.0000000,90.0000000,55.7999840); //object(vgshseing28) (644)
	CreateDynamicObject(8558,727.1744385,6993.8891602,89.6008606,0.0000000,90.0000000,57.5999832); //object(vgshseing28) (645)
	CreateDynamicObject(8558,731.5197754,6991.2260742,89.6008606,0.0000000,90.0000000,59.3999825); //object(vgshseing28) (646)
	CreateDynamicObject(8558,735.9466553,6988.7011719,89.6008606,0.0000000,90.0000000,61.1999817); //object(vgshseing28) (647)
	CreateDynamicObject(8558,740.4506226,6986.3164062,89.6008606,0.0000000,90.0000000,62.9999809); //object(vgshseing28) (648)
	CreateDynamicObject(8558,745.0272827,6984.0742188,89.6008606,0.0000000,90.0000000,64.7999802); //object(vgshseing28) (649)
	CreateDynamicObject(8558,749.6721802,6981.9770508,89.6008606,0.0000000,90.0000000,66.5999832); //object(vgshseing28) (650)
	CreateDynamicObject(8558,754.3806152,6980.0268555,89.6008606,0.0000000,90.0000000,68.3999863); //object(vgshseing28) (651)
	CreateDynamicObject(8558,759.1479492,6978.2250977,89.6008606,0.0000000,90.0000000,70.1999893); //object(vgshseing28) (652)
	CreateDynamicObject(8558,763.9695435,6976.5747070,89.6008606,0.0000000,90.0000000,71.9999924); //object(vgshseing28) (653)
	CreateDynamicObject(8558,768.8406372,6975.0761719,89.6008606,0.0000000,90.0000000,73.7999954); //object(vgshseing28) (654)
	CreateDynamicObject(8558,773.7563477,6973.7309570,89.6008606,0.0000000,90.0000000,75.5999985); //object(vgshseing28) (655)
	CreateDynamicObject(8558,778.7119141,6972.5415039,89.6008606,0.0000000,90.0000000,77.4000015); //object(vgshseing28) (656)
	CreateDynamicObject(8558,783.7023926,6971.5078125,89.6008606,0.0000000,90.0000000,79.2000046); //object(vgshseing28) (657)
	CreateDynamicObject(8558,788.7229004,6970.6318359,89.6008606,0.0000000,90.0000000,81.0000000); //object(vgshseing28) (658)
	CreateDynamicObject(8558,793.7684326,6969.9135742,89.6008606,0.0000000,90.0000000,82.8000107); //object(vgshseing28) (659)
	CreateDynamicObject(8558,798.8339844,6969.3544922,89.6008606,0.0000000,90.0000000,84.6000137); //object(vgshseing28) (660)
	CreateDynamicObject(8558,803.9146729,6968.9545898,89.6008606,0.0000000,90.0000000,86.4000168); //object(vgshseing28) (661)
	CreateDynamicObject(8558,809.0053711,6968.7143555,89.6008606,0.0000000,90.0000000,88.2000198); //object(vgshseing28) (662)
	CreateDynamicObject(8558,814.1005859,6968.6337891,89.6008606,0.0000000,90.0000000,90.0000000); //object(vgshseing28) (663)
	CreateDynamicObject(3458,833.5354004,6968.5908203,80.8442459,270.0000000,180.0000000,180.0000000); //object(vgncarshade1) (68)
	CreateDynamicObject(3458,833.5351562,6968.5908203,75.7442856,270.0000000,179.9945068,179.9945068); //object(vgncarshade1) (198)
	CreateDynamicObject(3458,833.5351562,6968.5908203,70.6842804,270.0000000,180.0000000,180.0000000); //object(vgncarshade1) (729)
	CreateDynamicObject(3458,833.5351562,6968.5908203,70.6842804,270.0000000,0.0000000,0.0000000); //object(vgncarshade1) (756)
	CreateDynamicObject(3458,836.8684692,6968.8642578,65.4669952,276.0000000,0.0000000,0.0000000); //object(vgncarshade1) (740)
	CreateDynamicObject(3458,840.2011719,6969.6816406,60.3068733,281.9970703,0.0000000,0.0000000); //object(vgncarshade1) (741)
	CreateDynamicObject(3458,843.5351562,6971.0336914,55.2604256,288.0000000,0.0000000,0.0000000); //object(vgncarshade1) (742)
	CreateDynamicObject(3458,846.8684692,6972.9057617,50.3829880,294.0000000,0.0000000,0.0000000); //object(vgncarshade1) (743)
	CreateDynamicObject(3458,850.2018433,6975.2778320,45.7279739,300.0000000,0.0000000,0.0000000); //object(vgncarshade1) (744)
	CreateDynamicObject(3458,853.5351562,6978.1230469,41.3463860,306.0000000,0.0000000,0.0000000); //object(vgncarshade1) (745)
	CreateDynamicObject(3458,856.8684692,6981.4111328,37.2862129,312.0000000,0.0000000,0.0000000); //object(vgncarshade1) (746)
	CreateDynamicObject(3458,860.2018433,6985.1054688,33.5919724,318.0000000,0.0000000,0.0000000); //object(vgncarshade1) (747)
	CreateDynamicObject(3458,863.5351562,6989.1655273,30.3041229,324.0000000,0.0000000,0.0000000); //object(vgncarshade1) (748)
	CreateDynamicObject(3458,866.8684692,6993.5468750,27.4586868,330.0000000,0.0000000,0.0000000); //object(vgncarshade1) (749)
	CreateDynamicObject(3458,870.2018433,6998.2021484,25.0868301,336.0000000,0.0000000,0.0000000); //object(vgncarshade1) (750)
	CreateDynamicObject(3458,873.5351562,7003.0795898,23.2145576,342.0000000,0.0000000,0.0000000); //object(vgncarshade1) (751)
	CreateDynamicObject(3458,876.8684692,7008.1259766,21.8623695,348.0000000,0.0000000,0.0000000); //object(vgncarshade1) (752)
	CreateDynamicObject(3458,880.2011719,7013.2861328,21.0450859,353.9959717,0.0000000,0.0000000); //object(vgncarshade1) (753)
	CreateDynamicObject(8558,883.5351562,7018.5029297,20.7716599,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (664)
	CreateDynamicObject(8558,883.5351562,7023.7202148,21.0450859,6.0000000,0.0000000,0.0000000); //object(vgshseing28) (666)
	CreateDynamicObject(8558,883.5351562,7028.8803711,21.8623619,12.0000000,0.0000000,0.0000000); //object(vgshseing28) (667)
	CreateDynamicObject(8558,883.5351562,7033.9267578,23.2145386,18.0000000,0.0000000,0.0000000); //object(vgshseing28) (668)
	CreateDynamicObject(8558,883.5351562,7038.8041992,25.0867996,24.0000000,0.0000000,0.0000000); //object(vgshseing28) (670)
	CreateDynamicObject(8558,883.5351562,7043.4589844,27.4586334,30.0000000,0.0000000,0.0000000); //object(vgshseing28) (671)
	CreateDynamicObject(8558,883.5351562,7047.8408203,30.3040504,36.0000000,0.0000000,0.0000000); //object(vgshseing28) (672)
	CreateDynamicObject(8558,883.5351562,7051.9008789,33.5918770,42.0000000,0.0000000,0.0000000); //object(vgshseing28) (673)
	CreateDynamicObject(8558,883.5351562,7055.5947266,37.2860947,48.0000000,0.0000000,0.0000000); //object(vgshseing28) (674)
	CreateDynamicObject(8558,883.5351562,7058.8828125,41.3462219,54.0000000,0.0000000,0.0000000); //object(vgshseing28) (675)
	CreateDynamicObject(8558,883.5351562,7061.7280273,45.7277832,60.0000000,0.0000000,0.0000000); //object(vgshseing28) (676)
	CreateDynamicObject(8558,883.5351562,7064.1000977,50.3827629,66.0000000,0.0000000,0.0000000); //object(vgshseing28) (677)
	CreateDynamicObject(8558,883.5351562,7065.9721680,55.2601700,72.0000000,0.0000000,0.0000000); //object(vgshseing28) (678)
	CreateDynamicObject(8558,883.5351562,7067.3247070,60.3065643,78.0000000,0.0000000,0.0000000); //object(vgshseing28) (679)
	CreateDynamicObject(8558,883.5351562,7068.1416016,65.4666519,84.0000000,0.0000000,0.0000000); //object(vgshseing28) (680)
	CreateDynamicObject(8558,883.5351562,7068.4150391,70.6838989,90.0000000,0.0000000,0.0000000); //object(vgshseing28) (681)
	CreateDynamicObject(8558,883.5351562,7068.1416016,75.9011536,96.0000000,0.0000000,0.0000000); //object(vgshseing28) (682)
	CreateDynamicObject(8558,883.5351562,7067.3242188,81.0612411,101.9971008,0.0000000,0.0000000); //object(vgshseing28) (683)
	CreateDynamicObject(8558,883.5351562,7065.9721680,86.1076355,108.0000000,0.0000000,0.0000000); //object(vgshseing28) (684)
	CreateDynamicObject(8558,883.5351562,7064.1000977,90.9850388,114.0000000,0.0000000,0.0000000); //object(vgshseing28) (685)
	CreateDynamicObject(8558,883.5351562,7061.7280273,95.6400223,120.0000000,0.0000000,0.0000000); //object(vgshseing28) (686)
	CreateDynamicObject(8558,883.5351562,7058.8828125,100.0215759,126.0000000,0.0000000,0.0000000); //object(vgshseing28) (687)
	CreateDynamicObject(8558,883.5351562,7055.5947266,104.0817108,132.0000000,0.0000000,0.0000000); //object(vgshseing28) (688)
	CreateDynamicObject(8558,883.5351562,7051.9008789,107.7759247,138.0000000,0.0000000,0.0000000); //object(vgshseing28) (690)
	CreateDynamicObject(8558,883.5351562,7047.8408203,111.0637512,144.0000000,0.0000000,0.0000000); //object(vgshseing28) (691)
	CreateDynamicObject(8558,883.5351562,7043.4589844,113.9091644,150.0000000,0.0000000,0.0000000); //object(vgshseing28) (692)
	CreateDynamicObject(8558,883.5351562,7038.8041992,116.2809982,156.0000000,0.0000000,0.0000000); //object(vgshseing28) (693)
	CreateDynamicObject(8558,883.5351562,7033.9267578,118.1532593,162.0000000,0.0000000,0.0000000); //object(vgshseing28) (694)
	CreateDynamicObject(8558,883.5351562,7028.8803711,119.5054398,168.0000000,0.0000000,0.0000000); //object(vgshseing28) (695)
	CreateDynamicObject(3458,883.2597656,6957.0439453,89.5016479,21.2500000,0.0000000,0.0000000); //object(vgncarshade1) (757)
	CreateDynamicObject(3458,883.2597656,6952.2558594,87.6828003,20.3466797,0.0000000,0.0000000); //object(vgncarshade1) (758)
	CreateDynamicObject(3458,883.2597656,6947.4394531,85.9393616,19.4500008,0.0000000,0.0000000); //object(vgncarshade1) (759)
	CreateDynamicObject(3458,883.2597656,6942.5966797,84.2718201,18.5500011,0.0000000,0.0000000); //object(vgncarshade1) (760)
	CreateDynamicObject(3458,883.2597656,6937.7280273,82.6805115,17.6500015,0.0000000,0.0000000); //object(vgncarshade1) (761)
	CreateDynamicObject(3458,883.2597656,6932.8349609,81.1658936,16.7500019,0.0000000,0.0000000); //object(vgncarshade1) (762)
	CreateDynamicObject(3458,883.2597656,6927.9189453,79.7283325,15.8500023,0.0000000,0.0000000); //object(vgncarshade1) (763)
	CreateDynamicObject(3458,883.2597656,6922.9809570,78.3681641,14.9500027,0.0000000,0.0000000); //object(vgncarshade1) (764)
	CreateDynamicObject(3458,883.2597656,6918.0219727,77.0856934,14.0500031,0.0000000,0.0000000); //object(vgncarshade1) (765)
	CreateDynamicObject(3458,883.2597656,6913.0434570,75.8813171,13.1500034,0.0000000,0.0000000); //object(vgncarshade1) (766)
	CreateDynamicObject(3458,883.2597656,6908.0468750,74.7552490,12.2500038,0.0000000,0.0000000); //object(vgncarshade1) (767)
	CreateDynamicObject(3458,883.2597656,6903.0332031,73.7078247,11.3500042,0.0000000,0.0000000); //object(vgncarshade1) (768)
	CreateDynamicObject(3458,883.2597656,6898.0034180,72.7392578,10.4500046,0.0000000,0.0000000); //object(vgncarshade1) (769)
	CreateDynamicObject(3458,883.2597656,6892.9589844,71.8498535,9.5471191,0.0000000,0.0000000); //object(vgncarshade1) (770)
	CreateDynamicObject(8558,883.2597656,6887.9013672,71.0397644,8.6407471,0.0000000,0.0000000); //object(vgshseing28) (735)
	CreateDynamicObject(8558,883.2597656,6882.8310547,70.3095703,7.7453613,0.0000000,0.0000000); //object(vgshseing28) (737)
	CreateDynamicObject(8558,883.2597656,6877.7509766,69.6590881,6.8462400,0.0000000,0.0000000); //object(vgshseing28) (738)
	CreateDynamicObject(8558,883.2597656,6872.6611328,69.0884705,5.9462399,0.0000000,0.0000000); //object(vgshseing28) (739)
	CreateDynamicObject(8558,883.2597656,6867.5625000,68.5978699,5.0462399,0.0000000,0.0000000); //object(vgshseing28) (740)
	CreateDynamicObject(8558,883.2597656,6862.4570312,68.1874390,4.1462398,0.0000000,0.0000000); //object(vgshseing28) (741)
	CreateDynamicObject(8558,883.2597656,6857.3457031,67.8572388,3.2462397,0.0000000,0.0000000); //object(vgshseing28) (742)
	CreateDynamicObject(8558,883.2597656,6852.2299805,67.6073608,2.3462396,0.0000000,0.0000000); //object(vgshseing28) (743)
	CreateDynamicObject(8558,883.2597656,6847.1108398,67.4378967,1.4462396,0.0000000,0.0000000); //object(vgshseing28) (744)
	CreateDynamicObject(8558,883.2597656,6841.9897461,67.3488464,0.5462396,0.0000000,0.0000000); //object(vgshseing28) (745)
	CreateDynamicObject(8558,883.2597656,6836.8676758,67.3402405,-0.3537604,0.0000000,0.0000000); //object(vgshseing28) (746)
	CreateDynamicObject(8558,883.2597656,6831.7460938,67.4120789,-1.2537603,0.0000000,0.0000000); //object(vgshseing28) (747)
	CreateDynamicObject(8558,883.2597656,6826.6264648,67.5643616,-2.1537604,0.0000000,0.0000000); //object(vgshseing28) (748)
	CreateDynamicObject(8558,883.2597656,6821.5097656,67.7970581,-3.0537605,0.0000000,0.0000000); //object(vgshseing28) (749)
	CreateDynamicObject(8558,883.2597656,6816.3974609,68.1100769,-3.9537606,0.0000000,0.0000000); //object(vgshseing28) (750)
	CreateDynamicObject(8558,883.2597656,6811.2905273,68.5033569,-4.8537607,0.0000000,0.0000000); //object(vgshseing28) (751)
	CreateDynamicObject(8558,883.2597656,6806.1904297,68.9768066,-5.7537608,0.0000000,0.0000000); //object(vgshseing28) (752)
	CreateDynamicObject(8558,883.2597656,6801.0986328,69.5303345,-6.6537609,0.0000000,0.0000000); //object(vgshseing28) (753)
	CreateDynamicObject(8558,883.2597656,6796.0156250,70.1637268,-7.5537610,0.0000000,0.0000000); //object(vgshseing28) (754)
	CreateDynamicObject(8558,883.2597656,6790.9438477,70.8769226,-8.4537611,0.0000000,0.0000000); //object(vgshseing28) (755)
	CreateDynamicObject(8558,883.2597656,6785.8833008,71.6696777,-9.3537607,0.0000000,0.0000000); //object(vgshseing28) (756)
	CreateDynamicObject(8558,883.2597656,6780.8364258,72.5418091,-10.2537603,0.0000000,0.0000000); //object(vgshseing28) (757)
	CreateDynamicObject(8558,883.2597656,6775.8027344,73.4931030,348.8433838,0.0000000,0.0000000); //object(vgshseing28) (758)
	CreateDynamicObject(8558,883.2597656,6770.7861328,74.5233459,-12.0537596,0.0000000,0.0000000); //object(vgshseing28) (759)
	CreateDynamicObject(3458,883.5576172,7027.5966797,121.1000061,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (782)
	CreateDynamicObject(8558,833.5468750,6967.5498047,81.9008942,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (761)
	CreateDynamicObject(3458,815.1268921,6967.5942383,89.6192322,0.0000000,90.0000000,0.0000000); //object(vgncarshade1) (783)
	CreateDynamicObject(8558,883.2479248,6957.3750000,89.2897644,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (762)
	CreateDynamicObject(8558,883.2470703,6957.3750000,84.1897888,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (763)
	CreateDynamicObject(3458,883.2597656,6765.7851562,75.6322937,347.0416260,0.0000000,0.0000000); //object(vgncarshade1) (809)
	CreateDynamicObject(3458,883.2597656,6760.8027344,76.8200378,346.1416321,0.0000000,0.0000000); //object(vgncarshade1) (784)
	CreateDynamicObject(3458,883.2597656,6755.8393555,78.0859070,345.2416382,0.0000000,0.0000000); //object(vgncarshade1) (785)
	CreateDynamicObject(3458,883.2597656,6750.8969727,79.4295654,344.3416443,0.0000000,0.0000000); //object(vgncarshade1) (786)
	CreateDynamicObject(3458,883.2597656,6745.9760742,80.8506775,343.4416504,0.0000000,0.0000000); //object(vgncarshade1) (787)
	CreateDynamicObject(3458,883.2597656,6741.0781250,82.3488770,342.5416565,0.0000000,0.0000000); //object(vgncarshade1) (788)
	CreateDynamicObject(3458,883.2597656,6736.2041016,83.9238586,341.6416626,0.0000000,0.0000000); //object(vgncarshade1) (789)
	CreateDynamicObject(3458,883.2597656,6731.3559570,85.5752258,340.7416687,0.0000000,0.0000000); //object(vgncarshade1) (790)
	CreateDynamicObject(3458,883.2597656,6726.5336914,87.3025208,339.8416748,0.0000000,0.0000000); //object(vgncarshade1) (791)
	CreateDynamicObject(3458,883.2597656,6721.7397461,89.1053162,338.9416809,0.0000000,0.0000000); //object(vgncarshade1) (792)
	CreateDynamicObject(3458,883.2597656,6716.9741211,90.9832153,338.0416870,0.0000000,0.0000000); //object(vgncarshade1) (793)
	CreateDynamicObject(3458,883.2597656,6712.2392578,92.9357605,337.1416931,0.0000000,0.0000000); //object(vgncarshade1) (794)
	CreateDynamicObject(3458,883.2597656,6707.5351562,94.9624329,336.2416992,0.0000000,0.0000000); //object(vgncarshade1) (795)
	CreateDynamicObject(3458,883.2597656,6702.8637695,97.0626831,335.3417053,0.0000000,0.0000000); //object(vgncarshade1) (796)
	CreateDynamicObject(3458,883.2597656,6698.2255859,99.2360840,334.4348145,0.0000000,0.0000000); //object(vgncarshade1) (797)
	CreateDynamicObject(8558,883.2802734,6694.3007812,99.8097153,8.6352539,0.0000000,0.0000000); //object(vgshseing28) (764)
	CreateDynamicObject(3458,883.3261719,6553.4599609,94.4523315,22.9943848,0.0000000,0.0000000); //object(vgncarshade1) (721)
	CreateDynamicObject(3458,883.3261719,6548.5512695,92.6654663,17.0000000,0.0000000,0.0000000); //object(vgncarshade1) (722)
	CreateDynamicObject(3458,883.3261719,6543.4819336,91.4015503,11.0000000,0.0000000,0.0000000); //object(vgncarshade1) (723)
	CreateDynamicObject(3458,883.3261719,6538.3081055,90.6744537,5.0000000,0.0000000,0.0000000); //object(vgncarshade1) (724)
	CreateDynamicObject(3458,883.3261719,6533.0869141,90.4921265,-1.0000000,0.0000000,0.0000000); //object(vgncarshade1) (725)
	CreateDynamicObject(3458,883.3261719,6527.8750000,90.8565598,-7.0000000,0.0000000,0.0000000); //object(vgncarshade1) (726)
	CreateDynamicObject(3458,883.3261719,6522.7299805,91.7637787,-13.0000000,0.0000000,0.0000000); //object(vgncarshade1) (727)
	CreateDynamicObject(3458,883.3261719,6517.7080078,93.2038269,-19.0000000,0.0000000,0.0000000); //object(vgncarshade1) (728)
	CreateDynamicObject(3458,883.3261719,6512.8642578,95.1609421,-25.0000000,0.0000000,0.0000000); //object(vgncarshade1) (730)
	CreateDynamicObject(3458,883.3261719,6508.2509766,97.6136780,-31.0000000,0.0000000,0.0000000); //object(vgncarshade1) (731)
	CreateDynamicObject(3458,883.3261719,6503.9199219,100.5351486,322.9980469,0.0000000,0.0000000); //object(vgncarshade1) (732)
	CreateDynamicObject(3458,883.3261719,6499.9174805,103.8933563,-43.0000000,0.0000000,0.0000000); //object(vgncarshade1) (733)
	CreateDynamicObject(3458,883.3261719,6496.2885742,107.6515198,-49.0000000,0.0000000,0.0000000); //object(vgncarshade1) (734)
	CreateDynamicObject(3458,883.3261719,6493.0717773,111.7684326,-55.0000000,0.0000000,0.0000000); //object(vgncarshade1) (735)
	CreateDynamicObject(3458,883.3261719,6490.3032227,116.1990280,-61.0000000,0.0000000,0.0000000); //object(vgncarshade1) (736)
	CreateDynamicObject(3458,883.3261719,6488.0131836,120.8947296,-67.0000000,0.0000000,0.0000000); //object(vgncarshade1) (737)
	CreateDynamicObject(3458,883.3261719,6486.2265625,125.8041077,-73.0000000,0.0000000,0.0000000); //object(vgncarshade1) (738)
	CreateDynamicObject(3458,883.3261719,6484.9624023,130.8733673,-79.0000000,0.0000000,0.0000000); //object(vgncarshade1) (739)
	CreateDynamicObject(3458,883.3261719,6484.2353516,136.0469666,-85.0000000,0.0000000,0.0000000); //object(vgncarshade1) (754)
	CreateDynamicObject(3458,883.3261719,6484.0532227,141.2682343,-91.0000000,0.0000000,0.0000000); //object(vgncarshade1) (755)
	CreateDynamicObject(3458,883.3261719,6484.4174805,146.4799500,-97.0000000,0.0000000,0.0000000); //object(vgncarshade1) (771)
	CreateDynamicObject(3458,883.3261719,6485.3247070,151.6250305,-103.0000000,0.0000000,0.0000000); //object(vgncarshade1) (772)
	CreateDynamicObject(3458,883.3261719,6486.7646484,156.6470947,-109.0000000,0.0000000,0.0000000); //object(vgncarshade1) (773)
	CreateDynamicObject(3458,883.3261719,6488.7216797,161.4911194,-115.0000000,0.0000000,0.0000000); //object(vgncarshade1) (774)
	CreateDynamicObject(3458,883.3261719,6491.1743164,166.1040344,-121.0000000,0.0000000,0.0000000); //object(vgncarshade1) (775)
	CreateDynamicObject(8558,883.3212891,6501.6757812,20.8402557,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (733)
	CreateDynamicObject(8558,883.3359375,6553.7109375,94.2834167,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (734)
	CreateDynamicObject(3458,883.3212891,6496.5541992,20.9207153,-1.8000000,0.0000000,0.0000000); //object(vgncarshade1) (822)
	CreateDynamicObject(3458,883.3212891,6491.4379883,21.1619873,-3.5999999,0.0000000,0.0000000); //object(vgncarshade1) (823)
	CreateDynamicObject(3458,883.3212891,6486.3320312,21.5638580,-5.3999996,0.0000000,0.0000000); //object(vgncarshade1) (824)
	CreateDynamicObject(3458,883.3212891,6481.2407227,22.1259155,-7.1999998,0.0000000,0.0000000); //object(vgncarshade1) (825)
	CreateDynamicObject(3458,883.3212891,6476.1699219,22.8476105,-9.0000000,0.0000000,0.0000000); //object(vgncarshade1) (826)
	CreateDynamicObject(3458,883.3212891,6471.1240234,23.7282410,-10.8000002,0.0000000,0.0000000); //object(vgncarshade1) (827)
	CreateDynamicObject(3458,883.3212891,6466.1083984,24.7669220,-12.6000004,0.0000000,0.0000000); //object(vgncarshade1) (828)
	CreateDynamicObject(3458,883.3212891,6461.1279297,25.9626312,-14.4000006,0.0000000,0.0000000); //object(vgncarshade1) (829)
	CreateDynamicObject(3458,883.3212891,6456.1875000,27.3141785,-16.2000008,0.0000000,0.0000000); //object(vgncarshade1) (830)
	CreateDynamicObject(3458,883.3212891,6451.2919922,28.8202667,341.9989014,0.0000000,0.0000000); //object(vgncarshade1) (831)
	CreateDynamicObject(8558,883.1162109,6312.0722656,13.8628025,14.0020447,0.0000000,0.0000000); //object(vgshseing28) (831)
	CreateDynamicObject(8558,883.1123047,6307.1240234,12.6620026,13.2385254,0.0000000,0.0000000); //object(vgshseing28) (832)
	CreateDynamicObject(8558,883.1123047,6302.1264648,11.5406189,12.0465775,0.0000000,0.0000000); //object(vgshseing28) (833)
	CreateDynamicObject(8558,883.1123047,6297.1064453,10.5241394,10.8465776,0.0000000,0.0000000); //object(vgshseing28) (834)
	CreateDynamicObject(8558,883.1123047,6292.0659180,9.6130219,9.6465778,0.0000000,0.0000000); //object(vgshseing28) (835)
	CreateDynamicObject(8558,883.1123047,6287.0078125,8.8076630,8.4465780,0.0000000,0.0000000); //object(vgshseing28) (836)
	CreateDynamicObject(8558,883.1123047,6281.9335938,8.1083984,7.2465782,0.0000000,0.0000000); //object(vgshseing28) (837)
	CreateDynamicObject(8558,883.1123047,6276.8461914,7.5155640,6.0465784,0.0000000,0.0000000); //object(vgshseing28) (838)
	CreateDynamicObject(8558,883.1123047,6271.7475586,7.0293884,4.8465786,0.0000000,0.0000000); //object(vgshseing28) (839)
	CreateDynamicObject(8558,883.1123047,6266.6396484,6.6501160,3.6465786,0.0000000,0.0000000); //object(vgshseing28) (840)
	CreateDynamicObject(8558,883.1123047,6261.5249023,6.3778992,2.4465785,0.0000000,0.0000000); //object(vgshseing28) (841)
	CreateDynamicObject(8558,883.1123047,6256.4052734,6.2128448,1.2465785,0.0000000,0.0000000); //object(vgshseing28) (842)
	CreateDynamicObject(8558,883.1123047,6251.2832031,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (843)
	CreateDynamicObject(8558,883.2838135,6490.7866211,167.4794922,30.0000000,0.0000000,180.0000000); //object(vgshseing28) (853)
	CreateDynamicObject(3458,883.1235962,6313.1523438,13.1752720,280.0000000,0.0000000,0.0000000); //object(vgncarshade1) (832)
	CreateDynamicObject(8558,883.2632446,6447.5600586,28.6327991,22.4415283,0.0000000,0.0000000); //object(vgshseing28) (854)
	CreateDynamicObject(3458,883.1034546,6246.1816406,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (833)
	CreateDynamicObject(3458,883.1165771,6241.0771484,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (835)
	CreateDynamicObject(3458,883.1296997,6235.9726562,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (836)
	CreateDynamicObject(3458,883.1428223,6230.8681641,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (837)
	CreateDynamicObject(3458,883.1559448,6225.7636719,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (838)
	CreateDynamicObject(3458,883.1690674,6220.6591797,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (839)
	CreateDynamicObject(3458,883.1821899,6215.5546875,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (840)
	CreateDynamicObject(3458,883.1953125,6210.4501953,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (841)
	CreateDynamicObject(3458,883.2084351,6205.3457031,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (842)
	CreateDynamicObject(3458,883.2215576,6200.2412109,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (844)
	CreateDynamicObject(3458,883.2346802,6195.1367188,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (845)
	CreateDynamicObject(3458,883.2478027,6190.0322266,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (846)
	CreateDynamicObject(3458,883.2609253,6184.9277344,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (847)
	CreateDynamicObject(3458,883.2740479,6179.8232422,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (848)
	CreateDynamicObject(3458,883.2871704,6174.7187500,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (849)
	CreateDynamicObject(3458,883.3002930,6169.6142578,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (850)
	CreateDynamicObject(3458,883.3134155,6164.5097656,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (851)
	CreateDynamicObject(3458,883.3265381,6159.4052734,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (852)
	CreateDynamicObject(8558,883.3388672,6154.3007812,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (855)
	CreateDynamicObject(3458,883.1679688,6581.8681641,94.2772751,90.0000000,179.9945068,179.9945068); //object(vgncarshade1) (875)
	CreateDynamicObject(8558,883.1679688,6581.6894531,89.1584244,85.9954834,0.0000000,0.0000000); //object(vgshseing28) (882)
	CreateDynamicObject(8558,883.1687622,6581.1538086,84.0645142,82.0000000,0.0000000,0.0000000); //object(vgshseing28) (883)
	CreateDynamicObject(8558,883.1687622,6580.2646484,79.0203629,78.0000000,0.0000000,0.0000000); //object(vgshseing28) (884)
	CreateDynamicObject(8558,883.1687622,6579.0253906,74.0505295,74.0000000,0.0000000,0.0000000); //object(vgshseing28) (885)
	CreateDynamicObject(8558,883.1687622,6577.4423828,69.1792450,70.0000000,0.0000000,0.0000000); //object(vgshseing28) (886)
	CreateDynamicObject(8558,883.1687622,6575.5239258,64.4302444,66.0000000,0.0000000,0.0000000); //object(vgshseing28) (887)
	CreateDynamicObject(8558,883.1687622,6573.2783203,59.8266411,62.0000000,0.0000000,0.0000000); //object(vgshseing28) (888)
	CreateDynamicObject(8558,883.1679688,6570.7177734,55.3908882,57.9968262,0.0000000,0.0000000); //object(vgshseing28) (889)
	CreateDynamicObject(8558,883.1687622,6567.8535156,51.1445847,54.0000000,0.0000000,0.0000000); //object(vgshseing28) (890)
	CreateDynamicObject(8558,883.1687622,6564.7001953,47.1084137,50.0000000,0.0000000,0.0000000); //object(vgshseing28) (891)
	CreateDynamicObject(8558,883.1687622,6561.2729492,43.3020477,46.0000000,0.0000000,0.0000000); //object(vgshseing28) (892)
	CreateDynamicObject(8558,883.1687622,6557.5883789,39.7440300,42.0000000,0.0000000,0.0000000); //object(vgshseing28) (893)
	CreateDynamicObject(8558,883.1679688,6553.6640625,36.4516907,37.9962158,0.0000000,0.0000000); //object(vgshseing28) (894)
	CreateDynamicObject(8558,883.1687622,6549.5209961,33.4410706,34.0000000,0.0000000,0.0000000); //object(vgshseing28) (895)
	CreateDynamicObject(8558,883.1687622,6545.1772461,30.7268410,30.0000000,0.0000000,0.0000000); //object(vgshseing28) (896)
	CreateDynamicObject(8558,883.1687622,6540.6547852,28.3222198,26.0000000,0.0000000,0.0000000); //object(vgshseing28) (897)
	CreateDynamicObject(8558,883.1679688,6535.9755859,26.2389297,21.9946289,0.0000000,0.0000000); //object(vgshseing28) (898)
	CreateDynamicObject(8558,883.1687622,6531.1625977,24.4871140,18.0000000,0.0000000,0.0000000); //object(vgshseing28) (899)
	CreateDynamicObject(8558,883.1687622,6526.2387695,23.0753021,14.0000000,0.0000000,0.0000000); //object(vgshseing28) (900)
	CreateDynamicObject(8558,883.1687622,6521.2290039,22.0103836,10.0000000,0.0000000,0.0000000); //object(vgshseing28) (901)
	CreateDynamicObject(8558,883.1687622,6516.1567383,21.2975464,6.0000000,0.0000000,0.0000000); //object(vgshseing28) (902)
	CreateDynamicObject(8558,883.1679688,6511.0468750,20.9402542,1.9995117,0.0000000,0.0000000); //object(vgshseing28) (903)
	CreateDynamicObject(8558,883.2706909,6506.3662109,20.8652554,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (905)
	CreateDynamicObject(3458,836.0458984,5986.6054688,16.8326950,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (896)
	CreateDynamicObject(8558,836.0114746,5981.5141602,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (910)
	CreateDynamicObject(8558,835.9948120,5976.4116211,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (911)
	CreateDynamicObject(8558,835.9775391,5971.3085938,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (912)
	CreateDynamicObject(8558,835.9614868,5966.2065430,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (913)
	CreateDynamicObject(8558,835.9448242,5961.1040039,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (914)
	CreateDynamicObject(8558,835.9281616,5956.0014648,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (915)
	CreateDynamicObject(8558,835.9114990,5950.8989258,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (916)
	CreateDynamicObject(8558,835.8948364,5945.7963867,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (917)
	CreateDynamicObject(8558,835.8779297,5940.6933594,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (918)
	CreateDynamicObject(8558,835.8615112,5935.5913086,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (919)
	CreateDynamicObject(8558,835.8448486,5930.4887695,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (920)
	CreateDynamicObject(8558,835.8281860,5925.3862305,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (921)
	CreateDynamicObject(8558,835.8115234,5920.2836914,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (922)
	CreateDynamicObject(8558,835.7948608,5915.1811523,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (923)
	CreateDynamicObject(8558,835.7781982,5910.0786133,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (924)
	CreateDynamicObject(8558,835.7615356,5904.9760742,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (925)
	CreateDynamicObject(8558,835.7448730,5899.8735352,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (926)
	CreateDynamicObject(8558,835.7282104,5894.7709961,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (927)
	CreateDynamicObject(8558,835.7115479,5889.6684570,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (928)
	CreateDynamicObject(8558,835.6948853,5884.5659180,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (929)
	CreateDynamicObject(8558,835.6782227,5879.4633789,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (930)
	CreateDynamicObject(8558,835.6615601,5874.3608398,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (931)
	CreateDynamicObject(8558,835.6448975,5869.2583008,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (932)
	CreateDynamicObject(8558,835.6282349,5864.1557617,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (933)
	CreateDynamicObject(8558,835.6115723,5859.0532227,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (934)
	CreateDynamicObject(8558,835.5947266,5853.9501953,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (935)
	CreateDynamicObject(8558,835.5781250,5848.8476562,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (936)
	CreateDynamicObject(8558,835.5615845,5843.7456055,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (937)
	CreateDynamicObject(8558,835.5449219,5838.6430664,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (938)
	CreateDynamicObject(8558,835.5282593,5833.5405273,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (939)
	CreateDynamicObject(8558,835.5107422,5828.4375000,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (940)
	CreateDynamicObject(8558,835.4941406,5823.3349609,16.8300304,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (941)
	CreateDynamicObject(3458,858.2041016,5840.9697266,16.8076954,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (902)
	CreateDynamicObject(3458,812.9086914,5840.9775391,16.8076954,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (903)
	CreateDynamicObject(3458,812.9086914,5840.9775391,16.8076954,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1008)
	CreateDynamicObject(3458,807.7003174,5833.4775391,17.2175999,9.0000000,0.0000000,90.0000000); //object(vgncarshade1) (988)
	CreateDynamicObject(3458,802.6202393,5825.9775391,18.4372253,18.0000000,0.0000000,90.0000000); //object(vgncarshade1) (989)
	CreateDynamicObject(3458,797.7935181,5818.4775391,20.4365349,27.0000000,0.0000000,90.0000000); //object(vgncarshade1) (990)
	CreateDynamicObject(3458,793.3389282,5810.9775391,23.1663017,36.0000000,0.0000000,90.0000000); //object(vgncarshade1) (991)
	CreateDynamicObject(3458,789.3662109,5803.4775391,26.5593109,45.0000000,0.0000000,90.0000000); //object(vgncarshade1) (992)
	CreateDynamicObject(3458,785.9732056,5795.9775391,30.5320129,54.0000000,0.0000000,90.0000000); //object(vgncarshade1) (993)
	CreateDynamicObject(3458,783.2434082,5788.4775391,34.9865875,63.0000000,0.0000000,90.0000000); //object(vgncarshade1) (994)
	CreateDynamicObject(3458,781.2441406,5780.9775391,39.8133507,72.0000000,0.0000000,90.0000000); //object(vgncarshade1) (995)
	CreateDynamicObject(3458,780.0244751,5773.4775391,44.8934441,81.0000000,0.0000000,90.0000000); //object(vgncarshade1) (996)
	CreateDynamicObject(3458,779.6146240,5765.9775391,50.1017914,90.0000000,0.0000000,90.0000000); //object(vgncarshade1) (997)
	CreateDynamicObject(3458,780.0244751,5758.4775391,55.3101349,99.0000000,0.0000000,90.0000000); //object(vgncarshade1) (998)
	CreateDynamicObject(3458,781.2441406,5750.9775391,60.3902321,108.0000000,0.0000000,90.0000000); //object(vgncarshade1) (999)
	CreateDynamicObject(3458,783.2434082,5743.4775391,65.2169952,117.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1000)
	CreateDynamicObject(3458,785.9732056,5735.9775391,69.6715698,126.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1001)
	CreateDynamicObject(3458,789.3662109,5728.4775391,73.6442719,135.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1002)
	CreateDynamicObject(3458,793.3389282,5720.9775391,77.0372772,144.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1003)
	CreateDynamicObject(3458,797.7934570,5713.4775391,79.7670441,153.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1004)
	CreateDynamicObject(3458,802.6202393,5705.9775391,81.7663574,162.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1005)
	CreateDynamicObject(3458,807.7003784,5698.4775391,82.9859772,171.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1006)
	CreateDynamicObject(3458,812.9082031,5690.9775391,83.3958893,180.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1007)
	CreateDynamicObject(3458,858.2041016,5840.9697266,16.8076954,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1009)
	CreateDynamicObject(3458,863.4124756,5833.4697266,17.2175999,-9.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1010)
	CreateDynamicObject(3458,868.4925537,5825.9697266,18.4372253,-18.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1011)
	CreateDynamicObject(3458,873.3192749,5818.4697266,20.4365349,-27.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1012)
	CreateDynamicObject(3458,877.7738647,5810.9697266,23.1663017,-36.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1013)
	CreateDynamicObject(3458,881.7465820,5803.4697266,26.5593109,-45.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1014)
	CreateDynamicObject(3458,885.1395874,5795.9697266,30.5320129,-54.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1015)
	CreateDynamicObject(3458,887.8693848,5788.4697266,34.9865875,-63.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1016)
	CreateDynamicObject(3458,889.8686523,5780.9697266,39.8133507,-72.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1017)
	CreateDynamicObject(3458,891.0883179,5773.4697266,44.8934441,-81.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1018)
	CreateDynamicObject(3458,891.4981689,5765.9697266,50.1017914,-90.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1019)
	CreateDynamicObject(3458,891.0883179,5758.4697266,55.3101349,-99.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1020)
	CreateDynamicObject(3458,889.8686523,5750.9697266,60.3902321,-108.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1021)
	CreateDynamicObject(3458,887.8693848,5743.4697266,65.2169952,-117.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1022)
	CreateDynamicObject(3458,885.1395874,5735.9697266,69.6715698,-126.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1023)
	CreateDynamicObject(3458,881.7465820,5728.4697266,73.6442719,-135.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1024)
	CreateDynamicObject(3458,877.7738647,5720.9697266,77.0372772,-144.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1025)
	CreateDynamicObject(3458,873.3193359,5713.4697266,79.7670441,-153.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1026)
	CreateDynamicObject(3458,868.4925537,5705.9697266,81.7663574,-162.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1027)
	CreateDynamicObject(3458,863.4124146,5698.4697266,82.9859772,-171.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1028)
	CreateDynamicObject(3458,858.2041016,5690.9697266,83.3958893,180.0000000,0.0000000,90.0000000); //object(vgncarshade1) (1029)
	CreateDynamicObject(8558,835.5888672,5684.4736328,83.4350281,180.0054932,0.0000000,0.0000000); //object(vgshseing28) (982)
	CreateDynamicObject(8558,835.5809937,5679.3691406,83.4350281,-359.9835205,540.0000000,540.0000000); //object(vgshseing28) (983)
	CreateDynamicObject(8558,835.5722656,5674.2646484,83.4350281,180.0164795,0.0000000,0.0000000); //object(vgshseing28) (984)
	CreateDynamicObject(8558,835.5722656,5674.2646484,83.4350281,180.0164795,0.0000000,0.0000000); //object(vgshseing28) (1012)
	CreateDynamicObject(8558,835.5722656,5669.0507812,83.1054840,187.2164764,0.0000000,0.0000000); //object(vgshseing28) (986)
	CreateDynamicObject(8558,835.5722656,5663.9194336,82.1250534,194.4164734,0.0000000,0.0000000); //object(vgshseing28) (987)
	CreateDynamicObject(8558,835.5722656,5658.9511719,80.5091934,201.6156006,0.0000000,0.0000000); //object(vgshseing28) (988)
	CreateDynamicObject(8558,835.5722656,5654.2246094,78.2833862,208.8164673,0.0000000,0.0000000); //object(vgshseing28) (989)
	CreateDynamicObject(8558,835.5722656,5649.8139648,75.4827423,216.0164642,0.0000000,0.0000000); //object(vgshseing28) (990)
	CreateDynamicObject(8558,835.5722656,5645.7895508,72.1514282,223.2164612,0.0000000,0.0000000); //object(vgshseing28) (991)
	CreateDynamicObject(8558,835.5722656,5642.2143555,68.3419724,230.4164581,0.0000000,0.0000000); //object(vgshseing28) (992)
	CreateDynamicObject(8558,835.5722656,5639.1450195,64.1144485,237.6164551,0.0000000,0.0000000); //object(vgshseing28) (993)
	CreateDynamicObject(8558,835.5722656,5636.6293945,59.5355415,244.8164520,0.0000000,0.0000000); //object(vgshseing28) (994)
	CreateDynamicObject(8558,835.5722656,5634.7075195,54.6774712,252.0164490,0.0000000,0.0000000); //object(vgshseing28) (995)
	CreateDynamicObject(8558,835.5722656,5633.4096680,49.6168060,259.2164612,0.0000000,0.0000000); //object(vgshseing28) (996)
	CreateDynamicObject(8558,835.5722656,5632.7563477,44.4333992,266.4164734,0.0000000,0.0000000); //object(vgshseing28) (997)
	CreateDynamicObject(8558,835.5722656,5632.7578125,39.2089882,273.6164856,0.0000000,0.0000000); //object(vgshseing28) (998)
	CreateDynamicObject(8558,835.5722656,5633.4140625,34.0259438,280.8164978,0.0000000,0.0000000); //object(vgshseing28) (999)
	CreateDynamicObject(8558,835.5722656,5634.7148438,28.9660416,288.0165100,0.0000000,0.0000000); //object(vgshseing28) (1000)
	CreateDynamicObject(8558,835.5722656,5636.6396484,24.1090603,295.2165222,0.0000000,0.0000000); //object(vgshseing28) (1001)
	CreateDynamicObject(8558,835.5722656,5639.1577148,19.5315838,302.4165344,0.0000000,0.0000000); //object(vgshseing28) (1002)
	CreateDynamicObject(8558,835.5722656,5642.2294922,15.3058319,309.6165466,0.0000000,0.0000000); //object(vgshseing28) (1003)
	CreateDynamicObject(8558,835.5722656,5645.8071289,11.4984341,316.8165588,0.0000000,0.0000000); //object(vgshseing28) (1004)
	CreateDynamicObject(8558,835.5722656,5649.8334961,8.1694183,324.0165710,0.0000000,0.0000000); //object(vgshseing28) (1005)
	CreateDynamicObject(8558,835.5722656,5654.2456055,5.3713188,331.2165833,0.0000000,0.0000000); //object(vgshseing28) (1006)
	CreateDynamicObject(8558,835.5722656,5658.9731445,3.1482391,338.4165955,0.0000000,0.0000000); //object(vgshseing28) (1007)
	CreateDynamicObject(8558,835.5722656,5663.9423828,1.5352402,345.6166077,0.0000000,0.0000000); //object(vgshseing28) (1008)
	CreateDynamicObject(8558,835.5722656,5669.0747070,0.5577736,352.8166199,0.0000000,0.0000000); //object(vgshseing28) (1009)
	CreateDynamicObject(3458,835.5722656,5674.2890625,0.2312393,0.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1030)
	CreateDynamicObject(3458,835.5722656,5679.5063477,0.5061646,6.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1031)
	CreateDynamicObject(3458,835.5722656,5684.6665039,1.3249321,12.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1032)
	CreateDynamicObject(3458,835.5722656,5689.7124023,2.6785698,18.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1033)
	CreateDynamicObject(3458,835.5722656,5694.5888672,4.5522499,24.0161133,0.0000000,0.0000000); //object(vgncarshade1) (1034)
	CreateDynamicObject(3458,835.5722656,5699.2436523,6.9254379,30.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1035)
	CreateDynamicObject(3458,835.5722656,5703.6245117,9.7721367,36.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1036)
	CreateDynamicObject(3458,835.5722656,5707.6835938,13.0611572,42.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1037)
	CreateDynamicObject(3458,835.5722656,5711.3769531,16.7564621,48.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1038)
	CreateDynamicObject(3458,835.5722656,5714.6635742,20.8175697,54.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1039)
	CreateDynamicObject(3458,835.5722656,5717.5078125,25.1999760,60.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1040)
	CreateDynamicObject(3458,835.5722656,5719.8784180,29.8556767,66.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1041)
	CreateDynamicObject(3458,835.5722656,5721.7490234,34.7336578,72.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1042)
	CreateDynamicObject(3458,835.5722656,5723.0996094,39.7804794,78.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1043)
	CreateDynamicObject(3458,835.5722656,5723.9155273,44.9408417,84.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1044)
	CreateDynamicObject(3458,835.5722656,5724.1875000,50.1582108,90.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1045)
	CreateDynamicObject(3458,835.5722656,5723.9125977,55.3754196,96.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1046)
	CreateDynamicObject(3458,835.5722656,5723.0937500,60.5353127,102.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1047)
	CreateDynamicObject(3458,835.5722656,5721.7402344,65.5813522,108.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1048)
	CreateDynamicObject(3458,835.5722656,5719.8666992,70.4582596,114.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1049)
	CreateDynamicObject(3458,835.5722656,5717.4931641,75.1125946,120.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1050)
	CreateDynamicObject(3458,835.5722656,5714.6464844,79.4933777,126.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1051)
	CreateDynamicObject(3458,835.5722656,5711.3574219,83.5525818,132.0117188,0.0000000,0.0000000); //object(vgncarshade1) (1052)
	CreateDynamicObject(3458,835.5722656,5707.6621094,87.2457733,138.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1053)
	CreateDynamicObject(3458,835.5722656,5703.6005859,90.5324554,144.0142822,0.0000000,0.0000000); //object(vgncarshade1) (1054)
	CreateDynamicObject(3458,835.5722656,5699.2187500,93.3766327,150.0164795,0.0000000,0.0000000); //object(vgncarshade1) (1055)
	CreateDynamicObject(3458,835.5722656,5694.5625000,95.7471390,156.0113525,0.0000000,0.0000000); //object(vgncarshade1) (1056)
	CreateDynamicObject(3458,835.5722656,5689.6845703,97.6180115,162.0153809,0.0000000,0.0000000); //object(vgncarshade1) (1057)
	CreateDynamicObject(8558,835.5839844,5685.4970703,84.5100479,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (1011)
	CreateDynamicObject(8558,835.5410156,5684.4521484,90.6101608,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (1013)
	CreateDynamicObject(8558,835.5556641,5679.3574219,90.6100540,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (1014)
	CreateDynamicObject(8558,835.5703125,5674.2382812,90.6101151,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (1015)
	CreateDynamicObject(3458,813.9511719,5691.1005859,84.4459229,90.0000000,179.9945068,270.0000000); //object(vgncarshade1) (1058)
	CreateDynamicObject(3458,857.1679688,5690.9746094,84.4459229,270.0000000,179.9945068,269.9890137); //object(vgncarshade1) (1059)
	CreateDynamicObject(8558,835.7998047,5505.8935547,-0.7673798,5.0207520,0.0000000,0.0000000); //object(vgshseing28) (1075)
	CreateDynamicObject(3458,835.7998047,5500.7841797,-1.1243134,2.9663086,0.0000000,0.0000000); //object(vgncarshade1) (1060)
	CreateDynamicObject(3458,835.7998047,5495.6650391,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1061)
	CreateDynamicObject(3458,835.7635498,5588.2919922,31.8628159,338.2800293,0.0000000,0.0000000); //object(vgncarshade1) (1079)
	CreateDynamicObject(3458,835.8096924,5490.5654297,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1081)
	CreateDynamicObject(3458,835.8192749,5485.4907227,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1082)
	CreateDynamicObject(3458,835.8288574,5480.4160156,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1083)
	CreateDynamicObject(3458,835.8384399,5475.3413086,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1084)
	CreateDynamicObject(3458,835.8480225,5470.2666016,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1085)
	CreateDynamicObject(3458,835.8576050,5465.1918945,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1086)
	CreateDynamicObject(3458,835.8671875,5460.1171875,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1087)
	CreateDynamicObject(3458,835.8767700,5455.0424805,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1088)
	CreateDynamicObject(3458,835.8863525,5449.9677734,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1089)
	CreateDynamicObject(3458,835.8955078,5444.8925781,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1090)
	CreateDynamicObject(3458,650.8247070,7131.9111328,89.5943069,0.0000000,90.0000000,90.0000000); //object(vgncarshade1) (54)
	CreateDynamicObject(8558,650.8455200,7153.4350586,84.9008636,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (665)
	CreateDynamicObject(8558,835.8790283,5439.8413086,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (180)
	CreateDynamicObject(8558,835.8876343,5434.7622070,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (699)
	CreateDynamicObject(8558,835.8962402,5429.6831055,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (700)
	CreateDynamicObject(8558,835.9048462,5424.6040039,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (701)
	CreateDynamicObject(8558,835.9134521,5419.5249023,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (702)
	CreateDynamicObject(8558,835.9220581,5414.4458008,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (703)
	CreateDynamicObject(8558,835.9306641,5409.3666992,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (704)
	CreateDynamicObject(8558,835.9392700,5404.2875977,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (722)
	CreateDynamicObject(8558,835.9472656,5399.2080078,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (724)
	CreateDynamicObject(8558,835.9560547,5394.1289062,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (725)
	CreateDynamicObject(8558,835.9648438,5389.0498047,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (726)
	CreateDynamicObject(8558,835.4160156,5689.3652344,98.4600830,59.9963379,0.0000000,0.0000000); //object(vgshseing28) (1016)
	CreateDynamicObject(8558,835.5839844,5685.4970703,89.6100540,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (1011)
	CreateDynamicObject(3458,813.9511719,5691.1005859,89.5958710,90.0000000,179.9945068,270.0000000); //object(vgncarshade1) (1058)
	CreateDynamicObject(3458,857.1679688,5690.9746094,89.5959473,270.0000000,179.9945068,269.9890137); //object(vgncarshade1) (1059)
	CreateDynamicObject(18310,1027.7626953,3756.6787109,18.6716385,0.0000000,0.0000000,341.9934082); //object(cs_landbit_21) (1)
	CreateDynamicObject(18310,1033.3741455,3645.1301270,18.6716385,0.0000000,0.0000000,341.9989014); //object(cs_landbit_21) (2)
	CreateDynamicObject(18310,1044.3369141,3586.5686035,18.6716385,0.0000000,0.0000000,17.9989014); //object(cs_landbit_21) (3)
	CreateDynamicObject(18310,1098.0356445,3549.8017578,18.6716385,0.0000000,0.0000000,47.9956055); //object(cs_landbit_21) (4)
	CreateDynamicObject(18310,1145.3542480,3549.3083496,18.6716385,0.0000000,0.0000000,89.9937744); //object(cs_landbit_21) (5)
	CreateDynamicObject(18310,1203.9426270,3566.5905762,18.6716385,0.0000000,0.0000000,131.9890137); //object(cs_landbit_21) (6)
	CreateDynamicObject(18310,1225.7402344,3627.0722656,18.6716385,0.0000000,0.0000000,167.9974365); //object(cs_landbit_21) (7)
	CreateDynamicObject(18310,1231.0859375,3721.8701172,18.6716385,0.0000000,0.0000000,171.9964600); //object(cs_landbit_21) (8)
	CreateDynamicObject(18310,1055.1262207,3774.9577637,18.6716385,0.0000000,0.0000000,311.9952393); //object(cs_landbit_21) (9)
	CreateDynamicObject(18310,1221.4010010,3773.3908691,18.6716385,0.0000000,0.0000000,203.9964600); //object(cs_landbit_21) (11)
	CreateDynamicObject(18228,1069.5853271,3819.2717285,53.6342888,30.1721191,73.5278625,300.4688110); //object(cunt_rockgp2_21) (1)
	CreateDynamicObject(18228,1091.9852295,3827.3100586,55.8842888,30.1684570,73.5260010,300.4650879); //object(cunt_rockgp2_21) (2)
	CreateDynamicObject(18228,1124.2192383,3829.0473633,55.8842888,30.1684570,73.5260010,290.4650879); //object(cunt_rockgp2_21) (3)
	CreateDynamicObject(18228,1155.4594727,3828.1667480,55.8842888,30.1629639,73.5205078,294.4620361); //object(cunt_rockgp2_21) (4)
	CreateDynamicObject(18228,1190.2250977,3831.0776367,55.8842888,30.1574707,73.5205078,294.4610596); //object(cunt_rockgp2_21) (5)
	CreateDynamicObject(18228,1190.2246094,3831.0771484,35.2942924,30.1574707,73.5205078,294.4610596); //object(cunt_rockgp2_21) (6)
	CreateDynamicObject(18228,1186.4775391,3830.9306641,10.1042976,30.1519775,73.5205078,294.4555664); //object(cunt_rockgp2_21) (7)
	CreateDynamicObject(18228,1183.6599121,3830.8208008,19.9542961,30.1574707,73.5205078,294.4610596); //object(cunt_rockgp2_21) (8)
	CreateDynamicObject(18228,1185.9772949,3830.9106445,-2.9557011,30.1574707,73.5205078,294.4610596); //object(cunt_rockgp2_21) (9)
	CreateDynamicObject(18228,1084.7822266,3826.9721680,-1.9557011,30.1574707,73.5205078,294.4610596); //object(cunt_rockgp2_21) (10)
	CreateDynamicObject(18228,1084.7822266,3826.9716797,12.6742973,30.1574707,73.5205078,294.4610596); //object(cunt_rockgp2_21) (11)
	CreateDynamicObject(18228,1084.7822266,3826.9716797,30.6942940,30.1574707,73.5205078,294.4610596); //object(cunt_rockgp2_21) (12)
	CreateDynamicObject(18228,1124.2187500,3829.0468750,41.2542915,30.1629639,73.5205078,290.4620361); //object(cunt_rockgp2_21) (13)
	CreateDynamicObject(18228,1116.2226562,3829.3437500,34.8642921,338.7030029,143.1134033,2.7246094); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1146.2519531,3828.2158203,33.8642921,340.0708008,184.2517090,19.4128418); //object(cunt_rockgp2_21) (15)
	CreateDynamicObject(8480,1173.4980469,3682.5195312,-9.3699903,0.0000000,0.0000000,0.0000000); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(8480,1090.7695312,3710.2802734,-9.1949892,0.0000000,0.0000000,179.9945068); //object(csrspalace01_lvs) (2)
	CreateDynamicObject(8480,1117.7109375,3609.2060547,-4.8399930,0.0000000,0.0000000,270.0000000); //object(csrspalace01_lvs) (3)
	CreateDynamicObject(18273,1021.7363281,3614.5761719,53.9000320,59.9963379,0.0000000,103.9965820); //object(cw2_weefirz08) (1)
	CreateDynamicObject(18273,1031.4151611,3746.3850098,53.9000320,59.9963379,0.0000000,75.9965820); //object(cw2_weefirz08) (2)
	CreateDynamicObject(18273,1231.2932129,3761.0549316,66.5700302,57.9908447,0.0000000,291.9924316); //object(cw2_weefirz08) (3)
	CreateDynamicObject(18273,1231.1334229,3626.1108398,53.0800323,45.9858704,0.0000000,253.9891357); //object(cw2_weefirz08) (4)
	CreateDynamicObject(18273,1127.1696777,3526.0412598,61.3300323,45.9832764,0.0000000,181.9873810); //object(cw2_weefirz08) (5)
	CreateDynamicObject(10166,1211.6914062,3586.1884766,-5.4620228,0.0000000,0.0000000,25.9991455); //object(p69_rocks) (1)
	CreateDynamicObject(10166,1064.4857178,3573.9897461,-5.4620228,0.0000000,0.0000000,311.9991455); //object(p69_rocks) (2)
	CreateDynamicObject(900,1185.3879395,3675.5571289,-1.7500000,0.0000000,354.0000000,18.0000000); //object(searock04) (1)
	CreateDynamicObject(900,1171.3627930,3756.5002441,-1.7500000,0.0000000,353.9959717,37.9956055); //object(searock04) (2)
	CreateDynamicObject(900,1088.6708984,3757.3320312,-1.7500000,0.0000000,353.9959717,37.9797363); //object(searock04) (3)
	CreateDynamicObject(900,1087.4482422,3690.2177734,-1.7500000,0.0000000,353.9959717,37.9907227); //object(searock04) (4)
	CreateDynamicObject(900,1121.6740723,3594.4882812,-1.7500000,0.0000000,353.9959717,17.9907227); //object(searock04) (5)
	CreateDynamicObject(726,1124.4248047,3596.0600586,1.1652367,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (2)
	CreateDynamicObject(726,1187.5416260,3675.0712891,1.1652367,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (3)
	CreateDynamicObject(726,1171.8769531,3759.1862793,1.1652367,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (4)
	CreateDynamicObject(726,1088.1398926,3759.5786133,1.1652367,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (5)
	CreateDynamicObject(726,1086.9687500,3691.2011719,1.1652367,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(763,1078.3127441,3606.1135254,1.4784818,0.0000000,0.0000000,0.0000000); //object(ash1_hi) (2)
	CreateDynamicObject(763,1183.2197266,3609.4677734,1.4784818,0.0000000,0.0000000,0.0000000); //object(ash1_hi) (3)
	CreateDynamicObject(8558,883.3750000,6149.1718750,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (855)
	CreateDynamicObject(8558,883.3758545,6144.0644531,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (855)
	CreateDynamicObject(8558,883.3759155,6138.9560547,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (855)
	CreateDynamicObject(3458,836.0367432,5991.7148438,16.8326950,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (896)
	CreateDynamicObject(3458,836.0275879,5996.8242188,16.8326950,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (174)
	CreateDynamicObject(3458,836.0175781,6001.9335938,16.8326950,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (176)
	CreateDynamicObject(8558,883.3759766,6133.8476562,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (697)
	CreateDynamicObject(8558,883.3760376,6128.7392578,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (698)
	CreateDynamicObject(8558,883.3759766,6123.6308594,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (727)
	CreateDynamicObject(8558,883.3761597,6118.5224609,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (728)
	CreateDynamicObject(8558,883.3762207,6113.4140625,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (729)
	CreateDynamicObject(8558,883.3759766,6108.3056641,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (730)
	CreateDynamicObject(8558,883.3759766,6103.1972656,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (731)
	CreateDynamicObject(3458,819.1867065,5383.9204102,-1.2725006,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1090)
	CreateDynamicObject(3458,815.9724121,5373.5537109,-0.1044350,-12.8571424,0.0000000,0.0000000); //object(vgncarshade1) (948)
	CreateDynamicObject(3458,812.7581177,5363.7065430,3.3411903,-25.7142849,0.0000000,0.0000000); //object(vgncarshade1) (950)
	CreateDynamicObject(3458,809.5438232,5354.8730469,8.8915901,-38.5714264,0.0000000,0.0000000); //object(vgncarshade1) (952)
	CreateDynamicObject(3458,806.3295898,5347.4960938,16.2684498,-51.4285660,0.0000000,0.0000000); //object(vgncarshade1) (954)
	CreateDynamicObject(3458,803.1152954,5341.9458008,25.1018658,-64.2857056,0.0000000,0.0000000); //object(vgncarshade1) (956)
	CreateDynamicObject(3458,799.9010010,5338.5000000,34.9488945,-77.1428528,0.0000000,0.0000000); //object(vgncarshade1) (958)
	CreateDynamicObject(3458,796.6867065,5337.3320312,45.3157616,-90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (960)
	CreateDynamicObject(3458,793.4716797,5338.5000000,55.6826286,257.1405029,0.0000000,0.0000000); //object(vgncarshade1) (962)
	CreateDynamicObject(3458,790.2581177,5341.9458008,65.5296555,-115.7142944,0.0000000,0.0000000); //object(vgncarshade1) (964)
	CreateDynamicObject(3458,787.0438232,5347.4960938,74.3630676,-128.5714417,0.0000000,0.0000000); //object(vgncarshade1) (966)
	CreateDynamicObject(3458,783.8295898,5354.8730469,81.7399445,-141.4285889,0.0000000,0.0000000); //object(vgncarshade1) (968)
	CreateDynamicObject(3458,780.6152344,5363.7060547,87.2903442,205.7135010,0.0000000,0.0000000); //object(vgncarshade1) (970)
	CreateDynamicObject(3458,777.4010010,5373.5537109,90.7359619,-167.1428833,0.0000000,0.0000000); //object(vgncarshade1) (972)
	CreateDynamicObject(3458,774.1867065,5383.9204102,91.9040222,-180.0000305,0.0000000,0.0000000); //object(vgncarshade1) (974)
	CreateDynamicObject(3458,770.9724121,5394.2871094,90.7359467,-192.8571777,0.0000000,0.0000000); //object(vgncarshade1) (976)
	CreateDynamicObject(3458,767.7581177,5404.1342773,87.2903137,-205.7143250,0.0000000,0.0000000); //object(vgncarshade1) (978)
	CreateDynamicObject(3458,764.5438232,5412.9677734,81.7399063,-218.5714722,0.0000000,0.0000000); //object(vgncarshade1) (980)
	CreateDynamicObject(3458,761.3295898,5420.3447266,74.3630371,-231.4286194,0.0000000,0.0000000); //object(vgncarshade1) (982)
	CreateDynamicObject(3458,758.1152954,5425.8950195,65.5296173,-244.2857666,0.0000000,0.0000000); //object(vgncarshade1) (1072)
	CreateDynamicObject(3458,754.9010010,5429.3408203,55.6825829,-257.1429138,0.0000000,0.0000000); //object(vgncarshade1) (1074)
	CreateDynamicObject(3458,751.6867065,5430.5087891,45.3157387,-270.0000305,0.0000000,0.0000000); //object(vgncarshade1) (1076)
	CreateDynamicObject(3458,748.4724121,5429.3408203,34.9488907,-282.8571472,0.0000000,0.0000000); //object(vgncarshade1) (1078)
	CreateDynamicObject(3458,745.2578125,5425.8945312,25.1018829,64.2810059,0.0000000,0.0000000); //object(vgncarshade1) (1091)
	CreateDynamicObject(3458,742.0429688,5420.3447266,16.2684784,51.4270020,0.0000000,0.0000000); //object(vgncarshade1) (1093)
	CreateDynamicObject(3458,738.8291016,5412.9677734,8.8916359,38.5675049,0.0000000,0.0000000); //object(vgncarshade1) (1095)
	CreateDynamicObject(3458,735.6152954,5404.1342773,3.3412285,25.7143860,0.0000000,0.0000000); //object(vgncarshade1) (1097)
	CreateDynamicObject(3458,732.4003906,5394.2871094,-0.1044121,12.8540039,0.0000000,0.0000000); //object(vgncarshade1) (1099)
	CreateDynamicObject(8558,847.4731445,5378.7055664,-0.9795647,-6.4285712,0.0000000,0.0000000); //object(vgshseing28) (963)
	CreateDynamicObject(8558,844.2588501,5368.5346680,1.3418579,-19.2857132,0.0000000,0.0000000); //object(vgshseing28) (965)
	CreateDynamicObject(8558,841.0445557,5359.1357422,5.8683014,-32.1428566,0.0000000,0.0000000); //object(vgshseing28) (967)
	CreateDynamicObject(8558,837.8302612,5350.9794922,12.3727837,-44.9999962,0.0000000,0.0000000); //object(vgshseing28) (969)
	CreateDynamicObject(8558,834.6152344,5344.4746094,20.5291462,302.1405029,0.0000000,0.0000000); //object(vgshseing28) (971)
	CreateDynamicObject(8558,831.4016724,5339.9482422,29.9283943,-70.7142792,0.0000000,0.0000000); //object(vgshseing28) (973)
	CreateDynamicObject(8558,828.1873779,5337.6269531,40.0992203,-83.5714264,0.0000000,0.0000000); //object(vgshseing28) (975)
	CreateDynamicObject(8558,824.9726562,5337.6269531,50.5316048,263.5675049,0.0000000,0.0000000); //object(vgshseing28) (977)
	CreateDynamicObject(8558,821.7588501,5339.9482422,60.7024231,-109.2857208,0.0000000,0.0000000); //object(vgshseing28) (979)
	CreateDynamicObject(8558,818.5445557,5344.4746094,70.1016769,-122.1428680,0.0000000,0.0000000); //object(vgshseing28) (981)
	CreateDynamicObject(8558,815.3302612,5350.9794922,78.2580414,-135.0000153,0.0000000,0.0000000); //object(vgshseing28) (1010)
	CreateDynamicObject(8558,812.1159668,5359.1357422,84.7625275,-147.8571625,0.0000000,0.0000000); //object(vgshseing28) (1018)
	CreateDynamicObject(8558,808.9016724,5368.5346680,89.2889709,-160.7143097,0.0000000,0.0000000); //object(vgshseing28) (1020)
	CreateDynamicObject(8558,805.6873779,5378.7055664,91.6103897,-173.5714569,0.0000000,0.0000000); //object(vgshseing28) (1022)
	CreateDynamicObject(8558,802.4731445,5389.1381836,91.6103821,-186.4286041,0.0000000,0.0000000); //object(vgshseing28) (1024)
	CreateDynamicObject(8558,799.2588501,5399.3090820,89.2889557,-199.2857513,0.0000000,0.0000000); //object(vgshseing28) (1026)
	CreateDynamicObject(8558,796.0445557,5408.7080078,84.7624969,-212.1428986,0.0000000,0.0000000); //object(vgshseing28) (1028)
	CreateDynamicObject(8558,792.8302612,5416.8647461,78.2580109,-225.0000458,0.0000000,0.0000000); //object(vgshseing28) (1030)
	CreateDynamicObject(8558,789.6159668,5423.3691406,70.1016464,-237.8571930,0.0000000,0.0000000); //object(vgshseing28) (1032)
	CreateDynamicObject(8558,786.4016724,5427.8955078,60.7023849,-250.7143402,0.0000000,0.0000000); //object(vgshseing28) (1034)
	CreateDynamicObject(8558,783.1873779,5430.2167969,50.5315590,-263.5714722,0.0000000,0.0000000); //object(vgshseing28) (1036)
	CreateDynamicObject(8558,779.9731445,5430.2167969,40.0991936,-276.4285889,0.0000000,0.0000000); //object(vgshseing28) (1038)
	CreateDynamicObject(8558,776.7588501,5427.8955078,29.9284134,-289.2857056,0.0000000,0.0000000); //object(vgshseing28) (1040)
	CreateDynamicObject(8558,773.5445557,5423.3691406,20.5291767,-302.1428223,0.0000000,0.0000000); //object(vgshseing28) (1042)
	CreateDynamicObject(8558,770.3302612,5416.8647461,12.3728218,-314.9999390,0.0000000,0.0000000); //object(vgshseing28) (1045)
	CreateDynamicObject(8558,767.1159668,5408.7080078,5.8683357,-327.8570557,0.0000000,0.0000000); //object(vgshseing28) (1047)
	CreateDynamicObject(8558,763.9013672,5399.3085938,1.3418884,19.2755127,0.0000000,0.0000000); //object(vgshseing28) (1049)
	CreateDynamicObject(8558,760.6865234,5389.1376953,-0.9795532,6.4270020,0.0000000,0.0000000); //object(vgshseing28) (1051)
	CreateDynamicObject(8558,883.3759766,6103.1972656,6.1550446,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (1251)
	CreateDynamicObject(8558,883.3759766,6098.0791016,6.3561325,-4.5000000,0.0000000,0.0000000); //object(vgshseing28) (1158)
	CreateDynamicObject(8558,883.3759766,6092.9926758,6.9581528,-9.0000000,0.0000000,0.0000000); //object(vgshseing28) (1160)
	CreateDynamicObject(8558,883.3759766,6087.9692383,7.9574013,-13.5000000,0.0000000,0.0000000); //object(vgshseing28) (1164)
	CreateDynamicObject(8558,883.3759766,6083.0395508,9.3477135,-18.0000000,0.0000000,0.0000000); //object(vgshseing28) (1199)
	CreateDynamicObject(8558,883.3759766,6078.2343750,11.1205139,-22.5000000,0.0000000,0.0000000); //object(vgshseing28) (1231)
	CreateDynamicObject(8558,883.3759766,6073.5825195,13.2648773,-27.0000000,0.0000000,0.0000000); //object(vgshseing28) (1232)
	CreateDynamicObject(8558,883.3759766,6069.1137695,15.7675781,-31.5000000,0.0000000,0.0000000); //object(vgshseing28) (1233)
	CreateDynamicObject(8558,883.3759766,6064.8549805,18.6131935,-36.0000000,0.0000000,0.0000000); //object(vgshseing28) (1234)
	CreateDynamicObject(8558,883.3759766,6060.8325195,21.7841721,-40.5000000,0.0000000,0.0000000); //object(vgshseing28) (1235)
	CreateDynamicObject(8558,883.3759766,6057.0712891,25.2609711,-45.0000000,0.0000000,0.0000000); //object(vgshseing28) (1236)
	CreateDynamicObject(8558,883.3759766,6053.5947266,29.0221481,-49.5000000,0.0000000,0.0000000); //object(vgshseing28) (1237)
	CreateDynamicObject(8558,883.3759766,6050.4238281,33.0445213,-54.0000000,0.0000000,0.0000000); //object(vgshseing28) (1239)
	CreateDynamicObject(8558,883.3759766,6047.5781250,37.3032837,-58.5000000,0.0000000,0.0000000); //object(vgshseing28) (1240)
	CreateDynamicObject(8558,883.3759766,6045.0751953,41.7721786,-63.0000000,0.0000000,0.0000000); //object(vgshseing28) (1241)
	CreateDynamicObject(8558,883.3759766,6042.9311523,46.4236603,-67.5000000,0.0000000,0.0000000); //object(vgshseing28) (1242)
	CreateDynamicObject(8558,883.3759766,6041.1582031,51.2290497,-72.0000000,0.0000000,0.0000000); //object(vgshseing28) (1243)
	CreateDynamicObject(8558,883.3759766,6039.7675781,56.1587143,283.4967041,0.0000000,0.0000000); //object(vgshseing28) (1244)
	CreateDynamicObject(8558,883.3759766,6038.7685547,61.1822662,-81.0000000,0.0000000,0.0000000); //object(vgshseing28) (1246)
	CreateDynamicObject(8558,883.3759766,6038.1665039,66.2687378,-85.5000000,0.0000000,0.0000000); //object(vgshseing28) (1247)
	CreateDynamicObject(8558,883.3759766,6037.9648438,71.3867569,269.9945068,0.0000000,0.0000000); //object(vgshseing28) (1248)
	CreateDynamicObject(8558,883.3739014,6038.2407227,76.3547668,276.5000000,180.0000000,180.0000000); //object(vgshseing28) (1249)
	CreateDynamicObject(3458,836.0175781,6001.9335938,16.8326950,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1316)
	CreateDynamicObject(3458,836.0175781,6007.0517578,17.0337830,4.5000000,0.0000000,0.0000000); //object(vgncarshade1) (1317)
	CreateDynamicObject(3458,836.0175781,6012.1381836,17.6358109,9.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1318)
	CreateDynamicObject(3458,836.0175781,6017.1616211,18.6350670,13.5000000,0.0000000,0.0000000); //object(vgncarshade1) (1319)
	CreateDynamicObject(3458,836.0175781,6022.0913086,20.0253868,18.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1320)
	CreateDynamicObject(3458,836.0175781,6026.8969727,21.7982025,22.5000000,0.0000000,0.0000000); //object(vgncarshade1) (1321)
	CreateDynamicObject(3458,836.0175781,6031.5483398,23.9425812,27.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1322)
	CreateDynamicObject(3458,836.0175781,6036.0170898,26.4453011,31.5000000,0.0000000,0.0000000); //object(vgncarshade1) (1323)
	CreateDynamicObject(3458,836.0175781,6040.2763672,29.2909393,36.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1324)
	CreateDynamicObject(3458,836.0175781,6044.2983398,32.4619408,40.5000000,0.0000000,0.0000000); //object(vgncarshade1) (1325)
	CreateDynamicObject(3458,836.0175781,6048.0595703,35.9387665,45.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1326)
	CreateDynamicObject(3458,836.0175781,6051.5366211,39.6999741,49.5000000,0.0000000,0.0000000); //object(vgncarshade1) (1327)
	CreateDynamicObject(3458,836.0175781,6054.7075195,43.7223740,54.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1328)
	CreateDynamicObject(3458,836.0175781,6057.5532227,47.9811707,58.5000000,0.0000000,0.0000000); //object(vgncarshade1) (1329)
	CreateDynamicObject(3458,836.0175781,6060.0561523,52.4500961,63.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1330)
	CreateDynamicObject(3458,836.0175781,6062.2001953,57.1016159,67.5000000,0.0000000,0.0000000); //object(vgncarshade1) (1332)
	CreateDynamicObject(3458,836.0175781,6063.9731445,61.9070435,72.0000000,0.0000000,0.0000000); //object(vgncarshade1) (1333)
	CreateDynamicObject(3458,836.0175781,6065.3632812,66.8367462,76.5000000,0.0000000,0.0000000); //object(vgncarshade1) (1334)
	CreateDynamicObject(3458,836.0175781,6066.3623047,71.8603363,80.9967041,0.0000000,0.0000000); //object(vgncarshade1) (1335)
	CreateDynamicObject(3458,883.3408203,6037.4541016,77.2127151,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (896)
	CreateDynamicObject(8558,835.9941406,6067.8232422,73.1450272,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (912)
	CreateDynamicObject(8558,883.3640137,6038.0644531,74.1367569,272.7501526,180.0000000,180.0000000); //object(vgshseing28) (1261)
	CreateDynamicObject(8558,883.2470703,6957.3750000,79.0897217,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (763)
	CreateDynamicObject(8558,883.1279297,6582.9091797,95.3134308,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (882)
	CreateDynamicObject(8558,883.1106567,6589.0947266,94.3084183,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (734)
	CreateDynamicObject(8480,1193.0765381,3924.3645020,-9.3699903,0.0000000,0.0000000,29.7500000); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(8480,991.9722900,3976.8767090,-9.3699903,0.0000000,0.0000000,330.2545166); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(18228,1037.0759277,3933.8164062,-8.9557018,350.0000000,0.0000000,32.0000000); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1056.4647217,3970.0217285,-8.9557018,349.9969482,0.0000000,15.9976807); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1071.6531982,4008.4426270,-8.9557018,349.9914551,0.0000000,35.9960938); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1201.2006836,3979.6967773,-8.9557018,349.9914551,0.0000000,257.9912109); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1221.2303467,3947.3239746,-8.9557018,349.9914551,0.0000000,257.9864502); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1240.1508789,3910.5559082,-8.9557018,349.9914551,0.0000000,257.9864502); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1184.4578857,3893.8188477,-14.2057018,349.9914551,0.0000000,257.9864502); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1070.1793213,3905.9846191,-14.2057018,349.9914551,0.0000000,225.9864655); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(726,1073.9934082,3906.4956055,4.9152365,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(726,1186.2110596,3895.0131836,3.4152365,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(18228,1198.7453613,4007.3066406,-8.9557018,349.9914551,0.0000000,167.9864502); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1050.0148926,4018.3576660,-8.9557018,349.9914551,0.0000000,127.9912720); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(8480,1149.0874023,4070.4995117,-9.1899910,0.0000000,0.0000000,90.0000000); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(8480,1261.5377197,4070.6093750,-9.1899910,0.0000000,0.0000000,90.0000000); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(8480,1036.6090088,4070.4909668,-9.1899910,0.0000000,0.0000000,90.0000000); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(8480,978.6538696,4057.5915527,-9.1899910,0.0000000,0.0000000,140.0000000); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(8480,1308.1325684,4034.7546387,-9.1899910,180.0000000,180.0000000,220.0012207); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(18228,1076.0806885,4112.4755859,-8.9557018,349.9914551,0.0000000,141.9907532); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1117.3339844,4111.5766602,-8.9557018,349.9914551,0.0000000,138.4873047); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1169.5653076,4105.0859375,-8.9557018,349.9914551,0.0000000,306.4826660); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1209.9495850,4105.4960938,-8.9557018,349.9914551,0.0000000,306.4801025); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1242.9528809,4100.6206055,-8.9557018,349.9914551,0.0000000,290.4801025); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1274.3818359,4096.5781250,-8.9557018,349.9914551,0.0000000,290.4730225); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1302.8852539,4092.5119629,-8.9557018,349.9914551,0.0000000,270.4785156); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1321.8150635,4067.5708008,-8.9557018,349.9914551,0.0000000,262.4779053); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1031.1391602,4106.5048828,-8.9557018,349.9914551,0.0000000,147.9873047); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,996.6462402,4110.2861328,-8.9557018,349.9914551,0.0000000,143.9858398); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,960.0640869,4097.5419922,-8.2057018,349.9914551,0.0000000,179.9813232); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,938.8547974,4071.0263672,-8.2057018,349.9914551,0.0000000,191.9780273); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,916.8652344,4045.7192383,-8.2057018,349.9914551,0.0000000,191.9750977); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(726,1256.1496582,4096.9814453,3.4152365,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(726,1156.4473877,4103.5156250,-1.8347635,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(726,1047.0797119,4099.8032227,6.1952362,0.0000000,36.0000000,64.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(726,978.4094849,4098.9926758,6.1952362,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(18228,1350.1434326,4039.7812500,-8.9557018,349.9914551,0.0000000,262.4743652); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(8397,1105.3408203,4184.6093750,0.0584233,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (1)
	CreateDynamicObject(8397,1151.4785156,4184.6279297,0.0584233,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (2)
	CreateDynamicObject(8397,1105.3408203,4184.6093750,0.0584233,0.0000000,339.9993896,0.0000000); //object(luxorpillar01_lvs) (3)
	CreateDynamicObject(8397,1151.4785156,4184.6279297,0.0584233,0.0000000,20.0000000,0.0000000); //object(luxorpillar01_lvs) (4)
	CreateDynamicObject(8397,1151.0157471,4305.9912109,-25.7815704,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (13)
	CreateDynamicObject(8397,1105.8496094,4305.9755859,-25.7815704,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8480,1076.3310547,4251.9267578,-9.1899910,179.9945068,179.9945068,333.9898682); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(8480,1271.9375000,4301.8212891,-9.1899910,179.9945068,179.9945068,26.0046387); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(18228,1021.6941528,4229.1606445,-8.9557018,349.9914551,0.0000000,17.9812927); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1045.4112549,4263.9707031,-8.9557018,349.9914551,0.0000000,17.9791260); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1052.6923828,4296.2495117,-8.9557018,349.9914551,0.0000000,39.9791260); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1050.0537109,4312.1982422,-8.9557018,349.9914551,0.0000000,75.9704590); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1202.5710449,4305.8046875,-8.9557018,349.9914551,0.0000000,221.9704437); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1218.1295166,4272.5180664,-8.9557018,349.9914551,0.0000000,253.9677734); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1235.3889160,4238.6821289,-8.9557018,349.9914551,0.0000000,253.9654541); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1255.1080322,4219.1328125,-8.9557018,349.9914551,0.0000000,303.9654541); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1012.9408569,4211.4404297,-8.9557018,349.9914551,0.0000000,321.9791260); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(726,1222.1219482,4246.3530273,-0.0847635,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(726,1208.3977051,4282.1274414,-2.5847635,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(726,1059.7686768,4281.8657227,-2.5847635,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(726,1028.5509033,4214.8125000,-0.5847635,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (6)
	CreateDynamicObject(9907,1163.6171875,4460.7797852,6.9697952,0.0000000,0.0000000,0.0000000); //object(monolith_sfe) (1)
	CreateDynamicObject(9907,1163.6313477,4510.2895508,6.9697952,0.0000000,0.0000000,0.0000000); //object(monolith_sfe) (2)
	CreateDynamicObject(9907,1163.7543945,4559.8339844,6.9697952,0.0000000,0.0000000,0.0000000); //object(monolith_sfe) (3)
	CreateDynamicObject(9907,1093.4206543,4460.7832031,6.9697952,0.0000000,0.0000000,180.0000000); //object(monolith_sfe) (4)
	CreateDynamicObject(9907,1093.4458008,4510.3227539,6.9697952,0.0000000,0.0000000,180.0000000); //object(monolith_sfe) (5)
	CreateDynamicObject(9907,1093.4429932,4559.8754883,6.9697952,0.0000000,0.0000000,179.9945068); //object(monolith_sfe) (6)
	CreateDynamicObject(8397,1097.6337891,4438.8935547,2.2934260,45.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1097.6337891,4438.8935547,12.3134270,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1097.6337891,4438.8935547,22.2884312,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1097.6337891,4438.8935547,32.3883743,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1097.6337891,4438.8935547,42.3433838,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1159.4528809,4438.9199219,2.2934260,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1159.4521484,4438.9199219,12.4184284,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1159.4521484,4438.9199219,22.5684261,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1159.4521484,4438.9199219,32.6934509,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1159.4521484,4438.9199219,42.9034348,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(3437,1104.6435547,4434.5771484,40.0225525,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (2)
	CreateDynamicObject(8397,1152.8319092,4499.5307617,2.2934260,44.9945068,0.0000000,270.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1152.6492920,4535.2719727,2.2934260,44.9890137,0.0000000,270.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1152.6278076,4576.2246094,2.2934260,44.9890137,0.0000000,270.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1104.2508545,4499.5390625,2.2934260,44.9890137,0.0000000,90.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1104.2873535,4535.3051758,2.2934260,44.9835205,0.0000000,90.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1104.2884521,4576.1743164,2.2934260,44.9835205,0.0000000,90.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1154.4547119,4467.5839844,2.2934260,44.9890137,0.0000000,270.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1102.5814209,4467.5708008,2.2934260,44.9835205,0.0000000,90.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1128.3526611,4575.7763672,65.7034149,180.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1128.3986816,4534.8593750,65.7034149,179.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1128.5679932,4499.1279297,65.7034149,179.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1128.8732910,4467.2768555,65.7034149,179.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(3458,1128.4941406,4437.4960938,2.2959557,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (222)
	CreateDynamicObject(5644,1116.8974609,4446.0556641,47.3702621,0.0000000,0.0000000,0.0000000); //object(laebuildsit01a) (5)
	CreateDynamicObject(5644,1139.9595947,4446.1040039,47.3702621,0.0000000,0.0000000,0.0000000); //object(laebuildsit01a) (6)
	CreateDynamicObject(5644,1116.8902588,4471.7270508,46.4702072,90.0000000,0.0000000,0.0000000); //object(laebuildsit01a) (8)
	CreateDynamicObject(5644,1116.8771973,4496.4931641,46.4702072,90.0000000,0.0000000,0.0000000); //object(laebuildsit01a) (9)
	CreateDynamicObject(5644,1116.8641357,4521.2592773,46.4702072,90.0000000,0.0000000,0.0000000); //object(laebuildsit01a) (10)
	CreateDynamicObject(5644,1116.8510742,4546.0253906,46.4702072,90.0000000,0.0000000,0.0000000); //object(laebuildsit01a) (11)
	CreateDynamicObject(5644,1116.8380127,4570.7915039,46.4702072,90.0000000,0.0000000,0.0000000); //object(laebuildsit01a) (12)
	CreateDynamicObject(5644,1140.0456543,4471.8461914,46.4702072,90.0000000,180.0000000,180.0000000); //object(laebuildsit01a) (16)
	CreateDynamicObject(5644,1140.0609131,4496.7109375,46.4702072,90.0000000,360.0000000,360.0000000); //object(laebuildsit01a) (17)
	CreateDynamicObject(5644,1140.0761719,4521.5756836,46.4702072,90.0000000,540.0000000,540.0000000); //object(laebuildsit01a) (18)
	CreateDynamicObject(5644,1140.0914307,4546.4404297,46.4702072,90.0000000,720.0000000,720.0000000); //object(laebuildsit01a) (19)
	CreateDynamicObject(5644,1139.8684082,4570.8017578,46.4702072,90.0000000,180.0000000,180.0000000); //object(laebuildsit01a) (20)
	CreateDynamicObject(3437,1150.5439453,4434.5898438,40.0225754,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (18)
	CreateDynamicObject(3437,1138.8662109,4434.6171875,40.0225754,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (19)
	CreateDynamicObject(3437,1127.2392578,4434.6445312,40.0225601,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (20)
	CreateDynamicObject(3437,1116.3076172,4434.5722656,40.0225601,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (21)
	CreateDynamicObject(3437,1104.6435547,4434.5771484,59.8225403,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (22)
	CreateDynamicObject(3437,1116.3076172,4434.5722656,59.7975388,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (23)
	CreateDynamicObject(3437,1127.2392578,4434.6445312,59.8025284,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (24)
	CreateDynamicObject(3437,1138.8662109,4434.6171875,59.7975616,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (25)
	CreateDynamicObject(3437,1150.5439453,4434.5898438,59.7075424,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (26)
	CreateDynamicObject(8397,1158.7014160,4438.9199219,52.1834335,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8397,1097.6337891,4438.8935547,52.0933838,44.9945068,0.0000000,0.0000000); //object(luxorpillar01_lvs) (14)
	CreateDynamicObject(8558,1161.5938721,8084.7583008,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (384)
	CreateDynamicObject(8558,1156.5175781,8084.7841797,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (389)
	CreateDynamicObject(8558,1151.4427490,8084.8110352,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (696)
	CreateDynamicObject(8558,1146.3671875,8084.8374023,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (732)
	CreateDynamicObject(8558,1141.2916260,8084.8637695,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (760)
	CreateDynamicObject(8558,1136.2160645,8084.8901367,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (765)
	CreateDynamicObject(8558,1131.1396484,8084.9160156,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (766)
	CreateDynamicObject(8558,1126.0649414,8084.9428711,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (767)
	CreateDynamicObject(8558,1120.9893799,8084.9692383,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (768)
	CreateDynamicObject(8558,1115.9138184,8084.9956055,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (769)
	CreateDynamicObject(8558,1110.8382568,8085.0219727,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (770)
	CreateDynamicObject(8558,1105.7626953,8085.0483398,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (771)
	CreateDynamicObject(8558,1100.6865234,8085.0742188,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (772)
	CreateDynamicObject(3458,1090.4625244,8085.0781250,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (440)
	CreateDynamicObject(3458,1085.3356934,8085.0927734,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (556)
	CreateDynamicObject(3458,1080.2088623,8085.1074219,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (571)
	CreateDynamicObject(3458,1075.0820312,8085.1220703,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (685)
	CreateDynamicObject(3458,1069.9552002,8085.1367188,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (686)
	CreateDynamicObject(3458,1064.8283691,8085.1513672,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (687)
	CreateDynamicObject(3458,1059.7015381,8085.1660156,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (688)
	CreateDynamicObject(3458,1054.5747070,8085.1806641,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (689)
	CreateDynamicObject(3458,1049.4478760,8085.1953125,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (690)
	CreateDynamicObject(3458,1044.3210449,8085.2099609,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (691)
	CreateDynamicObject(3458,1039.1942139,8085.2246094,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (692)
	CreateDynamicObject(3458,1034.0673828,8085.2392578,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (694)
	CreateDynamicObject(3458,1028.9405518,8085.2539062,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (695)
	CreateDynamicObject(8558,1023.8505859,8085.2343750,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (773)
	CreateDynamicObject(8558,1018.7762451,8085.2187500,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (774)
	CreateDynamicObject(8558,1013.7019043,8085.2031250,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (775)
	CreateDynamicObject(8558,1008.6275635,8085.1875000,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (776)
	CreateDynamicObject(8558,1003.5532227,8085.1718750,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (808)
	CreateDynamicObject(8558,998.4788818,8085.1562500,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgshseing28) (809)
	CreateDynamicObject(3458,967.7388916,8085.1630859,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (478)
	CreateDynamicObject(3458,972.8900146,8085.1718750,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (697)
	CreateDynamicObject(3458,978.0424805,8085.1845703,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (698)
	CreateDynamicObject(3458,983.1433716,8085.1508789,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (699)
	CreateDynamicObject(3458,988.2435303,8085.1289062,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (700)
	CreateDynamicObject(3458,993.3491211,8085.1474609,16.9517403,0.0000000,0.0000000,90.0000000); //object(vgncarshade1) (701)
	CreateDynamicObject(8558,883.2470703,6957.3750000,73.9697113,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (763)
	CreateDynamicObject(10948,1380.2167969,4645.4814453,61.9912643,0.0000000,0.0000000,90.0000000); //object(skyscrapper_sfs) (1)
	CreateDynamicObject(10948,877.6562500,4657.4296875,60.2911911,0.0000000,0.0000000,270.0000000); //object(skyscrapper_sfs) (2)
	CreateDynamicObject(9076,1263.0761719,4803.9550781,14.6479263,0.0000000,0.0000000,90.0000000); //object(sphinx01_lvs) (1)
	CreateDynamicObject(9076,996.9150391,4803.2070312,14.6479263,0.0000000,0.0000000,90.0000000); //object(sphinx01_lvs) (3)
	CreateDynamicObject(5986,1073.3105469,4668.8569336,18.2781315,0.0000000,0.0000000,270.0000000); //object(chateau01_lawn) (1)
	CreateDynamicObject(4564,996.5517578,4820.2080078,-42.5099945,0.0000000,0.0000000,90.0000000); //object(laskyscrap2_lan) (1)
	CreateDynamicObject(4564,1262.9460449,4820.8916016,-42.5099945,0.0000000,0.0000000,90.0000000); //object(laskyscrap2_lan) (2)
	CreateDynamicObject(5986,1200.3466797,4679.9208984,18.3031387,0.0000000,0.0000000,90.0000000); //object(chateau01_lawn) (2)
	CreateDynamicObject(18228,892.8068848,4598.3730469,-8.9557018,349.9914551,0.0000000,353.9704590); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,907.1246948,4626.3867188,-8.9557018,349.9914551,0.0000000,5.9685059); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,934.2217407,4647.4067383,-8.9557018,349.9914551,0.0000000,5.9655762); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,920.3411865,4668.6865234,-8.9557018,349.9914551,0.0000000,63.9655762); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,899.5586548,4702.6684570,-8.9557018,349.9914551,0.0000000,71.9624023); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,880.3773804,4700.4628906,-8.9557018,349.9914551,0.0000000,131.9604492); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,870.8186646,4600.6015625,-8.9557018,349.9914551,0.0000000,285.9685059); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(3997,1081.1938477,4708.5849609,0.2861840,0.0000000,0.0000000,270.0000000); //object(cityhallblok_lan) (1)
	CreateDynamicObject(5986,1081.2806396,4754.1738281,18.2781315,0.0000000,0.0000000,0.0000000); //object(chateau01_lawn) (3)
	CreateDynamicObject(3997,1168.9593506,4708.9433594,0.2861840,0.0000000,0.0000000,270.0000000); //object(cityhallblok_lan) (2)
	CreateDynamicObject(5986,1192.1503906,4755.5034180,18.3031387,0.0000000,0.0000000,0.0000000); //object(chateau01_lawn) (4)
	CreateDynamicObject(700,1050.5814209,4693.9340820,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (2)
	CreateDynamicObject(700,1050.5339355,4685.1542969,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (3)
	CreateDynamicObject(700,1050.4114990,4676.4458008,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (4)
	CreateDynamicObject(700,1050.2271729,4642.1591797,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (5)
	CreateDynamicObject(700,1064.9577637,4633.1171875,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (6)
	CreateDynamicObject(700,1053.1710205,4633.0688477,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (7)
	CreateDynamicObject(700,1208.0573730,4633.6538086,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (8)
	CreateDynamicObject(700,1221.5737305,4633.6225586,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (9)
	CreateDynamicObject(700,1223.6831055,4644.6972656,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (10)
	CreateDynamicObject(700,1223.7266846,4654.8515625,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (11)
	CreateDynamicObject(700,1223.6029053,4664.7797852,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (12)
	CreateDynamicObject(700,1223.2677002,4740.9399414,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (13)
	CreateDynamicObject(700,1223.3320312,4751.3681641,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (14)
	CreateDynamicObject(700,1223.2425537,4761.1503906,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (15)
	CreateDynamicObject(700,1222.7908936,4772.0170898,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (16)
	CreateDynamicObject(700,1222.0311279,4783.1123047,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (17)
	CreateDynamicObject(700,1211.2648926,4782.9350586,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (18)
	CreateDynamicObject(700,1066.0129395,4782.8105469,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (19)
	CreateDynamicObject(700,1055.1166992,4782.7856445,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (20)
	CreateDynamicObject(700,1050.4826660,4773.0498047,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (21)
	CreateDynamicObject(700,1050.6065674,4742.6909180,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (22)
	CreateDynamicObject(700,1050.8874512,4735.0947266,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (23)
	CreateDynamicObject(700,1051.0028076,4726.7456055,0.2861802,0.0000000,0.0000000,0.0000000); //object(sm_veg_tree6) (24)
	CreateDynamicObject(730,942.5423584,4662.6220703,1.2861840,0.0000000,0.0000000,0.0000000); //object(tree_hipoly08) (2)
	CreateDynamicObject(730,911.3652954,4695.6313477,1.2861840,0.0000000,0.0000000,0.0000000); //object(tree_hipoly08) (3)
	CreateDynamicObject(730,906.6781616,4612.9321289,1.2861840,0.0000000,0.0000000,0.0000000); //object(tree_hipoly08) (4)
	CreateDynamicObject(18228,1358.6688232,4683.2158203,-8.9557018,349.9914551,0.0000000,231.9624023); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1334.0104980,4668.2192383,-10.7057018,349.9914551,0.0000000,145.9598389); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1319.4821777,4640.9282227,-10.7057018,349.9914551,0.0000000,243.9588623); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1336.9721680,4618.7797852,-10.7057018,349.9914551,0.0000000,243.9569092); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1362.0191650,4598.6713867,-10.7057018,349.9914551,0.0000000,263.9569092); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1393.0029297,4594.2636719,-10.7057018,349.9914551,0.0000000,315.9520264); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1419.5198975,4608.1025391,-10.7057018,349.9914551,0.0000000,3.9503174); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1360.6643066,4707.0209961,-8.9557018,342.0028076,357.8970642,155.3098145); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1382.4482422,4708.5092773,-8.9557018,341.9989014,357.8961182,91.3081970); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(730,1357.7329102,4704.9365234,5.7861838,0.0000000,0.0000000,0.0000000); //object(tree_hipoly08) (6)
	CreateDynamicObject(730,1344.7148438,4675.8916016,0.2861838,0.0000000,0.0000000,0.0000000); //object(tree_hipoly08) (7)
	CreateDynamicObject(730,1307.0123291,4651.7392578,0.0361838,0.0000000,0.0000000,0.0000000); //object(tree_hipoly08) (8)
	CreateDynamicObject(730,1335.4871826,4618.1875000,8.0361843,0.0000000,0.0000000,0.0000000); //object(tree_hipoly08) (9)
	CreateDynamicObject(730,1388.7399902,4593.7617188,6.5361843,0.0000000,0.0000000,0.0000000); //object(tree_hipoly08) (10)
	CreateDynamicObject(9076,1128.8740234,5002.0244141,15.2979317,0.0000000,0.0000000,90.0000000); //object(sphinx01_lvs) (3)
	CreateDynamicObject(3458,1119.5185547,5007.9023438,36.3350296,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1119.5185547,5007.9023438,31.2100315,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1119.5185547,5007.9023438,26.1100254,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1119.5185547,5007.9023438,20.9850235,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1119.5185547,5007.9023438,15.8850327,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1156.5449219,5007.9101562,36.3050461,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1156.5449219,5007.9101562,31.2050400,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1156.5449219,5007.9101562,26.0800266,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1156.5449219,5007.9101562,20.9550209,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1156.5449219,5007.9101562,15.8550301,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1156.5449219,5007.9101562,10.7800312,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(3458,1119.5185547,5007.9023438,10.8100338,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (162)
	CreateDynamicObject(8397,1129.1230469,4937.0253906,-22.1199970,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (23)
	CreateDynamicObject(8397,1129.1230469,4937.0253906,-22.1199970,350.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (30)
	CreateDynamicObject(8397,1129.1230469,4937.0253906,-22.1199970,340.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (31)
	CreateDynamicObject(8397,1129.1230469,4937.0253906,-22.1199970,330.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (32)
	CreateDynamicObject(8397,1129.1230469,4937.0253906,-22.1199970,320.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (33)
	CreateDynamicObject(8397,1129.1230469,4937.0253906,-22.1199970,310.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (34)
	CreateDynamicObject(8397,1129.1230469,4937.0253906,-22.1199970,300.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (35)
	CreateDynamicObject(8397,1160.5380859,5009.1279297,13.0999985,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (36)
	CreateDynamicObject(8397,1097.4873047,5009.0380859,13.0999985,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (37)
	CreateDynamicObject(18228,1318.7227783,4914.1010742,-5.2057018,349.9914551,0.0000000,231.9598389); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1252.0421143,4984.2827148,-5.2057018,349.9914551,0.0000000,275.9598389); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,1023.6390381,4968.5639648,-5.2057018,349.9914551,0.0000000,313.9545898); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(18228,935.9620972,4904.4765625,-5.2057018,349.9914551,0.0000000,21.9508057); //object(cunt_rockgp2_21) (14)
	CreateDynamicObject(726,939.2292480,4888.9296875,6.4321070,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (7)
	CreateDynamicObject(726,1008.3357544,4959.9721680,5.3821087,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (8)
	CreateDynamicObject(726,1239.5786133,4986.1547852,5.3821087,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (9)
	CreateDynamicObject(726,1310.2689209,4926.3681641,5.5921078,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (10)
	CreateDynamicObject(8397,1128.9498291,5009.4213867,13.0999985,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (39)
	CreateDynamicObject(5644,1116.8969727,4446.1054688,31.9202652,0.0000000,0.0000000,0.0000000); //object(laebuildsit01a) (5)
	CreateDynamicObject(5644,1140.1857910,4446.3740234,31.9202652,0.0000000,0.0000000,0.0000000); //object(laebuildsit01a) (5)
	CreateDynamicObject(3437,1104.6435547,4434.5771484,19.4825439,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (2)
	CreateDynamicObject(3437,1116.3076172,4434.5722656,19.4675465,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (21)
	CreateDynamicObject(3437,1127.2392578,4434.6445312,19.4725494,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (20)
	CreateDynamicObject(3437,1138.8662109,4434.6171875,19.4425468,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (19)
	CreateDynamicObject(3437,1150.5439453,4434.5898438,19.4375477,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (18)
	CreateDynamicObject(3458,996.0616455,4748.2207031,-0.3799286,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (30)
	CreateDynamicObject(8392,985.8780518,5107.3901367,11.9988346,0.0000000,20.0000000,180.0000000); //object(ballys02_lvs) (1)
	CreateDynamicObject(8397,1009.2023315,5107.3291016,37.6900406,0.0000000,40.0000000,0.0000000); //object(luxorpillar01_lvs) (37)
	CreateDynamicObject(8392,985.8747559,5135.4726562,11.9988346,0.0000000,19.9951172,179.9945068); //object(ballys02_lvs) (5)
	CreateDynamicObject(8392,985.8710938,5163.5546875,11.9988346,0.0000000,19.9896240,179.9835205); //object(ballys02_lvs) (16)
	CreateDynamicObject(8392,985.8681641,5191.6376953,11.9988346,0.0000000,19.9853516,179.9835205); //object(ballys02_lvs) (6)
	CreateDynamicObject(8392,985.8648682,5219.7202148,11.9988346,0.0000000,19.9804688,179.9780273); //object(ballys02_lvs) (7)
	CreateDynamicObject(8392,985.8615723,5247.8027344,11.9988346,0.0000000,19.9755859,179.9725342); //object(ballys02_lvs) (8)
	CreateDynamicObject(8392,985.8582764,5275.8852539,11.9988346,0.0000000,19.9707031,179.9670410); //object(ballys02_lvs) (9)
	CreateDynamicObject(8392,985.8549805,5303.9677734,11.9988346,0.0000000,19.9658203,179.9615479); //object(ballys02_lvs) (10)
	CreateDynamicObject(8392,985.8516846,5332.0502930,11.9988346,0.0000000,19.9609375,179.9560547); //object(ballys02_lvs) (11)
	CreateDynamicObject(8392,985.8483887,5360.1328125,11.9988346,0.0000000,19.9560547,179.9505615); //object(ballys02_lvs) (12)
	CreateDynamicObject(8392,985.8450928,5388.2153320,11.9988346,0.0000000,19.9511719,179.9450684); //object(ballys02_lvs) (13)
	CreateDynamicObject(8392,985.8417969,5416.2978516,11.9988346,0.0000000,19.9462891,179.9395752); //object(ballys02_lvs) (14)
	CreateDynamicObject(8392,985.8385010,5444.3803711,11.9988346,0.0000000,19.9414062,179.9340820); //object(ballys02_lvs) (15)
	CreateDynamicObject(8392,985.8349609,5472.4628906,11.9988346,0.0000000,19.9346924,179.9230957); //object(ballys02_lvs) (17)
	CreateDynamicObject(8392,985.8310547,5500.5449219,11.9988346,0.0000000,19.9291992,179.9230957); //object(ballys02_lvs) (18)
	CreateDynamicObject(8397,1009.2456665,5135.4238281,37.6900406,0.0000000,39.9957275,0.0000000); //object(luxorpillar01_lvs) (37)
	CreateDynamicObject(8397,1009.2890015,5163.5185547,37.6900406,0.0000000,39.9914551,0.0000000); //object(luxorpillar01_lvs) (16)
	CreateDynamicObject(8397,1009.3323364,5191.6132812,37.6900406,0.0000000,39.9871826,0.0000000); //object(luxorpillar01_lvs) (17)
	CreateDynamicObject(8397,1009.3756714,5219.7080078,37.6900406,0.0000000,39.9829102,0.0000000); //object(luxorpillar01_lvs) (18)
	CreateDynamicObject(8397,1009.4190063,5247.8027344,37.6900406,0.0000000,39.9786377,0.0000000); //object(luxorpillar01_lvs) (19)
	CreateDynamicObject(8397,1009.4623413,5275.8974609,37.6900406,0.0000000,39.9743652,0.0000000); //object(luxorpillar01_lvs) (20)
	CreateDynamicObject(8397,1009.5056763,5303.9921875,37.6900406,0.0000000,39.9700928,0.0000000); //object(luxorpillar01_lvs) (21)
	CreateDynamicObject(8397,1009.5490112,5332.0869141,37.6900406,0.0000000,39.9658203,0.0000000); //object(luxorpillar01_lvs) (22)
	CreateDynamicObject(8397,1009.5923462,5360.1816406,37.6900406,0.0000000,39.9615479,0.0000000); //object(luxorpillar01_lvs) (24)
	CreateDynamicObject(8397,1009.6356812,5388.2763672,37.6900406,0.0000000,39.9572754,0.0000000); //object(luxorpillar01_lvs) (25)
	CreateDynamicObject(8397,1009.6790161,5416.3710938,37.6900406,0.0000000,39.9530029,0.0000000); //object(luxorpillar01_lvs) (26)
	CreateDynamicObject(8397,1009.7223511,5444.4658203,37.6900406,0.0000000,39.9487305,0.0000000); //object(luxorpillar01_lvs) (27)
	CreateDynamicObject(8397,1009.7656860,5472.5605469,37.6900406,0.0000000,39.9444580,0.0000000); //object(luxorpillar01_lvs) (28)
	CreateDynamicObject(8397,1009.8085938,5500.6552734,37.6900406,0.0000000,39.9353027,0.0000000); //object(luxorpillar01_lvs) (29)
	CreateDynamicObject(8392,1271.5439453,5107.6860352,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (24)
	CreateDynamicObject(8392,1271.5593262,5135.8051758,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (25)
	CreateDynamicObject(8392,1271.5747070,5163.9243164,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (26)
	CreateDynamicObject(8392,1271.5900879,5192.0434570,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (27)
	CreateDynamicObject(8392,1271.6054688,5220.1625977,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (28)
	CreateDynamicObject(8392,1271.6208496,5248.2817383,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (29)
	CreateDynamicObject(8392,1271.6362305,5276.4008789,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (30)
	CreateDynamicObject(8392,1271.6516113,5304.5200195,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (31)
	CreateDynamicObject(8392,1271.6669922,5332.6391602,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (32)
	CreateDynamicObject(8392,1271.6823730,5360.7583008,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (33)
	CreateDynamicObject(8392,1271.6972656,5388.8769531,11.9988346,0.0000000,19.9841309,0.0000000); //object(ballys02_lvs) (34)
	CreateDynamicObject(8392,1271.7131348,5416.9965820,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (35)
	CreateDynamicObject(8392,1271.7285156,5445.1157227,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (36)
	CreateDynamicObject(8392,1271.7438965,5473.2348633,11.9988346,0.0000000,19.9896240,0.0000000); //object(ballys02_lvs) (37)
	CreateDynamicObject(8392,1271.7587891,5501.3535156,11.9988346,0.0000000,19.9841309,0.0000000); //object(ballys02_lvs) (38)
	CreateDynamicObject(8397,1248.2235107,5107.6655273,37.6900406,0.0000000,320.0042725,0.0000000); //object(luxorpillar01_lvs) (37)
	CreateDynamicObject(8397,1248.2110596,5135.7915039,37.6900406,0.0000000,319.9987793,0.0000000); //object(luxorpillar01_lvs) (37)
	CreateDynamicObject(8397,1248.1986084,5163.9174805,37.6900406,0.0000000,319.9932861,0.0000000); //object(luxorpillar01_lvs) (41)
	CreateDynamicObject(8397,1248.1861572,5192.0434570,37.6900406,0.0000000,319.9877930,0.0000000); //object(luxorpillar01_lvs) (42)
	CreateDynamicObject(8397,1248.1737061,5220.1694336,37.6900406,0.0000000,319.9822998,0.0000000); //object(luxorpillar01_lvs) (43)
	CreateDynamicObject(8397,1248.1612549,5248.2954102,37.6900406,0.0000000,319.9768066,0.0000000); //object(luxorpillar01_lvs) (44)
	CreateDynamicObject(8397,1248.1488037,5276.4213867,37.6900406,0.0000000,319.9713135,0.0000000); //object(luxorpillar01_lvs) (45)
	CreateDynamicObject(8397,1248.1363525,5304.5473633,37.6900406,0.0000000,319.9658203,0.0000000); //object(luxorpillar01_lvs) (46)
	CreateDynamicObject(8397,1248.1239014,5332.6733398,37.6900406,0.0000000,319.9603271,0.0000000); //object(luxorpillar01_lvs) (47)
	CreateDynamicObject(8397,1248.1114502,5360.7993164,37.6900406,0.0000000,319.9548340,0.0000000); //object(luxorpillar01_lvs) (48)
	CreateDynamicObject(8397,1248.0989990,5388.9252930,37.6900406,0.0000000,319.9493408,0.0000000); //object(luxorpillar01_lvs) (49)
	CreateDynamicObject(8397,1248.0865479,5417.0512695,37.6900406,0.0000000,319.9438477,0.0000000); //object(luxorpillar01_lvs) (50)
	CreateDynamicObject(8397,1248.0740967,5445.1772461,37.6900406,0.0000000,319.9383545,0.0000000); //object(luxorpillar01_lvs) (51)
	CreateDynamicObject(8397,1248.0616455,5473.3032227,37.6900406,0.0000000,319.9328613,0.0000000); //object(luxorpillar01_lvs) (52)
	CreateDynamicObject(8397,1248.0491943,5501.4291992,37.6900406,0.0000000,319.9273682,0.0000000); //object(luxorpillar01_lvs) (53)
	CreateDynamicObject(8392,1197.4969482,5566.1787109,11.9988346,0.0000000,19.9841309,90.0000000); //object(ballys02_lvs) (40)
	CreateDynamicObject(8392,1169.3942871,5566.1718750,11.9988346,0.0000000,19.9786377,90.0000000); //object(ballys02_lvs) (41)
	CreateDynamicObject(8392,1141.3012695,5566.1616211,11.9988346,0.0000000,19.9786377,90.0000000); //object(ballys02_lvs) (42)
	CreateDynamicObject(8392,1113.1932373,5566.1503906,11.9988346,0.0000000,19.9786377,90.0000000); //object(ballys02_lvs) (43)
	CreateDynamicObject(8392,1085.1142578,5566.1669922,11.9988346,0.0000000,19.9786377,90.0000000); //object(ballys02_lvs) (44)
	CreateDynamicObject(8392,1057.0262451,5566.1494141,11.9988346,0.0000000,19.9786377,90.0000000); //object(ballys02_lvs) (45)
	CreateDynamicObject(8397,1057.0505371,5542.7358398,37.6900406,0.0000000,39.9353027,270.0000000); //object(luxorpillar01_lvs) (54)
	CreateDynamicObject(8397,1085.0905762,5542.8598633,37.6900406,0.0000000,39.9298096,270.0000000); //object(luxorpillar01_lvs) (55)
	CreateDynamicObject(8397,1113.1306152,5542.9838867,37.6900406,0.0000000,39.9243164,270.0000000); //object(luxorpillar01_lvs) (56)
	CreateDynamicObject(8397,1141.1706543,5543.1079102,37.6900406,0.0000000,39.9188232,270.0000000); //object(luxorpillar01_lvs) (57)
	CreateDynamicObject(8397,1169.2106934,5543.2319336,37.6900406,0.0000000,39.9133301,270.0000000); //object(luxorpillar01_lvs) (58)
	CreateDynamicObject(8397,1197.2507324,5543.3559570,37.6900406,0.0000000,39.9078369,270.0000000); //object(luxorpillar01_lvs) (59)
	CreateDynamicObject(17031,1214.2742920,5108.3720703,0.0000000,0.0000000,0.0000000,180.0000000); //object(cunt_rockgp2_13) (1)
	CreateDynamicObject(17031,1214.6245117,5153.0278320,0.0000000,0.0000000,0.0000000,179.9945068); //object(cunt_rockgp2_13) (2)
	CreateDynamicObject(17031,1214.9747314,5197.6835938,0.0000000,0.0000000,0.0000000,179.9890137); //object(cunt_rockgp2_13) (3)
	CreateDynamicObject(17031,1215.3249512,5242.3393555,0.0000000,0.0000000,0.0000000,179.9835205); //object(cunt_rockgp2_13) (4)
	CreateDynamicObject(17031,1215.6751709,5286.9951172,0.0000000,0.0000000,0.0000000,179.9780273); //object(cunt_rockgp2_13) (5)
	CreateDynamicObject(17031,1216.4395752,5329.4399414,0.0000000,0.0000000,0.0000000,179.9725342); //object(cunt_rockgp2_13) (6)
	CreateDynamicObject(17031,1216.3756104,5376.3066406,0.0000000,0.0000000,0.0000000,179.9670410); //object(cunt_rockgp2_13) (7)
	CreateDynamicObject(17031,1216.7258301,5420.9624023,0.0000000,0.0000000,0.0000000,179.9615479); //object(cunt_rockgp2_13) (8)
	CreateDynamicObject(17031,1217.0760498,5465.6181641,0.0000000,0.0000000,0.0000000,179.9560547); //object(cunt_rockgp2_13) (9)
	CreateDynamicObject(17031,1043.7940674,5122.7978516,0.0000000,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_13) (23)
	CreateDynamicObject(17031,1043.9458008,5166.7539062,0.0000000,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_13) (30)
	CreateDynamicObject(17031,1044.0975342,5210.7099609,0.0000000,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_13) (10)
	CreateDynamicObject(17031,1044.2492676,5254.6660156,0.0000000,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_13) (11)
	CreateDynamicObject(17031,1044.4003906,5298.6220703,0.0000000,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_13) (12)
	CreateDynamicObject(17031,1044.5527344,5342.5781250,0.0000000,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_13) (13)
	CreateDynamicObject(17031,1044.7044678,5386.5341797,0.0000000,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_13) (14)
	CreateDynamicObject(17031,1044.8562012,5430.4902344,0.0000000,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_13) (15)
	CreateDynamicObject(17031,1045.0078125,5474.4462891,0.0000000,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_13) (16)
	CreateDynamicObject(17031,1076.3820801,5505.5664062,0.0000000,0.0000000,0.0000000,270.0000000); //object(cunt_rockgp2_13) (27)
	CreateDynamicObject(17031,1127.3979492,5505.5458984,0.0000000,0.0000000,0.0000000,270.0000000); //object(cunt_rockgp2_13) (17)
	CreateDynamicObject(17031,1176.4112549,5503.6972656,0.0000000,0.0000000,0.0000000,270.0000000); //object(cunt_rockgp2_13) (18)
	CreateDynamicObject(17031,1206.9663086,5491.5698242,0.0000000,0.0000000,0.0000000,227.9999847); //object(cunt_rockgp2_13) (19)
	CreateDynamicObject(17031,1062.8486328,5498.7998047,0.0000000,0.0000000,0.0000000,314.0000000); //object(cunt_rockgp2_13) (20)
	CreateDynamicObject(17031,1026.7778320,5095.2900391,0.0000000,0.0000000,0.0000000,270.0000000); //object(cunt_rockgp2_13) (21)
	CreateDynamicObject(17031,980.6954956,5093.9843750,0.0000000,0.0000000,0.0000000,270.0000000); //object(cunt_rockgp2_13) (22)
	CreateDynamicObject(17031,1244.0324707,5092.0229492,0.0000000,0.0000000,0.0000000,270.0000000); //object(cunt_rockgp2_13) (24)
	CreateDynamicObject(17031,1286.6556396,5090.1918945,0.0000000,0.0000000,0.0000000,270.0000000); //object(cunt_rockgp2_13) (25)
	CreateDynamicObject(8392,1117.0305176,5336.6416016,-52.8911591,0.0000000,90.0000000,90.0000000); //object(ballys02_lvs) (46)
	CreateDynamicObject(8392,1132.0491943,5407.2373047,-52.9161606,0.0000000,90.0000000,180.0000000); //object(ballys02_lvs) (47)
	CreateDynamicObject(8392,1156.8085938,5388.6459961,-52.8911591,0.0000000,90.0000000,270.0000000); //object(ballys02_lvs) (49)
	CreateDynamicObject(8392,1117.0003662,5388.5551758,-52.8911591,0.0000000,90.0000000,270.0000000); //object(ballys02_lvs) (50)
	CreateDynamicObject(8392,1135.5997314,5373.5029297,-52.9161606,0.0000000,90.0000000,0.0000000); //object(ballys02_lvs) (55)
	CreateDynamicObject(17031,1112.0491943,5296.4106445,-11.7099991,0.0000000,0.0000000,72.0000000); //object(cunt_rockgp2_13) (26)
	CreateDynamicObject(17031,1147.5310059,5292.1201172,-11.7099991,0.0000000,0.0000000,93.9978027); //object(cunt_rockgp2_13) (28)
	CreateDynamicObject(17031,1178.4437256,5315.3408203,-11.7099991,0.0000000,0.0000000,165.9941406); //object(cunt_rockgp2_13) (29)
	CreateDynamicObject(17031,1183.2194824,5361.3544922,-11.7099991,0.0000000,0.0000000,175.9924316); //object(cunt_rockgp2_13) (31)
	CreateDynamicObject(17031,1181.2441406,5408.7509766,-11.7099991,0.0000000,0.0000000,199.9899902); //object(cunt_rockgp2_13) (32)
	CreateDynamicObject(17031,1151.4407959,5429.3437500,-11.7099991,0.0000000,0.0000000,261.9896240); //object(cunt_rockgp2_13) (33)
	CreateDynamicObject(17031,1110.2156982,5428.0205078,-11.7099991,0.0000000,0.0000000,293.9854736); //object(cunt_rockgp2_13) (34)
	CreateDynamicObject(17031,1088.3522949,5397.3525391,-11.7099991,0.0000000,0.0000000,357.9831543); //object(cunt_rockgp2_13) (35)
	CreateDynamicObject(17031,1086.6242676,5354.6328125,-11.7099991,0.0000000,0.0000000,357.9785156); //object(cunt_rockgp2_13) (36)
	CreateDynamicObject(17031,1089.4407959,5316.1679688,-11.7099991,0.0000000,0.0000000,13.9785156); //object(cunt_rockgp2_13) (37)
	CreateDynamicObject(726,1130.0985107,5290.1523438,3.4518204,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (11)
	CreateDynamicObject(726,1181.5491943,5333.9487305,2.8518190,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (12)
	CreateDynamicObject(726,1184.7822266,5394.4658203,3.4518204,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (14)
	CreateDynamicObject(726,1132.5617676,5425.7773438,3.4518204,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (15)
	CreateDynamicObject(726,1086.1489258,5390.3417969,3.4518204,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (16)
	CreateDynamicObject(726,1087.3081055,5335.1396484,3.4518204,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (17)
	CreateDynamicObject(8392,1143.8725586,5342.1508789,-52.9411621,0.0000000,90.0000000,126.7494507); //object(ballys02_lvs) (60)
	CreateDynamicObject(18228,1172.2736816,5618.2363281,61.2722359,27.1790466,283.2152710,38.7920837); //object(cunt_rockgp2_21) (16)
	CreateDynamicObject(18228,1171.9570312,5626.4160156,85.4622345,28.0678101,281.0357056,43.4771423); //object(cunt_rockgp2_21) (17)
	CreateDynamicObject(18228,1151.8822021,5629.1894531,108.6222305,39.2288818,56.9529114,295.7896729); //object(cunt_rockgp2_21) (18)
	CreateDynamicObject(18228,1117.5114746,5630.1196289,106.7022324,51.7871094,38.1945496,312.2435913); //object(cunt_rockgp2_21) (19)
	CreateDynamicObject(18228,1091.0017090,5629.8725586,103.2022324,51.7840576,38.1939697,312.2424316); //object(cunt_rockgp2_21) (20)
	CreateDynamicObject(18228,1081.9934082,5621.7890625,70.3722382,27.1746826,283.2110596,64.7871094); //object(cunt_rockgp2_21) (21)
	CreateDynamicObject(18228,1086.9582520,5615.6269531,35.0822449,27.1691895,283.2110596,64.7863770); //object(cunt_rockgp2_21) (22)
	CreateDynamicObject(18228,1110.1217041,5610.5507812,35.0822449,27.1691895,283.2110596,64.7863770); //object(cunt_rockgp2_21) (23)
	CreateDynamicObject(18228,1128.2235107,5611.4248047,33.0822449,27.1691895,283.2110596,64.7863770); //object(cunt_rockgp2_21) (24)
	CreateDynamicObject(18228,1147.5955811,5608.8266602,33.0822449,21.1985168,284.0267334,57.3545227); //object(cunt_rockgp2_21) (25)
	CreateDynamicObject(18228,1071.7172852,5574.5317383,34.5522461,333.8201904,337.5970154,323.6864624); //object(cunt_rockgp2_21) (27)
	CreateDynamicObject(18228,1103.4305420,5573.9199219,34.5522461,333.8195801,337.5933838,323.6846924); //object(cunt_rockgp2_21) (28)
	CreateDynamicObject(18228,1137.3934326,5573.2646484,34.5522461,333.8195801,337.5933838,323.6846924); //object(cunt_rockgp2_21) (29)
	CreateDynamicObject(18228,1173.4957275,5572.5683594,34.5522461,333.8195801,337.5933838,323.6846924); //object(cunt_rockgp2_21) (30)
	CreateDynamicObject(18228,1199.6103516,5572.0644531,34.5522461,333.8195801,337.5933838,323.6846924); //object(cunt_rockgp2_21) (31)
	CreateDynamicObject(18228,1183.8365479,5588.6015625,34.5522461,333.8195801,337.5933838,323.6846924); //object(cunt_rockgp2_21) (32)
	CreateDynamicObject(18228,1198.3935547,5588.3203125,34.5522461,333.8195801,337.5933838,323.6846924); //object(cunt_rockgp2_21) (33)
	CreateDynamicObject(18228,1096.5023193,5590.2861328,34.5522461,333.8195801,337.5933838,323.6846924); //object(cunt_rockgp2_21) (34)
	CreateDynamicObject(18228,1069.7968750,5595.5537109,40.8022461,333.8195801,337.5933838,323.6846924); //object(cunt_rockgp2_21) (35)
	CreateDynamicObject(18228,1059.0882568,5617.5429688,70.3722382,27.1691895,283.2110596,64.7863770); //object(cunt_rockgp2_21) (36)
	CreateDynamicObject(18228,1058.7102051,5621.0224609,93.4622345,27.1691895,283.2110596,64.7863770); //object(cunt_rockgp2_21) (37)
	CreateDynamicObject(18228,1195.0360107,5616.9008789,61.2722359,27.1746826,283.2110596,38.7872314); //object(cunt_rockgp2_21) (38)
	CreateDynamicObject(18228,1188.2210693,5623.1328125,94.2422333,27.1746826,283.2110596,58.7871704); //object(cunt_rockgp2_21) (39)
	CreateDynamicObject(18228,1090.3352051,5648.1284180,51.2422409,0.0000000,90.0000000,26.9997559); //object(cunt_rockgp2_21) (41)
	CreateDynamicObject(18228,1093.8261719,5648.3808594,78.1822357,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (42)
	CreateDynamicObject(18228,1091.8890381,5683.3212891,38.6822433,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (43)
	CreateDynamicObject(18228,1087.2342529,5704.4575195,17.1322479,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (44)
	CreateDynamicObject(18228,1088.7329102,5740.2011719,7.2122498,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (45)
	CreateDynamicObject(18228,1090.7751465,5767.5292969,7.2122498,0.0000000,90.0000000,27.7485046); //object(cunt_rockgp2_21) (46)
	CreateDynamicObject(18228,1090.6306152,5795.8647461,8.8122482,0.0000000,86.0000000,25.7457886); //object(cunt_rockgp2_21) (47)
	CreateDynamicObject(18228,1092.3457031,5823.0000000,7.5622482,0.0000000,85.9954834,25.7409668); //object(cunt_rockgp2_21) (48)
	CreateDynamicObject(18228,1092.1324463,5853.2319336,7.5622482,0.0000000,72.9954834,25.7409668); //object(cunt_rockgp2_21) (49)
	CreateDynamicObject(18228,1090.1876221,5883.2729492,7.5622482,0.0000000,72.9931641,25.7354736); //object(cunt_rockgp2_21) (50)
	CreateDynamicObject(18228,1090.7714844,5905.6884766,10.3122482,0.0000000,72.9876709,25.7299805); //object(cunt_rockgp2_21) (51)
	CreateDynamicObject(18228,1093.1743164,5896.5615234,35.2922440,0.0000000,72.9931641,25.7354736); //object(cunt_rockgp2_21) (52)
	CreateDynamicObject(18228,1090.3817139,5868.5908203,35.0422440,0.0000000,72.9931641,25.7354736); //object(cunt_rockgp2_21) (53)
	CreateDynamicObject(18228,1093.4768066,5674.2709961,78.1822357,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (54)
	CreateDynamicObject(18228,1094.4667969,5715.8061523,45.8922424,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (57)
	CreateDynamicObject(18228,1093.1669922,5739.4726562,45.8922424,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (58)
	CreateDynamicObject(18228,1097.9774170,5767.0976562,45.8922424,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (59)
	CreateDynamicObject(18228,1099.9493408,5796.9506836,42.8922424,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (60)
	CreateDynamicObject(18228,1092.8237305,5844.1547852,36.9322433,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (62)
	CreateDynamicObject(18228,1088.2979736,5676.7641602,15.9522476,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (63)
	CreateDynamicObject(18228,1088.5104980,5643.7758789,17.7022476,0.0000000,90.0000000,26.9989014); //object(cunt_rockgp2_21) (64)
	CreateDynamicObject(18228,1169.8063965,5646.2197266,65.0222397,7.6328125,260.7128296,324.2118530); //object(cunt_rockgp2_21) (66)
	CreateDynamicObject(18228,1170.0556641,5669.7285156,49.9222412,7.6245117,260.7110596,324.2010498); //object(cunt_rockgp2_21) (67)
	CreateDynamicObject(18228,1169.4125977,5691.5966797,37.8622437,7.6300049,260.7110596,324.2065430); //object(cunt_rockgp2_21) (68)
	CreateDynamicObject(18228,1168.4011230,5715.0400391,25.4422455,7.6300049,260.7110596,329.2063599); //object(cunt_rockgp2_21) (69)
	CreateDynamicObject(18228,1166.1328125,5737.1484375,25.4422455,7.6245117,260.7110596,329.2053223); //object(cunt_rockgp2_21) (70)
	CreateDynamicObject(18228,1167.2534180,5757.2836914,15.4122467,49.6035156,46.4199219,220.3121796); //object(cunt_rockgp2_21) (71)
	CreateDynamicObject(18228,1163.1778564,5794.8999023,15.4122467,46.3347778,52.0735168,216.1041718); //object(cunt_rockgp2_21) (73)
	CreateDynamicObject(18228,1164.2622070,5834.3002930,15.4122467,46.8367615,51.2661133,216.6847992); //object(cunt_rockgp2_21) (74)
	CreateDynamicObject(18228,1162.1837158,5872.0258789,17.9122467,53.7672729,83.9597778,192.4337463); //object(cunt_rockgp2_21) (75)
	CreateDynamicObject(18228,1164.5854492,5896.5986328,20.1622467,53.7670898,83.9575195,192.4310303); //object(cunt_rockgp2_21) (76)
	CreateDynamicObject(18228,1162.8775635,5891.2495117,44.3522415,53.7670898,83.9575195,192.4310303); //object(cunt_rockgp2_21) (77)
	CreateDynamicObject(18228,1164.2578125,5866.1708984,41.6022415,53.7670898,83.9575195,192.4310303); //object(cunt_rockgp2_21) (78)
	CreateDynamicObject(18228,1164.3143311,5823.0253906,41.6022415,53.7670898,83.9575195,192.4310303); //object(cunt_rockgp2_21) (79)
	CreateDynamicObject(18228,1164.3059082,5779.1127930,41.6022415,53.7670898,83.9575195,192.4310303); //object(cunt_rockgp2_21) (80)
	CreateDynamicObject(18228,1165.9730225,5748.8330078,41.6022415,53.7670898,83.9575195,192.4310303); //object(cunt_rockgp2_21) (81)
	CreateDynamicObject(18228,1142.0322266,5656.4428711,84.6022339,0.0000000,189.9999695,26.9988708); //object(cunt_rockgp2_21) (83)
	CreateDynamicObject(18228,1114.9053955,5658.6064453,84.6022339,0.0000000,189.9975586,26.9934082); //object(cunt_rockgp2_21) (84)
	CreateDynamicObject(18228,1114.8214111,5684.5141602,64.1822357,0.0000000,189.9975586,24.9934082); //object(cunt_rockgp2_21) (85)
	CreateDynamicObject(18228,1143.7312012,5675.9257812,67.6822357,0.0000000,189.9975586,24.9884033); //object(cunt_rockgp2_21) (86)
	CreateDynamicObject(18228,1146.8305664,5697.3046875,53.1322403,15.9900208,182.0780029,24.4157410); //object(cunt_rockgp2_21) (87)
	CreateDynamicObject(18228,1113.4990234,5700.3437500,55.3822403,15.9851074,182.0764160,24.4116211); //object(cunt_rockgp2_21) (88)
	CreateDynamicObject(18228,1108.1894531,5719.5634766,58.9822388,15.9851074,182.0764160,24.4116211); //object(cunt_rockgp2_21) (89)
	CreateDynamicObject(18228,1145.4808350,5708.0581055,58.9822388,15.9851074,182.0764160,24.4116211); //object(cunt_rockgp2_21) (90)
	CreateDynamicObject(18228,1139.0610352,5723.5507812,58.9822388,3.9926453,182.0009308,24.8442993); //object(cunt_rockgp2_21) (91)
	CreateDynamicObject(18228,1114.5009766,5738.1015625,58.9822388,3.9880371,181.9995117,24.8400879); //object(cunt_rockgp2_21) (92)
	CreateDynamicObject(18228,1137.2407227,5756.7338867,54.7322388,3.9880371,181.9995117,24.8400879); //object(cunt_rockgp2_21) (93)
	CreateDynamicObject(18228,1119.4674072,5773.0874023,51.7322388,3.9880371,181.9995117,24.8400879); //object(cunt_rockgp2_21) (94)
	CreateDynamicObject(18228,1126.7183838,5786.5786133,51.7322388,3.9880371,181.9995117,24.8400879); //object(cunt_rockgp2_21) (95)
	CreateDynamicObject(18228,1127.5078125,5806.4042969,51.7322388,3.9880371,181.9995117,24.8400879); //object(cunt_rockgp2_21) (96)
	CreateDynamicObject(18228,1126.1085205,5821.5126953,51.7322388,3.9880371,181.9995117,24.8400879); //object(cunt_rockgp2_21) (97)
	CreateDynamicObject(18228,1123.6010742,5848.5898438,47.2322388,3.9880371,181.9995117,24.8400879); //object(cunt_rockgp2_21) (98)
	CreateDynamicObject(18228,1121.2841797,5873.6054688,48.3022385,3.9880371,181.9995117,24.8400879); //object(cunt_rockgp2_21) (99)
	CreateDynamicObject(18228,1120.9467773,5894.7631836,50.4422379,3.9880371,181.9995117,24.8400879); //object(cunt_rockgp2_21) (100)
	CreateDynamicObject(18228,1126.0816650,5914.6777344,53.5822372,3.9685974,186.0091095,24.5617676); //object(cunt_rockgp2_21) (101)
	CreateDynamicObject(3458,737.1591797,5404.0742188,3.3411903,25.7135010,0.0000000,0.0000000); //object(vgncarshade1) (232)
	CreateDynamicObject(3458,732.4003906,5394.2871094,-0.1044121,12.8540039,0.0000000,0.0000000); //object(vgncarshade1) (436)
	CreateDynamicObject(3458,729.1865234,5383.9199219,-1.2724991,0.0000000,0.0000000,0.0000000); //object(vgncarshade1) (713)
	CreateDynamicObject(3458,724.1865234,5373.7153320,-0.4693832,-9.0000000,0.0000000,0.0000000); //object(vgncarshade1) (446)
	CreateDynamicObject(3458,719.1865234,5363.7622070,1.9201927,-18.0000000,0.0000000,0.0000000); //object(vgncarshade1) (448)
	CreateDynamicObject(3458,714.1865234,5354.3051758,5.8373871,-27.0000000,0.0000000,0.0000000); //object(vgncarshade1) (475)
	CreateDynamicObject(3458,709.1865234,5345.5771484,11.1857452,-36.0000000,0.0000000,0.0000000); //object(vgncarshade1) (477)
	CreateDynamicObject(3458,704.1865234,5337.7939453,17.8335724,-45.0000000,0.0000000,0.0000000); //object(vgncarshade1) (696)
	CreateDynamicObject(3458,699.1865234,5331.1459961,25.6171799,-54.0000000,0.0000000,0.0000000); //object(vgncarshade1) (703)
	CreateDynamicObject(3458,694.1865234,5325.7968750,34.3449020,296.9989014,0.0000000,0.0000000); //object(vgncarshade1) (705)
	CreateDynamicObject(3458,689.1865234,5321.8803711,43.8018494,-72.0000000,0.0000000,0.0000000); //object(vgncarshade1) (707)
	CreateDynamicObject(3458,684.1865234,5319.4907227,53.7551422,-81.0000000,0.0000000,0.0000000); //object(vgncarshade1) (709)
	CreateDynamicObject(8558,758.1582031,5378.7534180,-1.0714111,-4.5000000,0.0000000,0.0000000); //object(vgshseing28) (397)
	CreateDynamicObject(8558,753.1582031,5368.6435547,0.5298538,-13.5000000,0.0000000,0.0000000); //object(vgshseing28) (399)
	CreateDynamicObject(8558,748.1582031,5358.9086914,3.6929703,-22.5000000,0.0000000,0.0000000); //object(vgshseing28) (401)
	CreateDynamicObject(8558,743.1582031,5349.7880859,8.3400345,-31.5000000,0.0000000,0.0000000); //object(vgshseing28) (403)
	CreateDynamicObject(8558,738.1582031,5341.5068359,14.3566284,-40.5000000,0.0000000,0.0000000); //object(vgshseing28) (405)
	CreateDynamicObject(8558,733.1582031,5334.2685547,21.5946045,310.4956055,0.0000000,0.0000000); //object(vgshseing28) (407)
	CreateDynamicObject(8558,728.1582031,5328.2524414,29.8757401,-58.5000000,0.0000000,0.0000000); //object(vgshseing28) (444)
	CreateDynamicObject(8558,723.1582031,5323.6054688,38.9961166,-67.5000000,0.0000000,0.0000000); //object(vgshseing28) (810)
	CreateDynamicObject(8558,718.1582031,5320.4423828,48.7311707,-76.5000000,0.0000000,0.0000000); //object(vgshseing28) (812)
	CreateDynamicObject(8558,713.1582031,5318.8408203,58.8411942,274.4989014,0.0000000,0.0000000); //object(vgshseing28) (814)
	CreateDynamicObject(18228,1133.7966309,5593.1513672,34.5522461,333.8195801,337.5933838,323.6846924); //object(cunt_rockgp2_21) (102)
	CreateDynamicObject(18228,1175.3668213,5634.6035156,78.1222382,7.6300049,260.7110596,324.2065430); //object(cunt_rockgp2_21) (103)
	CreateDynamicObject(3458,1130.3349609,6042.0234375,-0.9381714,358.7036133,0.0000000,0.0000000); //object(vgncarshade1) (219)
	CreateDynamicObject(3458,1130.3349609,6036.9038086,-0.7820740,357.8036194,0.0000000,0.0000000); //object(vgncarshade1) (23)
	CreateDynamicObject(3458,1130.3349609,6031.7875977,-0.5455933,356.9036255,0.0000000,0.0000000); //object(vgncarshade1) (31)
	CreateDynamicObject(3458,1130.3349609,6026.6752930,-0.2287598,356.0036316,0.0000000,0.0000000); //object(vgncarshade1) (32)
	CreateDynamicObject(3458,1130.3349609,6021.5688477,0.1683350,355.1036377,0.0000000,0.0000000); //object(vgncarshade1) (53)
	CreateDynamicObject(3458,1130.3349609,6016.4687500,0.6455688,354.2036438,0.0000000,0.0000000); //object(vgncarshade1) (55)
	CreateDynamicObject(3458,1130.3349609,6011.3774414,1.2028809,353.3036499,0.0000000,0.0000000); //object(vgncarshade1) (173)
	CreateDynamicObject(3458,1130.3349609,6006.2954102,1.8400574,352.4036560,0.0000000,0.0000000); //object(vgncarshade1) (220)
	CreateDynamicObject(3458,1130.3997803,6390.0859375,101.1169662,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (438)
	CreateDynamicObject(3458,1130.3994141,6390.0859375,96.0169601,90.0000000,179.9945068,179.9945068); //object(vgncarshade1) (438)
	CreateDynamicObject(3458,1130.3990479,6390.0859375,90.9169540,90.0000000,360.0000000,360.0000000); //object(vgncarshade1) (432)
	CreateDynamicObject(3458,1130.3986816,6390.0859375,85.8169479,90.0000000,540.0000000,540.0000000); //object(vgncarshade1) (433)
	CreateDynamicObject(3458,1130.3983154,6390.0859375,80.7169418,90.0000000,720.0000000,720.0000000); //object(vgncarshade1) (434)
	CreateDynamicObject(3458,1130.3974609,6390.0859375,75.6169357,90.0000000,180.0000000,180.0000000); //object(vgncarshade1) (435)
	CreateDynamicObject(3458,1130.3974609,6390.0859375,70.5169296,90.0000000,0.0000000,0.0000000); //object(vgncarshade1) (437)
	CreateDynamicObject(8392,1118.9650879,6441.7587891,42.0824966,0.0000000,0.0000000,90.0000000); //object(ballys02_lvs) (2)
	CreateDynamicObject(8392,1141.8673096,6441.8041992,42.0824966,0.0000000,0.0000000,90.0000000); //object(ballys02_lvs) (3)
	CreateDynamicObject(3437,1130.2862549,6388.8784180,62.2551994,0.0000000,0.0000000,0.0000000); //object(ballypllr01_lvs) (1)
	CreateDynamicObject(3437,1130.2861328,6388.8779297,50.5452003,0.0000000,0.0000000,0.0000000); //object(ballypllr01_lvs) (3)
	CreateDynamicObject(3437,1130.2861328,6388.8779297,38.7702065,0.0000000,0.0000000,0.0000000); //object(ballypllr01_lvs) (4)
	CreateDynamicObject(3437,1130.2861328,6388.8779297,27.0451984,0.0000000,0.0000000,0.0000000); //object(ballypllr01_lvs) (5)
	CreateDynamicObject(3437,1130.2861328,6388.8779297,15.3201942,0.0000000,0.0000000,0.0000000); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(8392,1195.9736328,6418.4707031,97.6975250,0.0000000,0.0000000,44.9945068); //object(ballys02_lvs) (19)
	CreateDynamicObject(8392,1195.9736328,6418.4707031,42.1625519,0.0000000,0.0000000,44.9945068); //object(ballys02_lvs) (20)
	CreateDynamicObject(8392,1064.7690430,6418.3808594,42.1625519,180.0000000,180.0000000,315.0000000); //object(ballys02_lvs) (21)
	CreateDynamicObject(8392,1064.7685547,6418.3808594,97.7675629,179.9945068,179.9945068,315.0000000); //object(ballys02_lvs) (22)
	CreateDynamicObject(3437,1109.6231689,6388.3681641,18.3201942,0.0000000,0.0000000,23.0000000); //object(ballypllr01_lvs) (7)
	CreateDynamicObject(3437,1109.6230469,6388.3681641,29.9951954,0.0000000,0.0000000,22.9998779); //object(ballypllr01_lvs) (8)
	CreateDynamicObject(3437,1109.6230469,6388.3681641,41.6351662,0.0000000,0.0000000,22.9998779); //object(ballypllr01_lvs) (9)
	CreateDynamicObject(3437,1109.6230469,6388.3681641,53.2101479,0.0000000,0.0000000,22.9998779); //object(ballypllr01_lvs) (10)
	CreateDynamicObject(3437,1109.6230469,6388.3681641,64.8702011,0.0000000,0.0000000,22.9998779); //object(ballypllr01_lvs) (11)
	CreateDynamicObject(3437,1109.6230469,6388.3681641,76.5501862,0.0000000,0.0000000,22.9998779); //object(ballypllr01_lvs) (12)
	CreateDynamicObject(3437,1109.6230469,6388.3681641,88.2651978,0.0000000,0.0000000,22.9998779); //object(ballypllr01_lvs) (13)
	CreateDynamicObject(3437,1109.6352539,6388.3461914,97.7852173,0.0000000,0.0000000,22.9998779); //object(ballypllr01_lvs) (14)
	CreateDynamicObject(3437,1150.9355469,6388.5400391,97.8420258,0.0000000,0.0000000,336.9946289); //object(ballypllr01_lvs) (15)
	CreateDynamicObject(3437,1150.9355469,6388.5400391,86.1320343,0.0000000,0.0000000,336.9946289); //object(ballypllr01_lvs) (16)
	CreateDynamicObject(3437,1150.9355469,6388.5400391,74.4320297,0.0000000,0.0000000,336.9946289); //object(ballypllr01_lvs) (17)
	CreateDynamicObject(3437,1150.9355469,6388.5400391,62.7270660,0.0000000,0.0000000,336.9946289); //object(ballypllr01_lvs) (27)
	CreateDynamicObject(3437,1150.9355469,6388.5400391,51.0120850,0.0000000,0.0000000,336.9946289); //object(ballypllr01_lvs) (28)
	CreateDynamicObject(3437,1150.9355469,6388.5400391,39.2871399,0.0000000,0.0000000,336.9946289); //object(ballypllr01_lvs) (29)
	CreateDynamicObject(3437,1150.9355469,6388.5400391,27.5471458,0.0000000,0.0000000,336.9946289); //object(ballypllr01_lvs) (30)
	CreateDynamicObject(3437,1150.9355469,6388.5400391,15.8471489,0.0000000,0.0000000,336.9946289); //object(ballypllr01_lvs) (31)
	CreateDynamicObject(3437,1115.4187012,6389.1547852,68.4651413,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (32)
	CreateDynamicObject(3437,1127.0761719,6389.1640625,68.4651413,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1138.6549072,6389.1499023,68.4651413,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (34)
	CreateDynamicObject(3437,1149.4090576,6389.1933594,68.4651413,90.0000000,270.0000000,0.0000000); //object(ballypllr01_lvs) (35)
	CreateDynamicObject(3437,1122.1406250,6389.6811523,79.6651993,0.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (36)
	CreateDynamicObject(3437,1122.6160889,6389.6899414,79.6651993,0.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (37)
	CreateDynamicObject(3437,1122.6152344,6389.6894531,91.2651825,0.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (38)
	CreateDynamicObject(3437,1122.1406250,6389.6806641,91.3501816,0.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (39)
	CreateDynamicObject(3437,1128.7498779,6389.7065430,97.0751648,90.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (40)
	CreateDynamicObject(3437,1128.7490234,6389.7060547,96.6251984,90.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (41)
	CreateDynamicObject(3437,1128.7490234,6389.7060547,85.7001724,90.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (42)
	CreateDynamicObject(3437,1128.7490234,6389.7060547,86.2502060,90.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (43)
	CreateDynamicObject(3437,1134.8395996,6389.7324219,91.3151855,0.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (44)
	CreateDynamicObject(3437,1135.3143311,6389.7324219,91.3151855,0.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (45)
	CreateDynamicObject(3437,1127.4335938,6389.7143555,80.6601791,315.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (46)
	CreateDynamicObject(3437,1127.7758789,6389.7319336,80.9601974,315.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (47)
	CreateDynamicObject(3437,1129.4647217,6389.7382812,78.6352539,315.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (48)
	CreateDynamicObject(3437,1129.7888184,6389.7177734,78.9352722,315.0000000,0.0000000,90.0000000); //object(ballypllr01_lvs) (49)
	CreateDynamicObject(3437,1115.4179688,6389.1542969,103.1451645,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (50)
	CreateDynamicObject(3437,1127.0888672,6389.1660156,103.1451645,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (51)
	CreateDynamicObject(3437,1138.7796631,6389.1772461,103.1451645,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (52)
	CreateDynamicObject(3437,1150.4342041,6389.0649414,103.1451645,90.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (53)
	CreateDynamicObject(8392,1203.7578125,6399.5683594,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (23)
	CreateDynamicObject(8392,1056.9570312,6399.5380859,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (39)
	CreateDynamicObject(8392,1049.1677246,6402.8173828,97.7675629,179.9945068,179.9945068,315.0000000); //object(ballys02_lvs) (48)
	CreateDynamicObject(8392,1049.1933594,6402.8095703,42.1625519,179.9945068,179.9945068,315.0000000); //object(ballys02_lvs) (51)
	CreateDynamicObject(8392,1033.6252441,6387.2446289,42.1625519,179.9945068,179.9945068,315.0000000); //object(ballys02_lvs) (52)
	CreateDynamicObject(8392,1033.5159912,6387.2475586,97.7675629,179.9945068,179.9945068,315.0000000); //object(ballys02_lvs) (53)
	CreateDynamicObject(8392,1211.5045166,6402.9375000,42.1625519,0.0000000,0.0000000,44.9945068); //object(ballys02_lvs) (54)
	CreateDynamicObject(8392,1227.0988770,6387.3442383,42.1625519,0.0000000,0.0000000,44.9945068); //object(ballys02_lvs) (56)
	CreateDynamicObject(8392,1211.5759277,6402.9125977,97.6975250,0.0000000,0.0000000,44.9945068); //object(ballys02_lvs) (57)
	CreateDynamicObject(8392,1227.1770020,6387.3178711,97.6975250,0.0000000,0.0000000,44.9945068); //object(ballys02_lvs) (58)
	CreateDynamicObject(17026,1076.5113525,6357.3725586,0.2200041,0.0000000,0.0000000,280.0000000); //object(cunt_rockgp2_) (1)
	CreateDynamicObject(17026,1104.8653564,6386.8076172,0.2200041,0.0000000,0.0000000,279.9975586); //object(cunt_rockgp2_) (2)
	CreateDynamicObject(17026,1132.9892578,6389.7470703,0.2200041,0.0000000,0.0000000,235.9975586); //object(cunt_rockgp2_) (3)
	CreateDynamicObject(17026,1164.8385010,6375.5625000,0.2200041,0.0000000,0.0000000,191.9973297); //object(cunt_rockgp2_) (4)
	CreateDynamicObject(17026,1186.7093506,6354.1386719,0.2200041,0.0000000,0.0000000,191.9970703); //object(cunt_rockgp2_) (5)
	CreateDynamicObject(17026,1215.7211914,6363.5791016,0.2200041,0.0000000,0.0000000,285.9970703); //object(cunt_rockgp2_) (6)
	CreateDynamicObject(17026,1244.8204346,6393.0068359,0.2200041,0.0000000,0.0000000,285.9960938); //object(cunt_rockgp2_) (7)
	CreateDynamicObject(17026,1048.9537354,6355.4160156,0.2200041,0.0000000,0.0000000,193.9975586); //object(cunt_rockgp2_) (8)
	CreateDynamicObject(17026,1019.9822998,6382.5810547,0.2200041,0.0000000,0.0000000,179.9965820); //object(cunt_rockgp2_) (9)
	CreateDynamicObject(18228,1052.8630371,6044.4941406,1.5722497,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_21) (51)
	CreateDynamicObject(18228,1216.3419189,6059.5571289,1.5722497,0.0000000,0.0000000,308.0000000); //object(cunt_rockgp2_21) (51)
	CreateDynamicObject(731,1054.2576904,6029.8837891,2.9300003,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (4)
	CreateDynamicObject(731,1201.7775879,6055.5849609,5.4300003,0.0000000,0.0000000,316.0000000); //object(tree_hipoly09) (5)
	CreateDynamicObject(18228,1201.8332520,6149.2333984,-0.4277503,0.0000000,0.0000000,249.9962158); //object(cunt_rockgp2_21) (51)
	CreateDynamicObject(18228,1047.2779541,6151.7456055,-0.4277503,0.0000000,0.0000000,47.9938965); //object(cunt_rockgp2_21) (51)
	CreateDynamicObject(731,1055.5224609,6143.7890625,2.9300003,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,1192.1777344,6151.8286133,2.9300003,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (7)
	CreateDynamicObject(18228,1211.8818359,6245.0751953,-0.4277503,0.0000000,0.0000000,249.9938965); //object(cunt_rockgp2_21) (51)
	CreateDynamicObject(731,1197.5458984,6252.5361328,2.9300003,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (8)
	CreateDynamicObject(18228,1071.1923828,6248.5556641,-0.4277503,0.0000000,0.0000000,17.9901123); //object(cunt_rockgp2_21) (51)
	CreateDynamicObject(731,1068.9133301,6244.2050781,11.2799988,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (9)
	CreateDynamicObject(3458,1130.3972168,6365.1381836,47.7118912,343.3900146,0.0000000,0.0000000); //object(vgncarshade1) (351)
	CreateDynamicObject(3437,1116.1558838,6217.3837891,76.7801132,0.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1116.2285156,6215.5112305,76.7801132,0.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1127.9523926,6215.5039062,76.7801132,0.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1127.8966064,6217.3774414,76.7801132,0.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1139.6303711,6217.3833008,76.7801132,0.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1139.6842041,6215.5073242,76.7801132,0.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1144.6844482,6215.4985352,76.7551117,0.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1144.6827393,6217.3764648,76.7551117,0.0000000,90.0000000,0.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1144.8935547,6215.8691406,76.7801132,0.0000000,90.0000000,15.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1115.9556885,6217.0307617,76.7801132,0.0000000,90.0000000,14.9963379); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1115.9554443,6215.8466797,76.7801132,0.0000000,90.0000000,345.0000000); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1144.8900146,6217.0239258,76.7801132,0.0000000,90.0000000,344.9981689); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1133.5902100,6215.8540039,76.7801132,0.0000000,90.0000000,344.9981689); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1127.2608643,6217.0131836,76.7801132,0.0000000,90.0000000,344.9981689); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1127.2502441,6215.8515625,76.7801132,0.0000000,90.0000000,14.9963379); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(3437,1133.5786133,6217.0244141,76.7801132,0.0000000,90.0000000,14.9963379); //object(ballypllr01_lvs) (33)
	CreateDynamicObject(8392,1056.9376221,6420.7666016,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (39)
	CreateDynamicObject(8392,1203.7822266,6420.7719727,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (23)
	CreateDynamicObject(8392,1056.9182129,6441.9951172,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (61)
	CreateDynamicObject(8392,1056.8988037,6463.2236328,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (62)
	CreateDynamicObject(8392,1056.8793945,6484.4521484,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (63)
	CreateDynamicObject(8392,1056.8599854,6505.6806641,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (64)
	CreateDynamicObject(8392,1056.8405762,6526.9091797,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (65)
	CreateDynamicObject(8392,1056.8211670,6548.1376953,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (66)
	CreateDynamicObject(8392,1056.8017578,6569.3662109,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (67)
	CreateDynamicObject(8392,1056.7075195,6586.3447266,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (68)
	CreateDynamicObject(8392,1203.8066406,6441.9755859,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (79)
	CreateDynamicObject(8392,1203.8310547,6463.1791992,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (71)
	CreateDynamicObject(8392,1203.8554688,6484.3828125,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (72)
	CreateDynamicObject(8392,1203.8798828,6505.5864258,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (73)
	CreateDynamicObject(8392,1203.9042969,6526.7900391,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (74)
	CreateDynamicObject(8392,1203.9287109,6547.9936523,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (75)
	CreateDynamicObject(8392,1203.9531250,6569.1972656,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (76)
	CreateDynamicObject(8392,1203.9775391,6590.4008789,97.6975250,0.0000000,0.0000000,0.0000000); //object(ballys02_lvs) (77)
	CreateDynamicObject(8392,1115.9023438,6443.9106445,150.6626740,0.0000000,180.0000000,270.0000000); //object(ballys02_lvs) (19)
	CreateDynamicObject(8392,1137.1508789,6443.8935547,150.6621246,0.0000000,179.9945068,270.0000000); //object(ballys02_lvs) (19)
	CreateDynamicObject(8392,1151.3562012,6443.9238281,150.6876068,0.0000000,179.9945068,270.0000000); //object(ballys02_lvs) (19)
	CreateDynamicObject(8392,1132.8378906,6404.7919922,174.1327057,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (23)
	CreateDynamicObject(8392,1132.8784180,6425.9682617,174.1327057,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (23)
	CreateDynamicObject(8392,1132.9183350,6447.1445312,174.1327057,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (100)
	CreateDynamicObject(8392,1132.9582520,6468.3208008,174.1327057,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (101)
	CreateDynamicObject(8392,1132.9981689,6489.4970703,174.1327057,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (102)
	CreateDynamicObject(8392,1133.0380859,6510.6733398,174.1327057,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (103)
	CreateDynamicObject(8392,1133.0780029,6531.8496094,174.1327057,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (104)
	CreateDynamicObject(8392,1133.1179199,6553.0258789,174.1327057,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (105)
	CreateDynamicObject(8392,1133.1578369,6574.2021484,174.1327057,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (106)
	CreateDynamicObject(8392,1132.4210205,6590.3798828,174.1826935,0.0000000,270.0000000,0.0000000); //object(ballys02_lvs) (107)
	CreateDynamicObject(8392,1056.6906738,6590.3784180,97.6975250,0.0000000,0.0000000,179.9945068); //object(ballys02_lvs) (108)
	CreateDynamicObject(8558,835.7998047,5505.8935547,-0.7673798,5.0207520,0.0000000,0.0000000); //object(vgshseing28) (393)
	CreateDynamicObject(8558,835.7998047,5510.9873047,-0.2301483,7.0207520,0.0000000,0.0000000); //object(vgshseing28) (394)
	CreateDynamicObject(8558,835.7998047,5516.0590820,0.4845428,9.0207520,0.0000000,0.0000000); //object(vgshseing28) (395)
	CreateDynamicObject(8558,835.7998047,5521.1030273,1.3757782,11.0207520,0.0000000,0.0000000); //object(vgshseing28) (396)
	CreateDynamicObject(8558,835.7998047,5526.1127930,2.4425201,13.0207520,0.0000000,0.0000000); //object(vgshseing28) (398)
	CreateDynamicObject(8558,835.7998047,5531.0820312,3.6834259,15.0207520,0.0000000,0.0000000); //object(vgshseing28) (400)
	CreateDynamicObject(8558,835.7998047,5536.0048828,5.0970154,17.0207520,0.0000000,0.0000000); //object(vgshseing28) (402)
	CreateDynamicObject(8558,835.7998047,5540.8759766,6.6815643,19.0207520,0.0000000,0.0000000); //object(vgshseing28) (404)
	CreateDynamicObject(8558,835.7998047,5545.6879883,8.4351196,21.0207520,0.0000000,0.0000000); //object(vgshseing28) (406)
	CreateDynamicObject(8558,835.7998047,5550.4365234,10.3555603,23.0207520,0.0000000,0.0000000); //object(vgshseing28) (443)
	CreateDynamicObject(8558,835.7998047,5555.1147461,12.4405518,25.0207520,0.0000000,0.0000000); //object(vgshseing28) (483)
	CreateDynamicObject(8558,835.7998047,5559.7177734,14.6875458,27.0207520,0.0000000,0.0000000); //object(vgshseing28) (578)
	CreateDynamicObject(8558,835.7998047,5564.2392578,17.0938110,29.0207520,0.0000000,0.0000000); //object(vgshseing28) (811)
	CreateDynamicObject(8558,835.7998047,5568.6738281,19.6563950,31.0207520,0.0000000,0.0000000); //object(vgshseing28) (813)
	CreateDynamicObject(8558,835.7998047,5573.0166016,22.3721924,33.0207520,0.0000000,0.0000000); //object(vgshseing28) (815)
	CreateDynamicObject(8558,835.7998047,5577.2622070,25.2379074,35.0207520,0.0000000,0.0000000); //object(vgshseing28) (816)
	CreateDynamicObject(8558,835.7998047,5581.4047852,28.2500229,37.0207520,0.0000000,0.0000000); //object(vgshseing28) (817)
	CreateDynamicObject(8558,835.7998047,5585.4399414,31.4048843,39.0207520,0.0000000,0.0000000); //object(vgshseing28) (818)
	CreateDynamicObject(6524,1130.4089355,6648.4008789,107.9181061,0.0000000,0.0000000,315.0000000); //object(rdsign01_law03) (1)
	CreateDynamicObject(7301,1139.4422607,6648.3891602,111.0487518,0.0000000,0.0000000,135.2471619); //object(vgsn_addboard03) (2)
	CreateDynamicObject(7301,1121.6973877,6648.0810547,111.0487518,0.0000000,0.0000000,135.2471924); //object(vgsn_addboard03) (3)
	CreateDynamicObject(8480,934.2476196,6948.9555664,-19.0625858,0.0000000,330.0000000,0.0000000); //object(csrspalace01_lvs) (6)
	CreateDynamicObject(8480,1327.2900391,6979.0937500,-19.0625858,0.0000000,329.9963379,179.9945068); //object(csrspalace01_lvs) (8)
	CreateDynamicObject(8480,1327.3507080,7091.6464844,-19.0625858,0.0000000,329.9963379,179.9945068); //object(csrspalace01_lvs) (9)
	CreateDynamicObject(8480,1327.3568115,7204.1577148,-19.0625858,0.0000000,329.9963379,179.9945068); //object(csrspalace01_lvs) (10)
	CreateDynamicObject(8480,1327.3577881,7316.7626953,-19.0625858,0.0000000,329.9963379,179.9945068); //object(csrspalace01_lvs) (11)
	CreateDynamicObject(8480,934.2758179,7061.5498047,-19.0625858,0.0000000,329.9963379,0.0000000); //object(csrspalace01_lvs) (12)
	CreateDynamicObject(8480,934.2397461,7173.9916992,-19.0625858,0.0000000,329.9963379,0.0000000); //object(csrspalace01_lvs) (13)
	CreateDynamicObject(8480,934.2167969,7286.4707031,-19.0625858,0.0000000,329.9963379,0.0000000); //object(csrspalace01_lvs) (14)
	CreateDynamicObject(8480,1028.2285156,7385.4960938,-19.0625858,0.0000000,329.9963379,270.0000000); //object(csrspalace01_lvs) (15)
	CreateDynamicObject(8480,1203.1650391,7385.3984375,-19.0625858,0.0000000,329.9963379,270.0000000); //object(csrspalace01_lvs) (16)
	CreateDynamicObject(17472,992.9727173,6928.8027344,-3.5000000,0.0000000,0.0000000,270.0000000); //object(cunt_rocgxp2_04) (1)
	CreateDynamicObject(17472,995.6253662,6969.4228516,-3.5000000,0.0000000,0.0000000,268.4945068); //object(cunt_rocgxp2_04) (2)
	CreateDynamicObject(17472,994.6223755,7012.7597656,-5.7500000,0.0000000,0.0000000,268.4893799); //object(cunt_rocgxp2_04) (3)
	CreateDynamicObject(17472,994.1997070,7043.4311523,-4.0000000,0.0000000,0.0000000,268.4893799); //object(cunt_rocgxp2_04) (4)
	CreateDynamicObject(17472,995.2396240,7084.1313477,-6.0000000,0.0000000,0.0000000,268.4893799); //object(cunt_rocgxp2_04) (5)
	CreateDynamicObject(17472,992.2430420,7121.9750977,-3.5000000,0.0000000,0.0000000,268.4893799); //object(cunt_rocgxp2_04) (6)
	CreateDynamicObject(17472,994.1089478,7161.2407227,-4.7500000,0.0000000,0.0000000,268.4893799); //object(cunt_rocgxp2_04) (7)
	CreateDynamicObject(17472,993.0535889,7202.5693359,-4.0000000,0.0000000,0.0000000,268.4893799); //object(cunt_rocgxp2_04) (8)
	CreateDynamicObject(17472,992.4711304,7244.7543945,-4.0000000,0.0000000,0.0000000,268.4893799); //object(cunt_rocgxp2_04) (9)
	CreateDynamicObject(17472,992.4631348,7286.9116211,-4.0000000,0.0000000,0.0000000,268.4893799); //object(cunt_rocgxp2_04) (10)
	CreateDynamicObject(17472,990.5100708,7314.7431641,-4.0000000,0.0000000,0.0000000,264.4893799); //object(cunt_rocgxp2_04) (11)
	CreateDynamicObject(17472,1008.8685913,7324.4243164,-3.2500000,0.0000000,0.0000000,180.0000000); //object(cunt_rocgxp2_04) (12)
	CreateDynamicObject(17472,1048.2407227,7323.4067383,-5.7500000,0.0000000,0.0000000,179.9945068); //object(cunt_rocgxp2_04) (13)
	CreateDynamicObject(17472,1069.3651123,7324.6230469,-4.0000000,0.0000000,0.0000000,175.9945068); //object(cunt_rocgxp2_04) (14)
	CreateDynamicObject(17472,1183.3225098,7325.6782227,-5.0000000,0.0000000,0.0000000,175.9899902); //object(cunt_rocgxp2_04) (15)
	CreateDynamicObject(17472,1224.4727783,7323.0395508,-6.5000000,0.0000000,0.0000000,175.9899902); //object(cunt_rocgxp2_04) (16)
	CreateDynamicObject(17472,1255.1290283,7323.8051758,-3.0000000,0.0000000,0.0000000,175.9899902); //object(cunt_rocgxp2_04) (17)
	CreateDynamicObject(17472,1267.6749268,7298.0073242,-3.0000000,0.0000000,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (18)
	CreateDynamicObject(17472,1267.1212158,7255.4316406,-5.5000000,4.0000000,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (19)
	CreateDynamicObject(17472,1267.5246582,7216.8955078,-3.5000000,3.9990234,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (20)
	CreateDynamicObject(17472,1267.9353027,7177.7197266,-3.5000000,3.9990234,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (21)
	CreateDynamicObject(17472,1266.1430664,7134.1030273,-8.5299988,3.9990234,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (22)
	CreateDynamicObject(17472,1266.4582520,7104.0258789,-7.0299988,3.9990234,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (23)
	CreateDynamicObject(17472,1271.6243896,7064.2856445,-0.2900002,3.9990234,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (24)
	CreateDynamicObject(17472,1267.5173340,7019.9936523,-6.7799988,3.9990234,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (25)
	CreateDynamicObject(17472,1267.8359375,6989.5966797,-6.7799988,3.9990234,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (26)
	CreateDynamicObject(17472,1268.1604004,6958.7001953,-6.7799988,3.9990234,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (27)
	CreateDynamicObject(17472,1268.3132324,6943.9208984,-6.7799988,3.9990234,0.0000000,90.0000000); //object(cunt_rocgxp2_04) (28)
	CreateDynamicObject(17472,1268.5457764,6921.6933594,-6.7799988,3.9990234,0.0000000,98.0000000); //object(cunt_rocgxp2_04) (29)
	CreateDynamicObject(17472,1291.0783691,6903.4086914,-6.7799988,3.9935303,0.0000000,179.9980469); //object(cunt_rocgxp2_04) (30)
	CreateDynamicObject(17472,984.0803223,6905.7661133,-12.3499985,0.0000000,0.0000000,188.4893799); //object(cunt_rocgxp2_04) (31)
	CreateDynamicObject(17472,1014.3419800,6912.1870117,3.0000000,0.0000000,0.0000000,187.9945068); //object(cunt_rocgxp2_04) (32)
	CreateDynamicObject(17472,1057.4428711,6911.0493164,3.0000000,0.0000000,0.0000000,189.9925537); //object(cunt_rocgxp2_04) (33)
	CreateDynamicObject(17472,1104.7268066,6911.8886719,3.0000000,0.0000000,0.0000000,185.9920654); //object(cunt_rocgxp2_04) (34)
	CreateDynamicObject(17472,1152.1694336,6909.9335938,3.0000000,0.0000000,0.0000000,185.9875488); //object(cunt_rocgxp2_04) (35)
	CreateDynamicObject(17472,1200.9864502,6906.3681641,3.0000000,0.0000000,0.0000000,185.9875488); //object(cunt_rocgxp2_04) (36)
	CreateDynamicObject(17472,1249.7343750,6902.8085938,3.0000000,0.0000000,0.0000000,185.9875488); //object(cunt_rocgxp2_04) (37)
	CreateDynamicObject(726,999.7071533,6912.8085938,12.7792091,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (13)
	CreateDynamicObject(726,1062.9782715,6915.6201172,12.7792091,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (18)
	CreateDynamicObject(726,1126.1501465,6920.4682617,9.1392097,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (19)
	CreateDynamicObject(726,1204.4822998,6912.2670898,14.3892097,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (20)
	CreateDynamicObject(726,1257.1721191,6907.1323242,16.3892097,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (21)
	CreateDynamicObject(726,1271.5191650,6959.6601562,6.4392118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (22)
	CreateDynamicObject(726,1270.9428711,7073.1352539,6.4392118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (23)
	CreateDynamicObject(726,1272.8884277,7188.9741211,10.1892118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (24)
	CreateDynamicObject(726,1272.8162842,7302.5200195,7.6892118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (25)
	CreateDynamicObject(726,1216.8714600,7328.0029297,7.6892118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (26)
	CreateDynamicObject(726,1040.3900146,7327.7480469,7.6892118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (27)
	CreateDynamicObject(726,988.5540771,7295.4389648,10.6892118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (28)
	CreateDynamicObject(726,988.4029541,7190.1708984,10.6892118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (29)
	CreateDynamicObject(726,990.9403687,7072.3041992,8.4392118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (30)
	CreateDynamicObject(726,989.9278564,6962.6137695,8.4392118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (31)
	CreateDynamicObject(17472,1084.0728760,7215.3691406,3.2799995,0.0000000,0.0000000,193.9899902); //object(cunt_rocgxp2_04) (39)
	CreateDynamicObject(17472,1186.4670410,7212.6020508,3.2799995,0.0000000,0.0000000,181.9855957); //object(cunt_rocgxp2_04) (40)
	CreateDynamicObject(17472,1130.9711914,7257.5190430,-2.6800003,8.0000000,0.0000000,181.9830322); //object(cunt_rocgxp2_04) (41)
	CreateDynamicObject(17472,1213.9709473,7277.6635742,-2.6800003,7.9980469,0.0000000,181.9830322); //object(cunt_rocgxp2_04) (42)
	CreateDynamicObject(17472,1049.5573730,7274.5483398,-2.6800003,7.9980469,0.0000000,181.9830322); //object(cunt_rocgxp2_04) (43)
	CreateDynamicObject(726,1192.5899658,7221.2548828,11.4392118,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (32)
	CreateDynamicObject(726,1201.2806396,7283.0488281,7.1192122,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (33)
	CreateDynamicObject(726,1135.1190186,7265.2880859,7.8692122,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (34)
	CreateDynamicObject(726,1086.9555664,7220.8984375,15.0792122,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (35)
	CreateDynamicObject(726,1055.3920898,7283.6484375,10.7292137,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (36)
	CreateDynamicObject(18228,1058.5325928,7565.9399414,-8.9600000,0.0000000,0.0000000,21.9967041); //object(cunt_rockgp2_21) (61)
	CreateDynamicObject(18228,1053.1652832,7446.6665039,-9.3499994,0.0000000,0.0000000,359.9946289); //object(cunt_rockgp2_21) (72)
	CreateDynamicObject(18228,1209.9854736,7444.0605469,-11.2799997,0.0000000,0.0000000,307.9893494); //object(cunt_rockgp2_21) (82)
	CreateDynamicObject(18228,1188.3868408,7538.5034180,-7.4849992,0.0000000,0.0000000,249.9873047); //object(cunt_rockgp2_21) (104)
	CreateDynamicObject(8397,1136.8873291,7610.5029297,19.0890045,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (5)
	CreateDynamicObject(8397,1125.2088623,7610.5087891,19.0890045,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (6)
	CreateDynamicObject(8397,1113.3786621,7610.5273438,19.0890045,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (7)
	CreateDynamicObject(8397,1148.7786865,7610.5590820,19.0890045,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (8)
	CreateDynamicObject(8397,1136.8867188,7610.5029297,19.0890045,0.0000000,5.0000000,0.0000000); //object(luxorpillar01_lvs) (11)
	CreateDynamicObject(8397,1113.3779297,7610.5273438,19.0890045,0.0000000,5.0000000,0.0000000); //object(luxorpillar01_lvs) (12)
	CreateDynamicObject(8397,1125.2080078,7610.5087891,19.0890045,0.0000000,355.0000000,0.0000000); //object(luxorpillar01_lvs) (15)
	CreateDynamicObject(8397,1148.7783203,7610.5585938,19.0890045,0.0000000,354.9957275,0.0000000); //object(luxorpillar01_lvs) (38)
	CreateDynamicObject(3458,1131.0966797,7610.3251953,50.8731842,354.0399170,0.0000000,0.0000000); //object(vgncarshade1) (641)
	CreateDynamicObject(8882,1032.1783447,7509.2475586,13.6811485,0.0000000,0.0000000,180.5000000); //object(excalibur03_lvs) (1)
	CreateDynamicObject(8882,1229.8444824,7495.6396484,13.6811485,0.0000000,0.0000000,54.4965515); //object(excalibur03_lvs) (2)
	CreateDynamicObject(8882,1211.2694092,7794.3671875,7.1811485,0.0000000,0.0000000,136.4922180); //object(excalibur03_lvs) (3)
	CreateDynamicObject(8882,1176.2636719,7893.5585938,7.1811485,0.0000000,0.0000000,118.4886475); //object(excalibur03_lvs) (4)
	CreateDynamicObject(8882,1212.4804688,7982.2089844,7.1811485,0.0000000,0.0000000,60.4852295); //object(excalibur03_lvs) (5)
	CreateDynamicObject(8882,1239.4353027,8152.2548828,7.1811485,0.0000000,0.0000000,106.4852295); //object(excalibur03_lvs) (7)
	CreateDynamicObject(8882,1104.3762207,7893.7661133,7.1811485,0.0000000,0.0000000,168.4875488); //object(excalibur03_lvs) (8)
	CreateDynamicObject(8882,1280.5371094,8052.6323242,7.1811485,0.0000000,0.0000000,58.4849854); //object(excalibur03_lvs) (9)
	CreateDynamicObject(8882,1089.4488525,8019.0883789,7.1811485,0.0000000,0.0000000,117.4852295); //object(excalibur03_lvs) (5)
	CreateDynamicObject(8882,1104.9035645,8153.3037109,7.1811485,0.0000000,0.0000000,117.4822998); //object(excalibur03_lvs) (5)
	CreateDynamicObject(8882,1006.2112427,8162.3481445,7.1811485,0.0000000,0.0000000,125.4822998); //object(excalibur03_lvs) (5)
	CreateDynamicObject(8882,977.1769409,8010.9526367,7.1811485,0.0000000,0.0000000,297.4822998); //object(excalibur03_lvs) (5)
	CreateDynamicObject(8397,1176.6502686,7850.4931641,-30.1603947,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (9)
	CreateDynamicObject(8397,1176.4088135,7805.3081055,-30.1603947,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (10)
	CreateDynamicObject(8397,1171.6994629,8062.0429688,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (40)
	CreateDynamicObject(8397,1171.8033447,8107.3710938,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (60)
	CreateDynamicObject(8397,952.5336914,7853.4594727,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (61)
	CreateDynamicObject(8397,942.3082886,7844.2719727,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (66)
	CreateDynamicObject(8397,941.9091187,7798.9833984,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (67)
	CreateDynamicObject(8397,952.1488037,7808.2124023,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (68)
	CreateDynamicObject(8397,932.0848999,7835.1298828,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (69)
	CreateDynamicObject(8397,931.6716919,7789.9013672,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (70)
	CreateDynamicObject(8397,921.5108032,7780.6865234,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (71)
	CreateDynamicObject(8397,921.9089355,7825.9760742,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (72)
	CreateDynamicObject(8397,911.6386719,7816.8325195,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (73)
	CreateDynamicObject(8397,911.2625122,7771.5366211,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (74)
	CreateDynamicObject(8397,901.0528564,7762.3715820,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (75)
	CreateDynamicObject(8397,901.4427490,7807.6513672,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (76)
	CreateDynamicObject(8397,891.2100830,7798.4619141,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (77)
	CreateDynamicObject(8397,881.0228271,7789.3203125,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (78)
	CreateDynamicObject(8397,870.7819214,7780.1596680,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (79)
	CreateDynamicObject(8397,860.6027222,7770.9541016,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (80)
	CreateDynamicObject(8397,850.3595581,7761.8481445,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (81)
	CreateDynamicObject(8397,890.8323364,7753.2060547,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (82)
	CreateDynamicObject(8397,880.6106567,7744.0283203,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (83)
	CreateDynamicObject(8397,870.3588257,7734.8955078,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (84)
	CreateDynamicObject(8397,860.1820679,7725.7470703,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (85)
	CreateDynamicObject(8397,849.9349976,7716.5732422,-20.0603962,0.0000000,0.0000000,0.0000000); //object(luxorpillar01_lvs) (86)
	CreateDynamicObject(18228,869.1069336,7856.2226562,-3.0445061,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_21) (26)
	CreateDynamicObject(18228,808.7858276,7791.0419922,-3.0445061,0.0000000,0.0000000,0.0000000); //object(cunt_rockgp2_21) (40)
	CreateDynamicObject(18228,881.3229370,7679.7622070,-3.0445061,0.0000000,0.0000000,128.0000000); //object(cunt_rockgp2_21) (55)
	CreateDynamicObject(18228,955.1054688,7750.1684570,-3.0445061,0.0000000,0.0000000,127.9962463); //object(cunt_rockgp2_21) (56)
	CreateDynamicObject(726,960.5876465,7750.5708008,10.5611877,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (37)
	CreateDynamicObject(726,893.8986206,7687.3535156,3.5611877,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (38)
	CreateDynamicObject(726,811.9196167,7788.0390625,11.6311874,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (39)
	CreateDynamicObject(726,866.2227783,7842.9736328,3.1311874,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (40)
	CreateDynamicObject(18228,765.8532104,7547.2084961,-3.0445061,0.0000000,0.0000000,143.9962158); //object(cunt_rockgp2_21) (65)
	CreateDynamicObject(18228,681.8508301,7526.5830078,-3.0445061,0.0000000,0.0000000,27.9923096); //object(cunt_rockgp2_21) (105)
	CreateDynamicObject(18228,756.8178101,7393.9545898,-3.0445061,0.0000000,0.0000000,177.9876709); //object(cunt_rockgp2_21) (106)
	CreateDynamicObject(18228,684.4868164,7350.7026367,-3.0445061,0.0000000,0.0000000,97.9839783); //object(cunt_rockgp2_21) (107)
	CreateDynamicObject(18228,614.3631592,7462.2783203,-3.0445061,0.0000000,0.0000000,73.9815674); //object(cunt_rockgp2_21) (108)
	CreateDynamicObject(18228,811.6305542,7617.8823242,-3.0445061,0.0000000,0.0000000,99.9923096); //object(cunt_rockgp2_21) (109)
	CreateDynamicObject(726,810.5620117,7616.3120117,13.5611877,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (41)
	CreateDynamicObject(726,769.2283325,7550.0483398,10.3611898,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (42)
	CreateDynamicObject(726,744.0108643,7397.6342773,1.6211910,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (43)
	CreateDynamicObject(726,687.6000366,7351.9038086,13.5411892,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (44)
	CreateDynamicObject(726,616.6129150,7463.4785156,13.5411892,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (45)
	CreateDynamicObject(726,682.8211670,7525.6748047,14.7911892,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (46)
	CreateDynamicObject(18228,640.3455200,7243.3852539,-3.0445061,0.0000000,0.0000000,63.9815674); //object(cunt_rockgp2_21) (110)
	CreateDynamicObject(18228,740.3771362,7163.9487305,-3.0445061,0.0000000,0.0000000,133.9788818); //object(cunt_rockgp2_21) (111)
	CreateDynamicObject(18228,668.4234009,7107.6303711,-3.0445061,0.0000000,0.0000000,133.9782715); //object(cunt_rockgp2_21) (112)
	CreateDynamicObject(18228,670.2589111,7011.9677734,-3.0445061,0.0000000,0.0000000,109.9782715); //object(cunt_rockgp2_21) (113)
	CreateDynamicObject(18228,767.6994019,6963.2207031,-3.0445061,0.0000000,0.0000000,135.9731445); //object(cunt_rockgp2_21) (114)
	CreateDynamicObject(18228,822.4832764,7045.0478516,-3.0445061,0.0000000,0.0000000,17.9722595); //object(cunt_rockgp2_21) (115)
	CreateDynamicObject(18228,865.8201294,7118.0781250,-3.0445061,0.0000000,0.0000000,337.9681396); //object(cunt_rockgp2_21) (116)
	CreateDynamicObject(726,820.7255859,7037.5087891,11.2669144,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (48)
	CreateDynamicObject(726,844.1072388,7111.6347656,11.2669144,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (49)
	CreateDynamicObject(726,778.8395996,6971.8862305,4.2669144,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (50)
	CreateDynamicObject(726,688.0476074,7014.4184570,4.4369125,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (51)
	CreateDynamicObject(726,674.4537354,7106.0961914,15.4669113,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (52)
	CreateDynamicObject(726,753.3006592,7170.0556641,4.4769135,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (53)
	CreateDynamicObject(726,650.4591675,7233.0864258,3.9769135,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (54)
	CreateDynamicObject(9285,931.3321533,7137.0561523,1.4590073,0.0000000,0.0000000,0.0000000); //object(land2_sfn04) (1)
	CreateDynamicObject(9285,928.2050781,6923.1113281,1.4590073,0.0000000,0.0000000,2.9992676); //object(land2_sfn04) (2)
	CreateDynamicObject(9285,930.4874268,6708.1904297,1.4590073,0.0000000,0.0000000,2.9992676); //object(land2_sfn04) (3)
	CreateDynamicObject(9285,932.4080811,6493.4267578,1.4590073,0.0000000,0.0000000,2.9992676); //object(land2_sfn04) (4)
	CreateDynamicObject(9285,934.5733643,6279.3593750,1.4590073,0.0000000,0.0000000,2.9992676); //object(land2_sfn04) (5)
	CreateDynamicObject(9285,936.8556519,6065.4096680,1.4590073,0.0000000,0.0000000,2.9992676); //object(land2_sfn04) (6)
	CreateDynamicObject(9285,939.0168457,5851.6069336,1.4590073,0.0000000,0.0000000,2.9992676); //object(land2_sfn04) (7)
	CreateDynamicObject(9285,941.2950439,5637.6625977,1.4590073,0.0000000,0.0000000,2.9992676); //object(land2_sfn04) (8)
	CreateDynamicObject(9285,910.0053711,5481.2446289,1.4590073,0.0000000,0.0000000,344.2492676); //object(land2_sfn04) (9)
	CreateDynamicObject(9285,824.4814453,5297.0195312,1.4590073,0.0000000,0.0000000,331.2432861); //object(land2_sfn04) (10)
	CreateDynamicObject(9285,701.9868164,5235.8354492,1.4590073,0.0000000,0.0000000,287.2432861); //object(land2_sfn04) (11)
	CreateDynamicObject(9285,636.2470093,5229.4970703,1.4590073,0.0000000,0.0000000,265.2430420); //object(land2_sfn04) (12)
	CreateDynamicObject(9285,518.6044922,5317.2778320,-1.5409927,0.0000000,351.0000000,201.2429199); //object(land2_sfn04) (13)
	CreateDynamicObject(9285,586.7079468,5411.9760742,1.4590073,0.0000000,0.0000000,133.2420654); //object(land2_sfn04) (14)
	CreateDynamicObject(9285,605.9287720,5444.3129883,1.4590073,0.0000000,0.0000000,107.2366943); //object(land2_sfn04) (15)
	CreateDynamicObject(18228,610.0929565,5336.0659180,0.0000000,0.0000000,0.0000000,70.0000000); //object(cunt_rockgp2_21) (119)
	CreateDynamicObject(18228,670.4807129,5412.0634766,0.0000000,0.0000000,0.0000000,9.9993896); //object(cunt_rockgp2_21) (120)
	CreateDynamicObject(18228,714.8775635,5282.8632812,-4.0000000,0.0000000,0.0000000,315.9975586); //object(cunt_rockgp2_21) (121)
	CreateDynamicObject(18228,767.1430664,5329.3764648,-4.0000000,0.0000000,0.0000000,25.9942627); //object(cunt_rockgp2_21) (122)
	CreateDynamicObject(18228,707.3305664,5472.7495117,0.0000000,0.0000000,0.0000000,23.9975586); //object(cunt_rockgp2_21) (123)
	CreateDynamicObject(18228,694.9975586,5482.3437500,18.6599979,0.0000000,0.0000000,23.9941406); //object(cunt_rockgp2_21) (124)
	CreateDynamicObject(18228,683.3164062,5488.2045898,30.5799961,0.0000000,0.0000000,59.9941406); //object(cunt_rockgp2_21) (125)
	CreateDynamicObject(18228,698.1906128,5479.2890625,40.0899925,59.2795410,312.8361816,126.8269653); //object(cunt_rockgp2_21) (126)
	CreateDynamicObject(18228,698.1904297,5479.2890625,71.2399902,59.2767334,312.8356934,126.8261414); //object(cunt_rockgp2_21) (127)
	CreateDynamicObject(18228,698.1904297,5479.2890625,96.5699844,59.2767334,312.8356934,126.8261719); //object(cunt_rockgp2_21) (128)
	CreateDynamicObject(18228,699.0048218,5484.9404297,121.6899796,59.2767334,312.8356934,126.8261414); //object(cunt_rockgp2_21) (129)
	CreateDynamicObject(18228,699.4140625,5486.1220703,145.9900513,59.2767334,312.8356934,126.8261719); //object(cunt_rockgp2_21) (130)
	CreateDynamicObject(18228,694.8621826,5471.0732422,62.9599915,59.2767334,312.8356934,64.8261719); //object(cunt_rockgp2_21) (132)
	CreateDynamicObject(18228,694.8613281,5471.0732422,90.7899857,59.2712402,312.8302002,64.8248291); //object(cunt_rockgp2_21) (133)
	CreateDynamicObject(18228,694.8613281,5471.0732422,117.4799805,59.2712402,312.8302002,64.8248291); //object(cunt_rockgp2_21) (134)
	CreateDynamicObject(18228,694.8613281,5471.0732422,139.4600372,59.2712402,312.8302002,64.8248291); //object(cunt_rockgp2_21) (135)
	CreateDynamicObject(18228,691.6192627,5481.3110352,150.4500885,59.2712402,312.8302002,64.8248291); //object(cunt_rockgp2_21) (136)
	CreateDynamicObject(8392,676.2310181,5167.3125000,106.5273438,0.0000000,0.0000000,270.0000000); //object(ballys02_lvs) (69)
	CreateDynamicObject(8392,676.2304688,5167.3125000,161.8074493,0.0000000,0.0000000,270.0000000); //object(ballys02_lvs) (70)
	CreateDynamicObject(8392,657.6235962,5167.2592773,176.7873688,90.0000000,180.0000000,90.0000000); //object(ballys02_lvs) (78)
	CreateDynamicObject(8392,657.6230469,5167.2587891,143.4621429,90.0000000,179.9945068,90.0000000); //object(ballys02_lvs) (81)
	CreateDynamicObject(8392,645.0563965,5172.1230469,38.4073563,0.0000000,0.0000000,270.0000000); //object(ballys02_lvs) (83)
	CreateDynamicObject(8392,645.0556641,5172.1230469,93.8273468,0.0000000,0.0000000,270.0000000); //object(ballys02_lvs) (84)
	CreateDynamicObject(8392,626.4528198,5172.0727539,108.7320862,90.0000000,179.9945068,90.0000000); //object(ballys02_lvs) (85)
	CreateDynamicObject(8392,626.4521484,5172.0722656,75.9370956,90.0000000,179.9945068,90.0000000); //object(ballys02_lvs) (86)
	CreateDynamicObject(8392,483.6641846,5258.5527344,134.6470947,90.0000000,179.9945068,21.2475586); //object(ballys02_lvs) (87)
	CreateDynamicObject(8392,497.0208130,5224.6782227,119.9470673,0.0000000,0.0000000,201.2419434); //object(ballys02_lvs) (90)
	CreateDynamicObject(8392,490.1923828,5242.1308594,79.5770721,90.0000000,179.9945068,21.2475586); //object(ballys02_lvs) (92)
	CreateDynamicObject(8392,476.8682251,5276.3906250,64.5270386,0.0000000,0.0000000,201.2310791); //object(ballys02_lvs) (93)
	CreateDynamicObject(8392,490.2271729,5242.0029297,45.8670807,90.0000000,179.9945068,21.2475586); //object(ballys02_lvs) (94)
	CreateDynamicObject(18228,556.5665894,5301.4985352,-7.4600000,0.0000000,0.0000000,69.9993896); //object(cunt_rockgp2_21) (137)
	CreateDynamicObject(18228,648.0468750,5270.0732422,-7.4600000,0.0000000,0.0000000,69.9993896); //object(cunt_rockgp2_21) (138)
	CreateDynamicObject(18228,611.5966187,5400.6186523,-7.4600000,0.0000000,0.0000000,19.9993896); //object(cunt_rockgp2_21) (139)
	CreateDynamicObject(731,671.5045776,5398.1621094,-0.8499992,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,612.4204102,5383.2607422,-0.8499992,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,623.9805908,5325.2910156,5.2099991,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,560.2130737,5299.6171875,8.9599991,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,660.2949829,5259.6025391,0.2099991,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,710.9099731,5285.2226562,5.4599991,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,756.1259766,5313.0288086,6.0699992,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(18228,780.9736328,5476.1298828,-7.4600000,0.0000000,0.0000000,101.9970703); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(731,786.3066406,5478.1396484,1.1500008,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(8558,883.1337891,6588.0097656,95.3134308,0.0000000,0.0000000,0.0000000); //object(vgshseing28) (882)
	CreateDynamicObject(8558,883.1103516,6589.0947266,89.2334290,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (734)
	CreateDynamicObject(3437,868.8044434,6585.4628906,95.7025070,0.0000000,270.0000000,0.0000000); //object(ballypllr01_lvs) (54)
	CreateDynamicObject(3437,897.4806519,6585.5234375,95.7025070,0.0000000,270.0000000,0.0000000); //object(ballypllr01_lvs) (56)
	CreateDynamicObject(3437,897.1433105,6587.5336914,95.7025070,0.0000000,270.0000000,20.0000000); //object(ballypllr01_lvs) (59)
	CreateDynamicObject(3437,869.1163940,6583.4243164,95.7025070,0.0000000,270.0000000,19.9951172); //object(ballypllr01_lvs) (60)
	CreateDynamicObject(3437,886.1694336,6583.5253906,95.7025070,0.0000000,270.0000000,19.9951172); //object(ballypllr01_lvs) (62)
	CreateDynamicObject(3437,880.0549316,6587.4243164,95.7025070,0.0000000,270.0000000,19.9951172); //object(ballypllr01_lvs) (63)
	CreateDynamicObject(3437,869.0978394,6587.5126953,95.7025070,0.0000000,270.0000000,340.0000000); //object(ballypllr01_lvs) (65)
	CreateDynamicObject(3437,880.1637573,6583.4619141,95.7025070,0.0000000,270.0000000,339.9993896); //object(ballypllr01_lvs) (66)
	CreateDynamicObject(3437,897.1983643,6583.4990234,95.7025070,0.0000000,270.0000000,339.9993896); //object(ballypllr01_lvs) (67)
	CreateDynamicObject(3437,886.2521973,6587.5200195,95.7025070,0.0000000,270.0000000,339.9993896); //object(ballypllr01_lvs) (68)
	CreateDynamicObject(3437,891.0364990,6583.4062500,95.7025070,0.0000000,270.0000000,19.9951172); //object(ballypllr01_lvs) (70)
	CreateDynamicObject(3437,875.3855591,6587.5034180,95.7025070,0.0000000,270.0000000,19.9951172); //object(ballypllr01_lvs) (71)
	CreateDynamicObject(3437,891.0386353,6587.4443359,95.7025070,0.0000000,270.0000000,339.9993896); //object(ballypllr01_lvs) (72)
	CreateDynamicObject(3437,875.0842896,6583.5966797,95.7025070,0.0000000,270.0000000,339.9993896); //object(ballypllr01_lvs) (73)
	CreateDynamicObject(18228,906.3746948,5666.8491211,-7.4600000,0.0000000,0.0000000,101.9971008); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,750.6312256,5674.5107422,-7.4600000,0.0000000,0.0000000,101.9970703); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(731,765.2421265,5662.2729492,1.1500008,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,908.7092285,5667.5322266,1.1500008,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(18228,864.6791382,5732.9082031,-7.4600000,0.0000000,0.0000000,201.9970703); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,802.3241577,5740.6992188,-7.4600000,0.0000000,0.0000000,71.9946289); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(731,805.5675659,5739.9335938,1.1500008,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,867.1860962,5737.7524414,4.6500006,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(3603,835.5968628,5811.9492188,24.1534920,0.0000000,0.0000000,0.0000000); //object(bevman_law2) (1)
	CreateDynamicObject(673,823.2113647,5823.2993164,18.3584881,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltree) (2)
	CreateDynamicObject(673,848.8385620,5822.9589844,18.3584881,0.0000000,0.0000000,0.0000000); //object(sm_bevhiltree) (3)
	CreateDynamicObject(8480,791.0583496,5594.5029297,-9.1899910,0.0054932,359.9945068,211.9898682); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(8480,849.1126709,5558.6557617,-9.1899910,0.0000000,359.9890137,333.9866943); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(18228,906.6632690,5584.8256836,-10.9600000,0.0000000,0.0000000,27.9970703); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,889.1943359,5546.7612305,-10.9600000,0.0000000,0.0000000,33.9931641); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,878.9904175,5527.9536133,-10.2100000,0.0000000,0.0000000,31.9916992); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,783.0292358,5539.5810547,-10.2100000,0.0000000,0.0000000,83.9866943); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,764.3878174,5570.2490234,-10.2100000,0.0000000,0.0000000,83.9849854); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,745.4497681,5596.2265625,-10.2100000,0.0000000,0.0000000,83.9849854); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(726,769.8557129,5537.2163086,19.2320671,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (47)
	CreateDynamicObject(726,746.5653687,5575.1064453,19.2320671,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (55)
	CreateDynamicObject(726,890.0578613,5531.4311523,19.2320671,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (56)
	CreateDynamicObject(726,908.8505249,5572.1440430,19.2320671,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (57)
	CreateDynamicObject(8480,727.0642700,5914.6347656,-12.9099922,0.0000000,345.0000000,0.0000000); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(8480,941.2844849,5950.3105469,-12.9099922,0.0000000,344.9981689,180.0000000); //object(csrspalace01_lvs) (1)
	CreateDynamicObject(18228,782.4978638,5894.8398438,-9.9600000,0.0000000,0.0000000,235.9934082); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,780.0701294,5938.1323242,-9.9600000,0.0000000,0.0000000,235.9918213); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,781.2323608,5964.3842773,-9.9600000,0.0000000,0.0000000,235.9918213); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,884.2525635,5961.9711914,-9.9600000,0.0000000,0.0000000,235.9918213); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,884.3983765,5925.4750977,-9.9600000,0.0000000,0.0000000,235.9918213); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,883.5336914,5894.1298828,-9.9600000,0.0000000,0.0000000,235.9918213); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(726,785.4616089,5900.3588867,6.1320686,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (58)
	CreateDynamicObject(726,880.5694580,5897.9130859,5.3820686,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (59)
	CreateDynamicObject(726,879.9066772,5966.0576172,4.1320686,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (60)
	CreateDynamicObject(726,783.2214355,5960.0312500,4.6320686,0.0000000,0.0000000,0.0000000); //object(tree_hipoly19) (62)
	CreateDynamicObject(18228,820.0834961,6174.7001953,1.0299993,0.0000000,0.0000000,91.9918213); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,812.7988892,6082.5615234,1.0299993,0.0000000,0.0000000,111.9875488); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,743.4321289,6168.4633789,1.0299993,0.0000000,0.0000000,91.9885254); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,819.3347168,6284.9067383,1.0299993,0.0000000,0.0000000,85.9885254); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(18228,741.1213379,6249.7109375,1.0299993,0.0000000,0.0000000,85.9844971); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(731,826.3391113,6088.0839844,1.9000008,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,760.1860352,6164.8208008,4.1500006,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,834.5830688,6172.3481445,1.6500006,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,753.6544800,6249.2597656,1.6500006,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(731,831.3970337,6287.5229492,1.6500006,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(18228,775.8174438,6369.4907227,0.0299993,0.0000000,0.0000000,131.9832764); //object(cunt_rockgp2_21) (140)
	CreateDynamicObject(731,779.7829590,6369.9848633,5.6500006,0.0000000,0.0000000,0.0000000); //object(tree_hipoly09) (6)
	CreateDynamicObject(8558,883.2470703,6957.3750000,68.8697510,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (763)
	CreateDynamicObject(8558,883.2470703,6957.3750000,63.7947464,270.0000000,0.0000000,0.0000000); //object(vgshseing28) (763)
	CreateDynamicObject(11486,849.7690430,6150.3041992,11.2099991,0.0000000,0.0000000,90.0000000); //object(dam_turbine_2) (3)
	CreateDynamicObject(11486,849.1265259,6218.3510742,11.2099991,0.0000000,0.0000000,90.0000000); //object(dam_turbine_2) (4)
	CreateDynamicObject(11486,917.2249756,6218.3706055,11.2099991,0.0000000,0.0000000,270.0000000); //object(dam_turbine_2) (5)
	CreateDynamicObject(11486,917.5202026,6150.3334961,11.2099991,0.0000000,0.0000000,270.0000000); //object(dam_turbine_2) (6)
	CreateDynamicObject(11486,853.9199219,6310.8291016,18.3149986,0.0000000,0.0000000,90.0000000); //object(dam_turbine_2) (7)
	CreateDynamicObject(11486,912.5214844,6310.7978516,18.3199940,0.0000000,0.0000000,270.0000000); //object(dam_turbine_2) (8)
	CreateDynamicObject(11486,853.9180298,6552.2250977,84.7150116,0.0000000,0.0000000,90.0000000); //object(dam_turbine_2) (9)
	CreateDynamicObject(11486,912.8388062,6552.2065430,84.7650146,0.0000000,0.0000000,270.0000000); //object(dam_turbine_2) (10)

	//MTA//
	CreateDynamicObject(10781,-1516.1800000,763.2900000,1122.5600000,0.0000000,0.0000000,83.1400000); //
	CreateDynamicObject(8674,-1485.8000000,788.6900000,1119.0000000,0.0000000,0.0000000,352.6200000); //
	CreateDynamicObject(8674,-1485.8000000,788.6900000,1121.4500000,0.0000000,0.0000000,352.6200000); //
	CreateDynamicObject(8674,-1485.8000000,788.6900000,1123.2400000,0.0000000,0.0000000,352.6200000); //
	CreateDynamicObject(8674,-1485.8000000,788.6900000,1125.8900000,0.0000000,0.0000000,352.6200000); //
	CreateDynamicObject(973,-1465.4500000,740.7300000,1119.1600000,89.0000000,0.0000000,354.2700000); //
	CreateDynamicObject(973,-1456.3200000,739.8200000,1119.1600000,89.0000000,0.0000000,354.2700000); //
	CreateDynamicObject(973,-1447.0800000,738.8900000,1119.1600000,89.0000000,0.0000000,354.2700000); //
	CreateDynamicObject(973,-1437.7900000,737.9700000,1119.1600000,89.0000000,0.0000000,354.2700000); //
	CreateDynamicObject(973,-1432.7600000,737.8700000,1119.1600000,89.0000000,0.0000000,84.2200000); //
	CreateDynamicObject(973,-1431.8500000,737.8200000,1119.1600000,89.0000000,0.0000000,84.2200000); //
	CreateDynamicObject(973,-1430.9300000,737.7800000,1119.1600000,89.0000000,0.0000000,84.2200000); //
	CreateDynamicObject(973,-1430.0400000,737.6900000,1119.1600000,89.0000000,0.0000000,84.2200000); //
	CreateDynamicObject(973,-1432.3000000,728.7000000,1119.1600000,89.0000000,0.0000000,84.2200000); //
	CreateDynamicObject(973,-1433.2300000,719.4500000,1119.1600000,89.0000000,0.0000000,84.2200000); //
	CreateDynamicObject(973,-1433.2500000,710.4700000,1119.1600000,89.0000000,0.0000000,95.3200000); //
	CreateDynamicObject(973,-1431.5400000,701.5100000,1119.1600000,89.0000000,0.0000000,106.3900000); //
	CreateDynamicObject(973,-1427.8400000,693.1500000,1119.1600000,89.0000000,0.0000000,121.2500000); //
	CreateDynamicObject(973,-1422.0400000,686.6400000,1119.1600000,89.0000000,0.0000000,141.7000000); //
	CreateDynamicObject(973,-1413.8900000,683.4100000,1119.1600000,89.0000000,0.0000000,174.4500000); //
	CreateDynamicObject(973,-1418.2800000,684.4900000,1119.1600000,89.0000000,92.0000000,174.0000000); //
	CreateDynamicObject(973,-1413.4700000,683.4600000,1119.1600000,89.0000000,92.0000000,174.0000000); //
	CreateDynamicObject(973,-1414.3700000,683.5200000,1119.1600000,89.0000000,92.0000000,174.0000000); //
	CreateDynamicObject(973,-1415.2400000,683.6600000,1119.1600000,89.0000000,92.0000000,174.0000000); //
	CreateDynamicObject(973,-1416.1000000,683.8200000,1119.1600000,89.0000000,92.0000000,174.0000000); //
	CreateDynamicObject(973,-1417.0000000,683.9300000,1119.1600000,89.0000000,92.0000000,174.0000000); //
	CreateDynamicObject(973,-1417.5300000,684.2300000,1119.1600000,89.0000000,92.0000000,174.0000000); //
	CreateDynamicObject(18980,-1405.1800000,682.8600000,1120.5800000,-114.0000000,0.0000000,89.0000000); //
	CreateDynamicObject(18980,-1382.7700000,682.4600000,1130.5600000,-114.0000000,0.0000000,89.0000000); //
	CreateDynamicObject(18980,-1359.3300000,681.4100000,1135.8600000,87.0000000,0.0000000,85.9900000); //
	CreateDynamicObject(18980,-1335.4100000,679.6000000,1135.8600000,87.0000000,0.0000000,85.9900000); //
	CreateDynamicObject(18980,-1310.7300000,677.7400000,1135.8600000,87.0000000,0.0000000,85.9900000); //
	CreateDynamicObject(8979,-1234.6600000,669.1300000,1137.6600000,0.0000000,0.0000000,351.4600000); //
	CreateDynamicObject(8979,-1180.2100000,660.0900000,1137.6600000,0.0000000,0.0000000,172.2900000); //
	CreateDynamicObject(8979,-1125.3800000,653.5100000,1137.6600000,0.0000000,0.0000000,351.4600000); //
	CreateDynamicObject(3925,-1095.2700000,648.4900000,1134.0400000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3925,-1089.2400000,647.7400000,1134.0400000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3925,-1083.1900000,647.0100000,1134.0400000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3925,-1077.7100000,647.5800000,1134.0400000,0.0000000,0.0000000,23.6700000); //
	CreateDynamicObject(3925,-1073.4700000,656.0800000,1134.0400000,0.0000000,0.0000000,105.1000000); //
	CreateDynamicObject(3925,-1074.2500000,650.9300000,1134.0400000,0.0000000,0.0000000,68.4900000); //
	CreateDynamicObject(3502,-1074.2500000,662.4900000,1136.8600000,0.0000000,0.0000000,7.1200000); //
	CreateDynamicObject(3502,-1075.3100000,671.0500000,1136.8600000,0.0000000,0.0000000,7.1200000); //
	CreateDynamicObject(3502,-1076.3600000,679.5900000,1136.8600000,0.0000000,0.0000000,7.1200000); //
	CreateDynamicObject(3502,-1076.6600000,688.3100000,1136.8600000,0.0000000,0.0000000,355.7000000); //
	CreateDynamicObject(3502,-1076.1100000,696.6900000,1135.8600000,-11.0000000,0.0000000,356.0000000); //
	CreateDynamicObject(13645,-1075.8400000,700.8300000,1134.0000000,0.0000000,0.0000000,353.8600000); //
	CreateDynamicObject(10781,-1057.6200000,754.8300000,1138.3000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1085.5600000,733.6800000,1135.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1076.1800000,733.6900000,1135.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1042.3200000,732.3500000,1135.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1032.9500000,732.4200000,1135.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1066.8000000,733.7300000,1135.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1057.4000000,733.7900000,1135.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1051.4500000,733.6200000,1135.0000000,0.0000000,0.0000000,343.0900000); //
	CreateDynamicObject(973,-1085.5600000,733.6800000,1135.9100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1076.1800000,733.6900000,1135.9200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1066.8000000,733.7300000,1135.9200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1057.4000000,733.7900000,1135.9000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1051.4500000,733.6200000,1135.9400000,0.0000000,0.0000000,343.0900000); //
	CreateDynamicObject(973,-1042.3200000,732.3500000,1135.9000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(973,-1032.9500000,732.4200000,1135.9100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1081.1600000,733.9200000,1136.1800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1070.7700000,733.9500000,1136.1800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1060.4300000,734.0000000,1136.1800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1041.7700000,732.6400000,1136.1800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1033.8300000,732.6400000,1136.1800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1081.1600000,733.9200000,1138.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1081.1600000,733.9200000,1141.6100000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1070.7700000,733.9500000,1138.7300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1070.7700000,733.9500000,1141.6700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1060.4300000,734.0000000,1138.7400000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1060.4300000,734.0000000,1141.6700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1041.7700000,732.6400000,1142.0800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1041.7700000,732.6400000,1139.1300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1033.8300000,732.6400000,1142.0700000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8674,-1033.8300000,732.6400000,1139.1200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13647,-1280.5700000,675.0300000,1133.4600000,0.0000000,-12.0000000,353.6100000); //
	CreateDynamicObject(13647,-1306.3000000,677.9000000,1131.9600000,0.0000000,-12.0000000,353.6100000); //
	CreateDynamicObject(10427,-997.0100000,727.1700000,1114.1900000,0.0000000,0.0000000,182.0600000); //
	CreateDynamicObject(10427,-922.5500000,732.8000000,1091.7700000,0.0000000,0.0000000,182.0600000); //
	CreateDynamicObject(10427,-848.0100000,734.5800000,1070.1600000,0.0000000,0.0000000,182.0600000); //
	CreateDynamicObject(13641,-809.0800000,739.1300000,1071.0000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13612,-712.6700000,740.0100000,1045.9400000,0.0000000,0.0000000,0.0000000); //

	//parkour
	CreateDynamicObject(11011,1172.4219970,-2043.3878170,435.2265310,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13607,1173.4276120,-1973.7214350,439.1203300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13562,1167.4274900,-1928.5593260,427.5639340,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13562,1167.4274900,-1922.5589590,427.5639340,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13562,1167.4274900,-1916.5585930,427.5639340,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13562,1167.4274900,-1910.5582270,427.5639340,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13562,1167.4274900,-1904.5578610,427.5639340,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13562,1167.4274900,-1898.9575190,427.5639340,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(899,1173.6699210,-1889.1756590,425.5440670,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1192.6898190,-1890.9543450,429.3509210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1210.2908930,-1890.9543450,429.3509210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1227.8919670,-1890.9543450,429.3509210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1246.2930900,-1890.9543450,429.3509210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1264.2941890,-1890.9543450,429.3509210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1269.4945060,-1874.9533690,429.3509210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1287.4956050,-1874.9533690,429.3509210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1293.8959960,-1894.5545650,429.3509210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1313.0971670,-1894.5545650,429.3509210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(4726,1343.7270500,-1901.4421380,429.4138480,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2774,1374.4951170,-1904.1801750,436.5791620,358.1282040,50.7294540,359.6928710); //
	CreateDynamicObject(2774,1393.0289300,-1902.2036130,451.1474600,358.1282040,50.7294540,359.6928710); //
	CreateDynamicObject(13638,1410.0957030,-1907.0837400,461.2553400,359.5883780,0.4201370,186.8071590); //
	CreateDynamicObject(14596,1420.2299800,-1916.7290030,460.3544310,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13749,1429.1469720,-1908.7886960,443.4241330,356.8609000,359.6944270,148.7884210); //
	CreateDynamicObject(11496,1438.0437010,-1896.2763670,436.7287290,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3630,1440.3647460,-1885.0560300,435.5108640,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3630,1440.3647460,-1879.8557120,435.5108640,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3630,1440.3647460,-1874.6553950,435.5108640,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3630,1440.3647460,-1869.4550780,435.5108640,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3865,1441.5800780,-1863.4655760,436.1540830,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3865,1441.5800780,-1854.6650390,436.1540830,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3865,1441.5800780,-1863.4655760,439.7540280,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3865,1441.5800780,-1854.6650390,439.7540280,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13644,1442.0225830,-1845.5976560,433.5572500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13644,1442.0225830,-1837.1971430,433.5572500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13644,1451.2231440,-1828.3966060,433.5572500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13644,1444.0227050,-1821.9962150,433.5572500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(11472,1436.8520500,-1817.1134030,429.1282340,359.5970760,0.0084630,271.2013240); //
	CreateDynamicObject(11472,1425.9479980,-1812.9418940,427.2047420,359.5970760,0.0084630,271.2013240); //
	CreateDynamicObject(11472,1415.0439450,-1808.7703850,425.2812500,359.5970760,0.0084630,271.2013240); //
	CreateDynamicObject(11472,1404.5397940,-1804.5904540,423.3549490,359.5970760,0.0084630,271.2013240); //
	CreateDynamicObject(13638,1391.4042960,-1795.6643060,426.9846800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(13638,1379.4035640,-1783.6635740,434.9845580,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18822,1348.7860100,-1778.2697750,442.7347410,3.5278210,276.0003050,0.2283100); //
	CreateDynamicObject(18822,1300.7535400,-1778.5404050,450.5328670,3.5278210,91.2024230,0.2283100); //
	CreateDynamicObject(19333,1277.0312500,-1778.7202140,442.9532770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19333,1274.6311030,-1778.7202140,442.9532770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19333,1272.2309570,-1778.7202140,442.9532770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19333,1269.8308100,-1778.7202140,442.9532770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19333,1267.4306640,-1778.7202140,442.9532770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(19333,1265.0305170,-1778.7202140,442.9532770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(16502,1256.3632810,-1778.6113280,439.7929990,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(16502,1241.5623770,-1778.6113280,436.5930480,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(16502,1227.1614990,-1778.6113280,433.3930960,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8397,1214.2180170,-1778.1557610,427.1913750,86.1963500,71.5615840,195.1986540); //
	CreateDynamicObject(18813,1124.2150870,-1772.5584710,404.8564140,0.0000000,0.0000000,0.0000000); //



// skydive
	CreateDynamicObject(9249,-5.69921875,7624.20019531,2751.00000000,32.92602539,249.85656738,96.00402832); //object(beach_sfn01)(1)
    CreateDynamicObject(18302,202.19999695,7646.60009766,3247.10009766,0.00000000,0.00000000,358.00000000); //object(cs_landbit_13)(1)
    CreateDynamicObject(18312,12.19921875,7540.29980469,2947.69995117,286.47949219,256.32202148,311.76452637); //object(cs_landbit_23)(1)
    CreateDynamicObject(18312,-12.69921875,7536.79980469,3024.60009766,275.64147949,134.92858887,19.06677246); //object(cs_landbit_23)(3)
    CreateDynamicObject(974,-5.40000010,7534.10009766,3040.60009766,90.00000000,180.00000000,137.99966431); //object(tall_fence)(1)
    CreateDynamicObject(18312,22.20000076,7558.20019531,2889.10009766,286.47949219,256.32202148,349.76440430); //object(cs_landbit_23)(1)
    CreateDynamicObject(18312,18.09960938,7569.20019531,2857.89990234,286.47949219,256.32202148,23.75793457); //object(cs_landbit_23)(1)
    CreateDynamicObject(18312,-184.89999390,7755.20019531,2024.09997559,276.41931152,341.84057617,154.04809570); //object(cs_landbit_23)(1)
    CreateDynamicObject(18302,-56.29980469,7550.39941406,2578.50000000,353.42468262,106.79260254,36.96350098); //object(cs_landbit_13)(3)
    CreateDynamicObject(18302,1.79980469,7533.39941406,2734.89990234,8.69018555,67.54394531,117.71301270); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-76.69999695,7542.50000000,2748.69995117,7.92703247,108.42132568,354.70050049); //object(cs_landbit_13)(6)
    CreateDynamicObject(18302,-76.69999695,7542.50000000,2748.69995117,7.92703247,108.42132568,354.70050049); //object(cs_landbit_13)(7)
    CreateDynamicObject(9249,-25.09960938,7605.89941406,2803.19995117,20.13244629,237.06848145,123.99719238); //object(beach_sfn01)(1)
    CreateDynamicObject(689,-14.59960938,7553.00000000,2730.69995117,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(1)
    CreateDynamicObject(689,-43.20000076,7568.89990234,2696.60009766,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(2)
    CreateDynamicObject(689,-36.50000000,7595.20019531,2732.60009766,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(3)
    CreateDynamicObject(689,-42.70000076,7532.00000000,2708.80004883,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(4)
    CreateDynamicObject(689,-4.50000000,7582.70019531,2702.00000000,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(5)
    CreateDynamicObject(690,-60.40000153,7569.70019531,2725.69995117,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse2)(1)
    CreateDynamicObject(694,-48.00000000,7549.29980469,2706.10009766,0.00000000,0.00000000,0.00000000); //object(sm_redwoodgrp)(1)
    CreateDynamicObject(18302,-149.19999695,7577.50000000,2506.69995117,8.70117188,67.54394531,87.71838379); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-179.30000305,7583.79980469,2552.19995117,17.54214478,73.35662842,62.57110596); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-155.89999390,7645.00000000,2565.69995117,23.86700439,92.58285522,11.43569946); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-27.50000000,7673.29980469,2520.19995117,351.93481445,67.32046509,126.36541748); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-103.40000153,7662.79980469,2567.10009766,337.90527344,124.23571777,258.86779785); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-115.90000153,7743.10009766,2452.60009766,337.90100098,124.23339844,266.86535645); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-69.09999847,7732.39990234,2382.30004883,351.93054199,67.31872559,126.36474609); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-164.69999695,7608.00000000,2430.30004883,8.69567871,67.54394531,87.71484375); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-175.10000610,7722.39990234,2387.19995117,23.86230469,92.58178711,21.43136597); //object(cs_landbit_13)(5)
    CreateDynamicObject(18302,-56.59999847,7768.20019531,2287.19995117,351.93054199,67.31872559,182.36480713); //object(cs_landbit_13)(5)
    CreateDynamicObject(18299,-110.30000305,7802.60009766,2308.60009766,15.55581665,167.53643799,171.30462646); //object(cs_landbit_09)(1)
    CreateDynamicObject(18299,-142.39941406,7817.70019531,2196.39990234,44.62646484,163.00964355,180.02197266); //object(cs_landbit_09)(2)
    CreateDynamicObject(18299,-174.79980469,7793.09960938,2159.50000000,74.36096191,129.50134277,217.33703613); //object(cs_landbit_09)(3)
    CreateDynamicObject(18299,-212.60000610,7767.50000000,2159.50000000,74.36096191,129.50134277,293.33694458); //object(cs_landbit_09)(4)
    CreateDynamicObject(18299,-192.19999695,7769.10009766,2159.50000000,74.35546875,129.49584961,55.33489990); //object(cs_landbit_09)(5)
    CreateDynamicObject(18299,-184.89999390,7778.39990234,2159.50000000,74.34997559,129.49584961,153.33288574); //object(cs_landbit_09)(6)
    CreateDynamicObject(689,-128.39999390,7668.39990234,2466.39990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(6)
    CreateDynamicObject(689,-64.09999847,7673.60009766,2480.00000000,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(7)
    CreateDynamicObject(689,-92.59999847,7661.00000000,2452.39990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(8)
    CreateDynamicObject(689,-149.69999695,7730.39990234,2381.89990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(9)
    CreateDynamicObject(689,-103.00000000,7792.39990234,2293.89990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(10)
    CreateDynamicObject(689,-177.69999695,7783.29980469,2313.00000000,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(11)
    CreateDynamicObject(689,-139.19999695,7809.50000000,2241.69995117,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(12)
    CreateDynamicObject(689,-161.50000000,7746.60009766,2290.50000000,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(13)
    CreateDynamicObject(689,-95.90000153,7710.79980469,2407.39990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(14)
    CreateDynamicObject(689,-86.40000153,7749.20019531,2369.39990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(15)
    CreateDynamicObject(689,-128.80000305,7773.10009766,2346.89990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(16)
    CreateDynamicObject(18299,-172.59960938,7768.09960938,2194.30004883,19.94567871,88.57727051,262.05139160); //object(cs_landbit_09)(8)
    CreateDynamicObject(18299,-239.19999695,7844.89990234,2194.30004883,19.94567871,88.57727051,340.05145264); //object(cs_landbit_09)(9)
    CreateDynamicObject(18312,-58.89941406,7602.89941406,2671.19995117,298.36669922,205.93872070,79.27734375); //object(cs_landbit_23)(1)
    CreateDynamicObject(16113,-241.19999695,7772.70019531,2064.69995117,0.00000000,36.00000000,270.00000000); //object(des_rockgp2_03)(1)
    CreateDynamicObject(16113,-217.10000610,7789.00000000,2087.69995117,0.00000000,35.99670410,270.00000000); //object(des_rockgp2_03)(2)
    CreateDynamicObject(16113,-200.10000610,7808.79980469,2109.10009766,0.00000000,35.99670410,270.00000000); //object(des_rockgp2_03)(3)
    CreateDynamicObject(16113,-170.69999695,7824.60009766,2124.00000000,0.00000000,35.99670410,250.00000000); //object(des_rockgp2_03)(4)
    CreateDynamicObject(16113,-128.60000610,7819.29980469,2124.00000000,0.00000000,3.99670410,195.99938965); //object(des_rockgp2_03)(5)
    CreateDynamicObject(16113,-91.50000000,7802.70019531,2124.00000000,0.00000000,3.99353027,195.99609375); //object(des_rockgp2_03)(6)
    CreateDynamicObject(16113,-133.69999695,7801.20019531,2124.00000000,0.00000000,3.99353027,195.99609375); //object(des_rockgp2_03)(7)
    CreateDynamicObject(16113,-154.80000305,7796.29980469,2105.50000000,0.00000000,3.99353027,195.99609375); //object(des_rockgp2_03)(8)
    CreateDynamicObject(16113,-238.69999695,7737.70019531,1903.00000000,22.52566528,69.63452148,324.09313965); //object(des_rockgp2_03)(9)
    CreateDynamicObject(16113,-151.89999390,7787.29980469,2124.00000000,323.89892578,40.96801758,205.08728027); //object(des_rockgp2_03)(10)
    CreateDynamicObject(16113,-113.19999695,7775.20019531,2124.00000000,323.89892578,40.96801758,205.08728027); //object(des_rockgp2_03)(11)
    CreateDynamicObject(16113,-97.09999847,7785.89990234,2124.00000000,323.89892578,40.96801758,205.08728027); //object(des_rockgp2_03)(12)
    CreateDynamicObject(16113,-139.50000000,7727.89990234,2139.39990234,321.35803223,34.12548828,140.92977905); //object(des_rockgp2_03)(13)
    CreateDynamicObject(16113,-119.00000000,7730.50000000,2139.39990234,321.35559082,34.12353516,142.92712402); //object(des_rockgp2_03)(14)
    CreateDynamicObject(16113,-127.09999847,7767.20019531,2128.19995117,321.35559082,34.12353516,164.92663574); //object(des_rockgp2_03)(15)
    CreateDynamicObject(16113,-192.80000305,7701.00000000,2088.39990234,321.35559082,34.12353516,48.92120361); //object(des_rockgp2_03)(16)
    CreateDynamicObject(16113,-228.50000000,7706.39990234,2086.39990234,321.35559082,34.12353516,48.91662598); //object(des_rockgp2_03)(17)
    CreateDynamicObject(16113,-224.89999390,7689.79980469,2077.89990234,321.35559082,34.12353516,48.91662598); //object(des_rockgp2_03)(18)
    CreateDynamicObject(16113,-193.39999390,7684.10009766,2077.89990234,321.35559082,34.12353516,48.91662598); //object(des_rockgp2_03)(19)
    CreateDynamicObject(16113,-216.69999695,7675.79980469,2075.39990234,321.35559082,34.12353516,48.91662598); //object(des_rockgp2_03)(20)
    CreateDynamicObject(689,-166.50000000,7808.39990234,2125.39990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(17)
    CreateDynamicObject(689,-104.19999695,7832.39990234,2121.39990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(18)
    CreateDynamicObject(689,-113.50000000,7789.10009766,2135.69995117,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(19)
    CreateDynamicObject(689,-122.50000000,7777.50000000,2134.10009766,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(20)
    CreateDynamicObject(689,-149.19999695,7772.00000000,2142.10009766,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(21)
    CreateDynamicObject(689,-165.39999390,7784.79980469,2134.89990234,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(22)
    CreateDynamicObject(689,-198.19999695,7693.39990234,2091.80004883,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(23)
    CreateDynamicObject(689,-258.89999390,7760.10009766,2070.30004883,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(24)
    CreateDynamicObject(689,-238.80000305,7791.79980469,2093.00000000,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(25)
    CreateDynamicObject(689,-215.59960938,7753.00000000,2051.30004883,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(26)
    CreateDynamicObject(689,-166.30000305,7730.50000000,2063.60009766,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(27)
    CreateDynamicObject(689,-222.39999390,7816.60009766,2095.10009766,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(28)
    CreateDynamicObject(16113,-207.50000000,7830.89990234,2114.50000000,45.96398926,2.87313843,15.93304443); //object(des_rockgp2_03)(21)
    CreateDynamicObject(16113,-195.89999390,7847.20019531,2114.50000000,21.98324585,2.15328979,17.18988037); //object(des_rockgp2_03)(22)
    CreateDynamicObject(16113,-142.69999695,7780.39990234,2132.50000000,323.89892578,40.96801758,205.08728027); //object(des_rockgp2_03)(23)
    CreateDynamicObject(16113,-149.39999390,7773.89990234,2132.50000000,323.89892578,40.96801758,205.08728027); //object(des_rockgp2_03)(24)
    CreateDynamicObject(16113,-141.19999695,7695.50000000,2137.39990234,321.35559082,34.12353516,132.92712402); //object(des_rockgp2_03)(25)
    CreateDynamicObject(18312,-190.39999390,7752.29980469,1985.90002441,276.41601562,341.83959961,154.04479980); //object(cs_landbit_23)(1)
    CreateDynamicObject(18312,-198.89941406,7742.09960938,1870.90002441,276.41601562,341.83959961,154.03930664); //object(cs_landbit_23)(1)
    CreateDynamicObject(16113,-147.89941406,7766.09960938,2135.60009766,323.89892578,40.96801758,205.08728027); //object(des_rockgp2_03)(26)
    CreateDynamicObject(16113,-242.50000000,7735.50000000,1928.90002441,22.52197266,69.63134766,324.09118652); //object(des_rockgp2_03)(27)
    CreateDynamicObject(16113,-238.00000000,7717.60009766,1928.90002441,22.52194214,69.63134766,356.09118652); //object(des_rockgp2_03)(28)
    CreateDynamicObject(16113,-122.89941406,7796.79980469,2174.19995117,0.00000000,35.99670410,211.99218750); //object(des_rockgp2_03)(29)
    CreateDynamicObject(689,-216.19999695,7736.10009766,1889.50000000,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(26)
    CreateDynamicObject(18299,-120.19999695,7714.79980469,1795.09997559,74.36096191,129.50134277,217.33703613); //object(cs_landbit_09)(3)
    CreateDynamicObject(18299,-127.00000000,7721.60009766,1840.00000000,74.36096191,129.50134277,217.33703613); //object(cs_landbit_09)(3)
    CreateDynamicObject(18299,-140.59960938,7710.70019531,1762.00000000,68.38989258,145.59539795,340.38162231); //object(cs_landbit_09)(3)
    CreateDynamicObject(18299,-261.60000610,7764.89990234,1780.50000000,74.35546875,129.49584961,311.33572388); //object(cs_landbit_09)(3)
    CreateDynamicObject(18299,-156.89999390,7684.29980469,1762.00000000,74.35546875,129.49584961,93.33566284); //object(cs_landbit_09)(3)
    CreateDynamicObject(18299,-192.69999695,7603.60009766,1762.00000000,57.79797363,157.00671387,81.64834595); //object(cs_landbit_09)(3)
    CreateDynamicObject(18342,-102.59999847,7674.79980469,1655.69995117,68.00000000,0.00000000,0.00000000); //object(cs_landbit_55)(1)
    CreateDynamicObject(18342,-130.10000610,7622.70019531,1655.69995117,67.99987793,0.00000000,286.00000000); //object(cs_landbit_55)(2)
    CreateDynamicObject(18342,-156.39999390,7592.79980469,1655.69995117,67.99987793,0.00000000,207.99316406); //object(cs_landbit_55)(3)
    CreateDynamicObject(18342,-246.29980469,7576.29980469,1648.19995117,67.99987793,0.00000000,187.99255371); //object(cs_landbit_55)(4)
    CreateDynamicObject(18342,-236.89941406,7603.89941406,1648.19995117,67.99987793,0.00000000,145.99182129); //object(cs_landbit_55)(5)
    CreateDynamicObject(18342,-236.89941406,7603.89941406,1648.19995117,67.99987793,0.00000000,105.99182129); //object(cs_landbit_55)(6)
    CreateDynamicObject(18342,-208.59960938,7695.89941406,1648.19995117,67.99987793,0.00000000,73.98742676); //object(cs_landbit_55)(7)
    CreateDynamicObject(18362,-165.50000000,7620.50000000,1497.80004883,21.70324707,86.30871582,286.70788574); //object(cs_landbit_79)(1)
    CreateDynamicObject(18362,-194.00000000,7610.10009766,1497.80004883,15.68298340,86.81396484,230.43498230); //object(cs_landbit_79)(2)
    CreateDynamicObject(18362,-207.19999695,7637.10009766,1497.80004883,28.64852905,75.10537720,119.81723022); //object(cs_landbit_79)(3)
    CreateDynamicObject(18362,-174.30000305,7658.50000000,1497.80004883,37.37298584,74.58236694,49.23983765); //object(cs_landbit_79)(4)
    CreateDynamicObject(17034,-159.10000610,7846.39990234,2124.19995117,0.00000000,0.00000000,160.00000000); //object(cunt_rockgp2_16)(1)
    CreateDynamicObject(17034,-174.30000305,7827.20019531,2106.89990234,0.00000000,0.00000000,183.99938965); //object(cunt_rockgp2_16)(2)
    CreateDynamicObject(17034,-191.19999695,7696.89990234,2081.10009766,0.00000000,0.00000000,183.99902344); //object(cunt_rockgp2_16)(3)
    CreateDynamicObject(17034,-198.89999390,7658.79980469,1609.50000000,0.00000000,0.00000000,27.99902344); //object(cunt_rockgp2_16)(4)
    CreateDynamicObject(18225,-210.19999695,7657.10009766,1404.59997559,47.65255737,83.37817383,302.92675781); //object(cunt_rockgp2_18)(1)
    CreateDynamicObject(18225,-181.89999390,7674.10009766,1404.59997559,47.64770508,83.37524414,312.92602539); //object(cunt_rockgp2_18)(2)
    CreateDynamicObject(18225,-185.89999390,7674.79980469,1339.30004883,47.64221191,83.36975098,332.92358398); //object(cunt_rockgp2_18)(3)
    CreateDynamicObject(18225,-157.00000000,7644.70019531,1371.50000000,47.63122559,83.36422729,140.91638184); //object(cunt_rockgp2_18)(5)
    CreateDynamicObject(18225,-177.30000305,7625.00000000,1371.50000000,47.62573242,83.35876465,100.91613770); //object(cunt_rockgp2_18)(6)
    CreateDynamicObject(18225,-198.50000000,7629.79980469,1370.00000000,47.62023926,83.35876465,42.91485596); //object(cunt_rockgp2_18)(7)
    CreateDynamicObject(18225,-178.00000000,7667.50000000,1304.90002441,47.63671875,83.36425781,312.91864014); //object(cunt_rockgp2_18)(8)
    CreateDynamicObject(18225,-224.10000610,7632.20019531,1311.40002441,65.66644287,81.06671143,81.75765991); //object(cunt_rockgp2_18)(9)
    CreateDynamicObject(18225,-196.69999695,7662.00000000,1290.50000000,47.62695312,60.75912476,17.11572266); //object(cunt_rockgp2_18)(10)
    CreateDynamicObject(18225,-162.19921875,7634.79980469,1290.50000000,47.62023926,60.74890137,267.11059570); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-194.80000305,7614.00000000,1290.50000000,53.93173218,92.70574951,136.59649658); //object(cunt_rockgp2_18)(12)
    CreateDynamicObject(18299,-168.00000000,7651.50000000,1160.00000000,19.94567871,88.57727051,262.04589844); //object(cs_landbit_09)(8)
    CreateDynamicObject(18299,-188.39999390,7632.79980469,1172.00000000,19.94567871,88.57727051,336.05145264); //object(cs_landbit_09)(8)
    CreateDynamicObject(18299,-192.00000000,7626.20019531,1217.69995117,19.94567871,88.57727051,60.04989624); //object(cs_landbit_09)(8)
    CreateDynamicObject(18299,-164.19999695,7627.70019531,1217.69995117,19.94567871,88.57727051,172.04577637); //object(cs_landbit_09)(8)
    CreateDynamicObject(18299,-176.10000610,7620.20019531,1204.40002441,81.10455322,295.92156982,125.69042969); //object(cs_landbit_09)(8)
    CreateDynamicObject(18299,-212.59960938,7676.59960938,1239.30004883,58.80432129,216.62841797,295.24658203); //object(cs_landbit_09)(8)
    CreateDynamicObject(18299,-65.69999695,7613.89990234,1184.09997559,49.49053955,222.44323730,79.20968628); //object(cs_landbit_09)(8)
    CreateDynamicObject(18225,-118.50000000,7707.79980469,1154.19995117,52.00637817,30.17114258,253.32794189); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-170.10000610,7689.00000000,1099.30004883,18.94592285,19.08874512,237.51892090); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-108.80000305,7742.29980469,1154.19995117,12.70925903,64.86407471,252.81262207); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-145.89999390,7745.50000000,1194.09997559,60.41390991,288.15811157,45.27023315); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-161.39999390,7752.60009766,1198.40002441,60.41381836,288.15490723,45.26916504); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-130.59960938,7767.89941406,1122.59997559,19.94567871,357.88513184,88.63220215); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-129.30000305,7684.89990234,1115.09997559,19.96273804,0.01364136,293.92202759); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18342,-257.60000610,7592.39990234,1703.59997559,67.99987793,0.00000000,145.99182129); //object(cs_landbit_55)(5)
    CreateDynamicObject(18342,-264.60000610,7663.79980469,1699.40002441,67.99987793,0.00000000,113.99182129); //object(cs_landbit_55)(5)
    CreateDynamicObject(18225,-198.10000610,7700.60009766,1097.59997559,18.94592285,19.08874512,207.51890564); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-177.39999390,7731.50000000,1096.59997559,18.94592285,19.08325195,273.51531982); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(689,-215.00000000,7694.20019531,1748.40002441,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(3)
    CreateDynamicObject(689,-195.80000305,7671.00000000,1617.00000000,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(3)
    CreateDynamicObject(689,-237.50000000,7673.89990234,1122.00000000,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(3)
    CreateDynamicObject(689,-169.59960938,7596.59960938,1598.30004883,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(3)
    CreateDynamicObject(689,-201.80000305,7696.70019531,1113.30004883,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(3)
    CreateDynamicObject(689,-105.80000305,7677.89990234,1133.59997559,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(3)
    CreateDynamicObject(689,-186.80000305,7638.50000000,1164.30004883,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(3)
    CreateDynamicObject(689,-28.89999962,7675.79980469,299.20001221,0.00000000,0.00000000,0.00000000); //object(sm_fir_copse1)(3)
    CreateDynamicObject(16113,-147.50000000,7636.20019531,1719.40002441,0.00000000,85.99670410,161.99768066); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-152.30000305,7597.50000000,1222.00000000,0.00000000,85.99548340,161.99340820); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-42.59999847,7619.29980469,2660.80004883,6.77792358,327.74435425,58.25183105); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-209.10000610,7700.89990234,2186.19995117,354.73626709,254.86920166,233.29267883); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-198.50000000,7690.10009766,2198.39990234,354.73205566,254.86633301,233.28918457); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-172.89999390,7694.89990234,2220.89990234,7.20465088,242.87002563,237.72991943); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-150.89999390,7702.00000000,2227.10009766,7.20153809,242.86926270,237.72766113); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-130.30000305,7703.89990234,2227.10009766,7.20153809,242.86926270,237.72766113); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-111.50000000,7710.39990234,2227.10009766,7.20153809,242.86926270,237.72766113); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-96.80000305,7707.79980469,2227.10009766,7.20153809,242.86926270,237.72766113); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-135.39999390,7731.50000000,2251.19995117,7.20153809,242.86926270,237.72766113); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-164.60000610,7695.60009766,2227.10009766,7.20153809,242.86926270,237.72766113); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-190.00000000,7689.50000000,2227.10009766,7.20153809,242.86926270,237.72766113); //object(des_rockgp2_03)(29)
    CreateDynamicObject(16113,-121.00000000,7702.10009766,2233.39990234,7.20153809,242.86926270,237.72766113); //object(des_rockgp2_03)(29)
    CreateDynamicObject(18225,-130.19999695,7765.39990234,1100.90002441,38.01483154,182.52360535,266.35565186); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-177.50000000,7747.79980469,1112.09997559,0.01980591,119.98632812,297.94018555); //object(cunt_rockgp2_18)(11)
    CreateDynamicObject(18225,-105.30000305,7710.39990234,1112.09997559,0.01647949,119.98168945,157.93823242); //object(cunt_rockgp2_18)(11)
    
    
   	CreateDynamicObject(13717,-1696.2023930,212.3930210,-13.4512270,1.3000010,-4.4000010,-113.9158940); //
	CreateDynamicObject(5333,-1111.8889160,-350.6425480,25.6171800,-0.1000000,2.8299990,121.9000020); //
	CreateDynamicObject(4133,-1074.7270500,135.6379080,11.3800940,0.0000000,0.0000000,-59.3000600); //
	CreateDynamicObject(4133,-1135.8453360,75.0551220,11.3701260,0.0000000,0.0000000,121.8999480); //
	CreateDynamicObject(4809,-987.5180660,236.3512570,15.3631830,0.0000000,0.0000000,139.8000030); //
	CreateDynamicObject(4602,-1179.5443110,82.5567620,74.8110270,0.0000000,0.0000000,-45.2999910); //
	CreateDynamicObject(3996,-948.0772700,381.7941580,13.2111120,0.0000000,0.0000000,-104.8999320); //
	CreateDynamicObject(3991,-721.2644040,482.1207270,13.1077790,-0.1999990,0.0000000,-106.0999520); //
	CreateDynamicObject(4841,-871.0676870,413.1123650,16.3013170,-0.0999990,0.0000000,164.9999690); //
	CreateDynamicObject(18772,-565.7606200,455.1284790,16.8891540,0.0000000,0.0000000,75.6000210); //
	CreateDynamicObject(5147,-369.7990720,403.2867430,24.1981140,0.0000000,0.0000000,164.5999900); //
	CreateDynamicObject(18772,-569.8287350,439.2825010,16.8891540,0.0000000,0.0000000,75.6000210); //
	CreateDynamicObject(5147,-374.4540710,386.3860470,24.1981140,0.0000000,0.0000000,164.5999900); //
	CreateDynamicObject(5147,-185.9372250,352.6404410,35.8480750,0.0000000,0.0000000,164.5999900); //
	CreateDynamicObject(5147,-190.5896910,335.7497550,35.8480750,0.0000000,0.0000000,164.5999900); //
	CreateDynamicObject(3991,-15.4813300,294.2869560,37.6609380,0.0000000,0.0000000,-112.4999460); //
	CreateDynamicObject(18788,-970.1005240,355.5411070,12.3878190,0.0000000,0.0000000,165.5000450); //
	CreateDynamicObject(18788,-1008.2255850,365.4010620,12.3878190,0.0000000,0.0000000,165.5000450); //
	CreateDynamicObject(18788,-1044.9282220,374.8930350,12.3878190,0.0000000,0.0000000,165.5000450); //
	CreateDynamicObject(18788,-1056.8861080,377.9849850,12.3878190,0.0000000,0.0000000,165.5000450); //
	CreateDynamicObject(18982,96.7735210,246.7466730,36.4513510,8.6999820,-90.8999630,68.6000280); //
	CreateDynamicObject(18982,102.8958510,262.2601620,36.7103380,8.6999820,-90.8999630,68.6000280); //
	CreateDynamicObject(18982,194.8202810,226.2353510,21.6023900,8.6999820,-90.8999630,68.6000280); //
	CreateDynamicObject(18982,188.6794120,210.6749420,21.3426570,8.6999820,-90.8999630,68.6000280); //
	CreateDynamicObject(18809,259.6557610,199.6145010,14.5250730,8.0000000,90.0000000,-23.8000810); //
	CreateDynamicObject(18809,305.0490110,179.9539180,9.8911740,5.8999980,100.7000190,-23.8000810); //
	CreateDynamicObject(18809,256.1360470,183.1351010,13.8625920,8.0000000,90.0000000,-23.8000810); //
	CreateDynamicObject(18809,301.6517630,163.6966850,9.3058970,5.8999980,100.7000190,-23.8000810); //
	/*
	CreateDynamicObject(8557,2097.1242670,44.3715780,23.8423230,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8557,2097.1062010,39.2715750,23.8423230,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8557,2106.2880850,39.2715750,23.8423230,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8557,2106.2880850,44.3615830,23.8423230,0.0000000,0.0000000,0.0000000); //
	*/

	//CreateDynamicObject(18788,2090.0065910,41.7342560,24.4645630,-0.3000000,0.0000000,0.0000000); //
	//CreateDynamicObject(18788,2079.9218750,41.7160790,24.3548250,-0.3000000,-2.0999990,0.0999990); //
	//CreateDynamicObject(18788,2118.9858390,41.7343100,24.4945480,-0.2000010,1.6999990,0.0000000); //
	CreateDynamicObject(18788, 2090.662109, 41.726478, 24.765724, -0.000000, -0.999998, 0.299922);
	CreateDynamicObject(18788, 2130.072021, 41.797492, 24.763662, 0.199999, -0.999998, 179.899993);
	CreateDynamicObject(18750,-1404.9418940,-184.6775660,43.2284160,90.0000000,59.9999690,15.0000000); //
	CreateDynamicObject(1655,-1844.1530760,1532.3085930,50.7082320,0.0000000,0.0000000,173.3000790); //
	CreateDynamicObject(1633,-2013.1560050,1339.6462400,7.1521350,0.0000000,0.0000000,90.9999540); //
	CreateDynamicObject(18787,441.5096130,2513.7934570,20.5264540,0.0000000,0.0000000,-95.5999520); //
	CreateDynamicObject(18787,434.0764460,2494.4494620,17.8065090,0.0000000,0.0000000,-95.5999520); //
	CreateDynamicObject(18787,436.0259700,2514.3315420,17.8065090,0.0000000,0.0000000,-95.5999520); //
	CreateDynamicObject(18787,443.6891170,2513.5795890,21.6164280,0.0000000,0.0000000,-95.5999520); //
	CreateDynamicObject(18787,446.8041070,2513.2739250,23.1464270,0.0000000,0.0000000,-95.5999520); //
	CreateDynamicObject(18787,436.7344970,2494.1887200,19.1064620,0.0000000,0.0000000,-95.5999520); //
	CreateDynamicObject(18787,439.4014580,2493.9270010,20.4264750,0.0000000,0.0000000,-95.5999520); //
	CreateDynamicObject(18787,441.6505430,2493.7062980,21.5464850,0.0000000,0.0000000,-95.5999520); //
	CreateDynamicObject(18787,444.9244990,2493.3850090,23.1665110,0.0000000,0.0000000,-95.5999520); //
	CreateDynamicObject(18767,1541.8822020,-1348.4909660,333.1113280,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18767,1541.8973380,-1357.7000730,342.2505490,0.0000000,0.0000000,-179.8998870); //
	CreateDynamicObject(18765,1545.0500480,-1347.4644770,344.5967710,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18367,1545.3012690,-1342.4741210,346.6698300,0.0000000,0.0000000,-179.5000610); //
	CreateDynamicObject(18367,1545.0338130,-1311.6153560,350.1193230,0.0000000,0.0000000,-179.5000610); //
	CreateDynamicObject(18765,1545.0500480,-1265.7026360,348.2666010,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18765,1545.0500480,-1255.8428950,348.2666010,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(4106,1562.8804930,-1250.7442620,353.1717830,0.0000000,0.0000000,-88.5998990); //
	CreateDynamicObject(3585,1597.3902580,-1249.1434320,354.0171200,0.0000000,0.0000000,-0.1999990); //
	CreateDynamicObject(3885,1604.0122070,-1249.4227290,355.1333920,0.0000000,0.0000000,69.1999960); //
	CreateDynamicObject(3885,1609.6621090,-1249.7575680,355.2035210,0.0000000,0.0000000,69.1999960); //
	CreateDynamicObject(3885,1614.8649900,-1250.2783200,355.2035210,0.0000000,0.0000000,69.1999960); //
	CreateDynamicObject(3885,1619.8376460,-1250.7337640,355.2035210,0.0000000,0.0000000,-107.6000440); //
	CreateDynamicObject(4882,1639.7712400,-1239.8497310,360.5153800,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14596,1658.1373290,-1226.7033690,366.8444210,0.0000000,0.0000000,91.8999780); //
	CreateDynamicObject(13648,1654.3706050,-1257.6334220,372.7253110,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18765,1654.3576660,-1288.1507560,366.8991690,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18765,1654.3576660,-1300.8587640,366.8991690,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18765,1654.3576660,-1313.3682860,366.8991690,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(896,1651.8475340,-1330.4371330,365.1342160,0.0000000,0.0000000,-178.3000640); //
	CreateDynamicObject(896,1627.5739740,-1331.0345450,365.1342160,0.0000000,0.0000000,100.9999160); //
	CreateDynamicObject(7025,1613.9575190,-1333.1024160,373.2541190,0.0000000,0.0000000,10.7000270); //
	CreateDynamicObject(3630,1610.8061520,-1343.2524410,375.2129820,0.0000000,0.0000000,-79.2000270); //
	CreateDynamicObject(4023,1616.6633300,-1371.8547360,357.8810420,0.0000000,0.0000000,5.3999980); //
	CreateDynamicObject(4023,1621.2418210,-1420.2886960,352.5011590,0.0000000,0.0000000,5.3999980); //
	CreateDynamicObject(19130,1620.4528800,-1382.3878170,368.8222040,-94.1999810,-4.0999970,0.0000000); //
	CreateDynamicObject(19130,1616.7722160,-1382.6516110,368.8414910,-94.1999810,-4.0999970,0.0000000); //
	CreateDynamicObject(19130,1613.4112540,-1382.8916010,368.8589780,-94.1999810,-4.0999970,0.0000000); //
	CreateDynamicObject(19130,1623.9536130,-1382.1372070,368.8039240,-94.1999810,-4.0999970,0.0000000); //
	CreateDynamicObject(19130,1619.3815910,-1392.4705810,370.0472710,-73.8999780,0.0000000,0.0000000); //
	CreateDynamicObject(18813,1624.0671380,-1479.0682370,337.9603880,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(4866,-2073.6423330,1616.4239500,3.4145130,0.0000000,0.0000000,88.9000010); //
	CreateDynamicObject(18778,-2085.9865720,1431.1669920,7.5379400,0.0000000,0.0000000,-2.9999990); //
	CreateDynamicObject(18778,-2070.6469720,1430.3638910,7.5379400,0.0000000,0.0000000,-2.9999990); //
	CreateDynamicObject(3578,-2133.8583980,1701.4187010,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2133.4997550,1709.2479240,4.0732420,0.0000000,0.0000000,-93.6999050); //
	CreateDynamicObject(5147,-2015.9981680,1847.7019040,12.7760170,-0.3999980,-0.1999990,-92.5999750); //
	CreateDynamicObject(5147,-2007.3132320,2037.2437740,23.8035140,-0.3999980,-0.1999990,-92.5999750); //
	CreateDynamicObject(3578,-2132.7985830,1759.9509270,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2132.7172850,1769.2882080,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2127.7558590,1774.0863030,4.1217980,0.0000000,0.0000000,-2.5999970); //
	CreateDynamicObject(3578,-2117.5151360,1773.6221920,4.1217980,0.0000000,0.0000000,-2.5999970); //
	CreateDynamicObject(3578,-2107.4162590,1773.1638180,4.1217980,0.0000000,0.0000000,-2.5999970); //
	CreateDynamicObject(3578,-2097.2951660,1772.8441160,4.1217980,0.0000000,0.0000000,-0.7999960); //
	CreateDynamicObject(3578,-2087.1787100,1772.8535150,4.1217980,0.0000000,0.0000000,1.0999970); //
	CreateDynamicObject(3578,-2077.0339350,1773.0477290,4.1217980,0.0000000,0.0000000,1.0999970); //
	CreateDynamicObject(3578,-2066.8884270,1772.9666740,4.1217980,0.0000000,0.0000000,-2.0999970); //
	CreateDynamicObject(3578,-2056.8369140,1772.7784420,4.1217980,0.0000000,0.0000000,0.1999990); //
	CreateDynamicObject(18750,-2080.8964840,1468.0184320,61.5355330,87.8999860,0.0000000,1.0000000); //
	CreateDynamicObject(3578,-2132.8903800,1749.7430410,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2034.4221190,1773.2800290,4.1116090,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3578,-2044.4949950,1773.2800290,4.1116090,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3578,-2132.9804680,1739.5427240,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2133.0705560,1729.3627920,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2133.1596670,1719.3138420,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2046.7171630,1773.0645750,4.1217980,0.0000000,0.0000000,3.0000000); //
	CreateDynamicObject(3578,-2133.9187010,1691.2183830,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2134.0090330,1680.9387200,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2134.1274410,1670.7587890,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2134.2177730,1660.4890130,4.0732420,0.0000000,0.0000000,-90.4999460); //
	CreateDynamicObject(3578,-2007.9597160,1767.2352290,4.1740780,0.0000000,0.0000000,-92.7999800); //
	CreateDynamicObject(3578,-2008.4602050,1756.9975580,4.1640830,0.0000000,0.0000000,-92.7999800); //
	CreateDynamicObject(3578,-2008.9001460,1746.7680660,4.1540790,0.0000000,0.0000000,-91.8999930); //
	CreateDynamicObject(3578,-2009.1779780,1736.6756590,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(4823,-1920.6359860,1631.9963370,27.4532220,0.0000000,0.0000000,89.0999060); //
	CreateDynamicObject(3578,-2009.6539300,1706.3891600,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(3578,-2009.8149410,1696.1408690,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(3578,-2009.9757080,1685.9426260,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(3578,-2010.1376950,1675.6540520,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(3578,-2010.2974850,1665.4857170,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(3578,-2010.4560540,1655.3275140,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(1676,-2005.0764160,1731.1898190,5.0373020,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-2000.7753900,1731.1898190,5.0373020,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-1996.0557860,1731.1898190,5.0373020,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-1991.2054440,1731.1898190,5.0373020,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-1985.8853750,1731.1898190,5.0373020,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-1981.5852050,1730.9801020,5.4873080,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-1977.3341060,1730.9095450,5.4873080,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-2005.6114500,1711.7744140,5.0472770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-2000.9216300,1711.7744140,5.0472770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-1995.9212640,1711.7744140,5.0472770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-1990.9913330,1711.7744140,5.0472770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-1986.0909420,1711.6042480,5.1272810,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,-1981.9226070,1711.1828610,5.7572870,0.0000000,0.0000000,-36.6999810); //
	CreateDynamicObject(3578,-2010.6152340,1645.1893310,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(3578,-2010.7747800,1635.0324700,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(1683,-2116.2041010,1631.1771240,9.2781290,0.0000000,0.0000000,-2.5000000); //
	CreateDynamicObject(1655,-2077.1916500,1466.3785400,4.4687470,0.0000000,0.0000000,-179.9000240); //
	CreateDynamicObject(14553,-2088.6086420,1732.1069330,4.0818990,10.4999950,-0.1999990,0.5999990); //
	CreateDynamicObject(1683,-2112.9797360,1675.8289790,9.2781290,0.0000000,0.0000000,-2.4000010); //
	CreateDynamicObject(3578,-2010.9333490,1624.9453120,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(3578,-2011.0938720,1614.7475580,4.1540790,0.0000000,0.0000000,-90.9000090); //
	CreateDynamicObject(3578,-2100.5522460,1603.1510000,4.1484250,0.0000000,0.0000000,-1.4999990); //
	CreateDynamicObject(3578,-2110.7861320,1603.4196770,4.1484250,0.0000000,0.0000000,-1.4999990); //
	CreateDynamicObject(3578,-2120.6635740,1603.6782220,4.1484250,0.0000000,0.0000000,-1.4999990); //
	CreateDynamicObject(3578,-2130.2604980,1603.9302970,4.1484250,0.0000000,0.0000000,-1.4999990); //
	CreateDynamicObject(3578,-2134.3469230,1650.2431640,4.0613670,0.0000000,0.0000000,-90.5000070); //
	CreateDynamicObject(3578,-2134.4362790,1639.9643550,4.0613670,0.0000000,0.0000000,-90.5000070); //
	CreateDynamicObject(3578,-2134.5246580,1629.8641350,4.0613670,0.0000000,0.0000000,-90.5000070); //
	CreateDynamicObject(3578,-2134.6140130,1619.6146240,4.0613670,0.0000000,0.0000000,-90.5000070); //
	CreateDynamicObject(3578,-2134.8149410,1609.3361810,4.0613670,0.0000000,0.0000000,-90.5000070); //
	CreateDynamicObject(1676,-1979.5576170,1707.9742430,6.7372780,0.0000000,0.0000000,-72.3999630); //
	CreateDynamicObject(1676,-1978.3032220,1703.4406730,7.5372820,0.0000000,0.0000000,-85.3998180); //
	CreateDynamicObject(1676,-1977.5290520,1698.8082270,8.0572880,0.0000000,0.0000000,-85.3998180); //
	CreateDynamicObject(1676,-1977.3709710,1694.4335930,8.2972860,0.0000000,0.0000000,-97.0997690); //
	CreateDynamicObject(1676,-1978.0416250,1689.0549310,8.5972900,0.0000000,0.0000000,-97.0997690); //
	CreateDynamicObject(1676,-1978.7882080,1683.0706780,9.0872930,0.0000000,0.0000000,-97.0997690); //
	CreateDynamicObject(1676,-1979.4846190,1677.5744620,9.6772900,0.0000000,0.0000000,-97.0997690); //
	CreateDynamicObject(1676,-1980.6256100,1671.9721670,10.2373020,0.0000000,0.0000000,-97.0997690); //
	CreateDynamicObject(1676,-1981.7750240,1665.7457270,10.7773030,0.0000000,0.0000000,-97.0997690); //
	CreateDynamicObject(1676,-1982.7994380,1659.8956290,11.2273070,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1983.8724360,1654.5727530,11.6473060,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1985.1223140,1648.3162840,12.0473070,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1986.3925780,1641.9608150,12.6373090,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1987.6180410,1635.8315420,13.1373100,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1989.3509520,1629.3964840,13.4673170,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1991.0706780,1622.1120600,14.0773220,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1992.6236570,1615.5087890,14.5573250,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1994.5184320,1608.5244140,15.0173220,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1996.1855460,1600.9438470,15.8673240,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1997.6837150,1593.4421380,16.5673330,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1998.9837640,1586.7364500,17.2973460,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-2000.2803950,1578.8681640,18.0873520,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-2000.9768060,1571.3076170,18.9673340,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-2000.9891350,1562.8775630,19.9373340,0.0000000,0.0000000,-101.2997740); //
	CreateDynamicObject(1676,-1999.6781000,1555.7218010,20.8773190,0.0000000,0.0000000,-87.2997970); //
	CreateDynamicObject(1676,-1997.8598630,1548.6110830,21.5673290,0.0000000,0.0000000,-82.7998040); //
	CreateDynamicObject(1676,-1994.4112540,1543.6444090,21.8273310,0.0000000,0.0000000,-61.6998250); //
	CreateDynamicObject(1676,-1989.1011960,1539.0184320,22.1273340,0.0000000,0.0000000,-45.3998450); //
	CreateDynamicObject(1676,-1983.0207510,1536.0443110,22.4173370,0.0000000,0.0000000,-32.4998580); //
	CreateDynamicObject(1676,-1976.0080560,1535.0275870,22.6773370,0.0000000,0.0000000,-10.2998600); //
	CreateDynamicObject(1676,-1958.0429680,1688.2921140,8.6958990,0.0000000,0.0000000,-90.5000000); //
	CreateDynamicObject(1676,-1958.8541250,1682.5085440,9.0959050,0.0000000,0.0000000,-90.5000000); //
	CreateDynamicObject(1676,-1959.7977290,1676.3868400,9.4959050,0.0000000,0.0000000,-90.5000000); //
	CreateDynamicObject(1676,-1961.0327140,1670.2279050,9.9059050,0.0000000,0.0000000,-90.5000000); //
	CreateDynamicObject(1676,-1962.3502190,1663.6978750,10.3859110,0.0000000,0.0000000,-90.5000000); //
	CreateDynamicObject(1676,-1963.4536130,1657.7268060,10.9359150,0.0000000,0.0000000,-90.5000000); //
	CreateDynamicObject(1676,-1964.5653070,1651.9613030,11.3759080,0.0000000,0.0000000,-96.0999600); //
	CreateDynamicObject(1676,-1966.1755370,1645.5454100,11.8559120,0.0000000,0.0000000,-96.0999600); //
	CreateDynamicObject(1676,-1967.6337890,1639.8885490,12.4859140,0.0000000,0.0000000,-96.0999600); //
	CreateDynamicObject(1676,-1968.8041990,1633.9088130,12.7559130,0.0000000,0.0000000,-96.0999600); //
	CreateDynamicObject(1676,-1970.4167480,1627.9403070,13.3659180,0.0000000,0.0000000,-98.0999290); //
	CreateDynamicObject(1676,-1971.5579830,1621.4777830,13.7359180,0.0000000,0.0000000,-98.0999290); //
	CreateDynamicObject(1676,-1973.1671140,1615.4870600,14.0559190,0.0000000,0.0000000,-98.0999290); //
	CreateDynamicObject(1676,-1974.8360590,1608.6542960,14.6659200,0.0000000,0.0000000,-98.0999290); //
	CreateDynamicObject(1676,-1976.3920890,1601.8352050,15.1259110,0.0000000,0.0000000,-98.0999290); //
	CreateDynamicObject(1676,-1977.6791990,1595.5660400,15.9659140,0.0000000,0.0000000,-98.0999290); //
	CreateDynamicObject(1676,-1978.9442130,1589.0902090,16.6259170,0.0000000,0.0000000,-98.0999290); //
	CreateDynamicObject(1676,-1980.1600340,1582.4669180,17.4459340,0.0000000,0.0000000,-98.0999290); //
	CreateDynamicObject(1676,-1980.8431390,1575.8975830,18.1559480,0.0000000,0.0000000,-98.0999290); //
	CreateDynamicObject(1676,-1981.4604490,1569.5594480,18.9159480,0.0000000,0.0000000,-90.4999840); //
	CreateDynamicObject(1676,-1981.1979980,1562.9162590,20.0959470,0.0000000,0.0000000,-90.4999840); //
	CreateDynamicObject(1676,-1979.9476310,1557.5196530,21.4759500,0.0000000,0.0000000,-60.3999900); //
	CreateDynamicObject(1676,-1976.2958980,1554.9809570,22.5759500,0.0000000,0.0000000,-19.9999880); //
	CreateDynamicObject(1676,-1971.0952140,1556.3572990,22.0659580,0.0000000,0.0000000,12.5000140); //
	CreateDynamicObject(1676,-1966.5708000,1560.6983640,21.4659440,0.0000000,0.0000000,31.3000120); //
	CreateDynamicObject(1676,-1963.2512200,1565.8851310,20.9759330,0.0000000,0.0000000,51.1000060); //
	CreateDynamicObject(1676,-1960.2503660,1571.9251700,20.7159290,0.0000000,0.0000000,61.4000160); //
	CreateDynamicObject(1676,-1958.3469230,1577.4591060,20.7159290,0.0000000,0.0000000,68.3000180); //
	CreateDynamicObject(1676,-1956.1604000,1584.3592520,20.7159290,0.0000000,0.0000000,68.3000180); //
	CreateDynamicObject(1676,-1953.9711910,1592.4323730,20.7159290,0.0000000,0.0000000,68.3000180); //
	CreateDynamicObject(1676,-1951.4423820,1600.4102780,20.6059260,0.0000000,0.0000000,68.3000180); //
	CreateDynamicObject(1676,-1949.7670890,1607.9160150,20.6059260,0.0000000,0.0000000,75.6000060); //
	CreateDynamicObject(1676,-1947.9743650,1615.3024900,20.7459290,0.0000000,0.0000000,75.6000060); //
	CreateDynamicObject(1676,-1946.1292720,1622.4895010,20.8459350,0.0000000,0.0000000,75.6000060); //
	CreateDynamicObject(1676,-1944.6967770,1629.8020010,21.2459370,0.0000000,0.0000000,75.6000060); //
	CreateDynamicObject(1676,-1943.4001460,1636.8613280,21.5159300,0.0000000,0.0000000,75.6000060); //
	CreateDynamicObject(1676,-1943.4001460,1636.8613280,21.5159300,0.0000000,0.0000000,75.6000060); //
	CreateDynamicObject(1676,-1942.2855220,1643.3782950,22.0359260,0.0000000,0.0000000,75.6000060); //
	CreateDynamicObject(1676,-1941.4606930,1649.7606200,22.7259120,0.0000000,0.0000000,81.3000100); //
	CreateDynamicObject(1676,-1940.1717520,1656.7985830,23.4759100,0.0000000,0.0000000,81.3000100); //
	CreateDynamicObject(1676,-1939.2165520,1664.0993650,24.4959080,0.0000000,0.0000000,81.3000100); //
	CreateDynamicObject(1676,-1938.3050530,1671.6943350,25.6459140,0.0000000,0.0000000,89.4000160); //
	CreateDynamicObject(1676,-1937.5513910,1679.6569820,27.2759300,0.0000000,0.0000000,89.4000160); //
	CreateDynamicObject(1676,-1936.3519280,1687.1937250,28.7159190,0.0000000,0.0000000,89.4000160); //
	CreateDynamicObject(1676,-1935.1525870,1694.5903320,30.4159080,0.0000000,0.0000000,89.4000160); //
	CreateDynamicObject(1676,-1932.9599600,1702.4079580,32.7159080,0.0000000,0.0000000,82.1999960); //
	CreateDynamicObject(1676,-1929.8696280,1709.7279050,34.9959250,0.0000000,0.0000000,82.1999960); //
	CreateDynamicObject(1676,-1923.9947500,1717.7446280,37.2159110,0.0000000,0.0000000,40.2000000); //
	CreateDynamicObject(1676,-1918.9272460,1723.1860350,38.8459810,0.0000000,0.0000000,56.6999960); //
	CreateDynamicObject(1676,-1912.4274900,1727.9815670,40.3160130,0.0000000,0.0000000,43.3000030); //
	CreateDynamicObject(1676,-1905.0207510,1731.7381590,41.1360350,0.0000000,0.0000000,33.8000250); //
	CreateDynamicObject(1676,-1897.4223630,1733.7187500,41.7860450,0.0000000,0.0000000,17.3000290); //
	CreateDynamicObject(1676,-1890.4367670,1734.2691650,42.0960460,0.0000000,0.0000000,5.3000280); //
	CreateDynamicObject(1676,-1882.1096190,1733.6774900,42.5860630,0.0000000,0.0000000,-4.7999690); //
	CreateDynamicObject(1676,-1874.5960690,1731.8281250,42.9303660,-0.2999990,-0.6000000,-16.6999740); //
	CreateDynamicObject(1676,-1867.0316160,1728.3858640,43.2132220,-0.2999990,-0.6000000,-25.1999740); //
	CreateDynamicObject(1676,-1860.9587400,1724.1082760,43.7667190,-0.2999990,-0.6000000,-36.7999680); //
	CreateDynamicObject(1676,-1855.6682120,1717.6624750,44.2289270,-0.2999990,-0.6000000,-53.9999730); //
	CreateDynamicObject(1676,-1851.1472160,1710.6593010,44.6784890,-0.2999990,-0.6000000,-53.9999730); //
	CreateDynamicObject(1676,-1847.5031730,1704.2253410,45.0694500,-0.2999990,-0.6000000,-66.7999490); //
	CreateDynamicObject(1676,-1844.1173090,1696.9676510,45.5819810,-0.2999990,-0.6000000,-66.7999490); //
	CreateDynamicObject(1676,-1841.3253170,1689.9002680,45.9726820,-0.2999990,-0.6000000,-66.7999490); //
	CreateDynamicObject(1676,-1839.1839590,1682.4252920,46.4886510,-0.2999990,-0.6000000,-66.7999490); //
	CreateDynamicObject(1676,-1836.8975830,1674.2982170,46.7835800,-0.2999990,-0.6000000,-73.8999020); //
	CreateDynamicObject(1676,-1835.4020990,1666.1691890,47.2740550,-0.2999990,-0.6000000,-73.8999020); //
	CreateDynamicObject(1676,-1833.9840080,1658.4774160,47.4896350,-0.2999990,-0.6000000,-78.6998970); //
	CreateDynamicObject(1676,-1833.0793450,1650.9516600,47.8218300,-0.2999990,-0.6000000,-78.6998970); //
	CreateDynamicObject(1676,-1832.2108150,1643.6616210,47.9910690,-0.2999990,-0.6000000,-85.8999090); //
	CreateDynamicObject(1676,-1831.6242670,1635.4824210,48.0769270,-0.2999990,-0.6000000,-85.8999090); //
	CreateDynamicObject(1676,-1831.1806640,1627.7753900,48.3183090,-0.2999990,-0.6000000,-85.8999090); //
	CreateDynamicObject(1676,-1830.9920650,1619.9123530,48.6577070,-0.2999990,-0.6000000,-93.0999290); //
	CreateDynamicObject(1676,-1830.7176510,1612.3583980,48.8130030,-0.2999990,-0.6000000,-93.0999290); //
	CreateDynamicObject(1676,-1831.0511470,1604.7147210,49.0026700,-0.2999990,-0.6000000,-93.0999290); //
	CreateDynamicObject(1676,-1831.1151120,1597.2379150,49.0791090,-0.2999990,-0.6000000,-93.0999290); //
	CreateDynamicObject(1676,-1831.3552240,1589.6044920,49.6182210,-0.2999990,-0.6000000,-93.0999290); //
	CreateDynamicObject(1676,-1831.7138670,1581.6826170,49.7009040,-0.2999990,-0.6000000,-93.0999290); //
	CreateDynamicObject(1676,-1832.0340570,1575.7299800,49.7632330,-0.2999990,-0.6000000,-93.0999290); //
	CreateDynamicObject(1676,-1904.2857660,1709.2691650,39.4799720,0.0000000,0.0000000,25.5999920); //
	CreateDynamicObject(1676,-1898.3363030,1713.2412100,41.2599980,0.0000000,0.0000000,25.5999920); //
	CreateDynamicObject(1676,-1891.4443350,1714.5085440,42.3300320,0.0000000,0.0000000,11.0999890); //
	CreateDynamicObject(1676,-1884.4696040,1714.0654290,42.6500470,0.0000000,0.0000000,-5.1000090); //
	CreateDynamicObject(1676,-1877.8781730,1712.0244140,43.1300390,0.0000000,0.0000000,-20.6000130); //
	CreateDynamicObject(1676,-1873.0119620,1708.0034170,43.7500530,0.0000000,0.0000000,-47.5000110); //
	CreateDynamicObject(1676,-1869.3325190,1702.0430900,44.4701110,0.0000000,0.0000000,-55.1999930); //
	CreateDynamicObject(1676,-1865.3172600,1695.5289300,45.0101310,0.0000000,0.0000000,-55.1999930); //
	CreateDynamicObject(1676,-1862.3593750,1688.8684080,45.5401490,0.0000000,0.0000000,-63.2999910); //
	CreateDynamicObject(1676,-1859.7489010,1682.3314200,46.0601950,0.0000000,0.0000000,-72.4999840); //
	CreateDynamicObject(1676,-1857.6612540,1674.6435540,46.5502200,0.0000000,0.0000000,-72.4999840); //
	CreateDynamicObject(1676,-1855.6500240,1667.1453850,46.9802200,0.0000000,0.0000000,-80.9999610); //
	CreateDynamicObject(1676,-1854.2399900,1659.3302000,47.3602440,0.0000000,0.0000000,-80.9999610); //
	CreateDynamicObject(1676,-1852.9349360,1651.7307120,47.6602700,0.0000000,0.0000000,-80.9999610); //
	CreateDynamicObject(1676,-1852.1910400,1643.7071530,47.9702750,0.0000000,0.0000000,-80.9999610); //
	CreateDynamicObject(1676,-1851.3835440,1635.0275870,48.3003000,0.0000000,0.0000000,-80.9999610); //
	CreateDynamicObject(1676,-1851.0767820,1627.5173330,48.5903160,0.0000000,0.0000000,-86.4999160); //
	CreateDynamicObject(1676,-1850.7792960,1619.0388180,48.8203390,0.0000000,0.0000000,-86.4999160); //
	CreateDynamicObject(1676,-1850.7141110,1611.0783690,49.0003280,0.0000000,0.0000000,-86.4999160); //
	CreateDynamicObject(1676,-1850.9821770,1601.7141110,49.4003210,0.0000000,0.0000000,-86.4999160); //
	CreateDynamicObject(1676,-1850.9655760,1592.6672360,49.6703220,0.0000000,0.0000000,-93.8998870); //
	CreateDynamicObject(1676,-1851.4693600,1585.2746580,49.6703220,0.0000000,0.0000000,-93.8998870); //
	CreateDynamicObject(1676,-1851.4556880,1579.4508050,50.0003120,0.0000000,0.0000000,-93.8998870); //
	CreateDynamicObject(18772,1478.0966790,1908.0614010,29.2299020,7.7999930,0.0000000,0.0000000); //
	CreateDynamicObject(18809,1478.7154540,2055.1770010,53.4195440,-78.3000180,0.4999980,-0.6999980); //
	CreateDynamicObject(18809,1479.7485350,2104.0383300,63.5380360,-78.3000180,0.4999980,-0.6999980); //
	CreateDynamicObject(18809,1480.7810050,2153.0104980,73.6809760,-78.3000180,0.4999980,-0.6999980); //
	CreateDynamicObject(18809,1481.8142080,2201.9172360,83.8097380,-78.3000180,0.4999980,-0.6999980); //
	CreateDynamicObject(18809,1482.8476560,2250.8857420,93.9527660,-78.3000180,0.4999980,-0.6999980); //
	CreateDynamicObject(18789,1484.6270750,2351.1606440,93.8569100,0.0000000,0.0000000,-90.9000010); //
	CreateDynamicObject(18789,1535.7425530,3146.7797850,93.8569100,0.0000000,0.0000000,-90.9000010); //
	CreateDynamicObject(18804,1537.9517820,3296.4008780,93.8600230,0.0000000,0.0000000,-90.7999640); //
	CreateDynamicObject(18789,1542.0714110,3507.4809570,80.5288770,0.0000000,0.0000000,-91.2999640); //
	CreateDynamicObject(18789,1486.9786370,2500.9357910,93.8569100,0.0000000,0.0000000,-90.9000010); //
	CreateDynamicObject(18789,1545.4687500,3657.1901850,80.5288770,0.0000000,0.0000000,-91.2999640); //
	CreateDynamicObject(18801,1556.8066400,3732.2956540,103.6206660,0.0000000,0.0000000,-82.4000540); //
	CreateDynamicObject(18801,1576.1081540,3737.2727050,103.6206660,0.0000000,0.0000000,-82.4000540); //
	CreateDynamicObject(18789,1587.4686270,3814.4750970,80.5288770,0.0000000,0.0000000,-91.2999640); //
	CreateDynamicObject(19005,1540.0838620,3422.0107420,83.5103680,0.0000000,0.0000000,179.5000450); //
	CreateDynamicObject(1655,1539.0913080,3371.4023430,94.8139410,0.0000000,0.0000000,-2.0999970); //
	CreateDynamicObject(18789,1489.3304440,2650.6530760,93.8569100,0.0000000,0.0000000,-90.9000010); //
	CreateDynamicObject(1655,1490.8793940,2727.6499020,95.2041620,0.0000000,0.0000000,-1.6000000); //
	CreateDynamicObject(18789,1492.4322500,2848.0358880,93.8569100,0.0000000,0.0000000,-90.9000010); //
	CreateDynamicObject(1655,1491.5953360,2774.1574700,95.3022910,0.0000000,0.0000000,179.3999630); //
	CreateDynamicObject(18801,1503.2802730,2923.9865720,116.9576030,0.0000000,0.0000000,-83.3000180); //
	CreateDynamicObject(18789,1514.1101070,2999.2548820,93.8569100,0.0000000,0.0000000,-90.9000010); //
	CreateDynamicObject(18801,1524.8712150,3070.0031730,116.9576030,0.0000000,0.0000000,-83.3000180); //
	CreateDynamicObject(18984,1590.6022940,3938.1975090,85.6259610,0.0000000,0.0000000,-1.6999990); //
	CreateDynamicObject(18984,1593.4798580,4035.1433100,85.6259610,0.0000000,0.0000000,-1.6999990); //
	CreateDynamicObject(18984,1596.4331050,4134.6513670,85.6259610,0.0000000,0.0000000,-1.6999990); //
	CreateDynamicObject(18984,1599.3835440,4234.0659170,85.6259610,0.0000000,0.0000000,-1.6999990); //
	CreateDynamicObject(18789,1603.3295890,4358.6406250,80.4193110,0.0000000,0.0000000,-91.5999980); //
	CreateDynamicObject(18801,1615.1236570,4435.8955070,103.5275190,0.0000000,0.0000000,-83.8000180); //
	CreateDynamicObject(18801,1634.4801020,4437.9990230,103.5275190,0.0000000,0.0000000,-83.8000180); //
	CreateDynamicObject(18789,1646.2630610,4514.6953120,80.4193110,0.0000000,0.0000000,-91.5999980); //
	CreateDynamicObject(18789,1652.4837640,4737.5312500,69.1593320,0.0000000,0.0000000,-91.5999980); //
	CreateDynamicObject(19005,1650.2369380,4652.8022460,72.1449730,0.0000000,0.0000000,-179.8000480); //
	CreateDynamicObject(1655,1648.6251220,4590.2241210,81.8060300,0.0000000,0.2000000,-0.0999990); //
	CreateDynamicObject(18789,1656.6527090,4886.7714840,69.1593320,0.0000000,0.0000000,-91.5999980); //
	CreateDynamicObject(18809,1658.7011710,4987.1762690,69.4954520,-100.9999000,0.0000000,0.0000000); //
	CreateDynamicObject(18809,1658.7011710,5036.1499020,59.9774160,-100.9999000,0.0000000,0.0000000); //
	CreateDynamicObject(8171,1677.6237790,5128.2558590,70.0201490,0.0000000,270.0000000,0.0000000); //
	CreateDynamicObject(8411,1657.1453850,5210.2573240,41.7819700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8171,1658.8344720,5128.2558590,50.5501320,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8171,1641.0721430,5128.6259760,70.1301570,0.0000000,90.0000000,0.0000000); //
	CreateDynamicObject(1676,1674.5903320,5059.9506830,52.1456900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,1670.5498040,5059.9506830,52.1456900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,1666.4200430,5059.9506830,52.1456900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,1651.1102290,5059.9506830,52.1456900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,1647.1199950,5059.9506830,52.1456900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1676,1643.2685540,5059.9506830,52.1456900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18778,-1599.7613520,-598.2051390,14.6580500,0.0000000,0.0000000,82.8001860); //
	CreateDynamicObject(1655,-1755.7327880,-564.8269650,16.3784060,0.0000000,0.0000000,-17.4999900); //
	CreateDynamicObject(1634,-1501.0137930,501.9759820,7.1138160,0.0000000,0.0000000,-91.2000120); //
	CreateDynamicObject(5147,-2259.0744620,2289.9963370,18.1606020,0.0000000,13.5000000,93.9999610); //
	CreateDynamicObject(5147,-2252.0310050,1352.5694580,50.3884840,-5.4000590,0.1000000,-91.8999550); //
	CreateDynamicObject(5147,-2247.8137200,1502.7669670,60.1534530,0.0000000,0.0000000,-90.6999580); //
	CreateDynamicObject(5147,-2245.5866690,1685.8248290,71.7474890,0.0000000,0.0000000,-90.6999580); //
	CreateDynamicObject(5147,-2242.8903800,1904.5916740,71.7474890,0.0000000,0.0000000,89.3001320); //
	CreateDynamicObject(5147,-2247.0715330,2093.5163570,58.3499980,0.0000000,0.9000000,92.5999980); //
	CreateDynamicObject(18767,2056.8818350,2358.6074210,154.1726220,0.0000000,0.0000000,178.3999630); //
	CreateDynamicObject(18767,2057.0742180,2368.2844230,163.5725250,0.0000000,0.0000000,-0.8000810); //
	CreateDynamicObject(18767,2056.8818350,2358.6074210,173.0325920,0.0000000,0.0000000,178.3999630); //
	CreateDynamicObject(18763,2059.8264160,2368.3432610,176.9903860,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18763,2059.8264160,2373.5830070,179.4203330,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18763,2059.8264160,2379.5566400,181.7604210,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18763,2059.8264160,2385.8085930,184.1103660,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18763,2059.8264160,2392.0185540,185.9803920,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18763,2059.8264160,2398.3232420,188.2604520,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18763,2059.8264160,2411.8073730,192.7202750,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18763,2059.8264160,2405.0065910,190.3104850,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18763,2059.8264160,2418.8991690,195.7103880,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18763,2059.8264160,2425.7395010,197.9403070,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(4882,2049.2231440,2445.0522460,205.1665190,0.0000000,0.0000000,88.6000130); //
	CreateDynamicObject(14596,2036.5765380,2463.9973140,211.3993830,0.0000000,0.0000000,178.0000760); //
	CreateDynamicObject(14596,2042.7302240,2462.1103510,228.7795100,-0.0999990,0.0000000,88.3000790); //
	CreateDynamicObject(5262,2035.4874260,2448.0808100,237.2682180,0.0000000,0.0000000,-88.5000000); //
	CreateDynamicObject(4106,2019.0944820,2448.0593260,240.2731930,0.0000000,0.0000000,91.0000300); //
	CreateDynamicObject(3399,1984.9478750,2446.3178710,244.0337980,0.0000000,0.0000000,-178.7999870); //
	CreateDynamicObject(7025,1967.2929680,2446.1103510,246.7478630,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(8078,1943.8424070,2446.3317870,246.9498900,0.0000000,0.0000000,-88.6999960); //
	CreateDynamicObject(8078,1921.1384270,2445.8188470,250.1697990,0.0000000,0.0000000,-88.6999960); //
	CreateDynamicObject(3374,1906.4807120,2445.7526850,255.7027430,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3374,1899.1899410,2445.7526850,258.0527030,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3374,1890.7078850,2445.7526850,259.9725950,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18813,1841.7534170,2444.4738760,233.3115840,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18772,-1438.6960440,-302.9649350,48.4868920,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18761,-1348.1740720,-222.8122710,18.0412690,0.0000000,0.0000000,-44.6000210); //
	CreateDynamicObject(19130,-1345.1068110,-225.4281150,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1346.1679680,-224.2594900,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1347.3170160,-222.9947350,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1348.5059810,-221.6856530,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1349.6351310,-220.4430990,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1350.8723140,-219.0822440,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(18772,-1559.6821280,-410.7562250,92.8148490,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18772,-1735.6257320,-567.5122070,157.2788690,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18772,-1908.1694330,-721.2392570,220.4975890,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18772,-2062.3139640,-858.5717770,276.9744560,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18772,-2237.1479490,-1014.3449700,341.0352170,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18777,-2312.5988760,-1108.0737300,373.3399960,19.7999820,0.7999970,127.4999000); //
	CreateDynamicObject(18772,-2413.8879390,-1149.5689690,444.5749510,-22.3000060,-2.0999970,-56.7000570); //
	CreateDynamicObject(18772,-2601.4250480,-1272.7534170,536.5960690,-22.3000060,-2.0999970,-56.7000570); //
	CreateDynamicObject(6959,-2715.0598140,-1348.2008050,582.7642820,-2.7999980,-1.5999950,-56.7998540); //
	CreateDynamicObject(6959,-2747.6657710,-1369.5357660,584.6691280,-2.7999980,-1.5999950,-56.7998540); //
	CreateDynamicObject(6959,-2759.3654780,-1351.5710440,599.3740230,0.6001710,92.6999130,123.6004330); //
	CreateDynamicObject(6959,-2726.6303710,-1330.0771480,598.8946530,0.6001710,92.6999130,123.1004400); //
	CreateDynamicObject(6959,-2737.3898920,-1386.4658200,601.3277580,0.6001710,92.6999130,123.6004330); //
	CreateDynamicObject(6959,-2704.1713860,-1364.5021970,600.8325190,0.6001710,92.6999130,123.1004400); //
	CreateDynamicObject(6959,-2763.2431640,-1380.3542480,601.3837280,0.7001690,86.8998940,-146.4993590); //
	CreateDynamicObject(6959,-2764.7814940,-1378.0258780,601.3496700,0.7001690,86.8998940,-146.4993590); //
	CreateDynamicObject(3461,-2695.3356930,-1342.0844720,583.4057610,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2694.5976560,-1343.2541500,583.4031980,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2693.7998040,-1344.4683830,583.4002680,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2692.9812010,-1345.6734610,583.4373160,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2692.1645500,-1347.0532220,583.4343260,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2691.2734370,-1348.5620110,583.4312130,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2690.4685050,-1349.9241940,583.4281000,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2689.4599600,-1351.3978270,583.4248650,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2688.4199210,-1352.7697750,583.4213250,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2687.6047360,-1354.1494140,583.4182120,-0.0999980,0.0999990,-59.4999920); //
	CreateDynamicObject(3461,-2702.7282710,-1331.1589350,582.9777830,-4.1000010,-2.9999990,-59.4999920); //
	CreateDynamicObject(3461,-2703.7575680,-1329.6437980,582.8895870,-4.1000010,-2.9999990,-59.4999920); //
	CreateDynamicObject(3461,-2704.8974600,-1327.9615470,582.7918700,-4.1000010,-2.9999990,-59.4999920); //
	CreateDynamicObject(3461,-2705.9035640,-1326.2707510,582.6882320,-4.1000010,-2.9999990,-59.4999920); //
	CreateDynamicObject(3461,-2706.9963370,-1324.4333490,582.5762930,-4.1000010,-2.9999990,-59.4999920); //
	CreateDynamicObject(3461,-2708.0644530,-1322.6386710,582.4666130,-4.1000010,-2.9999990,-59.4999920); //
	CreateDynamicObject(3461,-2709.1381830,-1320.8361810,582.3563230,-4.1000010,-2.9999990,-59.4999920); //
	CreateDynamicObject(18772,-1438.6960440,-302.9649350,48.4868920,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18761,-1348.1740720,-222.8122710,18.0412690,0.0000000,0.0000000,-44.6000210); //
	CreateDynamicObject(19130,-1345.1068110,-225.4281150,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1346.1679680,-224.2594900,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1347.3170160,-222.9947350,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1348.5059810,-221.6856530,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1349.6351310,-220.4430990,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(19130,-1350.8723140,-219.0822440,18.7735950,0.0000000,0.0000000,-137.6999960); //
	CreateDynamicObject(18772,-1559.6821280,-410.7562250,92.8148490,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18772,-1735.6257320,-567.5122070,157.2788690,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18772,-1908.1694330,-721.2392570,220.4975890,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18772,-2062.3139640,-858.5717770,276.9744560,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18772,-2237.1479490,-1014.3449700,341.0352170,15.3000020,-0.5000000,131.6999660); //
	CreateDynamicObject(18777,-2312.5988760,-1108.0737300,373.3399960,19.7999820,0.7999970,127.4999000); //
	CreateDynamicObject(5147,1715.6992200,-2716.7998000,30.0000000,0.0000000,5.9990000,87.9950000); //object(sanpedbigbrid_las2)(1)
	CreateDynamicObject(5147,1706.5400400,-2901.5000000,61.2000000,0.0000000,6.0000000,86.0000000); //object(sanpedbigbrid_las2)(2)
	CreateDynamicObject(5147,1693.8000500,-3083.5000000,92.0000000,0.0000000,6.0000000,86.0000000); //object(sanpedbigbrid_las2)(3)
	CreateDynamicObject(5147,1678.0000000,-3270.8000500,123.5200000,0.0000000,6.0000000,84.0000000); //object(sanpedbigbrid_las2)(4)
	CreateDynamicObject(5147,1655.7700200,-3456.8999000,154.8999900,0.0000000,6.0000000,82.0000000); //object(sanpedbigbrid_las2)(5)
	CreateDynamicObject(5147,1629.5400400,-3643.3000500,186.3999900,0.0000000,6.0000000,82.0000000); //object(sanpedbigbrid_las2)(6)
	CreateDynamicObject(5147,1603.7226600,-3827.0000000,217.7000000,0.0000000,5.9990000,81.9960000); //object(sanpedbigbrid_las2)(7)
	CreateDynamicObject(5147,1577.8000500,-4011.3999000,249.0000000,0.0000000,6.0000000,82.0000000); //object(sanpedbigbrid_las2)(8)
	CreateDynamicObject(5147,1551.5999800,-4197.7002000,280.5199900,0.0000000,6.0000000,82.0000000); //object(sanpedbigbrid_las2)(9)
	CreateDynamicObject(5147,1526.3399700,-4377.5000000,311.2999900,0.0000000,6.0000000,82.0000000); //object(sanpedbigbrid_las2)(10)
	CreateDynamicObject(5147,1502.1500200,-4549.7002000,341.0000000,0.0000000,6.0000000,82.0000000); //object(sanpedbigbrid_las2)(11)
	CreateDynamicObject(5147,1476.7793000,-4730.2998000,371.8800000,0.0000000,5.9990000,81.9960000); //object(sanpedbigbrid_las2)(12)
	CreateDynamicObject(5147,1450.9000200,-4914.5000000,403.1799900,0.0000000,6.0000000,82.0000000); //object(sanpedbigbrid_las2)(13)
	CreateDynamicObject(5147,1425.1400100,-5097.8999000,434.3599900,0.0000000,6.0000000,82.0000000); //object(sanpedbigbrid_las2)(14)
	CreateDynamicObject(6959,1406.5000000,-5227.7998000,448.0000000,0.0000000,0.0000000,349.9970000); //object(vegasnbball1)(1)
	CreateDynamicObject(6959,1399.5996100,-5267.2002000,448.0000000,0.0000000,0.0000000,349.9970000); //object(vegasnbball1)(2)
	CreateDynamicObject(6959,1426.6992200,-5231.5996100,467.0000000,0.0000000,90.0000000,349.9970000); //object(vegasnbball1)(3)
	CreateDynamicObject(6959,1420.0996100,-5269.2998000,467.0000000,0.0000000,90.0000000,349.9970000); //object(vegasnbball1)(5)
	CreateDynamicObject(6959,1379.8000500,-5263.5000000,467.0000000,0.0000000,90.0000000,349.9970000); //object(vegasnbball1)(7)
	CreateDynamicObject(6959,1397.1999500,-5285.8999000,467.0000000,0.0000000,90.0000000,80.9970000); //object(vegasnbball1)(8)
	CreateDynamicObject(6959,1386.2970000,-5224.2002000,467.0000000,0.0000000,90.0000000,349.9970000); //object(vegasnbball1)(9)
	CreateDynamicObject(6959,1382.0996100,-5248.0000000,467.0000000,0.0000000,90.0000000,349.9970000); //object(vegasnbball1)(10)
	CreateDynamicObject(3524,1428.5996100,-5211.7002000,450.8999900,0.0000000,0.0000000,187.9980000); //object(skullpillar01_lvs)(1)
	CreateDynamicObject(3524,1426.3000500,-5211.2998000,450.8999900,0.0000000,0.0000000,188.0000000); //object(skullpillar01_lvs)(2)
	CreateDynamicObject(3524,1424.0999800,-5211.1001000,450.8999900,0.0000000,0.0000000,188.0000000); //object(skullpillar01_lvs)(3)
	CreateDynamicObject(3524,1421.8994100,-5210.7002000,450.8999900,0.0000000,0.0000000,187.9980000); //object(skullpillar01_lvs)(4)
	CreateDynamicObject(3524,1391.5999800,-5205.0000000,450.8999900,0.0000000,0.0000000,152.0000000); //object(skullpillar01_lvs)(5)
	CreateDynamicObject(3524,1393.5000000,-5205.3999000,450.8999900,0.0000000,0.0000000,153.9950000); //object(skullpillar01_lvs)(6)
	CreateDynamicObject(3524,1395.5999800,-5206.1001000,450.8999900,0.0000000,0.0000000,155.9950000); //object(skullpillar01_lvs)(7)
	CreateDynamicObject(3524,1397.4000200,-5206.2002000,450.8999900,0.0000000,0.0000000,161.9990000); //object(skullpillar01_lvs)(8)
	CreateDynamicObject(3877,1418.3000500,-5208.5000000,451.1000100,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(1)
	CreateDynamicObject(3877,1401.0999800,-5206.1001000,451.2000100,0.0000000,0.0000000,0.0000000); //object(sf_rooflite)(2)
	CreateDynamicObject(3524,1399.0999800,-5206.7002000,450.8999900,0.0000000,0.0000000,161.0000000); //object(skullpillar01_lvs)(9)
	CreateDynamicObject(3524,1420.5999800,-5210.2998000,450.8999900,0.0000000,0.0000000,0.0000000); //object(skullpillar01_lvs)(10)
	CreateDynamicObject(6959,1396.0999800,-5286.1001000,467.0000000,0.0000000,90.0000000,259.9970000); //object(vegasnbball1)(11)
	CreateDynamicObject(5147,-1117.2998000,-13.5996100,22.9500000,0.0000000,0.0000000,223.9950000); //
	CreateDynamicObject(5147,-961.0999800,137.2000000,22.9500000,0.0000000,0.0000000,44.0000000); //
	CreateDynamicObject(5147,-853.2899800,237.7000000,23.0000000,0.0000000,0.0000000,222.0000000); //
	CreateDynamicObject(5147,-711.0300300,362.2000100,40.0000000,0.0000000,4.0000000,220.0000000); //
	CreateDynamicObject(5147,-564.0000000,482.0000000,65.0000000,0.0000000,4.0000000,218.0000000); //
	CreateDynamicObject(5147,-419.5000000,594.9000200,89.5000000,0.0000000,4.0000000,218.0000000); //
	CreateDynamicObject(5147,-271.2999900,710.7000100,114.4000000,0.0000000,4.0000000,218.0000000); //
	CreateDynamicObject(5147,-122.7000000,826.7999900,142.0000000,0.0000000,6.0000000,218.0000000); //
	CreateDynamicObject(5147,17.2000000,936.0999800,172.2599900,0.0000000,6.0000000,218.0000000); //
	CreateDynamicObject(5147,164.2599900,1051.0000000,203.6000100,0.0000000,6.0000000,218.0000000); //
	CreateDynamicObject(5147,312.3299900,1166.6999500,235.1000100,0.0000000,6.0000000,218.0000000); //
	CreateDynamicObject(5147,459.3994100,1281.5996100,266.3999900,0.0000000,5.9990000,217.9960000); //
	CreateDynamicObject(5147,606.5999800,1396.5999800,297.7500000,0.0000000,6.0000000,218.0000000); //
	CreateDynamicObject(5147,751.5000000,1509.8000500,328.7999900,0.0000000,6.0000000,218.0000000); //
	CreateDynamicObject(5147,897.2999900,1623.6999500,359.9800100,0.0000000,6.0000000,218.0000000); //
	CreateDynamicObject(5147,1044.7500000,1738.9000200,391.3999900,0.0000000,6.0000000,218.0000000); //
	CreateDynamicObject(6959,1178.9799800,1846.5999800,404.8999900,0.0000000,0.0000000,40.0000000); //
	CreateDynamicObject(6959,1159.5000000,1804.5000000,425.0000000,0.0000000,90.0000000,130.0000000); //
	CreateDynamicObject(6959,1147.3000500,1820.0999800,404.8999900,0.0000000,0.0000000,40.0000000); //
	CreateDynamicObject(6959,1189.3000500,1829.5000000,425.0000000,0.0000000,90.0000000,130.0000000); //
	CreateDynamicObject(6959,1192.5000000,1831.8000500,425.0000000,0.0000000,90.0000000,130.0000000); //
	CreateDynamicObject(6959,1194.4000200,1859.4000200,425.0000000,0.0000000,90.0000000,38.0000000); //
	CreateDynamicObject(6959,1167.4000200,1862.0999800,425.0000000,0.0000000,90.0000000,308.0000000); //
	CreateDynamicObject(6959,1133.8000500,1834.6999500,425.0000000,0.0000000,90.0000000,310.0000000); //
	CreateDynamicObject(6959,1147.0999800,1845.5000000,425.0000000,0.0000000,90.0000000,310.0000000); //
	CreateDynamicObject(3524,1119.8000500,1820.8000500,407.7999900,0.0000000,0.0000000,312.0000000); //
	CreateDynamicObject(3524,1121.1999500,1819.3000500,407.7999900,0.0000000,0.0000000,322.0000000); //
	CreateDynamicObject(3524,1122.4000200,1817.5999800,407.7999900,0.0000000,0.0000000,318.0000000); //
	CreateDynamicObject(3524,1124.0000000,1815.9000200,407.7999900,0.0000000,0.0000000,328.0000000); //
	CreateDynamicObject(3524,1138.9000200,1798.1999500,407.7999900,0.0000000,0.0000000,292.0000000); //
	CreateDynamicObject(3524,1140.1999500,1796.6999500,407.7999900,0.0000000,0.0000000,298.0000000); //
	CreateDynamicObject(3524,1141.5000000,1795.3000500,407.7999900,0.0000000,0.0000000,300.0000000); //
	CreateDynamicObject(3524,1142.8000500,1793.4000200,407.7999900,0.0000000,0.0000000,308.0000000); //
	CreateDynamicObject(3877,1125.5999800,1813.0999800,408.1000100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,1136.9000200,1800.0000000,408.2000100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(5147,839.0999800,-2145.3000500,21.7000000,0.0000000,0.0000000,92.0000000); //
	CreateDynamicObject(5147,846.8880000,-2369.1001000,21.7000000,0.0000000,0.0000000,272.0000000); //
	CreateDynamicObject(5147,852.0999800,-2516.1999500,21.7000000,0.0000000,0.0000000,92.0000000); //
	CreateDynamicObject(5147,848.2999900,-2738.8000500,21.7000000,0.0000000,0.0000000,266.0000000); //
	CreateDynamicObject(5147,832.5399800,-2889.1999500,21.7000000,0.0000000,0.0000000,82.0000000); //
	CreateDynamicObject(5147,793.6494100,-3109.5996100,21.7000000,0.0000000,0.0000000,257.9970000); //
	CreateDynamicObject(5147,689.2998000,-3179.8994100,21.9000000,0.0000000,0.0000000,349.9970000); //
	CreateDynamicObject(17927,772.7999900,-3155.5000000,13.2000000,0.0000000,0.0000000,257.9920000); //
	CreateDynamicObject(11353,788.7998000,-3180.0000000,16.2000000,0.0000000,0.0000000,347.9920000); //
	CreateDynamicObject(11353,756.7999900,-3200.3999000,16.2000000,0.0000000,0.0000000,80.0000000); //
	CreateDynamicObject(978,776.4000200,-3202.6001000,12.8000000,0.0000000,0.0000000,347.9970000); //
	CreateDynamicObject(978,769.3994100,-3201.5000000,12.8000000,0.0000000,0.0000000,353.9960000); //
	CreateDynamicObject(5147,476.6000100,-3142.3000500,21.9000000,0.0000000,0.0000000,170.0000000); //
	CreateDynamicObject(5147,325.2999900,-3115.6799300,21.9000000,0.0000000,0.0000000,350.0000000); //
	CreateDynamicObject(5147,104.2000000,-3076.6499000,21.9000000,0.0000000,0.0000000,170.0000000); //
	CreateDynamicObject(5147,-41.6000000,-3051.0000000,21.9000000,0.0000000,0.0000000,350.0000000); //
	CreateDynamicObject(5147,-262.7000100,-3011.9799800,21.9000000,0.0000000,0.0000000,170.0000000); //
	CreateDynamicObject(5147,-415.5000000,-2990.5600600,21.9000000,0.0000000,0.0000000,354.0000000); //
	CreateDynamicObject(5147,-637.5999800,-2971.1001000,21.9000000,0.0000000,0.0000000,176.0000000); //
	CreateDynamicObject(5147,-788.2000100,-2963.2399900,21.9000000,0.0000000,0.0000000,358.0000000); //
	CreateDynamicObject(5147,-1011.7000100,-2963.1599100,21.9000000,0.0000000,0.0000000,182.0000000); //
	CreateDynamicObject(5147,-1168.1999500,-2971.3999000,21.9000000,0.0000000,0.0000000,4.0000000); //
	CreateDynamicObject(5147,-1391.3000500,-2983.1001000,21.9000000,0.0000000,0.0000000,182.0000000); //
	CreateDynamicObject(5147,-1545.5000000,-2988.5000000,21.9000000,0.0000000,0.0000000,2.0000000); //
	CreateDynamicObject(5147,-1767.3000500,-2992.3999000,21.9000000,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(5147,-1920.1999500,-2995.1001000,21.9000000,0.0000000,0.0000000,2.0000000); //
	CreateDynamicObject(5147,-2137.5000000,-3002.7998000,21.9000000,0.0000000,0.0000000,182.0000000); //
	CreateDynamicObject(7992,-2407.2998000,-2968.3994100,22.6000000,0.0000000,0.0000000,95.9990000); //
	CreateDynamicObject(5147,-2378.1001000,-2853.3999000,33.0000000,0.0000000,0.0000000,244.0000000); //
	CreateDynamicObject(17927,-2326.5200200,-2772.3999000,35.0000000,0.0000000,348.0000000,64.0000000); //
	CreateDynamicObject(11353,-2320.6001000,-2754.8999000,43.4000000,8.0000000,0.0000000,334.0000000); //
	CreateDynamicObject(11353,-2335.6999500,-2747.6001000,44.7000000,7.0000000,0.0000000,334.0000000); //
	CreateDynamicObject(11353,-2413.3999000,-3000.1999500,28.5000000,4.0000000,0.0000000,4.0000000); //
	CreateDynamicObject(11353,-2418.3000500,-2947.6001000,29.5000000,358.0000000,0.0000000,4.0000000); //
	CreateDynamicObject(5147,-2280.8898900,-3008.5000000,21.7000000,4.0000000,0.0000000,2.0000000); //
	CreateDynamicObject(11353,-2385.0000000,-3021.3000500,26.7000000,0.0000000,0.0000000,274.0000000); //
	CreateDynamicObject(979,784.0000000,-3191.1001000,12.8000000,0.0000000,0.0000000,76.0000000); //
	CreateDynamicObject(979,781.9000200,-3198.8999000,12.8000000,0.0000000,0.0000000,74.0000000); //
	CreateDynamicObject(979,-2396.8999000,-3020.1999500,23.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(979,-2406.1999500,-3020.1999500,23.6000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(978,-2409.8999000,-3015.6999500,24.0000000,0.0000000,4.0000000,282.0000000); //
	CreateDynamicObject(979,-2411.3999000,-3006.6999500,24.6000000,0.0000000,4.0000000,274.0000000); //
	CreateDynamicObject(5794,-1178.0996100,-515.1992200,31.0000000,2.1000000,0.0000000,59.9910000); //
	CreateDynamicObject(17684,-1242.0999800,396.5000000,4.1000000,356.9900000,0.0000000,24.8900000); //
	CreateDynamicObject(5147,-963.7000100,523.5999800,22.9000000,0.0000000,0.0000000,222.4000000); //
	CreateDynamicObject(5147,-803.7999900,676.2999900,22.9000000,0.0000000,0.0000000,44.9950000); //
	CreateDynamicObject(17920,-1738.6372070,-155.3505550,4.3131850,0.0000000,2.5783000,323.5944000); //
	CreateDynamicObject(3437,-1713.1807860,-184.8378600,18.8090420,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(3437,-1702.3818360,-169.8572240,18.8666530,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(3877,-1712.1102290,-185.6809080,14.8141780,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1701.1483150,-170.5289610,14.8141780,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,-1716.4985350,-192.7309570,13.3925990,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,-1696.8507080,-164.7931520,13.2676010,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3524,-1746.2385250,-164.5456090,5.7441670,0.0000000,0.0000000,67.5000000); //
	CreateDynamicObject(3524,-1736.1975100,-148.5428160,5.7171860,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(979,-1715.9039310,-189.6457520,13.9636580,0.0000000,0.0000000,238.8284000); //
	CreateDynamicObject(979,-1720.2272950,-197.4777830,13.9636580,0.0000000,0.0000000,243.1255000); //
	CreateDynamicObject(3437,-1747.2403560,-162.6966400,8.4152890,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(3437,-1738.2467040,-148.8142700,8.4095190,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(3472,-1740.0517580,-174.8252260,2.9180770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,-1724.2550050,-151.5740970,2.9238470,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1655,336.8999900,835.0000000,20.1000000,4.0000000,0.0000000,174.0000000); //
	CreateDynamicObject(3437,-1755.5699460,-127.3948210,8.1383020,0.0000000,0.0000000,314.1406000); //
	CreateDynamicObject(3437,-1753.8571780,-129.1964570,8.0994230,0.0000000,0.0000000,314.1406000); //
	CreateDynamicObject(3437,-1752.0034180,-131.0384220,8.0824310,0.0000000,0.0000000,314.1406000); //
	CreateDynamicObject(3437,-1750.4749760,-133.1279140,8.4152890,0.0000000,0.0000000,302.8906000); //
	CreateDynamicObject(3437,-1749.0627440,-135.2506710,8.4152890,0.0000000,0.0000000,302.8906000); //
	CreateDynamicObject(3437,-1747.6324460,-137.3954320,8.4152890,0.0000000,0.0000000,302.8906000); //
	CreateDynamicObject(3437,-1746.0584720,-139.5672910,8.4152890,0.0000000,0.0000000,302.8906000); //
	CreateDynamicObject(3437,-1744.6864010,-141.7409970,8.4152890,0.0000000,0.0000000,302.8906000); //
	CreateDynamicObject(3437,-1743.2963870,-144.0124970,8.4152890,0.0000000,0.0000000,302.8906000); //
	CreateDynamicObject(3437,-1741.8751220,-146.2435910,8.4152890,0.0000000,0.0000000,302.8906000); //
	CreateDynamicObject(3437,-1740.4500730,-148.4244380,8.4095190,0.0000000,0.0000000,302.8906000); //
	CreateDynamicObject(3437,-1747.1994630,-137.9027250,8.4152890,0.0000000,0.0000000,302.8906000); //
	CreateDynamicObject(3511,-1750.2756350,-161.2138060,2.5484640,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1754.0152590,-157.4819340,2.5484640,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1757.9606930,-152.9644170,2.5484640,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1762.3356930,-148.7196350,2.5484640,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1766.2279050,-144.3757480,2.5484660,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1769.7106930,-139.2966920,2.5484640,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1218.2165530,323.2463990,12.8658440,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1199.9313960,338.5021060,12.8437440,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1284.7126460,444.6337590,6.0996920,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1254.7149660,457.5834660,5.9812760,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1124.9875490,-510.3674010,28.6615300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1150.9558110,-555.0911870,28.5663070,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1155.7836910,-540.8859860,27.6362970,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1134.4411620,-515.1628420,26.3894820,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3511,-1161.7060550,-555.3942260,29.3606050,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1026.5473600,478.5980200,12.9083100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1013.3760400,465.5700400,12.8083100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1039.2475600,492.5167500,13.0143500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1001.0320400,453.2559200,12.8133500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3528,-1027.5504200,477.9332300,19.1941000,0.0000000,0.0000000,220.0000000); //
	CreateDynamicObject(3528,-1014.1743200,465.0087900,19.1941000,0.0000000,0.0000000,220.0000000); //
	CreateDynamicObject(3115,-1494.9871800,491.0352500,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1516.0437000,491.2224100,5.8380300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1516.1358600,509.5997900,5.8360100,0.0000000,0.0000000,0.0600000); //
	CreateDynamicObject(3115,-1495.0394300,509.8175700,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1516.2486600,528.4675300,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1495.1198700,528.5792800,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1026.5473600,478.5980200,12.9083100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1049.4821800,483.3050500,12.8083100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1018.5502300,434.9655800,13.0143500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1001.0320400,453.2559200,12.8133500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3528,-1027.5504200,477.9332300,19.1941000,0.0000000,0.0000000,220.0000000); //
	CreateDynamicObject(3528,-1014.1743200,465.0087900,19.1941000,0.0000000,0.0000000,220.0000000); //
	CreateDynamicObject(3115,-1494.9871800,491.0352500,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1516.0437000,491.2224100,5.8380300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1516.1358600,509.5997900,5.8360100,0.0000000,0.0000000,0.0600000); //
	CreateDynamicObject(3115,-1495.0394300,509.8175700,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1516.2486600,528.4675300,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1495.1198700,528.5792800,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1026.5473600,478.5980200,12.9083100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1008.3070100,444.8798800,12.8083100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1058.5913100,473.3150300,13.0143500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3505,-1001.0320400,453.2559200,12.8133500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3528,-1027.5504200,477.9332300,19.1941000,0.0000000,0.0000000,220.0000000); //
	CreateDynamicObject(3528,-1014.1743200,465.0087900,19.1941000,0.0000000,0.0000000,220.0000000); //
	CreateDynamicObject(3115,-1494.9871800,491.0352500,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1516.0437000,491.2224100,5.8380300,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1516.1358600,509.5997900,5.8360100,0.0000000,0.0000000,0.0600000); //
	CreateDynamicObject(3115,-1495.0394300,509.8175700,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1516.2486600,528.4675300,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3115,-1495.1198700,528.5792800,5.8410400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3437,-1033.8177500,485.6714200,18.9780200,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3437,-1035.7470700,487.5351300,18.9780200,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3437,-1037.6366000,489.3846100,18.9780200,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3437,-1006.2374900,458.0864000,18.9780200,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3437,-1004.3612700,456.2184800,18.9780200,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3437,-1002.4623400,454.3174400,18.9780200,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3472,-1005.4602100,448.8707900,13.7344100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,-1013.0752600,440.4852600,13.7344100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,-1025.1903100,428.8572100,13.7344100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,-1044.4438500,487.7459400,13.7344100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,-1054.4128400,477.5723000,13.7344100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3472,-1064.1927500,467.4190700,13.7344100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18750,-1020.4548300,474.3508000,66.2610000,97.0000000,2.0000000,313.4473600); //
	CreateDynamicObject(3505,-1068.2766100,463.6104400,13.0143500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3437,-1071.4752200,460.5138900,18.8891800,0.0000000,0.0000000,136.0000000); //
	CreateDynamicObject(3437,-1078.6484400,453.0528000,18.8891800,0.0000000,0.0000000,136.0000000); //
	CreateDynamicObject(3437,-1084.5858200,447.0881300,18.8891800,0.0000000,0.0000000,136.0000000); //
	CreateDynamicObject(3437,-1032.8326400,421.2062100,18.8891800,0.0000000,0.0000000,136.0000000); //
	CreateDynamicObject(3437,-1040.5555400,413.5231300,18.8891800,0.0000000,0.0000000,136.0000000); //
	CreateDynamicObject(3437,-1046.3342300,407.8350200,18.8891800,0.0000000,0.0000000,136.0000000); //
	CreateDynamicObject(1633,2485.0000000,-1790.9000200,13.9000000,3.9990000,0.0000000,181.0000000); //
	CreateDynamicObject(3080,-1126.1999500,-416.6000100,14.4000000,4.9990000,0.0000000,259.9970000); //
	CreateDynamicObject(11470,-2815.3999000,-1523.0999800,148.2000000,0.0000000,0.0000000,266.0000000); //
	CreateDynamicObject(1491,-2821.1001000,-1517.9000200,139.8000000,0.0000000,0.0000000,272.0000000); //
	CreateDynamicObject(1491,-2811.3999000,-1523.3000500,139.8000000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1786,-2816.3000500,-1515.1999500,141.6000100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2566,-2813.6999500,-1528.3000500,140.3999900,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(3032,-2817.1999500,-1531.0999800,141.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3032,-2813.6001000,-1531.0999800,142.1000100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3032,-2820.8999000,-1528.6999500,142.1000100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3032,-2818.3999000,-1514.9000200,142.1000100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3032,-2811.3999000,-1528.6999500,142.1000100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3032,-2811.3999000,-1518.4000200,142.1000100,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3032,-2814.3999000,-1515.0000000,142.1000100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2514,-2812.1999500,-1515.8000500,139.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2523,-2812.0000000,-1516.6999500,139.8999900,0.0000000,0.0000000,272.0000000); //
	CreateDynamicObject(2526,-2813.1999500,-1519.5999800,139.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1760,-2815.3999000,-1519.8000500,139.8000000,0.0000000,0.0000000,184.0000000); //
	CreateDynamicObject(1707,-2820.3000500,-1516.0999800,139.8000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2016,-2812.3000500,-1530.3000500,139.8000000,0.0000000,0.0000000,182.0000000); //
	CreateDynamicObject(2764,-2816.1001000,-1525.0000000,140.2000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2121,-2816.1001000,-1524.1999500,140.3999900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2121,-2817.0000000,-1524.8000500,140.3999900,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(2121,-2815.1001000,-1524.9000200,140.3999900,0.0000000,0.0000000,272.0000000); //
	CreateDynamicObject(2121,-2816.1001000,-1525.8000500,140.3999900,0.0000000,0.0000000,180.0000000); //
	CreateDynamicObject(1828,-2815.3000500,-1528.0999800,140.1000100,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14556,-2818.8999000,-1530.0000000,141.3999900,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2704,-2818.6789600,-1530.0000000,141.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2706,-2819.5000000,-1530.0000000,141.5000000,0.0000000,0.0000000,174.0000000); //
	CreateDynamicObject(2689,-2819.0000000,-1530.0000000,140.7000000,0.0000000,0.0000000,166.0000000); //
	CreateDynamicObject(2573,-2811.8999000,-1525.9000200,139.8000000,0.0000000,0.0000000,272.0000000); //
	CreateDynamicObject(15036,-2819.1999500,-1523.4000200,141.0000000,0.0000000,0.0000000,272.0000000); //
	CreateDynamicObject(2541,-2819.8000500,-1527.0000000,139.8000000,0.0000000,0.0000000,92.0000000); //
	CreateDynamicObject(1550,-2815.3999000,-1531.0999800,142.2000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1550,-2816.5000000,-1531.0999800,142.2000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(7416,-1353.4583740,-64.3754350,1061.3756100,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(7416,-1287.6585690,-130.1508180,1061.3518070,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(18228,-1419.6429440,-83.5943300,1066.2766110,0.0000000,359.1406000,87.4991000); //
	CreateDynamicObject(18228,-1390.8327640,-115.4020610,1066.4017330,0.0000000,359.1406000,87.4991000); //
	CreateDynamicObject(18228,-1363.5296630,-146.2887270,1066.0526120,0.0000000,359.1406000,87.4991000); //
	CreateDynamicObject(18228,-1335.0335690,-175.0993350,1067.2287600,0.0000000,359.1406000,99.5315000); //
	CreateDynamicObject(18228,-1321.0906980,-184.9618840,1065.8524170,0.0000000,359.1406000,99.5315000); //
	CreateDynamicObject(18228,-1274.6439210,-187.1837160,1065.9525150,0.0000000,359.1406000,174.7665000); //
	CreateDynamicObject(18228,-1239.3424070,-159.5671080,1064.2586670,0.0000000,359.1406000,185.0800000); //
	CreateDynamicObject(18228,-1229.8411870,-109.0114970,1066.4107670,0.0000000,359.1406000,275.0799000); //
	CreateDynamicObject(18228,-1223.0837400,-126.8283000,1068.1348880,0.0000000,359.1406000,230.0799000); //
	CreateDynamicObject(18228,-1260.4382320,-81.3125460,1064.7341310,0.0000000,359.1406000,275.0799000); //
	CreateDynamicObject(18228,-1333.3688960,-2.2935410,1065.9090580,0.0000000,359.1406000,278.7490000); //
	CreateDynamicObject(3749,-1309.8651120,-50.7845690,1067.2167970,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(18228,-1318.2178960,-16.7885840,1067.4855960,0.0000000,359.1406000,278.7490000); //
	CreateDynamicObject(18228,-1270.6613770,-74.2714460,1064.0584720,0.0000000,359.1406000,275.3113000); //
	CreateDynamicObject(11490,-1278.7440190,-143.4712520,1061.2724610,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(11491,-1286.5161130,-135.7111050,1062.7756350,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(18259,-1281.2974850,-102.3951340,1062.9827880,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(18259,-1319.9495850,-147.8771510,1063.0750730,0.0000000,0.0000000,222.4217000); //
	CreateDynamicObject(18266,-1344.3367920,-117.2627330,1065.8083500,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(11317,-1373.3977050,-71.9253390,1072.2047120,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(3509,-1319.4970700,-48.5373040,1061.3679200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1307.5855710,-59.7678760,1061.3757320,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1322.7858890,-51.3076900,1061.3679200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1311.2333980,-63.5957600,1061.3757320,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1326.1429440,-54.6621630,1061.3679200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1314.0770260,-66.4937290,1061.3757320,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1337.1944580,-80.3966670,1061.2678220,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1352.2185060,-95.2161100,1061.2427980,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1321.2280270,-126.5632020,1061.2690430,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1296.1141360,-155.2393490,1061.3441160,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1268.8859860,-127.9422230,1061.3441160,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1338.3692630,-108.8136830,1061.3757320,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(714,-1246.1040040,-131.0802920,1060.4029540,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(714,-1289.8183590,-169.0874630,1060.4201660,359.1406000,0.0000000,326.2501000); //
	CreateDynamicObject(715,-1304.2147220,-157.4706120,1069.2279050,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(715,-1266.1274410,-120.6636890,1069.2779540,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(714,-1293.4635010,-84.6848680,1060.2277830,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1380.7142330,-35.0324710,1061.3757320,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1369.5180660,-45.6521720,1061.3757320,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1360.0850830,-55.4590990,1061.3679200,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3509,-1345.9777830,-69.7160570,1061.1176760,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3279,-1256.4216310,-121.9469680,1061.2349850,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3279,-1297.5562740,-147.2153170,1061.4273680,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3279,-1275.5701900,-125.3816680,1061.4273680,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3279,-1299.1385500,-165.8101810,1061.4273680,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3279,-1304.2951660,-82.9301150,1061.3601070,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(3279,-1334.1907960,-88.7359540,1061.3088380,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(1276,-1284.3751220,-137.7066500,1073.2069090,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1279,-1329.7156980,-126.3085710,1061.9222410,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(1279,-1330.0306400,-126.6512600,1061.9213870,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(1550,-1329.2586670,-128.2321170,1062.2485350,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1550,-1330.1209720,-124.4364700,1062.2775880,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1550,-1331.4139400,-128.2226410,1062.2564700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1550,-1327.8386230,-126.1157610,1062.2485350,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1550,-1331.2896730,-130.5729680,1062.2485350,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1550,-1331.4755860,-126.2652590,1062.2735600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1550,-1333.1536870,-128.0373230,1062.2728270,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2061,-1332.0537110,-127.5179210,1062.1663820,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(1225,-1334.8482670,-114.8518830,1061.7891850,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1225,-1329.8447270,-119.8029480,1061.7653810,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1225,-1330.8864750,-115.5548630,1061.7653810,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1225,-1331.1801760,-121.8423770,1062.3223880,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1225,-1336.3073730,-126.9487920,1062.3211670,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1225,-1333.0083010,-125.2039870,1062.3079830,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3267,-1326.6318360,-126.0081860,1068.6156010,0.0000000,0.0000000,303.7500000); //
	CreateDynamicObject(3267,-1353.3812260,-98.7258910,1068.5905760,0.0000000,0.0000000,303.7500000); //
	CreateDynamicObject(3267,-1338.2803960,-113.3307270,1068.5905760,0.0000000,0.0000000,303.7500000); //
	CreateDynamicObject(3267,-1343.3707280,-77.3936310,1073.1948240,0.0000000,0.0000000,303.7500000); //
	CreateDynamicObject(3267,-1380.1414790,-38.9446410,1073.1948240,0.0000000,0.0000000,303.7500000); //
	CreateDynamicObject(3472,-1337.2080080,-76.8054050,1061.0941160,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3472,-1283.3546140,-117.9035720,1060.9952390,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(3472,-1345.5803220,-101.8448180,1060.8688960,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(3472,-1324.4648440,-122.0948870,1060.8450930,0.0000000,0.0000000,303.7500000); //
	CreateDynamicObject(3472,-1333.3195800,-113.0907590,1060.8516850,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(3472,-1306.6846920,-143.2862240,1060.8450930,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(3472,-1296.3231200,-103.1435700,1060.9279790,0.0000000,0.0000000,157.5000000); //
	CreateDynamicObject(3472,-1294.1904300,-137.8313290,1061.4956050,0.0000000,0.0000000,236.2500000); //
	CreateDynamicObject(3472,-1282.4510500,-128.0665890,1061.3956300,0.0000000,0.0000000,157.5000000); //
	CreateDynamicObject(3472,-1304.0371090,-56.8586160,1067.2949220,0.0000000,0.0000000,157.5000000); //
	CreateDynamicObject(3472,-1315.9163820,-44.8543470,1067.0622560,0.0000000,0.0000000,157.5000000); //
	CreateDynamicObject(3528,-1283.8537600,-138.1280060,1073.3548580,0.0000000,0.0000000,129.7661000); //
	CreateDynamicObject(3528,-1330.8659670,-119.5915150,1069.7028810,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3528,-1342.3555910,-107.6864620,1069.6782230,0.0000000,0.0000000,43.2811000); //
	CreateDynamicObject(3528,-1275.9682620,-135.7567440,1069.5661620,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3528,-1287.3382570,-147.1268310,1069.4412840,0.0000000,0.0000000,129.8433000); //
	CreateDynamicObject(3528,-1344.3553470,-71.9181140,1074.9315190,0.0000000,0.0000000,43.2811000); //
	CreateDynamicObject(3528,-1356.2629390,-60.0578000,1074.8569340,0.0000000,0.0000000,42.4217000); //
	CreateDynamicObject(3528,-1374.3527830,-41.6928180,1075.0159910,0.0000000,0.0000000,42.4217000); //
	CreateDynamicObject(3528,-1365.0711670,-51.3987540,1074.8458250,0.0000000,0.0000000,42.4217000); //
	CreateDynamicObject(3534,-1327.4509280,-55.9587970,1062.3012700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3534,-1315.6572270,-67.7344820,1062.2840580,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(7073,-1333.4664310,-35.2176970,1079.2998050,0.0000000,0.0000000,56.2500000); //
	CreateDynamicObject(7388,-1265.7021480,-130.9518130,1069.1453860,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(7388,-1278.7047120,-143.7834170,1071.3695070,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(7388,-1292.4198000,-157.7732240,1069.0700680,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(7392,-1333.8375240,-124.0413890,1077.1987300,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(7392,-1347.7387700,-106.5524370,1077.1737060,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(13667,-1309.6412350,-49.6330490,1088.3355710,0.0000000,0.0000000,55.3132000); //
	CreateDynamicObject(13667,-1280.5252690,-104.5894700,1084.6813960,0.0000000,0.0000000,236.0955000); //
	CreateDynamicObject(13667,-1320.7854000,-145.4753110,1084.9401860,0.0000000,0.0000000,56.0955000); //
	CreateDynamicObject(16779,-1180.8575440,31.2704580,1046.9573970,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(16782,-1343.1574710,-120.3775940,1063.1876220,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(1231,-1288.9763180,-142.5682830,1063.9069820,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1278.8825680,-130.8074650,1063.8819580,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1301.7944340,-146.8002780,1063.9069820,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1310.5136720,-139.5973970,1063.7818600,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1286.2298580,-115.0560610,1063.8319090,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1288.3826900,-96.8970340,1063.8146970,0.0000000,0.0000000,348.7500000); //
	CreateDynamicObject(1231,-1347.3814700,-68.0700230,1063.8557130,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1355.2335210,-60.0466690,1063.9307860,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1366.0830080,-50.7681960,1063.8134770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1373.9241940,-42.1325530,1063.8885500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1317.0700680,-48.5258180,1063.8635250,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1307.0797120,-57.3766250,1063.9385990,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1339.7752690,-107.8677520,1063.9385990,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1352.1455080,-93.1380000,1063.8557130,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1319.6060790,-125.4275670,1063.8819580,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1332.2866210,-116.5368960,1063.8397220,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1327.6088870,-88.7200160,1064.0887450,0.0000000,0.0000000,303.7500000); //
	CreateDynamicObject(1231,-1306.6413570,-88.2732930,1064.0899660,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1262,-1312.8753660,-51.0594220,1068.6113280,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(1262,-1309.9916990,-53.9937360,1068.6146240,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3509,-1361.2447510,-9.1137770,1061.3757320,0.0000000,0.0000000,281.2500000); //
	CreateDynamicObject(14637,-1395.8886720,10.6582980,1072.1130370,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(14467,-1293.8697510,-136.8862760,1063.3598630,0.0000000,0.0000000,202.5000000); //
	CreateDynamicObject(14467,-1283.6839600,-125.1707920,1063.3598630,0.0000000,0.0000000,236.2501000); //
	CreateDynamicObject(14467,-1294.8459470,-99.4916690,1063.3676760,0.0000000,0.0000000,258.7500000); //
	CreateDynamicObject(14467,-1317.5628660,-130.7209780,1063.2847900,0.0000000,0.0000000,146.2501000); //
	CreateDynamicObject(14467,-1303.2687990,-144.0777890,1063.3848880,0.0000000,0.0000000,168.7501000); //
	CreateDynamicObject(14467,-1329.3588870,-57.6323850,1063.3336180,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(14467,-1317.2366940,-69.0723040,1063.3414310,0.0000000,0.0000000,292.5000000); //
	CreateDynamicObject(3554,-1325.1713870,-94.9391170,1071.5549320,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(14446,-1279.0510250,-147.1357270,1063.2427980,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(14446,-1275.0136720,-143.1365200,1063.2177730,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(14867,-1278.0989990,-138.2677760,1064.1848140,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(14806,-1283.8332520,-144.5052640,1063.8413090,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(1828,-1279.6162110,-142.2669370,1062.6551510,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(14866,-1283.5170900,-96.4102400,1063.6140140,0.0000000,0.0000000,315.8594000); //
	CreateDynamicObject(14866,-1281.1214600,-98.7074200,1063.5889890,0.0000000,0.0000000,317.5783000); //
	CreateDynamicObject(14866,-1278.6523440,-100.9700320,1063.6640630,0.0000000,0.0000000,317.5783000); //
	CreateDynamicObject(14866,-1275.7067870,-103.7203370,1063.6640630,0.0000000,0.0000000,317.5783000); //
	CreateDynamicObject(14446,-1279.1540530,-108.1923220,1063.5812990,0.0000000,0.0000000,136.7188000); //
	CreateDynamicObject(14446,-1285.4713130,-102.0098950,1063.4812010,0.0000000,0.0000000,137.5783000); //
	CreateDynamicObject(14866,-1317.9815670,-153.9460600,1063.7563480,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(14866,-1320.5379640,-151.2314300,1063.7563480,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(14866,-1323.1054690,-148.8012080,1063.7563480,0.0000000,0.0000000,134.1406000); //
	CreateDynamicObject(14866,-1326.0947270,-145.6938170,1063.7563480,0.0000000,0.0000000,134.1406000); //
	CreateDynamicObject(14446,-1321.8165280,-142.0782010,1063.6485600,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(14446,-1315.3991700,-148.7206420,1063.6235350,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(14446,-1334.8121340,-119.9059370,1062.3935550,0.0000000,0.0000000,314.1406000); //
	CreateDynamicObject(2565,-1335.8725590,-124.3285060,1062.3050540,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(1231,-1311.0289310,-69.0877000,1064.1137700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1328.6782230,-52.7003670,1064.1059570,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1231,-1326.4285890,-43.7208330,1063.9886470,0.0000000,0.0000000,326.2500000); //
	CreateDynamicObject(3472,-1336.3077390,-47.6114160,1061.1441650,0.0000000,0.0000000,157.5000000); //
	CreateDynamicObject(3472,-1317.7413330,-98.5009460,1061.0518800,0.0000000,0.0000000,157.5000000); //
	CreateDynamicObject(3472,-1310.8077390,-78.5908890,1061.0769040,0.0000000,0.0000000,157.5000000); //
	CreateDynamicObject(3472,-1296.9715580,-88.7863240,1061.1782230,0.0000000,0.0000000,157.5000000); //
	CreateDynamicObject(714,-1266.2271730,-154.6007390,1059.9274900,0.0000000,0.0000000,281.2500000); //
	CreateDynamicObject(2565,-1282.6567380,-137.8727870,1063.1348880,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(714,-1336.5942380,-145.9603730,1059.6259770,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3851,-1344.5161130,-74.2387390,1063.4000240,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3851,-1344.3066410,-74.0162960,1068.9783940,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3851,-1356.8922120,-61.3898620,1068.9783940,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3851,-1356.7869870,-61.2797550,1063.4000240,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3851,-1365.9786380,-51.9137800,1068.9783940,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3851,-1366.2236330,-52.1640050,1063.4000240,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3851,-1375.1832280,-42.8191990,1068.9783940,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3851,-1375.3205570,-42.6591680,1063.4000240,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3279,-1335.5352780,-56.0704500,1061.2760010,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(2565,-1343.5809330,-117.6790010,1062.3632810,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(14651,-1379.9210210,-49.0095790,1069.1197510,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(1704,-1381.8669430,-59.3293910,1066.9001460,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(1704,-1382.5164790,-55.0961650,1066.9251710,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(1723,-1382.6770020,-57.8717420,1066.9764400,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1670,-1380.6848140,-56.8433230,1067.8105470,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(1826,-1380.7370610,-57.5561980,1066.9769290,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3851,-1393.8148190,-51.5172120,1068.9783940,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(3851,-1393.7783200,-61.1332510,1068.9783940,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3851,-1384.0859380,-70.0584340,1068.9783940,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(1634,-1306.5953370,-45.2881660,1062.4555660,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(1634,-1303.7355960,-48.2214050,1062.4305420,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(1723,-1378.5769040,-59.4621810,1066.9764400,0.0000000,0.0000000,191.2500000); //
	CreateDynamicObject(1723,-1380.8470460,-53.9930880,1066.9764400,0.0000000,0.0000000,348.7500000); //
	CreateDynamicObject(3437,-1339.4581300,-78.3452220,1067.1350100,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(3437,-1379.4729000,-38.1055450,1067.1644290,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(14867,-1387.2907710,-46.3882370,1068.4962160,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(14705,-1390.6131590,-49.5252080,1067.2274170,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(2632,-1382.9560550,-62.6335070,1061.4515380,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(2632,-1384.7965090,-60.7816580,1061.4515380,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(2631,-1386.5670170,-58.9481580,1061.4213870,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(2631,-1382.9039310,-54.4674150,1061.4515380,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(2631,-1381.2027590,-56.2256430,1061.4464110,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(2631,-1379.4078370,-57.8673550,1061.4464110,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(2630,-1379.4559330,-57.8984380,1061.4947510,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(2629,-1380.9693600,-56.1314350,1061.5018310,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(2628,-1382.8852540,-54.5086060,1061.5242920,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(2627,-1386.6650390,-59.1480480,1061.4008790,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(2628,-1384.7272950,-60.9202770,1061.4992680,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(2629,-1383.0535890,-62.5309450,1061.5069580,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(1829,-1386.9438480,-52.8036420,1067.4241940,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(1829,-1383.2073970,-48.2434390,1067.4428710,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(1829,-1393.1149900,-57.8639300,1067.4428710,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(1828,-1383.4329830,-62.5720600,1066.9825440,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(1828,-1376.3681640,-57.6175190,1066.9761960,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(2623,-1351.5125730,-64.1413040,1062.8958740,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(2586,-1375.2344970,-66.7445600,1067.4774170,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(2584,-1390.2280270,-51.3070910,1067.7242430,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(1670,-1382.0046390,-58.8455090,1067.4143070,0.0000000,0.0000000,348.7500000); //
	CreateDynamicObject(1824,-1379.8151860,-65.2270280,1067.4456790,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(1968,-1383.4118650,-62.2968600,1067.4973140,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(11665,-1387.7301030,-61.6218410,1067.6269530,0.0000000,0.0000000,225.0000000); //
	CreateDynamicObject(1985,-1390.9803470,-57.7699550,1063.8287350,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1985,-1388.2191160,-53.5879400,1063.8287350,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1985,-1385.1190190,-50.9828070,1063.8338620,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1985,-1382.2974850,-64.6633530,1063.8338620,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1985,-1379.8641360,-65.9826660,1063.8338620,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1985,-1380.7357180,-48.2742160,1063.8287350,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3525,-1370.9458010,-65.4673390,1067.5472410,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3525,-1373.5523680,-67.5209500,1067.6470950,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3525,-1364.3762210,-72.1956560,1062.0313720,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3525,-1366.5181880,-74.6200030,1062.0689700,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3525,-1348.8240970,-68.0697100,1061.9945070,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3528,-1323.5168460,-93.4300610,1081.7204590,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3877,-1338.5566410,-76.9974210,1062.2906490,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1324.2315670,-53.2309110,1060.8892820,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1312.3878170,-64.6739580,1060.9287110,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1289.4904790,-134.0619200,1060.9655760,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1378.2225340,-37.0359340,1063.0491940,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(18228,-1377.5667720,4.8972480,1066.0842290,0.0000000,359.1406000,1.8735000); //
	CreateDynamicObject(18228,-1409.6789550,-24.0051960,1067.6357420,0.0000000,359.1406000,1.8735000); //
	CreateDynamicObject(18228,-1425.3020020,-55.2678380,1065.8840330,0.0000000,359.1406000,24.3735000); //
	CreateDynamicObject(3877,-1344.5854490,-71.0538790,1063.0413820,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1361.2907710,-53.6958470,1063.0413820,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1370.7067870,-44.0553050,1063.0491940,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1352.4978030,-85.8993070,1062.9907230,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1342.8281250,-77.9776760,1062.9958500,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(9241,-1358.8441160,-32.3180270,1063.0670170,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3877,-1358.4179690,-47.9115600,1065.4858400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1358.8012700,-16.6423300,1065.4858400,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1373.4592290,-31.9183220,1065.4608150,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1343.2517090,-32.0402530,1065.3857420,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1273.2456050,-119.7161560,1062.7673340,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3877,-1324.5986330,-94.8047790,1062.4986570,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3437,-1348.3088380,-69.2942890,1067.1662600,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(3437,-1352.2011720,-65.4250790,1067.2362060,0.0000000,0.0000000,315.0000000); //
	CreateDynamicObject(3437,-1366.9965820,-24.2497920,1069.7557370,0.0000000,0.0000000,45.0000000); //
	CreateDynamicObject(3437,-1367.0017090,-24.2533420,1070.1044920,5.1566000,270.6186000,224.3821000); //
	CreateDynamicObject(3437,-1367.4019780,-63.9808200,1079.4949950,0.0000000,0.0000000,135.0000000); //
	CreateDynamicObject(3996,-1333.1999500,382.5000000,6.3000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(1655,-2063.0000000,1348.4000200,7.2000000,0.0000000,0.0000000,276.0000000); //
	CreateDynamicObject(1632,-1906.9000200,1359.3000500,25.0000000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(6448,-1324.0999800,234.8000000,19.2000000,0.0000000,0.0000000,172.0000000); //


	// random city rcity
	CreateDynamicObject(6959,-106.5000000,2166.5000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (1)
	CreateDynamicObject(6959,-66.2000000,2166.3999000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (2)
	CreateDynamicObject(6959,-106.4000000,2126.8000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (4)
	CreateDynamicObject(6959,-66.2000000,2126.8999000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (6)
	CreateDynamicObject(6959,-25.0000000,2126.8999000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (8)
	CreateDynamicObject(6959,-25.0000000,2166.3999000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (10)
	CreateDynamicObject(3996,-75.5000000,2097.0000000,708.7000100,0.0000000,0.0000000,0.0000000); //object(roads08_lan) (1)
	CreateDynamicObject(3996,26.8000000,2097.0000000,708.7000100,0.0000000,0.0000000,0.0000000); //object(roads08_lan) (5)
	CreateDynamicObject(6959,15.6000000,2126.6001000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (12)
	CreateDynamicObject(6959,15.6000000,2166.3999000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (14)
	CreateDynamicObject(4710,-183.8999900,2107.1001000,708.7000100,0.0000000,0.0000000,0.0000000); //object(road08_lan2) (1)
	CreateDynamicObject(6959,-142.3999900,2127.0000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (17)
	CreateDynamicObject(6959,-177.2000000,2129.2000000,708.7999900,0.0000000,0.0000000,348.0000000); //object(vegasnbball1) (18)
	CreateDynamicObject(6959,-215.2000000,2139.2000000,708.7999900,0.0000000,0.0000000,349.9970000); //object(vegasnbball1) (19)
	CreateDynamicObject(6959,-146.0000000,2166.5000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (21)
	CreateDynamicObject(6959,-187.1000100,2166.5000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (22)
	CreateDynamicObject(6959,-207.8999900,2165.8000000,708.7999900,0.0000000,0.0000000,338.0000000); //object(vegasnbball1) (24)
	CreateDynamicObject(6959,56.6000000,2126.7000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (27)
	CreateDynamicObject(6959,56.6000000,2166.3000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (28)
	CreateDynamicObject(4710,-232.7000000,2163.8000000,708.7000100,0.0000000,0.0000000,262.0000000); //object(road08_lan2) (5)
	CreateDynamicObject(3749,-250.3999900,2110.8000000,714.2999900,0.0000000,0.0000000,352.0000000); //object(clubgate01_lax) (1)
	CreateDynamicObject(3749,-249.5000000,2110.7000000,714.2999900,0.0000000,0.0000000,351.9960000); //object(clubgate01_lax) (2)
	CreateDynamicObject(3749,-251.3999900,2110.8999000,714.2999900,0.0000000,0.0000000,351.9960000); //object(clubgate01_lax) (3)
	CreateDynamicObject(5005,-6.0000000,2185.6001000,712.2999900,0.0000000,0.0000000,0.0000000); //object(lasrunwall1_las) (1)
	CreateDynamicObject(5005,-137.8000000,2185.6001000,712.2999900,0.0000000,0.0000000,0.0000000); //object(lasrunwall1_las) (2)
	CreateDynamicObject(3749,-227.2000000,2188.0000000,714.2999900,0.0000000,0.0000000,337.9960000); //object(clubgate01_lax) (5)
	CreateDynamicObject(3749,-228.7000000,2188.6001000,714.2999900,0.0000000,0.0000000,337.9940000); //object(clubgate01_lax) (7)
	CreateDynamicObject(3749,-136.5000000,2107.1001000,714.0999800,0.0000000,0.0000000,0.0000000); //object(clubgate01_lax) (10)
	CreateDynamicObject(3749,-67.1000000,2106.0000000,714.0999800,0.0000000,0.0000000,0.0000000); //object(clubgate01_lax) (12)
	CreateDynamicObject(6959,97.7000000,2126.5000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (31)
	CreateDynamicObject(6959,97.7000000,2166.3000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (32)
	CreateDynamicObject(5005,35.2000000,2185.6001000,712.2999900,0.0000000,0.0000000,0.0000000); //object(lasrunwall1_las) (4)
	CreateDynamicObject(5005,35.1000000,2107.1001000,712.2999900,0.0000000,0.0000000,0.0000000); //object(lasrunwall1_las) (6)
	CreateDynamicObject(5005,22.2000000,2107.1001000,712.2999900,0.0000000,0.0000000,0.0000000); //object(lasrunwall1_las) (8)
	CreateDynamicObject(4022,-222.0000000,2171.6001000,711.9000200,0.0000000,0.0000000,248.0000000); //object(foodmart1_lan) (1)
	CreateDynamicObject(4022,-229.0000000,2151.3999000,711.9000200,0.0000000,0.0000000,254.0000000); //object(foodmart1_lan) (2)
	CreateDynamicObject(4022,-232.8000000,2136.3999000,711.9000200,0.0000000,0.0000000,257.9980000); //object(foodmart1_lan) (4)
	CreateDynamicObject(4022,-232.8000000,2136.3999000,714.9000200,0.0000000,0.0000000,257.9970000); //object(foodmart1_lan) (5)
	CreateDynamicObject(6959,138.3000000,2126.5000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (34)
	CreateDynamicObject(6959,179.5000000,2126.5000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (35)
	CreateDynamicObject(6959,220.8000000,2126.5000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (36)
	CreateDynamicObject(6959,138.8999900,2166.3000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (37)
	CreateDynamicObject(6959,179.5000000,2166.3000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (38)
	CreateDynamicObject(6959,220.8000000,2166.3999000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vegasnbball1) (41)
	CreateDynamicObject(5005,158.2000000,2185.6001000,712.2999900,0.0000000,0.0000000,0.0000000); //object(lasrunwall1_las) (10)
	CreateDynamicObject(5005,158.2000000,2107.1001000,712.2999900,0.0000000,0.0000000,0.0000000); //object(lasrunwall1_las) (11)
	CreateDynamicObject(3996,129.8999900,2097.0000000,708.7000100,0.0000000,0.0000000,0.0000000); //object(roads08_lan) (9)
	CreateDynamicObject(3996,189.8000000,2096.8999000,708.5999800,0.0000000,0.0000000,0.0000000); //object(roads08_lan) (10)
	CreateDynamicObject(4060,227.5000000,2146.2000000,713.4000200,0.0000000,0.0000000,90.0000000); //object(fighotblok4_lan) (1)
	CreateDynamicObject(4060,227.3000000,2127.3999000,713.4000200,0.0000000,0.0000000,90.0000000); //object(fighotblok4_lan) (2)
	CreateDynamicObject(7520,185.1000100,2170.8999000,708.7999900,0.0000000,0.0000000,0.0000000); //object(vgnlowbuild203) (1)
	CreateDynamicObject(11387,198.3000000,2129.6001000,712.0999800,0.0000000,0.0000000,90.0000000); //object(oldgarage_sfs) (1)
	CreateDynamicObject(11388,182.2000000,2120.3999000,715.4000200,0.0000000,0.0000000,90.0000000); //object(hubintroof_sfse) (1)
	CreateDynamicObject(11389,182.3000000,2120.3000000,711.9000200,0.0000000,0.0000000,90.0000000); //object(hubinterior_sfs) (1)
	CreateDynamicObject(11359,178.5000000,2129.5000000,710.7999900,0.0000000,0.0000000,0.0000000); //object(oldgrgedoor3_sfse) (1)
	CreateDynamicObject(11359,198.6000100,2115.8000000,710.7999900,0.0000000,0.0000000,90.0000000); //object(oldgrgedoor3_sfse) (3)
	CreateDynamicObject(1491,189.1000100,2121.5000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(gen_doorint01) (1)
	CreateDynamicObject(1703,193.7000000,2126.8000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(kb_couch02) (1)
	CreateDynamicObject(1703,195.6000100,2123.8000000,708.7999900,0.0000000,0.0000000,180.0000000); //object(kb_couch02) (2)
	CreateDynamicObject(1703,191.8999900,2124.3000000,708.7999900,0.0000000,0.0000000,87.9950000); //object(kb_couch02) (3)
	CreateDynamicObject(2315,194.0000000,2125.3000000,708.7999900,0.0000000,0.0000000,0.0000000); //object(cj_tv_table4) (1)
	CreateDynamicObject(2296,197.3000000,2126.3999000,708.9000200,0.0000000,0.0000000,270.0000000); //object(tv_unit_1) (1)
	CreateDynamicObject(2985,188.5000000,2123.8000000,708.7999900,0.0000000,0.0000000,182.0000000); //object(minigun_base) (1)
	CreateDynamicObject(2985,188.5000000,2126.5000000,708.7999900,0.0000000,0.0000000,182.0000000); //object(minigun_base) (2)
	CreateDynamicObject(1080,166.3999900,2114.1001000,710.2999900,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (1)
	CreateDynamicObject(1080,166.3999900,2114.1001000,711.2000100,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (2)
	CreateDynamicObject(1080,166.3999900,2114.1001000,712.0999800,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (3)
	CreateDynamicObject(1080,166.3999900,2114.1001000,713.0000000,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (4)
	CreateDynamicObject(1080,166.3999900,2114.8999000,713.0000000,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (5)
	CreateDynamicObject(1080,166.3999900,2115.6001000,712.7999900,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (6)
	CreateDynamicObject(1080,166.3999900,2115.2000000,712.0000000,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (7)
	CreateDynamicObject(1080,166.3999900,2114.8999000,711.2000100,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (9)
	CreateDynamicObject(1080,166.3999900,2115.3999000,710.5000000,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (10)
	CreateDynamicObject(1080,166.3999900,2116.0000000,709.7999900,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (11)
	CreateDynamicObject(1080,166.3999900,2114.1001000,709.4000200,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (12)
	CreateDynamicObject(1080,166.7000000,2118.6001000,709.4000200,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (14)
	CreateDynamicObject(1080,166.7000000,2119.2000000,710.0000000,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (15)
	CreateDynamicObject(1080,166.7000000,2119.8999000,710.5999800,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (16)
	CreateDynamicObject(1080,166.7000000,2120.6001000,711.2000100,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (17)
	CreateDynamicObject(1080,166.8000000,2121.3999000,711.7999900,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (18)
	CreateDynamicObject(1080,166.8999900,2122.2000000,712.2999900,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (19)
	CreateDynamicObject(1080,166.7000000,2119.8000000,711.5000000,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (20)
	CreateDynamicObject(1080,166.7000000,2119.1001000,712.2000100,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (21)
	CreateDynamicObject(1080,166.7000000,2118.3999000,712.7999900,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (22)
	CreateDynamicObject(1080,166.6000100,2120.8000000,710.4000200,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (23)
	CreateDynamicObject(1080,166.5000000,2121.5000000,709.7999900,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (24)
	CreateDynamicObject(1080,166.3999900,2122.1001000,709.0999800,0.0000000,0.0000000,0.0000000); //object(wheel_sr5) (25)
	CreateDynamicObject(3082,189.5000000,2129.0000000,710.5999800,0.0000000,0.0000000,0.0000000); //object(ammo_capsule) (1)
	CreateDynamicObject(3082,189.5000000,2129.0000000,709.9000200,0.0000000,0.0000000,0.0000000); //object(ammo_capsule) (2)
	CreateDynamicObject(3082,189.5000000,2129.0000000,709.2000100,0.0000000,0.0000000,0.0000000); //object(ammo_capsule) (3)
	CreateDynamicObject(3082,190.1000100,2129.0000000,711.0000000,0.0000000,264.0000000,0.0000000); //object(ammo_capsule) (5)
	CreateDynamicObject(3082,190.8000000,2129.0000000,710.9000200,0.0000000,281.9960000,0.0000000); //object(ammo_capsule) (6)
	CreateDynamicObject(3082,191.0000000,2129.0000000,710.7999900,0.0000000,163.9920000,0.0000000); //object(ammo_capsule) (7)
	CreateDynamicObject(3082,191.0000000,2129.0000000,710.2999900,0.0000000,241.9870000,0.0000000); //object(ammo_capsule) (8)
	CreateDynamicObject(3082,190.5000000,2129.0000000,710.0999800,0.0000000,269.9850000,0.0000000); //object(ammo_capsule) (9)
	CreateDynamicObject(3082,190.0000000,2129.0000000,710.0999800,0.0000000,269.9840000,0.0000000); //object(ammo_capsule) (10)
	CreateDynamicObject(3082,190.3999900,2129.0000000,709.5999800,0.0000000,323.9840000,0.0000000); //object(ammo_capsule) (11)
	CreateDynamicObject(3082,190.8000000,2129.0000000,709.0999800,0.0000000,323.9810000,0.0000000); //object(ammo_capsule) (13)
	CreateDynamicObject(16151,172.1000100,2112.5000000,709.0999800,0.0000000,0.0000000,268.0000000); //object(ufo_bar) (1)
	CreateDynamicObject(970,167.8999900,2126.0000000,709.2999900,0.0000000,0.0000000,278.0000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,169.1000100,2122.1001000,709.2999900,0.0000000,0.0000000,297.9980000); //object(fencesmallb) (2)
	CreateDynamicObject(970,171.6000100,2118.8000000,709.2999900,0.0000000,0.0000000,315.9930000); //object(fencesmallb) (3)
	CreateDynamicObject(970,175.0000000,2116.6001000,709.2999900,0.0000000,0.0000000,337.9890000); //object(fencesmallb) (5)
	CreateDynamicObject(970,167.7000000,2127.1001000,709.2999900,0.0000000,0.0000000,277.9980000); //object(fencesmallb) (7)
	CreateDynamicObject(14826,178.0000000,2124.7000000,709.2999900,0.0000000,0.0000000,92.0000000); //object(int_kbsgarage2) (1)
	CreateDynamicObject(5392,-166.8999900,2114.8000000,712.0000000,0.0000000,0.0000000,6.0000000); //object(laestripmall1) (1)
	CreateDynamicObject(5392,-203.2000000,2120.8999000,712.0000000,0.0000000,0.0000000,183.9990000); //object(laestripmall1) (2)
	CreateDynamicObject(2890,-236.8000000,2123.7000000,708.9000200,0.0000000,0.0000000,80.0000000); //object(kmb_skip) (1)
	CreateDynamicObject(1372,-228.6000100,2127.2000000,708.7999900,0.0000000,0.0000000,76.0000000); //object(cj_dump2_low) (1)
	CreateDynamicObject(1358,-227.3999900,2130.3000000,710.0000000,0.0000000,0.0000000,76.0000000); //object(cj_skip_rubbish) (1)
	CreateDynamicObject(3578,-136.6000100,2107.0000000,708.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (1)
	CreateDynamicObject(3578,-67.6000000,2107.0000000,708.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (2)
	CreateDynamicObject(3578,-66.2000000,2107.0000000,708.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (3)
	CreateDynamicObject(3578,195.0000000,2106.7000000,708.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (4)
	CreateDynamicObject(3578,200.3999900,2106.7000000,708.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (5)
	CreateDynamicObject(3578,31.8000000,2106.8000000,708.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (6)
	CreateDynamicObject(3578,37.9000000,2106.8000000,708.0000000,0.0000000,0.0000000,0.0000000); //object(dockbarr1_la) (7)
	CreateDynamicObject(987,-86.9000000,2107.1001000,708.7999900,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (2)
	CreateDynamicObject(987,-98.9000000,2107.1001000,708.7999900,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (3)
	CreateDynamicObject(987,-110.9000000,2107.1001000,708.7999900,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (4)
	CreateDynamicObject(987,-122.9000000,2107.1001000,708.7999900,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (5)
	CreateDynamicObject(987,-128.8999900,2107.1001000,708.7999900,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (6)
	CreateDynamicObject(10281,212.8999900,2150.0000000,712.0999800,0.0000000,0.0000000,270.0000000); //object(michsign_sfe) (1)
	CreateDynamicObject(4730,178.0000000,2171.1001000,712.7000100,0.0000000,0.0000000,8.0000000); //object(billbrdlan2_03) (1)
	CreateDynamicObject(1526,180.6000100,2169.8999000,711.2000100,0.0000000,0.0000000,88.0000000); //object(tag_rifa) (1)
	CreateDynamicObject(1327,117.4000000,2160.6001000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (12)
	CreateDynamicObject(1327,116.0000000,2160.6001000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (13)
	CreateDynamicObject(1327,114.4000000,2160.7000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (14)
	CreateDynamicObject(1327,112.8000000,2160.8000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (15)
	CreateDynamicObject(1327,111.0000000,2160.8999000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (16)
	CreateDynamicObject(1327,109.4000000,2161.0000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (17)
	CreateDynamicObject(1327,107.7000000,2161.1001000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (18)
	CreateDynamicObject(1327,105.8000000,2161.2000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (19)
	CreateDynamicObject(1327,103.9000000,2161.3000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (20)
	CreateDynamicObject(1327,102.0000000,2161.3999000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (21)
	CreateDynamicObject(1327,100.3000000,2161.3000000,708.5999800,0.0000000,0.0000000,101.9950000); //object(junk_tyre) (23)
	CreateDynamicObject(1327,98.6000000,2160.6001000,708.5999800,0.0000000,0.0000000,121.9920000); //object(junk_tyre) (24)
	CreateDynamicObject(1327,97.3000000,2159.3000000,708.5999800,0.0000000,0.0000000,145.9870000); //object(junk_tyre) (25)
	CreateDynamicObject(1327,96.6000000,2157.6001000,708.5999800,0.0000000,0.0000000,167.9860000); //object(junk_tyre) (26)
	CreateDynamicObject(1327,96.5000000,2155.8000000,708.5999800,0.0000000,0.0000000,181.9810000); //object(junk_tyre) (27)
	CreateDynamicObject(1327,96.7000000,2153.8999000,708.5999800,0.0000000,0.0000000,191.9780000); //object(junk_tyre) (28)
	CreateDynamicObject(1327,97.3000000,2152.2000000,708.5999800,0.0000000,0.0000000,211.9750000); //object(junk_tyre) (29)
	CreateDynamicObject(1327,98.7000000,2151.3000000,708.5999800,0.0000000,0.0000000,263.9700000); //object(junk_tyre) (30)
	CreateDynamicObject(1327,100.4000000,2151.0000000,708.5999800,0.0000000,0.0000000,265.9690000); //object(junk_tyre) (31)
	CreateDynamicObject(1327,102.1000000,2150.8999000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (32)
	CreateDynamicObject(1327,103.7000000,2150.8000000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (33)
	CreateDynamicObject(1327,105.5000000,2150.7000000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (34)
	CreateDynamicObject(1327,107.0000000,2150.6001000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (35)
	CreateDynamicObject(1327,108.8000000,2150.5000000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (36)
	CreateDynamicObject(1327,110.6000000,2150.3999000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (37)
	CreateDynamicObject(1327,112.3000000,2150.3000000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (38)
	CreateDynamicObject(1327,114.0000000,2150.3000000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (39)
	CreateDynamicObject(1327,115.7000000,2150.2000000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (40)
	CreateDynamicObject(1327,117.3000000,2150.2000000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (41)
	CreateDynamicObject(1327,119.2000000,2150.2000000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (42)
	CreateDynamicObject(1327,121.1000000,2150.1001000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (43)
	CreateDynamicObject(1327,123.0000000,2150.1001000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (44)
	CreateDynamicObject(1327,124.8000000,2150.0000000,708.5999800,0.0000000,0.0000000,265.9680000); //object(junk_tyre) (45)
	CreateDynamicObject(1327,126.4000000,2149.7000000,708.5999800,0.0000000,0.0000000,245.9680000); //object(junk_tyre) (46)
	CreateDynamicObject(1327,127.5000000,2148.8999000,708.5999800,0.0000000,0.0000000,221.9670000); //object(junk_tyre) (47)
	CreateDynamicObject(1327,128.2000000,2147.8999000,708.5999800,0.0000000,0.0000000,201.9620000); //object(junk_tyre) (48)
	CreateDynamicObject(1327,128.6000100,2146.3999000,708.5999800,0.0000000,0.0000000,187.9620000); //object(junk_tyre) (49)
	CreateDynamicObject(1327,128.7000000,2144.7000000,708.5999800,0.0000000,0.0000000,181.9600000); //object(junk_tyre) (50)
	CreateDynamicObject(1327,128.7000000,2143.3000000,708.5999800,0.0000000,0.0000000,175.9560000); //object(junk_tyre) (51)
	CreateDynamicObject(1327,128.5000000,2141.7000000,708.5999800,0.0000000,0.0000000,165.9520000); //object(junk_tyre) (52)
	CreateDynamicObject(1327,127.9000000,2140.3000000,708.5999800,0.0000000,0.0000000,149.9480000); //object(junk_tyre) (53)
	CreateDynamicObject(1327,127.0000000,2139.0000000,708.5999800,0.0000000,0.0000000,139.9470000); //object(junk_tyre) (54)
	CreateDynamicObject(1327,126.0000000,2137.8999000,708.5999800,0.0000000,0.0000000,123.9440000); //object(junk_tyre) (55)
	CreateDynamicObject(1327,119.3000000,2160.6001000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (80)
	CreateDynamicObject(1327,121.3000000,2160.5000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (81)
	CreateDynamicObject(1327,123.0000000,2160.5000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (82)
	CreateDynamicObject(996,116.6000000,2169.8000000,709.5000000,0.0000000,0.0000000,356.0000000); //object(lhouse_barrier1) (1)
	CreateDynamicObject(996,108.6000000,2170.3999000,709.5000000,0.0000000,0.0000000,355.9950000); //object(lhouse_barrier1) (2)
	CreateDynamicObject(996,100.5000000,2170.8999000,709.5000000,0.0000000,0.0000000,355.9950000); //object(lhouse_barrier1) (3)
	CreateDynamicObject(996,92.5000000,2169.8999000,709.5000000,0.0000000,0.0000000,7.9950000); //object(lhouse_barrier1) (4)
	CreateDynamicObject(996,88.0000000,2163.5000000,709.5000000,0.0000000,0.0000000,57.9930000); //object(lhouse_barrier1) (5)
	CreateDynamicObject(996,86.3000000,2155.6001000,709.5000000,0.0000000,0.0000000,79.9910000); //object(lhouse_barrier1) (6)
	CreateDynamicObject(996,87.5000000,2147.7000000,709.5000000,0.0000000,0.0000000,99.9860000); //object(lhouse_barrier1) (7)
	CreateDynamicObject(996,90.5000000,2144.3000000,709.5000000,0.0000000,0.0000000,137.9810000); //object(lhouse_barrier1) (8)
	CreateDynamicObject(996,102.4000000,2143.5000000,709.5000000,0.0000000,0.0000000,177.9780000); //object(lhouse_barrier1) (11)
	CreateDynamicObject(996,110.5000000,2143.2000000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (13)
	CreateDynamicObject(996,118.6000000,2142.8999000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (14)
	CreateDynamicObject(1327,124.5000000,2137.0000000,708.5999800,0.0000000,0.0000000,119.9420000); //object(junk_tyre) (84)
	CreateDynamicObject(1327,123.0000000,2136.5000000,708.5999800,0.0000000,0.0000000,107.9390000); //object(junk_tyre) (85)
	CreateDynamicObject(1327,121.4000000,2136.1001000,708.5999800,0.0000000,0.0000000,101.9350000); //object(junk_tyre) (87)
	CreateDynamicObject(1327,119.8000000,2135.8999000,708.5999800,0.0000000,0.0000000,89.9330000); //object(junk_tyre) (88)
	CreateDynamicObject(1327,118.2000000,2135.8999000,708.5999800,0.0000000,0.0000000,91.9290000); //object(junk_tyre) (89)
	CreateDynamicObject(1327,116.6000000,2135.8000000,708.5999800,0.0000000,0.0000000,91.9280000); //object(junk_tyre) (94)
	CreateDynamicObject(1327,115.0000000,2135.7000000,708.5999800,0.0000000,0.0000000,91.9280000); //object(junk_tyre) (95)
	CreateDynamicObject(996,113.7000000,2135.6001000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (18)
	CreateDynamicObject(996,105.6000000,2135.8999000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (19)
	CreateDynamicObject(996,97.5000000,2136.2000000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (20)
	CreateDynamicObject(996,89.4000000,2136.5000000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (21)
	CreateDynamicObject(996,81.3000000,2136.8000000,709.5000000,0.0000000,0.0000000,179.9730000); //object(lhouse_barrier1) (23)
	CreateDynamicObject(996,94.3000000,2143.8000000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (25)
	CreateDynamicObject(996,86.2000000,2144.1001000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (26)
	CreateDynamicObject(996,81.2000000,2144.3000000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (27)
	CreateDynamicObject(1327,125.4000000,2160.5000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (97)
	CreateDynamicObject(1327,127.4000000,2160.3999000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (98)
	CreateDynamicObject(1327,129.3999900,2160.3000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (99)
	CreateDynamicObject(1327,131.3000000,2160.2000000,708.5999800,0.0000000,0.0000000,87.9950000); //object(junk_tyre) (100)
	CreateDynamicObject(996,124.6000000,2169.2000000,709.5000000,0.0000000,0.0000000,355.9950000); //object(lhouse_barrier1) (29)
	CreateDynamicObject(1327,73.0000000,2144.7000000,708.5999800,0.0000000,0.0000000,247.9690000); //object(junk_tyre) (103)
	CreateDynamicObject(1327,71.8000000,2145.5000000,708.5999800,0.0000000,0.0000000,223.9670000); //object(junk_tyre) (104)
	CreateDynamicObject(1327,70.7000000,2146.8999000,708.5999800,0.0000000,0.0000000,215.9620000); //object(junk_tyre) (105)
	CreateDynamicObject(1327,70.2000000,2148.5000000,708.5999800,0.0000000,0.0000000,191.9580000); //object(junk_tyre) (106)
	CreateDynamicObject(1327,70.1000000,2150.0000000,708.5999800,0.0000000,0.0000000,185.9530000); //object(junk_tyre) (107)
	CreateDynamicObject(1327,70.2000000,2151.7000000,708.5999800,0.0000000,0.0000000,175.9490000); //object(junk_tyre) (108)
	CreateDynamicObject(1327,70.7000000,2153.2000000,708.5999800,0.0000000,0.0000000,157.9460000); //object(junk_tyre) (109)
	CreateDynamicObject(1327,71.6000000,2154.7000000,708.5999800,0.0000000,0.0000000,145.9450000); //object(junk_tyre) (111)
	CreateDynamicObject(1327,72.9000000,2156.0000000,708.5999800,0.0000000,0.0000000,135.9420000); //object(junk_tyre) (112)
	CreateDynamicObject(1327,74.2000000,2157.1001000,708.5999800,0.0000000,0.0000000,129.9390000); //object(junk_tyre) (113)
	CreateDynamicObject(1327,75.6000000,2158.1001000,708.5999800,0.0000000,0.0000000,129.9350000); //object(junk_tyre) (114)
	CreateDynamicObject(1327,77.0000000,2159.0000000,708.5999800,0.0000000,0.0000000,121.9350000); //object(junk_tyre) (115)
	CreateDynamicObject(1327,78.0000000,2159.8000000,708.5999800,0.0000000,0.0000000,139.9320000); //object(junk_tyre) (116)
	CreateDynamicObject(1327,78.8000000,2161.1001000,708.5999800,0.0000000,0.0000000,151.9270000); //object(junk_tyre) (117)
	CreateDynamicObject(1327,79.3000000,2162.3999000,708.5999800,0.0000000,0.0000000,163.9240000); //object(junk_tyre) (118)
	CreateDynamicObject(1327,79.5000000,2164.1001000,708.5999800,0.0000000,0.0000000,173.9220000); //object(junk_tyre) (119)
	CreateDynamicObject(1327,79.5000000,2165.7000000,708.5999800,0.0000000,0.0000000,185.9190000); //object(junk_tyre) (120)
	CreateDynamicObject(1327,79.0000000,2167.5000000,708.5999800,0.0000000,0.0000000,197.9160000); //object(junk_tyre) (121)
	CreateDynamicObject(1327,78.3000000,2168.8999000,708.5999800,0.0000000,0.0000000,217.9130000); //object(junk_tyre) (122)
	CreateDynamicObject(1327,77.3000000,2169.8999000,708.5999800,0.0000000,0.0000000,233.9080000); //object(junk_tyre) (123)
	CreateDynamicObject(1327,75.9000000,2170.8000000,708.5999800,0.0000000,0.0000000,241.9040000); //object(junk_tyre) (124)
	CreateDynamicObject(1327,74.4000000,2171.5000000,708.5999800,0.0000000,0.0000000,247.9020000); //object(junk_tyre) (127)
	CreateDynamicObject(1327,73.3000000,2171.8000000,708.5999800,0.0000000,0.0000000,255.9010000); //object(junk_tyre) (128)
	CreateDynamicObject(1327,71.9000000,2172.0000000,708.5999800,0.0000000,0.0000000,265.8990000); //object(junk_tyre) (129)
	CreateDynamicObject(1327,70.3000000,2172.1001000,708.5999800,0.0000000,0.0000000,265.8970000); //object(junk_tyre) (130)
	CreateDynamicObject(1327,68.5000000,2172.2000000,708.5999800,0.0000000,0.0000000,265.8970000); //object(junk_tyre) (131)
	CreateDynamicObject(996,67.2000000,2172.6001000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (31)
	CreateDynamicObject(996,63.9000000,2164.5000000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (32)
	CreateDynamicObject(1327,63.0000000,2162.8000000,708.5999800,0.0000000,0.0000000,143.9260000); //object(junk_tyre) (134)
	CreateDynamicObject(1327,62.1000000,2161.3000000,708.5999800,0.0000000,0.0000000,153.9260000); //object(junk_tyre) (135)
	CreateDynamicObject(1327,61.5000000,2159.8000000,708.5999800,0.0000000,0.0000000,161.9240000); //object(junk_tyre) (136)
	CreateDynamicObject(1327,61.0000000,2158.1001000,708.5999800,0.0000000,0.0000000,167.9220000); //object(junk_tyre) (137)
	CreateDynamicObject(1327,60.6000000,2156.6001000,708.5999800,0.0000000,0.0000000,161.9210000); //object(junk_tyre) (138)
	CreateDynamicObject(1327,60.2000000,2155.2000000,708.5999800,0.0000000,0.0000000,169.9170000); //object(junk_tyre) (139)
	CreateDynamicObject(1327,59.9000000,2153.6001000,708.5999800,0.0000000,0.0000000,175.9150000); //object(junk_tyre) (140)
	CreateDynamicObject(1327,59.9000000,2151.8999000,708.5999800,0.0000000,0.0000000,183.9130000); //object(junk_tyre) (141)
	CreateDynamicObject(1327,60.2000000,2150.2000000,708.5999800,0.0000000,0.0000000,189.9110000); //object(junk_tyre) (142)
	CreateDynamicObject(1327,60.4000000,2148.5000000,708.5999800,0.0000000,0.0000000,191.9100000); //object(junk_tyre) (143)
	CreateDynamicObject(1327,60.7000000,2147.2000000,708.5999800,0.0000000,0.0000000,195.9090000); //object(junk_tyre) (147)
	CreateDynamicObject(1327,61.1000000,2145.6001000,708.5999800,0.0000000,0.0000000,199.9080000); //object(junk_tyre) (148)
	CreateDynamicObject(1327,61.6000000,2144.2000000,708.5999800,0.0000000,0.0000000,199.9070000); //object(junk_tyre) (149)
	CreateDynamicObject(1327,62.1000000,2142.8000000,708.5999800,0.0000000,0.0000000,203.9070000); //object(junk_tyre) (150)
	CreateDynamicObject(1327,62.9000000,2141.2000000,708.5999800,0.0000000,0.0000000,207.9060000); //object(junk_tyre) (151)
	CreateDynamicObject(1327,63.7000000,2139.8999000,708.5999800,0.0000000,0.0000000,207.9050000); //object(junk_tyre) (152)
	CreateDynamicObject(1327,64.6000000,2138.6001000,708.5999800,0.0000000,0.0000000,217.9050000); //object(junk_tyre) (153)
	CreateDynamicObject(1327,65.9000000,2137.3000000,708.5999800,0.0000000,0.0000000,225.9030000); //object(junk_tyre) (154)
	CreateDynamicObject(1327,67.5000000,2136.3000000,708.5999800,0.0000000,0.0000000,247.9010000); //object(junk_tyre) (155)
	CreateDynamicObject(1327,69.1000000,2136.0000000,708.5999800,0.0000000,0.0000000,263.8960000); //object(junk_tyre) (156)
	CreateDynamicObject(1327,70.8000000,2136.0000000,708.5999800,0.0000000,0.0000000,275.8920000); //object(junk_tyre) (157)
	CreateDynamicObject(1327,72.5000000,2136.1001000,708.5999800,0.0000000,0.0000000,275.8890000); //object(junk_tyre) (158)
	CreateDynamicObject(996,59.1000000,2172.8999000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (34)
	CreateDynamicObject(996,51.0000000,2173.2000000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (35)
	CreateDynamicObject(996,42.9000000,2173.5000000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (36)
	CreateDynamicObject(996,55.8000000,2164.8000000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (37)
	CreateDynamicObject(996,47.7000000,2165.1001000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (38)
	CreateDynamicObject(996,39.6000000,2165.3999000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (39)
	CreateDynamicObject(996,39.9000000,2173.6001000,709.5000000,0.0000000,0.0000000,177.9730000); //object(lhouse_barrier1) (40)
	CreateDynamicObject(2933,32.3000000,2169.8000000,707.0999800,0.0000000,0.0000000,88.0000000); //object(pol_comp_gate) (1)
	CreateDynamicObject(2933,131.6000100,2164.3999000,707.0999800,0.0000000,0.0000000,87.9950000); //object(pol_comp_gate) (3)
	CreateDynamicObject(987,-218.0000000,2186.1001000,708.7999900,0.0000000,0.0000000,66.0000000); //object(elecfence_bar) (8)
	CreateDynamicObject(987,-213.2000000,2196.8999000,708.7999900,0.0000000,0.0000000,67.9950000); //object(elecfence_bar) (9)
	CreateDynamicObject(987,-210.3000000,2204.0000000,708.7999900,0.0000000,0.0000000,67.9940000); //object(elecfence_bar) (11)
	CreateDynamicObject(987,-235.8999900,2193.7000000,708.7999900,0.0000000,0.0000000,67.9940000); //object(elecfence_bar) (12)
	CreateDynamicObject(987,-231.8000000,2203.8000000,708.7999900,0.0000000,0.0000000,67.9940000); //object(elecfence_bar) (13)
	CreateDynamicObject(987,-229.6000100,2209.7000000,708.7999900,0.0000000,0.0000000,65.9940000); //object(elecfence_bar) (14)
	CreateDynamicObject(3749,-215.5000000,2216.5000000,714.2999900,0.0000000,0.0000000,339.9940000); //object(clubgate01_lax) (15)
	CreateDynamicObject(18449,-207.0000000,2246.2000000,681.5999800,0.0000000,42.0000000,74.0000000); //object(cs_roadbridge01) (1)
	CreateDynamicObject(18449,-190.7000000,2303.0000000,628.4000200,0.0000000,41.9950000,73.9980000); //object(cs_roadbridge01) (4)
	CreateDynamicObject(18449,-174.3999900,2359.8000000,575.2000100,0.0000000,41.9950000,73.9980000); //object(cs_roadbridge01) (6)
	CreateDynamicObject(18449,-158.0000000,2416.8000000,521.9000200,0.0000000,41.9950000,73.9980000); //object(cs_roadbridge01) (7)
	CreateDynamicObject(18449,-142.0000000,2472.6001000,469.6000100,0.0000000,41.9950000,73.9980000); //object(cs_roadbridge01) (9)
	CreateDynamicObject(18449,-125.7000000,2529.3999000,416.3999900,0.0000000,41.9950000,73.9980000); //object(cs_roadbridge01) (10)
	CreateDynamicObject(18449,-110.4000000,2582.7000000,366.3999900,0.0000000,41.9950000,73.9980000); //object(cs_roadbridge01) (12)
	CreateDynamicObject(18449,-94.4000000,2638.6001000,314.0000000,0.0000000,41.9950000,73.9980000); //object(cs_roadbridge01) (13)
	CreateDynamicObject(18449,-80.5000000,2687.1001000,268.6000100,0.0000000,41.9950000,73.9980000); //object(cs_roadbridge01) (14)
	CreateDynamicObject(5182,-272.1000100,2136.5000000,711.7999900,0.0000000,0.0000000,260.0000000); //object(nwspltbild4_las2) (1)
	CreateDynamicObject(987,-241.8999900,2179.3000000,708.7999900,0.0000000,0.0000000,65.9940000); //object(elecfence_bar) (16)
	CreateDynamicObject(987,-246.8000000,2168.3000000,708.7999900,0.0000000,0.0000000,65.9890000); //object(elecfence_bar) (17)
	CreateDynamicObject(987,-251.3999900,2156.8999000,708.7999900,0.0000000,0.0000000,67.9890000); //object(elecfence_bar) (18)
	CreateDynamicObject(5393,197.5000000,2086.1001000,717.2000100,0.0000000,0.0000000,24.0000000); //object(laeshop1) (1)
	CreateDynamicObject(5725,149.5000000,2085.6001000,718.0000000,0.0000000,0.0000000,0.0000000); //object(holpacific2_law) (1)
	CreateDynamicObject(5725,89.4000000,2085.3000000,718.0000000,0.0000000,0.0000000,0.0000000); //object(holpacific2_law) (2)
	CreateDynamicObject(5725,89.4000000,2085.3000000,728.2999900,0.0000000,0.0000000,0.0000000); //object(holpacific2_law) (3)
	CreateDynamicObject(5769,30.0000000,2079.8000000,714.7000100,0.0000000,0.0000000,182.0000000); //object(vineblock1_lawn) (1)
	CreateDynamicObject(5769,-29.5000000,2078.3999000,714.7000100,0.0000000,0.0000000,182.0000000); //object(vineblock1_lawn) (2)
	CreateDynamicObject(5769,-29.5000000,2078.3999000,722.5000000,0.0000000,0.0000000,182.0000000); //object(vineblock1_lawn) (3)
	CreateDynamicObject(5848,-82.0000000,2082.8000000,714.2000100,0.0000000,0.0000000,172.0000000); //object(mainblk_lawn) (1)
	CreateDynamicObject(5848,-129.5000000,2081.0000000,714.2000100,0.0000000,0.0000000,351.9960000); //object(mainblk_lawn) (2)
	CreateDynamicObject(5848,-174.0000000,2083.7000000,714.2000100,0.0000000,0.0000000,343.9910000); //object(mainblk_lawn) (3)
	CreateDynamicObject(5848,-215.1000100,2092.8999000,714.2000100,0.0000000,0.0000000,333.9870000); //object(mainblk_lawn) (4)
	CreateDynamicObject(6150,-240.3999900,2076.3999000,714.2999900,0.0000000,0.0000000,168.0000000); //object(gaz7_law) (1)
	CreateDynamicObject(6959,-264.2999900,2091.6001000,709.0000000,0.0000000,0.0000000,350.0000000); //object(vegasnbball1) (45)
	CreateDynamicObject(6959,-279.7000100,2094.3000000,709.0000000,0.0000000,0.0000000,349.9970000); //object(vegasnbball1) (46)
	CreateDynamicObject(6959,-286.5000000,2055.1001000,709.0000000,0.0000000,0.0000000,349.9970000); //object(vegasnbball1) (47)
	CreateDynamicObject(6959,-259.2000100,2050.5000000,709.0000000,0.0000000,0.0000000,349.9970000); //object(vegasnbball1) (48)
	CreateDynamicObject(3458,-308.2000100,2058.8000000,708.0000000,14.0000000,0.0000000,80.0000000); //object(vgncarshade1) (1)
	CreateDynamicObject(3458,-312.6000100,2059.6001000,709.7000100,27.9970000,0.0000000,79.9970000); //object(vgncarshade1) (2)
	CreateDynamicObject(3458,-316.7000100,2060.3000000,712.2999900,35.9930000,0.0000000,79.9970000); //object(vgncarshade1) (3)
	CreateDynamicObject(3458,-320.3999900,2061.0000000,715.4000200,43.9910000,0.0000000,79.9970000); //object(vgncarshade1) (4)
	CreateDynamicObject(3458,-323.7000100,2061.7000000,716.7999900,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (6)
	CreateDynamicObject(3458,-328.6000100,2062.6001000,716.7999900,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (7)
	CreateDynamicObject(3458,-333.6000100,2063.5000000,716.7999900,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (9)
	CreateDynamicObject(3458,-337.5000000,2064.2000000,715.7000100,330.0000000,0.0000000,79.9970000); //object(vgncarshade1) (11)
	CreateDynamicObject(3458,-341.6000100,2064.8999000,713.0000000,323.9950000,0.0000000,79.9970000); //object(vgncarshade1) (14)
	CreateDynamicObject(3458,-345.2999900,2065.6001000,709.9000200,315.9920000,0.0000000,79.9970000); //object(vgncarshade1) (20)
	CreateDynamicObject(3458,-349.5000000,2066.3999000,706.7999900,331.9890000,0.0000000,79.9970000); //object(vgncarshade1) (22)
	CreateDynamicObject(3458,-353.7999900,2067.2000000,705.0000000,341.9850000,0.0000000,79.9970000); //object(vgncarshade1) (24)
	CreateDynamicObject(3458,-359.0000000,2068.2000000,704.2000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (25)
	CreateDynamicObject(3458,-363.7000100,2069.0000000,704.2000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (27)
	CreateDynamicObject(3458,-368.6000100,2069.8999000,704.2000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (28)
	CreateDynamicObject(3458,-373.3999900,2070.7000000,704.2000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (29)
	CreateDynamicObject(3458,-378.2000100,2071.5000000,704.2000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (30)
	CreateDynamicObject(3458,-382.6000100,2072.3000000,704.2000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (32)
	CreateDynamicObject(3458,-387.5000000,2073.1001000,704.2000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (33)
	CreateDynamicObject(1632,-392.6000100,2058.3000000,707.0000000,0.0000000,0.0000000,80.0000000); //object(waterjump1) (1)
	CreateDynamicObject(1632,-391.7999900,2062.3999000,707.0000000,0.0000000,0.0000000,79.9970000); //object(waterjump1) (2)
	CreateDynamicObject(1632,-391.0000000,2066.5000000,707.0000000,0.0000000,0.0000000,79.9970000); //object(waterjump1) (3)
	CreateDynamicObject(1632,-390.2999900,2070.3999000,707.0000000,0.0000000,0.0000000,79.9970000); //object(waterjump1) (4)
	CreateDynamicObject(1632,-389.5000000,2074.5000000,707.0000000,0.0000000,0.0000000,79.9970000); //object(waterjump1) (5)
	CreateDynamicObject(1632,-388.7999900,2078.5000000,707.0000000,0.0000000,0.0000000,79.9970000); //object(waterjump1) (6)
	CreateDynamicObject(1632,-388.1000100,2082.6001000,707.0000000,0.0000000,0.0000000,79.9970000); //object(waterjump1) (7)
	CreateDynamicObject(1632,-387.3999900,2086.7000000,707.0000000,0.0000000,0.0000000,79.9970000); //object(waterjump1) (8)
	CreateDynamicObject(1632,-386.7000100,2090.8000000,707.0000000,0.0000000,0.0000000,79.9970000); //object(waterjump1) (10)
	CreateDynamicObject(1632,-393.2999900,2054.2000000,707.0000000,0.0000000,0.0000000,79.9970000); //object(waterjump1) (12)
	CreateDynamicObject(3458,-383.0000000,2070.7000000,704.2000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (35)
	CreateDynamicObject(3458,-371.7999900,2066.7000000,704.2000100,0.0000000,0.0000000,45.9970000); //object(vgncarshade1) (37)
	CreateDynamicObject(3458,-399.5000000,2072.3000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (39)
	CreateDynamicObject(3458,-404.2000100,2073.1001000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (40)
	CreateDynamicObject(3458,-409.0000000,2074.0000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (41)
	CreateDynamicObject(3458,-413.6000100,2074.8000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (42)
	CreateDynamicObject(3458,-418.3999900,2075.6001000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (43)
	CreateDynamicObject(3458,-423.2999900,2076.3000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (44)
	CreateDynamicObject(3458,-428.2999900,2077.1001000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (45)
	CreateDynamicObject(3458,-432.7999900,2077.8999000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (46)
	CreateDynamicObject(3458,-437.7000100,2078.7000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (47)
	CreateDynamicObject(3458,-442.3999900,2079.6001000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (48)
	CreateDynamicObject(3458,-447.2000100,2080.3999000,709.5000000,10.0000000,0.0000000,79.9970000); //object(vgncarshade1) (50)
	CreateDynamicObject(3458,-451.1000100,2081.1001000,710.7999900,23.9980000,0.0000000,79.9970000); //object(vgncarshade1) (51)
	CreateDynamicObject(3458,-454.7999900,2081.8000000,713.0000000,35.9940000,0.0000000,79.9970000); //object(vgncarshade1) (52)
	CreateDynamicObject(3458,-457.2999900,2082.1001000,715.2999900,49.9910000,0.0000000,79.9970000); //object(vgncarshade1) (53)
	CreateDynamicObject(3458,-395.5000000,2047.0000000,709.0000000,0.0000000,0.0000000,143.9970000); //object(vgncarshade1) (69)
	CreateDynamicObject(3458,-398.3999900,2043.2000000,709.0000000,0.0000000,0.0000000,143.9920000); //object(vgncarshade1) (70)
	CreateDynamicObject(3458,-403.6000100,2047.1000000,709.0000000,0.0000000,0.0000000,143.9920000); //object(vgncarshade1) (71)
	CreateDynamicObject(3458,-385.3999900,2098.0000000,709.0000000,0.0000000,0.0000000,199.9920000); //object(vgncarshade1) (72)
	CreateDynamicObject(3458,-386.8999900,2102.3999000,709.0000000,0.0000000,0.0000000,199.9900000); //object(vgncarshade1) (73)
	CreateDynamicObject(3458,-406.8999900,2095.2000000,709.0000000,0.0000000,0.0000000,199.9900000); //object(vgncarshade1) (74)
	CreateDynamicObject(3458,-460.2999900,2082.6001000,716.7000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (82)
	CreateDynamicObject(3458,-465.2000100,2083.5000000,716.7000100,0.0000000,0.0000000,79.9970000); //object(vgncarshade1) (83)
	CreateDynamicObject(3458,-356.2999900,2108.5000000,711.0000000,0.0000000,10.0000000,199.9900000); //object(vgncarshade1) (85)
	CreateDynamicObject(3458,-360.2999900,2107.2000000,711.0000000,0.0000000,21.9980000,199.9840000); //object(vgncarshade1) (86)
	CreateDynamicObject(3458,-359.6000100,2107.3999000,711.7999900,0.0000000,35.9950000,199.9840000); //object(vgncarshade1) (87)
	CreateDynamicObject(3458,-357.8999900,2107.8999000,713.5000000,0.0000000,51.9910000,199.9840000); //object(vgncarshade1) (88)
	CreateDynamicObject(3458,-357.7000100,2108.0000000,713.5000000,0.0000000,69.9870000,199.9840000); //object(vgncarshade1) (89)
	CreateDynamicObject(3458,-356.2999900,2108.3999000,714.2999900,0.0000000,87.9830000,199.9840000); //object(vgncarshade1) (90)
	CreateDynamicObject(3458,-355.7999900,2108.5000000,720.0000000,0.0000000,101.9790000,199.9840000); //object(vgncarshade1) (91)
	CreateDynamicObject(3458,-355.7999900,2108.5000000,722.0000000,0.0000000,117.9750000,199.9840000); //object(vgncarshade1) (92)
	CreateDynamicObject(3458,-355.7999900,2108.5000000,723.2999900,0.0000000,131.9710000,199.9840000); //object(vgncarshade1) (93)
	CreateDynamicObject(3458,-355.7999900,2108.5000000,725.0000000,0.0000000,149.9680000,199.9840000); //object(vgncarshade1) (94)
	CreateDynamicObject(3458,-355.7999900,2108.5000000,725.7999900,0.0000000,161.9630000,199.9840000); //object(vgncarshade1) (95)
	CreateDynamicObject(3458,-355.7999900,2108.5000000,727.0000000,0.0000000,173.9600000,199.9840000); //object(vgncarshade1) (96)
	CreateDynamicObject(3458,-374.2999900,2025.6000000,711.0000000,0.0000000,9.9980000,143.9840000); //object(vgncarshade1) (98)
	CreateDynamicObject(3458,-376.3999900,2026.8000000,712.5000000,0.0000000,25.9980000,143.9810000); //object(vgncarshade1) (99)
	CreateDynamicObject(3458,-377.5000000,2027.5000000,712.5000000,0.0000000,41.9940000,143.9810000); //object(vgncarshade1) (100)
	CreateDynamicObject(3458,-376.7999900,2027.1000000,713.2999900,0.0000000,57.9900000,143.9810000); //object(vgncarshade1) (101)
	CreateDynamicObject(3458,-375.8999900,2026.6000000,714.0000000,0.0000000,73.9860000,143.9810000); //object(vgncarshade1) (102)
	CreateDynamicObject(3458,-374.3999900,2025.8000000,714.7999900,0.0000000,93.9820000,143.9810000); //object(vgncarshade1) (103)
	CreateDynamicObject(3458,-374.3999900,2025.8000000,719.5000000,0.0000000,107.9770000,143.9810000); //object(vgncarshade1) (104)
	CreateDynamicObject(3458,-374.3999900,2025.8000000,721.5000000,0.0000000,129.9740000,143.9810000); //object(vgncarshade1) (105)
	CreateDynamicObject(3458,-374.3999900,2025.8000000,723.0000000,0.0000000,147.9680000,143.9810000); //object(vgncarshade1) (106)
	CreateDynamicObject(3458,-374.3999900,2025.8000000,723.7999900,0.0000000,157.9640000,143.9810000); //object(vgncarshade1) (107)
	CreateDynamicObject(3458,-374.3999900,2025.8000000,725.2999900,0.0000000,167.9610000,143.9810000); //object(vgncarshade1) (108)
	CreateDynamicObject(3458,-469.0000000,2084.1001000,720.7000100,90.0000000,0.0000000,79.9970000); //object(vgncarshade1) (110)
	CreateDynamicObject(8172,-233.1000100,2005.1000000,709.0000000,0.0000000,0.0000000,80.0000000); //object(vgssairportland07) (1)
	CreateDynamicObject(8172,-75.7000000,1976.9000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (2)
	CreateDynamicObject(8172,82.6000000,1949.0000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (3)
	CreateDynamicObject(8172,239.3999900,1921.4000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (4)
	CreateDynamicObject(8172,396.3999900,1893.8000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (5)
	CreateDynamicObject(8172,552.7999900,1866.3000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (6)
	CreateDynamicObject(8172,711.2999900,1838.4000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (8)
	CreateDynamicObject(3458,-314.1000100,2019.2000000,709.7000100,90.0000000,0.0000000,79.9970000); //object(vgncarshade1) (115)
	CreateDynamicObject(8172,-239.8999900,1966.0000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (11)
	CreateDynamicObject(3458,-320.8999900,1980.3000000,709.7000100,90.0000000,0.0000000,79.9970000); //object(vgncarshade1) (117)
	CreateDynamicObject(8172,-81.9000000,1938.3000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (14)
	CreateDynamicObject(8172,76.9000000,1910.4000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (16)
	CreateDynamicObject(8172,234.2000000,1882.8000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (18)
	CreateDynamicObject(8172,390.0000000,1855.4000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (20)
	CreateDynamicObject(8172,547.0999800,1827.8000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (22)
	CreateDynamicObject(8172,704.4000200,1800.2000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (24)
	CreateDynamicObject(8172,863.2000100,1772.3000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (26)
	CreateDynamicObject(8172,869.7000100,1810.5000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (28)
	CreateDynamicObject(8172,1028.0000000,1782.3000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (31)
	CreateDynamicObject(8172,1021.1000000,1744.6000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (32)
	CreateDynamicObject(8172,1179.9000000,1716.7000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (34)
	CreateDynamicObject(8172,1338.8000000,1688.8000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (35)
	CreateDynamicObject(8172,1494.4000000,1661.4000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (36)
	CreateDynamicObject(8172,1652.6000000,1633.7000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (38)
	CreateDynamicObject(8172,1186.8000000,1754.2000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (39)
	CreateDynamicObject(8172,1345.3000000,1726.2000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (40)
	CreateDynamicObject(8172,1503.8000000,1698.2000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (43)
	CreateDynamicObject(8172,1659.0000000,1670.9000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgssairportland07) (44)
	CreateDynamicObject(6959,-259.2000100,2050.2000000,709.0000000,0.0000000,0.0000000,349.9970000); //object(vegasnbball1) (51)
	CreateDynamicObject(6959,-287.0000000,2052.2000000,709.0000000,0.0000000,0.0000000,349.9970000); //object(vegasnbball1) (52)
	CreateDynamicObject(10815,-143.3999900,2019.4000000,708.7999900,0.0000000,0.0000000,36.0000000); //object(airprtgnd_02_sfse) (1)
	CreateDynamicObject(7313,-250.8000000,2113.3999000,715.0999800,0.0000000,0.0000000,0.0000000); //object(vgsn_scrollsgn01) (1)
	CreateDynamicObject(3458,-300.7000100,2101.8999000,709.7000100,90.0000000,0.0000000,79.9970000); //object(vgncarshade1) (120)
	CreateDynamicObject(3458,-301.2999900,2098.5000000,709.7000100,90.0000000,0.0000000,79.9970000); //object(vgncarshade1) (121)
	CreateDynamicObject(3578,-250.6000100,2109.2000000,708.2000100,0.0000000,0.0000000,350.0000000); //object(dockbarr1_la) (9)
	CreateDynamicObject(3578,-250.5000000,2109.7000000,708.2000100,0.0000000,0.0000000,349.9970000); //object(dockbarr1_la) (11)
	CreateDynamicObject(3578,-250.3999900,2109.8999000,708.0999800,0.0000000,0.0000000,349.9970000); //object(dockbarr1_la) (13)
	CreateDynamicObject(3578,-250.3000000,2110.1001000,708.0000000,0.0000000,0.0000000,349.9970000); //object(dockbarr1_la) (14)
	CreateDynamicObject(3578,-250.2000000,2110.3999000,707.9000200,0.0000000,0.0000000,349.9970000); //object(dockbarr1_la) (15)
	CreateDynamicObject(7371,-310.6000100,1959.6000000,709.0000000,0.0000000,0.0000000,80.0000000); //object(vgsnelec_fence_02) (1)
	CreateDynamicObject(7371,-230.5000000,2024.9000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgsnelec_fence_02) (2)
	CreateDynamicObject(10815,53.1000000,1988.3000000,708.7999900,0.0000000,0.0000000,35.9970000); //object(airprtgnd_02_sfse) (5)
	CreateDynamicObject(3749,168.3999900,1970.2000000,714.2999900,0.0000000,0.0000000,80.0000000); //object(clubgate01_lax) (17)
	CreateDynamicObject(18449,195.5000000,1965.6000000,677.7000100,0.0000000,50.0000000,350.0000000); //object(cs_roadbridge01) (16)
	CreateDynamicObject(18449,241.7000000,1957.4000000,621.9000200,0.0000000,49.9990000,349.9970000); //object(cs_roadbridge01) (18)
	CreateDynamicObject(18449,289.7000100,1948.9000000,563.7999900,0.0000000,49.9990000,349.9970000); //object(cs_roadbridge01) (19)
	CreateDynamicObject(18449,339.5000000,1940.2000000,503.6000100,0.0000000,49.9990000,349.9970000); //object(cs_roadbridge01) (20)
	CreateDynamicObject(18449,389.5000000,1931.4000000,443.1000100,0.0000000,49.9990000,349.9970000); //object(cs_roadbridge01) (21)
	CreateDynamicObject(18449,439.1000100,1922.6000000,383.1000100,0.0000000,49.9990000,349.9970000); //object(cs_roadbridge01) (22)
	CreateDynamicObject(18449,486.0000000,1914.3000000,326.3999900,0.0000000,49.9990000,349.9970000); //object(cs_roadbridge01) (23)
	CreateDynamicObject(18449,533.2999900,1905.9000000,269.2999900,0.0000000,49.9990000,349.9970000); //object(cs_roadbridge01) (24)
	CreateDynamicObject(18449,578.7999900,1897.8000000,214.3000000,0.0000000,49.9990000,349.9970000); //object(cs_roadbridge01) (25)
	CreateDynamicObject(18449,629.2000100,1888.9000000,153.3000000,0.0000000,49.9990000,349.9970000); //object(cs_roadbridge01) (26)
	CreateDynamicObject(18449,667.5000000,1882.1000000,114.6000000,0.0000000,32.0000000,349.9970000); //object(cs_roadbridge01) (27)
	CreateDynamicObject(18449,668.7000100,1882.0000000,116.1000000,0.0000000,23.9980000,349.9970000); //object(cs_roadbridge01) (28)
	CreateDynamicObject(18449,666.5000000,1882.3000000,118.7000000,0.0000000,9.9940000,349.9970000); //object(cs_roadbridge01) (29)
	CreateDynamicObject(18449,686.9000200,1878.7000000,119.1000000,0.0000000,359.9920000,349.9970000); //object(cs_roadbridge01) (30)
	CreateDynamicObject(18449,762.4000200,1865.4000000,119.1000000,0.0000000,359.9890000,349.9970000); //object(cs_roadbridge01) (31)
	CreateDynamicObject(18449,840.4000200,1851.6000000,119.1000000,0.0000000,359.9890000,349.9970000); //object(cs_roadbridge01) (32)
	CreateDynamicObject(18449,907.7999900,1840.0000000,91.4000000,0.0000000,43.9890000,349.9970000); //object(cs_roadbridge01) (33)
	CreateDynamicObject(18449,964.4000200,1830.0000000,36.0000000,0.0000000,43.9840000,349.9970000); //object(cs_roadbridge01) (34)
	CreateDynamicObject(3749,1434.0000000,1654.9000000,714.7999900,0.0000000,0.0000000,350.0000000); //object(clubgate01_lax) (20)
	CreateDynamicObject(3437,1419.8000000,1657.1000000,714.4000200,0.0000000,0.0000000,352.0000000); //object(ballypllr01_lvs) (1)
	CreateDynamicObject(3437,1415.1000000,1657.9000000,709.4000200,0.0000000,90.0000000,351.9960000); //object(ballypllr01_lvs) (2)
	CreateDynamicObject(3437,1407.2000000,1659.3000000,713.9000200,0.0000000,12.0000000,351.9910000); //object(ballypllr01_lvs) (3)
	CreateDynamicObject(3437,1404.2000000,1659.8000000,713.9000200,0.0000000,345.9970000,351.9910000); //object(ballypllr01_lvs) (4)
	CreateDynamicObject(3437,1397.8000000,1660.9000000,713.9000200,0.0000000,345.9920000,351.9910000); //object(ballypllr01_lvs) (5)
	CreateDynamicObject(3437,1394.4000000,1661.5000000,713.9000200,0.0000000,19.9920000,351.9910000); //object(ballypllr01_lvs) (6)
	CreateDynamicObject(3437,1396.1000000,1661.2000000,712.2000100,0.0000000,90.0000000,351.9910000); //object(ballypllr01_lvs) (7)
	CreateDynamicObject(1318,1408.3000000,1662.1000000,709.5000000,0.0000000,0.0000000,76.0000000); //object(arrow) (1)
	CreateDynamicObject(1318,1404.2000000,1663.2000000,709.5000000,0.0000000,0.0000000,75.9980000); //object(arrow) (2)
	CreateDynamicObject(1318,1401.7000000,1663.6000000,709.5000000,0.0000000,0.0000000,75.9980000); //object(arrow) (3)
	CreateDynamicObject(1318,1406.6000000,1662.6000000,709.5000000,0.0000000,0.0000000,75.9980000); //object(arrow) (4)
	CreateDynamicObject(1318,1410.2000000,1661.6000000,709.5000000,0.0000000,0.0000000,75.9980000); //object(arrow) (5)
	CreateDynamicObject(16000,1414.9000000,1657.6000000,708.2000100,0.0000000,0.0000000,348.0000000); //object(drvin_screen) (1)
	CreateDynamicObject(16000,1395.0000000,1661.6000000,708.2000100,0.0000000,0.0000000,347.9970000); //object(drvin_screen) (2)
	CreateDynamicObject(3980,1762.1000000,1629.9000000,718.5000000,0.0000000,0.0000000,78.0000000); //object(lacityhall1_lan) (2)
	CreateDynamicObject(3980,1661.4000000,1585.7000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (3)
	CreateDynamicObject(3980,1537.1000000,1607.7000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (4)
	CreateDynamicObject(3980,1501.0000000,1614.1000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (5)
	CreateDynamicObject(3980,1687.5000000,1715.9000000,718.5000000,0.0000000,0.0000000,170.0000000); //object(lacityhall1_lan) (7)
	CreateDynamicObject(3980,1563.7000000,1737.7000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (8)
	CreateDynamicObject(3980,1441.0000000,1759.3000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (9)
	CreateDynamicObject(3980,1319.8000000,1780.7000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (10)
	CreateDynamicObject(3980,1196.5000000,1802.5000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (11)
	CreateDynamicObject(3980,1074.6000000,1823.8000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (12)
	CreateDynamicObject(3980,1356.0000000,1633.8000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (13)
	CreateDynamicObject(18368,1442.3000000,1647.1000000,704.5999800,0.0000000,0.0000000,258.0000000); //object(cs_mountplat) (1)
	CreateDynamicObject(18368,1454.0000000,1645.8000000,704.5999800,0.0000000,0.0000000,71.9970000); //object(cs_mountplat) (3)
	CreateDynamicObject(3980,1272.5000000,1650.8000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (15)
	CreateDynamicObject(3980,1148.5000000,1672.4000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (16)
	CreateDynamicObject(3980,1026.6000000,1693.6000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (17)
	CreateDynamicObject(3980,904.4000200,1715.1000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (18)
	CreateDynamicObject(3980,780.9000200,1736.9000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (19)
	CreateDynamicObject(3980,656.4000200,1758.6000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (20)
	CreateDynamicObject(3980,532.2000100,1780.5000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (21)
	CreateDynamicObject(3980,407.7000100,1802.5000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (22)
	CreateDynamicObject(3980,283.5000000,1824.1000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (23)
	CreateDynamicObject(3980,159.6000100,1845.9000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (24)
	CreateDynamicObject(3980,35.4000000,1867.5000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (25)
	CreateDynamicObject(3980,-88.1000000,1889.3000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (26)
	CreateDynamicObject(3980,-184.8000000,1906.4000000,718.5000000,0.0000000,0.0000000,349.9970000); //object(lacityhall1_lan) (27)
	CreateDynamicObject(3980,950.5000000,1845.7000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (29)
	CreateDynamicObject(3980,826.7000100,1867.5000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (30)
	CreateDynamicObject(3980,703.0999800,1889.3000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (31)
	CreateDynamicObject(3980,580.0999800,1911.0000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (32)
	CreateDynamicObject(3980,456.2000100,1933.0000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (33)
	CreateDynamicObject(3980,334.2999900,1954.5000000,718.5000000,0.0000000,0.0000000,169.9970000); //object(lacityhall1_lan) (34)
	CreateDynamicObject(7371,-100.5000000,2002.0000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgsnelec_fence_02) (4)
	CreateDynamicObject(7371,29.4000000,1979.1000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgsnelec_fence_02) (5)
	CreateDynamicObject(7371,158.7000000,1956.2000000,709.0000000,0.0000000,0.0000000,79.9970000); //object(vgsnelec_fence_02) (6)
	CreateDynamicObject(3244,-270.0000000,2132.8000000,708.7999900,0.0000000,0.0000000,348.0000000); //object(pylon_big1_) (1)
	CreateDynamicObject(3437,-267.1000100,2128.3000000,725.5000000,0.0000000,0.0000000,78.0000000); //object(ballypllr01_lvs) (9)
	CreateDynamicObject(3437,-267.1000100,2128.3000000,714.9000200,0.0000000,0.0000000,77.9970000); //object(ballypllr01_lvs) (10)
	CreateDynamicObject(3437,-266.2000100,2132.5000000,728.5999800,0.0000000,292.0000000,77.9970000); //object(ballypllr01_lvs) (11)
	CreateDynamicObject(3437,-266.2000100,2132.5000000,724.2999900,0.0000000,251.9950000,77.9970000); //object(ballypllr01_lvs) (12)
	CreateDynamicObject(3437,-266.5000000,2131.3000000,717.7000100,0.0000000,155.9930000,77.9970000); //object(ballypllr01_lvs) (13)
	CreateDynamicObject(3437,-266.1000100,2132.8999000,714.0000000,0.0000000,155.9890000,77.9970000); //object(ballypllr01_lvs) (15)
	CreateDynamicObject(3437,-266.0000000,2131.8999000,739.2000100,0.0000000,314.0000000,72.2040000); //object(ballypllr01_lvs) (16)
	CreateDynamicObject(3437,-266.0000000,2131.9004000,739.2000100,0.0000000,35.9950000,72.2020000); //object(ballypllr01_lvs) (18)
	CreateDynamicObject(354,-265.7999900,2132.1001000,728.2999900,0.0000000,0.0000000,0.0000000); //object(1)
	CreateDynamicObject(354,-265.5000000,2131.7000000,739.0999800,0.0000000,0.0000000,0.0000000); //object(2)
	CreateDynamicObject(3665,-283.8999900,2099.6001000,711.0000000,0.0000000,0.0000000,350.0000000); //object(airyelrm_las) (1)
	CreateDynamicObject(3665,-280.1000100,2098.8999000,711.0000000,0.0000000,0.0000000,349.9970000); //object(airyelrm_las) (2)
	CreateDynamicObject(3665,-277.3999900,2098.3999000,711.0000000,0.0000000,0.0000000,349.9970000); //object(airyelrm_las) (3)
	CreateDynamicObject(16442,-261.6000100,2127.8999000,710.9000200,0.0000000,0.0000000,54.0000000); //object(desn2_stripsigs1) (1)
	CreateDynamicObject(16442,-260.7999900,2132.3999000,710.9000200,0.0000000,0.0000000,291.9980000); //object(desn2_stripsigs1) (2)
	CreateDynamicObject(16442,-258.6000100,2129.7000000,710.9000200,0.0000000,302.0000000,173.9950000); //object(desn2_stripsigs1) (3)
	CreateDynamicObject(6986,-269.3999900,2135.8000000,743.2999900,0.0000000,0.0000000,173.9950000); //object(vgngamblsign1) (1)
	CreateDynamicObject(6986,-269.5000000,2129.1001000,743.2999900,0.0000000,0.0000000,357.9900000); //object(vgngamblsign1) (2)

	new tmpobjid = 0;
	printf("tmpobid : %d",tmpobjid);
	tmpobjid = CreateDynamicObject(3048, 2324.698974, 576.270385, 104.980194, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    tmpobjid = CreateDynamicObject(3048, 2333.119628, 576.165954, 104.809997, 0.000000, 5.199998, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    tmpobjid = CreateDynamicObject(3048, 2341.339599, 576.270385, 104.850196, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    tmpobjid = CreateDynamicObject(3048, 2349.056640, 576.270385, 104.850196, 0.000000, 7.099998, 450.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    tmpobjid = CreateDynamicObject(3048, 2354.917236, 576.270385, 104.850196, 0.000000, -2.600001, 630.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    tmpobjid = CreateDynamicObject(749, 2313.201416, 578.552429, 104.169433, 90.800010, 91.999938, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2319.144531, 578.779052, 103.948074, 87.999992, 84.599929, 4.199998, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2326.803466, 578.568542, 103.598762, 6.699999, 83.199890, 1.099998, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2333.125000, 578.237548, 103.765586, 6.699999, 83.199890, 4.299999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2338.214599, 577.485229, 103.917533, -163.899749, 95.899986, 9.299999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2344.739990, 577.314392, 103.787254, -176.999633, 95.899986, 9.299999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(16409, 2307.924560, 575.369750, 99.390953, 0.000000, 270.000000, 179.999954, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 4, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    SetDynamicObjectMaterial(tmpobjid, 5, 4811, "beach_las", "lasclifface", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 6, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    SetDynamicObjectMaterial(tmpobjid, 11, 13691, "bevcunto2_lahills", "crazypave", 0x00000000);
    tmpobjid = CreateDynamicObject(16409, 2363.643798, 577.350524, 99.390953, 0.000000, 270.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 4, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    SetDynamicObjectMaterial(tmpobjid, 5, 4811, "beach_las", "lasclifface", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 6, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    tmpobjid = CreateDynamicObject(8133, 2333.196044, 576.216735, 100.627975, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 10351, "beach_sfs", "rocktb128", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 1, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(19646, 2305.351074, 576.378295, 110.052101, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19379, 2302.821289, 573.357299, 104.940780, 0.000000, 90.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    tmpobjid = CreateDynamicObject(9831, 2367.446289, 585.349975, 98.872375, -24.300025, 8.899998, 59.300220, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(19464, 2307.907470, 568.968933, 110.629135, -13.400001, 10.499999, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(8483, 2368.754882, 575.105224, 109.900611, 0.000000, 0.000000, 176.200027, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, -1, "none", "none", 0xFFD6BDA1);
    tmpobjid = CreateDynamicObject(4814, 2355.072509, 609.196350, 106.520011, 0.000000, 0.000000, 38.700004, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(4814, 2351.060302, 543.656127, 106.520011, 0.000000, 0.000000, 218.700012, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(4814, 2391.225585, 576.720703, 106.520011, 0.000000, 0.000000, 308.700012, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(4814, 2280.671142, 574.598388, 106.520011, 0.000000, 0.000000, 488.700012, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(4814, 2342.367675, 582.808776, 133.340103, 51.299934, 269.999938, -89.999931, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(4814, 2336.791259, 565.770019, 132.226791, 48.249828, 293.503295, -107.975379, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(19379, 2366.033203, 583.158386, 99.790748, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(19379, 2366.093261, 569.547668, 99.790748, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(19379, 2305.476806, 569.577636, 99.790748, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(19379, 2305.486816, 583.147766, 99.790748, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2313.727539, 576.217956, 114.367233, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2317.169677, 571.018249, 114.847221, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2326.613281, 571.878479, 113.627235, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2326.613281, 580.918762, 115.157211, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2331.375488, 583.058593, 113.787208, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2315.972900, 584.758666, 114.817207, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2324.603027, 586.658813, 113.967239, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2323.612060, 576.169067, 114.547256, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2338.981445, 577.349182, 114.157264, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2341.943115, 583.599365, 113.117271, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2341.943115, 566.778991, 111.257278, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2343.454345, 569.829162, 112.267272, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2343.454345, 577.619201, 113.587242, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2348.967041, 586.499511, 112.607254, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2355.450195, 575.709289, 112.797248, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2358.172119, 569.419128, 112.417304, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19198, 2360.283447, 584.539428, 113.027267, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(8397, 2322.036621, 583.412475, 167.749816, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(8397, 2340.975830, 569.112487, 165.549819, 0.000000, 180.000000, -60.399993, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(8397, 2353.949951, 582.477416, 164.399810, 0.000000, 180.000000, -18.099990, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(11224, 2341.255126, 592.064636, 113.855262, 171.600006, -1.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFF505050);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(9831, 2306.527099, 583.839660, 99.213119, 0.000000, -1.099998, -87.699806, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(19885, 2365.280029, 579.365783, 99.714256, 0.000045, 0.000000, 89.999862, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 1, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(19885, 2305.395263, 579.365783, 99.774223, 0.000045, 0.000000, 89.999862, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 1, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2356.878173, 568.385375, 99.985923, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2347.763671, 568.385375, 99.985923, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2339.272705, 568.385375, 99.985923, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2331.026367, 568.385375, 99.985923, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2322.907226, 568.385375, 99.985923, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2314.726318, 568.385375, 99.985923, 0.000000, 0.000000, 810.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2356.878173, 583.505554, 99.985923, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2347.763671, 583.505554, 99.985923, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2339.272705, 583.505554, 99.985923, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2331.026367, 583.505554, 99.985923, 0.000000, -0.000007, 179.999954, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2322.907226, 583.505554, 99.985923, 0.000000, -0.000007, 179.999954, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(751, 2314.726318, 583.505554, 99.985923, 0.000000, -0.000007, 179.999954, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(897, 2350.383789, 588.958251, 117.205833, -158.099899, 4.499995, -45.899974, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(8483, 2370.895263, 578.211730, 102.768630, 171.699996, -2.499999, -163.700103, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(9831, 2363.210205, 577.160522, 106.439987, -62.599983, -1.099998, 91.600158, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(9044, 2357.771484, 568.305175, 93.274894, 0.000000, 0.000000, -161.699996, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19604, 2341.361816, 587.315673, 110.380134, 270.000000, 0.000000, 13.799999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(19604, 2341.361816, 587.315673, 100.390121, 270.000000, 0.000000, 13.799999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(6865, 2307.586669, 576.127929, 102.767272, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFA89277);
    tmpobjid = CreateDynamicObject(3048, 2316.061035, 576.270385, 105.030197, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    tmpobjid = CreateDynamicObject(749, 2351.446777, 578.076599, 103.973709, 24.800388, 83.199981, 9.299999, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(13635, 2332.668701, 570.828186, 98.570167, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    tmpobjid = CreateDynamicObject(13635, 2352.651123, 556.321289, 100.910636, 11.599992, 0.000000, 87.300033, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2357.997070, 573.900573, 103.834136, 174.900100, -94.700065, 4.899952, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(13635, 2324.298095, 554.304321, 98.669258, 11.599992, 0.000000, 267.300048, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    tmpobjid = CreateDynamicObject(13635, 2315.463867, 556.242309, 102.081817, 11.599992, 0.000000, 447.300048, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    tmpobjid = CreateDynamicObject(13635, 2317.299316, 594.218200, 101.805236, 7.699992, 0.000000, 627.300048, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    tmpobjid = CreateDynamicObject(13635, 2345.268554, 596.524291, 100.845359, 7.699992, 0.000000, 627.300048, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    tmpobjid = CreateDynamicObject(13635, 2359.818359, 595.838562, 101.099334, 7.699992, 0.000000, 627.300048, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    tmpobjid = CreateDynamicObject(897, 2319.979492, 579.872619, 95.283363, -18.100008, 0.000000, 44.199981, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(897, 2335.369873, 571.207275, 94.729057, -18.100008, 0.000000, 153.800018, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(19690, 2307.273925, 576.368408, 113.757972, 0.000000, -115.199996, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(749, 2307.406982, 565.310607, 98.014495, -25.599994, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(19464, 2308.831542, 570.121948, 115.468971, -13.400001, 10.499999, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(19379, 2302.821289, 582.967041, 104.940780, 0.000000, 90.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18232, "cw_truckstopcs_t", "des_adobewall3", 0xFFA18A70);
    tmpobjid = CreateDynamicObject(13646, 2307.824218, 576.388366, 104.927185, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 8397, "luxorpillar1", "luxorpillar01_128", 0xFFD6BDA1);
    SetDynamicObjectMaterial(tmpobjid, 1, 19527, "cauldron1", "alienliquid1", 0xFFFF0000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "h_\nN^", 10, "Wingdings", 20, 0, 0xFFFF0000, 0xFF202020, 0);
    tmpobjid = CreateDynamicObject(19885, 2305.395263, 579.365783, 99.824241, 0.000045, 0.000000, 89.999862, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18752, "volcano", "redgravel", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 1, 18752, "volcano", "redgravel", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 18752, "volcano", "redgravel", 0x00000000);
    tmpobjid = CreateDynamicObject(19885, 2365.383544, 579.365783, 99.824241, 0.000045, 0.000000, 89.999862, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 18752, "volcano", "redgravel", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 1, 18752, "volcano", "redgravel", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 18752, "volcano", "redgravel", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2326.729492, 578.588439, 99.867225, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2326.729492, 576.868225, 99.867225, -19.799995, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2337.980224, 573.717834, 99.867225, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2337.980224, 574.787963, 98.577232, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2334.949707, 565.227783, 96.917259, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2352.503906, 574.763854, 100.169876, 6.199997, -14.600004, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2352.529541, 576.866638, 98.780830, 0.000000, -17.100006, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2352.104492, 573.393920, 103.948074, 88.000015, 84.599929, -175.799942, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2344.445556, 573.604431, 103.598762, 6.699998, 83.199890, -178.899932, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2338.124023, 573.935424, 103.765586, 6.699998, 83.199890, -175.699935, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2333.034423, 574.687744, 103.917533, -16.100244, 275.899963, 9.300003, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2327.077636, 573.959594, 104.174690, -3.000364, -91.700035, -4.899998, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(749, 2319.802246, 574.096374, 103.973709, 24.800384, 83.199981, -170.699951, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2344.931152, 573.717834, 100.207244, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2336.427734, 575.758544, 100.207244, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2346.038574, 573.398071, 100.207244, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2346.712402, 573.668334, 103.823310, 0.000000, 81.100044, 360.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(750, 2349.384033, 573.498229, 104.191696, 0.000000, 81.100044, 360.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(6865, 2307.957031, 576.248046, 102.767272, 0.000000, 0.000007, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFA89277);
    tmpobjid = CreateDynamicObject(6865, 2307.957031, 576.428222, 102.767272, 0.000004, 0.000001, 135.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFA89277);
    tmpobjid = CreateDynamicObject(19464, 2307.857666, 568.799377, 107.558998, 90.000000, 0.000000, -3.499998, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(19464, 2308.123535, 583.862243, 107.558998, 90.000000, 0.000000, 176.500000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(19464, 2308.152832, 583.434509, 111.965103, 14.700012, 11.000001, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(9045, 2303.057617, 564.813720, 111.220458, 170.199920, -8.499999, -51.799983, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 4811, "beach_las", "lasclifface", 0x00000000);
    tmpobjid = CreateDynamicObject(898, 2303.303466, 564.998840, 109.554466, 0.000000, 11.899997, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(898, 2304.696289, 589.088439, 110.006919, -83.599990, 28.099998, 0.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFFFFFFF);
    tmpobjid = CreateDynamicObject(9831, 2303.893554, 564.206848, 99.337738, 0.000000, -1.099998, -87.699806, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(9831, 2306.651855, 568.780334, 99.252052, 0.000000, -1.099998, -87.699806, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 19267, "mapmarkers", "mapiconfire1", 0x00000000);
    tmpobjid = CreateDynamicObject(19719, 2309.312988, 576.388366, 102.817230, 0.000000, 90.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFA38C72);
    tmpobjid = CreateDynamicObject(19719, 2306.361328, 576.388366, 102.816230, 0.000000, 90.000000, 360.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 4811, "beach_las", "lasclifface", 0xFFA38C72);
    tmpobjid = CreateDynamicObject(749, 2322.057128, 573.269592, 99.289512, -20.199996, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
    SetDynamicObjectMaterial(tmpobjid, 0, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0xFFFFFFFF);
    SetDynamicObjectMaterial(tmpobjid, 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 4811, "beach_las", "lasclifface", 0x00000000);
  	CreateDynamicObject(6865, 2325.158935, 563.365539, 103.751152, -0.000011, -0.000001, -131.299942, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(19290, 2361.427246, 574.559814, 110.837165, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(19290, 2361.086914, 578.540161, 110.907104, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18741, 2307.826904, 576.296325, 103.930618, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2339.789550, 579.460205, 97.541175, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2329.617431, 585.600402, 97.541175, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2333.860839, 582.911193, 97.541175, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2323.436523, 581.861572, 97.541175, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2316.566650, 584.371948, 97.541175, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2314.285888, 580.831604, 97.541175, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2344.806152, 584.131896, 97.541175, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2354.328613, 585.901733, 97.541175, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2349.955566, 581.571655, 97.541175, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2335.645263, 590.411865, 97.541175, 0.000000, 0.000000, 179.999893, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2345.817382, 584.271667, 97.541175, 0.000000, 0.000000, 179.999893, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2341.573974, 586.960876, 97.541175, 0.000000, 0.000000, 179.999893, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2349.718261, 585.020263, 97.541175, 0.000000, 0.000000, 179.999893, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2359.939208, 583.550048, 97.541175, 0.000000, 0.000000, 179.999893, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2361.148925, 589.040466, 97.541175, 0.000000, 0.000000, 179.999893, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2330.628662, 585.740173, 97.541175, 0.000000, 0.000000, 179.999893, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2321.106201, 583.970336, 97.541175, 0.000000, 0.000000, 179.999893, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2325.479248, 588.300415, 97.541175, 0.000000, 0.000000, 179.999893, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2328.880371, 573.892761, 97.541175, 0.000000, -0.000007, 179.999847, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2339.052490, 567.752563, 97.541175, 0.000000, -0.000007, 179.999847, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2334.809082, 567.261718, 97.541175, 0.000000, -0.000007, 179.999847, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2345.233398, 571.491394, 97.541175, 0.000000, -0.000007, 179.999847, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2353.174316, 567.030944, 97.541175, 0.000000, -0.000007, 179.999847, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2354.384033, 572.521362, 97.541175, 0.000000, -0.000007, 179.999847, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2323.863769, 566.661071, 97.541175, 0.000000, -0.000007, 179.999847, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2314.341308, 567.451232, 97.541175, 0.000000, -0.000007, 179.999847, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2318.714355, 571.781311, 97.541175, 0.000000, -0.000007, 179.999847, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2332.598876, 566.080627, 97.541175, 0.000000, -0.000007, -0.000167, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2322.426757, 572.220825, 97.541175, 0.000000, -0.000007, -0.000167, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2326.670166, 569.531616, 97.541175, 0.000000, -0.000007, -0.000167, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2316.245849, 568.481994, 97.541175, 0.000000, -0.000007, -0.000167, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2308.304931, 572.942443, 97.541175, 0.000000, -0.000007, -0.000167, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2307.095214, 567.452026, 97.541175, 0.000000, -0.000007, -0.000167, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2337.615478, 570.752319, 97.541175, 0.000000, -0.000007, -0.000167, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2347.137939, 572.522155, 97.541175, 0.000000, -0.000007, -0.000167, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18692, 2342.764892, 568.192077, 97.541175, 0.000000, -0.000007, -0.000167, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18732, 2317.728027, 585.112792, 88.234481, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18732, 2332.837890, 585.112792, 88.234481, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18732, 2346.437988, 585.112792, 88.234481, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18732, 2358.858154, 585.112792, 88.234481, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18732, 2352.434814, 567.802612, 88.234481, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18732, 2337.182617, 567.802612, 88.234481, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
    CreateDynamicObject(18732, 2320.161621, 567.802612, 88.234481, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	
	return 1;
}

stock BoughtProperties()
{
	new s;
	for(new propid; propid < PropertiesAmount; propid++)
	{
		if(PropInfo[propid][PropIsBought] == 1) s++;
	}
	return s;
}
stock AddProperty(const name[],Value,Earn,Float:x,Float:y,Float:z)
{
	new propid = PropertiesAmount + 1;
	format(PropInfo[propid][PropName],64,"%s",name);
	PropInfo[propid][PropX] = x;
	PropInfo[propid][PropY] = y;
	PropInfo[propid][PropZ] = z;
	PropInfo[propid][PropIsBought] = 0;
	PropInfo[propid][PropUnbuyableTime] = 0;
	format(PropInfo[propid][PropOwner],10,"Nobody");
	PropInfo[propid][PropValue] = Value;
	PropInfo[propid][PropEarning] = Earn;
	PropInfo[propid][Buyable] = true;
	PropInfo[propid][PickupNr] = CreateDynamicPickup(1273, 1, PropInfo[propid][PropX], PropInfo[propid][PropY], PropInfo[propid][PropZ]);
    CreateDynamicMapIcon(PropInfo[propid][PropX], PropInfo[propid][PropY], PropInfo[propid][PropZ],31,COLOR_WHITE,0,0);
    PropertiesAmount++;
	new pstr[600],tmpv;
	if(PropInfo[propid][Buyable] == false) tmpv=0; else tmpv=1;
	format(pstr,sizeof pstr,"INSERT INTO `properties`(`propName`, `pX`, `pY`, `pZ`, `Value`, `Earning`, `Owner`, `IsBought`, `PropUnbuyableTime`, `IsBuyable`) VALUES ('%s',%.2f,%.2f,%.2f,%d,%d,'%s',%d,%d,%d)",PropInfo[propid][PropName],PropInfo[propid][PropX],PropInfo[propid][PropY],PropInfo[propid][PropZ],PropInfo[propid][PropValue],PropInfo[propid][PropEarning],PropInfo[propid][PropOwner],PropInfo[propid][PropIsBought],PropInfo[propid][PropUnbuyableTime],tmpv);
	mysql_query(SQL,pstr);
   // SaveProperties();
    return 1;
}


stock ConvertProperties()
{
	if(fexist("PropertySystem/PropertyInfo.txt"))
	{
		new entry[180], BoughtProps,tmpv;
		new File: propfile = fopen("PropertySystem/PropertyInfo.txt", io_read);
		new name[30],Float:x,Float:y,Float:z,value,earning;
		new poop[5];
	    if (propfile)
		{
		    for(new id; id<PropertiesAmount; id++)
			{
				fread(propfile, entry);
				sscanf(entry,"p<,>s[64]fffdds[24]ddd",PropInfo[id][PropName],PropInfo[id][PropX],PropInfo[id][PropY],PropInfo[id][PropZ],PropInfo[id][PropValue],PropInfo[id][PropEarning],PropInfo[id][PropOwner],PropInfo[id][PropIsBought],PropInfo[id][PropUnbuyableTime],tmpv);
    			AddProperty(PropInfo[id][PropName],value,earning,x,y,z);
			}
			printf("||    Created %d Properties     ||", PropertiesAmount);
		}
	}
}


stock LoadProperties()
{
	new BoughtProps;
	new tmp;
	mysql_query(SQL,"SELECT * FROM `properties`");
	if(cache_num_rows() > 0)
	{
	    new maxx = cache_num_rows();
	    PropertiesAmount = maxx;
	    for(new id; id<maxx; id++)
		{
			cache_get_value_name(id,"Owner",PropInfo[id][PropOwner]);
			cache_get_value_name(id,"propName",PropInfo[id][PropName]);
			cache_get_value_name_float(id,"pX",PropInfo[id][PropX]);
			cache_get_value_name_float(id,"pY",PropInfo[id][PropY]);
			cache_get_value_name_float(id,"pZ",PropInfo[id][PropZ]);
			cache_get_value_name_int(id,"Value",PropInfo[id][PropValue]);
			cache_get_value_name_int(id,"Earning",PropInfo[id][PropEarning]);
			cache_get_value_name_int(id,"IsBuyable",tmp);
			cache_get_value_name_int(id,"IsBought",PropInfo[id][PropIsBought]);
			cache_get_value_name_int(id,"PropUnbuyableTime",PropInfo[id][PropUnbuyableTime]);
			if(tmp == 0) PropInfo[id][Buyable] = false; else PropInfo[id][Buyable] = true;
	 		PropInfo[id][PickupNr] = CreateDynamicPickup(1273, 1, PropInfo[id][PropX], PropInfo[id][PropY], PropInfo[id][PropZ],0);
			if(PropInfo[id][PropIsBought] == 1)
			{
				PropInfo[id][PickupNr] = CreateDynamicPickup(19522, 1, PropInfo[id][PropX], PropInfo[id][PropY], PropInfo[id][PropZ],0);
				CreateDynamicMapIcon(PropInfo[id][PropX], PropInfo[id][PropY], PropInfo[id][PropZ],32,COLOR_WHITE,0,0);
	   			BoughtProps++;
			}
			else
			{
				PropInfo[id][PickupNr] = CreateDynamicPickup(19524, 1, PropInfo[id][PropX], PropInfo[id][PropY], PropInfo[id][PropZ],0);
				CreateDynamicMapIcon(PropInfo[id][PropX], PropInfo[id][PropY], PropInfo[id][PropZ],31,COLOR_WHITE,0,0);
				new pText[15];
				format(pText,sizeof pText,"$%d",PropInfo[id][PropValue]);
				PropInfo[id][propText] = CreateDynamic3DTextLabel(pText, COLOR_YELLOW,PropInfo[id][PropX], PropInfo[id][PropY], PropInfo[id][PropZ]+0.6,10);
			}
		}
	}

	//printf("loaded %d Properties!", id);
 	return PropertiesAmount;
}


stock BInt_PBuyable(id)
{
	if(PropInfo[id][Buyable] == false) return 0;
	return 1;
}


stock SaveProperties()
{
	CountProperties();
	for(new id; id<PropertiesAmount; id++)
	{
		//if(PropInfo[id][Buyable] == false) tmpv=0; else tmpv=1;
		format(xstring,sizeof xstring,"UPDATE `properties` SET `propName`='%s',`pX`='%f',`pY`='%f',`pZ`='%f',`Value`='%d',`Earning`='%d',`Owner`='%s',`IsBought`='%d',`PropUnbuyableTime`='15',`IsBuyable`='1' WHERE `PropName` = '%s'",PropInfo[id][PropName],PropInfo[id][PropX],PropInfo[id][PropY],PropInfo[id][PropZ],PropInfo[id][PropValue],PropInfo[id][PropEarning],PropInfo[id][PropOwner],PropInfo[id][PropIsBought],PropInfo[id][PropName]);
		mysql_query(SQL,xstring);
	}
	printf("Saved %d Properties!", PropertiesAmount);
}

stock CountProperties()
{

	mysql_query(SQL,"SELECT * FROM `properties`");
	PropertiesAmount=cache_num_rows();
}

forward IsPlayerNearProperty(playerid);
public IsPlayerNearProperty(playerid)
{
	for(new prop; prop<=PropertiesAmount; prop++)
	{
		if(GetDistanceToProperty(playerid, prop) <= 5)
		{
			return prop;
		}

	}
	return -1;
}

IsPlayerInDeliveryVehicle(playerid)
{
	for(new x = 0; x<=sizeof(dVehicles); x++)
	{
		if(IsPlayerInVehicle(playerid,dVehicles[x])) return true;
	}
	return false;
}